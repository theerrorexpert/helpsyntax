LIST-LICENSE-CONFIGURATIONS()                    LIST-LICENSE-CONFIGURATIONS()



NAME
       list-license-configurations -

DESCRIPTION
       Lists the license configurations for your account.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       list-license-configurations  is  a  paginated  operation.  Multiple API
       calls may be issued in  order  to  retrieve  the  entire  data  set  of
       results.  You  can  disable  pagination  by providing the --no-paginate
       argument.  When using --output text and the --query argument on a pagi-
       nated response, the --query argument must extract data from the results
       of the following query expressions: LicenseConfigurations

SYNOPSIS
            list-license-configurations
          [--license-configuration-arns <value>]
          [--filters <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --license-configuration-arns (list)
          Amazon Resource Names (ARN) of the license configurations.

          (string)

       Syntax:

          "string" "string" ...

       --filters (list)
          Filters to scope the results.  The  following  filters  and  logical
          operators are supported:

          o licenseCountingType   -  The  dimension  for  which  licenses  are
            counted. Possible values are vCPU | Instance |  Core  |  Socket  .
            Logical operators are EQUALS | NOT_EQUALS .

          o enforceLicenseCount  - A Boolean value that indicates whether hard
            license enforcement  is  used.  Logical  operators  are  EQUALS  |
            NOT_EQUALS .

          o usagelimitExceeded  -  A  Boolean value that indicates whether the
            available licenses  have  been  exceeded.  Logical  operators  are
            EQUALS | NOT_EQUALS .

          (structure)
              A  filter  name  and value pair that is used to return more spe-
              cific results from a describe operation. Filters can be used  to
              match  a  set  of  resources by specific criteria, such as tags,
              attributes, or IDs.

              Name -> (string)
                 Name of the filter. Filter names are case-sensitive.

              Values -> (list)
                 Filter values. Filter values are case-sensitive.

                 (string)

       Shorthand Syntax:

          Name=string,Values=string,string ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Values": ["string", ...]
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --starting-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The size of each page to get in the AWS service call. This does  not
          affect the number of items returned in the command's output. Setting
          a smaller page size results  in  more  calls  to  the  AWS  service,
          retrieving  fewer  items in each call. This can help prevent the AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To list all of your license configurations

       The   following  list-license-configurations  example  lists  all  your
       license configurations.

          aws license-manager list-license-configurations

       Output:

          {
              "LicenseConfigurations": [
                  {
                      "LicenseConfigurationId": "lic-6eb6586f508a786a2ba4f56c1EXAMPLE",
                      "LicenseConfigurationArn": "arn:aws:license-manager:us-west-2:123456789012:license-configuration:lic-6eb6586f508a786a2ba4f56c1EXAMPLE",
                      "Name": "my-license-configuration",
                      "LicenseCountingType": "Core",
                      "LicenseRules": [],
                      "LicenseCount": 10,
                      "LicenseCountHardLimit": true,
                      "ConsumedLicenses": 0,
                      "Status": "AVAILABLE",
                      "OwnerAccountId": "123456789012",
                      "ConsumedLicenseSummaryList": [
                          {
                              "ResourceType": "EC2_INSTANCE",
                              "ConsumedLicenses": 0
                          },
                          {
                              "ResourceType": "EC2_HOST",
                              "ConsumedLicenses": 0
                          },
                          {
                              "ResourceType": "SYSTEMS_MANAGER_MANAGED_INSTANCE",
                              "ConsumedLicenses": 0
                          }
                      ],
                      "ManagedResourceSummaryList": [
                          {
                              "ResourceType": "EC2_INSTANCE",
                              "AssociationCount": 0
                          },
                          {
                              "ResourceType": "EC2_HOST",
                              "AssociationCount": 0
                          },
                          {
                              "ResourceType": "EC2_AMI",
                              "AssociationCount": 0
                          },
                          {
                              "ResourceType": "SYSTEMS_MANAGER_MANAGED_INSTANCE",
                              "AssociationCount": 0
                          }
                      ]
                  },
                  {
                      ...
                  }
              ]
          }

       Example 2: To list a specific license configuration

       The following list-license-configurations example lists only the speci-
       fied license configuration.

          aws license-manager list-license-configurations \
              --license-configuration-arns arn:aws:license-manager:us-west-2:123456789012:license-configuration:lic-38b658717b87478aaa7c00883EXAMPLE

OUTPUT
       LicenseConfigurations -> (list)
          Information about the license configurations.

          (structure)
              A  license configuration is an abstraction of a customer license
              agreement that can be consumed and enforced by License  Manager.
              Components  include specifications for the license type (licens-
              ing by instance, socket, CPU, or vCPU), allowed tenancy  (shared
              tenancy,  Dedicated  Instance, Dedicated Host, or all of these),
              host affinity (how long a VM must be associated  with  a  host),
              and the number of licenses purchased and used.

              LicenseConfigurationId -> (string)
                 Unique ID of the license configuration.

              LicenseConfigurationArn -> (string)
                 Amazon Resource Name (ARN) of the license configuration.

              Name -> (string)
                 Name of the license configuration.

              Description -> (string)
                 Description of the license configuration.

              LicenseCountingType -> (string)
                 Dimension to use to track the license inventory.

              LicenseRules -> (list)
                 License rules.

                 (string)

              LicenseCount -> (long)
                 Number of licenses managed by the license configuration.

              LicenseCountHardLimit -> (boolean)
                 Number of available licenses as a hard limit.

              DisassociateWhenNotFound -> (boolean)
                 When  true,  disassociates  a resource when software is unin-
                 stalled.

              ConsumedLicenses -> (long)
                 Number of licenses consumed.

              Status -> (string)
                 Status of the license configuration.

              OwnerAccountId -> (string)
                 Account ID of the license configuration's owner.

              ConsumedLicenseSummaryList -> (list)
                 Summaries for licenses consumed by various resources.

                 (structure)
                     Details about license consumption.

                     ResourceType -> (string)
                        Resource type of the resource consuming a license.

                     ConsumedLicenses -> (long)
                        Number of licenses consumed by the resource.

              ManagedResourceSummaryList -> (list)
                 Summaries for managed resources.

                 (structure)
                     Summary information about a managed resource.

                     ResourceType -> (string)
                        Type of resource associated with a license.

                     AssociationCount -> (long)
                        Number of resources associated with licenses.

              ProductInformationList -> (list)
                 Product information.

                 (structure)
                     Describes product information for  a  license  configura-
                     tion.

                     ResourceType -> (string)
                        Resource  type.  The possible values are SSM_MANAGED |
                        RDS .

                     ProductInformationFilterList -> (list)
                        A Product information filter consists of a  ProductIn-
                        formationFilterComparator which is a logical operator,
                        a  ProductInformationFilterName  which  specifies  the
                        type  of  filter being declared, and a ProductInforma-
                        tionFilterValue that specifies the value to filter on.

                        Accepted  values  for ProductInformationFilterName are
                        listed here along with descriptions and valid  options
                        for ProductInformationFilterComparator .

                        The  following  filters  and  are  supported  when the
                        resource type is SSM_MANAGED :

                        o Application Name - The name of the application. Log-
                          ical operator is EQUALS .

                        o Application  Publisher - The publisher of the appli-
                          cation. Logical operator is EQUALS .

                        o Application Version - The version  of  the  applica-
                          tion. Logical operator is EQUALS .

                        o Platform  Name  -  The name of the platform. Logical
                          operator is EQUALS .

                        o Platform Type - The platform type. Logical  operator
                          is EQUALS .

                        o Tag:key - The key of a tag attached to an Amazon Web
                          Services resource you wish to exclude from automated
                          discovery.  Logical operator is NOT_EQUALS . The key
                          for your tag must be appended to Tag: following  the
                          example:  Tag:name-of-your-key . ProductInformation-
                          FilterValue is optional if you are not using  values
                          for the key.

                        o AccountId  -  The  12-digit ID of an Amazon Web Ser-
                          vices account you wish  to  exclude  from  automated
                          discovery. Logical operator is NOT_EQUALS .

                        o License  Included  -  The  type of license included.
                          Logical operators are EQUALS and NOT_EQUALS . Possi-
                          ble     values    are:    sql-server-enterprise    |
                          sql-server-standard   |   sql-server-web   |    win-
                          dows-server-datacenter .

                        The  following  filters and logical operators are sup-
                        ported when the resource type is RDS :

                        o Engine Edition - The edition of the database engine.
                          Logical  operator  is  EQUALS . Possible values are:
                          oracle-ee | oracle-se | oracle-se1 | oracle-se2 .

                        o License Pack - The license pack. Logical operator is
                          EQUALS  . Possible values are: data guard | diagnos-
                          tic pack sqlt | tuning pack sqlt | ols | olap .

                        (structure)
                            Describes product information filters.

                            ProductInformationFilterName -> (string)
                               Filter name.

                            ProductInformationFilterValue -> (list)
                               Filter value.

                               (string)

                            ProductInformationFilterComparator -> (string)
                               Logical operator.

              AutomatedDiscoveryInformation -> (structure)
                 Automated discovery information.

                 LastRunTime -> (timestamp)
                     Time that automated discovery last ran.

       NextToken -> (string)
          Token for the next set of results.



                                                 LIST-LICENSE-CONFIGURATIONS()
