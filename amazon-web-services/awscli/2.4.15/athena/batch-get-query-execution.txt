BATCH-GET-QUERY-EXECUTION()                        BATCH-GET-QUERY-EXECUTION()



NAME
       batch-get-query-execution -

DESCRIPTION
       Returns  the  details of a single query execution or a list of up to 50
       query executions, which you provide as an array of query  execution  ID
       strings.  Requires  you  to  have  access to the workgroup in which the
       queries ran. To get a list of query execution IDs, use  ListQueryExecu-
       tionsInput$WorkGroup  .  Query  executions  differ  from  named (saved)
       queries.  Use   BatchGetNamedQueryInput  to  get  details  about  named
       queries.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            batch-get-query-execution
          --query-execution-ids <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --query-execution-ids (list)
          An array of query execution IDs.

          (string)

       Syntax:

          "string" "string" ...

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To return information about one or more query executions

       The following batch-get-query-execution example returns query execution
       information for the queries that have the specified query IDs.

          aws athena batch-get-query-execution \
              --query-execution-ids a1b2c3d4-5678-90ab-cdef-EXAMPLE11111 a1b2c3d4-5678-90ab-cdef-EXAMPLE22222

       Output:

          {
              "QueryExecutions": [
                  {
                      "QueryExecutionId": "a1b2c3d4-5678-90ab-cdef-EXAMPLE11111",
                      "Query": "create database if not exists webdata",
                      "StatementType": "DDL",
                      "ResultConfiguration": {
                          "OutputLocation": "s3://awsdoc-example-bucket/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111.txt"
                      },
                      "QueryExecutionContext": {},
                      "Status": {
                          "State": "SUCCEEDED",
                          "SubmissionDateTime": 1593470720.592,
                          "CompletionDateTime": 1593470720.902
                      },
                      "Statistics": {
                          "EngineExecutionTimeInMillis": 232,
                          "DataScannedInBytes": 0,
                          "TotalExecutionTimeInMillis": 310,
                      "ResultConfiguration": {

                          "QueryQueueTimeInMillis": 50,
                          "ServiceProcessingTimeInMillis": 28
                      },
                      "WorkGroup": "AthenaAdmin"
                  },
                  {
                      "QueryExecutionId": "a1b2c3d4-5678-90ab-cdef-EXAMPLE22222",
                      "Query": "select date, location, browser, uri, status from cloudfront_logs where method = 'GET' and status = 200 and location like 'SFO%' limit 10",
                      "StatementType": "DML",
                      "ResultConfiguration": {
                          "OutputLocation": "s3://awsdoc-example-bucket/a1b2c3d4-5678-90ab-cdef-EXAMPLE22222.csv"
                      },
                      "QueryExecutionContext": {
                          "Database": "mydatabase",
                          "Catalog": "awsdatacatalog"
                      },
                      "Status": {
                          "State": "SUCCEEDED",
                          "SubmissionDateTime": 1593469842.665,
                          "CompletionDateTime": 1593469846.486
                      },
                      "Statistics": {
                          "EngineExecutionTimeInMillis": 3600,
                          "DataScannedInBytes": 203089,
                          "TotalExecutionTimeInMillis": 3821,
                          "QueryQueueTimeInMillis": 267,
                          "QueryPlanningTimeInMillis": 1175
                      },
                      "WorkGroup": "AthenaAdmin"
                  }
              ],
              "UnprocessedQueryExecutionIds": []
          }

       For more information, see Running SQL Queries Using  Amazon  Athena  in
       the Amazon Athena User Guide.

OUTPUT
       QueryExecutions -> (list)
          Information about a query execution.

          (structure)
              Information about a single instance of a query execution.

              QueryExecutionId -> (string)
                 The unique identifier for each query execution.

              Query -> (string)
                 The SQL query statements which the query execution ran.

              StatementType -> (string)
                 The  type  of query statement that was run. DDL indicates DDL
                 query statements. DML indicates DML (Data  Manipulation  Lan-
                 guage)  query  statements,  such  as CREATE TABLE AS SELECT .
                 UTILITY indicates query statements other than  DDL  and  DML,
                 such as SHOW CREATE TABLE , or DESCRIBE TABLE .

              ResultConfiguration -> (structure)
                 The location in Amazon S3 where query results were stored and
                 the encryption option, if any, used for query results.  These
                 are  known  as  "client-side settings". If workgroup settings
                 override client-side settings, then the query uses the  loca-
                 tion  for  the query results and the encryption configuration
                 that are specified for the workgroup.

                 OutputLocation -> (string)
                     The location in Amazon S3 where your  query  results  are
                     stored,  such  as s3://path/to/query/bucket/ . To run the
                     query, you must specify the query results location  using
                     one  of  the  ways:  either  for individual queries using
                     either this setting (client-side), or in  the  workgroup,
                     using   WorkGroupConfiguration  . If none of them is set,
                     Athena issues an error that no output  location  is  pro-
                     vided. For more information, see Query Results . If work-
                     group settings override client-side  settings,  then  the
                     query  uses the settings specified for the workgroup. See
                     WorkGroupConfiguration$EnforceWorkGroupConfiguration .

                 EncryptionConfiguration -> (structure)
                     If query results are encrypted in  Amazon  S3,  indicates
                     the  encryption  option  used  (for  example,  SSE-KMS or
                     CSE-KMS ) and key information. This is a client-side set-
                     ting.  If  workgroup  settings  override client-side set-
                     tings, then the query uses the  encryption  configuration
                     that  is  specified  for the workgroup, and also uses the
                     location for storing query results specified in the work-
                     group.  See   WorkGroupConfiguration$EnforceWorkGroupCon-
                     figuration and Workgroup  Settings  Override  Client-Side
                     Settings .

                     EncryptionOption -> (string)
                        Indicates  whether  Amazon  S3  server-side encryption
                        with Amazon S3-managed  keys  (SSE-S3  ),  server-side
                        encryption   with  KMS-managed  keys  (SSE-KMS  ),  or
                        client-side encryption with KMS-managed keys (CSE-KMS)
                        is used.

                        If a query runs in a workgroup and the workgroup over-
                        rides client-side settings, then the workgroup's  set-
                        ting  for  encryption  is  used.  It specifies whether
                        query results must be encrypted, for all queries  that
                        run in this workgroup.

                     KmsKey -> (string)
                        For  SSE-KMS  and CSE-KMS , this is the KMS key ARN or
                        ID.

              QueryExecutionContext -> (structure)
                 The database in which the query execution occurred.

                 Database -> (string)
                     The name of the database used in the query execution. The
                     database must exist in the catalog.

                 Catalog -> (string)
                     The name of the data catalog used in the query execution.

              Status -> (structure)
                 The completion date,  current  state,  submission  time,  and
                 state  change reason (if applicable) for the query execution.

                 State -> (string)
                     The state of query execution. QUEUED indicates  that  the
                     query  has been submitted to the service, and Athena will
                     execute the query as soon  as  resources  are  available.
                     RUNNING  indicates  that the query is in execution phase.
                     SUCCEEDED indicates  that  the  query  completed  without
                     errors.  FAILED  indicates  that the query experienced an
                     error and did not complete  processing.  CANCELLED  indi-
                     cates that a user input interrupted query execution.

                     NOTE:
                        Athena  automatically retries your queries in cases of
                        certain transient errors. As a result, you may see the
                        query  state  transition  from  RUNNING  or  FAILED to
                        QUEUED .

                 StateChangeReason -> (string)
                     Further detail about the status of the query.

                 SubmissionDateTime -> (timestamp)
                     The date and time that the query was submitted.

                 CompletionDateTime -> (timestamp)
                     The date and time that the query completed.

              Statistics -> (structure)
                 Query execution  statistics,  such  as  the  amount  of  data
                 scanned,  the  amount of time that the query took to process,
                 and the type of statement that was run.

                 EngineExecutionTimeInMillis -> (long)
                     The number of milliseconds that the query  took  to  exe-
                     cute.

                 DataScannedInBytes -> (long)
                     The number of bytes in the data that was queried.

                 DataManifestLocation -> (string)
                     The  location  and file name of a data manifest file. The
                     manifest file is saved to the Athena query results  loca-
                     tion  in  Amazon  S3. The manifest file tracks files that
                     the query wrote to Amazon S3. If  the  query  fails,  the
                     manifest  file  also tracks files that the query intended
                     to write. The manifest is useful for identifying orphaned
                     files  resulting  from  a failed query. For more informa-
                     tion, see Working with Query Results, Output  Files,  and
                     Query History in the Amazon Athena User Guide .

                 TotalExecutionTimeInMillis -> (long)
                     The  number  of  milliseconds that Athena took to run the
                     query.

                 QueryQueueTimeInMillis -> (long)
                     The number of milliseconds that the  query  was  in  your
                     query queue waiting for resources. Note that if transient
                     errors occur, Athena might automatically  add  the  query
                     back to the queue.

                 QueryPlanningTimeInMillis -> (long)
                     The  number  of milliseconds that Athena took to plan the
                     query processing  flow.  This  includes  the  time  spent
                     retrieving  table  partitions  from the data source. Note
                     that because the query engine performs  the  query  plan-
                     ning,  query planning time is a subset of engine process-
                     ing time.

                 ServiceProcessingTimeInMillis -> (long)
                     The number of milliseconds that Athena took  to  finalize
                     and publish the query results after the query engine fin-
                     ished running the query.

              WorkGroup -> (string)
                 The name of the workgroup in which the query ran.

              EngineVersion -> (structure)
                 The engine version that executed the query.

                 SelectedEngineVersion -> (string)
                     The engine version requested by the user. Possible values
                     are  determined  by  the  output  of ListEngineVersions ,
                     including Auto. The default is Auto.

                 EffectiveEngineVersion -> (string)
                     Read only. The engine version on which the query runs. If
                     the user requests a valid engine version other than Auto,
                     the effective engine version is the same  as  the  engine
                     version  that  the  user  requested. If the user requests
                     Auto, the effective engine version is chosen  by  Athena.
                     When  a request to update the engine version is made by a
                     CreateWorkGroup or UpdateWorkGroup operation, the  Effec-
                     tiveEngineVersion field is ignored.

       UnprocessedQueryExecutionIds -> (list)
          Information about the query executions that failed to run.

          (structure)
              Describes a query execution that failed to process.

              QueryExecutionId -> (string)
                 The unique identifier of the query execution.

              ErrorCode -> (string)
                 The  error  code  returned when the query execution failed to
                 process, if applicable.

              ErrorMessage -> (string)
                 The error message returned when the query execution failed to
                 process, if applicable.



                                                   BATCH-GET-QUERY-EXECUTION()
