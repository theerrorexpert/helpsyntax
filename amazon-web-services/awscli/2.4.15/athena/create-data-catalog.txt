CREATE-DATA-CATALOG()                                    CREATE-DATA-CATALOG()



NAME
       create-data-catalog -

DESCRIPTION
       Creates  (registers) a data catalog with the specified name and proper-
       ties. Catalogs created are visible to all users of the same Amazon  Web
       Services account.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-data-catalog
          --name <value>
          --type <value>
          [--description <value>]
          [--parameters <value>]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --name (string)
          The  name  of  the  data catalog to create. The catalog name must be
          unique for the Amazon Web Services account and can use a maximum  of
          128 alphanumeric, underscore, at sign, or hyphen characters.

       --type (string)
          The  type of data catalog to create: LAMBDA for a federated catalog,
          HIVE for an external hive metastore, or GLUE for an Glue Data  Cata-
          log.

          Possible values:

          o LAMBDA

          o GLUE

          o HIVE

       --description (string)
          A description of the data catalog to be created.

       --parameters (map)
          Specifies  the  Lambda function or functions to use for creating the
          data catalog. This is a mapping whose values depend on  the  catalog
          type.

          o For  the  HIVE  data  catalog  type, use the following syntax. The
            metadata-function parameter is required. The sdk-version parameter
            is optional and defaults to the currently supported version.
            ``
            metadata-function=*lambda_arn* , sdk-version=*version_number* ``

          o For the LAMBDA data catalog type, use one of the following sets of
            required parameters, but not both.

            o If you have one Lambda  function  that  processes  metadata  and
              another  for  reading the actual data, use the following syntax.
              Both parameters are required.
              ``
              metadata-function=*lambda_arn* , record-function=*lambda_arn* ``

            o If  you  have  a  composite  Lambda function that processes both
              metadata and data, use the  following  syntax  to  specify  your
              Lambda function.
              ``
              function=*lambda_arn* ``

          o The GLUE type takes a catalog ID parameter and is required. The ``
            catalog_id `` is the account ID of the Amazon Web Services account
            to which the Glue Data Catalog belongs.
            ``
            catalog-id=*catalog_id* ``

            o The  GLUE data catalog type also applies to the default AwsData-
              Catalog that already exists in your account, of  which  you  can
              have only one and cannot modify.

            o Queries  that specify a Glue Data Catalog other than the default
              AwsDataCatalog must be run on Athena engine version 2.

            o In Regions where Athena engine version 2 is not available,  cre-
              ating  new Glue data catalogs results in an INVALID_INPUT error.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --tags (list)
          A list of comma separated tags to add to the data  catalog  that  is
          created.

          (structure)
              A label that you assign to a resource. In Athena, a resource can
              be a workgroup or data catalog. Each tag consists of a  key  and
              an  optional  value,  both of which you define. For example, you
              can use tags to categorize Athena workgroups or data catalogs by
              purpose, owner, or environment. Use a consistent set of tag keys
              to make it easier to search and filter workgroups or data  cata-
              logs in your account. For best practices, see Tagging Best Prac-
              tices . Tag keys can be from 1 to 128 UTF-8 Unicode  characters,
              and  tag  values  can be from 0 to 256 UTF-8 Unicode characters.
              Tags can use letters and numbers representable in UTF-8, and the
              following  characters:  + - = . _ : / @. Tag keys and values are
              case-sensitive. Tag keys must be unique  per  resource.  If  you
              specify more than one tag, separate them by commas.

              Key -> (string)
                 A  tag key. The tag key length is from 1 to 128 Unicode char-
                 acters in UTF-8. You  can  use  letters  and  numbers  repre-
                 sentable  in UTF-8, and the following characters: + - = . _ :
                 / @. Tag keys are  case-sensitive  and  must  be  unique  per
                 resource.

              Value -> (string)
                 A  tag  value.  The tag value length is from 0 to 256 Unicode
                 characters in UTF-8. You can use letters and  numbers  repre-
                 sentable  in UTF-8, and the following characters: + - = . _ :
                 / @. Tag values are case-sensitive.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a data catalog

       The following create-data-catalog example creates the dynamo_db_catalog
       data catalog.

          aws athena create-data-catalog \
              --name dynamo_db_catalog \
              --type LAMBDA \
              --description "DynamoDB Catalog" \
              --parameters function=arn:aws:lambda:us-west-2:111122223333:function:dynamo_db_lambda

       This  command  produces  no  output.  To see the result, use aws athena
       get-data-catalog --name dynamo_db_catalog.

       For more information, see Registering a Catalog: create-data-catalog in
       the Amazon Athena User Guide.

OUTPUT
       None



                                                         CREATE-DATA-CATALOG()
