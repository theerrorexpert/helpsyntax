GET-QUERY-EXECUTION()                                    GET-QUERY-EXECUTION()



NAME
       get-query-execution -

DESCRIPTION
       Returns  information  about  a  single execution of a query if you have
       access to the workgroup in which the query ran. Each time a query  exe-
       cutes, information about the query execution is saved with a unique ID.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-query-execution
          --query-execution-id <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --query-execution-id (string)
          The unique ID of the query execution.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To return information about a query execution

       The following get-query-execution example returns information about the
       query that has the specified query ID.

          aws athena get-query-execution \
              --query-execution-id a1b2c3d4-5678-90ab-cdef-EXAMPLE11111

       Output:

          {
              "QueryExecution": {
                  "QueryExecutionId": "a1b2c3d4-5678-90ab-cdef-EXAMPLE11111",
                  "Query": "select date, location, browser, uri, status from cloudfront_logs where method = 'GET
          ' and status = 200 and location like 'SFO%' limit 10",
                  "StatementType": "DML",
                  "ResultConfiguration": {
                      "OutputLocation": "s3://awsdoc-example-bucket/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111.csv"
                  },
                  "QueryExecutionContext": {
                      "Database": "mydatabase",
                      "Catalog": "awsdatacatalog"
                  },
                  "Status": {
                      "State": "SUCCEEDED",
                      "SubmissionDateTime": 1593469842.665,
                      "CompletionDateTime": 1593469846.486
                  },
                  "Statistics": {
                      "EngineExecutionTimeInMillis": 3600,
                      "DataScannedInBytes": 203089,
                      "TotalExecutionTimeInMillis": 3821,
                      "QueryQueueTimeInMillis": 267,
                      "QueryPlanningTimeInMillis": 1175
                  },
                  "WorkGroup": "AthenaAdmin"
              }
          }

       For  more  information,  see Running SQL Queries Using Amazon Athena in
       the Amazon Athena User Guide.

OUTPUT
       QueryExecution -> (structure)
          Information about the query execution.

          QueryExecutionId -> (string)
              The unique identifier for each query execution.

          Query -> (string)
              The SQL query statements which the query execution ran.

          StatementType -> (string)
              The type of query statement that  was  run.  DDL  indicates  DDL
              query statements. DML indicates DML (Data Manipulation Language)
              query statements, such as CREATE TABLE AS SELECT . UTILITY indi-
              cates query statements other than DDL and DML, such as SHOW CRE-
              ATE TABLE , or DESCRIBE TABLE .

          ResultConfiguration -> (structure)
              The location in Amazon S3 where query results  were  stored  and
              the encryption option, if any, used for query results. These are
              known as "client-side settings". If workgroup settings  override
              client-side  settings,  then the query uses the location for the
              query results and the encryption configuration that  are  speci-
              fied for the workgroup.

              OutputLocation -> (string)
                 The  location  in  Amazon  S3  where  your  query results are
                 stored, such  as  s3://path/to/query/bucket/  .  To  run  the
                 query,  you must specify the query results location using one
                 of the ways: either for individual queries using either  this
                 setting (client-side), or in the workgroup, using  WorkGroup-
                 Configuration . If none of them  is  set,  Athena  issues  an
                 error  that no output location is provided. For more informa-
                 tion, see Query Results  .  If  workgroup  settings  override
                 client-side settings, then the query uses the settings speci-
                 fied for the workgroup. See   WorkGroupConfiguration$Enforce-
                 WorkGroupConfiguration .

              EncryptionConfiguration -> (structure)
                 If  query  results  are encrypted in Amazon S3, indicates the
                 encryption option used (for example, SSE-KMS or CSE-KMS ) and
                 key  information. This is a client-side setting. If workgroup
                 settings override client-side settings, then the  query  uses
                 the  encryption configuration that is specified for the work-
                 group, and also uses the location for storing  query  results
                 specified   in   the   workgroup.   See   WorkGroupConfigura-
                 tion$EnforceWorkGroupConfiguration  and  Workgroup   Settings
                 Override Client-Side Settings .

                 EncryptionOption -> (string)
                     Indicates  whether  Amazon S3 server-side encryption with
                     Amazon S3-managed keys (SSE-S3 ), server-side  encryption
                     with  KMS-managed keys (SSE-KMS ), or client-side encryp-
                     tion with KMS-managed keys (CSE-KMS) is used.

                     If a query runs in a workgroup and  the  workgroup  over-
                     rides  client-side settings, then the workgroup's setting
                     for  encryption  is  used.  It  specifies  whether  query
                     results  must  be  encrypted, for all queries that run in
                     this workgroup.

                 KmsKey -> (string)
                     For SSE-KMS and CSE-KMS , this is the KMS key ARN or  ID.

          QueryExecutionContext -> (structure)
              The database in which the query execution occurred.

              Database -> (string)
                 The  name  of  the  database used in the query execution. The
                 database must exist in the catalog.

              Catalog -> (string)
                 The name of the data catalog used in the query execution.

          Status -> (structure)
              The completion date, current state, submission time,  and  state
              change reason (if applicable) for the query execution.

              State -> (string)
                 The state of query execution. QUEUED indicates that the query
                 has been submitted to the service, and  Athena  will  execute
                 the  query  as soon as resources are available. RUNNING indi-
                 cates that the query is in execution phase.  SUCCEEDED  indi-
                 cates  that  the query completed without errors. FAILED indi-
                 cates that the query experienced an error and  did  not  com-
                 plete  processing.  CANCELLED  indicates  that  a  user input
                 interrupted query execution.

                 NOTE:
                     Athena automatically retries your  queries  in  cases  of
                     certain  transient  errors.  As a result, you may see the
                     query state transition from RUNNING or FAILED to QUEUED .

              StateChangeReason -> (string)
                 Further detail about the status of the query.

              SubmissionDateTime -> (timestamp)
                 The date and time that the query was submitted.

              CompletionDateTime -> (timestamp)
                 The date and time that the query completed.

          Statistics -> (structure)
              Query  execution statistics, such as the amount of data scanned,
              the amount of time that the query took to process, and the  type
              of statement that was run.

              EngineExecutionTimeInMillis -> (long)
                 The number of milliseconds that the query took to execute.

              DataScannedInBytes -> (long)
                 The number of bytes in the data that was queried.

              DataManifestLocation -> (string)
                 The location and file name of a data manifest file. The mani-
                 fest file is saved to the Athena query  results  location  in
                 Amazon  S3.  The  manifest  file  tracks files that the query
                 wrote to Amazon S3. If the query  fails,  the  manifest  file
                 also tracks files that the query intended to write. The mani-
                 fest is useful for identifying orphaned files resulting  from
                 a  failed query. For more information, see Working with Query
                 Results, Output Files, and Query History in the Amazon Athena
                 User Guide .

              TotalExecutionTimeInMillis -> (long)
                 The number of milliseconds that Athena took to run the query.

              QueryQueueTimeInMillis -> (long)
                 The number of milliseconds that the query was in  your  query
                 queue  waiting  for  resources. Note that if transient errors
                 occur, Athena might automatically add the query back  to  the
                 queue.

              QueryPlanningTimeInMillis -> (long)
                 The number of milliseconds that Athena took to plan the query
                 processing flow. This includes the time spent retrieving  ta-
                 ble  partitions  from  the data source. Note that because the
                 query engine performs the query planning, query planning time
                 is a subset of engine processing time.

              ServiceProcessingTimeInMillis -> (long)
                 The  number  of milliseconds that Athena took to finalize and
                 publish the query results after  the  query  engine  finished
                 running the query.

          WorkGroup -> (string)
              The name of the workgroup in which the query ran.

          EngineVersion -> (structure)
              The engine version that executed the query.

              SelectedEngineVersion -> (string)
                 The engine version requested by the user. Possible values are
                 determined by the output of  ListEngineVersions  ,  including
                 Auto. The default is Auto.

              EffectiveEngineVersion -> (string)
                 Read only. The engine version on which the query runs. If the
                 user requests a valid engine version  other  than  Auto,  the
                 effective  engine  version  is the same as the engine version
                 that the user requested.  If  the  user  requests  Auto,  the
                 effective  engine version is chosen by Athena. When a request
                 to update the engine version is made by a CreateWorkGroup  or
                 UpdateWorkGroup  operation,  the EffectiveEngineVersion field
                 is ignored.



                                                         GET-QUERY-EXECUTION()
