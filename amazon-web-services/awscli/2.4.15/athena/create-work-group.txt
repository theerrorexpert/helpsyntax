CREATE-WORK-GROUP()                                        CREATE-WORK-GROUP()



NAME
       create-work-group -

DESCRIPTION
       Creates a workgroup with the specified name.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-work-group
          --name <value>
          [--configuration <value>]
          [--description <value>]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --name (string)
          The workgroup name.

       --configuration (structure)
          The  configuration for the workgroup, which includes the location in
          Amazon S3 where query results are stored, the encryption  configura-
          tion,  if any, used for encrypting query results, whether the Amazon
          CloudWatch Metrics are enabled for the workgroup, the limit for  the
          amount  of bytes scanned (cutoff) per query, if it is specified, and
          whether workgroup's settings (specified with EnforceWorkGroupConfig-
          uration  )  in  the WorkGroupConfiguration override client-side set-
          tings. See  WorkGroupConfiguration$EnforceWorkGroupConfiguration .

          ResultConfiguration -> (structure)
              The configuration for the workgroup, which includes the location
              in  Amazon  S3 where query results are stored and the encryption
              option, if any, used for query results. To run  the  query,  you
              must  specify  the query results location using one of the ways:
              either in the workgroup using this setting,  or  for  individual
              queries (client-side), using  ResultConfiguration$OutputLocation
              . If none of them is set, Athena issues an error that no  output
              location  is provided. For more information, see Query Results .

              OutputLocation -> (string)
                 The location in  Amazon  S3  where  your  query  results  are
                 stored,  such  as  s3://path/to/query/bucket/  .  To  run the
                 query, you must specify the query results location using  one
                 of  the ways: either for individual queries using either this
                 setting (client-side), or in the workgroup, using  WorkGroup-
                 Configuration  .  If  none  of  them is set, Athena issues an
                 error that no output location is provided. For more  informa-
                 tion,  see  Query  Results  .  If workgroup settings override
                 client-side settings, then the query uses the settings speci-
                 fied  for the workgroup. See  WorkGroupConfiguration$Enforce-
                 WorkGroupConfiguration .

              EncryptionConfiguration -> (structure)
                 If query results are encrypted in Amazon  S3,  indicates  the
                 encryption option used (for example, SSE-KMS or CSE-KMS ) and
                 key information. This is a client-side setting. If  workgroup
                 settings  override  client-side settings, then the query uses
                 the encryption configuration that is specified for the  work-
                 group,  and  also uses the location for storing query results
                 specified  in   the   workgroup.   See    WorkGroupConfigura-
                 tion$EnforceWorkGroupConfiguration   and  Workgroup  Settings
                 Override Client-Side Settings .

                 EncryptionOption -> (string)
                     Indicates whether Amazon S3 server-side  encryption  with
                     Amazon  S3-managed keys (SSE-S3 ), server-side encryption
                     with KMS-managed keys (SSE-KMS ), or client-side  encryp-
                     tion with KMS-managed keys (CSE-KMS) is used.

                     If  a  query  runs in a workgroup and the workgroup over-
                     rides client-side settings, then the workgroup's  setting
                     for  encryption  is  used.  It  specifies  whether  query
                     results must be encrypted, for all queries  that  run  in
                     this workgroup.

                 KmsKey -> (string)
                     For  SSE-KMS and CSE-KMS , this is the KMS key ARN or ID.

          EnforceWorkGroupConfiguration -> (boolean)
              If set to  "true",  the  settings  for  the  workgroup  override
              client-side  settings.  If  set to "false", client-side settings
              are used. For more information, see Workgroup Settings  Override
              Client-Side Settings .

          PublishCloudWatchMetricsEnabled -> (boolean)
              Indicates that the Amazon CloudWatch metrics are enabled for the
              workgroup.

          BytesScannedCutoffPerQuery -> (long)
              The upper data usage limit (cutoff) for the amount  of  bytes  a
              single query in a workgroup is allowed to scan.

          RequesterPaysEnabled -> (boolean)
              If  set to true , allows members assigned to a workgroup to ref-
              erence Amazon S3 Requester Pays buckets in queries.  If  set  to
              false  , workgroup members cannot query data from Requester Pays
              buckets, and queries that  retrieve  data  from  Requester  Pays
              buckets cause an error. The default is false . For more informa-
              tion about Requester Pays buckets, see Requester Pays Buckets in
              the Amazon Simple Storage Service Developer Guide .

          EngineVersion -> (structure)
              The  engine  version  that  all queries running on the workgroup
              use. Queries on the  AmazonAthenaPreviewFunctionality  workgroup
              run on the preview engine regardless of this setting.

              SelectedEngineVersion -> (string)
                 The engine version requested by the user. Possible values are
                 determined by the output of  ListEngineVersions  ,  including
                 Auto. The default is Auto.

              EffectiveEngineVersion -> (string)
                 Read only. The engine version on which the query runs. If the
                 user requests a valid engine version  other  than  Auto,  the
                 effective  engine  version  is the same as the engine version
                 that the user requested.  If  the  user  requests  Auto,  the
                 effective  engine version is chosen by Athena. When a request
                 to update the engine version is made by a CreateWorkGroup  or
                 UpdateWorkGroup  operation,  the EffectiveEngineVersion field
                 is ignored.

       Shorthand Syntax:

          ResultConfiguration={OutputLocation=string,EncryptionConfiguration={EncryptionOption=string,KmsKey=string}},EnforceWorkGroupConfiguration=boolean,PublishCloudWatchMetricsEnabled=boolean,BytesScannedCutoffPerQuery=long,RequesterPaysEnabled=boolean,EngineVersion={SelectedEngineVersion=string,EffectiveEngineVersion=string}

       JSON Syntax:

          {
            "ResultConfiguration": {
              "OutputLocation": "string",
              "EncryptionConfiguration": {
                "EncryptionOption": "SSE_S3"|"SSE_KMS"|"CSE_KMS",
                "KmsKey": "string"
              }
            },
            "EnforceWorkGroupConfiguration": true|false,
            "PublishCloudWatchMetricsEnabled": true|false,
            "BytesScannedCutoffPerQuery": long,
            "RequesterPaysEnabled": true|false,
            "EngineVersion": {
              "SelectedEngineVersion": "string",
              "EffectiveEngineVersion": "string"
            }
          }

       --description (string)
          The workgroup description.

       --tags (list)
          A list of comma separated tags to add to the workgroup that is  cre-
          ated.

          (structure)
              A label that you assign to a resource. In Athena, a resource can
              be a workgroup or data catalog. Each tag consists of a  key  and
              an  optional  value,  both of which you define. For example, you
              can use tags to categorize Athena workgroups or data catalogs by
              purpose, owner, or environment. Use a consistent set of tag keys
              to make it easier to search and filter workgroups or data  cata-
              logs in your account. For best practices, see Tagging Best Prac-
              tices . Tag keys can be from 1 to 128 UTF-8 Unicode  characters,
              and  tag  values  can be from 0 to 256 UTF-8 Unicode characters.
              Tags can use letters and numbers representable in UTF-8, and the
              following  characters:  + - = . _ : / @. Tag keys and values are
              case-sensitive. Tag keys must be unique  per  resource.  If  you
              specify more than one tag, separate them by commas.

              Key -> (string)
                 A  tag key. The tag key length is from 1 to 128 Unicode char-
                 acters in UTF-8. You  can  use  letters  and  numbers  repre-
                 sentable  in UTF-8, and the following characters: + - = . _ :
                 / @. Tag keys are  case-sensitive  and  must  be  unique  per
                 resource.

              Value -> (string)
                 A  tag  value.  The tag value length is from 0 to 256 Unicode
                 characters in UTF-8. You can use letters and  numbers  repre-
                 sentable  in UTF-8, and the following characters: + - = . _ :
                 / @. Tag values are case-sensitive.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a workgroup

       The following create-work-group  example  creates  a  workgroup  called
       Data_Analyst_Group that has the query results output location s3://aws-
       doc-example-bucket. The command  creates  a  workgroup  that  overrides
       client  configuration settings, which includes the query results output
       location. The command also  enables CloudWatch metrics and  adds  three
       key-value tag pairs to the workgroup to distinguish it from other work-
       groups. Note that the --configuration argument has no spaces before the
       commas that separate its options.

          aws athena create-work-group \
              --name Data_Analyst_Group \
              --configuration ResultConfiguration={OutputLocation="s3://awsdoc-example-bucket"},EnforceWorkGroupConfiguration="true",PublishCloudWatchMetricsEnabled="true" \
              --description "Workgroup for data analysts" \
              --tags Key=Division,Value=West Key=Location,Value=Seattle Key=Team,Value="Big Data"

       This  command  produces  no  output. To see the results, use aws athena
       get-work-group --work-group Data_Analyst_Group.

       For more information, see Managing Workgroups in the Amazon Athena User
       Guide.

OUTPUT
       None



                                                           CREATE-WORK-GROUP()
