DESCRIBE-JOB()                                                  DESCRIBE-JOB()



NAME
       describe-job -

DESCRIPTION
       Describes a job.

       Requires permission to access the DescribeJob action.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            describe-job
          --job-id <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --job-id (string)
          The  unique identifier you assigned to this job when it was created.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To get detailed status for a job

       The following describe-job example gets detailed  status  for  the  job
       whose ID is example-job-01.

          aws iot describe-job \
              --job-id "example-job-01"

       Output:

          {
              "job": {
                  "jobArn": "arn:aws:iot:us-west-2:123456789012:job/example-job-01",
                  "jobId": "example-job-01",
                  "targetSelection": "SNAPSHOT",
                  "status": "IN_PROGRESS",
                  "targets": [
                      "arn:aws:iot:us-west-2:123456789012:thing/MyRaspberryPi"
                  ],
                  "description": "example job test",
                  "presignedUrlConfig": {},
                  "jobExecutionsRolloutConfig": {},
                  "createdAt": 1560787022.733,
                  "lastUpdatedAt": 1560787026.294,
                  "jobProcessDetails": {
                      "numberOfCanceledThings": 0,
                      "numberOfSucceededThings": 0,
                      "numberOfFailedThings": 0,
                      "numberOfRejectedThings": 0,
                      "numberOfQueuedThings": 1,
                      "numberOfInProgressThings": 0,
                      "numberOfRemovedThings": 0,
                      "numberOfTimedOutThings": 0
                  },
                  "timeoutConfig": {}
              }
          }

       For  more  information, see Creating and Managing Jobs (CLI) in the AWS
       IoT Developer Guide.

OUTPUT
       documentSource -> (string)
          An S3 link to the job document.

       job -> (structure)
          Information about the job.

          jobArn -> (string)
              An     ARN     identifying     the     job      with      format
              "arn:aws:iot:region:account:job/jobId".

          jobId -> (string)
              The  unique identifier you assigned to this job when it was cre-
              ated.

          targetSelection -> (string)
              Specifies whether the job will continue to run (CONTINUOUS),  or
              will  be  complete  after  all those things specified as targets
              have completed the job (SNAPSHOT). If continuous,  the  job  may
              also  be  run  on a thing when a change is detected in a target.
              For example, a job will run on a device when  the  thing  repre-
              senting  the  device  is added to a target group, even after the
              job was completed by all things originally in the group.

          status -> (string)
              The status of the job, one of IN_PROGRESS  ,  CANCELED  ,  DELE-
              TION_IN_PROGRESS or COMPLETED .

          forceCanceled -> (boolean)
              Will  be  true  if  the job was canceled with the optional force
              parameter set to true .

          reasonCode -> (string)
              If the job was updated, provides the reason code for the update.

          comment -> (string)
              If the job was updated, describes the reason for the update.

          targets -> (list)
              A list of IoT things and thing groups to which the job should be
              sent.

              (string)

          description -> (string)
              A short text description of the job.

          presignedUrlConfig -> (structure)
              Configuration for pre-signed S3 URLs.

              roleArn -> (string)
                 The ARN of an IAM role that grants grants permission to down-
                 load  files from the S3 bucket where the job data/updates are
                 stored. The role must also grant permission for IoT to  down-
                 load the files.

              expiresInSec -> (long)
                 How long (in seconds) pre-signed URLs are valid. Valid values
                 are 60 - 3600, the default value is 3600 seconds.  Pre-signed
                 URLs are generated when Jobs receives an MQTT request for the
                 job document.

          jobExecutionsRolloutConfig -> (structure)
              Allows you to create a staged rollout of a job.

              maximumPerMinute -> (integer)
                 The maximum number of things that will be notified of a pend-
                 ing  job,  per  minute. This parameter allows you to create a
                 staged rollout.

              exponentialRate -> (structure)
                 The rate of increase for a job rollout. This parameter allows
                 you to define an exponential rate for a job rollout.

                 baseRatePerMinute -> (integer)
                     The  minimum  number of things that will be notified of a
                     pending job, per minute at the start of job rollout. This
                     parameter  allows you to define the initial rate of roll-
                     out.

                 incrementFactor -> (double)
                     The exponential factor to increase the  rate  of  rollout
                     for a job.

                     Amazon  Web  Services  IoT  Core supports up to one digit
                     after the decimal (for example, 1.5, but not 1.55).

                 rateIncreaseCriteria -> (structure)
                     The criteria to initiate the increase in rate of  rollout
                     for a job.

                     numberOfNotifiedThings -> (integer)
                        The  threshold for number of notified things that will
                        initiate the increase in rate of rollout.

                     numberOfSucceededThings -> (integer)
                        The threshold for number of succeeded things that will
                        initiate the increase in rate of rollout.

          abortConfig -> (structure)
              Configuration for criteria to abort the job.

              criteriaList -> (list)
                 The list of criteria that determine when and how to abort the
                 job.

                 (structure)
                     The criteria that determine when  and  how  a  job  abort
                     takes place.

                     failureType -> (string)
                        The type of job execution failures that can initiate a
                        job abort.

                     action -> (string)
                        The type of job action to take  to  initiate  the  job
                        abort.

                     thresholdPercentage -> (double)
                        The  minimum percentage of job execution failures that
                        must occur to initiate the job abort.

                        Amazon Web Services IoT Core supports up to two digits
                        after  the  decimal  (for example, 10.9 and 10.99, but
                        not 10.999).

                     minNumberOfExecutedThings -> (integer)
                        The minimum number of things which  must  receive  job
                        execution notifications before the job can be aborted.

          createdAt -> (timestamp)
              The time, in seconds since the epoch, when the job was  created.

          lastUpdatedAt -> (timestamp)
              The  time,  in  seconds  since  the epoch, when the job was last
              updated.

          completedAt -> (timestamp)
              The time, in seconds since the epoch,  when  the  job  was  com-
              pleted.

          jobProcessDetails -> (structure)
              Details about the job process.

              processingTargets -> (list)
                 The target devices to which the job execution is being rolled
                 out. This value will be null after the job execution has fin-
                 ished rolling out to all the target devices.

                 (string)

              numberOfCanceledThings -> (integer)
                 The number of things that cancelled the job.

              numberOfSucceededThings -> (integer)
                 The number of things which successfully completed the job.

              numberOfFailedThings -> (integer)
                 The number of things that failed executing the job.

              numberOfRejectedThings -> (integer)
                 The number of things that rejected the job.

              numberOfQueuedThings -> (integer)
                 The  number of things that are awaiting execution of the job.

              numberOfInProgressThings -> (integer)
                 The number of things currently executing the job.

              numberOfRemovedThings -> (integer)
                 The number of things that are no longer scheduled to  execute
                 the  job  because they have been deleted or have been removed
                 from the group that was a target of the job.

              numberOfTimedOutThings -> (integer)
                 The number of things whose job execution status is  TIMED_OUT
                 .

          timeoutConfig -> (structure)
              Specifies  the amount of time each device has to finish its exe-
              cution of the job. A timer is started  when  the  job  execution
              status  is  set  to IN_PROGRESS . If the job execution status is
              not set to another terminal state before the timer  expires,  it
              will be automatically set to TIMED_OUT .

              inProgressTimeoutInMinutes -> (long)
                 Specifies  the amount of time, in minutes, this device has to
                 finish execution of this job. The  timeout  interval  can  be
                 anywhere  between  1  minute and 7 days (1 to 10080 minutes).
                 The in progress timer can't be updated and will apply to  all
                 job  executions for the job. Whenever a job execution remains
                 in the IN_PROGRESS status for longer than this interval,  the
                 job  execution will fail and switch to the terminal TIMED_OUT
                 status.

          namespaceId -> (string)
              The namespace used to indicate that a job is a  customer-managed
              job.

              When you specify a value for this parameter, Amazon Web Services
              IoT Core sends jobs notifications to MQTT  topics  that  contain
              the value in the following format.
                 $aws/things/*THING_NAME*     /jobs/*JOB_ID*    /notify-names-
                 pace-*NAMESPACE_ID* /

              NOTE:
                 The namespaceId feature is in public preview.

          jobTemplateArn -> (string)
              The ARN of the job template used to create the job.

          jobExecutionsRetryConfig -> (structure)
              The configuration for the criteria to retry the job.

              criteriaList -> (list)
                 The list of criteria that determines  how  many  retries  are
                 allowed for each failure type for a job.

                 (structure)
                     The criteria that determines how many retries are allowed
                     for each failure type for a job.

                     failureType -> (string)
                        The type of job execution failures that can initiate a
                        job retry.

                     numberOfRetries -> (integer)
                        The  number  of retries allowed for a failure type for
                        the job.

          documentParameters -> (map)
              A key-value map that pairs the patterns that need to be replaced
              in  a  managed  template  job  document  schema. You can use the
              description of each key as a guidance to specify the inputs dur-
              ing runtime when creating a job.

              key -> (string)

              value -> (string)



                                                                DESCRIBE-JOB()
