ALLOCATE-CONNECTION-ON-INTERCONNECT()    ALLOCATE-CONNECTION-ON-INTERCONNECT()



NAME
       allocate-connection-on-interconnect -

DESCRIPTION
       Deprecated. Use  AllocateHostedConnection instead.

       Creates a hosted connection on an interconnect.

       Allocates  a VLAN number and a specified amount of bandwidth for use by
       a hosted connection on the specified interconnect.

       NOTE:
          Intended for use by Direct Connect Partners only.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            allocate-connection-on-interconnect
          --bandwidth <value>
          --connection-name <value>
          --owner-account <value>
          --interconnect-id <value>
          --vlan <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --bandwidth (string)
          The bandwidth of the connection. The  possible  values  are  50Mbps,
          100Mbps,  200Mbps,  300Mbps,  400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps,
          and 10Gbps. Note that only those Direct Connect  Partners  who  have
          met  specific  requirements  are  allowed  to create a 1Gbps, 2Gbps,
          5Gbps or 10Gbps hosted connection.

       --connection-name (string)
          The name of the provisioned connection.

       --owner-account (string)
          The ID of the Amazon Web Services account of the customer  for  whom
          the connection will be provisioned.

       --interconnect-id (string)
          The  ID  of  the interconnect on which the connection will be provi-
          sioned.

       --vlan (integer)
          The dedicated VLAN provisioned to the connection.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a hosted connection on an interconnect

       The following  allocate-connection-on-interconnect  command  creates  a
       hosted connection on an interconnect:

          aws directconnect allocate-connection-on-interconnect --bandwidth 500Mbps --connection-name mydcinterconnect --owner-account 123456789012 --interconnect-id dxcon-fgktov66 --vlan 101

       Output:

          {
              "partnerName": "TIVIT",
              "vlan": 101,
              "ownerAccount": "123456789012",
              "connectionId": "dxcon-ffzc51m1",
              "connectionState": "ordering",
              "bandwidth": "500Mbps",
              "location": "TIVIT",
              "connectionName": "mydcinterconnect",
              "region": "sa-east-1"
          }

OUTPUT
       ownerAccount -> (string)
          The  ID of the Amazon Web Services account that owns the connection.

       connectionId -> (string)
          The ID of the connection.

       connectionName -> (string)
          The name of the connection.

       connectionState -> (string)
          The state of the connection. The following are the possible values:

          o ordering : The initial state of a hosted connection provisioned on
            an  interconnect. The connection stays in the ordering state until
            the owner of the hosted connection confirms or declines  the  con-
            nection order.

          o requested  :  The initial state of a standard connection. The con-
            nection stays in the requested state until the  Letter  of  Autho-
            rization (LOA) is sent to the customer.

          o pending  :  The connection has been approved and is being initial-
            ized.

          o available : The network link is up and the connection is ready for
            use.

          o down : The network link is down.

          o deleting : The connection is being deleted.

          o deleted : The connection has been deleted.

          o rejected  :  A  hosted connection in the ordering state enters the
            rejected state if it is deleted by the customer.

          o unknown : The state of the connection is not available.

       region -> (string)
          The Amazon Web Services Region where the connection is located.

       location -> (string)
          The location of the connection.

       bandwidth -> (string)
          The bandwidth of the connection.

       vlan -> (integer)
          The ID of the VLAN.

       partnerName -> (string)
          The name of the Direct Connect service provider associated with  the
          connection.

       loaIssueTime -> (timestamp)
          The  time  of  the most recent call to  DescribeLoa for this connec-
          tion.

       lagId -> (string)
          The ID of the LAG.

       awsDevice -> (string)
          The Direct Connect endpoint on which the physical connection  termi-
          nates.

       jumboFrameCapable -> (boolean)
          Indicates whether jumbo frames (9001 MTU) are supported.

       awsDeviceV2 -> (string)
          The Direct Connect endpoint that terminates the physical connection.

       awsLogicalDeviceId -> (string)
          The Direct Connect endpoint that terminates the logical  connection.
          This  device  might be different than the device that terminates the
          physical connection.

       hasLogicalRedundancy -> (string)
          Indicates whether the connection supports a secondary  BGP  peer  in
          the same address family (IPv4/IPv6).

       tags -> (list)
          The tags associated with the connection.

          (structure)
              Information about a tag.

              key -> (string)
                 The key.

              value -> (string)
                 The value.

       providerName -> (string)
          The name of the service provider associated with the connection.

       macSecCapable -> (boolean)
          Indicates whether the connection supports MAC Security (MACsec).

       portEncryptionStatus -> (string)
          The MAC Security (MACsec) port link status of the connection.

          The  valid  values  are Encryption Up , which means that there is an
          active Connection Key Name, or Encryption Down .

       encryptionMode -> (string)
          The MAC Security (MACsec) connection encryption mode.

          The valid values are no_encrypt , should_encrypt , and  must_encrypt
          .

       macSecKeys -> (list)
          The  MAC Security (MACsec) security keys associated with the connec-
          tion.

          (structure)
              Information about the MAC Security (MACsec) secret key.

              secretARN -> (string)
                 The Amazon Resource Name (ARN) of the MAC  Security  (MACsec)
                 secret key.

              ckn -> (string)
                 The  Connection  Key  Name  (CKN) for the MAC Security secret
                 key.

              state -> (string)
                 The state of the MAC Security (MACsec) secret key.

                 The possible values are:

                 o associating : The MAC Security (MACsec) secret key is being
                   validated  and  not  yet  associated with the connection or
                   LAG.

                 o associated : The MAC Security (MACsec) secret key is  vali-
                   dated and associated with the connection or LAG.

                 o disassociating  :  The  MAC Security (MACsec) secret key is
                   being disassociated from the connection or LAG

                 o disassociated : The MAC Security (MACsec) secret key is  no
                   longer associated with the connection or LAG.

              startOn -> (string)
                 The  date  that  the  MAC  Security (MACsec) secret key takes
                 effect. The value is displayed in UTC format.



                                         ALLOCATE-CONNECTION-ON-INTERCONNECT()
