GET-UPLOAD()                                                      GET-UPLOAD()



NAME
       get-upload -

DESCRIPTION
       Gets information about an upload.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-upload
          --arn <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --arn (string)
          The upload's ARN.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To view an upload

       The following command retrieves information about an upload:

          aws devicefarm get-upload --arn "arn:aws:devicefarm:us-west-2:123456789012:upload:070fc3ca-7ec1-4741-9c1f-d3e044efc506/dd72723a-ae9e-4087-09e6-f4cea3599514"

       You can get the upload ARN from the output of create-upload.

       Output:

          {
              "upload": {
                  "status": "SUCCEEDED",
                  "name": "app.apk",
                  "created": 1505262773.186,
                  "type": "ANDROID_APP",
                  "arn": "arn:aws:devicefarm:us-west-2:123456789012:upload:070fc3ca-7ec1-4741-9c1f-d3e044efc506/dd72723a-ae9e-4087-09e6-f4cea3599514",
                  "metadata": "{\"device_admin\":false,\"activity_name\":\"ccom.example.client.LauncherActivity\",\"version_name\":\"1.0.2.94\",\"screens\":[\"small\",\"normal\",\"large\",\"xlarge\"],\"error_type\":null,\"sdk_version\":\"16\",\"package_name\":\"com.example.client\",\"version_code\":\"20994\",\"native_code\":[\"armeabi-v7a\"],\"target_sdk_version\":\"25\"}"
              }
          }

OUTPUT
       upload -> (structure)
          An  app  or  a  set of one or more tests to upload or that have been
          uploaded.

          arn -> (string)
              The upload's ARN.

          name -> (string)
              The upload's file name.

          created -> (timestamp)
              When the upload was created.

          type -> (string)
              The upload's type.

              Must be one of the following values:

              o ANDROID_APP

              o IOS_APP

              o WEB_APP

              o EXTERNAL_DATA

              o APPIUM_JAVA_JUNIT_TEST_PACKAGE

              o APPIUM_JAVA_TESTNG_TEST_PACKAGE

              o APPIUM_PYTHON_TEST_PACKAGE

              o APPIUM_NODE_TEST_PACKAGE

              o APPIUM_RUBY_TEST_PACKAGE

              o APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE

              o APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE

              o APPIUM_WEB_PYTHON_TEST_PACKAGE

              o APPIUM_WEB_NODE_TEST_PACKAGE

              o APPIUM_WEB_RUBY_TEST_PACKAGE

              o CALABASH_TEST_PACKAGE

              o INSTRUMENTATION_TEST_PACKAGE

              o UIAUTOMATION_TEST_PACKAGE

              o UIAUTOMATOR_TEST_PACKAGE

              o XCTEST_TEST_PACKAGE

              o XCTEST_UI_TEST_PACKAGE

              o APPIUM_JAVA_JUNIT_TEST_SPEC

              o APPIUM_JAVA_TESTNG_TEST_SPEC

              o APPIUM_PYTHON_TEST_SPEC

              o APPIUM_NODE_TEST_SPEC

              o APPIUM_RUBY_TEST_SPEC

              o APPIUM_WEB_JAVA_JUNIT_TEST_SPEC

              o APPIUM_WEB_JAVA_TESTNG_TEST_SPEC

              o APPIUM_WEB_PYTHON_TEST_SPEC

              o APPIUM_WEB_NODE_TEST_SPEC

              o APPIUM_WEB_RUBY_TEST_SPEC

              o INSTRUMENTATION_TEST_SPEC

              o XCTEST_UI_TEST_SPEC

          status -> (string)
              The upload's status.

              Must be one of the following values:

              o FAILED

              o INITIALIZED

              o PROCESSING

              o SUCCEEDED

          url -> (string)
              The presigned Amazon S3 URL that was used to store a file  using
              a PUT request.

          metadata -> (string)
              The  upload's  metadata. For example, for Android, this contains
              information that is parsed from the manifest and is displayed in
              the  AWS  Device  Farm  console  after  the  associated  app  is
              uploaded.

          contentType -> (string)
              The upload's content type (for example, application/octet-stream
              ).

          message -> (string)
              A message about the upload's result.

          category -> (string)
              The upload's category. Allowed values include:

              o CURATED: An upload managed by AWS Device Farm.

              o PRIVATE: An upload managed by the AWS Device Farm customer.



                                                                  GET-UPLOAD()
