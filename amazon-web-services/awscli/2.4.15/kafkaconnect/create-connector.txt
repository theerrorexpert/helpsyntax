CREATE-CONNECTOR()                                          CREATE-CONNECTOR()



NAME
       create-connector -

DESCRIPTION
       Creates a connector using the specified properties.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-connector
          --capacity <value>
          --connector-configuration <value>
          [--connector-description <value>]
          --connector-name <value>
          --kafka-cluster <value>
          --kafka-cluster-client-authentication <value>
          --kafka-cluster-encryption-in-transit <value>
          --kafka-connect-version <value>
          [--log-delivery <value>]
          --plugins <value>
          --service-execution-role-arn <value>
          [--worker-configuration <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --capacity (structure)
          Information  about  the capacity allocated to the connector. Exactly
          one of the two properties must be specified.

          autoScaling -> (structure)
              Information about the auto scaling parameters for the connector.

              maxWorkerCount -> (integer)
                 The maximum number of workers allocated to the connector.

              mcuCount -> (integer)
                 The  number of microcontroller units (MCUs) allocated to each
                 connector worker. The valid values are 1,2,4,8.

              minWorkerCount -> (integer)
                 The minimum number of workers allocated to the connector.

              scaleInPolicy -> (structure)
                 The sacle-in policy for the connector.

                 cpuUtilizationPercentage -> (integer)
                     Specifies the CPU  utilization  percentage  threshold  at
                     which you want connector scale in to be triggered.

              scaleOutPolicy -> (structure)
                 The sacle-out policy for the connector.

                 cpuUtilizationPercentage -> (integer)
                     The  CPU  utilization  percentage  threshold at which you
                     want connector scale out to be triggered.

          provisionedCapacity -> (structure)
              Details about a fixed capacity allocated to a connector.

              mcuCount -> (integer)
                 The number of microcontroller units (MCUs) allocated to  each
                 connector worker. The valid values are 1,2,4,8.

              workerCount -> (integer)
                 The number of workers that are allocated to the connector.

       Shorthand Syntax:

          autoScaling={maxWorkerCount=integer,mcuCount=integer,minWorkerCount=integer,scaleInPolicy={cpuUtilizationPercentage=integer},scaleOutPolicy={cpuUtilizationPercentage=integer}},provisionedCapacity={mcuCount=integer,workerCount=integer}

       JSON Syntax:

          {
            "autoScaling": {
              "maxWorkerCount": integer,
              "mcuCount": integer,
              "minWorkerCount": integer,
              "scaleInPolicy": {
                "cpuUtilizationPercentage": integer
              },
              "scaleOutPolicy": {
                "cpuUtilizationPercentage": integer
              }
            },
            "provisionedCapacity": {
              "mcuCount": integer,
              "workerCount": integer
            }
          }

       --connector-configuration (map)
          A  map  of  keys  to values that represent the configuration for the
          connector.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --connector-description (string)
          A summary description of the connector.

       --connector-name (string)
          The name of the connector.

       --kafka-cluster (structure)
          Specifies which Apache Kafka cluster to connect to.

          apacheKafkaCluster -> (structure)
              The Apache Kafka cluster to which the connector is connected.

              bootstrapServers -> (string)
                 The bootstrap servers of the cluster.

              vpc -> (structure)
                 Details of an Amazon VPC which has  network  connectivity  to
                 the Apache Kafka cluster.

                 securityGroups -> (list)
                     The security groups for the connector.

                     (string)

                 subnets -> (list)
                     The subnets for the connector.

                     (string)

       JSON Syntax:

          {
            "apacheKafkaCluster": {
              "bootstrapServers": "string",
              "vpc": {
                "securityGroups": ["string", ...],
                "subnets": ["string", ...]
              }
            }
          }

       --kafka-cluster-client-authentication (structure)
          Details  of the client authentication used by the Apache Kafka clus-
          ter.

          authenticationType -> (string)
              The type of client authentication used to connect to the  Apache
              Kafka cluster. Value NONE means that no client authentication is
              used.

       Shorthand Syntax:

          authenticationType=string

       JSON Syntax:

          {
            "authenticationType": "NONE"|"IAM"
          }

       --kafka-cluster-encryption-in-transit (structure)
          Details of encryption in transit to the Apache Kafka cluster.

          encryptionType -> (string)
              The type of encryption in transit to the Apache Kafka cluster.

       Shorthand Syntax:

          encryptionType=string

       JSON Syntax:

          {
            "encryptionType": "PLAINTEXT"|"TLS"
          }

       --kafka-connect-version (string)
          The version of Kafka Connect. It has to be compatible with both  the
          Apache Kafka cluster's version and the plugins.

       --log-delivery (structure)
          Details about log delivery.

          workerLogDelivery -> (structure)
              The workers can send worker logs to different destination types.
              This configuration specifies the details of these  destinations.

              cloudWatchLogs -> (structure)
                 Details about delivering logs to Amazon CloudWatch Logs.

                 enabled -> (boolean)
                     Whether   log  delivery  to  Amazon  CloudWatch  Logs  is
                     enabled.

                 logGroup -> (string)
                     The name of the CloudWatch log group that is the destina-
                     tion for log delivery.

              firehose -> (structure)
                 Details  about  delivering  logs to Amazon Kinesis Data Fire-
                 hose.

                 deliveryStream -> (string)
                     The name of the Kinesis  Data  Firehose  delivery  stream
                     that is the destination for log delivery.

                 enabled -> (boolean)
                     Specifies  whether connector logs get delivered to Amazon
                     Kinesis Data Firehose.

              s3 -> (structure)
                 Details about delivering logs to Amazon S3.

                 bucket -> (string)
                     The name of the S3 bucket that is the destination for log
                     delivery.

                 enabled -> (boolean)
                     Specifies  whether  connector logs get sent to the speci-
                     fied Amazon S3 destination.

                 prefix -> (string)
                     The S3 prefix that is the destination for log delivery.

       Shorthand Syntax:

          workerLogDelivery={cloudWatchLogs={enabled=boolean,logGroup=string},firehose={deliveryStream=string,enabled=boolean},s3={bucket=string,enabled=boolean,prefix=string}}

       JSON Syntax:

          {
            "workerLogDelivery": {
              "cloudWatchLogs": {
                "enabled": true|false,
                "logGroup": "string"
              },
              "firehose": {
                "deliveryStream": "string",
                "enabled": true|false
              },
              "s3": {
                "bucket": "string",
                "enabled": true|false,
                "prefix": "string"
              }
            }
          }

       --plugins (list)
          Specifies which plugins to use for the connector.

          (structure)
              A plugin is an AWS resource that contains the code that  defines
              your connector logic.

              customPlugin -> (structure)
                 Details about a custom plugin.

                 customPluginArn -> (string)
                     The Amazon Resource Name (ARN) of the custom plugin.

                 revision -> (long)
                     The revision of the custom plugin.

       Shorthand Syntax:

          customPlugin={customPluginArn=string,revision=long} ...

       JSON Syntax:

          [
            {
              "customPlugin": {
                "customPluginArn": "string",
                "revision": long
              }
            }
            ...
          ]

       --service-execution-role-arn (string)
          The Amazon Resource Name (ARN) of the IAM role used by the connector
          to access the Amazon Web Services resources that it needs. The types
          of  resources  depends on the logic of the connector. For example, a
          connector that has Amazon S3 as a destination must have  permissions
          that allow it to write to the S3 destination bucket.

       --worker-configuration (structure)
          Specifies which worker configuration to use with the connector.

          revision -> (long)
              The revision of the worker configuration.

          workerConfigurationArn -> (string)
              The Amazon Resource Name (ARN) of the worker configuration.

       Shorthand Syntax:

          revision=long,workerConfigurationArn=string

       JSON Syntax:

          {
            "revision": long,
            "workerConfigurationArn": "string"
          }

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       connectorArn -> (string)
          The  Amazon  Resource Name (ARN) that Amazon assigned to the connec-
          tor.

       connectorName -> (string)
          The name of the connector.

       connectorState -> (string)
          The state of the connector.



                                                            CREATE-CONNECTOR()
