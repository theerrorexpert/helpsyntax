GET-RESOURCES()                                                GET-RESOURCES()



NAME
       get-resources -

DESCRIPTION
       Returns  all the tagged or previously tagged resources that are located
       in the specified Amazon Web Services Region for the account.

       Depending on what information you want returned, you can  also  specify
       the following:

       o Filters  that specify what tags and resource types you want returned.
         The response includes all tags that are associated with the requested
         resources.

       o Information about compliance with the account's effective tag policy.
         For more information on tag policies, see Tag Policies in the Organi-
         zations User Guide.

       This  operation  supports pagination, where the response can be sent in
       multiple pages. You should check the PaginationToken response parameter
       to  determine  if  there  are  additional  results available to return.
       Repeat the query, passing the PaginationToken response parameter  value
       as  an input to the next request until you recieve a null value. A null
       value for PaginationToken indicates that  there  are  no  more  results
       waiting to be returned.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       get-resources  is  a  paginated  operation.  Multiple  API calls may be
       issued in order to retrieve the entire data set  of  results.  You  can
       disable pagination by providing the --no-paginate argument.  When using
       --output text and the --query argument on  a  paginated  response,  the
       --query  argument  must  extract data from the results of the following
       query expressions: ResourceTagMappingList

SYNOPSIS
            get-resources
          [--tag-filters <value>]
          [--tags-per-page <value>]
          [--resource-type-filters <value>]
          [--include-compliance-details | --no-include-compliance-details]
          [--exclude-compliant-resources | --no-exclude-compliant-resources]
          [--resource-arn-list <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --tag-filters (list)
          Specifies a list of TagFilters (keys and  values)  to  restrict  the
          output  to  only  those  resources that have tags with the specified
          keys and, if included, the specified  values.  Each  TagFilter  must
          contain  a  key with values optional. A request can include up to 50
          keys, and each key can include up to 20 values.

          Note the following when deciding how to use TagFilters:

          o If you don't specify a  TagFilter  ,  the  response  includes  all
            resources  that  are currently tagged or ever had a tag. Resources
            that currently don't have tags are shown with an  empty  tag  set,
            like this: "Tags": [] .

          o If  you  specify  more  than  one  filter in a single request, the
            response returns only those resources that satisfy all filters.

          o If you specify a filter that contains more than one  value  for  a
            key,  the  response returns resources that match any of the speci-
            fied values for that key.

          o If you don't specify a value for a key, the response  returns  all
            resources that are tagged with that key, with any or no value. For
            example, for the following  filters:  filter1=  {keyA,{value1}}  ,
            filter2={keyB,{value2,value3,value4}} , filter3= {keyC} :

            o GetResources({filter1})    returns    resources    tagged   with
              key1=value1

            o GetResources({filter2})   returns    resources    tagged    with
              key2=value2 or key2=value3 or key2=value4

            o GetResources({filter3})  returns  resources  tagged with any tag
              with the key key3 , and with any or no value

            o GetResources({filter1,filter2,filter3}) returns resources tagged
              with   (key1=value1)   and   (key2=value2   or   key2=value3  or
              key2=value4) and (key3, any or no value)

          (structure)
              A list of tags (keys and values) that are used  to  specify  the
              associated resources.

              Key -> (string)
                 One  part of a key-value pair that makes up a tag. A key is a
                 general label that acts like a category for more specific tag
                 values.

              Values -> (list)
                 One part of a key-value pair that make up a tag. A value acts
                 as a descriptor within a tag category (key). The value can be
                 empty or null.

                 (string)

       Shorthand Syntax:

          Key=string,Values=string,string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Values": ["string", ...]
            }
            ...
          ]

       --tags-per-page (integer)
          Amazon  Web  Services  recommends  using ResourcesPerPage instead of
          this parameter.

          A limit that restricts the number of  tags  (key  and  value  pairs)
          returned  by  GetResources  in  paginated output. A resource with no
          tags is counted as having one tag (one key and value pair).
              GetResources does not split a resource and its  associated  tags
              across  pages.  If  the specified TagsPerPage would cause such a
              break, a PaginationToken is returned in place  of  the  affected
              resource  and its tags. Use that token in another request to get
              the remaining data. For example, if you specify a TagsPerPage of
              100  and the account has 22 resources with 10 tags each (meaning
              that each resource has 10 key and value pairs), the output  will
              consist  of  three  pages.  The first page displays the first 10
              resources, each with its 10 tags. The second page  displays  the
              next  10  resources,  each with its 10 tags. The third page dis-
              plays the remaining 2 resources, each with its 10 tags.

          You can set TagsPerPage to a minimum of 100 items up to a maximum of
          500 items.

       --resource-type-filters (list)
          Specifies the resource types that you want included in the response.
          The format of each resource type  is  service[:resourceType]  .  For
          example,  specifying  a  resource type of ec2 returns all Amazon EC2
          resources (which includes EC2 instances). Specifying a resource type
          of ec2:instance returns only EC2 instances.

          The  string  for  each service name and resource type is the same as
          that embedded in a resource's Amazon Resource Name  (ARN).  For  the
          list  of services whose resources you can use in this parameter, see
          Services that support the Resource Groups Tagging API .

          You can specify multiple resource types by using an array. The array
          can  include  up  to  100  items.  Note  that  the length constraint
          requirement applies to each resource type filter. For  example,  the
          following  string  would  limit  the  response  to  only  Amazon EC2
          instances, Amazon S3 buckets, or any Audit Manager resource:
              ec2:instance,s3:bucket,auditmanager

          (string)

       Syntax:

          "string" "string" ...

       --include-compliance-details     |      --no-include-compliance-details
       (boolean)
          Specifies  whether  to include details regarding the compliance with
          the effective tag policy. Set this  to  true  to  determine  whether
          resources are compliant with the tag policy and to get details.

       --exclude-compliant-resources     |    --no-exclude-compliant-resources
       (boolean)
          Specifies whether to exclude resources that are compliant  with  the
          tag  policy.  Set  this  to true if you are interested in retrieving
          information on noncompliant resources only.

          You can use this  parameter  only  if  the  IncludeComplianceDetails
          parameter is also set to true .

       --resource-arn-list (list)
          Specifies a list of ARNs of resources for which you want to retrieve
          tag data. You can't specify both this parameter and any of the pagi-
          nation  parameters (ResourcesPerPage , TagsPerPage , PaginationToken
          ) in the same request. If you  specify  both,  you  get  an  Invalid
          Parameter exception.

          If  a resource specified by this parameter doesn't exist, it doesn't
          generate an error; it simply isn't included in the response.

          An ARN (Amazon Resource Name) uniquely identifies  a  resource.  For
          more  information,  see  Amazon Resource Names (ARNs) and Amazon Web
          Services Service Namespaces in the Amazon Web Services General  Ref-
          erence .

          (string)

       Syntax:

          "string" "string" ...

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size  results  in  more  calls to the AWS service,
          retrieving fewer items in each call. This can help prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To get a list of tagged resources

       The following get-resources example displays a list of resources in the
       account that are tagged with the specified key name and value.

          aws resourcegroupstaggingapi get-resources \
              --tag-filters Key=Environment,Values=Production \
              --tags-per-page 100

       Output:

          {
              "ResourceTagMappingList": [
                  {
                      "ResourceARN": " arn:aws:inspector:us-west-2:123456789012:target/0-nvgVhaxX/template/0-7sbz2Kz0",
                      "Tags": [
                          {
                              "Key": "Environment",
                              "Value": "Production"
                          }
                      ]
                  }
              ]
          }

       For  more  information, see GetResources in the Resource Groups Tagging
       API Reference.

OUTPUT
       PaginationToken -> (string)
          A string that indicates that there is more data available than  this
          response contains. To receive the next part of the response, specify
          this response value as the PaginationToken value in the request  for
          the next page.

       ResourceTagMappingList -> (list)
          A  list  of  resource ARNs and the tags (keys and values) associated
          with each.

          (structure)
              A list of resource ARNs and the tags (keys and values) that  are
              associated with each.

              ResourceARN -> (string)
                 The ARN of the resource.

              Tags -> (list)
                 The  tags  that  have  been applied to one or more Amazon Web
                 Services resources.

                 (structure)
                     The metadata  that  you  apply  to  Amazon  Web  Services
                     resources  to help you categorize and organize them. Each
                     tag consists of a key and a  value,  both  of  which  you
                     define. For more information, see Tagging Amazon Web Ser-
                     vices Resources in the Amazon Web Services General Refer-
                     ence .

                     Key -> (string)
                        One  part  of  a key-value pair that makes up a tag. A
                        key is a general label that acts like a  category  for
                        more specific tag values.

                     Value -> (string)
                        One  part  of  a  key-value pair that make up a tag. A
                        value acts as  a  descriptor  within  a  tag  category
                        (key). The value can be empty or null.

              ComplianceDetails -> (structure)
                 Information  that  shows whether a resource is compliant with
                 the effective tag policy, including details on any noncompli-
                 ant tag keys.

                 NoncompliantKeys -> (list)
                     These  tag keys on the resource are noncompliant with the
                     effective tag policy.

                     (string)

                 KeysWithNoncompliantValues -> (list)
                     These are keys defined in the effective policy  that  are
                     on  the  resource with either incorrect case treatment or
                     noncompliant values.

                     (string)

                 ComplianceStatus -> (boolean)
                     Whether a resource is compliant with  the  effective  tag
                     policy.



                                                               GET-RESOURCES()
