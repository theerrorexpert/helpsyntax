GET-ML-TRANSFORM()                                          GET-ML-TRANSFORM()



NAME
       get-ml-transform -

DESCRIPTION
       Gets  an  Glue  machine  learning transform artifact and all its corre-
       sponding metadata. Machine learning transforms are a  special  type  of
       transform  that use machine learning to learn the details of the trans-
       formation to be performed by learning from examples provided by humans.
       These  transformations  are  then saved by Glue. You can retrieve their
       metadata by calling GetMLTransform .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-ml-transform
          --transform-id <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --transform-id (string)
          The unique identifier of the transform, generated at the  time  that
          the transform was created.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       TransformId -> (string)
          The  unique  identifier of the transform, generated at the time that
          the transform was created.

       Name -> (string)
          The unique name given to the transform when it was created.

       Description -> (string)
          A description of the transform.

       Status -> (string)
          The last known status of the transform (to indicate whether  it  can
          be used or not). One of "NOT_READY", "READY", or "DELETING".

       CreatedOn -> (timestamp)
          The date and time when the transform was created.

       LastModifiedOn -> (timestamp)
          The date and time when the transform was last modified.

       InputRecordTables -> (list)
          A list of Glue table definitions used by the transform.

          (structure)
              The database and table in the Glue Data Catalog that is used for
              input or output data.

              DatabaseName -> (string)
                 A database name in the Glue Data Catalog.

              TableName -> (string)
                 A table name in the Glue Data Catalog.

              CatalogId -> (string)
                 A unique identifier for the Glue Data Catalog.

              ConnectionName -> (string)
                 The name of the connection to the Glue Data Catalog.

       Parameters -> (structure)
          The configuration parameters that  are  specific  to  the  algorithm
          used.

          TransformType -> (string)
              The type of machine learning transform.

              For  information about the types of machine learning transforms,
              see Creating Machine Learning Transforms .

          FindMatchesParameters -> (structure)
              The parameters for the find matches algorithm.

              PrimaryKeyColumnName -> (string)
                 The name of a column that uniquely  identifies  rows  in  the
                 source table. Used to help identify matching records.

              PrecisionRecallTradeoff -> (double)
                 The  value  selected when tuning your transform for a balance
                 between precision and recall. A value of 0.5 means no prefer-
                 ence; a value of 1.0 means a bias purely for precision, and a
                 value of 0.0 means a bias  for  recall.  Because  this  is  a
                 tradeoff, choosing values close to 1.0 means very low recall,
                 and choosing values close to 0.0 results in very  low  preci-
                 sion.

                 The  precision  metric indicates how often your model is cor-
                 rect when it predicts a match.

                 The recall metric indicates that for  an  actual  match,  how
                 often your model predicts the match.

              AccuracyCostTradeoff -> (double)
                 The  value  that is selected when tuning your transform for a
                 balance between accuracy and cost. A value of 0.5 means  that
                 the  system  balances  accuracy and cost concerns. A value of
                 1.0 means a bias purely for accuracy, which typically results
                 in  a higher cost, sometimes substantially higher. A value of
                 0.0 means a bias purely for cost, which  results  in  a  less
                 accurate  FindMatches  transform, sometimes with unacceptable
                 accuracy.

                 Accuracy measures how well the transform finds true positives
                 and true negatives. Increasing accuracy requires more machine
                 resources and cost. But it also results in increased  recall.

                 Cost measures how many compute resources, and thus money, are
                 consumed to run the transform.

              EnforceProvidedLabels -> (boolean)
                 The value to switch on or off to force the  output  to  match
                 the  provided  labels  from users. If the value is True , the
                 find matches transform forces the output to  match  the  pro-
                 vided  labels.  The  results  override  the normal conflation
                 results. If the value is False , the find  matches  transform
                 does  not  ensure  all the labels provided are respected, and
                 the results rely on the trained model.

                 Note that setting this value to true may increase the confla-
                 tion execution time.

       EvaluationMetrics -> (structure)
          The latest evaluation metrics.

          TransformType -> (string)
              The type of machine learning transform.

          FindMatchesMetrics -> (structure)
              The evaluation metrics for the find matches algorithm.

              AreaUnderPRCurve -> (double)
                 The area under the precision/recall curve (AUPRC) is a single
                 number measuring the overall quality of the  transform,  that
                 is  independent  of the choice made for precision vs. recall.
                 Higher values indicate that you have a more attractive preci-
                 sion vs. recall tradeoff.

                 For  more information, see Precision and recall in Wikipedia.

              Precision -> (double)
                 The precision metric indicates when often your  transform  is
                 correct  when  it predicts a match. Specifically, it measures
                 how well the transform finds true positives  from  the  total
                 true positives possible.

                 For  more information, see Precision and recall in Wikipedia.

              Recall -> (double)
                 The recall metric indicates that for  an  actual  match,  how
                 often  your  transform  predicts  the match. Specifically, it
                 measures how well the transform finds true positives from the
                 total records in the source data.

                 For  more information, see Precision and recall in Wikipedia.

              F1 -> (double)
                 The maximum F1  metric  indicates  the  transform's  accuracy
                 between 0 and 1, where 1 is the best accuracy.

                 For more information, see F1 score in Wikipedia.

              ConfusionMatrix -> (structure)
                 The  confusion  matrix  shows you what your transform is pre-
                 dicting accurately and what types of errors it is making.

                 For more information, see Confusion matrix in Wikipedia.

                 NumTruePositives -> (long)
                     The number of matches in the data that the transform cor-
                     rectly found, in the confusion matrix for your transform.

                 NumFalsePositives -> (long)
                     The number of nonmatches in the data that  the  transform
                     incorrectly  classified  as  a  match,  in  the confusion
                     matrix for your transform.

                 NumTrueNegatives -> (long)
                     The number of nonmatches in the data that  the  transform
                     correctly  rejected,  in  the  confusion  matrix for your
                     transform.

                 NumFalseNegatives -> (long)
                     The number of matches in  the  data  that  the  transform
                     didn't  find, in the confusion matrix for your transform.

              ColumnImportances -> (list)
                 A  list  of  ColumnImportance  structures  containing  column
                 importance metrics, sorted in order of descending importance.

                 (structure)
                     A structure containing the column name and column  impor-
                     tance score for a column.

                     Column  importance  helps you understand how columns con-
                     tribute to your model, by identifying  which  columns  in
                     your records are more important than others.

                     ColumnName -> (string)
                        The name of a column.

                     Importance -> (double)
                        The column importance score for the column, as a deci-
                        mal.

       LabelCount -> (integer)
          The number of labels available for this transform.

       Schema -> (list)
          The Map<Column, Type> object that represents the  schema  that  this
          transform accepts. Has an upper bound of 100 columns.

          (structure)
              A  key-value  pair representing a column and data type that this
              transform can run against. The Schema parameter of the  MLTrans-
              form may contain up to 100 of these structures.

              Name -> (string)
                 The name of the column.

              DataType -> (string)
                 The type of data in the column.

       Role -> (string)
          The  name  or  Amazon  Resource  Name (ARN) of the IAM role with the
          required permissions.

       GlueVersion -> (string)
          This value determines which version of Glue  this  machine  learning
          transform  is compatible with. Glue 1.0 is recommended for most cus-
          tomers. If the value is not set, the Glue compatibility defaults  to
          Glue  0.9.  For more information, see Glue Versions in the developer
          guide.

       MaxCapacity -> (double)
          The number of Glue data processing units (DPUs) that  are  allocated
          to  task  runs  for  this  transform. You can allocate from 2 to 100
          DPUs; the default is 10. A DPU is a relative measure  of  processing
          power that consists of 4 vCPUs of compute capacity and 16 GB of mem-
          ory. For more information, see the Glue pricing page .

          When the WorkerType field is set to a value other  than  Standard  ,
          the MaxCapacity field is set automatically and becomes read-only.

       WorkerType -> (string)
          The type of predefined worker that is allocated when this task runs.
          Accepts a value of Standard, G.1X, or G.2X.

          o For the Standard worker type, each worker provides 4 vCPU,  16  GB
            of memory and a 50GB disk, and 2 executors per worker.

          o For  the  G.1X  worker type, each worker provides 4 vCPU, 16 GB of
            memory and a 64GB disk, and 1 executor per worker.

          o For the G.2X worker type, each worker provides 8 vCPU,  32  GB  of
            memory and a 128GB disk, and 1 executor per worker.

       NumberOfWorkers -> (integer)
          The  number  of  workers  of a defined workerType that are allocated
          when this task runs.

       Timeout -> (integer)
          The timeout for a task run for this transform in  minutes.  This  is
          the  maximum  time  that  a  task run for this transform can consume
          resources before it is terminated and  enters  TIMEOUT  status.  The
          default is 2,880 minutes (48 hours).

       MaxRetries -> (integer)
          The maximum number of times to retry a task for this transform after
          a task run fails.

       TransformEncryption -> (structure)
          The encryption-at-rest settings  of  the  transform  that  apply  to
          accessing  user  data.  Machine  learning transforms can access user
          data encrypted in Amazon S3 using KMS.

          MlUserDataEncryption -> (structure)
              An MLUserDataEncryption object containing  the  encryption  mode
              and customer-provided KMS key ID.

              MlUserDataEncryptionMode -> (string)
                 The encryption mode applied to user data. Valid values are:

                 o DISABLED: encryption is disabled

                 o SSEKMS:  use  of server-side encryption with Key Management
                   Service (SSE-KMS) for user data stored in Amazon S3.

              KmsKeyId -> (string)
                 The ID for the customer-provided KMS key.

          TaskRunSecurityConfigurationName -> (string)
              The name of the security configuration.



                                                            GET-ML-TRANSFORM()
