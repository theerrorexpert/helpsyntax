GET-JOB-RUN()                                                    GET-JOB-RUN()



NAME
       get-job-run -

DESCRIPTION
       Retrieves the metadata for a given job run.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-job-run
          --job-name <value>
          --run-id <value>
          [--predecessors-included | --no-predecessors-included]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --job-name (string)
          Name of the job definition being run.

       --run-id (string)
          The ID of the job run.

       --predecessors-included | --no-predecessors-included (boolean)
          True if a list of predecessor runs should be returned.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To get information about a job run

       The  following  get-job-run  example  retrieves information about a job
       run.

          aws glue get-job-run \
              --job-name "Combine legistators data" \
              --run-id jr_012e176506505074d94d761755e5c62538ee1aad6f17d39f527e9140cf0c9a5e

       Output:

          {
              "JobRun": {
                  "Id": "jr_012e176506505074d94d761755e5c62538ee1aad6f17d39f527e9140cf0c9a5e",
                  "Attempt": 0,
                  "JobName": "Combine legistators data",
                  "StartedOn": 1602873931.255,
                  "LastModifiedOn": 1602874075.985,
                  "CompletedOn": 1602874075.985,
                  "JobRunState": "SUCCEEDED",
                  "Arguments": {
                      "--enable-continuous-cloudwatch-log": "true",
                      "--enable-metrics": "",
                      "--enable-spark-ui": "true",
                      "--job-bookmark-option": "job-bookmark-enable",
                      "--spark-event-logs-path": "s3://aws-glue-assets-111122223333-us-east-1/sparkHistoryLogs/"
                  },
                  "PredecessorRuns": [],
                  "AllocatedCapacity": 10,
                  "ExecutionTime": 117,
                  "Timeout": 2880,
                  "MaxCapacity": 10.0,
                  "WorkerType": "G.1X",
                  "NumberOfWorkers": 10,
                  "LogGroupName": "/aws-glue/jobs",
                  "GlueVersion": "2.0"
              }
          }

       For more information, see Job Runs in the AWS Glue Developer Guide.

OUTPUT
       JobRun -> (structure)
          The requested job-run metadata.

          Id -> (string)
              The ID of this job run.

          Attempt -> (integer)
              The number of the attempt to run this job.

          PreviousRunId -> (string)
              The ID of the  previous  run  of  this  job.  For  example,  the
              JobRunId specified in the StartJobRun action.

          TriggerName -> (string)
              The name of the trigger that started this job run.

          JobName -> (string)
              The name of the job definition being used in this run.

          StartedOn -> (timestamp)
              The date and time at which this job run was started.

          LastModifiedOn -> (timestamp)
              The last time that this job run was modified.

          CompletedOn -> (timestamp)
              The date and time that this job run completed.

          JobRunState -> (string)
              The current state of the job run. For more information about the
              statuses of jobs that have terminated abnormally, see  Glue  Job
              Run Statuses .

          Arguments -> (map)
              The  job  arguments  associated with this run. For this job run,
              they replace the default arguments set  in  the  job  definition
              itself.

              You  can  specify  arguments  here  that  your own job-execution
              script consumes, as well as arguments that Glue itself consumes.

              For  information  about  how to specify and consume your own job
              arguments, see the Calling Glue APIs  in  Python  topic  in  the
              developer guide.

              For  information about the key-value pairs that Glue consumes to
              set up your job, see the Special Parameters Used by  Glue  topic
              in the developer guide.

              key -> (string)

              value -> (string)

          ErrorMessage -> (string)
              An error message associated with this job run.

          PredecessorRuns -> (list)
              A list of predecessors to this job run.

              (structure)
                 A  job  run  that  was used in the predicate of a conditional
                 trigger that triggered this job run.

                 JobName -> (string)
                     The name of the job definition used  by  the  predecessor
                     job run.

                 RunId -> (string)
                     The job-run ID of the predecessor job run.

          AllocatedCapacity -> (integer)
              This field is deprecated. Use MaxCapacity instead.

              The  number  of  Glue  data processing units (DPUs) allocated to
              this JobRun. From 2 to 100 DPUs can be allocated; the default is
              10.  A  DPU  is a relative measure of processing power that con-
              sists of 4 vCPUs of compute capacity and 16 GB  of  memory.  For
              more information, see the Glue pricing page .

          ExecutionTime -> (integer)
              The  amount  of  time  (in  seconds)  that  the job run consumed
              resources.

          Timeout -> (integer)
              The JobRun timeout in minutes. This is the maximum time  that  a
              job run can consume resources before it is terminated and enters
              TIMEOUT status. The default is 2,880 minutes  (48  hours).  This
              overrides the timeout value set in the parent job.

          MaxCapacity -> (double)
              The  number  of  Glue  data  processing units (DPUs) that can be
              allocated when this job runs. A DPU is  a  relative  measure  of
              processing  power  that  consists of 4 vCPUs of compute capacity
              and 16 GB of memory. For more information, see the Glue  pricing
              page .

              Do  not set Max Capacity if using WorkerType and NumberOfWorkers
              .

              The value that can  be  allocated  for  MaxCapacity  depends  on
              whether  you  are  running a Python shell job or an Apache Spark
              ETL job:

              o When you specify a Python shell job (JobCommand.Name ="python-
                shell"),  you can allocate either 0.0625 or 1 DPU. The default
                is 0.0625 DPU.

              o When you specify an  Apache  Spark  ETL  job  (JobCommand.Name
                ="glueetl"),  you can allocate from 2 to 100 DPUs. The default
                is 10 DPUs. This job type cannot have a fractional DPU alloca-
                tion.

          WorkerType -> (string)
              The type of predefined worker that is allocated when a job runs.
              Accepts a value of Standard, G.1X, or G.2X.

              o For the Standard worker type, each worker provides 4 vCPU,  16
                GB of memory and a 50GB disk, and 2 executors per worker.

              o For  the  G.1X worker type, each worker provides 4 vCPU, 16 GB
                of memory and a 64GB disk, and 1 executor per worker.

              o For the G.2X worker type, each worker provides 8 vCPU,  32  GB
                of memory and a 128GB disk, and 1 executor per worker.

          NumberOfWorkers -> (integer)
              The number of workers of a defined workerType that are allocated
              when a job runs.

              The maximum number of workers you can define are 299 for G.1X  ,
              and 149 for G.2X .

          SecurityConfiguration -> (string)
              The  name of the SecurityConfiguration structure to be used with
              this job run.

          LogGroupName -> (string)
              The name of the  log  group  for  secure  logging  that  can  be
              server-side  encrypted in Amazon CloudWatch using KMS. This name
              can be /aws-glue/jobs/ , in which case the default encryption is
              NONE . If you add a role name and SecurityConfiguration name (in
              other words,  /aws-glue/jobs-yourRoleName-yourSecurityConfigura-
              tionName/ ), then that security configuration is used to encrypt
              the log group.

          NotificationProperty -> (structure)
              Specifies configuration properties of a job run notification.

              NotifyDelayAfter -> (integer)
                 After a job run starts, the number of minutes to wait  before
                 sending a job run delay notification.

          GlueVersion -> (string)
              Glue  version determines the versions of Apache Spark and Python
              that Glue supports. The Python  version  indicates  the  version
              supported for jobs of type Spark.

              For  more information about the available Glue versions and cor-
              responding Spark and Python versions, see Glue  version  in  the
              developer guide.

              Jobs  that are created without specifying a Glue version default
              to Glue 0.9.



                                                                 GET-JOB-RUN()
