START-JOB-RUN()                                                START-JOB-RUN()



NAME
       start-job-run -

DESCRIPTION
       Starts a job run using a job definition.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            start-job-run
          --job-name <value>
          [--job-run-id <value>]
          [--arguments <value>]
          [--allocated-capacity <value>]
          [--timeout <value>]
          [--max-capacity <value>]
          [--security-configuration <value>]
          [--notification-property <value>]
          [--worker-type <value>]
          [--number-of-workers <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --job-name (string)
          The name of the job definition to use.

       --job-run-id (string)
          The ID of a previous JobRun to retry.

       --arguments (map)
          The  job arguments specifically for this run. For this job run, they
          replace the default arguments set in the job definition itself.

          You can specify arguments here that your  own  job-execution  script
          consumes, as well as arguments that Glue itself consumes.

          For  information about how to specify and consume your own Job argu-
          ments, see the Calling Glue APIs in Python topic  in  the  developer
          guide.

          For  information about the key-value pairs that Glue consumes to set
          up your job, see the Special Parameters Used by Glue  topic  in  the
          developer guide.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --allocated-capacity (integer)
          This field is deprecated. Use MaxCapacity instead.

          The  number of Glue data processing units (DPUs) to allocate to this
          JobRun. From 2 to 100 DPUs can be allocated; the default  is  10.  A
          DPU  is  a  relative  measure of processing power that consists of 4
          vCPUs of compute capacity and 16 GB of memory. For more information,
          see the Glue pricing page .

       --timeout (integer)
          The  JobRun  timeout in minutes. This is the maximum time that a job
          run can consume resources before it is terminated and enters TIMEOUT
          status.  The default is 2,880 minutes (48 hours). This overrides the
          timeout value set in the parent job.

       --max-capacity (double)
          The number of Glue data processing units (DPUs) that  can  be  allo-
          cated  when this job runs. A DPU is a relative measure of processing
          power that consists of 4 vCPUs of compute capacity and 16 GB of mem-
          ory. For more information, see the Glue pricing page .

          Do not set Max Capacity if using WorkerType and NumberOfWorkers .

          The  value  that can be allocated for MaxCapacity depends on whether
          you are running a Python shell job, or an Apache Spark ETL job:

          o When you specify a Python  shell  job  (JobCommand.Name  ="python-
            shell"),  you  can allocate either 0.0625 or 1 DPU. The default is
            0.0625 DPU.

          o When  you  specify  an  Apache  Spark  ETL  job   (JobCommand.Name
            ="glueetl"),  you  can allocate from 2 to 100 DPUs. The default is
            10 DPUs. This job type cannot have a fractional DPU allocation.

       --security-configuration (string)
          The name of the SecurityConfiguration structure to be used with this
          job run.

       --notification-property (structure)
          Specifies configuration properties of a job run notification.

          NotifyDelayAfter -> (integer)
              After  a  job  run  starts, the number of minutes to wait before
              sending a job run delay notification.

       Shorthand Syntax:

          NotifyDelayAfter=integer

       JSON Syntax:

          {
            "NotifyDelayAfter": integer
          }

       --worker-type (string)
          The type of predefined worker that is allocated  when  a  job  runs.
          Accepts a value of Standard, G.1X, or G.2X.

          o For  the  Standard worker type, each worker provides 4 vCPU, 16 GB
            of memory and a 50GB disk, and 2 executors per worker.

          o For the G.1X worker type, each worker provides 4 vCPU,  16  GB  of
            memory and a 64GB disk, and 1 executor per worker.

          o For  the  G.2X  worker type, each worker provides 8 vCPU, 32 GB of
            memory and a 128GB disk, and 1 executor per worker.

          Possible values:

          o Standard

          o G.1X

          o G.2X

       --number-of-workers (integer)
          The number of workers of a defined  workerType  that  are  allocated
          when a job runs.

          The  maximum number of workers you can define are 299 for G.1X , and
          149 for G.2X .

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To start running a job

       The following start-job-run example starts a job.

          aws glue start-job-run \
              --job-name my-job

       Output:

          {
              "JobRunId": "jr_22208b1f44eb5376a60569d4b21dd20fcb8621e1a366b4e7b2494af764b82ded"
          }

       For more information, see Authoring Jobs  in  the  AWS  Glue  Developer
       Guide.

OUTPUT
       JobRunId -> (string)
          The ID assigned to this job run.



                                                               START-JOB-RUN()
