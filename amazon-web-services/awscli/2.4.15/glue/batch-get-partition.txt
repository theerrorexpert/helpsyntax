BATCH-GET-PARTITION()                                    BATCH-GET-PARTITION()



NAME
       batch-get-partition -

DESCRIPTION
       Retrieves partitions in a batch request.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            batch-get-partition
          [--catalog-id <value>]
          --database-name <value>
          --table-name <value>
          --partitions-to-get <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --catalog-id (string)
          The  ID of the Data Catalog where the partitions in question reside.
          If none is supplied, the Amazon Web Services account ID is  used  by
          default.

       --database-name (string)
          The name of the catalog database where the partitions reside.

       --table-name (string)
          The name of the partitions' table.

       --partitions-to-get (list)
          A list of partition values identifying the partitions to retrieve.

          (structure)
              Contains a list of values defining partitions.

              Values -> (list)
                 The list of values.

                 (string)

       Shorthand Syntax:

          Values=string,string ...

       JSON Syntax:

          [
            {
              "Values": ["string", ...]
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       Partitions -> (list)
          A list of the requested partitions.

          (structure)
              Represents a slice of table data.

              Values -> (list)
                 The values of the partition.

                 (string)

              DatabaseName -> (string)
                 The  name of the catalog database in which to create the par-
                 tition.

              TableName -> (string)
                 The name of the database table in which to create the  parti-
                 tion.

              CreationTime -> (timestamp)
                 The time at which the partition was created.

              LastAccessTime -> (timestamp)
                 The last time at which the partition was accessed.

              StorageDescriptor -> (structure)
                 Provides  information  about  the physical location where the
                 partition is stored.

                 Columns -> (list)
                     A list of the Columns in the table.

                     (structure)
                        A column in a Table .

                        Name -> (string)
                            The name of the Column .

                        Type -> (string)
                            The data type of the Column .

                        Comment -> (string)
                            A free-form text comment.

                        Parameters -> (map)
                            These key-value pairs define properties associated
                            with the column.

                            key -> (string)

                            value -> (string)

                 Location -> (string)
                     The  physical  location  of  the  table. By default, this
                     takes the form of the warehouse location, followed by the
                     database location in the warehouse, followed by the table
                     name.

                 AdditionalLocations -> (list)
                     (string)

                 InputFormat -> (string)
                     The input format:  SequenceFileInputFormat  (binary),  or
                     TextInputFormat , or a custom format.

                 OutputFormat -> (string)
                     The  output format: SequenceFileOutputFormat (binary), or
                     IgnoreKeyTextOutputFormat , or a custom format.

                 Compressed -> (boolean)
                     True if the data in the table is compressed, or False  if
                     not.

                 NumberOfBuckets -> (integer)
                     Must  be  specified  if  the table contains any dimension
                     columns.

                 SerdeInfo -> (structure)
                     The serialization/deserialization (SerDe) information.

                     Name -> (string)
                        Name of the SerDe.

                     SerializationLibrary -> (string)
                        Usually the class that implements the SerDe. An  exam-
                        ple  is  org.apache.hadoop.hive.serde2.columnar.Colum-
                        narSerDe .

                     Parameters -> (map)
                        These key-value pairs define initialization parameters
                        for the SerDe.

                        key -> (string)

                        value -> (string)

                 BucketColumns -> (list)
                     A  list  of reducer grouping columns, clustering columns,
                     and bucketing columns in the table.

                     (string)

                 SortColumns -> (list)
                     A list specifying the sort order of each  bucket  in  the
                     table.

                     (structure)
                        Specifies the sort order of a sorted column.

                        Column -> (string)
                            The name of the column.

                        SortOrder -> (integer)
                            Indicates  that  the column is sorted in ascending
                            order (== 1 ), or in descending order (==0 ).

                 Parameters -> (map)
                     The user-supplied properties in key-value form.

                     key -> (string)

                     value -> (string)

                 SkewedInfo -> (structure)
                     The information about values that appear frequently in  a
                     column (skewed values).

                     SkewedColumnNames -> (list)
                        A list of names of columns that contain skewed values.

                        (string)

                     SkewedColumnValues -> (list)
                        A list of values that appear so frequently  as  to  be
                        considered skewed.

                        (string)

                     SkewedColumnValueLocationMaps -> (map)
                        A mapping of skewed values to the columns that contain
                        them.

                        key -> (string)

                        value -> (string)

                 StoredAsSubDirectories -> (boolean)
                     True if the table data is stored  in  subdirectories,  or
                     False if not.

                 SchemaReference -> (structure)
                     An  object  that  references  a schema stored in the Glue
                     Schema Registry.

                     When creating a table, you can pass an empty list of col-
                     umns  for the schema, and instead use a schema reference.

                     SchemaId -> (structure)
                        A structure  that  contains  schema  identity  fields.
                        Either this or the SchemaVersionId has to be provided.

                        SchemaArn -> (string)
                            The Amazon Resource Name (ARN) of the schema.  One
                            of SchemaArn or SchemaName has to be provided.

                        SchemaName -> (string)
                            The name of the schema. One of SchemaArn or Schem-
                            aName has to be provided.

                        RegistryName -> (string)
                            The name of the schema registry that contains  the
                            schema.

                     SchemaVersionId -> (string)
                        The  unique  ID  assigned  to a version of the schema.
                        Either this or the SchemaId has to be provided.

                     SchemaVersionNumber -> (long)
                        The version number of the schema.

              Parameters -> (map)
                 These key-value pairs define partition parameters.

                 key -> (string)

                 value -> (string)

              LastAnalyzedTime -> (timestamp)
                 The last time at which column statistics  were  computed  for
                 this partition.

              CatalogId -> (string)
                 The ID of the Data Catalog in which the partition resides.

       UnprocessedKeys -> (list)
          A  list  of the partition values in the request for which partitions
          were not returned.

          (structure)
              Contains a list of values defining partitions.

              Values -> (list)
                 The list of values.

                 (string)



                                                         BATCH-GET-PARTITION()
