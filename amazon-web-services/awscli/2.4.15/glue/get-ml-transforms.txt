GET-ML-TRANSFORMS()                                        GET-ML-TRANSFORMS()



NAME
       get-ml-transforms -

DESCRIPTION
       Gets  a  sortable,  filterable  list  of existing Glue machine learning
       transforms. Machine learning transforms are a special type of transform
       that use machine learning to learn the details of the transformation to
       be performed by learning from examples provided by humans. These trans-
       formations  are then saved by Glue, and you can retrieve their metadata
       by calling GetMLTransforms .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-ml-transforms
          [--next-token <value>]
          [--max-results <value>]
          [--filter <value>]
          [--sort <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --next-token (string)
          A paginated token to offset the results.

       --max-results (integer)
          The maximum number of results to return.

       --filter (structure)
          The filter transformation criteria.

          Name -> (string)
              A unique transform name that  is  used  to  filter  the  machine
              learning transforms.

          TransformType -> (string)
              The  type  of  machine learning transform that is used to filter
              the machine learning transforms.

          Status -> (string)
              Filters the list of machine  learning  transforms  by  the  last
              known  status of the transforms (to indicate whether a transform
              can be used or not). One of "NOT_READY", "READY", or "DELETING".

          GlueVersion -> (string)
              This  value determines which version of Glue this machine learn-
              ing transform is compatible with. Glue 1.0  is  recommended  for
              most  customers. If the value is not set, the Glue compatibility
              defaults to Glue 0.9. For more information, see Glue Versions in
              the developer guide.

          CreatedBefore -> (timestamp)
              The time and date before which the transforms were created.

          CreatedAfter -> (timestamp)
              The time and date after which the transforms were created.

          LastModifiedBefore -> (timestamp)
              Filter on transforms last modified before this date.

          LastModifiedAfter -> (timestamp)
              Filter on transforms last modified after this date.

          Schema -> (list)
              Filters  on  datasets  with  a  specific schema. The Map<Column,
              Type> object is an array of  key-value  pairs  representing  the
              schema  this  transform  accepts,  where Column is the name of a
              column, and Type is the type of the data such as an  integer  or
              string. Has an upper bound of 100 columns.

              (structure)
                 A  key-value  pair  representing  a column and data type that
                 this transform can run against. The Schema parameter  of  the
                 MLTransform may contain up to 100 of these structures.

                 Name -> (string)
                     The name of the column.

                 DataType -> (string)
                     The type of data in the column.

       Shorthand Syntax:

          Name=string,TransformType=string,Status=string,GlueVersion=string,CreatedBefore=timestamp,CreatedAfter=timestamp,LastModifiedBefore=timestamp,LastModifiedAfter=timestamp,Schema=[{Name=string,DataType=string},{Name=string,DataType=string}]

       JSON Syntax:

          {
            "Name": "string",
            "TransformType": "FIND_MATCHES",
            "Status": "NOT_READY"|"READY"|"DELETING",
            "GlueVersion": "string",
            "CreatedBefore": timestamp,
            "CreatedAfter": timestamp,
            "LastModifiedBefore": timestamp,
            "LastModifiedAfter": timestamp,
            "Schema": [
              {
                "Name": "string",
                "DataType": "string"
              }
              ...
            ]
          }

       --sort (structure)
          The sorting criteria.

          Column -> (string)
              The  column  to be used in the sorting criteria that are associ-
              ated with the machine learning transform.

          SortDirection -> (string)
              The sort direction to be used in the sorting criteria  that  are
              associated with the machine learning transform.

       Shorthand Syntax:

          Column=string,SortDirection=string

       JSON Syntax:

          {
            "Column": "NAME"|"TRANSFORM_TYPE"|"STATUS"|"CREATED"|"LAST_MODIFIED",
            "SortDirection": "DESCENDING"|"ASCENDING"
          }

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       Transforms -> (list)
          A list of machine learning transforms.

          (structure)
              A structure for a machine learning transform.

              TransformId -> (string)
                 The  unique  transform  ID  that is generated for the machine
                 learning transform. The ID is guaranteed  to  be  unique  and
                 does not change.

              Name -> (string)
                 A user-defined name for the machine learning transform. Names
                 are not guaranteed unique and can be changed at any time.

              Description -> (string)
                 A user-defined, long-form description text  for  the  machine
                 learning  transform.  Descriptions  are  not guaranteed to be
                 unique and can be changed at any time.

              Status -> (string)
                 The current status of the machine learning transform.

              CreatedOn -> (timestamp)
                 A timestamp. The time and date  that  this  machine  learning
                 transform was created.

              LastModifiedOn -> (timestamp)
                 A  timestamp. The last point in time when this machine learn-
                 ing transform was modified.

              InputRecordTables -> (list)
                 A list of Glue table definitions used by the transform.

                 (structure)
                     The database and table in the Glue Data Catalog  that  is
                     used for input or output data.

                     DatabaseName -> (string)
                        A database name in the Glue Data Catalog.

                     TableName -> (string)
                        A table name in the Glue Data Catalog.

                     CatalogId -> (string)
                        A unique identifier for the Glue Data Catalog.

                     ConnectionName -> (string)
                        The name of the connection to the Glue Data Catalog.

              Parameters -> (structure)
                 A  TransformParameters object. You can use parameters to tune
                 (customize) the behavior of the machine learning transform by
                 specifying  what  data  it learns from and your preference on
                 various tradeoffs (such as precious vs. recall,  or  accuracy
                 vs. cost).

                 TransformType -> (string)
                     The type of machine learning transform.

                     For  information  about  the  types  of  machine learning
                     transforms, see Creating Machine Learning Transforms .

                 FindMatchesParameters -> (structure)
                     The parameters for the find matches algorithm.

                     PrimaryKeyColumnName -> (string)
                        The name of a column that uniquely identifies rows  in
                        the  source  table.  Used  to  help  identify matching
                        records.

                     PrecisionRecallTradeoff -> (double)
                        The value selected when tuning your  transform  for  a
                        balance  between  precision and recall. A value of 0.5
                        means no preference; a  value  of  1.0  means  a  bias
                        purely  for precision, and a value of 0.0 means a bias
                        for recall. Because this is a tradeoff, choosing  val-
                        ues  close  to 1.0 means very low recall, and choosing
                        values close to 0.0 results in very low precision.

                        The precision metric indicates how often your model is
                        correct when it predicts a match.

                        The  recall metric indicates that for an actual match,
                        how often your model predicts the match.

                     AccuracyCostTradeoff -> (double)
                        The value that is selected when tuning your  transform
                        for  a  balance  between accuracy and cost. A value of
                        0.5 means that the system balances accuracy  and  cost
                        concerns. A value of 1.0 means a bias purely for accu-
                        racy, which typically results in a higher cost,  some-
                        times  substantially  higher.  A  value of 0.0 means a
                        bias purely for cost, which results in a less accurate
                        FindMatches  transform,  sometimes  with  unacceptable
                        accuracy.

                        Accuracy measures how well the  transform  finds  true
                        positives  and  true  negatives.  Increasing  accuracy
                        requires more machine resources and cost. But it  also
                        results in increased recall.

                        Cost  measures  how  many  compute resources, and thus
                        money, are consumed to run the transform.

                     EnforceProvidedLabels -> (boolean)
                        The value to switch on or off to force the  output  to
                        match  the provided labels from users. If the value is
                        True , the find matches transform forces the output to
                        match  the  provided  labels. The results override the
                        normal conflation results. If the value is False , the
                        find  matches transform does not ensure all the labels
                        provided are respected, and the results  rely  on  the
                        trained model.

                        Note  that setting this value to true may increase the
                        conflation execution time.

              EvaluationMetrics -> (structure)
                 An EvaluationMetrics object. Evaluation  metrics  provide  an
                 estimate of the quality of your machine learning transform.

                 TransformType -> (string)
                     The type of machine learning transform.

                 FindMatchesMetrics -> (structure)
                     The evaluation metrics for the find matches algorithm.

                     AreaUnderPRCurve -> (double)
                        The area under the precision/recall curve (AUPRC) is a
                        single number measuring the  overall  quality  of  the
                        transform,  that is independent of the choice made for
                        precision vs. recall. Higher values indicate that  you
                        have  a more attractive precision vs. recall tradeoff.

                        For more information,  see  Precision  and  recall  in
                        Wikipedia.

                     Precision -> (double)
                        The  precision metric indicates when often your trans-
                        form is correct when it  predicts  a  match.  Specifi-
                        cally,  it  measures how well the transform finds true
                        positives from the total true positives possible.

                        For more information,  see  Precision  and  recall  in
                        Wikipedia.

                     Recall -> (double)
                        The  recall metric indicates that for an actual match,
                        how often your transform predicts the match.  Specifi-
                        cally,  it  measures how well the transform finds true
                        positives from the total records in the source data.

                        For more information,  see  Precision  and  recall  in
                        Wikipedia.

                     F1 -> (double)
                        The  maximum F1 metric indicates the transform's accu-
                        racy between 0 and 1, where 1 is the best accuracy.

                        For more information, see F1 score in Wikipedia.

                     ConfusionMatrix -> (structure)
                        The confusion matrix shows you what your transform  is
                        predicting  accurately  and what types of errors it is
                        making.

                        For  more  information,  see   Confusion   matrix   in
                        Wikipedia.

                        NumTruePositives -> (long)
                            The  number of matches in the data that the trans-
                            form correctly found, in the confusion matrix  for
                            your transform.

                        NumFalsePositives -> (long)
                            The  number  of  nonmatches  in  the data that the
                            transform incorrectly classified as  a  match,  in
                            the confusion matrix for your transform.

                        NumTrueNegatives -> (long)
                            The  number  of  nonmatches  in  the data that the
                            transform correctly  rejected,  in  the  confusion
                            matrix for your transform.

                        NumFalseNegatives -> (long)
                            The  number of matches in the data that the trans-
                            form didn't find, in the confusion matrix for your
                            transform.

                     ColumnImportances -> (list)
                        A  list of ColumnImportance structures containing col-
                        umn importance metrics, sorted in order of  descending
                        importance.

                        (structure)
                            A  structure containing the column name and column
                            importance score for a column.

                            Column importance helps you understand how columns
                            contribute  to  your  model,  by identifying which
                            columns in your records are  more  important  than
                            others.

                            ColumnName -> (string)
                               The name of a column.

                            Importance -> (double)
                               The  column importance score for the column, as
                               a decimal.

              LabelCount -> (integer)
                 A count identifier for the labeling files generated  by  Glue
                 for this transform. As you create a better transform, you can
                 iteratively download, label, and upload the labeling file.

              Schema -> (list)
                 A map of key-value pairs representing the  columns  and  data
                 types that this transform can run against. Has an upper bound
                 of 100 columns.

                 (structure)
                     A key-value pair representing a column and data type that
                     this  transform  can run against. The Schema parameter of
                     the MLTransform may contain up to  100  of  these  struc-
                     tures.

                     Name -> (string)
                        The name of the column.

                     DataType -> (string)
                        The type of data in the column.

              Role -> (string)
                 The  name  or Amazon Resource Name (ARN) of the IAM role with
                 the required permissions. The  required  permissions  include
                 both  Glue  service  role  permissions to Glue resources, and
                 Amazon S3 permissions required by the transform.

                 o This role needs Glue  service  role  permissions  to  allow
                   access  to  resources  in  Glue. See Attach a Policy to IAM
                   Users That Access Glue .

                 o This role needs permission to your  Amazon  Simple  Storage
                   Service  (Amazon S3) sources, targets, temporary directory,
                   scripts, and any libraries used by the task  run  for  this
                   transform.

              GlueVersion -> (string)
                 This  value  determines  which  version  of Glue this machine
                 learning transform is compatible with.  Glue  1.0  is  recom-
                 mended  for most customers. If the value is not set, the Glue
                 compatibility defaults to Glue 0.9. For more information, see
                 Glue Versions in the developer guide.

              MaxCapacity -> (double)
                 The  number  of  Glue  data  processing units (DPUs) that are
                 allocated to task runs for this transform. You  can  allocate
                 from  2  to  100 DPUs; the default is 10. A DPU is a relative
                 measure of processing power that consists of 4 vCPUs of  com-
                 pute  capacity and 16 GB of memory. For more information, see
                 the Glue pricing page .
                     MaxCapacity is a mutually exclusive option with NumberOf-
                     Workers and WorkerType .

                 o If either NumberOfWorkers or WorkerType is set, then MaxCa-
                   pacity cannot be set.

                 o If MaxCapacity is set then neither NumberOfWorkers or Work-
                   erType can be set.

                 o If WorkerType is set, then NumberOfWorkers is required (and
                   vice versa).

                 o MaxCapacity and NumberOfWorkers must both be at least 1.

                 When the WorkerType field is set to a value other than  Stan-
                 dard , the MaxCapacity field is set automatically and becomes
                 read-only.

              WorkerType -> (string)
                 The type of predefined worker that is allocated when  a  task
                 of this transform runs. Accepts a value of Standard, G.1X, or
                 G.2X.

                 o For the Standard worker type, each worker provides 4  vCPU,
                   16  GB  of  memory  and  a  50GB  disk, and 2 executors per
                   worker.

                 o For the G.1X worker type, each worker provides 4  vCPU,  16
                   GB of memory and a 64GB disk, and 1 executor per worker.

                 o For  the  G.2X worker type, each worker provides 8 vCPU, 32
                   GB of memory and a 128GB disk, and 1 executor per worker.
                     MaxCapacity is a mutually exclusive option with NumberOf-
                     Workers and WorkerType .

                 o If either NumberOfWorkers or WorkerType is set, then MaxCa-
                   pacity cannot be set.

                 o If MaxCapacity is set then neither NumberOfWorkers or Work-
                   erType can be set.

                 o If WorkerType is set, then NumberOfWorkers is required (and
                   vice versa).

                 o MaxCapacity and NumberOfWorkers must both be at least 1.

              NumberOfWorkers -> (integer)
                 The number of workers of a defined workerType that are  allo-
                 cated when a task of the transform runs.

                 If  WorkerType  is set, then NumberOfWorkers is required (and
                 vice versa).

              Timeout -> (integer)
                 The timeout in minutes of the machine learning transform.

              MaxRetries -> (integer)
                 The maximum number of times to retry after  an  MLTaskRun  of
                 the machine learning transform fails.

              TransformEncryption -> (structure)
                 The  encryption-at-rest  settings of the transform that apply
                 to accessing  user  data.  Machine  learning  transforms  can
                 access user data encrypted in Amazon S3 using KMS.

                 MlUserDataEncryption -> (structure)
                     An  MLUserDataEncryption object containing the encryption
                     mode and customer-provided KMS key ID.

                     MlUserDataEncryptionMode -> (string)
                        The encryption mode applied to user data. Valid values
                        are:

                        o DISABLED: encryption is disabled

                        o SSEKMS:  use of server-side encryption with Key Man-
                          agement Service (SSE-KMS) for user  data  stored  in
                          Amazon S3.

                     KmsKeyId -> (string)
                        The ID for the customer-provided KMS key.

                 TaskRunSecurityConfigurationName -> (string)
                     The name of the security configuration.

       NextToken -> (string)
          A pagination token, if more results are available.



                                                           GET-ML-TRANSFORMS()
