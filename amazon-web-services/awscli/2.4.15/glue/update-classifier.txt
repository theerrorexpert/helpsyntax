UPDATE-CLASSIFIER()                                        UPDATE-CLASSIFIER()



NAME
       update-classifier -

DESCRIPTION
       Modifies  an existing classifier (a GrokClassifier , an XMLClassifier ,
       a JsonClassifier , or a CsvClassifier , depending  on  which  field  is
       present).

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            update-classifier
          [--grok-classifier <value>]
          [--xml-classifier <value>]
          [--json-classifier <value>]
          [--csv-classifier <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --grok-classifier (structure)
          A GrokClassifier object with updated fields.

          Name -> (string)
              The name of the GrokClassifier .

          Classification -> (string)
              An  identifier  of  the data format that the classifier matches,
              such as Twitter, JSON, Omniture logs,  Amazon  CloudWatch  Logs,
              and so on.

          GrokPattern -> (string)
              The grok pattern used by this classifier.

          CustomPatterns -> (string)
              Optional custom grok patterns used by this classifier.

       Shorthand Syntax:

          Name=string,Classification=string,GrokPattern=string,CustomPatterns=string

       JSON Syntax:

          {
            "Name": "string",
            "Classification": "string",
            "GrokPattern": "string",
            "CustomPatterns": "string"
          }

       --xml-classifier (structure)
          An XMLClassifier object with updated fields.

          Name -> (string)
              The name of the classifier.

          Classification -> (string)
              An identifier of the data format that the classifier matches.

          RowTag -> (string)
              The XML tag designating the element that contains each record in
              an XML document being parsed. This cannot identify a  self-clos-
              ing  element (closed by /> ). An empty row element that contains
              only attributes can be parsed as long as it ends with a  closing
              tag (for example, <row item_a="A" item_b="B"></row> is okay, but
              <row item_a="A" item_b="B" /> is not).

       Shorthand Syntax:

          Name=string,Classification=string,RowTag=string

       JSON Syntax:

          {
            "Name": "string",
            "Classification": "string",
            "RowTag": "string"
          }

       --json-classifier (structure)
          A JsonClassifier object with updated fields.

          Name -> (string)
              The name of the classifier.

          JsonPath -> (string)
              A JsonPath string defining the JSON data for the  classifier  to
              classify.  Glue  supports  a subset of JsonPath, as described in
              Writing JsonPath Custom Classifiers .

       Shorthand Syntax:

          Name=string,JsonPath=string

       JSON Syntax:

          {
            "Name": "string",
            "JsonPath": "string"
          }

       --csv-classifier (structure)
          A CsvClassifier object with updated fields.

          Name -> (string)
              The name of the classifier.

          Delimiter -> (string)
              A custom symbol to denote what separates each  column  entry  in
              the row.

          QuoteSymbol -> (string)
              A  custom  symbol  to denote what combines content into a single
              column value. It must be different from the column delimiter.

          ContainsHeader -> (string)
              Indicates whether the CSV file contains a header.

          Header -> (list)
              A list of strings representing column names.

              (string)

          DisableValueTrimming -> (boolean)
              Specifies not to trim values before identifying the type of col-
              umn values. The default value is true.

          AllowSingleColumn -> (boolean)
              Enables the processing of files that contain only one column.

       Shorthand Syntax:

          Name=string,Delimiter=string,QuoteSymbol=string,ContainsHeader=string,Header=string,string,DisableValueTrimming=boolean,AllowSingleColumn=boolean

       JSON Syntax:

          {
            "Name": "string",
            "Delimiter": "string",
            "QuoteSymbol": "string",
            "ContainsHeader": "UNKNOWN"|"PRESENT"|"ABSENT",
            "Header": ["string", ...],
            "DisableValueTrimming": true|false,
            "AllowSingleColumn": true|false
          }

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       None



                                                           UPDATE-CLASSIFIER()
