CREATE-PROJECT()                                              CREATE-PROJECT()



NAME
       create-project -

DESCRIPTION
       Creates a build project.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-project
          --name <value>
          [--description <value>]
          --source <value>
          [--secondary-sources <value>]
          [--source-version <value>]
          [--secondary-source-versions <value>]
          --artifacts <value>
          [--secondary-artifacts <value>]
          [--cache <value>]
          --environment <value>
          --service-role <value>
          [--timeout-in-minutes <value>]
          [--queued-timeout-in-minutes <value>]
          [--encryption-key <value>]
          [--tags <value>]
          [--vpc-config <value>]
          [--badge-enabled | --no-badge-enabled]
          [--logs-config <value>]
          [--file-system-locations <value>]
          [--build-batch-config <value>]
          [--concurrent-build-limit <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --name (string)
          The name of the build project.

       --description (string)
          A description that makes the build project easy to identify.

       --source (structure)
          Information about the build input source code for the build project.

          type -> (string)
              The type of repository that  contains  the  source  code  to  be
              built. Valid values include:

              o BITBUCKET : The source code is in a Bitbucket repository.

              o CODECOMMIT : The source code is in an CodeCommit repository.

              o CODEPIPELINE  :  The source code settings are specified in the
                source action of a pipeline in CodePipeline.

              o GITHUB : The source code is in a GitHub or  GitHub  Enterprise
                Cloud repository.

              o GITHUB_ENTERPRISE  : The source code is in a GitHub Enterprise
                Server repository.

              o NO_SOURCE : The project does not have input source code.

              o S3 : The source code is in an Amazon S3 bucket.

          location -> (string)
              Information about the location of the source code to  be  built.
              Valid values include:

              o For  source  code  settings  that  are specified in the source
                action of a pipeline in CodePipeline, location should  not  be
                specified.  If  it is specified, CodePipeline ignores it. This
                is because CodePipeline uses  the  settings  in  a  pipeline's
                source action instead of this value.

              o For  source  code in an CodeCommit repository, the HTTPS clone
                URL to the repository that contains the source  code  and  the
                buildspec     file    (for    example,    https://git-codecom-
                mit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).

              o For source code in an Amazon S3 input bucket, one of the  fol-
                lowing.

                o The  path to the ZIP file that contains the source code (for
                  example, <bucket-name>/<path>/<object-name>.zip ).

                o The path to the folder that contains the  source  code  (for
                  example, <bucket-name>/<path-to-source-code>/<folder>/ ).

              o For source code in a GitHub repository, the HTTPS clone URL to
                the repository that contains  the  source  and  the  buildspec
                file.  You  must  connect  your Amazon Web Services account to
                your GitHub account. Use the CodeBuild console to start creat-
                ing  a  build project. When you use the console to connect (or
                reconnect) with GitHub, on the  GitHub  Authorize  application
                page,  for Organization access , choose Request access next to
                each repository you want to allow CodeBuild to have access to,
                and  then  choose Authorize application . (After you have con-
                nected to your GitHub account, you do not need to finish  cre-
                ating the build project. You can leave the CodeBuild console.)
                To instruct CodeBuild to use this connection,  in  the  source
                object, set the auth object's type value to OAUTH .

              o For source code in a Bitbucket repository, the HTTPS clone URL
                to the repository that contains the source and  the  buildspec
                file.  You  must  connect  your Amazon Web Services account to
                your Bitbucket account. Use the  CodeBuild  console  to  start
                creating  a build project. When you use the console to connect
                (or reconnect) with Bitbucket, on the Bitbucket Confirm access
                to  your  account  page, choose Grant access . (After you have
                connected to your Bitbucket account, you do not need to finish
                creating  the  build project. You can leave the CodeBuild con-
                sole.) To instruct CodeBuild to use this  connection,  in  the
                source object, set the auth object's type value to OAUTH .

              If you specify CODEPIPELINE for the Type property, don't specify
              this property. For all of the  other  types,  you  must  specify
              Location .

          gitCloneDepth -> (integer)
              Information about the Git clone depth for the build project.

          gitSubmodulesConfig -> (structure)
              Information about the Git submodules configuration for the build
              project.

              fetchSubmodules -> (boolean)
                 Set to true to fetch Git submodules for your CodeBuild  build
                 project.

          buildspec -> (string)
              The  buildspec  file  declaration  to use for the builds in this
              build project.

              If this value is set, it can be either an inline buildspec defi-
              nition,  the path to an alternate buildspec file relative to the
              value of the built-in CODEBUILD_SRC_DIR environment variable, or
              the  path to an S3 bucket. The bucket must be in the same Amazon
              Web Services Region as the build project. Specify the  buildspec
              file  using its ARN (for example, arn:aws:s3:::my-codebuild-sam-
              ple2/buildspec.yml ). If this value is not provided or is set to
              an  empty  string, the source code must contain a buildspec file
              in its root directory. For more information, see Buildspec  File
              Name and Storage Location .

          auth -> (structure)
              Information  about  the  authorization settings for CodeBuild to
              access the source code to be built.

              This information is for the CodeBuild console's use  only.  Your
              code should not get or set this information directly.

              type -> (string)

                 NOTE:
                     This data type is deprecated and is no longer accurate or
                     used.

                 The authorization type to use. The only valid value is  OAUTH
                 , which represents the OAuth authorization type.

              resource -> (string)
                 The  resource  value that applies to the specified authoriza-
                 tion type.

          reportBuildStatus -> (boolean)
              Set to true to report the status of a build's start  and  finish
              to  your  source  provider.  This option is valid only when your
              source provider is GitHub, GitHub Enterprise, or  Bitbucket.  If
              this is set and you use a different source provider, an invalid-
              InputException is thrown.

              To be able to report the build status to  the  source  provider,
              the  user  associated  with  the source provider must have write
              access to the repo. If the user does not have write access,  the
              build status cannot be updated. For more information, see Source
              provider access in the CodeBuild User Guide .

              The status of a build triggered by a webhook is always  reported
              to your source provider.

              If  your  project's  builds are triggered by a webhook, you must
              push a new commit to the repo for a change to this  property  to
              take effect.

          buildStatusConfig -> (structure)
              Contains  information that defines how the build project reports
              the build status to the source provider.  This  option  is  only
              used when the source provider is GITHUB , GITHUB_ENTERPRISE , or
              BITBUCKET .

              context -> (string)
                 Specifies the context of the build status CodeBuild sends  to
                 the  source  provider. The usage of this parameter depends on
                 the source provider.
                     Bitbucket

                 This parameter is used for the name  parameter  in  the  Bit-
                 bucket  commit status. For more information, see build in the
                 Bitbucket API documentation.
                     GitHub/GitHub Enterprise Server

                 This parameter is used  for  the  context  parameter  in  the
                 GitHub commit status. For more information, see Create a com-
                 mit status in the GitHub developer guide.

              targetUrl -> (string)
                 Specifies the target url of the build status CodeBuild  sends
                 to  the  source provider. The usage of this parameter depends
                 on the source provider.
                     Bitbucket

                 This parameter is used for the url parameter in the Bitbucket
                 commit  status.  For  more information, see build in the Bit-
                 bucket API documentation.
                     GitHub/GitHub Enterprise Server

                 This parameter is used for the target_url  parameter  in  the
                 GitHub commit status. For more information, see Create a com-
                 mit status in the GitHub developer guide.

          insecureSsl -> (boolean)
              Enable this flag to ignore SSL warnings while connecting to  the
              project source code.

          sourceIdentifier -> (string)
              An  identifier  for this project source. The identifier can only
              contain alphanumeric characters and  underscores,  and  must  be
              less than 128 characters in length.

       Shorthand Syntax:

          type=string,location=string,gitCloneDepth=integer,gitSubmodulesConfig={fetchSubmodules=boolean},buildspec=string,auth={type=string,resource=string},reportBuildStatus=boolean,buildStatusConfig={context=string,targetUrl=string},insecureSsl=boolean,sourceIdentifier=string

       JSON Syntax:

          {
            "type": "CODECOMMIT"|"CODEPIPELINE"|"GITHUB"|"S3"|"BITBUCKET"|"GITHUB_ENTERPRISE"|"NO_SOURCE",
            "location": "string",
            "gitCloneDepth": integer,
            "gitSubmodulesConfig": {
              "fetchSubmodules": true|false
            },
            "buildspec": "string",
            "auth": {
              "type": "OAUTH",
              "resource": "string"
            },
            "reportBuildStatus": true|false,
            "buildStatusConfig": {
              "context": "string",
              "targetUrl": "string"
            },
            "insecureSsl": true|false,
            "sourceIdentifier": "string"
          }

       --secondary-sources (list)
          An array of ProjectSource objects.

          (structure)
              Information  about  the  build  input  source code for the build
              project.

              type -> (string)
                 The type of repository that contains the source  code  to  be
                 built. Valid values include:

                 o BITBUCKET : The source code is in a Bitbucket repository.

                 o CODECOMMIT  :  The  source code is in an CodeCommit reposi-
                   tory.

                 o CODEPIPELINE : The source code settings  are  specified  in
                   the source action of a pipeline in CodePipeline.

                 o GITHUB  :  The  source code is in a GitHub or GitHub Enter-
                   prise Cloud repository.

                 o GITHUB_ENTERPRISE : The source code is in a  GitHub  Enter-
                   prise Server repository.

                 o NO_SOURCE : The project does not have input source code.

                 o S3 : The source code is in an Amazon S3 bucket.

              location -> (string)
                 Information  about  the  location  of  the  source code to be
                 built. Valid values include:

                 o For source code settings that are specified in  the  source
                   action  of  a pipeline in CodePipeline, location should not
                   be specified. If it is specified, CodePipeline ignores  it.
                   This  is  because CodePipeline uses the settings in a pipe-
                   line's source action instead of this value.

                 o For source code in  an  CodeCommit  repository,  the  HTTPS
                   clone  URL  to the repository that contains the source code
                   and the buildspec file (for  example,  https://git-codecom-
                   mit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).

                 o For  source  code  in an Amazon S3 input bucket, one of the
                   following.

                   o The path to the ZIP file that contains  the  source  code
                     (for example, <bucket-name>/<path>/<object-name>.zip ).

                   o The path to the folder that contains the source code (for
                     example, <bucket-name>/<path-to-source-code>/<folder>/ ).

                 o For source code in a GitHub repository, the HTTPS clone URL
                   to the repository that contains the source and  the  build-
                   spec  file.  You  must  connect  your  Amazon  Web Services
                   account to your GitHub account. Use the  CodeBuild  console
                   to start creating a build project. When you use the console
                   to connect (or reconnect) with GitHub, on the GitHub Autho-
                   rize  application  page,  for  Organization access , choose
                   Request access next to each repository you  want  to  allow
                   CodeBuild  to  have  access  to,  and then choose Authorize
                   application . (After you  have  connected  to  your  GitHub
                   account,  you  do  not  need  to  finish creating the build
                   project. You can leave the CodeBuild console.) To  instruct
                   CodeBuild to use this connection, in the source object, set
                   the auth object's type value to OAUTH .

                 o For source code in a Bitbucket repository, the HTTPS  clone
                   URL  to  the  repository  that  contains the source and the
                   buildspec file. You must connect your Amazon  Web  Services
                   account  to  your Bitbucket account. Use the CodeBuild con-
                   sole to start creating a build project. When  you  use  the
                   console  to  connect  (or reconnect) with Bitbucket, on the
                   Bitbucket Confirm access to your account page, choose Grant
                   access  .  (After  you  have  connected  to  your Bitbucket
                   account, you do not  need  to  finish  creating  the  build
                   project.  You can leave the CodeBuild console.) To instruct
                   CodeBuild to use this connection, in the source object, set
                   the auth object's type value to OAUTH .

                 If  you  specify  CODEPIPELINE  for  the Type property, don't
                 specify this property. For all of the other types,  you  must
                 specify Location .

              gitCloneDepth -> (integer)
                 Information  about the Git clone depth for the build project.

              gitSubmodulesConfig -> (structure)
                 Information about the Git submodules  configuration  for  the
                 build project.

                 fetchSubmodules -> (boolean)
                     Set  to  true  to fetch Git submodules for your CodeBuild
                     build project.

              buildspec -> (string)
                 The buildspec file declaration to use for the builds in  this
                 build project.

                 If  this  value  is set, it can be either an inline buildspec
                 definition, the path to an alternate buildspec file  relative
                 to  the  value  of the built-in CODEBUILD_SRC_DIR environment
                 variable, or the path to an S3 bucket. The bucket must be  in
                 the  same  Amazon  Web  Services Region as the build project.
                 Specify the  buildspec  file  using  its  ARN  (for  example,
                 arn:aws:s3:::my-codebuild-sample2/buildspec.yml  ).  If  this
                 value is not provided or is  set  to  an  empty  string,  the
                 source  code must contain a buildspec file in its root direc-
                 tory. For more information, see Buildspec File Name and Stor-
                 age Location .

              auth -> (structure)
                 Information about the authorization settings for CodeBuild to
                 access the source code to be built.

                 This information is for the  CodeBuild  console's  use  only.
                 Your code should not get or set this information directly.

                 type -> (string)

                     NOTE:
                        This data type is deprecated and is no longer accurate
                        or used.

                     The authorization type to use. The only  valid  value  is
                     OAUTH , which represents the OAuth authorization type.

                 resource -> (string)
                     The  resource  value that applies to the specified autho-
                     rization type.

              reportBuildStatus -> (boolean)
                 Set to true to report the status of a build's start and  fin-
                 ish  to  your source provider. This option is valid only when
                 your source provider is GitHub, GitHub  Enterprise,  or  Bit-
                 bucket.  If  this  is  set  and  you  use  a different source
                 provider, an invalidInputException is thrown.

                 To be able to report the build status to the source provider,
                 the  user associated with the source provider must have write
                 access to the repo. If the user does not have  write  access,
                 the build status cannot be updated. For more information, see
                 Source provider access in the CodeBuild User Guide .

                 The status of a  build  triggered  by  a  webhook  is  always
                 reported to your source provider.

                 If your project's builds are triggered by a webhook, you must
                 push a new commit to the repo for a change to  this  property
                 to take effect.

              buildStatusConfig -> (structure)
                 Contains  information  that  defines  how  the  build project
                 reports the build status to the source provider. This  option
                 is   only   used   when  the  source  provider  is  GITHUB  ,
                 GITHUB_ENTERPRISE , or BITBUCKET .

                 context -> (string)
                     Specifies the context of the build status CodeBuild sends
                     to  the  source  provider.  The  usage  of this parameter
                     depends on the source provider.
                        Bitbucket

                     This parameter is used for the name parameter in the Bit-
                     bucket  commit status. For more information, see build in
                     the Bitbucket API documentation.
                        GitHub/GitHub Enterprise Server

                     This parameter is used for the context parameter  in  the
                     GitHub  commit status. For more information, see Create a
                     commit status in the GitHub developer guide.

                 targetUrl -> (string)
                     Specifies the target url of the  build  status  CodeBuild
                     sends to the source provider. The usage of this parameter
                     depends on the source provider.
                        Bitbucket

                     This parameter is used for the url parameter in the  Bit-
                     bucket  commit status. For more information, see build in
                     the Bitbucket API documentation.
                        GitHub/GitHub Enterprise Server

                     This parameter is used for the  target_url  parameter  in
                     the  GitHub  commit  status.  For  more  information, see
                     Create a commit status in the GitHub developer guide.

              insecureSsl -> (boolean)
                 Enable this flag to ignore SSL warnings while  connecting  to
                 the project source code.

              sourceIdentifier -> (string)
                 An  identifier  for  this  project source. The identifier can
                 only contain alphanumeric  characters  and  underscores,  and
                 must be less than 128 characters in length.

       Shorthand Syntax:

          type=string,location=string,gitCloneDepth=integer,gitSubmodulesConfig={fetchSubmodules=boolean},buildspec=string,auth={type=string,resource=string},reportBuildStatus=boolean,buildStatusConfig={context=string,targetUrl=string},insecureSsl=boolean,sourceIdentifier=string ...

       JSON Syntax:

          [
            {
              "type": "CODECOMMIT"|"CODEPIPELINE"|"GITHUB"|"S3"|"BITBUCKET"|"GITHUB_ENTERPRISE"|"NO_SOURCE",
              "location": "string",
              "gitCloneDepth": integer,
              "gitSubmodulesConfig": {
                "fetchSubmodules": true|false
              },
              "buildspec": "string",
              "auth": {
                "type": "OAUTH",
                "resource": "string"
              },
              "reportBuildStatus": true|false,
              "buildStatusConfig": {
                "context": "string",
                "targetUrl": "string"
              },
              "insecureSsl": true|false,
              "sourceIdentifier": "string"
            }
            ...
          ]

       --source-version (string)
          A  version  of  the build input to be built for this project. If not
          specified, the latest version is used. If specified, it must be  one
          of:

          o For CodeCommit: the commit ID, branch, or Git tag to use.

          o For  GitHub:  the  commit ID, pull request ID, branch name, or tag
            name that corresponds to the version of the source code  you  want
            to  build. If a pull request ID is specified, it must use the for-
            mat pr/pull-request-ID (for example pr/25 ). If a branch  name  is
            specified,  the branch's HEAD commit ID is used. If not specified,
            the default branch's HEAD commit ID is used.

          o For Bitbucket: the commit ID, branch name, or tag name that corre-
            sponds  to  the version of the source code you want to build. If a
            branch name is specified, the branch's HEAD commit ID is used.  If
            not specified, the default branch's HEAD commit ID is used.

          o For  Amazon  S3:  the version ID of the object that represents the
            build input ZIP file to use.

          If sourceVersion is specified at the build level, then that  version
          takes precedence over this sourceVersion (at the project level).

          For  more  information,  see Source Version Sample with CodeBuild in
          the CodeBuild User Guide .

       --secondary-source-versions (list)
          An array of ProjectSourceVersion objects. If secondarySourceVersions
          is  specified  at  the  build  level, then they take precedence over
          these secondarySourceVersions (at the project level).

          (structure)
              A source identifier and its corresponding version.

              sourceIdentifier -> (string)
                 An identifier for a source in the build project. The  identi-
                 fier  can  only  contain  alphanumeric  characters and under-
                 scores, and must be less than 128 characters in length.

              sourceVersion -> (string)
                 The source version for the corresponding  source  identifier.
                 If specified, must be one of:

                 o For CodeCommit: the commit ID, branch, or Git tag to use.

                 o For GitHub: the commit ID, pull request ID, branch name, or
                   tag name that corresponds to the version of the source code
                   you  want  to  build. If a pull request ID is specified, it
                   must use the format pr/pull-request-ID (for example,  pr/25
                   ).  If a branch name is specified, the branch's HEAD commit
                   ID is used. If not specified,  the  default  branch's  HEAD
                   commit ID is used.

                 o For Bitbucket: the commit ID, branch name, or tag name that
                   corresponds to the version of the source code you  want  to
                   build.  If  a  branch  name is specified, the branch's HEAD
                   commit ID is used. If not specified, the  default  branch's
                   HEAD commit ID is used.

                 o For Amazon S3: the version ID of the object that represents
                   the build input ZIP file to use.

                 For more information, see Source Version  Sample  with  Code-
                 Build in the CodeBuild User Guide .

       Shorthand Syntax:

          sourceIdentifier=string,sourceVersion=string ...

       JSON Syntax:

          [
            {
              "sourceIdentifier": "string",
              "sourceVersion": "string"
            }
            ...
          ]

       --artifacts (structure)
          Information  about the build output artifacts for the build project.

          type -> (string)
              The type of build output artifact. Valid values include:

              o CODEPIPELINE : The build project has  build  output  generated
                through CodePipeline.

              NOTE:
                 The CODEPIPELINE type is not supported for secondaryArtifacts
                 .

              o NO_ARTIFACTS : The build project does not  produce  any  build
                output.

              o S3 : The build project stores build output in Amazon S3.

          location -> (string)
              Information about the build output artifact location:

              o If  type  is  set  to CODEPIPELINE , CodePipeline ignores this
                value if specified. This is because CodePipeline  manages  its
                build output locations instead of CodeBuild.

              o If  type  is  set  to  NO_ARTIFACTS , this value is ignored if
                specified, because no build output is produced.

              o If type is set to S3 , this is the name of the output  bucket.

          path -> (string)
              Along  with  namespaceType and name , the pattern that CodeBuild
              uses to name and store the output artifact:

              o If type is set to CODEPIPELINE  ,  CodePipeline  ignores  this
                value  if  specified. This is because CodePipeline manages its
                build output names instead of CodeBuild.

              o If type is set to NO_ARTIFACTS ,  this  value  is  ignored  if
                specified, because no build output is produced.

              o If  type  is  set to S3 , this is the path to the output arti-
                fact. If path is not specified, path is not used.

              For example, if path is set to MyArtifacts  ,  namespaceType  is
              set  to  NONE  ,  and name is set to MyArtifact.zip , the output
              artifact is stored in the output bucket  at  MyArtifacts/MyArti-
              fact.zip .

          namespaceType -> (string)
              Along  with  path  and name , the pattern that CodeBuild uses to
              determine the name and location to store the output artifact:

              o If type is set to CODEPIPELINE  ,  CodePipeline  ignores  this
                value  if  specified. This is because CodePipeline manages its
                build output names instead of CodeBuild.

              o If type is set to NO_ARTIFACTS ,  this  value  is  ignored  if
                specified, because no build output is produced.

              o If type is set to S3 , valid values include:

                o BUILD_ID : Include the build ID in the location of the build
                  output artifact.

                o NONE : Do not include the build ID. This is the  default  if
                  namespaceType is not specified.

              For  example,  if  path is set to MyArtifacts , namespaceType is
              set to BUILD_ID , and name is set to MyArtifact.zip , the output
              artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .

          name -> (string)
              Along  with  path and namespaceType , the pattern that CodeBuild
              uses to name and store the output artifact:

              o If type is set to CODEPIPELINE  ,  CodePipeline  ignores  this
                value  if  specified. This is because CodePipeline manages its
                build output names instead of CodeBuild.

              o If type is set to NO_ARTIFACTS ,  this  value  is  ignored  if
                specified, because no build output is produced.

              o If type is set to S3 , this is the name of the output artifact
                object. If you set the name to be a forward slash  ("/"),  the
                artifact is stored in the root of the output bucket.

              For example:

              o If  path  is  set  to  MyArtifacts  ,  namespaceType is set to
                BUILD_ID , and name is set to MyArtifact.zip , then the output
                artifact  is stored in MyArtifacts/<build-ID>/MyArtifact.zip .

              o If path is empty, namespaceType is set to NONE , and  name  is
                set  to "/ ", the output artifact is stored in the root of the
                output bucket.

              o If path is set  to  MyArtifacts  ,  namespaceType  is  set  to
                BUILD_ID  ,  and  name  is set to "/ ", the output artifact is
                stored in MyArtifacts/<build-ID> .

          packaging -> (string)
              The type of build output artifact to create:

              o If type is set to CODEPIPELINE  ,  CodePipeline  ignores  this
                value  if  specified. This is because CodePipeline manages its
                build output artifacts instead of CodeBuild.

              o If type is set to NO_ARTIFACTS ,  this  value  is  ignored  if
                specified, because no build output is produced.

              o If type is set to S3 , valid values include:

                o NONE  : CodeBuild creates in the output bucket a folder that
                  contains the build output. This is the default if  packaging
                  is not specified.

                o ZIP : CodeBuild creates in the output bucket a ZIP file that
                  contains the build output.

          overrideArtifactName -> (boolean)
              If this flag is set, a name  specified  in  the  buildspec  file
              overrides  the  artifact name. The name specified in a buildspec
              file is calculated at build time and uses the Shell Command Lan-
              guage. For example, you can append a date and time to your arti-
              fact name so that it is always unique.

          encryptionDisabled -> (boolean)
              Set to true if you do not want your output artifacts  encrypted.
              This  option  is valid only if your artifacts type is Amazon S3.
              If this is set with another artifacts type,  an  invalidInputEx-
              ception is thrown.

          artifactIdentifier -> (string)
              An identifier for this artifact definition.

          bucketOwnerAccess -> (string)
              Specifies  the  bucket  owner's  access for objects that another
              account uploads to their Amazon S3 bucket. By default, only  the
              account  that  uploads  the  objects to the bucket has access to
              these objects. This property allows you to give the bucket owner
              access to these objects.

              NOTE:
                 To  use  this property, your CodeBuild service role must have
                 the s3:PutBucketAcl permission. This permission allows  Code-
                 Build to modify the access control list for the bucket.

              This property can be one of the following values:
                 NONE

              The  bucket  owner  does not have access to the objects. This is
              the default.
                 READ_ONLY

              The bucket owner  has  read-only  access  to  the  objects.  The
              uploading account retains ownership of the objects.
                 FULL

              The  bucket  owner has full access to the objects. Object owner-
              ship is determined by the following criteria:

              o If the bucket is configured with the  Bucket  owner  preferred
                setting,  the  bucket  owner  owns  the objects. The uploading
                account will have object access as specified by  the  bucket's
                policy.

              o Otherwise,  the  uploading  account  retains  ownership of the
                objects.

              For more information  about  Amazon  S3  object  ownership,  see
              Controlling ownership of uploaded objects using S3 Object Owner-
              ship in the Amazon Simple Storage Service User Guide .

       Shorthand Syntax:

          type=string,location=string,path=string,namespaceType=string,name=string,packaging=string,overrideArtifactName=boolean,encryptionDisabled=boolean,artifactIdentifier=string,bucketOwnerAccess=string

       JSON Syntax:

          {
            "type": "CODEPIPELINE"|"S3"|"NO_ARTIFACTS",
            "location": "string",
            "path": "string",
            "namespaceType": "NONE"|"BUILD_ID",
            "name": "string",
            "packaging": "NONE"|"ZIP",
            "overrideArtifactName": true|false,
            "encryptionDisabled": true|false,
            "artifactIdentifier": "string",
            "bucketOwnerAccess": "NONE"|"READ_ONLY"|"FULL"
          }

       --secondary-artifacts (list)
          An array of ProjectArtifacts objects.

          (structure)
              Information about the  build  output  artifacts  for  the  build
              project.

              type -> (string)
                 The type of build output artifact. Valid values include:

                 o CODEPIPELINE : The build project has build output generated
                   through CodePipeline.

                 NOTE:
                     The CODEPIPELINE type is not supported for secondaryArti-
                     facts .

                 o NO_ARTIFACTS : The build project does not produce any build
                   output.

                 o S3 : The build project stores build output in Amazon S3.

              location -> (string)
                 Information about the build output artifact location:

                 o If type is set to CODEPIPELINE , CodePipeline ignores  this
                   value  if  specified.  This is because CodePipeline manages
                   its build output locations instead of CodeBuild.

                 o If type is set to NO_ARTIFACTS , this value is  ignored  if
                   specified, because no build output is produced.

                 o If  type  is  set  to  S3  , this is the name of the output
                   bucket.

              path -> (string)
                 Along with namespaceType and name , the  pattern  that  Code-
                 Build uses to name and store the output artifact:

                 o If  type is set to CODEPIPELINE , CodePipeline ignores this
                   value if specified. This is  because  CodePipeline  manages
                   its build output names instead of CodeBuild.

                 o If  type  is set to NO_ARTIFACTS , this value is ignored if
                   specified, because no build output is produced.

                 o If type is set to S3 , this is the path to the output arti-
                   fact. If path is not specified, path is not used.

                 For example, if path is set to MyArtifacts , namespaceType is
                 set to NONE , and name is set to MyArtifact.zip , the  output
                 artifact   is   stored   in  the  output  bucket  at  MyArti-
                 facts/MyArtifact.zip .

              namespaceType -> (string)
                 Along with path and name , the pattern that CodeBuild uses to
                 determine the name and location to store the output artifact:

                 o If type is set to CODEPIPELINE , CodePipeline ignores  this
                   value  if  specified.  This is because CodePipeline manages
                   its build output names instead of CodeBuild.

                 o If type is set to NO_ARTIFACTS , this value is  ignored  if
                   specified, because no build output is produced.

                 o If type is set to S3 , valid values include:

                   o BUILD_ID  :  Include  the build ID in the location of the
                     build output artifact.

                   o NONE : Do not include the build ID. This is  the  default
                     if namespaceType is not specified.

                 For example, if path is set to MyArtifacts , namespaceType is
                 set to BUILD_ID , and name is set  to  MyArtifact.zip  ,  the
                 output  artifact  is stored in MyArtifacts/<build-ID>/MyArti-
                 fact.zip .

              name -> (string)
                 Along with path and namespaceType , the  pattern  that  Code-
                 Build uses to name and store the output artifact:

                 o If  type is set to CODEPIPELINE , CodePipeline ignores this
                   value if specified. This is  because  CodePipeline  manages
                   its build output names instead of CodeBuild.

                 o If  type  is set to NO_ARTIFACTS , this value is ignored if
                   specified, because no build output is produced.

                 o If type is set to S3 , this is the name of the output arti-
                   fact  object.  If  you  set  the name to be a forward slash
                   ("/"), the artifact is stored in the  root  of  the  output
                   bucket.

                 For example:

                 o If  path  is  set  to MyArtifacts , namespaceType is set to
                   BUILD_ID , and name is set to  MyArtifact.zip  ,  then  the
                   output artifact is stored in MyArtifacts/<build-ID>/MyArti-
                   fact.zip .

                 o If path is empty, namespaceType is set to NONE ,  and  name
                   is  set  to "/ ", the output artifact is stored in the root
                   of the output bucket.

                 o If path is set to MyArtifacts ,  namespaceType  is  set  to
                   BUILD_ID  , and name is set to "/ ", the output artifact is
                   stored in MyArtifacts/<build-ID> .

              packaging -> (string)
                 The type of build output artifact to create:

                 o If type is set to CODEPIPELINE , CodePipeline ignores  this
                   value  if  specified.  This is because CodePipeline manages
                   its build output artifacts instead of CodeBuild.

                 o If type is set to NO_ARTIFACTS , this value is  ignored  if
                   specified, because no build output is produced.

                 o If type is set to S3 , valid values include:

                   o NONE  :  CodeBuild  creates in the output bucket a folder
                     that contains the build output. This is  the  default  if
                     packaging is not specified.

                   o ZIP  :  CodeBuild creates in the output bucket a ZIP file
                     that contains the build output.

              overrideArtifactName -> (boolean)
                 If this flag is set, a name specified in the  buildspec  file
                 overrides  the  artifact name. The name specified in a build-
                 spec file is calculated at build time and uses the Shell Com-
                 mand Language. For example, you can append a date and time to
                 your artifact name so that it is always unique.

              encryptionDisabled -> (boolean)
                 Set to  true  if  you  do  not  want  your  output  artifacts
                 encrypted.  This  option is valid only if your artifacts type
                 is Amazon S3. If this is set with another artifacts type,  an
                 invalidInputException is thrown.

              artifactIdentifier -> (string)
                 An identifier for this artifact definition.

              bucketOwnerAccess -> (string)
                 Specifies  the bucket owner's access for objects that another
                 account uploads to their Amazon S3 bucket. By  default,  only
                 the account that uploads the objects to the bucket has access
                 to these objects. This property allows you to give the bucket
                 owner access to these objects.

                 NOTE:
                     To  use  this  property, your CodeBuild service role must
                     have  the  s3:PutBucketAcl  permission.  This  permission
                     allows  CodeBuild  to  modify the access control list for
                     the bucket.

                 This property can be one of the following values:
                     NONE

                 The bucket owner does not have access to the objects. This is
                 the default.
                     READ_ONLY

                 The  bucket  owner  has  read-only access to the objects. The
                 uploading account retains ownership of the objects.
                     FULL

                 The bucket owner has full access to the objects. Object  own-
                 ership is determined by the following criteria:

                 o If the bucket is configured with the Bucket owner preferred
                   setting, the bucket owner owns the objects.  The  uploading
                   account  will  have  object  access  as  specified  by  the
                   bucket's policy.

                 o Otherwise, the uploading account retains ownership  of  the
                   objects.

                 For  more  information  about Amazon S3 object ownership, see
                 Controlling ownership of uploaded  objects  using  S3  Object
                 Ownership in the Amazon Simple Storage Service User Guide .

       Shorthand Syntax:

          type=string,location=string,path=string,namespaceType=string,name=string,packaging=string,overrideArtifactName=boolean,encryptionDisabled=boolean,artifactIdentifier=string,bucketOwnerAccess=string ...

       JSON Syntax:

          [
            {
              "type": "CODEPIPELINE"|"S3"|"NO_ARTIFACTS",
              "location": "string",
              "path": "string",
              "namespaceType": "NONE"|"BUILD_ID",
              "name": "string",
              "packaging": "NONE"|"ZIP",
              "overrideArtifactName": true|false,
              "encryptionDisabled": true|false,
              "artifactIdentifier": "string",
              "bucketOwnerAccess": "NONE"|"READ_ONLY"|"FULL"
            }
            ...
          ]

       --cache (structure)
          Stores  recently used information so that it can be quickly accessed
          at a later time.

          type -> (string)
              The type of cache  used  by  the  build  project.  Valid  values
              include:

              o NO_CACHE : The build project does not use any cache.

              o S3 : The build project reads and writes from and to S3.

              o LOCAL  :  The  build project stores a cache locally on a build
                host that is only available to that build host.

          location -> (string)
              Information about the cache location:

              o NO_CACHE or LOCAL : This value is ignored.

              o S3 : This is the S3 bucket name/prefix.

          modes -> (list)
              An array of strings that specify the local cache modes. You  can
              use one or more local cache modes at the same time. This is only
              used for LOCAL cache types.

              Possible values are:
                 LOCAL_SOURCE_CACHE

              Caches Git metadata for primary and secondary sources. After the
              cache is created, subsequent builds pull only the change between
              commits. This mode is a good choice for projects  with  a  clean
              working  directory  and a source that is a large Git repository.
              If you choose this option and your project does not  use  a  Git
              repository (GitHub, GitHub Enterprise, or Bitbucket), the option
              is ignored.
                 LOCAL_DOCKER_LAYER_CACHE

              Caches existing Docker layers. This mode is a  good  choice  for
              projects  that build or pull large Docker images. It can prevent
              the performance issues caused by  pulling  large  Docker  images
              down from the network.

              NOTE:

                 o You  can  use a Docker layer cache in the Linux environment
                   only.

                 o The privileged flag must be set so that  your  project  has
                   the required Docker permissions.

                 o You  should  consider  the security implications before you
                   use a Docker layer cache.

                 LOCAL_CUSTOM_CACHE

              Caches directories you specify in the buildspec file. This  mode
              is  a good choice if your build scenario is not suited to one of
              the other three local cache modes. If you use a custom cache:

              o Only directories can be  specified  for  caching.  You  cannot
                specify individual files.

              o Symlinks are used to reference cached directories.

              o Cached  directories  are  linked to your build before it down-
                loads its project sources. Cached items are  overridden  if  a
                source item has the same name. Directories are specified using
                cache paths in the buildspec file.

              (string)

       Shorthand Syntax:

          type=string,location=string,modes=string,string

       JSON Syntax:

          {
            "type": "NO_CACHE"|"S3"|"LOCAL",
            "location": "string",
            "modes": ["LOCAL_DOCKER_LAYER_CACHE"|"LOCAL_SOURCE_CACHE"|"LOCAL_CUSTOM_CACHE", ...]
          }

       --environment (structure)
          Information about the build environment for the build project.

          type -> (string)
              The type of build environment to use for related builds.

              o The  environment  type  ARM_CONTAINER  is  available  only  in
                regions  US  East (N. Virginia), US East (Ohio), US West (Ore-
                gon),  EU  (Ireland),  Asia  Pacific  (Mumbai),  Asia  Pacific
                (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).

              o The   environment   type  LINUX_CONTAINER  with  compute  type
                build.general1.2xlarge is available only in  regions  US  East
                (N.  Virginia), US East (Ohio), US West (Oregon), Canada (Cen-
                tral), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific
                (Tokyo),  Asia Pacific (Seoul), Asia Pacific (Singapore), Asia
                Pacific (Sydney), China (Beijing), and China (Ningxia).

              o The environment type LINUX_GPU_CONTAINER is available only  in
                regions  US  East (N. Virginia), US East (Ohio), US West (Ore-
                gon), Canada (Central), EU (Ireland), EU (London), EU  (Frank-
                furt),  Asia  Pacific  (Tokyo),  Asia  Pacific  (Seoul),  Asia
                Pacific (Singapore), Asia Pacific (Sydney) , China  (Beijing),
                and China (Ningxia).

              o The    environment    types    WINDOWS_CONTAINER    and   WIN-
                DOWS_SERVER_2019_CONTAINER are available only  in  regions  US
                East  (N.  Virginia), US East (Ohio), US West (Oregon), and EU
                (Ireland).

              For more information, see Build environment compute types in the
              CodeBuild user guide .

          image -> (string)
              The  image  tag or image digest that identifies the Docker image
              to use for this build project. Use the following formats:

              o For an image tag: <registry>/<repository>:<tag> . For example,
                in  the  Docker  repository  that CodeBuild uses to manage its
                Docker images, this would be aws/codebuild/standard:4.0 .

              o For an image digest:  <registry>/<repository>@<digest>  .  For
                example,    to    specify    an    image   with   the   digest
                "sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfb-
                dbf,"                  use                 <registry>/<reposi-
                tory>@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfb-
                dbf .

              For more information, see Docker images provided by CodeBuild in
              the CodeBuild user guide .

          computeType -> (string)
              Information about the compute resources the build project  uses.
              Available values include:

              o BUILD_GENERAL1_SMALL  :  Use up to 3 GB memory and 2 vCPUs for
                builds.

              o BUILD_GENERAL1_MEDIUM : Use up to 7 GB memory and 4 vCPUs  for
                builds.

              o BUILD_GENERAL1_LARGE  : Use up to 16 GB memory and 8 vCPUs for
                builds, depending on your environment type.

              o BUILD_GENERAL1_2XLARGE : Use up to 145 GB  memory,  72  vCPUs,
                and  824  GB of SSD storage for builds. This compute type sup-
                ports Docker images up to 100 GB uncompressed.

              If you use BUILD_GENERAL1_LARGE :

              o For environment type LINUX_CONTAINER , you can use up to 15 GB
                memory and 8 vCPUs for builds.

              o For  environment  type LINUX_GPU_CONTAINER , you can use up to
                255 GB memory, 32 vCPUs, and 4  NVIDIA  Tesla  V100  GPUs  for
                builds.

              o For  environment  type ARM_CONTAINER , you can use up to 16 GB
                memory and 8 vCPUs on ARM-based processors for builds.

              For more information, see Build Environment Compute Types in the
              CodeBuild User Guide.

          environmentVariables -> (list)
              A  set  of environment variables to make available to builds for
              this build project.

              (structure)
                 Information about an environment variable for a build project
                 or a build.

                 name -> (string)
                     The name or key of the environment variable.

                 value -> (string)
                     The value of the environment variable.

                     WARNING:
                        We  strongly  discourage the use of PLAINTEXT environ-
                        ment variables to store sensitive  values,  especially
                        Amazon  Web  Services secret key IDs and secret access
                        keys. PLAINTEXT environment variables can be displayed
                        in plain text using the CodeBuild console and the CLI.
                        For sensitive values, we recommend you use an environ-
                        ment  variable of type PARAMETER_STORE or SECRETS_MAN-
                        AGER .

                 type -> (string)
                     The type of environment variable. Valid values include:

                     o PARAMETER_STORE : An  environment  variable  stored  in
                       Systems  Manager Parameter Store. To learn how to spec-
                       ify  a  parameter  store  environment   variable,   see
                       env/parameter-store in the CodeBuild User Guide .

                     o PLAINTEXT  : An environment variable in plain text for-
                       mat. This is the default value.

                     o SECRETS_MANAGER : An  environment  variable  stored  in
                       Secrets Manager. To learn how to specify a secrets man-
                       ager environment variable, see  env/secrets-manager  in
                       the CodeBuild User Guide .

          privilegedMode -> (boolean)
              Enables running the Docker daemon inside a Docker container. Set
              to true only if the  build  project  is  used  to  build  Docker
              images.  Otherwise,  a  build that attempts to interact with the
              Docker daemon fails. The default setting is false .

              You can initialize the Docker daemon during the install phase of
              your  build  by  adding one of the following sets of commands to
              the install phase of your buildspec file:

              If the operating system's base image is Ubuntu Linux:
                 -                nohup                 /usr/local/bin/dockerd
                 --host=unix:///var/run/docker.sock  --host=tcp://0.0.0.0:2375
                 --storage-driver=overlay&

                 - timeout 15 sh -c "until docker info; do echo  .;  sleep  1;
                 done"

              If  the  operating  system's  base image is Alpine Linux and the
              previous command does not work, add the -t argument to timeout :
                 -                 nohup                /usr/local/bin/dockerd
                 --host=unix:///var/run/docker.sock  --host=tcp://0.0.0.0:2375
                 --storage-driver=overlay&

                 - timeout -t 15 sh -c "until docker info; do echo .; sleep 1;
                 done"

          certificate -> (string)
              The ARN of the Amazon S3 bucket, path  prefix,  and  object  key
              that contains the PEM-encoded certificate for the build project.
              For more information, see  certificate  in  the  CodeBuild  User
              Guide .

          registryCredential -> (structure)
              The credentials for access to a private registry.

              credential -> (string)
                 The Amazon Resource Name (ARN) or name of credentials created
                 using Secrets Manager.

                 NOTE:
                     The credential can use the name of the  credentials  only
                     if they exist in your current Amazon Web Services Region.

              credentialProvider -> (string)
                 The service that created the credentials to access a  private
                 Docker  registry.  The  valid  value, SECRETS_MANAGER, is for
                 Secrets Manager.

          imagePullCredentialsType -> (string)
              The type of credentials CodeBuild uses to pull  images  in  your
              build. There are two valid values:

              o CODEBUILD  specifies  that CodeBuild uses its own credentials.
                This requires that you modify your ECR  repository  policy  to
                trust CodeBuild service principal.

              o SERVICE_ROLE   specifies   that   CodeBuild  uses  your  build
                project's service role.

              When you use a cross-account or private registry image, you must
              use  SERVICE_ROLE credentials. When you use an CodeBuild curated
              image, you must use CODEBUILD credentials.

       Shorthand Syntax:

          type=string,image=string,computeType=string,environmentVariables=[{name=string,value=string,type=string},{name=string,value=string,type=string}],privilegedMode=boolean,certificate=string,registryCredential={credential=string,credentialProvider=string},imagePullCredentialsType=string

       JSON Syntax:

          {
            "type": "WINDOWS_CONTAINER"|"LINUX_CONTAINER"|"LINUX_GPU_CONTAINER"|"ARM_CONTAINER"|"WINDOWS_SERVER_2019_CONTAINER",
            "image": "string",
            "computeType": "BUILD_GENERAL1_SMALL"|"BUILD_GENERAL1_MEDIUM"|"BUILD_GENERAL1_LARGE"|"BUILD_GENERAL1_2XLARGE",
            "environmentVariables": [
              {
                "name": "string",
                "value": "string",
                "type": "PLAINTEXT"|"PARAMETER_STORE"|"SECRETS_MANAGER"
              }
              ...
            ],
            "privilegedMode": true|false,
            "certificate": "string",
            "registryCredential": {
              "credential": "string",
              "credentialProvider": "SECRETS_MANAGER"
            },
            "imagePullCredentialsType": "CODEBUILD"|"SERVICE_ROLE"
          }

       --service-role (string)
          The ARN of the IAM role that  enables  CodeBuild  to  interact  with
          dependent  Amazon  Web Services services on behalf of the Amazon Web
          Services account.

       --timeout-in-minutes (integer)
          How long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait
          before it times out any build that has not been marked as completed.
          The default is 60 minutes.

       --queued-timeout-in-minutes (integer)
          The number of minutes a build is allowed  to  be  queued  before  it
          times out.

       --encryption-key (string)
          The  Key Management Service customer master key (CMK) to be used for
          encrypting the build output artifacts.

          NOTE:
              You can use a cross-account KMS key to encrypt the build  output
              artifacts if your service role has permission to that key.

          You can specify either the Amazon Resource Name (ARN) of the CMK or,
          if available, the CMK's alias (using the  format  alias/<alias-name>
          ).

       --tags (list)
          A  list  of  tag  key  and  value  pairs  associated with this build
          project.

          These tags are available for use by  Amazon  Web  Services  services
          that support CodeBuild build project tags.

          (structure)
              A tag, consisting of a key and a value.

              This  tag  is  available for use by Amazon Web Services services
              that support tags in CodeBuild.

              key -> (string)
                 The tag's key.

              value -> (string)
                 The tag's value.

       Shorthand Syntax:

          key=string,value=string ...

       JSON Syntax:

          [
            {
              "key": "string",
              "value": "string"
            }
            ...
          ]

       --vpc-config (structure)
          VpcConfig enables CodeBuild to access resources in an Amazon VPC.

          vpcId -> (string)
              The ID of the Amazon VPC.

          subnets -> (list)
              A list of one or more subnet IDs in your Amazon VPC.

              (string)

          securityGroupIds -> (list)
              A list of one or more security groups IDs in your Amazon VPC.

              (string)

       Shorthand Syntax:

          vpcId=string,subnets=string,string,securityGroupIds=string,string

       JSON Syntax:

          {
            "vpcId": "string",
            "subnets": ["string", ...],
            "securityGroupIds": ["string", ...]
          }

       --badge-enabled | --no-badge-enabled (boolean)
          Set this to true to generate a  publicly  accessible  URL  for  your
          project's build badge.

       --logs-config (structure)
          Information  about  logs for the build project. These can be logs in
          CloudWatch Logs, logs uploaded to a specified S3 bucket, or both.

          cloudWatchLogs -> (structure)
              Information about CloudWatch Logs for a  build  project.  Cloud-
              Watch Logs are enabled by default.

              status -> (string)
                 The current status of the logs in CloudWatch Logs for a build
                 project. Valid values are:

                 o ENABLED :  CloudWatch  Logs  are  enabled  for  this  build
                   project.

                 o DISABLED  :  CloudWatch Logs are not enabled for this build
                   project.

              groupName -> (string)
                 The group name of the  logs  in  CloudWatch  Logs.  For  more
                 information, see Working with Log Groups and Log Streams .

              streamName -> (string)
                 The  prefix  of  the  stream name of the CloudWatch Logs. For
                 more information, see Working with Log Groups and Log Streams
                 .

          s3Logs -> (structure)
              Information  about  logs  built  to  an  S3  bucket  for a build
              project. S3 logs are not enabled by default.

              status -> (string)
                 The current status of the S3 build logs. Valid values are:

                 o ENABLED : S3 build logs are enabled for this build project.

                 o DISABLED  :  S3  build  logs are not enabled for this build
                   project.

              location -> (string)
                 The ARN of an S3 bucket and the path prefix for S3  logs.  If
                 your  Amazon S3 bucket name is my-bucket , and your path pre-
                 fix   is   build-log   ,   then   acceptable   formats    are
                 my-bucket/build-log or arn:aws:s3:::my-bucket/build-log .

              encryptionDisabled -> (boolean)
                 Set  to  true  if  you  do  not want your S3 build log output
                 encrypted. By default S3 build logs are encrypted.

              bucketOwnerAccess -> (string)
                 Specifies the bucket owner's access for objects that  another
                 account  uploads  to their Amazon S3 bucket. By default, only
                 the account that uploads the objects to the bucket has access
                 to these objects. This property allows you to give the bucket
                 owner access to these objects.

                 NOTE:
                     To use this property, your CodeBuild  service  role  must
                     have  the  s3:PutBucketAcl  permission.  This  permission
                     allows CodeBuild to modify the access  control  list  for
                     the bucket.

                 This property can be one of the following values:
                     NONE

                 The bucket owner does not have access to the objects. This is
                 the default.
                     READ_ONLY

                 The bucket owner has read-only access  to  the  objects.  The
                 uploading account retains ownership of the objects.
                     FULL

                 The  bucket owner has full access to the objects. Object own-
                 ership is determined by the following criteria:

                 o If the bucket is configured with the Bucket owner preferred
                   setting,  the  bucket owner owns the objects. The uploading
                   account  will  have  object  access  as  specified  by  the
                   bucket's policy.

                 o Otherwise,  the  uploading account retains ownership of the
                   objects.

                 For more information about Amazon S3  object  ownership,  see
                 Controlling  ownership  of  uploaded  objects using S3 Object
                 Ownership in the Amazon Simple Storage Service User Guide .

       Shorthand Syntax:

          cloudWatchLogs={status=string,groupName=string,streamName=string},s3Logs={status=string,location=string,encryptionDisabled=boolean,bucketOwnerAccess=string}

       JSON Syntax:

          {
            "cloudWatchLogs": {
              "status": "ENABLED"|"DISABLED",
              "groupName": "string",
              "streamName": "string"
            },
            "s3Logs": {
              "status": "ENABLED"|"DISABLED",
              "location": "string",
              "encryptionDisabled": true|false,
              "bucketOwnerAccess": "NONE"|"READ_ONLY"|"FULL"
            }
          }

       --file-system-locations (list)
          An array of ProjectFileSystemLocation objects for a CodeBuild  build
          project. A ProjectFileSystemLocation object specifies the identifier
          , location , mountOptions , mountPoint , and type of a  file  system
          created using Amazon Elastic File System.

          (structure)
              Information  about  a file system created by Amazon Elastic File
              System (EFS). For more information, see What Is  Amazon  Elastic
              File System?

              type -> (string)
                 The  type of the file system. The one supported type is EFS .

              location -> (string)
                 A string that specifies the location of the file system  cre-
                 ated  by  Amazon  EFS.  Its  format  is  efs-dns-name:/direc-
                 tory-path . You can find the DNS name of file system when you
                 view  it  in  the Amazon EFS console. The directory path is a
                 path to a directory in the file system that CodeBuild mounts.
                 For   example,   if   the  DNS  name  of  a  file  system  is
                 fs-abcd1234.efs.us-west-2.amazonaws.com  ,  and   its   mount
                 directory  is  my-efs-mount-directory  , then the location is
                 fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-direc-
                 tory .

                 The directory path in the format efs-dns-name:/directory-path
                 is optional. If you do not  specify  a  directory  path,  the
                 location is only the DNS name and CodeBuild mounts the entire
                 file system.

              mountPoint -> (string)
                 The location in the container where you mount the  file  sys-
                 tem.

              identifier -> (string)
                 The  name used to access a file system created by Amazon EFS.
                 CodeBuild creates an environment variable  by  appending  the
                 identifier  in  all capital letters to CODEBUILD_ . For exam-
                 ple, if you specify my_efs for identifier , a new environment
                 variable is create named CODEBUILD_MY_EFS .

                 The identifier is used to mount your file system.

              mountOptions -> (string)
                 The  mount  options  for a file system created by Amazon EFS.
                 The   default   mount   options   used   by   CodeBuild   are
                 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2
                 . For more information, see Recommended NFS Mount Options .

       Shorthand Syntax:

          type=string,location=string,mountPoint=string,identifier=string,mountOptions=string ...

       JSON Syntax:

          [
            {
              "type": "EFS",
              "location": "string",
              "mountPoint": "string",
              "identifier": "string",
              "mountOptions": "string"
            }
            ...
          ]

       --build-batch-config (structure)
          A  ProjectBuildBatchConfig  object  that  defines  the  batch  build
          options for the project.

          serviceRole -> (string)
              Specifies the service role ARN for the batch build project.

          combineArtifacts -> (boolean)
              Specifies  if  the build artifacts for the batch build should be
              combined into a single artifact location.

          restrictions -> (structure)
              A BatchRestrictions object that specifies the  restrictions  for
              the batch build.

              maximumBuildsAllowed -> (integer)
                 Specifies the maximum number of builds allowed.

              computeTypesAllowed -> (list)
                 An  array  of strings that specify the compute types that are
                 allowed for the batch build. See  Build  environment  compute
                 types in the CodeBuild User Guide for these values.

                 (string)

          timeoutInMins -> (integer)
              Specifies the maximum amount of time, in minutes, that the batch
              build must be completed in.

          batchReportMode -> (string)
              Specifies how build  status  reports  are  sent  to  the  source
              provider  for  the  batch build. This property is only used when
              the source provider for your project is  Bitbucket,  GitHub,  or
              GitHub  Enterprise,  and  your  project  is configured to report
              build statuses to the source provider.
                 REPORT_AGGREGATED_BATCH

              (Default) Aggregate all of the build statuses into a single sta-
              tus report.
                 REPORT_INDIVIDUAL_BUILDS

              Send a separate status report for each individual build.

       Shorthand Syntax:

          serviceRole=string,combineArtifacts=boolean,restrictions={maximumBuildsAllowed=integer,computeTypesAllowed=[string,string]},timeoutInMins=integer,batchReportMode=string

       JSON Syntax:

          {
            "serviceRole": "string",
            "combineArtifacts": true|false,
            "restrictions": {
              "maximumBuildsAllowed": integer,
              "computeTypesAllowed": ["string", ...]
            },
            "timeoutInMins": integer,
            "batchReportMode": "REPORT_INDIVIDUAL_BUILDS"|"REPORT_AGGREGATED_BATCH"
          }

       --concurrent-build-limit (integer)
          The  maximum  number  of concurrent builds that are allowed for this
          project.

          New builds are only started if the current number of builds is  less
          than  or  equal to this limit. If the current build count meets this
          limit, new builds are throttled and are not run.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To create an AWS CodeBuild build project

       The following create-project example creates a CodeBuild build  project
       using source files from an S3 bucket

          aws codebuild create-project \
              --name "my-demo-project" \
              --source "{\"type\": \"S3\",\"location\": \"codebuild-us-west-2-123456789012-input-bucket/my-source.zip\"}" \
              --artifacts {"\"type\": \"S3\",\"location\": \"codebuild-us-west-2-123456789012-output-bucket\""} \
              --environment "{\"type\": \"LINUX_CONTAINER\",\"image\": \"aws/codebuild/standard:1.0\",\"computeType\": \"BUILD_GENERAL1_SMALL\"}" \
              --service-role "arn:aws:iam::123456789012:role/service-role/my-codebuild-service-role"

       Output:

          {
              "project": {
                  "arn": "arn:aws:codebuild:us-west-2:123456789012:project/my-demo-project",
                  "name": "my-cli-demo-project",
                  "encryptionKey": "arn:aws:kms:us-west-2:123456789012:alias/aws/s3",
                  "serviceRole": "arn:aws:iam::123456789012:role/service-role/my-codebuild-service-role",
                  "lastModified": 1556839783.274,
                  "badge": {
                      "badgeEnabled": false
                  },
                  "queuedTimeoutInMinutes": 480,
                  "environment": {
                      "image": "aws/codebuild/standard:1.0",
                      "computeType": "BUILD_GENERAL1_SMALL",
                      "type": "LINUX_CONTAINER",
                      "imagePullCredentialsType": "CODEBUILD",
                      "privilegedMode": false,
                      "environmentVariables": []
                  },
                  "artifacts": {
                      "location": "codebuild-us-west-2-123456789012-output-bucket",
                      "name": "my-cli-demo-project",
                      "namespaceType": "NONE",
                      "type": "S3",
                      "packaging": "NONE",
                      "encryptionDisabled": false
                  },
                  "source": {
                      "type": "S3",
                      "location": "codebuild-us-west-2-123456789012-input-bucket/my-source.zip",
                      "insecureSsl": false
                  },
                  "timeoutInMinutes": 60,
                  "cache": {
                      "type": "NO_CACHE"
                  },
                  "created": 1556839783.274
              }
          }

       Example  2: To create an AWS CodeBuild build project using a JSON input
       file for the parameters

       The following create-project example creates a CodeBuild build  project
       by  passing all of the required parameters in a JSON input file. Create
       the input file template by running the command with only  the  --gener-
       ate-cli-skeleton parameter.

          aws codebuild create-project --cli-input-json file://create-project.json

       The input JSON file create-project.json contains the following content:

          {
              "name": "codebuild-demo-project",
              "source": {
                  "type": "S3",
                  "location": "codebuild-region-ID-account-ID-input-bucket/MessageUtil.zip"
              },
              "artifacts": {
                  "type": "S3",
                  "location": "codebuild-region-ID-account-ID-output-bucket"
              },
              "environment": {
                  "type": "LINUX_CONTAINER",
                  "image": "aws/codebuild/standard:1.0",
                  "computeType": "BUILD_GENERAL1_SMALL"
              },
              "serviceRole": "serviceIAMRole"
          }

       Output:

          {
              "project": {
                  "name": "codebuild-demo-project",
                  "serviceRole": "serviceIAMRole",
                  "tags": [],
                  "artifacts": {
                      "packaging": "NONE",
                      "type": "S3",
                      "location": "codebuild-region-ID-account-ID-output-bucket",
                      "name": "message-util.zip"
                  },
                  "lastModified": 1472661575.244,
                  "timeoutInMinutes": 60,
                  "created": 1472661575.244,
                  "environment": {
                      "computeType": "BUILD_GENERAL1_SMALL",
                      "image": "aws/codebuild/standard:1.0",
                      "type": "LINUX_CONTAINER",
                      "environmentVariables": []
                  },
                  "source": {
                      "type": "S3",
                      "location": "codebuild-region-ID-account-ID-input-bucket/MessageUtil.zip"
                  },
                  "encryptionKey": "arn:aws:kms:region-ID:account-ID:alias/aws/s3",
                  "arn": "arn:aws:codebuild:region-ID:account-ID:project/codebuild-demo-project"
              }
          }

       For more information, see Create a Build Project (AWS CLI) in  the  AWS
       CodeBuild User Guide.

OUTPUT
       project -> (structure)
          Information about the build project that was created.

          name -> (string)
              The name of the build project.

          arn -> (string)
              The Amazon Resource Name (ARN) of the build project.

          description -> (string)
              A description that makes the build project easy to identify.

          source -> (structure)
              Information  about  the  build  input source code for this build
              project.

              type -> (string)
                 The type of repository that contains the source  code  to  be
                 built. Valid values include:

                 o BITBUCKET : The source code is in a Bitbucket repository.

                 o CODECOMMIT  :  The  source code is in an CodeCommit reposi-
                   tory.

                 o CODEPIPELINE : The source code settings  are  specified  in
                   the source action of a pipeline in CodePipeline.

                 o GITHUB  :  The  source code is in a GitHub or GitHub Enter-
                   prise Cloud repository.

                 o GITHUB_ENTERPRISE : The source code is in a  GitHub  Enter-
                   prise Server repository.

                 o NO_SOURCE : The project does not have input source code.

                 o S3 : The source code is in an Amazon S3 bucket.

              location -> (string)
                 Information  about  the  location  of  the  source code to be
                 built. Valid values include:

                 o For source code settings that are specified in  the  source
                   action  of  a pipeline in CodePipeline, location should not
                   be specified. If it is specified, CodePipeline ignores  it.
                   This  is  because CodePipeline uses the settings in a pipe-
                   line's source action instead of this value.

                 o For source code in  an  CodeCommit  repository,  the  HTTPS
                   clone  URL  to the repository that contains the source code
                   and the buildspec file (for  example,  https://git-codecom-
                   mit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).

                 o For  source  code  in an Amazon S3 input bucket, one of the
                   following.

                   o The path to the ZIP file that contains  the  source  code
                     (for example, <bucket-name>/<path>/<object-name>.zip ).

                   o The path to the folder that contains the source code (for
                     example, <bucket-name>/<path-to-source-code>/<folder>/ ).

                 o For source code in a GitHub repository, the HTTPS clone URL
                   to the repository that contains the source and  the  build-
                   spec  file.  You  must  connect  your  Amazon  Web Services
                   account to your GitHub account. Use the  CodeBuild  console
                   to start creating a build project. When you use the console
                   to connect (or reconnect) with GitHub, on the GitHub Autho-
                   rize  application  page,  for  Organization access , choose
                   Request access next to each repository you  want  to  allow
                   CodeBuild  to  have  access  to,  and then choose Authorize
                   application . (After you  have  connected  to  your  GitHub
                   account,  you  do  not  need  to  finish creating the build
                   project. You can leave the CodeBuild console.) To  instruct
                   CodeBuild to use this connection, in the source object, set
                   the auth object's type value to OAUTH .

                 o For source code in a Bitbucket repository, the HTTPS  clone
                   URL  to  the  repository  that  contains the source and the
                   buildspec file. You must connect your Amazon  Web  Services
                   account  to  your Bitbucket account. Use the CodeBuild con-
                   sole to start creating a build project. When  you  use  the
                   console  to  connect  (or reconnect) with Bitbucket, on the
                   Bitbucket Confirm access to your account page, choose Grant
                   access  .  (After  you  have  connected  to  your Bitbucket
                   account, you do not  need  to  finish  creating  the  build
                   project.  You can leave the CodeBuild console.) To instruct
                   CodeBuild to use this connection, in the source object, set
                   the auth object's type value to OAUTH .

                 If  you  specify  CODEPIPELINE  for  the Type property, don't
                 specify this property. For all of the other types,  you  must
                 specify Location .

              gitCloneDepth -> (integer)
                 Information  about the Git clone depth for the build project.

              gitSubmodulesConfig -> (structure)
                 Information about the Git submodules  configuration  for  the
                 build project.

                 fetchSubmodules -> (boolean)
                     Set  to  true  to fetch Git submodules for your CodeBuild
                     build project.

              buildspec -> (string)
                 The buildspec file declaration to use for the builds in  this
                 build project.

                 If  this  value  is set, it can be either an inline buildspec
                 definition, the path to an alternate buildspec file  relative
                 to  the  value  of the built-in CODEBUILD_SRC_DIR environment
                 variable, or the path to an S3 bucket. The bucket must be  in
                 the  same  Amazon  Web  Services Region as the build project.
                 Specify the  buildspec  file  using  its  ARN  (for  example,
                 arn:aws:s3:::my-codebuild-sample2/buildspec.yml  ).  If  this
                 value is not provided or is  set  to  an  empty  string,  the
                 source  code must contain a buildspec file in its root direc-
                 tory. For more information, see Buildspec File Name and Stor-
                 age Location .

              auth -> (structure)
                 Information about the authorization settings for CodeBuild to
                 access the source code to be built.

                 This information is for the  CodeBuild  console's  use  only.
                 Your code should not get or set this information directly.

                 type -> (string)

                     NOTE:
                        This data type is deprecated and is no longer accurate
                        or used.

                     The authorization type to use. The only  valid  value  is
                     OAUTH , which represents the OAuth authorization type.

                 resource -> (string)
                     The  resource  value that applies to the specified autho-
                     rization type.

              reportBuildStatus -> (boolean)
                 Set to true to report the status of a build's start and  fin-
                 ish  to  your source provider. This option is valid only when
                 your source provider is GitHub, GitHub  Enterprise,  or  Bit-
                 bucket.  If  this  is  set  and  you  use  a different source
                 provider, an invalidInputException is thrown.

                 To be able to report the build status to the source provider,
                 the  user associated with the source provider must have write
                 access to the repo. If the user does not have  write  access,
                 the build status cannot be updated. For more information, see
                 Source provider access in the CodeBuild User Guide .

                 The status of a  build  triggered  by  a  webhook  is  always
                 reported to your source provider.

                 If your project's builds are triggered by a webhook, you must
                 push a new commit to the repo for a change to  this  property
                 to take effect.

              buildStatusConfig -> (structure)
                 Contains  information  that  defines  how  the  build project
                 reports the build status to the source provider. This  option
                 is   only   used   when  the  source  provider  is  GITHUB  ,
                 GITHUB_ENTERPRISE , or BITBUCKET .

                 context -> (string)
                     Specifies the context of the build status CodeBuild sends
                     to  the  source  provider.  The  usage  of this parameter
                     depends on the source provider.
                        Bitbucket

                     This parameter is used for the name parameter in the Bit-
                     bucket  commit status. For more information, see build in
                     the Bitbucket API documentation.
                        GitHub/GitHub Enterprise Server

                     This parameter is used for the context parameter  in  the
                     GitHub  commit status. For more information, see Create a
                     commit status in the GitHub developer guide.

                 targetUrl -> (string)
                     Specifies the target url of the  build  status  CodeBuild
                     sends to the source provider. The usage of this parameter
                     depends on the source provider.
                        Bitbucket

                     This parameter is used for the url parameter in the  Bit-
                     bucket  commit status. For more information, see build in
                     the Bitbucket API documentation.
                        GitHub/GitHub Enterprise Server

                     This parameter is used for the  target_url  parameter  in
                     the  GitHub  commit  status.  For  more  information, see
                     Create a commit status in the GitHub developer guide.

              insecureSsl -> (boolean)
                 Enable this flag to ignore SSL warnings while  connecting  to
                 the project source code.

              sourceIdentifier -> (string)
                 An  identifier  for  this  project source. The identifier can
                 only contain alphanumeric  characters  and  underscores,  and
                 must be less than 128 characters in length.

          secondarySources -> (list)
              An array of ProjectSource objects.

              (structure)
                 Information  about  the build input source code for the build
                 project.

                 type -> (string)
                     The type of repository that contains the source  code  to
                     be built. Valid values include:

                     o BITBUCKET  :  The source code is in a Bitbucket reposi-
                       tory.

                     o CODECOMMIT : The source code is in an CodeCommit repos-
                       itory.

                     o CODEPIPELINE  :  The source code settings are specified
                       in the source action of a pipeline in CodePipeline.

                     o GITHUB : The source code  is  in  a  GitHub  or  GitHub
                       Enterprise Cloud repository.

                     o GITHUB_ENTERPRISE  :  The  source  code  is in a GitHub
                       Enterprise Server repository.

                     o NO_SOURCE : The project  does  not  have  input  source
                       code.

                     o S3 : The source code is in an Amazon S3 bucket.

                 location -> (string)
                     Information  about  the location of the source code to be
                     built. Valid values include:

                     o For source code settings  that  are  specified  in  the
                       source  action  of a pipeline in CodePipeline, location
                       should not be specified.  If  it  is  specified,  Code-
                       Pipeline  ignores it. This is because CodePipeline uses
                       the settings in a pipeline's source action  instead  of
                       this value.

                     o For  source code in an CodeCommit repository, the HTTPS
                       clone URL to the repository that  contains  the  source
                       code    and    the   buildspec   file   (for   example,
                       https://git-codecommit.<region-ID>.amazon-
                       aws.com/v1/repos/<repo-name> ).

                     o For  source  code  in an Amazon S3 input bucket, one of
                       the following.

                       o The path to the ZIP file  that  contains  the  source
                         code                   (for                  example,
                         <bucket-name>/<path>/<object-name>.zip ).

                       o The path to the folder that contains the source  code
                         (for                                         example,
                         <bucket-name>/<path-to-source-code>/<folder>/ ).

                     o For source code in a GitHub repository, the HTTPS clone
                       URL  to the repository that contains the source and the
                       buildspec file. You must connect your Amazon  Web  Ser-
                       vices account to your GitHub account. Use the CodeBuild
                       console to start creating a build project. When you use
                       the  console  to connect (or reconnect) with GitHub, on
                       the GitHub Authorize application page, for Organization
                       access  , choose Request access next to each repository
                       you want to allow CodeBuild to have access to, and then
                       choose  Authorize  application  .  (After you have con-
                       nected to your GitHub account, you do not need to  fin-
                       ish creating the build project. You can leave the Code-
                       Build console.) To instruct CodeBuild to use this  con-
                       nection,  in  the  source object, set the auth object's
                       type value to OAUTH .

                     o For source code in a Bitbucket  repository,  the  HTTPS
                       clone  URL  to  the repository that contains the source
                       and the buildspec file. You must  connect  your  Amazon
                       Web Services account to your Bitbucket account. Use the
                       CodeBuild console to start creating  a  build  project.
                       When you use the console to connect (or reconnect) with
                       Bitbucket, on the  Bitbucket  Confirm  access  to  your
                       account  page,  choose  Grant  access . (After you have
                       connected to your Bitbucket account, you do not need to
                       finish  creating  the  build project. You can leave the
                       CodeBuild console.) To instruct CodeBuild to  use  this
                       connection, in the source object, set the auth object's
                       type value to OAUTH .

                     If you specify CODEPIPELINE for the Type property,  don't
                     specify  this  property.  For all of the other types, you
                     must specify Location .

                 gitCloneDepth -> (integer)
                     Information about the  Git  clone  depth  for  the  build
                     project.

                 gitSubmodulesConfig -> (structure)
                     Information  about  the  Git submodules configuration for
                     the build project.

                     fetchSubmodules -> (boolean)
                        Set to true to fetch Git submodules for your CodeBuild
                        build project.

                 buildspec -> (string)
                     The  buildspec  file declaration to use for the builds in
                     this build project.

                     If this value is set, it can be either an  inline  build-
                     spec  definition, the path to an alternate buildspec file
                     relative to the value of the  built-in  CODEBUILD_SRC_DIR
                     environment  variable,  or  the path to an S3 bucket. The
                     bucket must be in the same Amazon Web Services Region  as
                     the  build  project. Specify the buildspec file using its
                     ARN    (for    example,    arn:aws:s3:::my-codebuild-sam-
                     ple2/buildspec.yml ). If this value is not provided or is
                     set to an empty string, the source code  must  contain  a
                     buildspec  file  in its root directory. For more informa-
                     tion, see Buildspec File Name and Storage Location .

                 auth -> (structure)
                     Information about the authorization  settings  for  Code-
                     Build to access the source code to be built.

                     This information is for the CodeBuild console's use only.
                     Your  code  should  not  get  or  set  this   information
                     directly.

                     type -> (string)

                        NOTE:
                            This  data  type  is  deprecated  and is no longer
                            accurate or used.

                        The authorization type to use. The only valid value is
                        OAUTH , which represents the OAuth authorization type.

                     resource -> (string)
                        The resource  value  that  applies  to  the  specified
                        authorization type.

                 reportBuildStatus -> (boolean)
                     Set  to  true to report the status of a build's start and
                     finish to your source provider. This option is valid only
                     when  your  source provider is GitHub, GitHub Enterprise,
                     or Bitbucket. If this is set  and  you  use  a  different
                     source provider, an invalidInputException is thrown.

                     To  be  able  to  report  the  build status to the source
                     provider, the user associated with  the  source  provider
                     must  have write access to the repo. If the user does not
                     have write access, the build status  cannot  be  updated.
                     For  more  information, see Source provider access in the
                     CodeBuild User Guide .

                     The status of a build triggered by a  webhook  is  always
                     reported to your source provider.

                     If  your project's builds are triggered by a webhook, you
                     must push a new commit to the repo for a change  to  this
                     property to take effect.

                 buildStatusConfig -> (structure)
                     Contains  information  that defines how the build project
                     reports the build status to  the  source  provider.  This
                     option  is only used when the source provider is GITHUB ,
                     GITHUB_ENTERPRISE , or BITBUCKET .

                     context -> (string)
                        Specifies the context of the  build  status  CodeBuild
                        sends to the source provider. The usage of this param-
                        eter depends on the source provider.
                            Bitbucket

                        This parameter is used for the name parameter  in  the
                        Bitbucket  commit  status.  For  more information, see
                        build in the Bitbucket API documentation.
                            GitHub/GitHub Enterprise Server

                        This parameter is used for the  context  parameter  in
                        the  GitHub  commit  status. For more information, see
                        Create a commit status in the GitHub developer  guide.

                     targetUrl -> (string)
                        Specifies the target url of the build status CodeBuild
                        sends to the source provider. The usage of this param-
                        eter depends on the source provider.
                            Bitbucket

                        This  parameter  is  used for the url parameter in the
                        Bitbucket commit status.  For  more  information,  see
                        build in the Bitbucket API documentation.
                            GitHub/GitHub Enterprise Server

                        This parameter is used for the target_url parameter in
                        the GitHub commit status. For  more  information,  see
                        Create  a commit status in the GitHub developer guide.

                 insecureSsl -> (boolean)
                     Enable this flag to ignore SSL warnings while  connecting
                     to the project source code.

                 sourceIdentifier -> (string)
                     An identifier for this project source. The identifier can
                     only contain alphanumeric characters and underscores, and
                     must be less than 128 characters in length.

          sourceVersion -> (string)
              A  version  of  the build input to be built for this project. If
              not specified, the latest version is used. If specified, it must
              be one of:

              o For CodeCommit: the commit ID, branch, or Git tag to use.

              o For  GitHub:  the  commit ID, pull request ID, branch name, or
                tag name that corresponds to the version of  the  source  code
                you  want to build. If a pull request ID is specified, it must
                use the format pr/pull-request-ID (for example pr/25 ).  If  a
                branch name is specified, the branch's HEAD commit ID is used.
                If not specified, the default branch's HEAD commit ID is used.

              o For  Bitbucket:  the  commit ID, branch name, or tag name that
                corresponds to the version of the  source  code  you  want  to
                build. If a branch name is specified, the branch's HEAD commit
                ID is used. If not specified, the default branch's HEAD commit
                ID is used.

              o For  Amazon  S3:  the version ID of the object that represents
                the build input ZIP file to use.

              If sourceVersion is specified at the build level, then that ver-
              sion  takes  precedence  over this sourceVersion (at the project
              level).

              For more information, see Source Version Sample  with  CodeBuild
              in the CodeBuild User Guide .

          secondarySourceVersions -> (list)
              An array of ProjectSourceVersion objects. If secondarySourceVer-
              sions is specified at the build level, then they take over these
              secondarySourceVersions (at the project level).

              (structure)
                 A source identifier and its corresponding version.

                 sourceIdentifier -> (string)
                     An  identifier  for  a  source  in the build project. The
                     identifier can only contain alphanumeric  characters  and
                     underscores,  and  must  be  less  than 128 characters in
                     length.

                 sourceVersion -> (string)
                     The source version for the corresponding  source  identi-
                     fier. If specified, must be one of:

                     o For  CodeCommit:  the  commit ID, branch, or Git tag to
                       use.

                     o For GitHub: the commit  ID,  pull  request  ID,  branch
                       name,  or  tag  name that corresponds to the version of
                       the source code you want to build. If a pull request ID
                       is specified, it must use the format pr/pull-request-ID
                       (for example, pr/25 ). If a branch name  is  specified,
                       the  branch's HEAD commit ID is used. If not specified,
                       the default branch's HEAD commit ID is used.

                     o For Bitbucket: the commit ID, branch name, or tag  name
                       that  corresponds to the version of the source code you
                       want to build. If  a  branch  name  is  specified,  the
                       branch's  HEAD commit ID is used. If not specified, the
                       default branch's HEAD commit ID is used.

                     o For Amazon S3: the version ID of the object that repre-
                       sents the build input ZIP file to use.

                     For  more  information,  see  Source  Version Sample with
                     CodeBuild in the CodeBuild User Guide .

          artifacts -> (structure)
              Information about the  build  output  artifacts  for  the  build
              project.

              type -> (string)
                 The type of build output artifact. Valid values include:

                 o CODEPIPELINE : The build project has build output generated
                   through CodePipeline.

                 NOTE:
                     The CODEPIPELINE type is not supported for secondaryArti-
                     facts .

                 o NO_ARTIFACTS : The build project does not produce any build
                   output.

                 o S3 : The build project stores build output in Amazon S3.

              location -> (string)
                 Information about the build output artifact location:

                 o If type is set to CODEPIPELINE , CodePipeline ignores  this
                   value  if  specified.  This is because CodePipeline manages
                   its build output locations instead of CodeBuild.

                 o If type is set to NO_ARTIFACTS , this value is  ignored  if
                   specified, because no build output is produced.

                 o If  type  is  set  to  S3  , this is the name of the output
                   bucket.

              path -> (string)
                 Along with namespaceType and name , the  pattern  that  Code-
                 Build uses to name and store the output artifact:

                 o If  type is set to CODEPIPELINE , CodePipeline ignores this
                   value if specified. This is  because  CodePipeline  manages
                   its build output names instead of CodeBuild.

                 o If  type  is set to NO_ARTIFACTS , this value is ignored if
                   specified, because no build output is produced.

                 o If type is set to S3 , this is the path to the output arti-
                   fact. If path is not specified, path is not used.

                 For example, if path is set to MyArtifacts , namespaceType is
                 set to NONE , and name is set to MyArtifact.zip , the  output
                 artifact   is   stored   in  the  output  bucket  at  MyArti-
                 facts/MyArtifact.zip .

              namespaceType -> (string)
                 Along with path and name , the pattern that CodeBuild uses to
                 determine the name and location to store the output artifact:

                 o If type is set to CODEPIPELINE , CodePipeline ignores  this
                   value  if  specified.  This is because CodePipeline manages
                   its build output names instead of CodeBuild.

                 o If type is set to NO_ARTIFACTS , this value is  ignored  if
                   specified, because no build output is produced.

                 o If type is set to S3 , valid values include:

                   o BUILD_ID  :  Include  the build ID in the location of the
                     build output artifact.

                   o NONE : Do not include the build ID. This is  the  default
                     if namespaceType is not specified.

                 For example, if path is set to MyArtifacts , namespaceType is
                 set to BUILD_ID , and name is set  to  MyArtifact.zip  ,  the
                 output  artifact  is stored in MyArtifacts/<build-ID>/MyArti-
                 fact.zip .

              name -> (string)
                 Along with path and namespaceType , the  pattern  that  Code-
                 Build uses to name and store the output artifact:

                 o If  type is set to CODEPIPELINE , CodePipeline ignores this
                   value if specified. This is  because  CodePipeline  manages
                   its build output names instead of CodeBuild.

                 o If  type  is set to NO_ARTIFACTS , this value is ignored if
                   specified, because no build output is produced.

                 o If type is set to S3 , this is the name of the output arti-
                   fact  object.  If  you  set  the name to be a forward slash
                   ("/"), the artifact is stored in the  root  of  the  output
                   bucket.

                 For example:

                 o If  path  is  set  to MyArtifacts , namespaceType is set to
                   BUILD_ID , and name is set to  MyArtifact.zip  ,  then  the
                   output artifact is stored in MyArtifacts/<build-ID>/MyArti-
                   fact.zip .

                 o If path is empty, namespaceType is set to NONE ,  and  name
                   is  set  to "/ ", the output artifact is stored in the root
                   of the output bucket.

                 o If path is set to MyArtifacts ,  namespaceType  is  set  to
                   BUILD_ID  , and name is set to "/ ", the output artifact is
                   stored in MyArtifacts/<build-ID> .

              packaging -> (string)
                 The type of build output artifact to create:

                 o If type is set to CODEPIPELINE , CodePipeline ignores  this
                   value  if  specified.  This is because CodePipeline manages
                   its build output artifacts instead of CodeBuild.

                 o If type is set to NO_ARTIFACTS , this value is  ignored  if
                   specified, because no build output is produced.

                 o If type is set to S3 , valid values include:

                   o NONE  :  CodeBuild  creates in the output bucket a folder
                     that contains the build output. This is  the  default  if
                     packaging is not specified.

                   o ZIP  :  CodeBuild creates in the output bucket a ZIP file
                     that contains the build output.

              overrideArtifactName -> (boolean)
                 If this flag is set, a name specified in the  buildspec  file
                 overrides  the  artifact name. The name specified in a build-
                 spec file is calculated at build time and uses the Shell Com-
                 mand Language. For example, you can append a date and time to
                 your artifact name so that it is always unique.

              encryptionDisabled -> (boolean)
                 Set to  true  if  you  do  not  want  your  output  artifacts
                 encrypted.  This  option is valid only if your artifacts type
                 is Amazon S3. If this is set with another artifacts type,  an
                 invalidInputException is thrown.

              artifactIdentifier -> (string)
                 An identifier for this artifact definition.

              bucketOwnerAccess -> (string)
                 Specifies  the bucket owner's access for objects that another
                 account uploads to their Amazon S3 bucket. By  default,  only
                 the account that uploads the objects to the bucket has access
                 to these objects. This property allows you to give the bucket
                 owner access to these objects.

                 NOTE:
                     To  use  this  property, your CodeBuild service role must
                     have  the  s3:PutBucketAcl  permission.  This  permission
                     allows  CodeBuild  to  modify the access control list for
                     the bucket.

                 This property can be one of the following values:
                     NONE

                 The bucket owner does not have access to the objects. This is
                 the default.
                     READ_ONLY

                 The  bucket  owner  has  read-only access to the objects. The
                 uploading account retains ownership of the objects.
                     FULL

                 The bucket owner has full access to the objects. Object  own-
                 ership is determined by the following criteria:

                 o If the bucket is configured with the Bucket owner preferred
                   setting, the bucket owner owns the objects.  The  uploading
                   account  will  have  object  access  as  specified  by  the
                   bucket's policy.

                 o Otherwise, the uploading account retains ownership  of  the
                   objects.

                 For  more  information  about Amazon S3 object ownership, see
                 Controlling ownership of uploaded  objects  using  S3  Object
                 Ownership in the Amazon Simple Storage Service User Guide .

          secondaryArtifacts -> (list)
              An array of ProjectArtifacts objects.

              (structure)
                 Information  about  the  build output artifacts for the build
                 project.

                 type -> (string)
                     The type of build output artifact. Valid values include:

                     o CODEPIPELINE : The build project has build output  gen-
                       erated through CodePipeline.

                     NOTE:
                        The  CODEPIPELINE  type is not supported for secondar-
                        yArtifacts .

                     o NO_ARTIFACTS : The build project does not  produce  any
                       build output.

                     o S3  :  The  build project stores build output in Amazon
                       S3.

                 location -> (string)
                     Information about the build output artifact location:

                     o If type is set to CODEPIPELINE ,  CodePipeline  ignores
                       this  value  if specified. This is because CodePipeline
                       manages its build output  locations  instead  of  Code-
                       Build.

                     o If  type is set to NO_ARTIFACTS , this value is ignored
                       if specified, because no build output is produced.

                     o If type is set to S3 , this is the name of  the  output
                       bucket.

                 path -> (string)
                     Along  with  namespaceType  and  name  , the pattern that
                     CodeBuild uses to name and store the output artifact:

                     o If type is set to CODEPIPELINE ,  CodePipeline  ignores
                       this  value  if specified. This is because CodePipeline
                       manages its build output names instead of CodeBuild.

                     o If type is set to NO_ARTIFACTS , this value is  ignored
                       if specified, because no build output is produced.

                     o If  type  is set to S3 , this is the path to the output
                       artifact. If path is not specified, path is not used.

                     For example, if path is set to MyArtifacts  ,  namespace-
                     Type is set to NONE , and name is set to MyArtifact.zip ,
                     the output artifact is stored in  the  output  bucket  at
                     MyArtifacts/MyArtifact.zip .

                 namespaceType -> (string)
                     Along  with  path  and  name , the pattern that CodeBuild
                     uses to determine the name and location to store the out-
                     put artifact:

                     o If  type  is set to CODEPIPELINE , CodePipeline ignores
                       this value if specified. This is  because  CodePipeline
                       manages its build output names instead of CodeBuild.

                     o If  type is set to NO_ARTIFACTS , this value is ignored
                       if specified, because no build output is produced.

                     o If type is set to S3 , valid values include:

                       o BUILD_ID : Include the build ID in  the  location  of
                         the build output artifact.

                       o NONE  :  Do  not  include  the  build ID. This is the
                         default if namespaceType is not specified.

                     For example, if path is set to MyArtifacts  ,  namespace-
                     Type  is  set  to  BUILD_ID  , and name is set to MyArti-
                     fact.zip , the  output  artifact  is  stored  in  MyArti-
                     facts/<build-ID>/MyArtifact.zip .

                 name -> (string)
                     Along  with  path  and  namespaceType  , the pattern that
                     CodeBuild uses to name and store the output artifact:

                     o If type is set to CODEPIPELINE ,  CodePipeline  ignores
                       this  value  if specified. This is because CodePipeline
                       manages its build output names instead of CodeBuild.

                     o If type is set to NO_ARTIFACTS , this value is  ignored
                       if specified, because no build output is produced.

                     o If  type  is set to S3 , this is the name of the output
                       artifact object. If you set the name to  be  a  forward
                       slash  ("/"), the artifact is stored in the root of the
                       output bucket.

                     For example:

                     o If path is set to MyArtifacts , namespaceType is set to
                       BUILD_ID , and name is set to MyArtifact.zip , then the
                       output    artifact     is     stored     in     MyArti-
                       facts/<build-ID>/MyArtifact.zip .

                     o If  path  is  empty, namespaceType is set to NONE , and
                       name is set to "/ ", the output artifact is  stored  in
                       the root of the output bucket.

                     o If path is set to MyArtifacts , namespaceType is set to
                       BUILD_ID , and name is set to "/ ", the output artifact
                       is stored in MyArtifacts/<build-ID> .

                 packaging -> (string)
                     The type of build output artifact to create:

                     o If  type  is set to CODEPIPELINE , CodePipeline ignores
                       this value if specified. This is  because  CodePipeline
                       manages  its  build  output  artifacts instead of Code-
                       Build.

                     o If type is set to NO_ARTIFACTS , this value is  ignored
                       if specified, because no build output is produced.

                     o If type is set to S3 , valid values include:

                       o NONE  :  CodeBuild  creates  in  the  output bucket a
                         folder that contains the build output.  This  is  the
                         default if packaging is not specified.

                       o ZIP  :  CodeBuild  creates in the output bucket a ZIP
                         file that contains the build output.

                 overrideArtifactName -> (boolean)
                     If this flag is set, a name specified  in  the  buildspec
                     file overrides the artifact name. The name specified in a
                     buildspec file is calculated at build time and  uses  the
                     Shell  Command  Language.  For  example, you can append a
                     date and time to your artifact name so that it is  always
                     unique.

                 encryptionDisabled -> (boolean)
                     Set  to  true  if  you  do not want your output artifacts
                     encrypted. This option is valid only  if  your  artifacts
                     type  is Amazon S3. If this is set with another artifacts
                     type, an invalidInputException is thrown.

                 artifactIdentifier -> (string)
                     An identifier for this artifact definition.

                 bucketOwnerAccess -> (string)
                     Specifies the bucket  owner's  access  for  objects  that
                     another  account  uploads  to  their Amazon S3 bucket. By
                     default, only the account that uploads the objects to the
                     bucket  has access to these objects. This property allows
                     you to give the bucket owner access to these objects.

                     NOTE:
                        To use this property, your CodeBuild service role must
                        have  the  s3:PutBucketAcl permission. This permission
                        allows CodeBuild to modify the access control list for
                        the bucket.

                     This property can be one of the following values:
                        NONE

                     The  bucket  owner  does  not have access to the objects.
                     This is the default.
                        READ_ONLY

                     The bucket owner has read-only access to the objects. The
                     uploading account retains ownership of the objects.
                        FULL

                     The  bucket  owner has full access to the objects. Object
                     ownership is determined by the following criteria:

                     o If the bucket is configured with the Bucket owner  pre-
                       ferred  setting, the bucket owner owns the objects. The
                       uploading account will have object access as  specified
                       by the bucket's policy.

                     o Otherwise,  the  uploading account retains ownership of
                       the objects.

                     For more information about Amazon  S3  object  ownership,
                     see  Controlling  ownership  of uploaded objects using S3
                     Object Ownership in the  Amazon  Simple  Storage  Service
                     User Guide .

          cache -> (structure)
              Information about the cache for the build project.

              type -> (string)
                 The  type  of  cache  used by the build project. Valid values
                 include:

                 o NO_CACHE : The build project does not use any cache.

                 o S3 : The build project reads and writes from and to S3.

                 o LOCAL : The build project stores a cache locally on a build
                   host that is only available to that build host.

              location -> (string)
                 Information about the cache location:

                 o NO_CACHE or LOCAL : This value is ignored.

                 o S3 : This is the S3 bucket name/prefix.

              modes -> (list)
                 An  array  of strings that specify the local cache modes. You
                 can use one or more local cache modes at the same time.  This
                 is only used for LOCAL cache types.

                 Possible values are:
                     LOCAL_SOURCE_CACHE

                 Caches  Git metadata for primary and secondary sources. After
                 the cache is created, subsequent builds pull only the  change
                 between commits. This mode is a good choice for projects with
                 a clean working directory and a source that is  a  large  Git
                 repository.  If  you choose this option and your project does
                 not use a Git repository (GitHub, GitHub Enterprise, or  Bit-
                 bucket), the option is ignored.
                     LOCAL_DOCKER_LAYER_CACHE

                 Caches existing Docker layers. This mode is a good choice for
                 projects that build or pull large Docker images. It can  pre-
                 vent  the  performance  issues caused by pulling large Docker
                 images down from the network.

                 NOTE:

                     o You can use a Docker layer cache in the Linux  environ-
                       ment only.

                     o The  privileged  flag  must be set so that your project
                       has the required Docker permissions.

                     o You should consider the  security  implications  before
                       you use a Docker layer cache.

                     LOCAL_CUSTOM_CACHE

                 Caches  directories  you  specify in the buildspec file. This
                 mode is a good choice if your build scenario is not suited to
                 one of the other three local cache modes. If you use a custom
                 cache:

                 o Only directories can be specified for caching.  You  cannot
                   specify individual files.

                 o Symlinks are used to reference cached directories.

                 o Cached directories are linked to your build before it down-
                   loads its project sources. Cached items are overridden if a
                   source  item  has  the same name. Directories are specified
                   using cache paths in the buildspec file.

                 (string)

          environment -> (structure)
              Information about the build environment for this build  project.

              type -> (string)
                 The type of build environment to use for related builds.

                 o The  environment  type  ARM_CONTAINER  is available only in
                   regions US East (N. Virginia),  US  East  (Ohio),  US  West
                   (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific
                   (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).

                 o The environment  type  LINUX_CONTAINER  with  compute  type
                   build.general1.2xlarge is available only in regions US East
                   (N. Virginia), US East (Ohio),  US  West  (Oregon),  Canada
                   (Central),  EU (Ireland), EU (London), EU (Frankfurt), Asia
                   Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singa-
                   pore),  Asia  Pacific  (Sydney), China (Beijing), and China
                   (Ningxia).

                 o The environment type LINUX_GPU_CONTAINER is available  only
                   in  regions  US East (N. Virginia), US East (Ohio), US West
                   (Oregon), Canada (Central), EU (Ireland), EU  (London),  EU
                   (Frankfurt),  Asia  Pacific  (Tokyo), Asia Pacific (Seoul),
                   Asia Pacific (Singapore), Asia  Pacific  (Sydney)  ,  China
                   (Beijing), and China (Ningxia).

                 o The    environment   types   WINDOWS_CONTAINER   and   WIN-
                   DOWS_SERVER_2019_CONTAINER are available only in regions US
                   East  (N.  Virginia), US East (Ohio), US West (Oregon), and
                   EU (Ireland).

                 For more information, see Build environment compute types  in
                 the CodeBuild user guide .

              image -> (string)
                 The  image  tag  or  image  digest that identifies the Docker
                 image to use for this build project. Use the  following  for-
                 mats:

                 o For an image tag: <registry>/<repository>:<tag> . For exam-
                   ple, in the Docker repository that CodeBuild uses to manage
                   its Docker images, this would be aws/codebuild/standard:4.0
                   .

                 o For an image digest: <registry>/<repository>@<digest> . For
                   example,    to   specify   an   image   with   the   digest
                   "sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfb-
                   dbf,"                use                <registry>/<reposi-
                   tory>@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfb-
                   dbf .

                 For more information, see Docker images provided by CodeBuild
                 in the CodeBuild user guide .

              computeType -> (string)
                 Information about the compute  resources  the  build  project
                 uses. Available values include:

                 o BUILD_GENERAL1_SMALL  :  Use  up to 3 GB memory and 2 vCPUs
                   for builds.

                 o BUILD_GENERAL1_MEDIUM : Use up to 7 GB memory and  4  vCPUs
                   for builds.

                 o BUILD_GENERAL1_LARGE  :  Use up to 16 GB memory and 8 vCPUs
                   for builds, depending on your environment type.

                 o BUILD_GENERAL1_2XLARGE : Use up to 145 GB memory, 72 vCPUs,
                   and  824  GB  of  SSD storage for builds. This compute type
                   supports Docker images up to 100 GB uncompressed.

                 If you use BUILD_GENERAL1_LARGE :

                 o For environment type LINUX_CONTAINER , you can use up to 15
                   GB memory and 8 vCPUs for builds.

                 o For  environment  type LINUX_GPU_CONTAINER , you can use up
                   to 255 GB memory, 32 vCPUs, and 4 NVIDIA  Tesla  V100  GPUs
                   for builds.

                 o For  environment  type ARM_CONTAINER , you can use up to 16
                   GB memory and 8 vCPUs on ARM-based processors for builds.

                 For more information, see Build Environment Compute Types  in
                 the CodeBuild User Guide.

              environmentVariables -> (list)
                 A  set  of  environment variables to make available to builds
                 for this build project.

                 (structure)
                     Information about an environment  variable  for  a  build
                     project or a build.

                     name -> (string)
                        The name or key of the environment variable.

                     value -> (string)
                        The value of the environment variable.

                        WARNING:
                            We  strongly discourage the use of PLAINTEXT envi-
                            ronment variables to store sensitive values, espe-
                            cially  Amazon  Web  Services  secret  key IDs and
                            secret access keys.  PLAINTEXT  environment  vari-
                            ables  can  be  displayed  in plain text using the
                            CodeBuild console and the CLI. For sensitive  val-
                            ues,  we recommend you use an environment variable
                            of type PARAMETER_STORE or SECRETS_MANAGER .

                     type -> (string)
                        The  type  of  environment  variable.   Valid   values
                        include:

                        o PARAMETER_STORE  : An environment variable stored in
                          Systems Manager Parameter Store.  To  learn  how  to
                          specify  a parameter store environment variable, see
                          env/parameter-store in the CodeBuild User Guide .

                        o PLAINTEXT : An environment variable  in  plain  text
                          format. This is the default value.

                        o SECRETS_MANAGER  : An environment variable stored in
                          Secrets Manager. To learn how to specify  a  secrets
                          manager        environment       variable,       see
                          env/secrets-manager in the CodeBuild User Guide .

              privilegedMode -> (boolean)
                 Enables running the Docker daemon inside a Docker  container.
                 Set to true only if the build project is used to build Docker
                 images. Otherwise, a build that attempts to interact with the
                 Docker daemon fails. The default setting is false .

                 You can initialize the Docker daemon during the install phase
                 of your build by adding one of the following sets of commands
                 to the install phase of your buildspec file:

                 If the operating system's base image is Ubuntu Linux:
                     -               nohup              /usr/local/bin/dockerd
                     --host=unix:///var/run/docker.sock
                     --host=tcp://0.0.0.0:2375 --storage-driver=overlay&

                     -  timeout  15 sh -c "until docker info; do echo .; sleep
                     1; done"

                 If the operating system's base image is Alpine Linux and  the
                 previous  command does not work, add the -t argument to time-
                 out :
                     -              nohup               /usr/local/bin/dockerd
                     --host=unix:///var/run/docker.sock
                     --host=tcp://0.0.0.0:2375 --storage-driver=overlay&

                     - timeout -t 15 sh -c "until  docker  info;  do  echo  .;
                     sleep 1; done"

              certificate -> (string)
                 The  ARN of the Amazon S3 bucket, path prefix, and object key
                 that contains  the  PEM-encoded  certificate  for  the  build
                 project.  For  more information, see certificate in the Code-
                 Build User Guide .

              registryCredential -> (structure)
                 The credentials for access to a private registry.

                 credential -> (string)
                     The Amazon Resource Name (ARN)  or  name  of  credentials
                     created using Secrets Manager.

                     NOTE:
                        The  credential  can  use  the name of the credentials
                        only if they exist in your current Amazon Web Services
                        Region.

                 credentialProvider -> (string)
                     The service that created the credentials to access a pri-
                     vate Docker registry. The valid  value,  SECRETS_MANAGER,
                     is for Secrets Manager.

              imagePullCredentialsType -> (string)
                 The type of credentials CodeBuild uses to pull images in your
                 build. There are two valid values:

                 o CODEBUILD specifies that CodeBuild  uses  its  own  creden-
                   tials.  This  requires  that you modify your ECR repository
                   policy to trust CodeBuild service principal.

                 o SERVICE_ROLE  specifies  that  CodeBuild  uses  your  build
                   project's service role.

                 When  you  use a cross-account or private registry image, you
                 must use SERVICE_ROLE credentials. When you use an  CodeBuild
                 curated image, you must use CODEBUILD credentials.

          serviceRole -> (string)
              The  ARN of the IAM role that enables CodeBuild to interact with
              dependent Amazon Web Services services on behalf of  the  Amazon
              Web Services account.

          timeoutInMinutes -> (integer)
              How  long, in minutes, from 5 to 480 (8 hours), for CodeBuild to
              wait before timing out any related build that did not get marked
              as completed. The default is 60 minutes.

          queuedTimeoutInMinutes -> (integer)
              The  number of minutes a build is allowed to be queued before it
              times out.

          encryptionKey -> (string)
              The Key Management Service customer master key (CMK) to be  used
              for encrypting the build output artifacts.

              NOTE:
                 You can use a cross-account KMS key to encrypt the build out-
                 put artifacts if your service role  has  permission  to  that
                 key.

              You can specify either the Amazon Resource Name (ARN) of the CMK
              or,  if  available,  the   CMK's   alias   (using   the   format
              alias/<alias-name>  ).  If  you don't specify a value, CodeBuild
              uses the managed CMK for Amazon Simple Storage  Service  (Amazon
              S3).

          tags -> (list)
              A  list  of  tag  key and value pairs associated with this build
              project.

              These tags are available for use by Amazon Web Services services
              that support CodeBuild build project tags.

              (structure)
                 A tag, consisting of a key and a value.

                 This tag is available for use by Amazon Web Services services
                 that support tags in CodeBuild.

                 key -> (string)
                     The tag's key.

                 value -> (string)
                     The tag's value.

          created -> (timestamp)
              When the build project was created, expressed in Unix time  for-
              mat.

          lastModified -> (timestamp)
              When  the build project's settings were last modified, expressed
              in Unix time format.

          webhook -> (structure)
              Information about a webhook that connects repository events to a
              build project in CodeBuild.

              url -> (string)
                 The URL to the webhook.

              payloadUrl -> (string)
                 The CodeBuild endpoint where webhook events are sent.

              secret -> (string)
                 The secret token of the associated repository.

                 NOTE:
                     A Bitbucket webhook does not support secret .

              branchFilter -> (string)
                 A  regular  expression  used  to  determine  which repository
                 branches are built when a webhook is triggered. If  the  name
                 of a branch matches the regular expression, then it is built.
                 If branchFilter is empty, then all branches are built.

                 NOTE:
                     It is recommended that you use  filterGroups  instead  of
                     branchFilter .

              filterGroups -> (list)
                 An array of arrays of WebhookFilter objects used to determine
                 which webhooks are triggered. At least one  WebhookFilter  in
                 the array must specify EVENT as its type .

                 For a build to be triggered, at least one filter group in the
                 filterGroups array must pass. For a  filter  group  to  pass,
                 each of its filters must pass.

                 (list)
                     (structure)
                        A  filter  used  to determine which webhooks trigger a
                        build.

                        type -> (string)
                            The type of webhook filter. There are six  webhook
                            filter  types: EVENT , ACTOR_ACCOUNT_ID , HEAD_REF
                            , BASE_REF , FILE_PATH , and COMMIT_MESSAGE .
                               EVENT

                            A webhook event triggers a build when the provided
                            pattern  matches  one  of five event types: PUSH ,
                            PULL_REQUEST_CREATED  ,   PULL_REQUEST_UPDATED   ,
                            PULL_REQUEST_REOPENED  , and PULL_REQUEST_MERGED .
                            The EVENT patterns are specified as a  comma-sepa-
                            rated string. For example, PUSH, PULL_REQUEST_CRE-
                            ATED, PULL_REQUEST_UPDATED filters all push,  pull
                            request  created, and pull request updated events.

                            NOTE:
                               The PULL_REQUEST_REOPENED works with GitHub and
                               GitHub Enterprise only.

                               ACTOR_ACCOUNT_ID

                            A  webhook  event  triggers a build when a GitHub,
                            GitHub Enterprise, or Bitbucket account ID matches
                            the regular expression pattern .
                               HEAD_REF

                            A  webhook  event  triggers  a build when the head
                            reference matches the regular expression pattern .
                            For     example,     refs/heads/branch-name    and
                            refs/tags/tag-name .

                            Works with  GitHub  and  GitHub  Enterprise  push,
                            GitHub  and  GitHub  Enterprise pull request, Bit-
                            bucket push, and Bitbucket pull request events.
                               BASE_REF

                            A webhook event triggers a  build  when  the  base
                            reference matches the regular expression pattern .
                            For example, refs/heads/branch-name .

                            NOTE:
                               Works with pull request events only.

                               FILE_PATH

                            A webhook triggers a build  when  the  path  of  a
                            changed  file  matches the regular expression pat-
                            tern .

                            NOTE:
                               Works with GitHub and Bitbucket events push and
                               pull  requests  events.  Also works with GitHub
                               Enterprise push events, but does not work  with
                               GitHub Enterprise pull request events.

                               COMMIT_MESSAGE

                            A  webhook  triggers  a build when the head commit
                            message matches the regular expression pattern .

                            NOTE:
                               Works with GitHub and Bitbucket events push and
                               pull  requests  events.  Also works with GitHub
                               Enterprise push events, but does not work  with
                               GitHub Enterprise pull request events.

                        pattern -> (string)
                            For  a  WebHookFilter  that  uses  EVENT  type,  a
                            comma-separated string that specifies one or  more
                            events.  For  example,  the  webhook  filter PUSH,
                            PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED  allows
                            all  push,  pull request created, and pull request
                            updated events to trigger a build.

                            For a WebHookFilter that uses  any  of  the  other
                            filter  types,  a  regular expression pattern. For
                            example, a WebHookFilter that  uses  HEAD_REF  for
                            its  type  and the pattern ^refs/heads/ triggers a
                            build when the head reference is a branch  with  a
                            reference name refs/heads/branch-name .

                        excludeMatchedPattern -> (boolean)
                            Used to indicate that the pattern determines which
                            webhook events do not trigger a  build.  If  true,
                            then  a webhook event that does not match the pat-
                            tern triggers a build. If false,  then  a  webhook
                            event that matches the pattern triggers a build.

              buildType -> (string)
                 Specifies the type of build this webhook will trigger.

              lastModifiedSecret -> (timestamp)
                 A  timestamp  that  indicates  the  last  time a repository's
                 secret token was modified.

          vpcConfig -> (structure)
              Information about the VPC configuration that CodeBuild accesses.

              vpcId -> (string)
                 The ID of the Amazon VPC.

              subnets -> (list)
                 A list of one or more subnet IDs in your Amazon VPC.

                 (string)

              securityGroupIds -> (list)
                 A list of one or more security groups IDs in your Amazon VPC.

                 (string)

          badge -> (structure)
              Information about the build badge for the build project.

              badgeEnabled -> (boolean)
                 Set this to true to generate a publicly  accessible  URL  for
                 your project's build badge.

              badgeRequestUrl -> (string)
                 The  publicly-accessible URL through which you can access the
                 build badge for your project.

          logsConfig -> (structure)
              Information about logs for the build project. A project can cre-
              ate logs in CloudWatch Logs, an S3 bucket, or both.

              cloudWatchLogs -> (structure)
                 Information about CloudWatch Logs for a build project. Cloud-
                 Watch Logs are enabled by default.

                 status -> (string)
                     The current status of the logs in CloudWatch Logs  for  a
                     build project. Valid values are:

                     o ENABLED  :  CloudWatch  Logs are enabled for this build
                       project.

                     o DISABLED : CloudWatch Logs are  not  enabled  for  this
                       build project.

                 groupName -> (string)
                     The  group  name of the logs in CloudWatch Logs. For more
                     information, see Working with Log Groups and Log  Streams
                     .

                 streamName -> (string)
                     The prefix of the stream name of the CloudWatch Logs. For
                     more information, see Working with  Log  Groups  and  Log
                     Streams .

              s3Logs -> (structure)
                 Information  about  logs  built  to  an S3 bucket for a build
                 project. S3 logs are not enabled by default.

                 status -> (string)
                     The current status of the S3  build  logs.  Valid  values
                     are:

                     o ENABLED  :  S3  build  logs  are enabled for this build
                       project.

                     o DISABLED : S3 build logs are not enabled for this build
                       project.

                 location -> (string)
                     The  ARN of an S3 bucket and the path prefix for S3 logs.
                     If your Amazon S3 bucket name is  my-bucket  ,  and  your
                     path  prefix  is  build-log , then acceptable formats are
                     my-bucket/build-log or arn:aws:s3:::my-bucket/build-log .

                 encryptionDisabled -> (boolean)
                     Set  to  true if you do not want your S3 build log output
                     encrypted. By default S3 build logs are encrypted.

                 bucketOwnerAccess -> (string)
                     Specifies the bucket  owner's  access  for  objects  that
                     another  account  uploads  to  their Amazon S3 bucket. By
                     default, only the account that uploads the objects to the
                     bucket  has access to these objects. This property allows
                     you to give the bucket owner access to these objects.

                     NOTE:
                        To use this property, your CodeBuild service role must
                        have  the  s3:PutBucketAcl permission. This permission
                        allows CodeBuild to modify the access control list for
                        the bucket.

                     This property can be one of the following values:
                        NONE

                     The  bucket  owner  does  not have access to the objects.
                     This is the default.
                        READ_ONLY

                     The bucket owner has read-only access to the objects. The
                     uploading account retains ownership of the objects.
                        FULL

                     The  bucket  owner has full access to the objects. Object
                     ownership is determined by the following criteria:

                     o If the bucket is configured with the Bucket owner  pre-
                       ferred  setting, the bucket owner owns the objects. The
                       uploading account will have object access as  specified
                       by the bucket's policy.

                     o Otherwise,  the  uploading account retains ownership of
                       the objects.

                     For more information about Amazon  S3  object  ownership,
                     see  Controlling  ownership  of uploaded objects using S3
                     Object Ownership in the  Amazon  Simple  Storage  Service
                     User Guide .

          fileSystemLocations -> (list)
              An  array  of  ProjectFileSystemLocation objects for a CodeBuild
              build project. A ProjectFileSystemLocation object specifies  the
              identifier  , location , mountOptions , mountPoint , and type of
              a file system created using Amazon Elastic File System.

              (structure)
                 Information about a file system  created  by  Amazon  Elastic
                 File  System  (EFS). For more information, see What Is Amazon
                 Elastic File System?

                 type -> (string)
                     The type of the file system. The one  supported  type  is
                     EFS .

                 location -> (string)
                     A  string  that specifies the location of the file system
                     created by Amazon EFS. Its format is efs-dns-name:/direc-
                     tory-path . You can find the DNS name of file system when
                     you view it in the Amazon EFS console. The directory path
                     is  a  path  to a directory in the file system that Code-
                     Build mounts. For example, if the DNS name of a file sys-
                     tem  is fs-abcd1234.efs.us-west-2.amazonaws.com , and its
                     mount directory  is  my-efs-mount-directory  ,  then  the
                     location       is       fs-abcd1234.efs.us-west-2.amazon-
                     aws.com:/my-efs-mount-directory .

                     The directory path  in  the  format  efs-dns-name:/direc-
                     tory-path  is optional. If you do not specify a directory
                     path, the location is only the  DNS  name  and  CodeBuild
                     mounts the entire file system.

                 mountPoint -> (string)
                     The  location  in  the container where you mount the file
                     system.

                 identifier -> (string)
                     The name used to access a file system created  by  Amazon
                     EFS. CodeBuild creates an environment variable by append-
                     ing the identifier in all capital letters to CODEBUILD_ .
                     For example, if you specify my_efs for identifier , a new
                     environment variable is create named CODEBUILD_MY_EFS .

                     The identifier is used to mount your file system.

                 mountOptions -> (string)
                     The mount options for a file  system  created  by  Amazon
                     EFS.  The  default  mount  options  used by CodeBuild are
                     nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2
                     . For more information, see Recommended NFS Mount Options
                     .

          buildBatchConfig -> (structure)
              A  ProjectBuildBatchConfig object that defines the  batch  build
              options for the project.

              serviceRole -> (string)
                 Specifies the service role ARN for the batch build project.

              combineArtifacts -> (boolean)
                 Specifies  if  the build artifacts for the batch build should
                 be combined into a single artifact location.

              restrictions -> (structure)
                 A BatchRestrictions object that  specifies  the  restrictions
                 for the batch build.

                 maximumBuildsAllowed -> (integer)
                     Specifies the maximum number of builds allowed.

                 computeTypesAllowed -> (list)
                     An  array  of strings that specify the compute types that
                     are allowed for the batch build.  See  Build  environment
                     compute  types in the CodeBuild User Guide for these val-
                     ues.

                     (string)

              timeoutInMins -> (integer)
                 Specifies the maximum amount of time, in  minutes,  that  the
                 batch build must be completed in.

              batchReportMode -> (string)
                 Specifies  how  build  status  reports are sent to the source
                 provider for the batch build. This property is only used when
                 the source provider for your project is Bitbucket, GitHub, or
                 GitHub Enterprise, and your project is configured  to  report
                 build statuses to the source provider.
                     REPORT_AGGREGATED_BATCH

                 (Default)  Aggregate  all of the build statuses into a single
                 status report.
                     REPORT_INDIVIDUAL_BUILDS

                 Send a separate status report for each individual build.

          concurrentBuildLimit -> (integer)
              The maximum number of concurrent builds  that  are  allowed  for
              this project.

              New  builds  are only started if the current number of builds is
              less than or equal to this limit. If  the  current  build  count
              meets this limit, new builds are throttled and are not run.

          projectVisibility -> (string)
              Specifies  the visibility of the project's builds. Possible val-
              ues are:
                 PUBLIC_READ

              The project builds are visible to the public.
                 PRIVATE

              The project builds are not visible to the public.

          publicProjectAlias -> (string)
              Contains the project identifier used with the public build APIs.

          resourceAccessRole -> (string)
              The  ARN  of  the  IAM role that enables CodeBuild to access the
              CloudWatch Logs  and  Amazon  S3  artifacts  for  the  project's
              builds.



                                                              CREATE-PROJECT()
