START-BUILD-BATCH()                                        START-BUILD-BATCH()



NAME
       start-build-batch -

DESCRIPTION
       Starts a batch build for a project.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            start-build-batch
          --project-name <value>
          [--secondary-sources-override <value>]
          [--secondary-sources-version-override <value>]
          [--source-version <value>]
          [--artifacts-override <value>]
          [--secondary-artifacts-override <value>]
          [--environment-variables-override <value>]
          [--source-type-override <value>]
          [--source-location-override <value>]
          [--source-auth-override <value>]
          [--git-clone-depth-override <value>]
          [--git-submodules-config-override <value>]
          [--buildspec-override <value>]
          [--insecure-ssl-override | --no-insecure-ssl-override]
          [--report-build-batch-status-override | --no-report-build-batch-status-override]
          [--environment-type-override <value>]
          [--image-override <value>]
          [--compute-type-override <value>]
          [--certificate-override <value>]
          [--cache-override <value>]
          [--service-role-override <value>]
          [--privileged-mode-override | --no-privileged-mode-override]
          [--build-timeout-in-minutes-override <value>]
          [--queued-timeout-in-minutes-override <value>]
          [--encryption-key-override <value>]
          [--idempotency-token <value>]
          [--logs-config-override <value>]
          [--registry-credential-override <value>]
          [--image-pull-credentials-type-override <value>]
          [--build-batch-config-override <value>]
          [--debug-session-enabled | --no-debug-session-enabled]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --project-name (string)
          The name of the project.

       --secondary-sources-override (list)
          An  array  of  ProjectSource  objects  that  override  the secondary
          sources defined in the batch build project.

          (structure)
              Information about the build input  source  code  for  the  build
              project.

              type -> (string)
                 The  type  of  repository that contains the source code to be
                 built. Valid values include:

                 o BITBUCKET : The source code is in a Bitbucket repository.

                 o CODECOMMIT : The source code is in  an  CodeCommit  reposi-
                   tory.

                 o CODEPIPELINE  :  The  source code settings are specified in
                   the source action of a pipeline in CodePipeline.

                 o GITHUB : The source code is in a GitHub  or  GitHub  Enter-
                   prise Cloud repository.

                 o GITHUB_ENTERPRISE  :  The source code is in a GitHub Enter-
                   prise Server repository.

                 o NO_SOURCE : The project does not have input source code.

                 o S3 : The source code is in an Amazon S3 bucket.

              location -> (string)
                 Information about the location  of  the  source  code  to  be
                 built. Valid values include:

                 o For  source  code settings that are specified in the source
                   action of a pipeline in CodePipeline, location  should  not
                   be  specified. If it is specified, CodePipeline ignores it.
                   This is because CodePipeline uses the settings in  a  pipe-
                   line's source action instead of this value.

                 o For  source  code  in  an  CodeCommit repository, the HTTPS
                   clone URL to the repository that contains the  source  code
                   and  the  buildspec file (for example, https://git-codecom-
                   mit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).

                 o For source code in an Amazon S3 input bucket,  one  of  the
                   following.

                   o The  path  to  the ZIP file that contains the source code
                     (for example, <bucket-name>/<path>/<object-name>.zip ).

                   o The path to the folder that contains the source code (for
                     example, <bucket-name>/<path-to-source-code>/<folder>/ ).

                 o For source code in a GitHub repository, the HTTPS clone URL
                   to  the  repository that contains the source and the build-
                   spec file.  You  must  connect  your  Amazon  Web  Services
                   account  to  your GitHub account. Use the CodeBuild console
                   to start creating a build project. When you use the console
                   to connect (or reconnect) with GitHub, on the GitHub Autho-
                   rize application page, for  Organization  access  ,  choose
                   Request  access  next  to each repository you want to allow
                   CodeBuild to have access  to,  and  then  choose  Authorize
                   application  .  (After  you  have  connected to your GitHub
                   account, you do not  need  to  finish  creating  the  build
                   project.  You can leave the CodeBuild console.) To instruct
                   CodeBuild to use this connection, in the source object, set
                   the auth object's type value to OAUTH .

                 o For  source code in a Bitbucket repository, the HTTPS clone
                   URL to the repository that  contains  the  source  and  the
                   buildspec  file.  You must connect your Amazon Web Services
                   account to your Bitbucket account. Use the  CodeBuild  con-
                   sole  to  start  creating a build project. When you use the
                   console to connect (or reconnect) with  Bitbucket,  on  the
                   Bitbucket Confirm access to your account page, choose Grant
                   access .  (After  you  have  connected  to  your  Bitbucket
                   account,  you  do  not  need  to  finish creating the build
                   project. You can leave the CodeBuild console.) To  instruct
                   CodeBuild to use this connection, in the source object, set
                   the auth object's type value to OAUTH .

                 If you specify CODEPIPELINE  for  the  Type  property,  don't
                 specify  this  property. For all of the other types, you must
                 specify Location .

              gitCloneDepth -> (integer)
                 Information about the Git clone depth for the build  project.

              gitSubmodulesConfig -> (structure)
                 Information  about  the  Git submodules configuration for the
                 build project.

                 fetchSubmodules -> (boolean)
                     Set to true to fetch Git submodules  for  your  CodeBuild
                     build project.

              buildspec -> (string)
                 The  buildspec file declaration to use for the builds in this
                 build project.

                 If this value is set, it can be either  an  inline  buildspec
                 definition,  the path to an alternate buildspec file relative
                 to the value of the  built-in  CODEBUILD_SRC_DIR  environment
                 variable,  or the path to an S3 bucket. The bucket must be in
                 the same Amazon Web Services Region  as  the  build  project.
                 Specify  the  buildspec  file  using  its  ARN  (for example,
                 arn:aws:s3:::my-codebuild-sample2/buildspec.yml  ).  If  this
                 value  is  not  provided  or  is  set to an empty string, the
                 source code must contain a buildspec file in its root  direc-
                 tory. For more information, see Buildspec File Name and Stor-
                 age Location .

              auth -> (structure)
                 Information about the authorization settings for CodeBuild to
                 access the source code to be built.

                 This  information  is  for  the CodeBuild console's use only.
                 Your code should not get or set this information directly.

                 type -> (string)

                     NOTE:
                        This data type is deprecated and is no longer accurate
                        or used.

                     The  authorization  type  to use. The only valid value is
                     OAUTH , which represents the OAuth authorization type.

                 resource -> (string)
                     The resource value that applies to the  specified  autho-
                     rization type.

              reportBuildStatus -> (boolean)
                 Set  to true to report the status of a build's start and fin-
                 ish to your source provider. This option is valid  only  when
                 your  source  provider  is GitHub, GitHub Enterprise, or Bit-
                 bucket. If this  is  set  and  you  use  a  different  source
                 provider, an invalidInputException is thrown.

                 To be able to report the build status to the source provider,
                 the user associated with the source provider must have  write
                 access  to  the repo. If the user does not have write access,
                 the build status cannot be updated. For more information, see
                 Source provider access in the CodeBuild User Guide .

                 The  status  of  a  build  triggered  by  a webhook is always
                 reported to your source provider.

                 If your project's builds are triggered by a webhook, you must
                 push  a  new commit to the repo for a change to this property
                 to take effect.

              buildStatusConfig -> (structure)
                 Contains information  that  defines  how  the  build  project
                 reports  the build status to the source provider. This option
                 is  only  used  when  the  source  provider   is   GITHUB   ,
                 GITHUB_ENTERPRISE , or BITBUCKET .

                 context -> (string)
                     Specifies the context of the build status CodeBuild sends
                     to the source  provider.  The  usage  of  this  parameter
                     depends on the source provider.
                        Bitbucket

                     This parameter is used for the name parameter in the Bit-
                     bucket commit status. For more information, see build  in
                     the Bitbucket API documentation.
                        GitHub/GitHub Enterprise Server

                     This  parameter  is used for the context parameter in the
                     GitHub commit status. For more information, see Create  a
                     commit status in the GitHub developer guide.

                 targetUrl -> (string)
                     Specifies  the  target  url of the build status CodeBuild
                     sends to the source provider. The usage of this parameter
                     depends on the source provider.
                        Bitbucket

                     This  parameter is used for the url parameter in the Bit-
                     bucket commit status. For more information, see build  in
                     the Bitbucket API documentation.
                        GitHub/GitHub Enterprise Server

                     This  parameter  is  used for the target_url parameter in
                     the GitHub  commit  status.  For  more  information,  see
                     Create a commit status in the GitHub developer guide.

              insecureSsl -> (boolean)
                 Enable  this  flag to ignore SSL warnings while connecting to
                 the project source code.

              sourceIdentifier -> (string)
                 An identifier for this project  source.  The  identifier  can
                 only  contain  alphanumeric  characters  and underscores, and
                 must be less than 128 characters in length.

       Shorthand Syntax:

          type=string,location=string,gitCloneDepth=integer,gitSubmodulesConfig={fetchSubmodules=boolean},buildspec=string,auth={type=string,resource=string},reportBuildStatus=boolean,buildStatusConfig={context=string,targetUrl=string},insecureSsl=boolean,sourceIdentifier=string ...

       JSON Syntax:

          [
            {
              "type": "CODECOMMIT"|"CODEPIPELINE"|"GITHUB"|"S3"|"BITBUCKET"|"GITHUB_ENTERPRISE"|"NO_SOURCE",
              "location": "string",
              "gitCloneDepth": integer,
              "gitSubmodulesConfig": {
                "fetchSubmodules": true|false
              },
              "buildspec": "string",
              "auth": {
                "type": "OAUTH",
                "resource": "string"
              },
              "reportBuildStatus": true|false,
              "buildStatusConfig": {
                "context": "string",
                "targetUrl": "string"
              },
              "insecureSsl": true|false,
              "sourceIdentifier": "string"
            }
            ...
          ]

       --secondary-sources-version-override (list)
          An array of ProjectSourceVersion objects that override the secondary
          source versions in the batch build project.

          (structure)
              A source identifier and its corresponding version.

              sourceIdentifier -> (string)
                 An  identifier for a source in the build project. The identi-
                 fier can only  contain  alphanumeric  characters  and  under-
                 scores, and must be less than 128 characters in length.

              sourceVersion -> (string)
                 The  source  version for the corresponding source identifier.
                 If specified, must be one of:

                 o For CodeCommit: the commit ID, branch, or Git tag to use.

                 o For GitHub: the commit ID, pull request ID, branch name, or
                   tag name that corresponds to the version of the source code
                   you want to build. If a pull request ID  is  specified,  it
                   must  use the format pr/pull-request-ID (for example, pr/25
                   ). If a branch name is specified, the branch's HEAD  commit
                   ID  is  used.  If  not specified, the default branch's HEAD
                   commit ID is used.

                 o For Bitbucket: the commit ID, branch name, or tag name that
                   corresponds  to  the version of the source code you want to
                   build. If a branch name is  specified,  the  branch's  HEAD
                   commit  ID  is used. If not specified, the default branch's
                   HEAD commit ID is used.

                 o For Amazon S3: the version ID of the object that represents
                   the build input ZIP file to use.

                 For  more  information,  see Source Version Sample with Code-
                 Build in the CodeBuild User Guide .

       Shorthand Syntax:

          sourceIdentifier=string,sourceVersion=string ...

       JSON Syntax:

          [
            {
              "sourceIdentifier": "string",
              "sourceVersion": "string"
            }
            ...
          ]

       --source-version (string)
          The version of the batch build input to be  built,  for  this  build
          only.  If  not  specified, the latest version is used. If specified,
          the contents depends on the source provider:
              CodeCommit

          The commit ID, branch, or Git tag to use.
              GitHub

          The commit ID, pull request ID, branch name, or tag name that corre-
          sponds  to  the  version  of the source code you want to build. If a
          pull  request  ID   is   specified,   it   must   use   the   format
          pr/pull-request-ID  (for example pr/25 ). If a branch name is speci-
          fied, the branch's HEAD commit ID is used.  If  not  specified,  the
          default branch's HEAD commit ID is used.
              Bitbucket

          The commit ID, branch name, or tag name that corresponds to the ver-
          sion of the source code you want to build. If a branch name is spec-
          ified,  the  branch's  HEAD commit ID is used. If not specified, the
          default branch's HEAD commit ID is used.
              Amazon S3

          The version ID of the object that represents  the  build  input  ZIP
          file to use.

          If  sourceVersion  is  specified  at  the  project  level, then this
          sourceVersion (at the build level) takes precedence.

          For more information, see Source Version Sample  with  CodeBuild  in
          the CodeBuild User Guide .

       --artifacts-override (structure)
          An array of ProjectArtifacts objects that contains information about
          the build output artifact overrides for the build project.

          type -> (string)
              The type of build output artifact. Valid values include:

              o CODEPIPELINE : The build project has  build  output  generated
                through CodePipeline.

              NOTE:
                 The CODEPIPELINE type is not supported for secondaryArtifacts
                 .

              o NO_ARTIFACTS : The build project does not  produce  any  build
                output.

              o S3 : The build project stores build output in Amazon S3.

          location -> (string)
              Information about the build output artifact location:

              o If  type  is  set  to CODEPIPELINE , CodePipeline ignores this
                value if specified. This is because CodePipeline  manages  its
                build output locations instead of CodeBuild.

              o If  type  is  set  to  NO_ARTIFACTS , this value is ignored if
                specified, because no build output is produced.

              o If type is set to S3 , this is the name of the output  bucket.

          path -> (string)
              Along  with  namespaceType and name , the pattern that CodeBuild
              uses to name and store the output artifact:

              o If type is set to CODEPIPELINE  ,  CodePipeline  ignores  this
                value  if  specified. This is because CodePipeline manages its
                build output names instead of CodeBuild.

              o If type is set to NO_ARTIFACTS ,  this  value  is  ignored  if
                specified, because no build output is produced.

              o If  type  is  set to S3 , this is the path to the output arti-
                fact. If path is not specified, path is not used.

              For example, if path is set to MyArtifacts  ,  namespaceType  is
              set  to  NONE  ,  and name is set to MyArtifact.zip , the output
              artifact is stored in the output bucket  at  MyArtifacts/MyArti-
              fact.zip .

          namespaceType -> (string)
              Along  with  path  and name , the pattern that CodeBuild uses to
              determine the name and location to store the output artifact:

              o If type is set to CODEPIPELINE  ,  CodePipeline  ignores  this
                value  if  specified. This is because CodePipeline manages its
                build output names instead of CodeBuild.

              o If type is set to NO_ARTIFACTS ,  this  value  is  ignored  if
                specified, because no build output is produced.

              o If type is set to S3 , valid values include:

                o BUILD_ID : Include the build ID in the location of the build
                  output artifact.

                o NONE : Do not include the build ID. This is the  default  if
                  namespaceType is not specified.

              For  example,  if  path is set to MyArtifacts , namespaceType is
              set to BUILD_ID , and name is set to MyArtifact.zip , the output
              artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .

          name -> (string)
              Along  with  path and namespaceType , the pattern that CodeBuild
              uses to name and store the output artifact:

              o If type is set to CODEPIPELINE  ,  CodePipeline  ignores  this
                value  if  specified. This is because CodePipeline manages its
                build output names instead of CodeBuild.

              o If type is set to NO_ARTIFACTS ,  this  value  is  ignored  if
                specified, because no build output is produced.

              o If type is set to S3 , this is the name of the output artifact
                object. If you set the name to be a forward slash  ("/"),  the
                artifact is stored in the root of the output bucket.

              For example:

              o If  path  is  set  to  MyArtifacts  ,  namespaceType is set to
                BUILD_ID , and name is set to MyArtifact.zip , then the output
                artifact  is stored in MyArtifacts/<build-ID>/MyArtifact.zip .

              o If path is empty, namespaceType is set to NONE , and  name  is
                set  to "/ ", the output artifact is stored in the root of the
                output bucket.

              o If path is set  to  MyArtifacts  ,  namespaceType  is  set  to
                BUILD_ID  ,  and  name  is set to "/ ", the output artifact is
                stored in MyArtifacts/<build-ID> .

          packaging -> (string)
              The type of build output artifact to create:

              o If type is set to CODEPIPELINE  ,  CodePipeline  ignores  this
                value  if  specified. This is because CodePipeline manages its
                build output artifacts instead of CodeBuild.

              o If type is set to NO_ARTIFACTS ,  this  value  is  ignored  if
                specified, because no build output is produced.

              o If type is set to S3 , valid values include:

                o NONE  : CodeBuild creates in the output bucket a folder that
                  contains the build output. This is the default if  packaging
                  is not specified.

                o ZIP : CodeBuild creates in the output bucket a ZIP file that
                  contains the build output.

          overrideArtifactName -> (boolean)
              If this flag is set, a name  specified  in  the  buildspec  file
              overrides  the  artifact name. The name specified in a buildspec
              file is calculated at build time and uses the Shell Command Lan-
              guage. For example, you can append a date and time to your arti-
              fact name so that it is always unique.

          encryptionDisabled -> (boolean)
              Set to true if you do not want your output artifacts  encrypted.
              This  option  is valid only if your artifacts type is Amazon S3.
              If this is set with another artifacts type,  an  invalidInputEx-
              ception is thrown.

          artifactIdentifier -> (string)
              An identifier for this artifact definition.

          bucketOwnerAccess -> (string)
              Specifies  the  bucket  owner's  access for objects that another
              account uploads to their Amazon S3 bucket. By default, only  the
              account  that  uploads  the  objects to the bucket has access to
              these objects. This property allows you to give the bucket owner
              access to these objects.

              NOTE:
                 To  use  this property, your CodeBuild service role must have
                 the s3:PutBucketAcl permission. This permission allows  Code-
                 Build to modify the access control list for the bucket.

              This property can be one of the following values:
                 NONE

              The  bucket  owner  does not have access to the objects. This is
              the default.
                 READ_ONLY

              The bucket owner  has  read-only  access  to  the  objects.  The
              uploading account retains ownership of the objects.
                 FULL

              The  bucket  owner has full access to the objects. Object owner-
              ship is determined by the following criteria:

              o If the bucket is configured with the  Bucket  owner  preferred
                setting,  the  bucket  owner  owns  the objects. The uploading
                account will have object access as specified by  the  bucket's
                policy.

              o Otherwise,  the  uploading  account  retains  ownership of the
                objects.

              For more information  about  Amazon  S3  object  ownership,  see
              Controlling ownership of uploaded objects using S3 Object Owner-
              ship in the Amazon Simple Storage Service User Guide .

       Shorthand Syntax:

          type=string,location=string,path=string,namespaceType=string,name=string,packaging=string,overrideArtifactName=boolean,encryptionDisabled=boolean,artifactIdentifier=string,bucketOwnerAccess=string

       JSON Syntax:

          {
            "type": "CODEPIPELINE"|"S3"|"NO_ARTIFACTS",
            "location": "string",
            "path": "string",
            "namespaceType": "NONE"|"BUILD_ID",
            "name": "string",
            "packaging": "NONE"|"ZIP",
            "overrideArtifactName": true|false,
            "encryptionDisabled": true|false,
            "artifactIdentifier": "string",
            "bucketOwnerAccess": "NONE"|"READ_ONLY"|"FULL"
          }

       --secondary-artifacts-override (list)
          An array of ProjectArtifacts objects  that  override  the  secondary
          artifacts defined in the batch build project.

          (structure)
              Information  about  the  build  output  artifacts  for the build
              project.

              type -> (string)
                 The type of build output artifact. Valid values include:

                 o CODEPIPELINE : The build project has build output generated
                   through CodePipeline.

                 NOTE:
                     The CODEPIPELINE type is not supported for secondaryArti-
                     facts .

                 o NO_ARTIFACTS : The build project does not produce any build
                   output.

                 o S3 : The build project stores build output in Amazon S3.

              location -> (string)
                 Information about the build output artifact location:

                 o If  type is set to CODEPIPELINE , CodePipeline ignores this
                   value if specified. This is  because  CodePipeline  manages
                   its build output locations instead of CodeBuild.

                 o If  type  is set to NO_ARTIFACTS , this value is ignored if
                   specified, because no build output is produced.

                 o If type is set to S3 , this  is  the  name  of  the  output
                   bucket.

              path -> (string)
                 Along  with  namespaceType  and name , the pattern that Code-
                 Build uses to name and store the output artifact:

                 o If type is set to CODEPIPELINE , CodePipeline ignores  this
                   value  if  specified.  This is because CodePipeline manages
                   its build output names instead of CodeBuild.

                 o If type is set to NO_ARTIFACTS , this value is  ignored  if
                   specified, because no build output is produced.

                 o If type is set to S3 , this is the path to the output arti-
                   fact. If path is not specified, path is not used.

                 For example, if path is set to MyArtifacts , namespaceType is
                 set  to NONE , and name is set to MyArtifact.zip , the output
                 artifact  is  stored  in  the  output   bucket   at   MyArti-
                 facts/MyArtifact.zip .

              namespaceType -> (string)
                 Along with path and name , the pattern that CodeBuild uses to
                 determine the name and location to store the output artifact:

                 o If  type is set to CODEPIPELINE , CodePipeline ignores this
                   value if specified. This is  because  CodePipeline  manages
                   its build output names instead of CodeBuild.

                 o If  type  is set to NO_ARTIFACTS , this value is ignored if
                   specified, because no build output is produced.

                 o If type is set to S3 , valid values include:

                   o BUILD_ID : Include the build ID in the  location  of  the
                     build output artifact.

                   o NONE  :  Do not include the build ID. This is the default
                     if namespaceType is not specified.

                 For example, if path is set to MyArtifacts , namespaceType is
                 set  to  BUILD_ID  ,  and name is set to MyArtifact.zip , the
                 output artifact is stored  in  MyArtifacts/<build-ID>/MyArti-
                 fact.zip .

              name -> (string)
                 Along  with  path  and namespaceType , the pattern that Code-
                 Build uses to name and store the output artifact:

                 o If type is set to CODEPIPELINE , CodePipeline ignores  this
                   value  if  specified.  This is because CodePipeline manages
                   its build output names instead of CodeBuild.

                 o If type is set to NO_ARTIFACTS , this value is  ignored  if
                   specified, because no build output is produced.

                 o If type is set to S3 , this is the name of the output arti-
                   fact object. If you set the name  to  be  a  forward  slash
                   ("/"),  the  artifact  is  stored in the root of the output
                   bucket.

                 For example:

                 o If path is set to MyArtifacts ,  namespaceType  is  set  to
                   BUILD_ID  ,  and  name  is set to MyArtifact.zip , then the
                   output artifact is stored in MyArtifacts/<build-ID>/MyArti-
                   fact.zip .

                 o If  path  is empty, namespaceType is set to NONE , and name
                   is set to "/ ", the output artifact is stored in  the  root
                   of the output bucket.

                 o If  path  is  set  to MyArtifacts , namespaceType is set to
                   BUILD_ID , and name is set to "/ ", the output artifact  is
                   stored in MyArtifacts/<build-ID> .

              packaging -> (string)
                 The type of build output artifact to create:

                 o If  type is set to CODEPIPELINE , CodePipeline ignores this
                   value if specified. This is  because  CodePipeline  manages
                   its build output artifacts instead of CodeBuild.

                 o If  type  is set to NO_ARTIFACTS , this value is ignored if
                   specified, because no build output is produced.

                 o If type is set to S3 , valid values include:

                   o NONE : CodeBuild creates in the output  bucket  a  folder
                     that  contains  the  build output. This is the default if
                     packaging is not specified.

                   o ZIP : CodeBuild creates in the output bucket a  ZIP  file
                     that contains the build output.

              overrideArtifactName -> (boolean)
                 If  this  flag is set, a name specified in the buildspec file
                 overrides the artifact name. The name specified in  a  build-
                 spec file is calculated at build time and uses the Shell Com-
                 mand Language. For example, you can append a date and time to
                 your artifact name so that it is always unique.

              encryptionDisabled -> (boolean)
                 Set  to  true  if  you  do  not  want  your  output artifacts
                 encrypted. This option is valid only if your  artifacts  type
                 is  Amazon S3. If this is set with another artifacts type, an
                 invalidInputException is thrown.

              artifactIdentifier -> (string)
                 An identifier for this artifact definition.

              bucketOwnerAccess -> (string)
                 Specifies the bucket owner's access for objects that  another
                 account  uploads  to their Amazon S3 bucket. By default, only
                 the account that uploads the objects to the bucket has access
                 to these objects. This property allows you to give the bucket
                 owner access to these objects.

                 NOTE:
                     To use this property, your CodeBuild  service  role  must
                     have  the  s3:PutBucketAcl  permission.  This  permission
                     allows CodeBuild to modify the access  control  list  for
                     the bucket.

                 This property can be one of the following values:
                     NONE

                 The bucket owner does not have access to the objects. This is
                 the default.
                     READ_ONLY

                 The bucket owner has read-only access  to  the  objects.  The
                 uploading account retains ownership of the objects.
                     FULL

                 The  bucket owner has full access to the objects. Object own-
                 ership is determined by the following criteria:

                 o If the bucket is configured with the Bucket owner preferred
                   setting,  the  bucket owner owns the objects. The uploading
                   account  will  have  object  access  as  specified  by  the
                   bucket's policy.

                 o Otherwise,  the  uploading account retains ownership of the
                   objects.

                 For more information about Amazon S3  object  ownership,  see
                 Controlling  ownership  of  uploaded  objects using S3 Object
                 Ownership in the Amazon Simple Storage Service User Guide .

       Shorthand Syntax:

          type=string,location=string,path=string,namespaceType=string,name=string,packaging=string,overrideArtifactName=boolean,encryptionDisabled=boolean,artifactIdentifier=string,bucketOwnerAccess=string ...

       JSON Syntax:

          [
            {
              "type": "CODEPIPELINE"|"S3"|"NO_ARTIFACTS",
              "location": "string",
              "path": "string",
              "namespaceType": "NONE"|"BUILD_ID",
              "name": "string",
              "packaging": "NONE"|"ZIP",
              "overrideArtifactName": true|false,
              "encryptionDisabled": true|false,
              "artifactIdentifier": "string",
              "bucketOwnerAccess": "NONE"|"READ_ONLY"|"FULL"
            }
            ...
          ]

       --environment-variables-override (list)
          An array of EnvironmentVariable objects that override,  or  add  to,
          the environment variables defined in the batch build project.

          (structure)
              Information about an environment variable for a build project or
              a build.

              name -> (string)
                 The name or key of the environment variable.

              value -> (string)
                 The value of the environment variable.

                 WARNING:
                     We strongly discourage the use of  PLAINTEXT  environment
                     variables  to  store  sensitive values, especially Amazon
                     Web Services secret  key  IDs  and  secret  access  keys.
                     PLAINTEXT environment variables can be displayed in plain
                     text using the CodeBuild console and the CLI. For  sensi-
                     tive values, we recommend you use an environment variable
                     of type PARAMETER_STORE or SECRETS_MANAGER .

              type -> (string)
                 The type of environment variable. Valid values include:

                 o PARAMETER_STORE : An environment variable stored in Systems
                   Manager  Parameter Store. To learn how to specify a parame-
                   ter store environment variable, see env/parameter-store  in
                   the CodeBuild User Guide .

                 o PLAINTEXT  :  An environment variable in plain text format.
                   This is the default value.

                 o SECRETS_MANAGER : An environment variable stored in Secrets
                   Manager. To learn how to specify a secrets manager environ-
                   ment variable, see  env/secrets-manager  in  the  CodeBuild
                   User Guide .

       Shorthand Syntax:

          name=string,value=string,type=string ...

       JSON Syntax:

          [
            {
              "name": "string",
              "value": "string",
              "type": "PLAINTEXT"|"PARAMETER_STORE"|"SECRETS_MANAGER"
            }
            ...
          ]

       --source-type-override (string)
          The source input type that overrides the source input defined in the
          batch build project.

          Possible values:

          o CODECOMMIT

          o CODEPIPELINE

          o GITHUB

          o S3

          o BITBUCKET

          o GITHUB_ENTERPRISE

          o NO_SOURCE

       --source-location-override (string)
          A location that overrides, for this batch build, the source location
          defined in the batch build project.

       --source-auth-override (structure)
          A  SourceAuth  object  that  overrides  the one defined in the batch
          build project. This override applies only  if  the  build  project's
          source is BitBucket or GitHub.

          type -> (string)

              NOTE:
                 This  data  type  is  deprecated and is no longer accurate or
                 used.

              The authorization type to use. The only valid value is  OAUTH  ,
              which represents the OAuth authorization type.

          resource -> (string)
              The  resource  value that applies to the specified authorization
              type.

       Shorthand Syntax:

          type=string,resource=string

       JSON Syntax:

          {
            "type": "OAUTH",
            "resource": "string"
          }

       --git-clone-depth-override (integer)
          The user-defined depth of history, with a minimum value of  0,  that
          overrides,  for this batch build only, any previous depth of history
          defined in the batch build project.

       --git-submodules-config-override (structure)
          A GitSubmodulesConfig object that overrides the Git submodules  con-
          figuration for this batch build.

          fetchSubmodules -> (boolean)
              Set  to  true  to  fetch Git submodules for your CodeBuild build
              project.

       Shorthand Syntax:

          fetchSubmodules=boolean

       JSON Syntax:

          {
            "fetchSubmodules": true|false
          }

       --buildspec-override (string)
          A buildspec file declaration that overrides, for  this  build  only,
          the latest one already defined in the build project.

          If  this  value is set, it can be either an inline buildspec defini-
          tion, the path to an alternate buildspec file relative to the  value
          of  the built-in CODEBUILD_SRC_DIR environment variable, or the path
          to an S3 bucket. The bucket must be in the same Amazon Web  Services
          Region  as  the  build project. Specify the buildspec file using its
          ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ).
          If  this  value  is  not  provided or is set to an empty string, the
          source code must contain a buildspec file in its root directory. For
          more information, see Buildspec File Name and Storage Location .

       --insecure-ssl-override | --no-insecure-ssl-override (boolean)
          Enable this flag to override the insecure SSL setting that is speci-
          fied in the batch build project. The insecure SSL setting determines
          whether  to  ignore  SSL  warnings  while  connecting to the project
          source code. This override applies only if  the  build's  source  is
          GitHub Enterprise.

       --report-build-batch-status-override   |   --no-report-build-batch-sta-
       tus-override (boolean)
          Set to true to report to your source provider the status of a  batch
          build's  start  and completion. If you use this option with a source
          provider other than GitHub,  GitHub  Enterprise,  or  Bitbucket,  an
          invalidInputException is thrown.

          NOTE:
              The  status of a build triggered by a webhook is always reported
              to your source provider.

       --environment-type-override (string)
          A container type for this batch build that overrides the one  speci-
          fied in the batch build project.

          Possible values:

          o WINDOWS_CONTAINER

          o LINUX_CONTAINER

          o LINUX_GPU_CONTAINER

          o ARM_CONTAINER

          o WINDOWS_SERVER_2019_CONTAINER

       --image-override (string)
          The  name  of  an  image for this batch build that overrides the one
          specified in the batch build project.

       --compute-type-override (string)
          The name of a compute type for this batch build that  overrides  the
          one specified in the batch build project.

          Possible values:

          o BUILD_GENERAL1_SMALL

          o BUILD_GENERAL1_MEDIUM

          o BUILD_GENERAL1_LARGE

          o BUILD_GENERAL1_2XLARGE

       --certificate-override (string)
          The  name  of  a certificate for this batch build that overrides the
          one specified in the batch build project.

       --cache-override (structure)
          A ProjectCache object that specifies cache overrides.

          type -> (string)
              The type of cache  used  by  the  build  project.  Valid  values
              include:

              o NO_CACHE : The build project does not use any cache.

              o S3 : The build project reads and writes from and to S3.

              o LOCAL  :  The  build project stores a cache locally on a build
                host that is only available to that build host.

          location -> (string)
              Information about the cache location:

              o NO_CACHE or LOCAL : This value is ignored.

              o S3 : This is the S3 bucket name/prefix.

          modes -> (list)
              An array of strings that specify the local cache modes. You  can
              use one or more local cache modes at the same time. This is only
              used for LOCAL cache types.

              Possible values are:
                 LOCAL_SOURCE_CACHE

              Caches Git metadata for primary and secondary sources. After the
              cache is created, subsequent builds pull only the change between
              commits. This mode is a good choice for projects  with  a  clean
              working  directory  and a source that is a large Git repository.
              If you choose this option and your project does not  use  a  Git
              repository (GitHub, GitHub Enterprise, or Bitbucket), the option
              is ignored.
                 LOCAL_DOCKER_LAYER_CACHE

              Caches existing Docker layers. This mode is a  good  choice  for
              projects  that build or pull large Docker images. It can prevent
              the performance issues caused by  pulling  large  Docker  images
              down from the network.

              NOTE:

                 o You  can  use a Docker layer cache in the Linux environment
                   only.

                 o The privileged flag must be set so that  your  project  has
                   the required Docker permissions.

                 o You  should  consider  the security implications before you
                   use a Docker layer cache.

                 LOCAL_CUSTOM_CACHE

              Caches directories you specify in the buildspec file. This  mode
              is  a good choice if your build scenario is not suited to one of
              the other three local cache modes. If you use a custom cache:

              o Only directories can be  specified  for  caching.  You  cannot
                specify individual files.

              o Symlinks are used to reference cached directories.

              o Cached  directories  are  linked to your build before it down-
                loads its project sources. Cached items are  overridden  if  a
                source item has the same name. Directories are specified using
                cache paths in the buildspec file.

              (string)

       Shorthand Syntax:

          type=string,location=string,modes=string,string

       JSON Syntax:

          {
            "type": "NO_CACHE"|"S3"|"LOCAL",
            "location": "string",
            "modes": ["LOCAL_DOCKER_LAYER_CACHE"|"LOCAL_SOURCE_CACHE"|"LOCAL_CUSTOM_CACHE", ...]
          }

       --service-role-override (string)
          The name of a service role for this batch build that  overrides  the
          one specified in the batch build project.

       --privileged-mode-override | --no-privileged-mode-override (boolean)
          Enable  this  flag  to  override  privileged mode in the batch build
          project.

       --build-timeout-in-minutes-override (integer)
          Overrides the build timeout specified in the batch build project.

       --queued-timeout-in-minutes-override (integer)
          The number of minutes a batch build is allowed to be  queued  before
          it times out.

       --encryption-key-override (string)
          The  Key Management Service customer master key (CMK) that overrides
          the one specified in the batch build project. The CMK  key  encrypts
          the build output artifacts.

          NOTE:
              You  can use a cross-account KMS key to encrypt the build output
              artifacts if your service role has permission to that key.

          You can specify either the Amazon Resource Name (ARN) of the CMK or,
          if  available,  the CMK's alias (using the format alias/<alias-name>
          ).

       --idempotency-token (string)
          A unique, case sensitive identifier you provide to ensure the  idem-
          potency of the StartBuildBatch request. The token is included in the
          StartBuildBatch request and is valid for five minutes. If you repeat
          the StartBuildBatch request with the same token, but change a param-
          eter, CodeBuild returns a parameter mismatch error.

       --logs-config-override (structure)
          A LogsConfig object that override the log settings  defined  in  the
          batch build project.

          cloudWatchLogs -> (structure)
              Information  about  CloudWatch  Logs for a build project. Cloud-
              Watch Logs are enabled by default.

              status -> (string)
                 The current status of the logs in CloudWatch Logs for a build
                 project. Valid values are:

                 o ENABLED  :  CloudWatch  Logs  are  enabled  for  this build
                   project.

                 o DISABLED : CloudWatch Logs are not enabled for  this  build
                   project.

              groupName -> (string)
                 The  group  name  of  the  logs  in CloudWatch Logs. For more
                 information, see Working with Log Groups and Log Streams .

              streamName -> (string)
                 The prefix of the stream name of  the  CloudWatch  Logs.  For
                 more information, see Working with Log Groups and Log Streams
                 .

          s3Logs -> (structure)
              Information about logs  built  to  an  S3  bucket  for  a  build
              project. S3 logs are not enabled by default.

              status -> (string)
                 The current status of the S3 build logs. Valid values are:

                 o ENABLED : S3 build logs are enabled for this build project.

                 o DISABLED : S3 build logs are not  enabled  for  this  build
                   project.

              location -> (string)
                 The  ARN  of an S3 bucket and the path prefix for S3 logs. If
                 your Amazon S3 bucket name is my-bucket , and your path  pre-
                 fix    is   build-log   ,   then   acceptable   formats   are
                 my-bucket/build-log or arn:aws:s3:::my-bucket/build-log .

              encryptionDisabled -> (boolean)
                 Set to true if you do not  want  your  S3  build  log  output
                 encrypted. By default S3 build logs are encrypted.

              bucketOwnerAccess -> (string)
                 Specifies  the bucket owner's access for objects that another
                 account uploads to their Amazon S3 bucket. By  default,  only
                 the account that uploads the objects to the bucket has access
                 to these objects. This property allows you to give the bucket
                 owner access to these objects.

                 NOTE:
                     To  use  this  property, your CodeBuild service role must
                     have  the  s3:PutBucketAcl  permission.  This  permission
                     allows  CodeBuild  to  modify the access control list for
                     the bucket.

                 This property can be one of the following values:
                     NONE

                 The bucket owner does not have access to the objects. This is
                 the default.
                     READ_ONLY

                 The  bucket  owner  has  read-only access to the objects. The
                 uploading account retains ownership of the objects.
                     FULL

                 The bucket owner has full access to the objects. Object  own-
                 ership is determined by the following criteria:

                 o If the bucket is configured with the Bucket owner preferred
                   setting, the bucket owner owns the objects.  The  uploading
                   account  will  have  object  access  as  specified  by  the
                   bucket's policy.

                 o Otherwise, the uploading account retains ownership  of  the
                   objects.

                 For  more  information  about Amazon S3 object ownership, see
                 Controlling ownership of uploaded  objects  using  S3  Object
                 Ownership in the Amazon Simple Storage Service User Guide .

       Shorthand Syntax:

          cloudWatchLogs={status=string,groupName=string,streamName=string},s3Logs={status=string,location=string,encryptionDisabled=boolean,bucketOwnerAccess=string}

       JSON Syntax:

          {
            "cloudWatchLogs": {
              "status": "ENABLED"|"DISABLED",
              "groupName": "string",
              "streamName": "string"
            },
            "s3Logs": {
              "status": "ENABLED"|"DISABLED",
              "location": "string",
              "encryptionDisabled": true|false,
              "bucketOwnerAccess": "NONE"|"READ_ONLY"|"FULL"
            }
          }

       --registry-credential-override (structure)
          A RegistryCredential object that overrides credentials for access to
          a private registry.

          credential -> (string)
              The Amazon Resource Name (ARN) or name  of  credentials  created
              using Secrets Manager.

              NOTE:
                 The  credential  can  use the name of the credentials only if
                 they exist in your current Amazon Web Services Region.

          credentialProvider -> (string)
              The service that created the credentials  to  access  a  private
              Docker  registry.  The  valid  value,  SECRETS_MANAGER,  is  for
              Secrets Manager.

       Shorthand Syntax:

          credential=string,credentialProvider=string

       JSON Syntax:

          {
            "credential": "string",
            "credentialProvider": "SECRETS_MANAGER"
          }

       --image-pull-credentials-type-override (string)
          The type of credentials CodeBuild uses to pull images in your  batch
          build. There are two valid values:
              CODEBUILD

          Specifies  that  CodeBuild  uses  its own credentials. This requires
          that you modify your ECR repository policy to trust CodeBuild's ser-
          vice principal.
              SERVICE_ROLE

          Specifies that CodeBuild uses your build project's service role.

          When  using  a cross-account or private registry image, you must use
          SERVICE_ROLE credentials. When using an CodeBuild curated image, you
          must use CODEBUILD credentials.

          Possible values:

          o CODEBUILD

          o SERVICE_ROLE

       --build-batch-config-override (structure)
          A BuildBatchConfigOverride object that contains batch build configu-
          ration overrides.

          serviceRole -> (string)
              Specifies the service role ARN for the batch build project.

          combineArtifacts -> (boolean)
              Specifies if the build artifacts for the batch build  should  be
              combined into a single artifact location.

          restrictions -> (structure)
              A  BatchRestrictions  object that specifies the restrictions for
              the batch build.

              maximumBuildsAllowed -> (integer)
                 Specifies the maximum number of builds allowed.

              computeTypesAllowed -> (list)
                 An array of strings that specify the compute types  that  are
                 allowed  for  the  batch build. See Build environment compute
                 types in the CodeBuild User Guide for these values.

                 (string)

          timeoutInMins -> (integer)
              Specifies the maximum amount of time, in minutes, that the batch
              build must be completed in.

          batchReportMode -> (string)
              Specifies  how  build  status  reports  are  sent  to the source
              provider for the batch build. This property is  only  used  when
              the  source  provider  for your project is Bitbucket, GitHub, or
              GitHub Enterprise, and your  project  is  configured  to  report
              build statuses to the source provider.
                 REPORT_AGGREGATED_BATCH

              (Default) Aggregate all of the build statuses into a single sta-
              tus report.
                 REPORT_INDIVIDUAL_BUILDS

              Send a separate status report for each individual build.

       Shorthand Syntax:

          serviceRole=string,combineArtifacts=boolean,restrictions={maximumBuildsAllowed=integer,computeTypesAllowed=[string,string]},timeoutInMins=integer,batchReportMode=string

       JSON Syntax:

          {
            "serviceRole": "string",
            "combineArtifacts": true|false,
            "restrictions": {
              "maximumBuildsAllowed": integer,
              "computeTypesAllowed": ["string", ...]
            },
            "timeoutInMins": integer,
            "batchReportMode": "REPORT_INDIVIDUAL_BUILDS"|"REPORT_AGGREGATED_BATCH"
          }

       --debug-session-enabled | --no-debug-session-enabled (boolean)
          Specifies if session debugging is enabled for this batch build.  For
          more  information,  see Viewing a running build in Session Manager .
          Batch session debugging is not supported for matrix batch builds.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To start a batch build in AWS CodeBuild.

       The following start-build-batch example starts a  batch  build  of  the
       specified project.

          aws codebuild start-build-batch \
              --project-name <project-name>

       Output:

          {
              "buildBatch": {
                  "id": "<project-name>:<batch-ID>",
                  "arn": "arn:aws:codebuild:<region-ID>:<account-ID>:build-batch/<project-name>:<batch-ID>",
                  "startTime": "2020-10-21T16:54:24.740000+00:00",
                  "currentPhase": "SUBMITTED",
                  "buildBatchStatus": "IN_PROGRESS",
                  "projectName": "<project-name>",
                  "source": {
                      "type": "GITHUB",
                      "location": "<GitHub-repo-URL>",
                      "gitCloneDepth": 1,
                      "gitSubmodulesConfig": {
                          "fetchSubmodules": false
                      },
                      "reportBuildStatus": false,
                      "insecureSsl": false
                  },
                  "secondarySources": [],
                  "secondarySourceVersions": [],
                  "artifacts": {
                      "location": ""
                  },
                  "secondaryArtifacts": [],
                  "cache": {
                      "type": "NO_CACHE"
                  },
                  "environment": {
                      "type": "LINUX_CONTAINER",
                      "image": "aws/codebuild/amazonlinux2-x86_64-standard:3.0",
                      "computeType": "BUILD_GENERAL1_SMALL",
                      "environmentVariables": [],
                      "privilegedMode": false,
                      "imagePullCredentialsType": "CODEBUILD"
                  },
                  "logConfig": {
                      "cloudWatchLogs": {
                          "status": "ENABLED"
                      },
                      "s3Logs": {
                          "status": "DISABLED",
                          "encryptionDisabled": false
                      }
                  },
                  "buildTimeoutInMinutes": 60,
                  "queuedTimeoutInMinutes": 480,
                  "complete": false,
                  "initiator": "<username>",
                  "encryptionKey": "arn:aws:kms:<region-ID>:<account-ID>:alias/aws/s3",
                  "buildBatchNumber": 3,
                  "buildBatchConfig": {
                      "serviceRole": "arn:aws:iam::<account-ID>:role/service-role/<service-role-name>",
                      "restrictions": {
                          "maximumBuildsAllowed": 100
                      },
                      "timeoutInMins": 480
                  }
              }
          }

       For  more  information,  see  Batch  builds in AWS CodeBuild in the AWS
       CodeBuild User Guide.

OUTPUT
       buildBatch -> (structure)
          A BuildBatch object that contains information about the batch build.

          id -> (string)
              The identifier of the batch build.

          arn -> (string)
              The ARN of the batch build.

          startTime -> (timestamp)
              The date and time that the batch build started.

          endTime -> (timestamp)
              The date and time that the batch build ended.

          currentPhase -> (string)
              The current phase of the batch build.

          buildBatchStatus -> (string)
              The status of the batch build.

          sourceVersion -> (string)
              The identifier of the version of the source code to be built.

          resolvedSourceVersion -> (string)
              The  identifier  of  the  resolved version of this batch build's
              source code.

              o For CodeCommit, GitHub, GitHub Enterprise, and BitBucket,  the
                commit ID.

              o For  CodePipeline,  the  source  revision  provided  by  Code-
                Pipeline.

              o For Amazon S3, this does not apply.

          projectName -> (string)
              The name of the batch build project.

          phases -> (list)
              An array of BuildBatchPhase objects the specify  the  phases  of
              the batch build.

              (structure)
                 Contains information about a stage for a batch build.

                 phaseType -> (string)
                     The name of the batch build phase. Valid values include:
                        COMBINE_ARTIFACTS

                     Build output artifacts are being combined and uploaded to
                     the output location.
                        DOWNLOAD_BATCHSPEC

                     The batch build specification is being downloaded.
                        FAILED

                     One or more of the builds failed.
                        IN_PROGRESS

                     The batch build is in progress.
                        STOPPED

                     The batch build was stopped.
                        SUBMITTED

                     The btach build has been submitted.
                        SUCCEEDED

                     The batch build succeeded.

                 phaseStatus -> (string)
                     The current status of the batch build phase. Valid values
                     include:
                        FAILED

                     The build phase failed.
                        FAULT

                     The build phase faulted.
                        IN_PROGRESS

                     The build phase is still in progress.
                        STOPPED

                     The build phase stopped.
                        SUCCEEDED

                     The build phase succeeded.
                        TIMED_OUT

                     The build phase timed out.

                 startTime -> (timestamp)
                     When  the  batch  build  phase started, expressed in Unix
                     time format.

                 endTime -> (timestamp)
                     When the batch build phase ended, expressed in Unix  time
                     format.

                 durationInSeconds -> (long)
                     How  long,  in  seconds,  between the starting and ending
                     times of the batch build's phase.

                 contexts -> (list)
                     Additional information about the batch build phase. Espe-
                     cially to help troubleshoot a failed batch build.

                     (structure)
                        Additional information about a build phase that has an
                        error. You can use this information for  troubleshoot-
                        ing.

                        statusCode -> (string)
                            The  status  code  for  the  context  of the build
                            phase.

                        message -> (string)
                            An explanation of the build phase's context.  This
                            might include a command ID and an exit code.

          source -> (structure)
              Information  about  the  build  input  source code for the build
              project.

              type -> (string)
                 The type of repository that contains the source  code  to  be
                 built. Valid values include:

                 o BITBUCKET : The source code is in a Bitbucket repository.

                 o CODECOMMIT  :  The  source code is in an CodeCommit reposi-
                   tory.

                 o CODEPIPELINE : The source code settings  are  specified  in
                   the source action of a pipeline in CodePipeline.

                 o GITHUB  :  The  source code is in a GitHub or GitHub Enter-
                   prise Cloud repository.

                 o GITHUB_ENTERPRISE : The source code is in a  GitHub  Enter-
                   prise Server repository.

                 o NO_SOURCE : The project does not have input source code.

                 o S3 : The source code is in an Amazon S3 bucket.

              location -> (string)
                 Information  about  the  location  of  the  source code to be
                 built. Valid values include:

                 o For source code settings that are specified in  the  source
                   action  of  a pipeline in CodePipeline, location should not
                   be specified. If it is specified, CodePipeline ignores  it.
                   This  is  because CodePipeline uses the settings in a pipe-
                   line's source action instead of this value.

                 o For source code in  an  CodeCommit  repository,  the  HTTPS
                   clone  URL  to the repository that contains the source code
                   and the buildspec file (for  example,  https://git-codecom-
                   mit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).

                 o For  source  code  in an Amazon S3 input bucket, one of the
                   following.

                   o The path to the ZIP file that contains  the  source  code
                     (for example, <bucket-name>/<path>/<object-name>.zip ).

                   o The path to the folder that contains the source code (for
                     example, <bucket-name>/<path-to-source-code>/<folder>/ ).

                 o For source code in a GitHub repository, the HTTPS clone URL
                   to the repository that contains the source and  the  build-
                   spec  file.  You  must  connect  your  Amazon  Web Services
                   account to your GitHub account. Use the  CodeBuild  console
                   to start creating a build project. When you use the console
                   to connect (or reconnect) with GitHub, on the GitHub Autho-
                   rize  application  page,  for  Organization access , choose
                   Request access next to each repository you  want  to  allow
                   CodeBuild  to  have  access  to,  and then choose Authorize
                   application . (After you  have  connected  to  your  GitHub
                   account,  you  do  not  need  to  finish creating the build
                   project. You can leave the CodeBuild console.) To  instruct
                   CodeBuild to use this connection, in the source object, set
                   the auth object's type value to OAUTH .

                 o For source code in a Bitbucket repository, the HTTPS  clone
                   URL  to  the  repository  that  contains the source and the
                   buildspec file. You must connect your Amazon  Web  Services
                   account  to  your Bitbucket account. Use the CodeBuild con-
                   sole to start creating a build project. When  you  use  the
                   console  to  connect  (or reconnect) with Bitbucket, on the
                   Bitbucket Confirm access to your account page, choose Grant
                   access  .  (After  you  have  connected  to  your Bitbucket
                   account, you do not  need  to  finish  creating  the  build
                   project.  You can leave the CodeBuild console.) To instruct
                   CodeBuild to use this connection, in the source object, set
                   the auth object's type value to OAUTH .

                 If  you  specify  CODEPIPELINE  for  the Type property, don't
                 specify this property. For all of the other types,  you  must
                 specify Location .

              gitCloneDepth -> (integer)
                 Information  about the Git clone depth for the build project.

              gitSubmodulesConfig -> (structure)
                 Information about the Git submodules  configuration  for  the
                 build project.

                 fetchSubmodules -> (boolean)
                     Set  to  true  to fetch Git submodules for your CodeBuild
                     build project.

              buildspec -> (string)
                 The buildspec file declaration to use for the builds in  this
                 build project.

                 If  this  value  is set, it can be either an inline buildspec
                 definition, the path to an alternate buildspec file  relative
                 to  the  value  of the built-in CODEBUILD_SRC_DIR environment
                 variable, or the path to an S3 bucket. The bucket must be  in
                 the  same  Amazon  Web  Services Region as the build project.
                 Specify the  buildspec  file  using  its  ARN  (for  example,
                 arn:aws:s3:::my-codebuild-sample2/buildspec.yml  ).  If  this
                 value is not provided or is  set  to  an  empty  string,  the
                 source  code must contain a buildspec file in its root direc-
                 tory. For more information, see Buildspec File Name and Stor-
                 age Location .

              auth -> (structure)
                 Information about the authorization settings for CodeBuild to
                 access the source code to be built.

                 This information is for the  CodeBuild  console's  use  only.
                 Your code should not get or set this information directly.

                 type -> (string)

                     NOTE:
                        This data type is deprecated and is no longer accurate
                        or used.

                     The authorization type to use. The only  valid  value  is
                     OAUTH , which represents the OAuth authorization type.

                 resource -> (string)
                     The  resource  value that applies to the specified autho-
                     rization type.

              reportBuildStatus -> (boolean)
                 Set to true to report the status of a build's start and  fin-
                 ish  to  your source provider. This option is valid only when
                 your source provider is GitHub, GitHub  Enterprise,  or  Bit-
                 bucket.  If  this  is  set  and  you  use  a different source
                 provider, an invalidInputException is thrown.

                 To be able to report the build status to the source provider,
                 the  user associated with the source provider must have write
                 access to the repo. If the user does not have  write  access,
                 the build status cannot be updated. For more information, see
                 Source provider access in the CodeBuild User Guide .

                 The status of a  build  triggered  by  a  webhook  is  always
                 reported to your source provider.

                 If your project's builds are triggered by a webhook, you must
                 push a new commit to the repo for a change to  this  property
                 to take effect.

              buildStatusConfig -> (structure)
                 Contains  information  that  defines  how  the  build project
                 reports the build status to the source provider. This  option
                 is   only   used   when  the  source  provider  is  GITHUB  ,
                 GITHUB_ENTERPRISE , or BITBUCKET .

                 context -> (string)
                     Specifies the context of the build status CodeBuild sends
                     to  the  source  provider.  The  usage  of this parameter
                     depends on the source provider.
                        Bitbucket

                     This parameter is used for the name parameter in the Bit-
                     bucket  commit status. For more information, see build in
                     the Bitbucket API documentation.
                        GitHub/GitHub Enterprise Server

                     This parameter is used for the context parameter  in  the
                     GitHub  commit status. For more information, see Create a
                     commit status in the GitHub developer guide.

                 targetUrl -> (string)
                     Specifies the target url of the  build  status  CodeBuild
                     sends to the source provider. The usage of this parameter
                     depends on the source provider.
                        Bitbucket

                     This parameter is used for the url parameter in the  Bit-
                     bucket  commit status. For more information, see build in
                     the Bitbucket API documentation.
                        GitHub/GitHub Enterprise Server

                     This parameter is used for the  target_url  parameter  in
                     the  GitHub  commit  status.  For  more  information, see
                     Create a commit status in the GitHub developer guide.

              insecureSsl -> (boolean)
                 Enable this flag to ignore SSL warnings while  connecting  to
                 the project source code.

              sourceIdentifier -> (string)
                 An  identifier  for  this  project source. The identifier can
                 only contain alphanumeric  characters  and  underscores,  and
                 must be less than 128 characters in length.

          secondarySources -> (list)
              An  array  of  ProjectSource objects that define the sources for
              the batch build.

              (structure)
                 Information about the build input source code for  the  build
                 project.

                 type -> (string)
                     The  type  of repository that contains the source code to
                     be built. Valid values include:

                     o BITBUCKET : The source code is in a  Bitbucket  reposi-
                       tory.

                     o CODECOMMIT : The source code is in an CodeCommit repos-
                       itory.

                     o CODEPIPELINE : The source code settings  are  specified
                       in the source action of a pipeline in CodePipeline.

                     o GITHUB  :  The  source  code  is  in a GitHub or GitHub
                       Enterprise Cloud repository.

                     o GITHUB_ENTERPRISE : The source  code  is  in  a  GitHub
                       Enterprise Server repository.

                     o NO_SOURCE  :  The  project  does  not have input source
                       code.

                     o S3 : The source code is in an Amazon S3 bucket.

                 location -> (string)
                     Information about the location of the source code  to  be
                     built. Valid values include:

                     o For  source  code  settings  that  are specified in the
                       source action of a pipeline in  CodePipeline,  location
                       should  not  be  specified.  If  it is specified, Code-
                       Pipeline ignores it. This is because CodePipeline  uses
                       the  settings  in a pipeline's source action instead of
                       this value.

                     o For source code in an CodeCommit repository, the  HTTPS
                       clone  URL  to  the repository that contains the source
                       code   and   the   buildspec   file    (for    example,
                       https://git-codecommit.<region-ID>.amazon-
                       aws.com/v1/repos/<repo-name> ).

                     o For source code in an Amazon S3 input  bucket,  one  of
                       the following.

                       o The  path  to  the  ZIP file that contains the source
                         code                  (for                   example,
                         <bucket-name>/<path>/<object-name>.zip ).

                       o The  path to the folder that contains the source code
                         (for                                         example,
                         <bucket-name>/<path-to-source-code>/<folder>/ ).

                     o For source code in a GitHub repository, the HTTPS clone
                       URL to the repository that contains the source and  the
                       buildspec  file.  You must connect your Amazon Web Ser-
                       vices account to your GitHub account. Use the CodeBuild
                       console to start creating a build project. When you use
                       the console to connect (or reconnect) with  GitHub,  on
                       the GitHub Authorize application page, for Organization
                       access , choose Request access next to each  repository
                       you want to allow CodeBuild to have access to, and then
                       choose Authorize application .  (After  you  have  con-
                       nected  to your GitHub account, you do not need to fin-
                       ish creating the build project. You can leave the Code-
                       Build  console.) To instruct CodeBuild to use this con-
                       nection, in the source object, set  the  auth  object's
                       type value to OAUTH .

                     o For  source  code  in a Bitbucket repository, the HTTPS
                       clone URL to the repository that  contains  the  source
                       and  the  buildspec  file. You must connect your Amazon
                       Web Services account to your Bitbucket account. Use the
                       CodeBuild  console  to  start creating a build project.
                       When you use the console to connect (or reconnect) with
                       Bitbucket,  on  the  Bitbucket  Confirm  access to your
                       account page, choose Grant access  .  (After  you  have
                       connected to your Bitbucket account, you do not need to
                       finish creating the build project. You  can  leave  the
                       CodeBuild  console.)  To instruct CodeBuild to use this
                       connection, in the source object, set the auth object's
                       type value to OAUTH .

                     If  you specify CODEPIPELINE for the Type property, don't
                     specify this property. For all of the  other  types,  you
                     must specify Location .

                 gitCloneDepth -> (integer)
                     Information  about  the  Git  clone  depth  for the build
                     project.

                 gitSubmodulesConfig -> (structure)
                     Information about the Git  submodules  configuration  for
                     the build project.

                     fetchSubmodules -> (boolean)
                        Set to true to fetch Git submodules for your CodeBuild
                        build project.

                 buildspec -> (string)
                     The buildspec file declaration to use for the  builds  in
                     this build project.

                     If  this  value is set, it can be either an inline build-
                     spec definition, the path to an alternate buildspec  file
                     relative  to  the value of the built-in CODEBUILD_SRC_DIR
                     environment variable, or the path to an  S3  bucket.  The
                     bucket  must be in the same Amazon Web Services Region as
                     the build project. Specify the buildspec file  using  its
                     ARN    (for    example,    arn:aws:s3:::my-codebuild-sam-
                     ple2/buildspec.yml ). If this value is not provided or is
                     set  to  an  empty string, the source code must contain a
                     buildspec file in its root directory. For  more  informa-
                     tion, see Buildspec File Name and Storage Location .

                 auth -> (structure)
                     Information  about  the  authorization settings for Code-
                     Build to access the source code to be built.

                     This information is for the CodeBuild console's use only.
                     Your   code  should  not  get  or  set  this  information
                     directly.

                     type -> (string)

                        NOTE:
                            This data type is  deprecated  and  is  no  longer
                            accurate or used.

                        The authorization type to use. The only valid value is
                        OAUTH , which represents the OAuth authorization type.

                     resource -> (string)
                        The  resource  value  that  applies  to  the specified
                        authorization type.

                 reportBuildStatus -> (boolean)
                     Set to true to report the status of a build's  start  and
                     finish to your source provider. This option is valid only
                     when your source provider is GitHub,  GitHub  Enterprise,
                     or  Bitbucket.  If  this  is  set and you use a different
                     source provider, an invalidInputException is thrown.

                     To be able to report  the  build  status  to  the  source
                     provider,  the  user  associated with the source provider
                     must have write access to the repo. If the user does  not
                     have  write  access,  the build status cannot be updated.
                     For more information, see Source provider access  in  the
                     CodeBuild User Guide .

                     The  status  of  a build triggered by a webhook is always
                     reported to your source provider.

                     If your project's builds are triggered by a webhook,  you
                     must  push  a new commit to the repo for a change to this
                     property to take effect.

                 buildStatusConfig -> (structure)
                     Contains information that defines how the  build  project
                     reports  the  build  status  to the source provider. This
                     option is only used when the source provider is GITHUB  ,
                     GITHUB_ENTERPRISE , or BITBUCKET .

                     context -> (string)
                        Specifies  the  context  of the build status CodeBuild
                        sends to the source provider. The usage of this param-
                        eter depends on the source provider.
                            Bitbucket

                        This  parameter  is used for the name parameter in the
                        Bitbucket commit status.  For  more  information,  see
                        build in the Bitbucket API documentation.
                            GitHub/GitHub Enterprise Server

                        This  parameter  is  used for the context parameter in
                        the GitHub commit status. For  more  information,  see
                        Create  a commit status in the GitHub developer guide.

                     targetUrl -> (string)
                        Specifies the target url of the build status CodeBuild
                        sends to the source provider. The usage of this param-
                        eter depends on the source provider.
                            Bitbucket

                        This parameter is used for the url  parameter  in  the
                        Bitbucket  commit  status.  For  more information, see
                        build in the Bitbucket API documentation.
                            GitHub/GitHub Enterprise Server

                        This parameter is used for the target_url parameter in
                        the  GitHub  commit  status. For more information, see
                        Create a commit status in the GitHub developer  guide.

                 insecureSsl -> (boolean)
                     Enable  this flag to ignore SSL warnings while connecting
                     to the project source code.

                 sourceIdentifier -> (string)
                     An identifier for this project source. The identifier can
                     only contain alphanumeric characters and underscores, and
                     must be less than 128 characters in length.

          secondarySourceVersions -> (list)
              An array of ProjectSourceVersion objects. Each ProjectSourceVer-
              sion must be one of:

              o For CodeCommit: the commit ID, branch, or Git tag to use.

              o For  GitHub:  the  commit ID, pull request ID, branch name, or
                tag name that corresponds to the version of  the  source  code
                you  want to build. If a pull request ID is specified, it must
                use the format pr/pull-request-ID (for example, pr/25 ). If  a
                branch name is specified, the branch's HEAD commit ID is used.
                If not specified, the default branch's HEAD commit ID is used.

              o For  Bitbucket:  the  commit ID, branch name, or tag name that
                corresponds to the version of the  source  code  you  want  to
                build. If a branch name is specified, the branch's HEAD commit
                ID is used. If not specified, the default branch's HEAD commit
                ID is used.

              o For  Amazon  S3:  the version ID of the object that represents
                the build input ZIP file to use.

              (structure)
                 A source identifier and its corresponding version.

                 sourceIdentifier -> (string)
                     An identifier for a source  in  the  build  project.  The
                     identifier  can  only contain alphanumeric characters and
                     underscores, and must be  less  than  128  characters  in
                     length.

                 sourceVersion -> (string)
                     The  source  version for the corresponding source identi-
                     fier. If specified, must be one of:

                     o For CodeCommit: the commit ID, branch, or  Git  tag  to
                       use.

                     o For  GitHub:  the  commit  ID,  pull request ID, branch
                       name, or tag name that corresponds to  the  version  of
                       the source code you want to build. If a pull request ID
                       is specified, it must use the format pr/pull-request-ID
                       (for  example,  pr/25 ). If a branch name is specified,
                       the branch's HEAD commit ID is used. If not  specified,
                       the default branch's HEAD commit ID is used.

                     o For  Bitbucket: the commit ID, branch name, or tag name
                       that corresponds to the version of the source code  you
                       want  to  build.  If  a  branch  name is specified, the
                       branch's HEAD commit ID is used. If not specified,  the
                       default branch's HEAD commit ID is used.

                     o For Amazon S3: the version ID of the object that repre-
                       sents the build input ZIP file to use.

                     For more information,  see  Source  Version  Sample  with
                     CodeBuild in the CodeBuild User Guide .

          artifacts -> (structure)
              A BuildArtifacts object the defines the build artifacts for this
              batch build.

              location -> (string)
                 Information about the location of the build artifacts.

              sha256sum -> (string)
                 The SHA-256 hash of the build artifact.

                 You can use this hash along with a checksum tool  to  confirm
                 file integrity and authenticity.

                 NOTE:
                     This value is available only if the build project's pack-
                     aging value is set to ZIP .

              md5sum -> (string)
                 The MD5 hash of the build artifact.

                 You can use this hash along with a checksum tool  to  confirm
                 file integrity and authenticity.

                 NOTE:
                     This value is available only if the build project's pack-
                     aging value is set to ZIP .

              overrideArtifactName -> (boolean)
                 If this flag is set, a name specified in the  buildspec  file
                 overrides  the  artifact name. The name specified in a build-
                 spec file is calculated at build time and uses the Shell Com-
                 mand Language. For example, you can append a date and time to
                 your artifact name so that it is always unique.

              encryptionDisabled -> (boolean)
                 Information that tells you if encryption for build  artifacts
                 is disabled.

              artifactIdentifier -> (string)
                 An identifier for this artifact definition.

              bucketOwnerAccess -> (string)
                 Specifies  the bucket owner's access for objects that another
                 account uploads to their Amazon S3 bucket. By  default,  only
                 the account that uploads the objects to the bucket has access
                 to these objects. This property allows you to give the bucket
                 owner access to these objects.

                 NOTE:
                     To  use  this  property, your CodeBuild service role must
                     have  the  s3:PutBucketAcl  permission.  This  permission
                     allows  CodeBuild  to  modify the access control list for
                     the bucket.

                 This property can be one of the following values:
                     NONE

                 The bucket owner does not have access to the objects. This is
                 the default.
                     READ_ONLY

                 The  bucket  owner  has  read-only access to the objects. The
                 uploading account retains ownership of the objects.
                     FULL

                 The bucket owner has full access to the objects. Object  own-
                 ership is determined by the following criteria:

                 o If the bucket is configured with the Bucket owner preferred
                   setting, the bucket owner owns the objects.  The  uploading
                   account  will  have  object  access  as  specified  by  the
                   bucket's policy.

                 o Otherwise, the uploading account retains ownership  of  the
                   objects.

                 For  more  information  about Amazon S3 object ownership, see
                 Controlling ownership of uploaded  objects  using  S3  Object
                 Ownership in the Amazon Simple Storage Service User Guide .

          secondaryArtifacts -> (list)
              An  array  of  BuildArtifacts objects the define the build arti-
              facts for this batch build.

              (structure)
                 Information about build output artifacts.

                 location -> (string)
                     Information about the location of the build artifacts.

                 sha256sum -> (string)
                     The SHA-256 hash of the build artifact.

                     You can use this hash along with a checksum tool to  con-
                     firm file integrity and authenticity.

                     NOTE:
                        This  value  is  available only if the build project's
                        packaging value is set to ZIP .

                 md5sum -> (string)
                     The MD5 hash of the build artifact.

                     You can use this hash along with a checksum tool to  con-
                     firm file integrity and authenticity.

                     NOTE:
                        This  value  is  available only if the build project's
                        packaging value is set to ZIP .

                 overrideArtifactName -> (boolean)
                     If this flag is set, a name specified  in  the  buildspec
                     file overrides the artifact name. The name specified in a
                     buildspec file is calculated at build time and  uses  the
                     Shell  Command  Language.  For  example, you can append a
                     date and time to your artifact name so that it is  always
                     unique.

                 encryptionDisabled -> (boolean)
                     Information  that tells you if encryption for build arti-
                     facts is disabled.

                 artifactIdentifier -> (string)
                     An identifier for this artifact definition.

                 bucketOwnerAccess -> (string)
                     Specifies the bucket  owner's  access  for  objects  that
                     another  account  uploads  to  their Amazon S3 bucket. By
                     default, only the account that uploads the objects to the
                     bucket  has access to these objects. This property allows
                     you to give the bucket owner access to these objects.

                     NOTE:
                        To use this property, your CodeBuild service role must
                        have  the  s3:PutBucketAcl permission. This permission
                        allows CodeBuild to modify the access control list for
                        the bucket.

                     This property can be one of the following values:
                        NONE

                     The  bucket  owner  does  not have access to the objects.
                     This is the default.
                        READ_ONLY

                     The bucket owner has read-only access to the objects. The
                     uploading account retains ownership of the objects.
                        FULL

                     The  bucket  owner has full access to the objects. Object
                     ownership is determined by the following criteria:

                     o If the bucket is configured with the Bucket owner  pre-
                       ferred  setting, the bucket owner owns the objects. The
                       uploading account will have object access as  specified
                       by the bucket's policy.

                     o Otherwise,  the  uploading account retains ownership of
                       the objects.

                     For more information about Amazon  S3  object  ownership,
                     see  Controlling  ownership  of uploaded objects using S3
                     Object Ownership in the  Amazon  Simple  Storage  Service
                     User Guide .

          cache -> (structure)
              Information about the cache for the build project.

              type -> (string)
                 The  type  of  cache  used by the build project. Valid values
                 include:

                 o NO_CACHE : The build project does not use any cache.

                 o S3 : The build project reads and writes from and to S3.

                 o LOCAL : The build project stores a cache locally on a build
                   host that is only available to that build host.

              location -> (string)
                 Information about the cache location:

                 o NO_CACHE or LOCAL : This value is ignored.

                 o S3 : This is the S3 bucket name/prefix.

              modes -> (list)
                 An  array  of strings that specify the local cache modes. You
                 can use one or more local cache modes at the same time.  This
                 is only used for LOCAL cache types.

                 Possible values are:
                     LOCAL_SOURCE_CACHE

                 Caches  Git metadata for primary and secondary sources. After
                 the cache is created, subsequent builds pull only the  change
                 between commits. This mode is a good choice for projects with
                 a clean working directory and a source that is  a  large  Git
                 repository.  If  you choose this option and your project does
                 not use a Git repository (GitHub, GitHub Enterprise, or  Bit-
                 bucket), the option is ignored.
                     LOCAL_DOCKER_LAYER_CACHE

                 Caches existing Docker layers. This mode is a good choice for
                 projects that build or pull large Docker images. It can  pre-
                 vent  the  performance  issues caused by pulling large Docker
                 images down from the network.

                 NOTE:

                     o You can use a Docker layer cache in the Linux  environ-
                       ment only.

                     o The  privileged  flag  must be set so that your project
                       has the required Docker permissions.

                     o You should consider the  security  implications  before
                       you use a Docker layer cache.

                     LOCAL_CUSTOM_CACHE

                 Caches  directories  you  specify in the buildspec file. This
                 mode is a good choice if your build scenario is not suited to
                 one of the other three local cache modes. If you use a custom
                 cache:

                 o Only directories can be specified for caching.  You  cannot
                   specify individual files.

                 o Symlinks are used to reference cached directories.

                 o Cached directories are linked to your build before it down-
                   loads its project sources. Cached items are overridden if a
                   source  item  has  the same name. Directories are specified
                   using cache paths in the buildspec file.

                 (string)

          environment -> (structure)
              Information about the build environment of the build project.

              type -> (string)
                 The type of build environment to use for related builds.

                 o The environment type ARM_CONTAINER  is  available  only  in
                   regions  US  East  (N.  Virginia),  US East (Ohio), US West
                   (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific
                   (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).

                 o The  environment  type  LINUX_CONTAINER  with  compute type
                   build.general1.2xlarge is available only in regions US East
                   (N.  Virginia),  US  East  (Ohio), US West (Oregon), Canada
                   (Central), EU (Ireland), EU (London), EU (Frankfurt),  Asia
                   Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singa-
                   pore), Asia Pacific (Sydney), China  (Beijing),  and  China
                   (Ningxia).

                 o The  environment type LINUX_GPU_CONTAINER is available only
                   in regions US East (N. Virginia), US East (Ohio),  US  West
                   (Oregon),  Canada  (Central), EU (Ireland), EU (London), EU
                   (Frankfurt), Asia Pacific (Tokyo),  Asia  Pacific  (Seoul),
                   Asia  Pacific  (Singapore),  Asia  Pacific (Sydney) , China
                   (Beijing), and China (Ningxia).

                 o The   environment   types   WINDOWS_CONTAINER   and    WIN-
                   DOWS_SERVER_2019_CONTAINER are available only in regions US
                   East (N. Virginia), US East (Ohio), US West  (Oregon),  and
                   EU (Ireland).

                 For  more information, see Build environment compute types in
                 the CodeBuild user guide .

              image -> (string)
                 The image tag or image  digest  that  identifies  the  Docker
                 image  to  use for this build project. Use the following for-
                 mats:

                 o For an image tag: <registry>/<repository>:<tag> . For exam-
                   ple, in the Docker repository that CodeBuild uses to manage
                   its Docker images, this would be aws/codebuild/standard:4.0
                   .

                 o For an image digest: <registry>/<repository>@<digest> . For
                   example,   to   specify   an   image   with   the    digest
                   "sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfb-
                   dbf,"                use                <registry>/<reposi-
                   tory>@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfb-
                   dbf .

                 For more information, see Docker images provided by CodeBuild
                 in the CodeBuild user guide .

              computeType -> (string)
                 Information  about  the  compute  resources the build project
                 uses. Available values include:

                 o BUILD_GENERAL1_SMALL : Use up to 3 GB memory  and  2  vCPUs
                   for builds.

                 o BUILD_GENERAL1_MEDIUM  :  Use up to 7 GB memory and 4 vCPUs
                   for builds.

                 o BUILD_GENERAL1_LARGE : Use up to 16 GB memory and  8  vCPUs
                   for builds, depending on your environment type.

                 o BUILD_GENERAL1_2XLARGE : Use up to 145 GB memory, 72 vCPUs,
                   and 824 GB of SSD storage for  builds.  This  compute  type
                   supports Docker images up to 100 GB uncompressed.

                 If you use BUILD_GENERAL1_LARGE :

                 o For environment type LINUX_CONTAINER , you can use up to 15
                   GB memory and 8 vCPUs for builds.

                 o For environment type LINUX_GPU_CONTAINER , you can  use  up
                   to  255  GB  memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs
                   for builds.

                 o For environment type ARM_CONTAINER , you can use up  to  16
                   GB memory and 8 vCPUs on ARM-based processors for builds.

                 For  more information, see Build Environment Compute Types in
                 the CodeBuild User Guide.

              environmentVariables -> (list)
                 A set of environment variables to make  available  to  builds
                 for this build project.

                 (structure)
                     Information  about  an  environment  variable for a build
                     project or a build.

                     name -> (string)
                        The name or key of the environment variable.

                     value -> (string)
                        The value of the environment variable.

                        WARNING:
                            We strongly discourage the use of PLAINTEXT  envi-
                            ronment variables to store sensitive values, espe-
                            cially Amazon Web  Services  secret  key  IDs  and
                            secret  access  keys.  PLAINTEXT environment vari-
                            ables can be displayed in  plain  text  using  the
                            CodeBuild  console and the CLI. For sensitive val-
                            ues, we recommend you use an environment  variable
                            of type PARAMETER_STORE or SECRETS_MANAGER .

                     type -> (string)
                        The   type   of  environment  variable.  Valid  values
                        include:

                        o PARAMETER_STORE : An environment variable stored  in
                          Systems  Manager  Parameter  Store.  To learn how to
                          specify a parameter store environment variable,  see
                          env/parameter-store in the CodeBuild User Guide .

                        o PLAINTEXT  :  An  environment variable in plain text
                          format. This is the default value.

                        o SECRETS_MANAGER : An environment variable stored  in
                          Secrets  Manager.  To learn how to specify a secrets
                          manager       environment       variable,        see
                          env/secrets-manager in the CodeBuild User Guide .

              privilegedMode -> (boolean)
                 Enables  running the Docker daemon inside a Docker container.
                 Set to true only if the build project is used to build Docker
                 images. Otherwise, a build that attempts to interact with the
                 Docker daemon fails. The default setting is false .

                 You can initialize the Docker daemon during the install phase
                 of your build by adding one of the following sets of commands
                 to the install phase of your buildspec file:

                 If the operating system's base image is Ubuntu Linux:
                     -              nohup               /usr/local/bin/dockerd
                     --host=unix:///var/run/docker.sock
                     --host=tcp://0.0.0.0:2375 --storage-driver=overlay&

                     - timeout 15 sh -c "until docker info; do echo  .;  sleep
                     1; done"

                 If  the operating system's base image is Alpine Linux and the
                 previous command does not work, add the -t argument to  time-
                 out :
                     -               nohup              /usr/local/bin/dockerd
                     --host=unix:///var/run/docker.sock
                     --host=tcp://0.0.0.0:2375 --storage-driver=overlay&

                     -  timeout  -t  15  sh  -c "until docker info; do echo .;
                     sleep 1; done"

              certificate -> (string)
                 The ARN of the Amazon S3 bucket, path prefix, and object  key
                 that  contains  the  PEM-encoded  certificate  for  the build
                 project. For more information, see certificate in  the  Code-
                 Build User Guide .

              registryCredential -> (structure)
                 The credentials for access to a private registry.

                 credential -> (string)
                     The  Amazon  Resource  Name  (ARN) or name of credentials
                     created using Secrets Manager.

                     NOTE:
                        The credential can use the  name  of  the  credentials
                        only if they exist in your current Amazon Web Services
                        Region.

                 credentialProvider -> (string)
                     The service that created the credentials to access a pri-
                     vate  Docker  registry. The valid value, SECRETS_MANAGER,
                     is for Secrets Manager.

              imagePullCredentialsType -> (string)
                 The type of credentials CodeBuild uses to pull images in your
                 build. There are two valid values:

                 o CODEBUILD  specifies  that  CodeBuild  uses its own creden-
                   tials. This requires that you modify  your  ECR  repository
                   policy to trust CodeBuild service principal.

                 o SERVICE_ROLE  specifies  that  CodeBuild  uses  your  build
                   project's service role.

                 When you use a cross-account or private registry  image,  you
                 must  use SERVICE_ROLE credentials. When you use an CodeBuild
                 curated image, you must use CODEBUILD credentials.

          serviceRole -> (string)
              The name of a service role used for builds in the batch.

          logConfig -> (structure)
              Information about logs for a build project. These can be logs in
              CloudWatch Logs, built in a specified S3 bucket, or both.

              cloudWatchLogs -> (structure)
                 Information about CloudWatch Logs for a build project. Cloud-
                 Watch Logs are enabled by default.

                 status -> (string)
                     The current status of the logs in CloudWatch Logs  for  a
                     build project. Valid values are:

                     o ENABLED  :  CloudWatch  Logs are enabled for this build
                       project.

                     o DISABLED : CloudWatch Logs are  not  enabled  for  this
                       build project.

                 groupName -> (string)
                     The  group  name of the logs in CloudWatch Logs. For more
                     information, see Working with Log Groups and Log  Streams
                     .

                 streamName -> (string)
                     The prefix of the stream name of the CloudWatch Logs. For
                     more information, see Working with  Log  Groups  and  Log
                     Streams .

              s3Logs -> (structure)
                 Information  about  logs  built  to  an S3 bucket for a build
                 project. S3 logs are not enabled by default.

                 status -> (string)
                     The current status of the S3  build  logs.  Valid  values
                     are:

                     o ENABLED  :  S3  build  logs  are enabled for this build
                       project.

                     o DISABLED : S3 build logs are not enabled for this build
                       project.

                 location -> (string)
                     The  ARN of an S3 bucket and the path prefix for S3 logs.
                     If your Amazon S3 bucket name is  my-bucket  ,  and  your
                     path  prefix  is  build-log , then acceptable formats are
                     my-bucket/build-log or arn:aws:s3:::my-bucket/build-log .

                 encryptionDisabled -> (boolean)
                     Set  to  true if you do not want your S3 build log output
                     encrypted. By default S3 build logs are encrypted.

                 bucketOwnerAccess -> (string)
                     Specifies the bucket  owner's  access  for  objects  that
                     another  account  uploads  to  their Amazon S3 bucket. By
                     default, only the account that uploads the objects to the
                     bucket  has access to these objects. This property allows
                     you to give the bucket owner access to these objects.

                     NOTE:
                        To use this property, your CodeBuild service role must
                        have  the  s3:PutBucketAcl permission. This permission
                        allows CodeBuild to modify the access control list for
                        the bucket.

                     This property can be one of the following values:
                        NONE

                     The  bucket  owner  does  not have access to the objects.
                     This is the default.
                        READ_ONLY

                     The bucket owner has read-only access to the objects. The
                     uploading account retains ownership of the objects.
                        FULL

                     The  bucket  owner has full access to the objects. Object
                     ownership is determined by the following criteria:

                     o If the bucket is configured with the Bucket owner  pre-
                       ferred  setting, the bucket owner owns the objects. The
                       uploading account will have object access as  specified
                       by the bucket's policy.

                     o Otherwise,  the  uploading account retains ownership of
                       the objects.

                     For more information about Amazon  S3  object  ownership,
                     see  Controlling  ownership  of uploaded objects using S3
                     Object Ownership in the  Amazon  Simple  Storage  Service
                     User Guide .

          buildTimeoutInMinutes -> (integer)
              Specifies the maximum amount of time, in minutes, that the build
              in a batch must be completed in.

          queuedTimeoutInMinutes -> (integer)
              Specifies the amount of time, in minutes, that the  batch  build
              is allowed to be queued before it times out.

          complete -> (boolean)
              Indicates if the batch build is complete.

          initiator -> (string)
              The entity that started the batch build. Valid values include:

              o If  CodePipeline  started  the build, the pipeline's name (for
                example, codepipeline/my-demo-pipeline ).

              o If an IAM user started the build, the user's name.

              o If the Jenkins plugin for CodeBuild  started  the  build,  the
                string CodeBuild-Jenkins-Plugin .

          vpcConfig -> (structure)
              Information about the VPC configuration that CodeBuild accesses.

              vpcId -> (string)
                 The ID of the Amazon VPC.

              subnets -> (list)
                 A list of one or more subnet IDs in your Amazon VPC.

                 (string)

              securityGroupIds -> (list)
                 A list of one or more security groups IDs in your Amazon VPC.

                 (string)

          encryptionKey -> (string)
              The  Key Management Service customer master key (CMK) to be used
              for encrypting the batch build output artifacts.

              NOTE:
                 You can use a cross-account KMS key to encrypt the build out-
                 put  artifacts  if  your  service role has permission to that
                 key.

              You can specify either the Amazon Resource Name (ARN) of the CMK
              or,   if   available,   the   CMK's   alias  (using  the  format
              alias/<alias-name> ).

          buildBatchNumber -> (long)
              The number of the batch build. For each project, the buildBatch-
              Number  of  its first batch build is 1 . The buildBatchNumber of
              each subsequent batch build is incremented by 1  .  If  a  batch
              build  is  deleted,  the  buildBatchNumber of other batch builds
              does not change.

          fileSystemLocations -> (list)
              An array of  ProjectFileSystemLocation  objects  for  the  batch
              build  project. A ProjectFileSystemLocation object specifies the
              identifier , location , mountOptions , mountPoint , and type  of
              a file system created using Amazon Elastic File System.

              (structure)
                 Information  about  a  file  system created by Amazon Elastic
                 File System (EFS). For more information, see What  Is  Amazon
                 Elastic File System?

                 type -> (string)
                     The  type  of  the file system. The one supported type is
                     EFS .

                 location -> (string)
                     A string that specifies the location of the  file  system
                     created by Amazon EFS. Its format is efs-dns-name:/direc-
                     tory-path . You can find the DNS name of file system when
                     you view it in the Amazon EFS console. The directory path
                     is a path to a directory in the file  system  that  Code-
                     Build mounts. For example, if the DNS name of a file sys-
                     tem is fs-abcd1234.efs.us-west-2.amazonaws.com , and  its
                     mount  directory  is  my-efs-mount-directory  ,  then the
                     location       is       fs-abcd1234.efs.us-west-2.amazon-
                     aws.com:/my-efs-mount-directory .

                     The  directory  path  in  the format efs-dns-name:/direc-
                     tory-path is optional. If you do not specify a  directory
                     path,  the  location  is  only the DNS name and CodeBuild
                     mounts the entire file system.

                 mountPoint -> (string)
                     The location in the container where you  mount  the  file
                     system.

                 identifier -> (string)
                     The  name  used to access a file system created by Amazon
                     EFS. CodeBuild creates an environment variable by append-
                     ing the identifier in all capital letters to CODEBUILD_ .
                     For example, if you specify my_efs for identifier , a new
                     environment variable is create named CODEBUILD_MY_EFS .

                     The identifier is used to mount your file system.

                 mountOptions -> (string)
                     The  mount  options  for  a file system created by Amazon
                     EFS. The default mount  options  used  by  CodeBuild  are
                     nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2
                     . For more information, see Recommended NFS Mount Options
                     .

          buildBatchConfig -> (structure)
              Contains  configuration information about a batch build project.

              serviceRole -> (string)
                 Specifies the service role ARN for the batch build project.

              combineArtifacts -> (boolean)
                 Specifies if the build artifacts for the batch  build  should
                 be combined into a single artifact location.

              restrictions -> (structure)
                 A  BatchRestrictions  object  that specifies the restrictions
                 for the batch build.

                 maximumBuildsAllowed -> (integer)
                     Specifies the maximum number of builds allowed.

                 computeTypesAllowed -> (list)
                     An array of strings that specify the compute  types  that
                     are  allowed  for  the batch build. See Build environment
                     compute types in the CodeBuild User Guide for these  val-
                     ues.

                     (string)

              timeoutInMins -> (integer)
                 Specifies  the  maximum  amount of time, in minutes, that the
                 batch build must be completed in.

              batchReportMode -> (string)
                 Specifies how build status reports are  sent  to  the  source
                 provider for the batch build. This property is only used when
                 the source provider for your project is Bitbucket, GitHub, or
                 GitHub  Enterprise,  and your project is configured to report
                 build statuses to the source provider.
                     REPORT_AGGREGATED_BATCH

                 (Default) Aggregate all of the build statuses into  a  single
                 status report.
                     REPORT_INDIVIDUAL_BUILDS

                 Send a separate status report for each individual build.

          buildGroups -> (list)
              An  array of BuildGroup objects that define the build groups for
              the batch build.

              (structure)
                 Contains information about a batch build build  group.  Build
                 groups  are  used to combine builds that can run in parallel,
                 while still being able to set  dependencies  on  other  build
                 groups.

                 identifier -> (string)
                     Contains the identifier of the build group.

                 dependsOn -> (list)
                     An  array  of strings that contain the identifiers of the
                     build groups that this build group depends on.

                     (string)

                 ignoreFailure -> (boolean)
                     Specifies if failures in this build group can be ignored.

                 currentBuildSummary -> (structure)
                     A BuildSummary object that contains a summary of the cur-
                     rent build group.

                     arn -> (string)
                        The batch build ARN.

                     requestedOn -> (timestamp)
                        When the build was started,  expressed  in  Unix  time
                        format.

                     buildStatus -> (string)
                        The status of the build group.
                            FAILED

                        The build group failed.
                            FAULT

                        The build group faulted.
                            IN_PROGRESS

                        The build group is still in progress.
                            STOPPED

                        The build group stopped.
                            SUCCEEDED

                        The build group succeeded.
                            TIMED_OUT

                        The build group timed out.

                     primaryArtifact -> (structure)
                        A  ResolvedArtifact object that represents the primary
                        build artifacts for the build group.

                        type -> (string)
                            Specifies the type of artifact.

                        location -> (string)
                            The location of the artifact.

                        identifier -> (string)
                            The identifier of the artifact.

                     secondaryArtifacts -> (list)
                        An array of ResolvedArtifact objects  that  represents
                        the secondary build artifacts for the build group.

                        (structure)
                            Represents  a  resolved build artifact. A resolved
                            artifact is an artifact that is built and deployed
                            to the destination, such as Amazon S3.

                            type -> (string)
                               Specifies the type of artifact.

                            location -> (string)
                               The location of the artifact.

                            identifier -> (string)
                               The identifier of the artifact.

                 priorBuildSummaryList -> (list)
                     An  array  of BuildSummary objects that contain summaries
                     of previous build groups.

                     (structure)
                        Contains  summary  information  about  a  batch  build
                        group.

                        arn -> (string)
                            The batch build ARN.

                        requestedOn -> (timestamp)
                            When the build was started, expressed in Unix time
                            format.

                        buildStatus -> (string)
                            The status of the build group.
                               FAILED

                            The build group failed.
                               FAULT

                            The build group faulted.
                               IN_PROGRESS

                            The build group is still in progress.
                               STOPPED

                            The build group stopped.
                               SUCCEEDED

                            The build group succeeded.
                               TIMED_OUT

                            The build group timed out.

                        primaryArtifact -> (structure)
                            A ResolvedArtifact object that represents the pri-
                            mary build artifacts for the build group.

                            type -> (string)
                               Specifies the type of artifact.

                            location -> (string)
                               The location of the artifact.

                            identifier -> (string)
                               The identifier of the artifact.

                        secondaryArtifacts -> (list)
                            An  array  of ResolvedArtifact objects that repre-
                            sents the secondary build artifacts for the  build
                            group.

                            (structure)
                               Represents   a   resolved   build  artifact.  A
                               resolved artifact is an artifact that is  built
                               and deployed to the destination, such as Amazon
                               S3.

                               type -> (string)
                                   Specifies the type of artifact.

                               location -> (string)
                                   The location of the artifact.

                               identifier -> (string)
                                   The identifier of the artifact.

          debugSessionEnabled -> (boolean)
              Specifies if session debugging is enabled for this batch  build.
              For  more  information,  see  Viewing a running build in Session
              Manager . Batch session debugging is not  supported  for  matrix
              batch builds.



                                                           START-BUILD-BATCH()
