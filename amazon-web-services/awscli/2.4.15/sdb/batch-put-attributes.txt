BATCH-PUT-ATTRIBUTES()                                  BATCH-PUT-ATTRIBUTES()



NAME
       batch-put-attributes -

DESCRIPTION
       The  BatchPutAttributes operation creates or replaces attributes within
       one or more items. By using this operation, the client can perform mul-
       tiple  PutAttribute operation with a single call. This helps yield sav-
       ings in round trips and latencies, enabling Amazon SimpleDB to optimize
       requests and generally produce better throughput.

       The  client  may specify the item name with the Item.X.ItemName parame-
       ter. The client may specify new attributes using a combination  of  the
       Item.X.Attribute.Y.Name  and  Item.X.Attribute.Y.Value  parameters. The
       client may specify the first attribute for the  first  item  using  the
       parameters  Item.0.Attribute.0.Name  and Item.0.Attribute.0.Value , and
       for  the  second  attribute  for  the  first  item  by  the  parameters
       Item.0.Attribute.1.Name and Item.0.Attribute.1.Value , and so on.

       Attributes  are  uniquely identified within an item by their name/value
       combination. For example, a single  item  can  have  the  attributes  {
       "first_name",  "first_value"  }  and { "first_name", "second_value" } .
       However,  it  cannot  have  two  attribute  instances  where  both  the
       Item.X.Attribute.Y.Name and Item.X.Attribute.Y.Value are the same.

       Optionally,  the  requester  can  supply the Replace parameter for each
       individual value. Setting  this  value  to  true  will  cause  the  new
       attribute values to replace the existing attribute values. For example,
       if an item I has the attributes { 'a', '1' }, { 'b', '2'}  and  {  'b',
       '3'  }  and the requester does a BatchPutAttributes of {'I', 'b', '4' }
       with the Replace parameter set to true, the  final  attributes  of  the
       item  will  be  {  'a', '1' } and { 'b', '4' } , replacing the previous
       values of the 'b' attribute with the new value.

       WARNING:
          This operation is vulnerable to exceeding the maximum URL size  when
          making a REST request using the HTTP GET method. This operation does
          not support conditions using Expected.X.Name , Expected.X.Value , or
          Expected.X.Exists .

       You can execute multiple BatchPutAttributes operations and other opera-
       tions in parallel. However, large  numbers  of  concurrent  BatchPutAt-
       tributes calls can result in Service Unavailable (503) responses.

       The following limitations are enforced for this operation:

       o 256 attribute name-value pairs per item

       o 1 MB request size

       o 1 billion attributes per domain

       o 10 GB of total user data storage per domain

       o 25 item limit per BatchPutAttributes operation

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            batch-put-attributes
          --domain-name <value>
          --items <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --domain-name  (string)  The name of the domain in which the attributes
       are being stored.

       --items (list)  A  list  of  items  on  which  to  perform  the  opera-
       tion.(structure)
          Name -> (string)
              The name of the replaceable item.

          Attributes -> (list)
              The list of attributes for a replaceable item.

              (structure)
                 Name -> (string)
                     The name of the replaceable attribute.

                 Value -> (string)
                     The value of the replaceable attribute.

                 Replace -> (boolean)
                     A   flag   specifying  whether  or  not  to  replace  the
                     attribute/value pair or  to  add  a  new  attribute/value
                     pair. The default setting is false .

       Shorthand Syntax:

          Name=string,Attributes=[{Name=string,Value=string,Replace=boolean},{Name=string,Value=string,Replace=boolean}] ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Attributes": [
                {
                  "Name": "string",
                  "Value": "string",
                  "Replace": true|false
                }
                ...
              ]
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       None



                                                        BATCH-PUT-ATTRIBUTES()
