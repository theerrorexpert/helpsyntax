PUT-ATTRIBUTES()                                              PUT-ATTRIBUTES()



NAME
       put-attributes -

DESCRIPTION
       The  PutAttributes operation creates or replaces attributes in an item.
       The client may specify  new  attributes  using  a  combination  of  the
       Attribute.X.Name and Attribute.X.Value parameters. The client specifies
       the  first   attribute   by   the   parameters   Attribute.0.Name   and
       Attribute.0.Value   ,   the   second   attribute   by   the  parameters
       Attribute.1.Name and Attribute.1.Value , and so on.

       Attributes are uniquely identified in an item by their name/value  com-
       bination.  For  example,  a  single  item  can  have  the  attributes {
       "first_name", "first_value" } and {  "first_name",  second_value"  }  .
       However,  it  cannot  have  two  attribute  instances  where  both  the
       Attribute.X.Name and Attribute.X.Value are the same.

       Optionally, the requestor can supply the  Replace  parameter  for  each
       individual  attribute.  Setting  this  value  to  true  causes  the new
       attribute value to replace the existing attribute value(s).  For  exam-
       ple,  if  an  item  has the attributes { 'a', '1' } , { 'b', '2'} and {
       'b', '3' } and the requestor calls PutAttributes using the attributes {
       'b', '4' } with the Replace parameter set to true, the final attributes
       of the item are changed to { 'a', '1' }  and  {  'b',  '4'  }  ,  which
       replaces the previous values of the 'b' attribute with the new value.

       You cannot specify an empty string as an attribute name.

       Because  Amazon  SimpleDB makes multiple copies of client data and uses
       an eventual consistency update model, an  immediate   GetAttributes  or
       Select   operation   (read)   immediately  after  a   PutAttributes  or
       DeleteAttributes operation (write) might not return the updated data.

       The following limitations are enforced for this operation:

       o 256 total attribute name-value pairs per item

       o One billion attributes per domain

       o 10 GB of total user data storage per domain

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            put-attributes
          --domain-name <value>
          --item-name <value>
          --attributes <value>
          [--expected <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --domain-name (string) The name of the domain in which to  perform  the
       operation.

       --item-name (string) The name of the item.

       --attributes (list) The list of attributes.(structure)
          Name -> (string)
              The name of the replaceable attribute.

          Value -> (string)
              The value of the replaceable attribute.

          Replace -> (boolean)
              A  flag specifying whether or not to replace the attribute/value
              pair or to add a new attribute/value pair. The  default  setting
              is false .

       Shorthand Syntax:

          Name=string,Value=string,Replace=boolean ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Value": "string",
              "Replace": true|false
            }
            ...
          ]

       --expected (structure) The update condition which, if specified, deter-
       mines whether the specified attributes will  be  updated  or  not.  The
       update condition must be satisfied in order for this request to be pro-
       cessed and the attributes to be updated.Name -> (string)
              The name of the attribute involved in the condition.

          Value -> (string)
              The value of an attribute. This value can only be specified when
              the Exists parameter is equal to true .

          Exists -> (boolean)
              A  value  specifying whether or not the specified attribute must
              exist with the specified value in order for the update condition
              to  be  satisfied.  Specify true if the attribute must exist for
              the update condition to  be  satisfied.  Specify  false  if  the
              attribute  should not exist in order for the update condition to
              be satisfied.

       Shorthand Syntax:

          Name=string,Value=string,Exists=boolean

       JSON Syntax:

          {
            "Name": "string",
            "Value": "string",
            "Exists": true|false
          }

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       None



                                                              PUT-ATTRIBUTES()
