CREATE-ANOMALY-MONITOR()                              CREATE-ANOMALY-MONITOR()



NAME
       create-anomaly-monitor -

DESCRIPTION
       Creates  a  new  cost anomaly detection monitor with the requested type
       and monitor specification.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-anomaly-monitor
          --anomaly-monitor <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --anomaly-monitor (structure)
          The cost anomaly detection monitor object that you want to create.

          MonitorArn -> (string)
              The Amazon Resource Name (ARN) value.

          MonitorName -> (string)
              The name of the monitor.

          CreationDate -> (string)
              The date when the monitor was created.

          LastUpdatedDate -> (string)
              The date when the monitor was last updated.

          LastEvaluatedDate -> (string)
              The date when the monitor last evaluated for anomalies.

          MonitorType -> (string)
              The possible type values.

          MonitorDimension -> (string)
              The dimensions to evaluate.

          MonitorSpecification -> (structure)
              Use Expression to filter by cost or by usage. There are two pat-
              terns:

              o Simple  dimension  values - You can set the dimension name and
                values for the filters that you plan to use. For example,  you
                can  filter  for  REGION==us-east-1 OR REGION==us-west-1 . For
                GetRightsizingRecommendation , the Region is a full name  (for
                example,  REGION==US East (N. Virginia) . The Expression exam-
                ple is as follows:  { "Dimensions": { "Key":  "REGION",  "Val-
                ues":  [  "us-east-1", us-west-1 ] } }   The list of dimension
                values are OR'd together to retrieve cost or usage  data.  You
                can create Expression and DimensionValues objects using either
                with* methods or set* methods in multiple lines.

              o Compound dimension values with logical operations  -  You  can
                use  multiple  Expression  types  and  the  logical  operators
                AND/OR/NOT to create a list of one or more Expression objects.
                By  doing  this,  you can filter on more advanced options. For
                example, you can filter on ((REGION == us-east-1 OR REGION  ==
                us-west-1)  OR  (TAG.Type  == Type1)) AND (USAGE_TYPE != Data-
                Transfer) . The Expression for that is as follows:  { "And": [
                {"Or":   [  {"Dimensions":  {  "Key":  "REGION",  "Values":  [
                "us-east-1", "us-west-1" ] }}, {"Tags":  {  "Key":  "TagName",
                "Values":  ["Value1"]  } } ]}, {"Not": {"Dimensions": { "Key":
                "USAGE_TYPE", "Values": ["DataTransfer"] }}} ] }

              NOTE:
                     Because each Expression can have only one  operator,  the
                     service  returns  an error if more than one is specified.
                     The following example shows  an  Expression  object  that
                     creates an error.

                 {   "And":   [   ...  ],  "DimensionValues":  {  "Dimension":
                 "USAGE_TYPE", "Values": [ "DataTransfer" ] } }

              NOTE:
                 For the GetRightsizingRecommendation action, a combination of
                 OR  and  NOT isn't supported. OR isn't supported between dif-
                 ferent dimensions, or  dimensions  and  tags.  NOT  operators
                 aren't    supported.   Dimensions   are   also   limited   to
                 LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .

                 For the GetReservationPurchaseRecommendation action, only NOT
                 is  supported.  AND  and  OR aren't supported. Dimensions are
                 limited to LINKED_ACCOUNT .

              Or -> (list)
                 Return results that match either Dimension object.

                 (structure)
                     Use Expression to filter by cost or by usage.  There  are
                     two patterns:

                     o Simple  dimension  values  -  You can set the dimension
                       name and values for the filters that you plan  to  use.
                       For  example,  you  can filter for REGION==us-east-1 OR
                       REGION==us-west-1 . For GetRightsizingRecommendation  ,
                       the Region is a full name (for example, REGION==US East
                       (N. Virginia) . The Expression example is  as  follows:
                       {   "Dimensions":   {   "Key":  "REGION",  "Values":  [
                       "us-east-1", us-west-1 ] } }   The  list  of  dimension
                       values  are  OR'd  together  to  retrieve cost or usage
                       data. You can  create  Expression  and  DimensionValues
                       objects  using  either with* methods or set* methods in
                       multiple lines.

                     o Compound dimension values with logical operations - You
                       can use multiple Expression types and the logical oper-
                       ators AND/OR/NOT to  create  a  list  of  one  or  more
                       Expression  objects.  By  doing this, you can filter on
                       more advanced options. For example, you can  filter  on
                       ((REGION  ==  us-east-1  OR  REGION  ==  us-west-1)  OR
                       (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) .
                       The  Expression  for  that  is  as follows:  { "And": [
                       {"Or": [ {"Dimensions": { "Key": "REGION", "Values":  [
                       "us-east-1",  "us-west-1" ] }}, {"Tags": { "Key": "Tag-
                       Name", "Values": ["Value1"] } }  ]},  {"Not":  {"Dimen-
                       sions":  {  "Key": "USAGE_TYPE", "Values": ["DataTrans-
                       fer"] }}} ] }

                     NOTE:
                            Because each Expression can have only  one  opera-
                            tor, the service returns an error if more than one
                            is  specified.  The  following  example  shows  an
                            Expression object that creates an error.

                        {  "And":  [  ... ], "DimensionValues": { "Dimension":
                        "USAGE_TYPE", "Values": [ "DataTransfer" ] } }

                     NOTE:
                        For the GetRightsizingRecommendation action, a  combi-
                        nation  of  OR  and NOT isn't supported. OR isn't sup-
                        ported between different dimensions, or dimensions and
                        tags.  NOT  operators aren't supported. Dimensions are
                        also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZ-
                        ING_TYPE .

                        For  the  GetReservationPurchaseRecommendation action,
                        only NOT is supported. AND and  OR  aren't  supported.
                        Dimensions are limited to LINKED_ACCOUNT .

                     Or -> (list)
                        Return results that match either Dimension object.

                        ( ... recursive ... )

                     And -> (list)
                        Return results that match both Dimension objects.

                        ( ... recursive ... )

                     ( ... recursive ... )Dimensions -> (structure)
                        The specific Dimension to use for Expression .

                        Key -> (string)
                            The  names  of the metadata types that you can use
                            to filter and group your results. For example,  AZ
                            returns a list of Availability Zones.

                        Values -> (list)
                            The metadata values that you can use to filter and
                            group your results. You can use GetDimensionValues
                            to find specific values.

                            (string)

                        MatchOptions -> (list)
                            The  match options that you can use to filter your
                            results.  MatchOptions  is  only  applicable   for
                            actions related to Cost Category. The default val-
                            ues for MatchOptions are EQUALS and CASE_SENSITIVE
                            .

                            (string)

                     Tags -> (structure)
                        The specific Tag to use for Expression .

                        Key -> (string)
                            The key for the tag.

                        Values -> (list)
                            The specific value of the tag.

                            (string)

                        MatchOptions -> (list)
                            The  match options that you can use to filter your
                            results.  MatchOptions  is  only  applicable   for
                            actions related to Cost Category. The default val-
                            ues for MatchOptions are EQUALS and CASE_SENSITIVE
                            .

                            (string)

                     CostCategories -> (structure)
                        The filter that's based on CostCategory values.

                        Key -> (string)
                            The unique name of the Cost Category.

                        Values -> (list)
                            The specific value of the Cost Category.

                            (string)

                        MatchOptions -> (list)
                            The  match options that you can use to filter your
                            results.  MatchOptions  is  only  applicable   for
                            actions related to cost category. The default val-
                            ues for MatchOptions is EQUALS and  CASE_SENSITIVE
                            .

                            (string)

              And -> (list)
                 Return results that match both Dimension objects.

                 (structure)
                     Use  Expression  to filter by cost or by usage. There are
                     two patterns:

                     o Simple dimension values - You  can  set  the  dimension
                       name  and  values for the filters that you plan to use.
                       For example, you can filter  for  REGION==us-east-1  OR
                       REGION==us-west-1  . For GetRightsizingRecommendation ,
                       the Region is a full name (for example, REGION==US East
                       (N.  Virginia)  . The Expression example is as follows:
                       {  "Dimensions":  {  "Key":   "REGION",   "Values":   [
                       "us-east-1",  us-west-1  ]  } }   The list of dimension
                       values are OR'd together  to  retrieve  cost  or  usage
                       data.  You  can  create  Expression and DimensionValues
                       objects using either with* methods or set*  methods  in
                       multiple lines.

                     o Compound dimension values with logical operations - You
                       can use multiple Expression types and the logical oper-
                       ators  AND/OR/NOT  to  create  a  list  of  one or more
                       Expression objects. By doing this, you  can  filter  on
                       more  advanced  options. For example, you can filter on
                       ((REGION  ==  us-east-1  OR  REGION  ==  us-west-1)  OR
                       (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) .
                       The Expression for that is  as  follows:   {  "And":  [
                       {"Or":  [ {"Dimensions": { "Key": "REGION", "Values": [
                       "us-east-1", "us-west-1" ] }}, {"Tags": { "Key":  "Tag-
                       Name",  "Values":  ["Value1"]  } } ]}, {"Not": {"Dimen-
                       sions": { "Key": "USAGE_TYPE",  "Values":  ["DataTrans-
                       fer"] }}} ] }

                     NOTE:
                            Because  each  Expression can have only one opera-
                            tor, the service returns an error if more than one
                            is  specified.  The  following  example  shows  an
                            Expression object that creates an error.

                        { "And": [ ... ],  "DimensionValues":  {  "Dimension":
                        "USAGE_TYPE", "Values": [ "DataTransfer" ] } }

                     NOTE:
                        For  the GetRightsizingRecommendation action, a combi-
                        nation of OR and NOT isn't supported.  OR  isn't  sup-
                        ported between different dimensions, or dimensions and
                        tags. NOT operators aren't supported.  Dimensions  are
                        also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZ-
                        ING_TYPE .

                        For the  GetReservationPurchaseRecommendation  action,
                        only  NOT  is  supported. AND and OR aren't supported.
                        Dimensions are limited to LINKED_ACCOUNT .

                     Or -> (list)
                        Return results that match either Dimension object.

                        ( ... recursive ... )

                     And -> (list)
                        Return results that match both Dimension objects.

                        ( ... recursive ... )

                     ( ... recursive ... )Dimensions -> (structure)
                        The specific Dimension to use for Expression .

                        Key -> (string)
                            The names of the metadata types that you  can  use
                            to  filter and group your results. For example, AZ
                            returns a list of Availability Zones.

                        Values -> (list)
                            The metadata values that you can use to filter and
                            group your results. You can use GetDimensionValues
                            to find specific values.

                            (string)

                        MatchOptions -> (list)
                            The match options that you can use to filter  your
                            results.   MatchOptions  is  only  applicable  for
                            actions related to Cost Category. The default val-
                            ues for MatchOptions are EQUALS and CASE_SENSITIVE
                            .

                            (string)

                     Tags -> (structure)
                        The specific Tag to use for Expression .

                        Key -> (string)
                            The key for the tag.

                        Values -> (list)
                            The specific value of the tag.

                            (string)

                        MatchOptions -> (list)
                            The match options that you can use to filter  your
                            results.   MatchOptions  is  only  applicable  for
                            actions related to Cost Category. The default val-
                            ues for MatchOptions are EQUALS and CASE_SENSITIVE
                            .

                            (string)

                     CostCategories -> (structure)
                        The filter that's based on CostCategory values.

                        Key -> (string)
                            The unique name of the Cost Category.

                        Values -> (list)
                            The specific value of the Cost Category.

                            (string)

                        MatchOptions -> (list)
                            The match options that you can use to filter  your
                            results.   MatchOptions  is  only  applicable  for
                            actions related to cost category. The default val-
                            ues  for MatchOptions is EQUALS and CASE_SENSITIVE
                            .

                            (string)

              Not -> (structure)
                 Return results that don't match a Dimension object.

                 Or -> (list)
                     Return results that match either Dimension object.

                     ( ... recursive ... )

                 And -> (list)
                     Return results that match both Dimension objects.

                     ( ... recursive ... )

                 ( ... recursive ... )Dimensions -> (structure)
                     The specific Dimension to use for Expression .

                     Key -> (string)
                        The names of the metadata types that you  can  use  to
                        filter and group your results. For example, AZ returns
                        a list of Availability Zones.

                     Values -> (list)
                        The metadata values that you can  use  to  filter  and
                        group  your results. You can use GetDimensionValues to
                        find specific values.

                        (string)

                     MatchOptions -> (list)
                        The match options that you  can  use  to  filter  your
                        results.  MatchOptions  is only applicable for actions
                        related to  Cost  Category.  The  default  values  for
                        MatchOptions are EQUALS and CASE_SENSITIVE .

                        (string)

                 Tags -> (structure)
                     The specific Tag to use for Expression .

                     Key -> (string)
                        The key for the tag.

                     Values -> (list)
                        The specific value of the tag.

                        (string)

                     MatchOptions -> (list)
                        The  match  options  that  you  can use to filter your
                        results. MatchOptions is only applicable  for  actions
                        related  to  Cost  Category.  The  default  values for
                        MatchOptions are EQUALS and CASE_SENSITIVE .

                        (string)

                 CostCategories -> (structure)
                     The filter that's based on CostCategory values.

                     Key -> (string)
                        The unique name of the Cost Category.

                     Values -> (list)
                        The specific value of the Cost Category.

                        (string)

                     MatchOptions -> (list)
                        The match options that you  can  use  to  filter  your
                        results.  MatchOptions  is only applicable for actions
                        related to  cost  category.  The  default  values  for
                        MatchOptions is EQUALS and CASE_SENSITIVE .

                        (string)

              Dimensions -> (structure)
                 The specific Dimension to use for Expression .

                 Key -> (string)
                     The  names of the metadata types that you can use to fil-
                     ter and group your results. For  example,  AZ  returns  a
                     list of Availability Zones.

                 Values -> (list)
                     The  metadata values that you can use to filter and group
                     your results. You can use GetDimensionValues to find spe-
                     cific values.

                     (string)

                 MatchOptions -> (list)
                     The  match  options  that  you  can  use  to  filter your
                     results. MatchOptions  is  only  applicable  for  actions
                     related to Cost Category. The default values for MatchOp-
                     tions are EQUALS and CASE_SENSITIVE .

                     (string)

              Tags -> (structure)
                 The specific Tag to use for Expression .

                 Key -> (string)
                     The key for the tag.

                 Values -> (list)
                     The specific value of the tag.

                     (string)

                 MatchOptions -> (list)
                     The match  options  that  you  can  use  to  filter  your
                     results.  MatchOptions  is  only  applicable  for actions
                     related to Cost Category. The default values for MatchOp-
                     tions are EQUALS and CASE_SENSITIVE .

                     (string)

              CostCategories -> (structure)
                 The filter that's based on CostCategory values.

                 Key -> (string)
                     The unique name of the Cost Category.

                 Values -> (list)
                     The specific value of the Cost Category.

                     (string)

                 MatchOptions -> (list)
                     The  match  options  that  you  can  use  to  filter your
                     results. MatchOptions  is  only  applicable  for  actions
                     related to cost category. The default values for MatchOp-
                     tions is EQUALS and CASE_SENSITIVE .

                     (string)

          DimensionalValueCount -> (integer)
              The value for evaluated dimensions.

       JSON Syntax:

          {
            "MonitorArn": "string",
            "MonitorName": "string",
            "CreationDate": "string",
            "LastUpdatedDate": "string",
            "LastEvaluatedDate": "string",
            "MonitorType": "DIMENSIONAL"|"CUSTOM",
            "MonitorDimension": "SERVICE",
            "MonitorSpecification": {
              "Or": [
                {
                  "Or": [
                    { ... recursive ... }
                    ...
                  ],
                  "And": [
                    { ... recursive ... }
                    ...
                  ],
                  "Not": { ... recursive ... },
                  "Dimensions": {
                    "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE",
                    "Values": ["string", ...],
                    "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                  },
                  "Tags": {
                    "Key": "string",
                    "Values": ["string", ...],
                    "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                  },
                  "CostCategories": {
                    "Key": "string",
                    "Values": ["string", ...],
                    "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                  }
                }
                ...
              ],
              "And": [
                {
                  "Or": [
                    { ... recursive ... }
                    ...
                  ],
                  "And": [
                    { ... recursive ... }
                    ...
                  ],
                  "Not": { ... recursive ... },
                  "Dimensions": {
                    "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE",
                    "Values": ["string", ...],
                    "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                  },
                  "Tags": {
                    "Key": "string",
                    "Values": ["string", ...],
                    "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                  },
                  "CostCategories": {
                    "Key": "string",
                    "Values": ["string", ...],
                    "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                  }
                }
                ...
              ],
              "Not": {
                "Or": [
                  { ... recursive ... }
                  ...
                ],
                "And": [
                  { ... recursive ... }
                  ...
                ],
                "Not": { ... recursive ... },
                "Dimensions": {
                  "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                },
                "Tags": {
                  "Key": "string",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                },
                "CostCategories": {
                  "Key": "string",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                }
              },
              "Dimensions": {
                "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE",
                "Values": ["string", ...],
                "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
              },
              "Tags": {
                "Key": "string",
                "Values": ["string", ...],
                "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
              },
              "CostCategories": {
                "Key": "string",
                "Values": ["string", ...],
                "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
              }
            },
            "DimensionalValueCount": integer
          }

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       MonitorArn -> (string)
          The unique identifier of your newly created cost  anomaly  detection
          monitor.



                                                      CREATE-ANOMALY-MONITOR()
