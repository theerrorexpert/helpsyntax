UPDATE-COST-CATEGORY-DEFINITION()            UPDATE-COST-CATEGORY-DEFINITION()



NAME
       update-cost-category-definition -

DESCRIPTION
       Updates  an  existing  Cost Category. Changes made to the Cost Category
       rules will be used to categorize the current months expenses and future
       expenses. This wont change categorization for the previous months.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            update-cost-category-definition
          --cost-category-arn <value>
          --rule-version <value>
          --rules <value>
          [--default-value <value>]
          [--split-charge-rules <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --cost-category-arn (string)
          The unique identifier for your Cost Category.

       --rule-version (string)
          The rule schema version in this particular Cost Category.

          Possible values:

          o CostCategoryExpression.v1

       --rules (list)
          The  Expression  object  used to categorize costs. For more informa-
          tion, see CostCategoryRule .

          (structure)
              Rules are processed in order. If there are multiple  rules  that
              match  the  line  item,  then the first rule to match is used to
              determine that Cost Category value.

              Value -> (string)
                 The default value for the cost category.

              Rule -> (structure)
                 An Expression object used to categorize costs. This  supports
                 dimensions,  tags, and nested expressions. Currently the only
                 dimensions supported  are  LINKED_ACCOUNT  ,  SERVICE_CODE  ,
                 RECORD_TYPE , and LINKED_ACCOUNT_NAME .

                 Root level OR isn't supported. We recommend that you create a
                 separate rule instead.
                     RECORD_TYPE is a dimension used for Cost  Explorer  APIs,
                     and is also supported for Cost Category expressions. This
                     dimension uses  different  terms,  depending  on  whether
                     you're  using  the  console  or  API/JSON  editor.  For a
                     detailed comparison, see Term Comparisons in the  Billing
                     and Cost Management User Guide .

                 Or -> (list)
                     Return results that match either Dimension object.

                     (structure)
                        Use  Expression  to  filter by cost or by usage. There
                        are two patterns:

                        o Simple dimension values - You can set the  dimension
                          name  and  values  for  the filters that you plan to
                          use.   For   example,    you    can    filter    for
                          REGION==us-east-1   OR   REGION==us-west-1   .   For
                          GetRightsizingRecommendation , the Region is a  full
                          name  (for  example, REGION==US East (N. Virginia) .
                          The Expression example is  as  follows:   {  "Dimen-
                          sions":  { "Key": "REGION", "Values": [ "us-east-1",
                          us-west-1 ] } }   The list of dimension  values  are
                          OR'd  together  to  retrieve cost or usage data. You
                          can create Expression  and  DimensionValues  objects
                          using either with* methods or set* methods in multi-
                          ple lines.

                        o Compound dimension values with logical operations  -
                          You  can use multiple Expression types and the logi-
                          cal operators AND/OR/NOT to create a list of one  or
                          more Expression objects. By doing this, you can fil-
                          ter on more advanced options. For example,  you  can
                          filter   on  ((REGION  ==  us-east-1  OR  REGION  ==
                          us-west-1) OR (TAG.Type == Type1))  AND  (USAGE_TYPE
                          !=  DataTransfer)  .  The  Expression for that is as
                          follows:  {  "And":  [  {"Or":  [  {"Dimensions":  {
                          "Key":    "REGION",    "Values":    [   "us-east-1",
                          "us-west-1" ] }}, {"Tags": { "Key": "TagName", "Val-
                          ues":  ["Value1"]  }  } ]}, {"Not": {"Dimensions": {
                          "Key": "USAGE_TYPE", "Values": ["DataTransfer"]  }}}
                          ] }

                        NOTE:
                               Because each Expression can have only one oper-
                               ator, the service returns an error if more than
                               one  is  specified. The following example shows
                               an Expression object that creates an error.

                            { "And": [ ...  ],  "DimensionValues":  {  "Dimen-
                            sion":  "USAGE_TYPE", "Values": [ "DataTransfer" ]
                            } }

                        NOTE:
                            For  the  GetRightsizingRecommendation  action,  a
                            combination  of  OR  and  NOT  isn't supported. OR
                            isn't supported between different  dimensions,  or
                            dimensions  and  tags.  NOT  operators aren't sup-
                            ported.   Dimensions   are   also    limited    to
                            LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .

                            For    the    GetReservationPurchaseRecommendation
                            action, only NOT is supported. AND and  OR  aren't
                            supported.     Dimensions     are    limited    to
                            LINKED_ACCOUNT .

                        Or -> (list)
                            Return results that match either Dimension object.

                            ( ... recursive ... )

                        And -> (list)
                            Return  results that match both Dimension objects.

                            ( ... recursive ... )

                        ( ... recursive ... )Dimensions -> (structure)
                            The specific Dimension to use for Expression .

                            Key -> (string)
                               The names of the metadata types  that  you  can
                               use to filter and group your results. For exam-
                               ple, AZ returns a list of Availability Zones.

                            Values -> (list)
                               The metadata values that you can use to  filter
                               and  group  your results. You can use GetDimen-
                               sionValues to find specific values.

                               (string)

                            MatchOptions -> (list)
                               The match options that you can  use  to  filter
                               your  results.  MatchOptions is only applicable
                               for  actions  related  to  Cost  Category.  The
                               default  values for MatchOptions are EQUALS and
                               CASE_SENSITIVE .

                               (string)

                        Tags -> (structure)
                            The specific Tag to use for Expression .

                            Key -> (string)
                               The key for the tag.

                            Values -> (list)
                               The specific value of the tag.

                               (string)

                            MatchOptions -> (list)
                               The match options that you can  use  to  filter
                               your  results.  MatchOptions is only applicable
                               for  actions  related  to  Cost  Category.  The
                               default  values for MatchOptions are EQUALS and
                               CASE_SENSITIVE .

                               (string)

                        CostCategories -> (structure)
                            The filter that's based on CostCategory values.

                            Key -> (string)
                               The unique name of the Cost Category.

                            Values -> (list)
                               The specific value of the Cost Category.

                               (string)

                            MatchOptions -> (list)
                               The match options that you can  use  to  filter
                               your  results.  MatchOptions is only applicable
                               for  actions  related  to  cost  category.  The
                               default  values  for MatchOptions is EQUALS and
                               CASE_SENSITIVE .

                               (string)

                 And -> (list)
                     Return results that match both Dimension objects.

                     (structure)
                        Use Expression to filter by cost or  by  usage.  There
                        are two patterns:

                        o Simple  dimension values - You can set the dimension
                          name and values for the filters  that  you  plan  to
                          use.    For    example,    you    can   filter   for
                          REGION==us-east-1   OR   REGION==us-west-1   .   For
                          GetRightsizingRecommendation  , the Region is a full
                          name (for example, REGION==US East (N.  Virginia)  .
                          The  Expression  example  is  as follows:  { "Dimen-
                          sions": { "Key": "REGION", "Values": [  "us-east-1",
                          us-west-1  ]  } }   The list of dimension values are
                          OR'd together to retrieve cost or  usage  data.  You
                          can  create  Expression  and DimensionValues objects
                          using either with* methods or set* methods in multi-
                          ple lines.

                        o Compound  dimension values with logical operations -
                          You can use multiple Expression types and the  logi-
                          cal  operators AND/OR/NOT to create a list of one or
                          more Expression objects. By doing this, you can fil-
                          ter  on  more advanced options. For example, you can
                          filter  on  ((REGION  ==  us-east-1  OR  REGION   ==
                          us-west-1)  OR  (TAG.Type == Type1)) AND (USAGE_TYPE
                          != DataTransfer) . The Expression  for  that  is  as
                          follows:   {  "And":  [  {"Or":  [  {"Dimensions": {
                          "Key":   "REGION",    "Values":    [    "us-east-1",
                          "us-west-1" ] }}, {"Tags": { "Key": "TagName", "Val-
                          ues": ["Value1"] } } ]},  {"Not":  {"Dimensions":  {
                          "Key":  "USAGE_TYPE", "Values": ["DataTransfer"] }}}
                          ] }

                        NOTE:
                               Because each Expression can have only one oper-
                               ator, the service returns an error if more than
                               one is specified. The following  example  shows
                               an Expression object that creates an error.

                            {  "And":  [  ...  ], "DimensionValues": { "Dimen-
                            sion": "USAGE_TYPE", "Values": [ "DataTransfer"  ]
                            } }

                        NOTE:
                            For  the  GetRightsizingRecommendation  action,  a
                            combination of OR  and  NOT  isn't  supported.  OR
                            isn't  supported  between different dimensions, or
                            dimensions and tags.  NOT  operators  aren't  sup-
                            ported.    Dimensions    are   also   limited   to
                            LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .

                            For    the    GetReservationPurchaseRecommendation
                            action,  only  NOT is supported. AND and OR aren't
                            supported.    Dimensions    are     limited     to
                            LINKED_ACCOUNT .

                        Or -> (list)
                            Return results that match either Dimension object.

                            ( ... recursive ... )

                        And -> (list)
                            Return results that match both Dimension  objects.

                            ( ... recursive ... )

                        ( ... recursive ... )Dimensions -> (structure)
                            The specific Dimension to use for Expression .

                            Key -> (string)
                               The  names  of  the metadata types that you can
                               use to filter and group your results. For exam-
                               ple, AZ returns a list of Availability Zones.

                            Values -> (list)
                               The  metadata values that you can use to filter
                               and group your results. You can  use  GetDimen-
                               sionValues to find specific values.

                               (string)

                            MatchOptions -> (list)
                               The  match  options  that you can use to filter
                               your results. MatchOptions is  only  applicable
                               for  actions  related  to  Cost  Category.  The
                               default values for MatchOptions are EQUALS  and
                               CASE_SENSITIVE .

                               (string)

                        Tags -> (structure)
                            The specific Tag to use for Expression .

                            Key -> (string)
                               The key for the tag.

                            Values -> (list)
                               The specific value of the tag.

                               (string)

                            MatchOptions -> (list)
                               The  match  options  that you can use to filter
                               your results. MatchOptions is  only  applicable
                               for  actions  related  to  Cost  Category.  The
                               default values for MatchOptions are EQUALS  and
                               CASE_SENSITIVE .

                               (string)

                        CostCategories -> (structure)
                            The filter that's based on CostCategory values.

                            Key -> (string)
                               The unique name of the Cost Category.

                            Values -> (list)
                               The specific value of the Cost Category.

                               (string)

                            MatchOptions -> (list)
                               The  match  options  that you can use to filter
                               your results. MatchOptions is  only  applicable
                               for  actions  related  to  cost  category.  The
                               default values for MatchOptions is  EQUALS  and
                               CASE_SENSITIVE .

                               (string)

                 Not -> (structure)
                     Return results that don't match a Dimension object.

                     Or -> (list)
                        Return results that match either Dimension object.

                        ( ... recursive ... )

                     And -> (list)
                        Return results that match both Dimension objects.

                        ( ... recursive ... )

                     ( ... recursive ... )Dimensions -> (structure)
                        The specific Dimension to use for Expression .

                        Key -> (string)
                            The  names  of the metadata types that you can use
                            to filter and group your results. For example,  AZ
                            returns a list of Availability Zones.

                        Values -> (list)
                            The metadata values that you can use to filter and
                            group your results. You can use GetDimensionValues
                            to find specific values.

                            (string)

                        MatchOptions -> (list)
                            The  match options that you can use to filter your
                            results.  MatchOptions  is  only  applicable   for
                            actions related to Cost Category. The default val-
                            ues for MatchOptions are EQUALS and CASE_SENSITIVE
                            .

                            (string)

                     Tags -> (structure)
                        The specific Tag to use for Expression .

                        Key -> (string)
                            The key for the tag.

                        Values -> (list)
                            The specific value of the tag.

                            (string)

                        MatchOptions -> (list)
                            The  match options that you can use to filter your
                            results.  MatchOptions  is  only  applicable   for
                            actions related to Cost Category. The default val-
                            ues for MatchOptions are EQUALS and CASE_SENSITIVE
                            .

                            (string)

                     CostCategories -> (structure)
                        The filter that's based on CostCategory values.

                        Key -> (string)
                            The unique name of the Cost Category.

                        Values -> (list)
                            The specific value of the Cost Category.

                            (string)

                        MatchOptions -> (list)
                            The  match options that you can use to filter your
                            results.  MatchOptions  is  only  applicable   for
                            actions related to cost category. The default val-
                            ues for MatchOptions is EQUALS and  CASE_SENSITIVE
                            .

                            (string)

                 Dimensions -> (structure)
                     The specific Dimension to use for Expression .

                     Key -> (string)
                        The  names  of  the metadata types that you can use to
                        filter and group your results. For example, AZ returns
                        a list of Availability Zones.

                     Values -> (list)
                        The  metadata  values  that  you can use to filter and
                        group your results. You can use GetDimensionValues  to
                        find specific values.

                        (string)

                     MatchOptions -> (list)
                        The  match  options  that  you  can use to filter your
                        results. MatchOptions is only applicable  for  actions
                        related  to  Cost  Category.  The  default  values for
                        MatchOptions are EQUALS and CASE_SENSITIVE .

                        (string)

                 Tags -> (structure)
                     The specific Tag to use for Expression .

                     Key -> (string)
                        The key for the tag.

                     Values -> (list)
                        The specific value of the tag.

                        (string)

                     MatchOptions -> (list)
                        The match options that you  can  use  to  filter  your
                        results.  MatchOptions  is only applicable for actions
                        related to  Cost  Category.  The  default  values  for
                        MatchOptions are EQUALS and CASE_SENSITIVE .

                        (string)

                 CostCategories -> (structure)
                     The filter that's based on CostCategory values.

                     Key -> (string)
                        The unique name of the Cost Category.

                     Values -> (list)
                        The specific value of the Cost Category.

                        (string)

                     MatchOptions -> (list)
                        The  match  options  that  you  can use to filter your
                        results. MatchOptions is only applicable  for  actions
                        related  to  cost  category.  The  default  values for
                        MatchOptions is EQUALS and CASE_SENSITIVE .

                        (string)

              InheritedValue -> (structure)
                 The value the line item is categorized as if  the  line  item
                 contains the matched dimension.

                 DimensionName -> (string)
                     The name of the dimension that's used to group costs.

                     If  you  specify  LINKED_ACCOUNT_NAME , the cost category
                     value is based on account name. If you specify TAG ,  the
                     cost  category  value  will  be based on the value of the
                     specified tag key.

                 DimensionKey -> (string)
                     The key to extract cost category values.

              Type -> (string)
                 You can define the CostCategoryRule rule type as either REGU-
                 LAR  or  INHERITED_VALUE . The INHERITED_VALUE rule type adds
                 the flexibility of defining a rule that dynamically  inherits
                 the  cost  category value from the dimension value defined by
                 CostCategoryInheritedValueDimension .  For  example,  if  you
                 want  to dynamically group costs based on the value of a spe-
                 cific tag key, first choose an  inherited  value  rule  type,
                 then choose the tag dimension and specify the tag key to use.

       JSON Syntax:

          [
            {
              "Value": "string",
              "Rule": {
                "Or": [
                  {
                    "Or": [
                      { ... recursive ... }
                      ...
                    ],
                    "And": [
                      { ... recursive ... }
                      ...
                    ],
                    "Not": { ... recursive ... },
                    "Dimensions": {
                      "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE",
                      "Values": ["string", ...],
                      "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                    },
                    "Tags": {
                      "Key": "string",
                      "Values": ["string", ...],
                      "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                    },
                    "CostCategories": {
                      "Key": "string",
                      "Values": ["string", ...],
                      "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                    }
                  }
                  ...
                ],
                "And": [
                  {
                    "Or": [
                      { ... recursive ... }
                      ...
                    ],
                    "And": [
                      { ... recursive ... }
                      ...
                    ],
                    "Not": { ... recursive ... },
                    "Dimensions": {
                      "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE",
                      "Values": ["string", ...],
                      "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                    },
                    "Tags": {
                      "Key": "string",
                      "Values": ["string", ...],
                      "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                    },
                    "CostCategories": {
                      "Key": "string",
                      "Values": ["string", ...],
                      "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                    }
                  }
                  ...
                ],
                "Not": {
                  "Or": [
                    { ... recursive ... }
                    ...
                  ],
                  "And": [
                    { ... recursive ... }
                    ...
                  ],
                  "Not": { ... recursive ... },
                  "Dimensions": {
                    "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE",
                    "Values": ["string", ...],
                    "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                  },
                  "Tags": {
                    "Key": "string",
                    "Values": ["string", ...],
                    "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                  },
                  "CostCategories": {
                    "Key": "string",
                    "Values": ["string", ...],
                    "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                  }
                },
                "Dimensions": {
                  "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                },
                "Tags": {
                  "Key": "string",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                },
                "CostCategories": {
                  "Key": "string",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                }
              },
              "InheritedValue": {
                "DimensionName": "LINKED_ACCOUNT_NAME"|"TAG",
                "DimensionKey": "string"
              },
              "Type": "REGULAR"|"INHERITED_VALUE"
            }
            ...
          ]

       --default-value (string)
          The default value for the cost category.

       --split-charge-rules (list)
          The split charge rules used to allocate your  charges  between  your
          Cost Category values.

          (structure)
              Use the split charge rule to split the cost of one Cost Category
              value across several other target values.

              Source -> (string)
                 The Cost Category value that you want to  split.  That  value
                 can't  be  used as a source or a target in other split charge
                 rules. To indicate uncategorized costs, you can use an  empty
                 string as the source.

              Targets -> (list)
                 The Cost Category values that you want to split costs across.
                 These values can't be used as a source in other split  charge
                 rules.

                 (string)

              Method -> (string)
                 The  method  that's  used  to define how to split your source
                 costs across your targets.
                     Proportional -  Allocates  charges  across  your  targets
                     based on the proportional weighted cost of each target.

                     Fixed  -  Allocates  charges across your targets based on
                     your defined allocation percentage.

                 >``Even`` - Allocates costs evenly across all targets.

              Parameters -> (list)
                 The parameters for  a  split  charge  method.  This  is  only
                 required for the FIXED method.

                 (structure)
                     The parameters for a split charge method.

                     Type -> (string)
                        The parameter type.

                     Values -> (list)
                        The parameter values.

                        (string)

       JSON Syntax:

          [
            {
              "Source": "string",
              "Targets": ["string", ...],
              "Method": "FIXED"|"PROPORTIONAL"|"EVEN",
              "Parameters": [
                {
                  "Type": "ALLOCATION_PERCENTAGES",
                  "Values": ["string", ...]
                }
                ...
              ]
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       CostCategoryArn -> (string)
          The unique identifier for your Cost Category.

       EffectiveStart -> (string)
          The Cost Category's effective start date.



                                             UPDATE-COST-CATEGORY-DEFINITION()
