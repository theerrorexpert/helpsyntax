GET-RESERVATION-PURCHASE-RECOMMENDATIGET-RESERVATION-PURCHASE-RECOMMENDATION()



NAME
       get-reservation-purchase-recommendation -

DESCRIPTION
       Gets  recommendations  for which reservations to purchase. These recom-
       mendations could help you reduce your  costs.  Reservations  provide  a
       discounted hourly rate (up to 75%) compared to On-Demand pricing.

       Amazon  Web Services generates your recommendations by identifying your
       On-Demand usage during a specific time period and collecting your usage
       into  categories  that are eligible for a reservation. After Amazon Web
       Services has these categories, it simulates every combination of reser-
       vations  in  each category of usage to identify the best number of each
       type of RI to purchase to maximize your estimated savings.

       For example, Amazon Web Services automatically aggregates  your  Amazon
       EC2  Linux, shared tenancy, and c4 family usage in the US West (Oregon)
       Region and recommends that you buy size-flexible regional  reservations
       to  apply  to  the  c4 family usage. Amazon Web Services recommends the
       smallest size instance in an instance family. This makes it  easier  to
       purchase  a  size-flexible RI. Amazon Web Services also shows the equal
       number of normalized units so that you can purchase any  instance  size
       that  you  want.  For this example, your RI recommendation would be for
       c4.large because that is the smallest size instance in the c4  instance
       family.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-reservation-purchase-recommendation
          [--account-id <value>]
          --service <value>
          [--filter <value>]
          [--account-scope <value>]
          [--lookback-period-in-days <value>]
          [--term-in-years <value>]
          [--payment-option <value>]
          [--service-specification <value>]
          [--page-size <value>]
          [--next-page-token <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --account-id (string)
          The account ID that is associated with the recommendation.

       --service (string)
          The specific service that you want recommendations for.

       --filter (structure)
          Use  Expression  to  filter  by cost or by usage. There are two pat-
          terns:

          o Simple dimension values - You can set the dimension name and  val-
            ues  for  the  filters  that you plan to use. For example, you can
            filter for REGION==us-east-1 OR REGION==us-west-1 . For  GetRight-
            sizingRecommendation  ,  the  Region  is a full name (for example,
            REGION==US East (N. Virginia) . The Expression example is as  fol-
            lows:  { "Dimensions": { "Key": "REGION", "Values": [ "us-east-1",
            us-west-1 ] } }   The list of dimension values are  OR'd  together
            to  retrieve  cost  or  usage  data. You can create Expression and
            DimensionValues objects using either with* methods or set* methods
            in multiple lines.

          o Compound  dimension  values  with logical operations - You can use
            multiple Expression types and the logical operators AND/OR/NOT  to
            create  a  list  of one or more Expression objects. By doing this,
            you can filter on more advanced options. For example, you can fil-
            ter  on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type
            == Type1)) AND (USAGE_TYPE != DataTransfer) . The  Expression  for
            that  is  as follows:  { "And": [ {"Or": [ {"Dimensions": { "Key":
            "REGION", "Values": [ "us-east-1", "us-west-1" ]  }},  {"Tags":  {
            "Key":  "TagName",  "Values":  ["Value1"] } } ]}, {"Not": {"Dimen-
            sions": { "Key": "USAGE_TYPE", "Values": ["DataTransfer"] }}} ] }

          NOTE:
                 Because each Expression can have only one operator, the  ser-
                 vice returns an error if more than one is specified. The fol-
                 lowing example shows an Expression  object  that  creates  an
                 error.

              {   "And":   [   ...   ],   "DimensionValues":   {  "Dimension":
              "USAGE_TYPE", "Values": [ "DataTransfer" ] } }

          NOTE:
              For the GetRightsizingRecommendation action, a combination of OR
              and  NOT  isn't  supported. OR isn't supported between different
              dimensions, or dimensions and tags. NOT  operators  aren't  sup-
              ported. Dimensions are also limited to LINKED_ACCOUNT , REGION ,
              or RIGHTSIZING_TYPE .

              For the GetReservationPurchaseRecommendation action, only NOT is
              supported.  AND  and OR aren't supported. Dimensions are limited
              to LINKED_ACCOUNT .

          Or -> (list)
              Return results that match either Dimension object.

              (structure)
                 Use Expression to filter by cost or by usage. There  are  two
                 patterns:

                 o Simple  dimension  values  - You can set the dimension name
                   and values for the filters that you plan to use. For  exam-
                   ple,    you    can    filter   for   REGION==us-east-1   OR
                   REGION==us-west-1 . For GetRightsizingRecommendation ,  the
                   Region  is  a  full  name (for example, REGION==US East (N.
                   Virginia) .  The  Expression  example  is  as  follows:   {
                   "Dimensions":  {  "Key": "REGION", "Values": [ "us-east-1",
                   us-west-1 ] } }   The list of  dimension  values  are  OR'd
                   together  to  retrieve  cost  or usage data. You can create
                   Expression and DimensionValues objects using  either  with*
                   methods or set* methods in multiple lines.

                 o Compound dimension values with logical operations - You can
                   use multiple Expression types  and  the  logical  operators
                   AND/OR/NOT  to  create  a  list  of  one or more Expression
                   objects. By doing this, you can  filter  on  more  advanced
                   options.  For  example,  you  can  filter  on  ((REGION  ==
                   us-east-1 OR REGION == us-west-1) OR (TAG.Type  ==  Type1))
                   AND  (USAGE_TYPE != DataTransfer) . The Expression for that
                   is as follows:  { "And": [ {"Or": [ {"Dimensions": { "Key":
                   "REGION",   "Values":  [  "us-east-1",  "us-west-1"  ]  }},
                   {"Tags": { "Key": "TagName", "Values": ["Value1"] }  }  ]},
                   {"Not":  {"Dimensions":  {  "Key":  "USAGE_TYPE", "Values":
                   ["DataTransfer"] }}} ] }

                 NOTE:
                        Because each Expression can have  only  one  operator,
                        the service returns an error if more than one is spec-
                        ified.  The  following  example  shows  an  Expression
                        object that creates an error.

                     {  "And":  [  ...  ],  "DimensionValues":  { "Dimension":
                     "USAGE_TYPE", "Values": [ "DataTransfer" ] } }

                 NOTE:
                     For the GetRightsizingRecommendation action,  a  combina-
                     tion  of  OR  and NOT isn't supported. OR isn't supported
                     between different dimensions, or dimensions and tags. NOT
                     operators  aren't  supported. Dimensions are also limited
                     to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .

                     For the GetReservationPurchaseRecommendation action, only
                     NOT is supported. AND and OR aren't supported. Dimensions
                     are limited to LINKED_ACCOUNT .

                 Or -> (list)
                     Return results that match either Dimension object.

                     ( ... recursive ... )

                 And -> (list)
                     Return results that match both Dimension objects.

                     ( ... recursive ... )

                 ( ... recursive ... )Dimensions -> (structure)
                     The specific Dimension to use for Expression .

                     Key -> (string)
                        The names of the metadata types that you  can  use  to
                        filter and group your results. For example, AZ returns
                        a list of Availability Zones.

                     Values -> (list)
                        The metadata values that you can  use  to  filter  and
                        group  your results. You can use GetDimensionValues to
                        find specific values.

                        (string)

                     MatchOptions -> (list)
                        The match options that you  can  use  to  filter  your
                        results.  MatchOptions  is only applicable for actions
                        related to  Cost  Category.  The  default  values  for
                        MatchOptions are EQUALS and CASE_SENSITIVE .

                        (string)

                 Tags -> (structure)
                     The specific Tag to use for Expression .

                     Key -> (string)
                        The key for the tag.

                     Values -> (list)
                        The specific value of the tag.

                        (string)

                     MatchOptions -> (list)
                        The  match  options  that  you  can use to filter your
                        results. MatchOptions is only applicable  for  actions
                        related  to  Cost  Category.  The  default  values for
                        MatchOptions are EQUALS and CASE_SENSITIVE .

                        (string)

                 CostCategories -> (structure)
                     The filter that's based on CostCategory values.

                     Key -> (string)
                        The unique name of the Cost Category.

                     Values -> (list)
                        The specific value of the Cost Category.

                        (string)

                     MatchOptions -> (list)
                        The match options that you  can  use  to  filter  your
                        results.  MatchOptions  is only applicable for actions
                        related to  cost  category.  The  default  values  for
                        MatchOptions is EQUALS and CASE_SENSITIVE .

                        (string)

          And -> (list)
              Return results that match both Dimension objects.

              (structure)
                 Use  Expression  to filter by cost or by usage. There are two
                 patterns:

                 o Simple dimension values - You can set  the  dimension  name
                   and  values for the filters that you plan to use. For exam-
                   ple,   you   can   filter    for    REGION==us-east-1    OR
                   REGION==us-west-1  . For GetRightsizingRecommendation , the
                   Region is a full name (for  example,  REGION==US  East  (N.
                   Virginia)  .  The  Expression  example  is  as  follows:  {
                   "Dimensions": { "Key": "REGION", "Values":  [  "us-east-1",
                   us-west-1  ]  }  }    The list of dimension values are OR'd
                   together to retrieve cost or usage  data.  You  can  create
                   Expression  and  DimensionValues objects using either with*
                   methods or set* methods in multiple lines.

                 o Compound dimension values with logical operations - You can
                   use  multiple  Expression  types  and the logical operators
                   AND/OR/NOT to create a  list  of  one  or  more  Expression
                   objects.  By  doing  this,  you can filter on more advanced
                   options.  For  example,  you  can  filter  on  ((REGION  ==
                   us-east-1  OR  REGION == us-west-1) OR (TAG.Type == Type1))
                   AND (USAGE_TYPE != DataTransfer) . The Expression for  that
                   is as follows:  { "And": [ {"Or": [ {"Dimensions": { "Key":
                   "REGION",  "Values":  [  "us-east-1",  "us-west-1"  ]   }},
                   {"Tags":  {  "Key": "TagName", "Values": ["Value1"] } } ]},
                   {"Not": {"Dimensions":  {  "Key":  "USAGE_TYPE",  "Values":
                   ["DataTransfer"] }}} ] }

                 NOTE:
                        Because  each  Expression  can have only one operator,
                        the service returns an error if more than one is spec-
                        ified.  The  following  example  shows  an  Expression
                        object that creates an error.

                     { "And":  [  ...  ],  "DimensionValues":  {  "Dimension":
                     "USAGE_TYPE", "Values": [ "DataTransfer" ] } }

                 NOTE:
                     For  the  GetRightsizingRecommendation action, a combina-
                     tion of OR and NOT isn't supported.  OR  isn't  supported
                     between different dimensions, or dimensions and tags. NOT
                     operators aren't supported. Dimensions are  also  limited
                     to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .

                     For the GetReservationPurchaseRecommendation action, only
                     NOT is supported. AND and OR aren't supported. Dimensions
                     are limited to LINKED_ACCOUNT .

                 Or -> (list)
                     Return results that match either Dimension object.

                     ( ... recursive ... )

                 And -> (list)
                     Return results that match both Dimension objects.

                     ( ... recursive ... )

                 ( ... recursive ... )Dimensions -> (structure)
                     The specific Dimension to use for Expression .

                     Key -> (string)
                        The  names  of  the metadata types that you can use to
                        filter and group your results. For example, AZ returns
                        a list of Availability Zones.

                     Values -> (list)
                        The  metadata  values  that  you can use to filter and
                        group your results. You can use GetDimensionValues  to
                        find specific values.

                        (string)

                     MatchOptions -> (list)
                        The  match  options  that  you  can use to filter your
                        results. MatchOptions is only applicable  for  actions
                        related  to  Cost  Category.  The  default  values for
                        MatchOptions are EQUALS and CASE_SENSITIVE .

                        (string)

                 Tags -> (structure)
                     The specific Tag to use for Expression .

                     Key -> (string)
                        The key for the tag.

                     Values -> (list)
                        The specific value of the tag.

                        (string)

                     MatchOptions -> (list)
                        The match options that you  can  use  to  filter  your
                        results.  MatchOptions  is only applicable for actions
                        related to  Cost  Category.  The  default  values  for
                        MatchOptions are EQUALS and CASE_SENSITIVE .

                        (string)

                 CostCategories -> (structure)
                     The filter that's based on CostCategory values.

                     Key -> (string)
                        The unique name of the Cost Category.

                     Values -> (list)
                        The specific value of the Cost Category.

                        (string)

                     MatchOptions -> (list)
                        The  match  options  that  you  can use to filter your
                        results. MatchOptions is only applicable  for  actions
                        related  to  cost  category.  The  default  values for
                        MatchOptions is EQUALS and CASE_SENSITIVE .

                        (string)

          Not -> (structure)
              Return results that don't match a Dimension object.

              Or -> (list)
                 Return results that match either Dimension object.

                 ( ... recursive ... )

              And -> (list)
                 Return results that match both Dimension objects.

                 ( ... recursive ... )

              ( ... recursive ... )Dimensions -> (structure)
                 The specific Dimension to use for Expression .

                 Key -> (string)
                     The names of the metadata types that you can use to  fil-
                     ter  and  group  your  results. For example, AZ returns a
                     list of Availability Zones.

                 Values -> (list)
                     The metadata values that you can use to filter and  group
                     your results. You can use GetDimensionValues to find spe-
                     cific values.

                     (string)

                 MatchOptions -> (list)
                     The match  options  that  you  can  use  to  filter  your
                     results.  MatchOptions  is  only  applicable  for actions
                     related to Cost Category. The default values for MatchOp-
                     tions are EQUALS and CASE_SENSITIVE .

                     (string)

              Tags -> (structure)
                 The specific Tag to use for Expression .

                 Key -> (string)
                     The key for the tag.

                 Values -> (list)
                     The specific value of the tag.

                     (string)

                 MatchOptions -> (list)
                     The  match  options  that  you  can  use  to  filter your
                     results. MatchOptions  is  only  applicable  for  actions
                     related to Cost Category. The default values for MatchOp-
                     tions are EQUALS and CASE_SENSITIVE .

                     (string)

              CostCategories -> (structure)
                 The filter that's based on CostCategory values.

                 Key -> (string)
                     The unique name of the Cost Category.

                 Values -> (list)
                     The specific value of the Cost Category.

                     (string)

                 MatchOptions -> (list)
                     The match  options  that  you  can  use  to  filter  your
                     results.  MatchOptions  is  only  applicable  for actions
                     related to cost category. The default values for MatchOp-
                     tions is EQUALS and CASE_SENSITIVE .

                     (string)

          Dimensions -> (structure)
              The specific Dimension to use for Expression .

              Key -> (string)
                 The  names  of  the metadata types that you can use to filter
                 and group your results. For example, AZ  returns  a  list  of
                 Availability Zones.

              Values -> (list)
                 The metadata values that you can use to filter and group your
                 results. You can use GetDimensionValues to find specific val-
                 ues.

                 (string)

              MatchOptions -> (list)
                 The  match  options  that you can use to filter your results.
                 MatchOptions is only applicable for actions related  to  Cost
                 Category.  The default values for MatchOptions are EQUALS and
                 CASE_SENSITIVE .

                 (string)

          Tags -> (structure)
              The specific Tag to use for Expression .

              Key -> (string)
                 The key for the tag.

              Values -> (list)
                 The specific value of the tag.

                 (string)

              MatchOptions -> (list)
                 The match options that you can use to  filter  your  results.
                 MatchOptions  is  only applicable for actions related to Cost
                 Category. The default values for MatchOptions are EQUALS  and
                 CASE_SENSITIVE .

                 (string)

          CostCategories -> (structure)
              The filter that's based on CostCategory values.

              Key -> (string)
                 The unique name of the Cost Category.

              Values -> (list)
                 The specific value of the Cost Category.

                 (string)

              MatchOptions -> (list)
                 The  match  options  that you can use to filter your results.
                 MatchOptions is only applicable for actions related  to  cost
                 category.  The  default values for MatchOptions is EQUALS and
                 CASE_SENSITIVE .

                 (string)

       JSON Syntax:

          {
            "Or": [
              {
                "Or": [
                  { ... recursive ... }
                  ...
                ],
                "And": [
                  { ... recursive ... }
                  ...
                ],
                "Not": { ... recursive ... },
                "Dimensions": {
                  "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                },
                "Tags": {
                  "Key": "string",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                },
                "CostCategories": {
                  "Key": "string",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                }
              }
              ...
            ],
            "And": [
              {
                "Or": [
                  { ... recursive ... }
                  ...
                ],
                "And": [
                  { ... recursive ... }
                  ...
                ],
                "Not": { ... recursive ... },
                "Dimensions": {
                  "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                },
                "Tags": {
                  "Key": "string",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                },
                "CostCategories": {
                  "Key": "string",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                }
              }
              ...
            ],
            "Not": {
              "Or": [
                { ... recursive ... }
                ...
              ],
              "And": [
                { ... recursive ... }
                ...
              ],
              "Not": { ... recursive ... },
              "Dimensions": {
                "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE",
                "Values": ["string", ...],
                "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
              },
              "Tags": {
                "Key": "string",
                "Values": ["string", ...],
                "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
              },
              "CostCategories": {
                "Key": "string",
                "Values": ["string", ...],
                "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
              }
            },
            "Dimensions": {
              "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE",
              "Values": ["string", ...],
              "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
            },
            "Tags": {
              "Key": "string",
              "Values": ["string", ...],
              "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
            },
            "CostCategories": {
              "Key": "string",
              "Values": ["string", ...],
              "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
            }
          }

       --account-scope (string)
          The account scope that you want your recommendations for. Amazon Web
          Services calculates recommendations including the management account
          and member accounts if the value is set to PAYER . If the  value  is
          LINKED  ,  recommendations  are  calculated  for  individual  member
          accounts only.

          Possible values:

          o PAYER

          o LINKED

       --lookback-period-in-days (string)
          The number of previous days that you want  Amazon  Web  Services  to
          consider when it calculates your recommendations.

          Possible values:

          o SEVEN_DAYS

          o THIRTY_DAYS

          o SIXTY_DAYS

       --term-in-years (string)
          The reservation term that you want recommendations for.

          Possible values:

          o ONE_YEAR

          o THREE_YEARS

       --payment-option (string)
          The reservation purchase option that you want recommendations for.

          Possible values:

          o NO_UPFRONT

          o PARTIAL_UPFRONT

          o ALL_UPFRONT

          o LIGHT_UTILIZATION

          o MEDIUM_UTILIZATION

          o HEAVY_UTILIZATION

       --service-specification (structure)
          The  hardware specifications for the service instances that you want
          recommendations for, such as  standard  or  convertible  Amazon  EC2
          instances.

          EC2Specification -> (structure)
              The  Amazon EC2 hardware specifications that you want Amazon Web
              Services to provide recommendations for.

              OfferingClass -> (string)
                 Indicates whether you want a recommendation for  standard  or
                 convertible reservations.

       Shorthand Syntax:

          EC2Specification={OfferingClass=string}

       JSON Syntax:

          {
            "EC2Specification": {
              "OfferingClass": "STANDARD"|"CONVERTIBLE"
            }
          }

       --page-size (integer)
          The  number  of  recommendations  that you want returned in a single
          response object.

       --next-page-token (string)
          The pagination token that indicates the next set of results that you
          want to retrieve.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To retrieve the reservation recommendations for Partial Upfront EC2 RIs
       with a three year term

       The following get-reservation-purchase-recommendation example retrieves
       recommendations  for  Partial  Upfront  EC2 instances with a three-year
       term, based on the last 60 days of EC2 usage.

          aws ce get-reservation-purchase-recommendation \
              --service "Amazon Redshift" \
              --lookback-period-in-days SIXTY_DAYS \
              --term-in-years THREE_YEARS \
              --payment-option PARTIAL_UPFRONT

       Output:

          {
              "Recommendations": [],
              "Metadata": {
                  "GenerationTimestamp": "2018-08-08T15:20:57Z",
                  "RecommendationId": "00d59dde-a1ad-473f-8ff2-iexample3330b"
              }
          }

OUTPUT
       Metadata -> (structure)
          Information about this specific recommendation  call,  such  as  the
          time stamp for when Cost Explorer generated this recommendation.

          RecommendationId -> (string)
              The ID for this specific recommendation.

          GenerationTimestamp -> (string)
              The timestamp for when Amazon Web Services made this recommenda-
              tion.

       Recommendations -> (list)
          Recommendations for reservations to purchase.

          (structure)
              A specific reservation that Amazon Web Services  recommends  for
              purchase.

              AccountScope -> (string)
                 The  account  scope  that Amazon Web Services recommends that
                 you purchase this instance for. For example, you can purchase
                 this  reservation  for  an  entire organization in Amazon Web
                 Services Organizations.

              LookbackPeriodInDays -> (string)
                 How many days of previous usage that Amazon Web Services con-
                 siders when making this recommendation.

              TermInYears -> (string)
                 The  term  of  the  reservation that you want recommendations
                 for, in years.

              PaymentOption -> (string)
                 The  payment  option  for  the  reservation   (for   example,
                 AllUpfront or NoUpfront ).

              ServiceSpecification -> (structure)
                 Hardware  specifications for the service that you want recom-
                 mendations for.

                 EC2Specification -> (structure)
                     The Amazon EC2 hardware specifications that you want Ama-
                     zon Web Services to provide recommendations for.

                     OfferingClass -> (string)
                        Indicates  whether you want a recommendation for stan-
                        dard or convertible reservations.

              RecommendationDetails -> (list)
                 Details about the recommended purchases.

                 (structure)
                     Details about your recommended reservation purchase.

                     AccountId -> (string)
                        The account that this RI recommendation is for.

                     InstanceDetails -> (structure)
                        Details about the instances that Amazon  Web  Services
                        recommends that you purchase.

                        EC2InstanceDetails -> (structure)
                            The  Amazon EC2 instances that Amazon Web Services
                            recommends that you purchase.

                            Family -> (string)
                               The instance family of the recommended reserva-
                               tion.

                            InstanceType -> (string)
                               The  type  of instance that Amazon Web Services
                               recommends.

                            Region -> (string)
                               The Amazon Web Services Region  of  the  recom-
                               mended reservation.

                            AvailabilityZone -> (string)
                               The Availability Zone of the recommended reser-
                               vation.

                            Platform -> (string)
                               The platform of  the  recommended  reservation.
                               The  platform  is  the  specific combination of
                               operating system, license model,  and  software
                               on an instance.

                            Tenancy -> (string)
                               Determines  whether the recommended reservation
                               is dedicated or shared.

                            CurrentGeneration -> (boolean)
                               Determines whether the recommendation is for  a
                               current-generation instance.

                            SizeFlexEligible -> (boolean)
                               Determines  whether the recommended reservation
                               is size flexible.

                        RDSInstanceDetails -> (structure)
                            The Amazon RDS instances that Amazon Web  Services
                            recommends that you purchase.

                            Family -> (string)
                               The instance family of the recommended reserva-
                               tion.

                            InstanceType -> (string)
                               The type of instance that Amazon  Web  Services
                               recommends.

                            Region -> (string)
                               The  Amazon  Web  Services Region of the recom-
                               mended reservation.

                            DatabaseEngine -> (string)
                               The database engine that the recommended reser-
                               vation supports.

                            DatabaseEdition -> (string)
                               The   database  edition  that  the  recommended
                               reservation supports.

                            DeploymentOption -> (string)
                               Determines whether the recommendation is for  a
                               reservation  in a single Availability Zone or a
                               reservation with a backup in  a  second  Avail-
                               ability Zone.

                            LicenseModel -> (string)
                               The license model that the recommended reserva-
                               tion supports.

                            CurrentGeneration -> (boolean)
                               Determines whether the recommendation is for  a
                               current-generation instance.

                            SizeFlexEligible -> (boolean)
                               Determines  whether the recommended reservation
                               is size flexible.

                        RedshiftInstanceDetails -> (structure)
                            The Amazon Redshift instances that Amazon Web Ser-
                            vices recommends that you purchase.

                            Family -> (string)
                               The instance family of the recommended reserva-
                               tion.

                            NodeType -> (string)
                               The type of node that Amazon Web Services  rec-
                               ommends.

                            Region -> (string)
                               The  Amazon  Web  Services Region of the recom-
                               mended reservation.

                            CurrentGeneration -> (boolean)
                               Determines whether the recommendation is for  a
                               current-generation instance.

                            SizeFlexEligible -> (boolean)
                               Determines  whether the recommended reservation
                               is size flexible.

                        ElastiCacheInstanceDetails -> (structure)
                            The ElastiCache instances that Amazon Web Services
                            recommends that you purchase.

                            Family -> (string)
                               The instance family of the recommended reserva-
                               tion.

                            NodeType -> (string)
                               The type of node that Amazon Web Services  rec-
                               ommends.

                            Region -> (string)
                               The  Amazon  Web  Services Region of the recom-
                               mended reservation.

                            ProductDescription -> (string)
                               The description of the recommended reservation.

                            CurrentGeneration -> (boolean)
                               Determines  whether the recommendation is for a
                               current generation instance.

                            SizeFlexEligible -> (boolean)
                               Determines whether the recommended  reservation
                               is size flexible.

                        ESInstanceDetails -> (structure)
                            The  Amazon OpenSearch Service instances that Ama-
                            zon Web Services recommends that you purchase.

                            InstanceClass -> (string)
                               The class of instance that Amazon Web  Services
                               recommends.

                            InstanceSize -> (string)
                               The  size  of instance that Amazon Web Services
                               recommends.

                            Region -> (string)
                               The Amazon Web Services Region  of  the  recom-
                               mended reservation.

                            CurrentGeneration -> (boolean)
                               Determines  whether the recommendation is for a
                               current-generation instance.

                            SizeFlexEligible -> (boolean)
                               Determines whether the recommended  reservation
                               is size flexible.

                     RecommendedNumberOfInstancesToPurchase -> (string)
                        The  number of instances that Amazon Web Services rec-
                        ommends that you purchase.

                     RecommendedNormalizedUnitsToPurchase -> (string)
                        The number of normalized units that  Amazon  Web  Ser-
                        vices recommends that you purchase.

                     MinimumNumberOfInstancesUsedPerHour -> (string)
                        The  minimum  number  of instances that you used in an
                        hour during the historical period. Amazon Web Services
                        uses  this  to  calculate your recommended reservation
                        purchases.

                     MinimumNormalizedUnitsUsedPerHour -> (string)
                        The minimum number of normalized units that  you  used
                        in  an  hour  during the historical period. Amazon Web
                        Services  uses  this  to  calculate  your  recommended
                        reservation purchases.

                     MaximumNumberOfInstancesUsedPerHour -> (string)
                        The  maximum  number  of instances that you used in an
                        hour during the historical period. Amazon Web Services
                        uses  this  to  calculate your recommended reservation
                        purchases.

                     MaximumNormalizedUnitsUsedPerHour -> (string)
                        The maximum number of normalized units that  you  used
                        in  an  hour  during the historical period. Amazon Web
                        Services  uses  this  to  calculate  your  recommended
                        reservation purchases.

                     AverageNumberOfInstancesUsedPerHour -> (string)
                        The  average  number  of instances that you used in an
                        hour during the historical period. Amazon Web Services
                        uses  this  to  calculate your recommended reservation
                        purchases.

                     AverageNormalizedUnitsUsedPerHour -> (string)
                        The average number of normalized units that  you  used
                        in  an  hour  during the historical period. Amazon Web
                        Services  uses  this  to  calculate  your  recommended
                        reservation purchases.

                     AverageUtilization -> (string)
                        The  average utilization of your instances. Amazon Web
                        Services  uses  this  to  calculate  your  recommended
                        reservation purchases.

                     EstimatedBreakEvenInMonths -> (string)
                        How  long  Amazon Web Services estimates that it takes
                        for this  instance  to  start  saving  you  money,  in
                        months.

                     CurrencyCode -> (string)
                        The  currency  code  that  Amazon Web Services used to
                        calculate the costs for this instance.

                     EstimatedMonthlySavingsAmount -> (string)
                        How much Amazon Web Services estimates that this  spe-
                        cific recommendation could save you in a month.

                     EstimatedMonthlySavingsPercentage -> (string)
                        How  much Amazon Web Services estimates that this spe-
                        cific recommendation could save you in a month,  as  a
                        percentage of your overall costs.

                     EstimatedMonthlyOnDemandCost -> (string)
                        How  much Amazon Web Services estimates that you spend
                        on On-Demand Instances in a month.

                     EstimatedReservationCostForLookbackPeriod -> (string)
                        How much Amazon Web Services estimates that you  would
                        have spent for all usage during the specified histori-
                        cal period if you had a reservation.

                     UpfrontCost -> (string)
                        How much purchasing this instance costs you upfront.

                     RecurringStandardMonthlyCost -> (string)
                        How much purchasing  this  instance  costs  you  on  a
                        monthly basis.

              RecommendationSummary -> (structure)
                 A summary about the recommended purchase.

                 TotalEstimatedMonthlySavingsAmount -> (string)
                     The  total amount that Amazon Web Services estimates that
                     this recommendation could save you in a month.

                 TotalEstimatedMonthlySavingsPercentage -> (string)
                     The total amount that Amazon Web Services estimates  that
                     this  recommendation could save you in a month, as a per-
                     centage of your costs.

                 CurrencyCode -> (string)
                     The currency code used for this recommendation.

       NextPageToken -> (string)
          The pagination token for the next set of retrievable results.



                                     GET-RESERVATION-PURCHASE-RECOMMENDATION()
