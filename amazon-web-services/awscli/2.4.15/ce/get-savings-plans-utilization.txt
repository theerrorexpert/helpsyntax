GET-SAVINGS-PLANS-UTILIZATION()                GET-SAVINGS-PLANS-UTILIZATION()



NAME
       get-savings-plans-utilization -

DESCRIPTION
       Retrieves  the  Savings  Plans utilization for your account across date
       ranges with daily or monthly  granularity.  Management  account  in  an
       organization  have access to member accounts. You can use GetDimension-
       Values in SAVINGS_PLANS to determine the possible dimension values.

       NOTE:
          You cannot group by any dimension values for GetSavingsPlansUtiliza-
          tion .
              GetSavingsPlansUtilization  doesn't  support  filtering by tags.
              GetSavingsPlansUtilization also doesn't support the OR  operator
              between filter dimensions. For the full request syntax with sup-
              ported parameters, see Examples .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-savings-plans-utilization
          --time-period <value>
          [--granularity <value>]
          [--filter <value>]
          [--sort-by <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --time-period (structure)
          The time period that you want the usage and  costs  for.  The  Start
          date  must be within 13 months. The End date must be after the Start
          date, and before the current date. Future dates can't be used as  an
          End date.

          Start -> (string)
              The  beginning  of the time period. The start date is inclusive.
              For example, if  start  is  2017-01-01  ,  Amazon  Web  Services
              retrieves  cost  and usage data starting at 2017-01-01 up to the
              end date. The start date must be equal to or no later  than  the
              current date to avoid a validation error.

          End -> (string)
              The end of the time period. The end date is exclusive. For exam-
              ple, if end is 2017-05-01 , Amazon Web Services  retrieves  cost
              and  usage  data  from  the start date up to, but not including,
              2017-05-01 .

       Shorthand Syntax:

          Start=string,End=string

       JSON Syntax:

          {
            "Start": "string",
            "End": "string"
          }

       --granularity (string)
          The granularity of the Amazon Web  Services  utillization  data  for
          your Savings Plans.

          The  GetSavingsPlansUtilization  operation  supports  only DAILY and
          MONTHLY granularities.

          Possible values:

          o DAILY

          o MONTHLY

          o HOURLY

       --filter (structure)
          Filters Savings Plans utilization coverage data for  active  Savings
          Plans dimensions. You can filter data with the following dimensions:

          o LINKED_ACCOUNT

          o SAVINGS_PLAN_ARN

          o SAVINGS_PLANS_TYPE

          o REGION

          o PAYMENT_OPTION

          o INSTANCE_TYPE_FAMILY
              GetSavingsPlansUtilization uses the same  Expression  object  as
              the  other  operations,  but  only  AND  is supported among each
              dimension.

          Filtering by tags isn't supported.

          Or -> (list)
              Return results that match either Dimension object.

              (structure)
                 Use Expression to filter by cost or by usage. There  are  two
                 patterns:

                 o Simple  dimension  values  - You can set the dimension name
                   and values for the filters that you plan to use. For  exam-
                   ple,    you    can    filter   for   REGION==us-east-1   OR
                   REGION==us-west-1 . For GetRightsizingRecommendation ,  the
                   Region  is  a  full  name (for example, REGION==US East (N.
                   Virginia) .  The  Expression  example  is  as  follows:   {
                   "Dimensions":  {  "Key": "REGION", "Values": [ "us-east-1",
                   us-west-1 ] } }   The list of  dimension  values  are  OR'd
                   together  to  retrieve  cost  or usage data. You can create
                   Expression and DimensionValues objects using  either  with*
                   methods or set* methods in multiple lines.

                 o Compound dimension values with logical operations - You can
                   use multiple Expression types  and  the  logical  operators
                   AND/OR/NOT  to  create  a  list  of  one or more Expression
                   objects. By doing this, you can  filter  on  more  advanced
                   options.  For  example,  you  can  filter  on  ((REGION  ==
                   us-east-1 OR REGION == us-west-1) OR (TAG.Type  ==  Type1))
                   AND  (USAGE_TYPE != DataTransfer) . The Expression for that
                   is as follows:  { "And": [ {"Or": [ {"Dimensions": { "Key":
                   "REGION",   "Values":  [  "us-east-1",  "us-west-1"  ]  }},
                   {"Tags": { "Key": "TagName", "Values": ["Value1"] }  }  ]},
                   {"Not":  {"Dimensions":  {  "Key":  "USAGE_TYPE", "Values":
                   ["DataTransfer"] }}} ] }

                 NOTE:
                        Because each Expression can have  only  one  operator,
                        the service returns an error if more than one is spec-
                        ified.  The  following  example  shows  an  Expression
                        object that creates an error.

                     {  "And":  [  ...  ],  "DimensionValues":  { "Dimension":
                     "USAGE_TYPE", "Values": [ "DataTransfer" ] } }

                 NOTE:
                     For the GetRightsizingRecommendation action,  a  combina-
                     tion  of  OR  and NOT isn't supported. OR isn't supported
                     between different dimensions, or dimensions and tags. NOT
                     operators  aren't  supported. Dimensions are also limited
                     to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .

                     For the GetReservationPurchaseRecommendation action, only
                     NOT is supported. AND and OR aren't supported. Dimensions
                     are limited to LINKED_ACCOUNT .

                 Or -> (list)
                     Return results that match either Dimension object.

                     ( ... recursive ... )

                 And -> (list)
                     Return results that match both Dimension objects.

                     ( ... recursive ... )

                 ( ... recursive ... )Dimensions -> (structure)
                     The specific Dimension to use for Expression .

                     Key -> (string)
                        The names of the metadata types that you  can  use  to
                        filter and group your results. For example, AZ returns
                        a list of Availability Zones.

                     Values -> (list)
                        The metadata values that you can  use  to  filter  and
                        group  your results. You can use GetDimensionValues to
                        find specific values.

                        (string)

                     MatchOptions -> (list)
                        The match options that you  can  use  to  filter  your
                        results.  MatchOptions  is only applicable for actions
                        related to  Cost  Category.  The  default  values  for
                        MatchOptions are EQUALS and CASE_SENSITIVE .

                        (string)

                 Tags -> (structure)
                     The specific Tag to use for Expression .

                     Key -> (string)
                        The key for the tag.

                     Values -> (list)
                        The specific value of the tag.

                        (string)

                     MatchOptions -> (list)
                        The  match  options  that  you  can use to filter your
                        results. MatchOptions is only applicable  for  actions
                        related  to  Cost  Category.  The  default  values for
                        MatchOptions are EQUALS and CASE_SENSITIVE .

                        (string)

                 CostCategories -> (structure)
                     The filter that's based on CostCategory values.

                     Key -> (string)
                        The unique name of the Cost Category.

                     Values -> (list)
                        The specific value of the Cost Category.

                        (string)

                     MatchOptions -> (list)
                        The match options that you  can  use  to  filter  your
                        results.  MatchOptions  is only applicable for actions
                        related to  cost  category.  The  default  values  for
                        MatchOptions is EQUALS and CASE_SENSITIVE .

                        (string)

          And -> (list)
              Return results that match both Dimension objects.

              (structure)
                 Use  Expression  to filter by cost or by usage. There are two
                 patterns:

                 o Simple dimension values - You can set  the  dimension  name
                   and  values for the filters that you plan to use. For exam-
                   ple,   you   can   filter    for    REGION==us-east-1    OR
                   REGION==us-west-1  . For GetRightsizingRecommendation , the
                   Region is a full name (for  example,  REGION==US  East  (N.
                   Virginia)  .  The  Expression  example  is  as  follows:  {
                   "Dimensions": { "Key": "REGION", "Values":  [  "us-east-1",
                   us-west-1  ]  }  }    The list of dimension values are OR'd
                   together to retrieve cost or usage  data.  You  can  create
                   Expression  and  DimensionValues objects using either with*
                   methods or set* methods in multiple lines.

                 o Compound dimension values with logical operations - You can
                   use  multiple  Expression  types  and the logical operators
                   AND/OR/NOT to create a  list  of  one  or  more  Expression
                   objects.  By  doing  this,  you can filter on more advanced
                   options.  For  example,  you  can  filter  on  ((REGION  ==
                   us-east-1  OR  REGION == us-west-1) OR (TAG.Type == Type1))
                   AND (USAGE_TYPE != DataTransfer) . The Expression for  that
                   is as follows:  { "And": [ {"Or": [ {"Dimensions": { "Key":
                   "REGION",  "Values":  [  "us-east-1",  "us-west-1"  ]   }},
                   {"Tags":  {  "Key": "TagName", "Values": ["Value1"] } } ]},
                   {"Not": {"Dimensions":  {  "Key":  "USAGE_TYPE",  "Values":
                   ["DataTransfer"] }}} ] }

                 NOTE:
                        Because  each  Expression  can have only one operator,
                        the service returns an error if more than one is spec-
                        ified.  The  following  example  shows  an  Expression
                        object that creates an error.

                     { "And":  [  ...  ],  "DimensionValues":  {  "Dimension":
                     "USAGE_TYPE", "Values": [ "DataTransfer" ] } }

                 NOTE:
                     For  the  GetRightsizingRecommendation action, a combina-
                     tion of OR and NOT isn't supported.  OR  isn't  supported
                     between different dimensions, or dimensions and tags. NOT
                     operators aren't supported. Dimensions are  also  limited
                     to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .

                     For the GetReservationPurchaseRecommendation action, only
                     NOT is supported. AND and OR aren't supported. Dimensions
                     are limited to LINKED_ACCOUNT .

                 Or -> (list)
                     Return results that match either Dimension object.

                     ( ... recursive ... )

                 And -> (list)
                     Return results that match both Dimension objects.

                     ( ... recursive ... )

                 ( ... recursive ... )Dimensions -> (structure)
                     The specific Dimension to use for Expression .

                     Key -> (string)
                        The  names  of  the metadata types that you can use to
                        filter and group your results. For example, AZ returns
                        a list of Availability Zones.

                     Values -> (list)
                        The  metadata  values  that  you can use to filter and
                        group your results. You can use GetDimensionValues  to
                        find specific values.

                        (string)

                     MatchOptions -> (list)
                        The  match  options  that  you  can use to filter your
                        results. MatchOptions is only applicable  for  actions
                        related  to  Cost  Category.  The  default  values for
                        MatchOptions are EQUALS and CASE_SENSITIVE .

                        (string)

                 Tags -> (structure)
                     The specific Tag to use for Expression .

                     Key -> (string)
                        The key for the tag.

                     Values -> (list)
                        The specific value of the tag.

                        (string)

                     MatchOptions -> (list)
                        The match options that you  can  use  to  filter  your
                        results.  MatchOptions  is only applicable for actions
                        related to  Cost  Category.  The  default  values  for
                        MatchOptions are EQUALS and CASE_SENSITIVE .

                        (string)

                 CostCategories -> (structure)
                     The filter that's based on CostCategory values.

                     Key -> (string)
                        The unique name of the Cost Category.

                     Values -> (list)
                        The specific value of the Cost Category.

                        (string)

                     MatchOptions -> (list)
                        The  match  options  that  you  can use to filter your
                        results. MatchOptions is only applicable  for  actions
                        related  to  cost  category.  The  default  values for
                        MatchOptions is EQUALS and CASE_SENSITIVE .

                        (string)

          Not -> (structure)
              Return results that don't match a Dimension object.

              Or -> (list)
                 Return results that match either Dimension object.

                 ( ... recursive ... )

              And -> (list)
                 Return results that match both Dimension objects.

                 ( ... recursive ... )

              ( ... recursive ... )Dimensions -> (structure)
                 The specific Dimension to use for Expression .

                 Key -> (string)
                     The names of the metadata types that you can use to  fil-
                     ter  and  group  your  results. For example, AZ returns a
                     list of Availability Zones.

                 Values -> (list)
                     The metadata values that you can use to filter and  group
                     your results. You can use GetDimensionValues to find spe-
                     cific values.

                     (string)

                 MatchOptions -> (list)
                     The match  options  that  you  can  use  to  filter  your
                     results.  MatchOptions  is  only  applicable  for actions
                     related to Cost Category. The default values for MatchOp-
                     tions are EQUALS and CASE_SENSITIVE .

                     (string)

              Tags -> (structure)
                 The specific Tag to use for Expression .

                 Key -> (string)
                     The key for the tag.

                 Values -> (list)
                     The specific value of the tag.

                     (string)

                 MatchOptions -> (list)
                     The  match  options  that  you  can  use  to  filter your
                     results. MatchOptions  is  only  applicable  for  actions
                     related to Cost Category. The default values for MatchOp-
                     tions are EQUALS and CASE_SENSITIVE .

                     (string)

              CostCategories -> (structure)
                 The filter that's based on CostCategory values.

                 Key -> (string)
                     The unique name of the Cost Category.

                 Values -> (list)
                     The specific value of the Cost Category.

                     (string)

                 MatchOptions -> (list)
                     The match  options  that  you  can  use  to  filter  your
                     results.  MatchOptions  is  only  applicable  for actions
                     related to cost category. The default values for MatchOp-
                     tions is EQUALS and CASE_SENSITIVE .

                     (string)

          Dimensions -> (structure)
              The specific Dimension to use for Expression .

              Key -> (string)
                 The  names  of  the metadata types that you can use to filter
                 and group your results. For example, AZ  returns  a  list  of
                 Availability Zones.

              Values -> (list)
                 The metadata values that you can use to filter and group your
                 results. You can use GetDimensionValues to find specific val-
                 ues.

                 (string)

              MatchOptions -> (list)
                 The  match  options  that you can use to filter your results.
                 MatchOptions is only applicable for actions related  to  Cost
                 Category.  The default values for MatchOptions are EQUALS and
                 CASE_SENSITIVE .

                 (string)

          Tags -> (structure)
              The specific Tag to use for Expression .

              Key -> (string)
                 The key for the tag.

              Values -> (list)
                 The specific value of the tag.

                 (string)

              MatchOptions -> (list)
                 The match options that you can use to  filter  your  results.
                 MatchOptions  is  only applicable for actions related to Cost
                 Category. The default values for MatchOptions are EQUALS  and
                 CASE_SENSITIVE .

                 (string)

          CostCategories -> (structure)
              The filter that's based on CostCategory values.

              Key -> (string)
                 The unique name of the Cost Category.

              Values -> (list)
                 The specific value of the Cost Category.

                 (string)

              MatchOptions -> (list)
                 The  match  options  that you can use to filter your results.
                 MatchOptions is only applicable for actions related  to  cost
                 category.  The  default values for MatchOptions is EQUALS and
                 CASE_SENSITIVE .

                 (string)

       JSON Syntax:

          {
            "Or": [
              {
                "Or": [
                  { ... recursive ... }
                  ...
                ],
                "And": [
                  { ... recursive ... }
                  ...
                ],
                "Not": { ... recursive ... },
                "Dimensions": {
                  "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                },
                "Tags": {
                  "Key": "string",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                },
                "CostCategories": {
                  "Key": "string",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                }
              }
              ...
            ],
            "And": [
              {
                "Or": [
                  { ... recursive ... }
                  ...
                ],
                "And": [
                  { ... recursive ... }
                  ...
                ],
                "Not": { ... recursive ... },
                "Dimensions": {
                  "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                },
                "Tags": {
                  "Key": "string",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                },
                "CostCategories": {
                  "Key": "string",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                }
              }
              ...
            ],
            "Not": {
              "Or": [
                { ... recursive ... }
                ...
              ],
              "And": [
                { ... recursive ... }
                ...
              ],
              "Not": { ... recursive ... },
              "Dimensions": {
                "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE",
                "Values": ["string", ...],
                "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
              },
              "Tags": {
                "Key": "string",
                "Values": ["string", ...],
                "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
              },
              "CostCategories": {
                "Key": "string",
                "Values": ["string", ...],
                "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
              }
            },
            "Dimensions": {
              "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE",
              "Values": ["string", ...],
              "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
            },
            "Tags": {
              "Key": "string",
              "Values": ["string", ...],
              "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
            },
            "CostCategories": {
              "Key": "string",
              "Values": ["string", ...],
              "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
            }
          }

       --sort-by (structure)
          The value by which you want to sort the data.

          The following values are supported for Key :

          o UtilizationPercentage

          o TotalCommitment

          o UsedCommitment

          o UnusedCommitment

          o NetSavings

          Supported values for SortOrder are ASCENDING or DESCENDING .

          Key -> (string)
              The key that's used to sort the data.

          SortOrder -> (string)
              The order that's used to sort the data.

       Shorthand Syntax:

          Key=string,SortOrder=string

       JSON Syntax:

          {
            "Key": "string",
            "SortOrder": "ASCENDING"|"DESCENDING"
          }

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       SavingsPlansUtilizationsByTime -> (list)
          The amount of cost/commitment you  used  your  Savings  Plans.  This
          allows you to specify date ranges.

          (structure)
              The amount of Savings Plans utilization, in hours.

              TimePeriod -> (structure)
                 The time period of the request.

                 Start -> (string)
                     The  beginning  of  the  time  period.  The start date is
                     inclusive. For example, if start is 2017-01-01  ,  Amazon
                     Web  Services  retrieves  cost and usage data starting at
                     2017-01-01 up to the end date. The  start  date  must  be
                     equal  to  or  no  later than the current date to avoid a
                     validation error.

                 End -> (string)
                     The end of the time period. The end  date  is  exclusive.
                     For  example,  if end is 2017-05-01 , Amazon Web Services
                     retrieves cost and usage data from the start date up  to,
                     but not including, 2017-05-01 .

              Utilization -> (structure)
                 A ratio of your effectiveness of using existing Savings Plans
                 to apply to workloads that are Savings Plans eligible.

                 TotalCommitment -> (string)
                     The total amount of Savings Plans commitment that's  been
                     purchased in an account (or set of accounts).

                 UsedCommitment -> (string)
                     The amount of your Savings Plans commitment that was con-
                     sumed from Savings Plans eligible  usage  in  a  specific
                     period.

                 UnusedCommitment -> (string)
                     The  amount  of your Savings Plans commitment that wasn't
                     consumed from Savings Plans eligible usage in a  specific
                     period.

                 UtilizationPercentage -> (string)
                     The  amount of UsedCommitment divided by the TotalCommit-
                     ment for your Savings Plans.

              Savings -> (structure)
                 The amount saved by using  existing  Savings  Plans.  Savings
                 returns  both  net  savings from Savings Plans as well as the
                 onDemandCostEquivalent of the Savings Plans when  considering
                 the utilization rate.

                 NetSavings -> (string)
                     The savings amount that you're accumulating for the usage
                     that's covered by a Savings Plans, when compared  to  the
                     On-Demand equivalent of the same usage.

                 OnDemandCostEquivalent -> (string)
                     How  much the amount that the usage would have cost if it
                     was accrued at the On-Demand rate.

              AmortizedCommitment -> (structure)
                 The total amortized commitment  for  a  Savings  Plans.  This
                 includes  the  sum of the upfront and recurring Savings Plans
                 fees.

                 AmortizedRecurringCommitment -> (string)
                     The amortized amount of  your  Savings  Plans  commitment
                     that was purchased with either a Partial or a NoUpfront .

                 AmortizedUpfrontCommitment -> (string)
                     The amortized amount of  your  Savings  Plans  commitment
                     that was purchased with an Upfront or PartialUpfront Sav-
                     ings Plans.

                 TotalAmortizedCommitment -> (string)
                     The total amortized amount of your Savings Plans  commit-
                     ment, regardless of your Savings Plans purchase method.

       Total -> (structure)
          The  total  amount  of  cost/commitment  that  you used your Savings
          Plans, regardless of date ranges.

          Utilization -> (structure)
              A ratio of your effectiveness of using existing Savings Plans to
              apply to workloads that are Savings Plans eligible.

              TotalCommitment -> (string)
                 The total amount of Savings Plans commitment that's been pur-
                 chased in an account (or set of accounts).

              UsedCommitment -> (string)
                 The amount of your Savings Plans commitment that was consumed
                 from Savings Plans eligible usage in a specific period.

              UnusedCommitment -> (string)
                 The  amount of your Savings Plans commitment that wasn't con-
                 sumed from Savings Plans eligible usage in a specific period.

              UtilizationPercentage -> (string)
                 The  amount  of UsedCommitment divided by the TotalCommitment
                 for your Savings Plans.

          Savings -> (structure)
              The amount  saved  by  using  existing  Savings  Plans.  Savings
              returns  both  net  savings  from  Savings Plans, as well as the
              onDemandCostEquivalent of the Savings Plans when considering the
              utilization rate.

              NetSavings -> (string)
                 The  savings  amount  that  you're accumulating for the usage
                 that's covered by a  Savings  Plans,  when  compared  to  the
                 On-Demand equivalent of the same usage.

              OnDemandCostEquivalent -> (string)
                 How  much the amount that the usage would have cost if it was
                 accrued at the On-Demand rate.

          AmortizedCommitment -> (structure)
              The  total  amortized  commitment  for  a  Savings  Plans.  This
              includes  the  sum  of  the  upfront and recurring Savings Plans
              fees.

              AmortizedRecurringCommitment -> (string)
                 The amortized amount of your Savings  Plans  commitment  that
                 was purchased with either a Partial or a NoUpfront .

              AmortizedUpfrontCommitment -> (string)
                 The  amortized  amount  of your Savings Plans commitment that
                 was purchased  with  an  Upfront  or  PartialUpfront  Savings
                 Plans.

              TotalAmortizedCommitment -> (string)
                 The  total amortized amount of your Savings Plans commitment,
                 regardless of your Savings Plans purchase method.



                                               GET-SAVINGS-PLANS-UTILIZATION()
