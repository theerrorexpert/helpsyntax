START-APP-ASSESSMENT()                                  START-APP-ASSESSMENT()



NAME
       start-app-assessment -

DESCRIPTION
       Creates a new application assessment for an application.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            start-app-assessment
          --app-arn <value>
          --app-version <value>
          --assessment-name <value>
          [--client-token <value>]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --app-arn (string)
          The  Amazon  Resource  Name (ARN) of the application. The format for
          this ARN is: arn:partition :dcps:region :account :app/app-id  .  For
          more information about ARNs, see Amazon Resource Names (ARNs) in the
          AWS General Reference .

       --app-version (string)
          The version of the application.

       --assessment-name (string)
          The name for the assessment.

       --client-token (string)
          Used for an idempotency token. A client token is a unique, case-sen-
          sitive string of up to 64 ASCII characters. You should not reuse the
          same client token for other API requests.

       --tags (map)
          The tags assigned to the resource. A tag is a label that you  assign
          to an Amazon Web Services resource. Each tag consists of a key/value
          pair.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       assessment -> (structure)
          The assessment created.

          appArn -> (string)
              The Amazon Resource Name (ARN) of the  application.  The  format
              for this ARN is: arn:partition :dcps:region :account :app/app-id
              . For more information about ARNs,  see  Amazon  Resource  Names
              (ARNs) in the AWS General Reference .

          appVersion -> (string)
              The version of the application.

          assessmentArn -> (string)
              The Amazon Resource Name (ARN) of the assessment. The format for
              this ARN is: arn:partition  :dcps:region  :account  :app-assess-
              ment/app-id  .  For  more  information  about  ARNs,  see Amazon
              Resource Names (ARNs) in the AWS General Reference .

          assessmentName -> (string)
              The name of the assessment.

          assessmentStatus -> (string)
              The current status of the assessment for the resiliency  policy.

          compliance -> (map)
              The application compliance against the resiliency policy.

              key -> (string)

              value -> (structure)
                 Defines  the  compliance  against the resiliency policy for a
                 disruption.

                 achievableRpoInSecs -> (integer)
                     The Recovery Point Objective (RPO) that is achievable, in
                     seconds.

                 achievableRtoInSecs -> (integer)
                     The  Recovery Time Objective (RTO) that is achievable, in
                     seconds

                 complianceStatus -> (string)
                     The current status of compliance for the resiliency  pol-
                     icy.

                 currentRpoInSecs -> (integer)
                     The current RPO, in seconds.

                 currentRtoInSecs -> (integer)
                     The current RTO, in seconds.

                 message -> (string)
                     The disruption compliance message.

                 rpoDescription -> (string)
                     The RPO description.

                 rpoReferenceId -> (string)
                     The RPO reference identifier.

                 rtoDescription -> (string)
                     The RTO description.

                 rtoReferenceId -> (string)
                     The RTO reference identifier.

          complianceStatus -> (string)
              The  current status of the compliance for the resiliency policy.

          cost -> (structure)
              The cost for the application.

              amount -> (double)
                 The cost amount.

              currency -> (string)
                 The cost currency, for example USD .

              frequency -> (string)
                 The cost frequency.

          endTime -> (timestamp)
              The end time for the action.

          invoker -> (string)
              The entity that invoked the assessment.

          message -> (string)
              Error or warning message from the assessment execution

          policy -> (structure)
              The resiliency policy.

              creationTime -> (timestamp)
                 The timestamp for when the resiliency policy was created.

              dataLocationConstraint -> (string)
                 Specifies a high-level geographical location  constraint  for
                 where your resilience policy data can be stored.

              estimatedCostTier -> (string)
                 Specifies the estimated cost tier of the resiliency policy.

              policy -> (map)
                 The resiliency policy.

                 key -> (string)

                 value -> (structure)
                     Defines a failure policy.

                     rpoInSecs -> (integer)
                        The Recovery Point Objective (RPO), in seconds.

                     rtoInSecs -> (integer)
                        The Recovery Time Objective (RTO), in seconds.

              policyArn -> (string)
                 The  Amazon Resource Name (ARN) of the resiliency policy. The
                 format for this ARN is: arn:partition  :dcps:region  :account
                 :resiliency-policy/policy-id  .  For  more  information about
                 ARNs, see Amazon Resource Names (ARNs)  in  the  AWS  General
                 Reference .

              policyDescription -> (string)
                 The description for the policy.

              policyName -> (string)
                 The name of the policy

              tags -> (map)
                 The  tags assigned to the resource. A tag is a label that you
                 assign to an Amazon Web Services resource. Each tag  consists
                 of a key/value pair.

                 key -> (string)

                 value -> (string)

              tier -> (string)
                 The tier for this resiliency policy, ranging from the highest
                 severity (MissionCritical ) to lowest (NonCritical ).

          resiliencyScore -> (structure)
              The current resiliency score for the application.

              disruptionScore -> (map)
                 The disruption score for a valid key.

                 key -> (string)

                 value -> (double)

              score -> (double)
                 The outage score for a valid key.

          startTime -> (timestamp)
              The starting time for the action.

          tags -> (map)
              The tags assigned to the resource. A tag is  a  label  that  you
              assign  to an Amazon Web Services resource. Each tag consists of
              a key/value pair.

              key -> (string)

              value -> (string)



                                                        START-APP-ASSESSMENT()
