DESCRIBE-SCALING-ACTIVITIES()                    DESCRIBE-SCALING-ACTIVITIES()



NAME
       describe-scaling-activities -

DESCRIPTION
       Provides  descriptive  information  about the scaling activities in the
       specified namespace from the previous six weeks.

       You can filter the results using ResourceId and ScalableDimension .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       describe-scaling-activities is  a  paginated  operation.  Multiple  API
       calls  may  be  issued  in  order  to  retrieve  the entire data set of
       results. You can disable  pagination  by  providing  the  --no-paginate
       argument.  When using --output text and the --query argument on a pagi-
       nated response, the --query argument must extract data from the results
       of the following query expressions: ScalingActivities

SYNOPSIS
            describe-scaling-activities
          --service-namespace <value>
          [--resource-id <value>]
          [--scalable-dimension <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --service-namespace (string)
          The  namespace  of the Amazon Web Services service that provides the
          resource. For a resource provided by your own  application  or  ser-
          vice, use custom-resource instead.

          Possible values:

          o ecs

          o elasticmapreduce

          o ec2

          o appstream

          o dynamodb

          o rds

          o sagemaker

          o custom-resource

          o comprehend

          o lambda

          o cassandra

          o kafka

          o elasticache

          o neptune

       --resource-id (string)
          The identifier of the resource associated with the scaling activity.
          This string consists of the resource type and unique identifier.

          o ECS service - The resource type is service and the unique  identi-
            fier   is  the  cluster  name  and  service  name.  Example:  ser-
            vice/default/sample-webapp .

          o Spot Fleet - The  resource  type  is  spot-fleet-request  and  the
            unique   identifier   is  the  Spot  Fleet  request  ID.  Example:
            spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE .

          o EMR cluster - The resource type is instancegroup  and  the  unique
            identifier  is  the  cluster  ID  and  instance group ID. Example:
            instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0 .

          o AppStream 2.0 fleet - The resource type is fleet  and  the  unique
            identifier is the fleet name. Example: fleet/sample-fleet .

          o DynamoDB table - The resource type is table and the unique identi-
            fier is the table name. Example: table/my-table .

          o DynamoDB global secondary index - The resource type is  index  and
            the  unique  identifier  is  the index name. Example: table/my-ta-
            ble/index/my-table-index .

          o Aurora DB cluster - The resource type is cluster  and  the  unique
            identifier is the cluster name. Example: cluster:my-db-cluster .

          o SageMaker  endpoint variant - The resource type is variant and the
            unique   identifier   is   the   resource   ID.   Example:    end-
            point/my-end-point/variant/KMeansClustering .

          o Custom  resources  are  not  supported  with a resource type. This
            parameter must specify the  OutputValue  from  the  CloudFormation
            template stack used to access the resources. The unique identifier
            is defined by the service provider. More information is  available
            in our GitHub repository .

          o Amazon  Comprehend document classification endpoint - The resource
            type and unique identifier are specified using the  endpoint  ARN.
            Example:  arn:aws:comprehend:us-west-2:123456789012:document-clas-
            sifier-endpoint/EXAMPLE .

          o Amazon Comprehend entity recognizer endpoint - The  resource  type
            and  unique identifier are specified using the endpoint ARN. Exam-
            ple:       arn:aws:comprehend:us-west-2:123456789012:entity-recog-
            nizer-endpoint/EXAMPLE .

          o Lambda provisioned concurrency - The resource type is function and
            the unique identifier is the function name with a function version
            or  alias  name  suffix  that  is  not  $LATEST  .  Example: func-
            tion:my-function:prod or function:my-function:1 .

          o Amazon Keyspaces table - The resource type is table and the unique
            identifier  is  the  table  name. Example: keyspace/mykeyspace/ta-
            ble/mytable .

          o Amazon MSK cluster - The resource type and unique  identifier  are
            specified      using      the      cluster      ARN.      Example:
            arn:aws:kafka:us-east-1:123456789012:cluster/demo-clus-
            ter-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5 .

          o Amazon ElastiCache replication group - The resource type is repli-
            cation-group and the unique identifier is  the  replication  group
            name. Example: replication-group/mycluster .

          o Neptune  cluster  -  The  resource  type is cluster and the unique
            identifier is the cluster name. Example: cluster:mycluster .

       --scalable-dimension (string)
          The scalable dimension. This string consists of the  service  names-
          pace, resource type, and scaling property. If you specify a scalable
          dimension, you must also specify a resource ID.

          o ecs:service:DesiredCount - The desired task count of an  ECS  ser-
            vice.

          o elasticmapreduce:instancegroup:InstanceCount  - The instance count
            of an EMR Instance Group.

          o ec2:spot-fleet-request:TargetCapacity - The target capacity  of  a
            Spot Fleet.

          o appstream:fleet:DesiredCapacity  - The desired capacity of an App-
            Stream 2.0 fleet.

          o dynamodb:table:ReadCapacityUnits - The provisioned  read  capacity
            for a DynamoDB table.

          o dynamodb:table:WriteCapacityUnits - The provisioned write capacity
            for a DynamoDB table.

          o dynamodb:index:ReadCapacityUnits - The provisioned  read  capacity
            for a DynamoDB global secondary index.

          o dynamodb:index:WriteCapacityUnits - The provisioned write capacity
            for a DynamoDB global secondary index.

          o rds:cluster:ReadReplicaCount - The count of Aurora Replicas in  an
            Aurora  DB  cluster. Available for Aurora MySQL-compatible edition
            and Aurora PostgreSQL-compatible edition.

          o sagemaker:variant:DesiredInstanceCount  -  The   number   of   EC2
            instances for an SageMaker model endpoint variant.

          o custom-resource:ResourceType:Property - The scalable dimension for
            a custom resource provided by your own application or service.

          o comprehend:document-classifier-endpoint:DesiredInferenceUnits    -
            The  number  of  inference units for an Amazon Comprehend document
            classification endpoint.

          o comprehend:entity-recognizer-endpoint:DesiredInferenceUnits -  The
            number  of  inference units for an Amazon Comprehend entity recog-
            nizer endpoint.

          o lambda:function:ProvisionedConcurrency - The  provisioned  concur-
            rency for a Lambda function.

          o cassandra:table:ReadCapacityUnits  - The provisioned read capacity
            for an Amazon Keyspaces table.

          o cassandra:table:WriteCapacityUnits - The provisioned write  capac-
            ity for an Amazon Keyspaces table.

          o kafka:broker-storage:VolumeSize  - The provisioned volume size (in
            GiB) for brokers in an Amazon MSK cluster.

          o elasticache:replication-group:NodeGroups  -  The  number  of  node
            groups for an Amazon ElastiCache replication group.

          o elasticache:replication-group:Replicas  -  The  number of replicas
            per node group for an Amazon ElastiCache replication group.

          o neptune:cluster:ReadReplicaCount - The count of read  replicas  in
            an Amazon Neptune DB cluster.

          Possible values:

          o ecs:service:DesiredCount

          o ec2:spot-fleet-request:TargetCapacity

          o elasticmapreduce:instancegroup:InstanceCount

          o appstream:fleet:DesiredCapacity

          o dynamodb:table:ReadCapacityUnits

          o dynamodb:table:WriteCapacityUnits

          o dynamodb:index:ReadCapacityUnits

          o dynamodb:index:WriteCapacityUnits

          o rds:cluster:ReadReplicaCount

          o sagemaker:variant:DesiredInstanceCount

          o custom-resource:ResourceType:Property

          o comprehend:document-classifier-endpoint:DesiredInferenceUnits

          o comprehend:entity-recognizer-endpoint:DesiredInferenceUnits

          o lambda:function:ProvisionedConcurrency

          o cassandra:table:ReadCapacityUnits

          o cassandra:table:WriteCapacityUnits

          o kafka:broker-storage:VolumeSize

          o elasticache:replication-group:NodeGroups

          o elasticache:replication-group:Replicas

          o neptune:cluster:ReadReplicaCount

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size  results  in  more  calls to the AWS service,
          retrieving fewer items in each call. This can help prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To describe scaling activities for a scalable target

       The following describe-scaling-activities example displays details  for
       th the scaling activities for an Amazon ECS service called web-app that
       is running in the default cluster.

          aws application-autoscaling describe-scaling-activities \
              --service-namespace ecs \
              --scalable-dimension ecs:service:DesiredCount \
              --resource-id service/default/web-app

       Output:

          {
              "ScalingActivities": [
                  {
                      "ScalableDimension": "ecs:service:DesiredCount",
                      "Description": "Setting desired count to 1.",
                      "ResourceId": "service/default/web-app",
                      "ActivityId": "e6c5f7d1-dbbb-4a3f-89b2-51f33e766399",
                      "StartTime": 1462575838.171,
                      "ServiceNamespace": "ecs",
                      "EndTime": 1462575872.111,
                      "Cause": "monitor alarm web-app-cpu-lt-25 in state ALARM triggered policy web-app-cpu-lt-25",
                      "StatusMessage": "Successfully set desired count to 1. Change successfully fulfilled by ecs.",
                      "StatusCode": "Successful"
                  }
              ]
          }

       Example 2:  To  describe  scaling  activities  triggered  by  scheduled
       actions

       The following describe-scaling-activities example describes the scaling
       activities for the specified DynamoDB table. The output  shows  scaling
       activities triggered by two different scheduled actions:

          aws application-autoscaling describe-scaling-activities \
              --service-namespace dynamodb \
              --scalable-dimension dynamodb:table:WriteCapacityUnits \
              --resource-id table/my-table

       Output:

          {
              "ScalingActivities": [
                  {
                      "ScalableDimension": "dynamodb:table:WriteCapacityUnits",
                      "Description": "Setting write capacity units to 10.",
                      "ResourceId": "table/my-table",
                      "ActivityId": "4d1308c0-bbcf-4514-a673-b0220ae38547",
                      "StartTime": 1561574415.086,
                      "ServiceNamespace": "dynamodb",
                      "EndTime": 1561574449.51,
                      "Cause": "maximum capacity was set to 10",
                      "StatusMessage": "Successfully set write capacity units to 10. Change successfully fulfilled by dynamodb.",
                      "StatusCode": "Successful"
                  },
                  {
                      "ScalableDimension": "dynamodb:table:WriteCapacityUnits",
                      "Description": "Setting min capacity to 5 and max capacity to 10",
                      "ResourceId": "table/my-table",
                      "ActivityId": "f2b7847b-721d-4e01-8ef0-0c8d3bacc1c7",
                      "StartTime": 1561574414.644,
                      "ServiceNamespace": "dynamodb",
                      "Cause": "scheduled action name my-second-scheduled-action was triggered",
                      "StatusMessage": "Successfully set min capacity to 5 and max capacity to 10",
                      "StatusCode": "Successful"
                  },
                  {
                      "ScalableDimension": "dynamodb:table:WriteCapacityUnits",
                      "Description": "Setting write capacity units to 15.",
                      "ResourceId": "table/my-table",
                      "ActivityId": "d8ea4de6-9eaa-499f-b466-2cc5e681ba8b",
                      "StartTime": 1561574108.904,
                      "ServiceNamespace": "dynamodb",
                      "EndTime": 1561574140.255,
                      "Cause": "minimum capacity was set to 15",
                      "StatusMessage": "Successfully set write capacity units to 15. Change successfully fulfilled by dynamodb.",
                      "StatusCode": "Successful"
                  },
                  {
                      "ScalableDimension": "dynamodb:table:WriteCapacityUnits",
                      "Description": "Setting min capacity to 15 and max capacity to 20",
                      "ResourceId": "table/my-table",
                      "ActivityId": "3250fd06-6940-4e8e-bb1f-d494db7554d2",
                      "StartTime": 1561574108.512,
                      "ServiceNamespace": "dynamodb",
                      "Cause": "scheduled action name my-first-scheduled-action was triggered",
                      "StatusMessage": "Successfully set min capacity to 15 and max capacity to 20",
                      "StatusCode": "Successful"
                  }
              ]
          }

       For  more  information,  see  Scheduled Scaling in the Application Auto
       Scaling User Guide.

OUTPUT
       ScalingActivities -> (list)
          A list of scaling activity objects.

          (structure)
              Represents a scaling activity.

              ActivityId -> (string)
                 The unique identifier of the scaling activity.

              ServiceNamespace -> (string)
                 The namespace of the Amazon Web Services  service  that  pro-
                 vides the resource, or a custom-resource .

              ResourceId -> (string)
                 The  identifier  of  the resource associated with the scaling
                 activity. This string  consists  of  the  resource  type  and
                 unique identifier.

                 o ECS  service  - The resource type is service and the unique
                   identifier is the cluster name and service  name.  Example:
                   service/default/sample-webapp .

                 o Spot  Fleet  -  The resource type is spot-fleet-request and
                   the unique identifier is the Spot Fleet request  ID.  Exam-
                   ple:
                   spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE
                   .

                 o EMR  cluster  -  The resource type is instancegroup and the
                   unique identifier is the cluster ID and instance group  ID.
                   Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0 .

                 o AppStream  2.0  fleet  - The resource type is fleet and the
                   unique identifier is the fleet  name.  Example:  fleet/sam-
                   ple-fleet .

                 o DynamoDB  table - The resource type is table and the unique
                   identifier is the table name. Example: table/my-table .

                 o DynamoDB global secondary index  -  The  resource  type  is
                   index and the unique identifier is the index name. Example:
                   table/my-table/index/my-table-index .

                 o Aurora DB cluster - The resource type is  cluster  and  the
                   unique  identifier  is  the  cluster  name.  Example: clus-
                   ter:my-db-cluster .

                 o SageMaker endpoint variant - The resource type  is  variant
                   and the unique identifier is the resource ID. Example: end-
                   point/my-end-point/variant/KMeansClustering .

                 o Custom resources are not supported with  a  resource  type.
                   This parameter must specify the OutputValue from the Cloud-
                   Formation template stack used to access the resources.  The
                   unique  identifier is defined by the service provider. More
                   information is available in our GitHub repository .

                 o Amazon Comprehend document classification  endpoint  -  The
                   resource type and unique identifier are specified using the
                   endpoint        ARN.        Example:        arn:aws:compre-
                   hend:us-west-2:123456789012:document-classifier-end-
                   point/EXAMPLE .

                 o Amazon Comprehend entity recognizer endpoint - The resource
                   type and unique identifier are specified using the endpoint
                   ARN.                Example:                arn:aws:compre-
                   hend:us-west-2:123456789012:entity-recognizer-end-
                   point/EXAMPLE .

                 o Lambda provisioned concurrency - The resource type is func-
                   tion  and the unique identifier is the function name with a
                   function version or alias name suffix that is not $LATEST .
                   Example:   function:my-function:prod  or  function:my-func-
                   tion:1 .

                 o Amazon Keyspaces table - The resource type is table and the
                   unique    identifier    is   the   table   name.   Example:
                   keyspace/mykeyspace/table/mytable .

                 o Amazon MSK cluster - The resource type and  unique  identi-
                   fier   are   specified  using  the  cluster  ARN.  Example:
                   arn:aws:kafka:us-east-1:123456789012:cluster/demo-clus-
                   ter-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5 .

                 o Amazon ElastiCache replication group - The resource type is
                   replication-group and the unique identifier is the replica-
                   tion group name. Example: replication-group/mycluster .

                 o Neptune  cluster  -  The  resource  type is cluster and the
                   unique identifier  is  the  cluster  name.  Example:  clus-
                   ter:mycluster .

              ScalableDimension -> (string)
                 The  scalable  dimension. This string consists of the service
                 namespace, resource type, and scaling property.

                 o ecs:service:DesiredCount - The desired task count of an ECS
                   service.

                 o elasticmapreduce:instancegroup:InstanceCount - The instance
                   count of an EMR Instance Group.

                 o ec2:spot-fleet-request:TargetCapacity - The target capacity
                   of a Spot Fleet.

                 o appstream:fleet:DesiredCapacity  -  The desired capacity of
                   an AppStream 2.0 fleet.

                 o dynamodb:table:ReadCapacityUnits  -  The  provisioned  read
                   capacity for a DynamoDB table.

                 o dynamodb:table:WriteCapacityUnits  -  The provisioned write
                   capacity for a DynamoDB table.

                 o dynamodb:index:ReadCapacityUnits  -  The  provisioned  read
                   capacity for a DynamoDB global secondary index.

                 o dynamodb:index:WriteCapacityUnits  -  The provisioned write
                   capacity for a DynamoDB global secondary index.

                 o rds:cluster:ReadReplicaCount - The count of Aurora Replicas
                   in an Aurora DB cluster. Available for Aurora MySQL-compat-
                   ible edition and Aurora PostgreSQL-compatible edition.

                 o sagemaker:variant:DesiredInstanceCount - The number of  EC2
                   instances for an SageMaker model endpoint variant.

                 o custom-resource:ResourceType:Property - The scalable dimen-
                   sion for a custom resource provided by your own application
                   or service.

                 o comprehend:document-classifier-endpoint:DesiredInferenceU-
                   nits - The number of inference units for an Amazon  Compre-
                   hend document classification endpoint.

                 o comprehend:entity-recognizer-endpoint:DesiredInferenceUnits
                   - The number of inference units for  an  Amazon  Comprehend
                   entity recognizer endpoint.

                 o lambda:function:ProvisionedConcurrency  -  The  provisioned
                   concurrency for a Lambda function.

                 o cassandra:table:ReadCapacityUnits -  The  provisioned  read
                   capacity for an Amazon Keyspaces table.

                 o cassandra:table:WriteCapacityUnits  - The provisioned write
                   capacity for an Amazon Keyspaces table.

                 o kafka:broker-storage:VolumeSize -  The  provisioned  volume
                   size (in GiB) for brokers in an Amazon MSK cluster.

                 o elasticache:replication-group:NodeGroups  -  The  number of
                   node groups for an Amazon ElastiCache replication group.

                 o elasticache:replication-group:Replicas  -  The  number   of
                   replicas  per node group for an Amazon ElastiCache replica-
                   tion group.

                 o neptune:cluster:ReadReplicaCount - The count of read repli-
                   cas in an Amazon Neptune DB cluster.

              Description -> (string)
                 A  simple  description  of  what  action the scaling activity
                 intends to accomplish.

              Cause -> (string)
                 A simple description of what caused the scaling  activity  to
                 happen.

              StartTime -> (timestamp)
                 The Unix timestamp for when the scaling activity began.

              EndTime -> (timestamp)
                 The Unix timestamp for when the scaling activity ended.

              StatusCode -> (string)
                 Indicates the status of the scaling activity.

              StatusMessage -> (string)
                 A  simple  message  about  the  current status of the scaling
                 activity.

              Details -> (string)
                 The details about the scaling activity.

       NextToken -> (string)
          The token required to get the next set of  results.  This  value  is
          null if there are no more results to return.



                                                 DESCRIBE-SCALING-ACTIVITIES()
