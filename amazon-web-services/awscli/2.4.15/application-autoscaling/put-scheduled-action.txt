PUT-SCHEDULED-ACTION()                                  PUT-SCHEDULED-ACTION()



NAME
       put-scheduled-action -

DESCRIPTION
       Creates  or  updates a scheduled action for an Application Auto Scaling
       scalable target.

       Each scalable target is identified by a service namespace, resource ID,
       and scalable dimension. A scheduled action applies to the scalable tar-
       get identified by those three attributes. You cannot create a scheduled
       action until you have registered the resource as a scalable target.

       When  start and end times are specified with a recurring schedule using
       a cron expression or rates, they  form  the  boundaries  for  when  the
       recurring action starts and stops.

       To  update  a scheduled action, specify the parameters that you want to
       change. If you don't specify start and end times, the  old  values  are
       deleted.

       For  more  information,  see  Scheduled scaling in the Application Auto
       Scaling User Guide .

       NOTE:
          If a scalable target is deregistered,  the  scalable  target  is  no
          longer  available  to  run  scheduled actions. Any scheduled actions
          that were specified for the scalable target are deleted.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            put-scheduled-action
          --service-namespace <value>
          [--schedule <value>]
          [--timezone <value>]
          --scheduled-action-name <value>
          --resource-id <value>
          --scalable-dimension <value>
          [--start-time <value>]
          [--end-time <value>]
          [--scalable-target-action <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --service-namespace (string)
          The namespace of the Amazon Web Services service that  provides  the
          resource.  For  a  resource provided by your own application or ser-
          vice, use custom-resource instead.

          Possible values:

          o ecs

          o elasticmapreduce

          o ec2

          o appstream

          o dynamodb

          o rds

          o sagemaker

          o custom-resource

          o comprehend

          o lambda

          o cassandra

          o kafka

          o elasticache

          o neptune

       --schedule (string)
          The schedule for this action. The following formats are supported:

          o At expressions - "at(*yyyy* -*mm* -*dd* T*hh* :*mm* :*ss* ) "

          o Rate expressions - "rate(*value*  *unit* ) "

          o Cron expressions - "cron(*fields* ) "

          At expressions are useful for one-time schedules.  Cron  expressions
          are  useful  for scheduled actions that run periodically at a speci-
          fied date and time, and rate expressions are  useful  for  scheduled
          actions that run at a regular interval.

          At  and  cron  expressions  use  Universal Coordinated Time (UTC) by
          default.

          The cron format consists of six fields separated  by  white  spaces:
          [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year].

          For rate expressions, value is a positive integer and unit is minute
          | minutes | hour | hours | day | days .

          For more information and examples, see Example scheduled actions for
          Application  Auto Scaling in the Application Auto Scaling User Guide
          .

       --timezone (string)
          Specifies the time zone used when  setting  a  scheduled  action  by
          using  an at or cron expression. If a time zone is not provided, UTC
          is used by default.

          Valid values are the canonical names of the  IANA  time  zones  sup-
          ported by Joda-Time (such as Etc/GMT+9 or Pacific/Tahiti ). For more
          information, see https://www.joda.org/joda-time/timezones.html .

       --scheduled-action-name (string)
          The name of the scheduled action. This name must be unique among all
          other scheduled actions on the specified scalable target.

       --resource-id (string)
          The identifier of the resource associated with the scheduled action.
          This string consists of the resource type and unique identifier.

          o ECS service - The resource type is service and the unique  identi-
            fier   is  the  cluster  name  and  service  name.  Example:  ser-
            vice/default/sample-webapp .

          o Spot Fleet - The  resource  type  is  spot-fleet-request  and  the
            unique   identifier   is  the  Spot  Fleet  request  ID.  Example:
            spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE .

          o EMR cluster - The resource type is instancegroup  and  the  unique
            identifier  is  the  cluster  ID  and  instance group ID. Example:
            instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0 .

          o AppStream 2.0 fleet - The resource type is fleet  and  the  unique
            identifier is the fleet name. Example: fleet/sample-fleet .

          o DynamoDB table - The resource type is table and the unique identi-
            fier is the table name. Example: table/my-table .

          o DynamoDB global secondary index - The resource type is  index  and
            the  unique  identifier  is  the index name. Example: table/my-ta-
            ble/index/my-table-index .

          o Aurora DB cluster - The resource type is cluster  and  the  unique
            identifier is the cluster name. Example: cluster:my-db-cluster .

          o SageMaker  endpoint variant - The resource type is variant and the
            unique   identifier   is   the   resource   ID.   Example:    end-
            point/my-end-point/variant/KMeansClustering .

          o Custom  resources  are  not  supported  with a resource type. This
            parameter must specify the  OutputValue  from  the  CloudFormation
            template stack used to access the resources. The unique identifier
            is defined by the service provider. More information is  available
            in our GitHub repository .

          o Amazon  Comprehend document classification endpoint - The resource
            type and unique identifier are specified using the  endpoint  ARN.
            Example:  arn:aws:comprehend:us-west-2:123456789012:document-clas-
            sifier-endpoint/EXAMPLE .

          o Amazon Comprehend entity recognizer endpoint - The  resource  type
            and  unique identifier are specified using the endpoint ARN. Exam-
            ple:       arn:aws:comprehend:us-west-2:123456789012:entity-recog-
            nizer-endpoint/EXAMPLE .

          o Lambda provisioned concurrency - The resource type is function and
            the unique identifier is the function name with a function version
            or  alias  name  suffix  that  is  not  $LATEST  .  Example: func-
            tion:my-function:prod or function:my-function:1 .

          o Amazon Keyspaces table - The resource type is table and the unique
            identifier  is  the  table  name. Example: keyspace/mykeyspace/ta-
            ble/mytable .

          o Amazon MSK cluster - The resource type and unique  identifier  are
            specified      using      the      cluster      ARN.      Example:
            arn:aws:kafka:us-east-1:123456789012:cluster/demo-clus-
            ter-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5 .

          o Amazon ElastiCache replication group - The resource type is repli-
            cation-group and the unique identifier is  the  replication  group
            name. Example: replication-group/mycluster .

          o Neptune  cluster  -  The  resource  type is cluster and the unique
            identifier is the cluster name. Example: cluster:mycluster .

       --scalable-dimension (string)
          The scalable dimension. This string consists of the  service  names-
          pace, resource type, and scaling property.

          o ecs:service:DesiredCount  -  The desired task count of an ECS ser-
            vice.

          o elasticmapreduce:instancegroup:InstanceCount - The instance  count
            of an EMR Instance Group.

          o ec2:spot-fleet-request:TargetCapacity  -  The target capacity of a
            Spot Fleet.

          o appstream:fleet:DesiredCapacity - The desired capacity of an  App-
            Stream 2.0 fleet.

          o dynamodb:table:ReadCapacityUnits  -  The provisioned read capacity
            for a DynamoDB table.

          o dynamodb:table:WriteCapacityUnits - The provisioned write capacity
            for a DynamoDB table.

          o dynamodb:index:ReadCapacityUnits  -  The provisioned read capacity
            for a DynamoDB global secondary index.

          o dynamodb:index:WriteCapacityUnits - The provisioned write capacity
            for a DynamoDB global secondary index.

          o rds:cluster:ReadReplicaCount  - The count of Aurora Replicas in an
            Aurora DB cluster. Available for Aurora  MySQL-compatible  edition
            and Aurora PostgreSQL-compatible edition.

          o sagemaker:variant:DesiredInstanceCount   -   The   number  of  EC2
            instances for an SageMaker model endpoint variant.

          o custom-resource:ResourceType:Property - The scalable dimension for
            a custom resource provided by your own application or service.

          o comprehend:document-classifier-endpoint:DesiredInferenceUnits    -
            The number of inference units for an  Amazon  Comprehend  document
            classification endpoint.

          o comprehend:entity-recognizer-endpoint:DesiredInferenceUnits  - The
            number of inference units for an Amazon Comprehend  entity  recog-
            nizer endpoint.

          o lambda:function:ProvisionedConcurrency  -  The provisioned concur-
            rency for a Lambda function.

          o cassandra:table:ReadCapacityUnits - The provisioned read  capacity
            for an Amazon Keyspaces table.

          o cassandra:table:WriteCapacityUnits  - The provisioned write capac-
            ity for an Amazon Keyspaces table.

          o kafka:broker-storage:VolumeSize - The provisioned volume size  (in
            GiB) for brokers in an Amazon MSK cluster.

          o elasticache:replication-group:NodeGroups  -  The  number  of  node
            groups for an Amazon ElastiCache replication group.

          o elasticache:replication-group:Replicas - The  number  of  replicas
            per node group for an Amazon ElastiCache replication group.

          o neptune:cluster:ReadReplicaCount  -  The count of read replicas in
            an Amazon Neptune DB cluster.

          Possible values:

          o ecs:service:DesiredCount

          o ec2:spot-fleet-request:TargetCapacity

          o elasticmapreduce:instancegroup:InstanceCount

          o appstream:fleet:DesiredCapacity

          o dynamodb:table:ReadCapacityUnits

          o dynamodb:table:WriteCapacityUnits

          o dynamodb:index:ReadCapacityUnits

          o dynamodb:index:WriteCapacityUnits

          o rds:cluster:ReadReplicaCount

          o sagemaker:variant:DesiredInstanceCount

          o custom-resource:ResourceType:Property

          o comprehend:document-classifier-endpoint:DesiredInferenceUnits

          o comprehend:entity-recognizer-endpoint:DesiredInferenceUnits

          o lambda:function:ProvisionedConcurrency

          o cassandra:table:ReadCapacityUnits

          o cassandra:table:WriteCapacityUnits

          o kafka:broker-storage:VolumeSize

          o elasticache:replication-group:NodeGroups

          o elasticache:replication-group:Replicas

          o neptune:cluster:ReadReplicaCount

       --start-time (timestamp)
          The date and time for this scheduled action to start, in UTC.

       --end-time (timestamp)
          The date and time for the recurring schedule to end, in UTC.

       --scalable-target-action (structure)
          The new minimum and maximum capacity. You can  set  both  values  or
          just  one.  At  the scheduled time, if the current capacity is below
          the minimum capacity, Application Auto Scaling  scales  out  to  the
          minimum  capacity.  If  the  current  capacity  is above the maximum
          capacity, Application Auto Scaling scales in to the  maximum  capac-
          ity.

          MinCapacity -> (integer)
              The minimum capacity.

              For  certain  resources,  the  minimum  value allowed is 0. This
              includes Lambda provisioned concurrency, Spot  Fleet,  ECS  ser-
              vices,  Aurora  DB clusters, EMR clusters, and custom resources.
              For all other resources, the minimum value allowed is 1.

          MaxCapacity -> (integer)
              The maximum capacity.

              Although you can specify a large  maximum  capacity,  note  that
              service quotas may impose lower limits. Each service has its own
              default quotas for the maximum capacity of the resource. If  you
              want to specify a higher limit, you can request an increase. For
              more information, consult the documentation  for  that  service.
              For  information  about the default quotas for each service, see
              Service Endpoints and Quotas in the Amazon Web Services  General
              Reference .

       Shorthand Syntax:

          MinCapacity=integer,MaxCapacity=integer

       JSON Syntax:

          {
            "MinCapacity": integer,
            "MaxCapacity": integer
          }

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To add a scheduled action to a DynamoDB table

       This  example  adds a scheduled action to a DynamoDB table called Test-
       Table to scale out on a recurring schedule. On the  specified  schedule
       (every  day at 12:15pm UTC), if the current capacity is below the value
       specified for MinCapacity, Application Auto Scaling scales out  to  the
       value specified by MinCapacity.

       Command:

          aws application-autoscaling put-scheduled-action --service-namespace dynamodb --scheduled-action-name my-recurring-action --schedule "cron(15 12 * * ? *)" --resource-id table/TestTable --scalable-dimension dynamodb:table:WriteCapacityUnits --scalable-target-action MinCapacity=6

       For  more  information,  see  Scheduled Scaling in the Application Auto
       Scaling User Guide.

OUTPUT
       None



                                                        PUT-SCHEDULED-ACTION()
