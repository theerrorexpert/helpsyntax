DESCRIBE-SCALING-POLICIES()                        DESCRIBE-SCALING-POLICIES()



NAME
       describe-scaling-policies -

DESCRIPTION
       Describes  the Application Auto Scaling scaling policies for the speci-
       fied service namespace.

       You can filter the results using ResourceId , ScalableDimension  ,  and
       PolicyNames .

       For  more  information,  see  Target tracking scaling policies and Step
       scaling policies in the Application Auto Scaling User Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       describe-scaling-policies is a paginated operation. Multiple API  calls
       may  be issued in order to retrieve the entire data set of results. You
       can disable pagination by providing the --no-paginate  argument.   When
       using  --output  text and the --query argument on a paginated response,
       the --query argument must extract data from the results of the  follow-
       ing query expressions: ScalingPolicies

SYNOPSIS
            describe-scaling-policies
          [--policy-names <value>]
          --service-namespace <value>
          [--resource-id <value>]
          [--scalable-dimension <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --policy-names (list)
          The names of the scaling policies to describe.

          (string)

       Syntax:

          "string" "string" ...

       --service-namespace (string)
          The  namespace  of the Amazon Web Services service that provides the
          resource. For a resource provided by your own  application  or  ser-
          vice, use custom-resource instead.

          Possible values:

          o ecs

          o elasticmapreduce

          o ec2

          o appstream

          o dynamodb

          o rds

          o sagemaker

          o custom-resource

          o comprehend

          o lambda

          o cassandra

          o kafka

          o elasticache

          o neptune

       --resource-id (string)
          The  identifier  of the resource associated with the scaling policy.
          This string consists of the resource type and unique identifier.

          o ECS service - The resource type is service and the unique  identi-
            fier   is  the  cluster  name  and  service  name.  Example:  ser-
            vice/default/sample-webapp .

          o Spot Fleet - The  resource  type  is  spot-fleet-request  and  the
            unique   identifier   is  the  Spot  Fleet  request  ID.  Example:
            spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE .

          o EMR cluster - The resource type is instancegroup  and  the  unique
            identifier  is  the  cluster  ID  and  instance group ID. Example:
            instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0 .

          o AppStream 2.0 fleet - The resource type is fleet  and  the  unique
            identifier is the fleet name. Example: fleet/sample-fleet .

          o DynamoDB table - The resource type is table and the unique identi-
            fier is the table name. Example: table/my-table .

          o DynamoDB global secondary index - The resource type is  index  and
            the  unique  identifier  is  the index name. Example: table/my-ta-
            ble/index/my-table-index .

          o Aurora DB cluster - The resource type is cluster  and  the  unique
            identifier is the cluster name. Example: cluster:my-db-cluster .

          o SageMaker  endpoint variant - The resource type is variant and the
            unique   identifier   is   the   resource   ID.   Example:    end-
            point/my-end-point/variant/KMeansClustering .

          o Custom  resources  are  not  supported  with a resource type. This
            parameter must specify the  OutputValue  from  the  CloudFormation
            template stack used to access the resources. The unique identifier
            is defined by the service provider. More information is  available
            in our GitHub repository .

          o Amazon  Comprehend document classification endpoint - The resource
            type and unique identifier are specified using the  endpoint  ARN.
            Example:  arn:aws:comprehend:us-west-2:123456789012:document-clas-
            sifier-endpoint/EXAMPLE .

          o Amazon Comprehend entity recognizer endpoint - The  resource  type
            and  unique identifier are specified using the endpoint ARN. Exam-
            ple:       arn:aws:comprehend:us-west-2:123456789012:entity-recog-
            nizer-endpoint/EXAMPLE .

          o Lambda provisioned concurrency - The resource type is function and
            the unique identifier is the function name with a function version
            or  alias  name  suffix  that  is  not  $LATEST  .  Example: func-
            tion:my-function:prod or function:my-function:1 .

          o Amazon Keyspaces table - The resource type is table and the unique
            identifier  is  the  table  name. Example: keyspace/mykeyspace/ta-
            ble/mytable .

          o Amazon MSK cluster - The resource type and unique  identifier  are
            specified      using      the      cluster      ARN.      Example:
            arn:aws:kafka:us-east-1:123456789012:cluster/demo-clus-
            ter-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5 .

          o Amazon ElastiCache replication group - The resource type is repli-
            cation-group and the unique identifier is  the  replication  group
            name. Example: replication-group/mycluster .

          o Neptune  cluster  -  The  resource  type is cluster and the unique
            identifier is the cluster name. Example: cluster:mycluster .

       --scalable-dimension (string)
          The scalable dimension. This string consists of the  service  names-
          pace, resource type, and scaling property. If you specify a scalable
          dimension, you must also specify a resource ID.

          o ecs:service:DesiredCount - The desired task count of an  ECS  ser-
            vice.

          o elasticmapreduce:instancegroup:InstanceCount  - The instance count
            of an EMR Instance Group.

          o ec2:spot-fleet-request:TargetCapacity - The target capacity  of  a
            Spot Fleet.

          o appstream:fleet:DesiredCapacity  - The desired capacity of an App-
            Stream 2.0 fleet.

          o dynamodb:table:ReadCapacityUnits - The provisioned  read  capacity
            for a DynamoDB table.

          o dynamodb:table:WriteCapacityUnits - The provisioned write capacity
            for a DynamoDB table.

          o dynamodb:index:ReadCapacityUnits - The provisioned  read  capacity
            for a DynamoDB global secondary index.

          o dynamodb:index:WriteCapacityUnits - The provisioned write capacity
            for a DynamoDB global secondary index.

          o rds:cluster:ReadReplicaCount - The count of Aurora Replicas in  an
            Aurora  DB  cluster. Available for Aurora MySQL-compatible edition
            and Aurora PostgreSQL-compatible edition.

          o sagemaker:variant:DesiredInstanceCount  -  The   number   of   EC2
            instances for an SageMaker model endpoint variant.

          o custom-resource:ResourceType:Property - The scalable dimension for
            a custom resource provided by your own application or service.

          o comprehend:document-classifier-endpoint:DesiredInferenceUnits    -
            The  number  of  inference units for an Amazon Comprehend document
            classification endpoint.

          o comprehend:entity-recognizer-endpoint:DesiredInferenceUnits -  The
            number  of  inference units for an Amazon Comprehend entity recog-
            nizer endpoint.

          o lambda:function:ProvisionedConcurrency - The  provisioned  concur-
            rency for a Lambda function.

          o cassandra:table:ReadCapacityUnits  - The provisioned read capacity
            for an Amazon Keyspaces table.

          o cassandra:table:WriteCapacityUnits - The provisioned write  capac-
            ity for an Amazon Keyspaces table.

          o kafka:broker-storage:VolumeSize  - The provisioned volume size (in
            GiB) for brokers in an Amazon MSK cluster.

          o elasticache:replication-group:NodeGroups  -  The  number  of  node
            groups for an Amazon ElastiCache replication group.

          o elasticache:replication-group:Replicas  -  The  number of replicas
            per node group for an Amazon ElastiCache replication group.

          o neptune:cluster:ReadReplicaCount - The count of read  replicas  in
            an Amazon Neptune DB cluster.

          Possible values:

          o ecs:service:DesiredCount

          o ec2:spot-fleet-request:TargetCapacity

          o elasticmapreduce:instancegroup:InstanceCount

          o appstream:fleet:DesiredCapacity

          o dynamodb:table:ReadCapacityUnits

          o dynamodb:table:WriteCapacityUnits

          o dynamodb:index:ReadCapacityUnits

          o dynamodb:index:WriteCapacityUnits

          o rds:cluster:ReadReplicaCount

          o sagemaker:variant:DesiredInstanceCount

          o custom-resource:ResourceType:Property

          o comprehend:document-classifier-endpoint:DesiredInferenceUnits

          o comprehend:entity-recognizer-endpoint:DesiredInferenceUnits

          o lambda:function:ProvisionedConcurrency

          o cassandra:table:ReadCapacityUnits

          o cassandra:table:WriteCapacityUnits

          o kafka:broker-storage:VolumeSize

          o elasticache:replication-group:NodeGroups

          o elasticache:replication-group:Replicas

          o neptune:cluster:ReadReplicaCount

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size  results  in  more  calls to the AWS service,
          retrieving fewer items in each call. This can help prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To describe scaling policies

       This example command describes the scaling policies for the ecs service
       namespace.

       Command:

          aws application-autoscaling describe-scaling-policies --service-namespace ecs

       Output:

          {
              "ScalingPolicies": [
                  {
                      "PolicyName": "web-app-cpu-gt-75",
                      "ScalableDimension": "ecs:service:DesiredCount",
                      "ResourceId": "service/default/web-app",
                      "CreationTime": 1462561899.23,
                      "StepScalingPolicyConfiguration": {
                          "Cooldown": 60,
                          "StepAdjustments": [
                              {
                                  "ScalingAdjustment": 200,
                                  "MetricIntervalLowerBound": 0.0
                              }
                          ],
                          "AdjustmentType": "PercentChangeInCapacity"
                      },
                      "PolicyARN": "arn:aws:autoscaling:us-west-2:012345678910:scalingPolicy:6d8972f3-efc8-437c-92d1-6270f29a66e7:resource/ecs/service/default/web-app:policyName/web-app-cpu-gt-75",
                      "PolicyType": "StepScaling",
                      "Alarms": [
                          {
                              "AlarmName": "web-app-cpu-gt-75",
                              "AlarmARN": "arn:aws:cloudwatch:us-west-2:012345678910:alarm:web-app-cpu-gt-75"
                          }
                      ],
                      "ServiceNamespace": "ecs"
                  },
                  {
                      "PolicyName": "web-app-cpu-lt-25",
                      "ScalableDimension": "ecs:service:DesiredCount",
                      "ResourceId": "service/default/web-app",
                      "CreationTime": 1462562575.099,
                      "StepScalingPolicyConfiguration": {
                          "Cooldown": 1,
                          "StepAdjustments": [
                              {
                                  "ScalingAdjustment": -50,
                                  "MetricIntervalUpperBound": 0.0
                              }
                          ],
                          "AdjustmentType": "PercentChangeInCapacity"
                      },
                      "PolicyARN": "arn:aws:autoscaling:us-west-2:012345678910:scalingPolicy:6d8972f3-efc8-437c-92d1-6270f29a66e7:resource/ecs/service/default/web-app:policyName/web-app-cpu-lt-25",
                      "PolicyType": "StepScaling",
                      "Alarms": [
                          {
                              "AlarmName": "web-app-cpu-lt-25",
                              "AlarmARN": "arn:aws:cloudwatch:us-west-2:012345678910:alarm:web-app-cpu-lt-25"
                          }
                      ],
                      "ServiceNamespace": "ecs"
                  }
              ]
          }

OUTPUT
       ScalingPolicies -> (list)
          Information about the scaling policies.

          (structure)
              Represents  a  scaling policy to use with Application Auto Scal-
              ing.

              For more information about configuring scaling  policies  for  a
              specific  service,  see  Getting  started  with Application Auto
              Scaling in the Application Auto Scaling User Guide .

              PolicyARN -> (string)
                 The Amazon Resource Name (ARN) of the scaling policy.

              PolicyName -> (string)
                 The name of the scaling policy.

              ServiceNamespace -> (string)
                 The namespace of the Amazon Web Services  service  that  pro-
                 vides the resource, or a custom-resource .

              ResourceId -> (string)
                 The  identifier  of  the resource associated with the scaling
                 policy. This string consists of the resource type and  unique
                 identifier.

                 o ECS  service  - The resource type is service and the unique
                   identifier is the cluster name and service  name.  Example:
                   service/default/sample-webapp .

                 o Spot  Fleet  -  The resource type is spot-fleet-request and
                   the unique identifier is the Spot Fleet request  ID.  Exam-
                   ple:
                   spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE
                   .

                 o EMR  cluster  -  The resource type is instancegroup and the
                   unique identifier is the cluster ID and instance group  ID.
                   Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0 .

                 o AppStream  2.0  fleet  - The resource type is fleet and the
                   unique identifier is the fleet  name.  Example:  fleet/sam-
                   ple-fleet .

                 o DynamoDB  table - The resource type is table and the unique
                   identifier is the table name. Example: table/my-table .

                 o DynamoDB global secondary index  -  The  resource  type  is
                   index and the unique identifier is the index name. Example:
                   table/my-table/index/my-table-index .

                 o Aurora DB cluster - The resource type is  cluster  and  the
                   unique  identifier  is  the  cluster  name.  Example: clus-
                   ter:my-db-cluster .

                 o SageMaker endpoint variant - The resource type  is  variant
                   and the unique identifier is the resource ID. Example: end-
                   point/my-end-point/variant/KMeansClustering .

                 o Custom resources are not supported with  a  resource  type.
                   This parameter must specify the OutputValue from the Cloud-
                   Formation template stack used to access the resources.  The
                   unique  identifier is defined by the service provider. More
                   information is available in our GitHub repository .

                 o Amazon Comprehend document classification  endpoint  -  The
                   resource type and unique identifier are specified using the
                   endpoint        ARN.        Example:        arn:aws:compre-
                   hend:us-west-2:123456789012:document-classifier-end-
                   point/EXAMPLE .

                 o Amazon Comprehend entity recognizer endpoint - The resource
                   type and unique identifier are specified using the endpoint
                   ARN.                Example:                arn:aws:compre-
                   hend:us-west-2:123456789012:entity-recognizer-end-
                   point/EXAMPLE .

                 o Lambda provisioned concurrency - The resource type is func-
                   tion  and the unique identifier is the function name with a
                   function version or alias name suffix that is not $LATEST .
                   Example:   function:my-function:prod  or  function:my-func-
                   tion:1 .

                 o Amazon Keyspaces table - The resource type is table and the
                   unique    identifier    is   the   table   name.   Example:
                   keyspace/mykeyspace/table/mytable .

                 o Amazon MSK cluster - The resource type and  unique  identi-
                   fier   are   specified  using  the  cluster  ARN.  Example:
                   arn:aws:kafka:us-east-1:123456789012:cluster/demo-clus-
                   ter-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5 .

                 o Amazon ElastiCache replication group - The resource type is
                   replication-group and the unique identifier is the replica-
                   tion group name. Example: replication-group/mycluster .

                 o Neptune  cluster  -  The  resource  type is cluster and the
                   unique identifier  is  the  cluster  name.  Example:  clus-
                   ter:mycluster .

              ScalableDimension -> (string)
                 The  scalable  dimension. This string consists of the service
                 namespace, resource type, and scaling property.

                 o ecs:service:DesiredCount - The desired task count of an ECS
                   service.

                 o elasticmapreduce:instancegroup:InstanceCount - The instance
                   count of an EMR Instance Group.

                 o ec2:spot-fleet-request:TargetCapacity - The target capacity
                   of a Spot Fleet.

                 o appstream:fleet:DesiredCapacity  -  The desired capacity of
                   an AppStream 2.0 fleet.

                 o dynamodb:table:ReadCapacityUnits  -  The  provisioned  read
                   capacity for a DynamoDB table.

                 o dynamodb:table:WriteCapacityUnits  -  The provisioned write
                   capacity for a DynamoDB table.

                 o dynamodb:index:ReadCapacityUnits  -  The  provisioned  read
                   capacity for a DynamoDB global secondary index.

                 o dynamodb:index:WriteCapacityUnits  -  The provisioned write
                   capacity for a DynamoDB global secondary index.

                 o rds:cluster:ReadReplicaCount - The count of Aurora Replicas
                   in an Aurora DB cluster. Available for Aurora MySQL-compat-
                   ible edition and Aurora PostgreSQL-compatible edition.

                 o sagemaker:variant:DesiredInstanceCount - The number of  EC2
                   instances for an SageMaker model endpoint variant.

                 o custom-resource:ResourceType:Property - The scalable dimen-
                   sion for a custom resource provided by your own application
                   or service.

                 o comprehend:document-classifier-endpoint:DesiredInferenceU-
                   nits - The number of inference units for an Amazon  Compre-
                   hend document classification endpoint.

                 o comprehend:entity-recognizer-endpoint:DesiredInferenceUnits
                   - The number of inference units for  an  Amazon  Comprehend
                   entity recognizer endpoint.

                 o lambda:function:ProvisionedConcurrency  -  The  provisioned
                   concurrency for a Lambda function.

                 o cassandra:table:ReadCapacityUnits -  The  provisioned  read
                   capacity for an Amazon Keyspaces table.

                 o cassandra:table:WriteCapacityUnits  - The provisioned write
                   capacity for an Amazon Keyspaces table.

                 o kafka:broker-storage:VolumeSize -  The  provisioned  volume
                   size (in GiB) for brokers in an Amazon MSK cluster.

                 o elasticache:replication-group:NodeGroups  -  The  number of
                   node groups for an Amazon ElastiCache replication group.

                 o elasticache:replication-group:Replicas  -  The  number   of
                   replicas  per node group for an Amazon ElastiCache replica-
                   tion group.

                 o neptune:cluster:ReadReplicaCount - The count of read repli-
                   cas in an Amazon Neptune DB cluster.

              PolicyType -> (string)
                 The scaling policy type.

              StepScalingPolicyConfiguration -> (structure)
                 A step scaling policy.

                 AdjustmentType -> (string)
                     Specifies   how   the   ScalingAdjustment   value   in  a
                     StepAdjustment is interpreted (for example,  an  absolute
                     number or a percentage). The valid values are ChangeInCa-
                     pacity , ExactCapacity , and PercentChangeInCapacity .
                        AdjustmentType is required if you  are  adding  a  new
                        step scaling policy configuration.

                 StepAdjustments -> (list)
                     A  set  of  adjustments that enable you to scale based on
                     the size of the alarm breach.

                     At least one step  adjustment  is  required  if  you  are
                     adding a new step scaling policy configuration.

                     (structure)
                        Represents     a     step     adjustment     for     a
                        StepScalingPolicyConfiguration . Describes an  adjust-
                        ment  based on the difference between the value of the
                        aggregated CloudWatch metric and the breach  threshold
                        that you've defined for the alarm.

                        For  the  following examples, suppose that you have an
                        alarm with a breach threshold of 50:

                        o To trigger the adjustment when the metric is greater
                          than  or  equal  to  50  and less than 60, specify a
                          lower bound of 0 and an upper bound of 10.

                        o To trigger the adjustment when the metric is greater
                          than  40  and  less  than  or equal to 50, specify a
                          lower bound of -10 and an upper bound of 0.

                        There are a few rules for  the  step  adjustments  for
                        your step policy:

                        o The ranges of your step adjustments can't overlap or
                          have a gap.

                        o At most one step adjustment can have  a  null  lower
                          bound.  If  one step adjustment has a negative lower
                          bound, then there must be a step adjustment  with  a
                          null lower bound.

                        o At  most  one  step adjustment can have a null upper
                          bound. If one step adjustment has a  positive  upper
                          bound,  then  there must be a step adjustment with a
                          null upper bound.

                        o The upper and lower bound can't be null in the  same
                          step adjustment.

                        MetricIntervalLowerBound -> (double)
                            The  lower  bound  for  the difference between the
                            alarm threshold and the CloudWatch metric. If  the
                            metric  value  is  above the breach threshold, the
                            lower bound  is  inclusive  (the  metric  must  be
                            greater  than  or  equal to the threshold plus the
                            lower bound). Otherwise, it is exclusive (the met-
                            ric  must  be  greater than the threshold plus the
                            lower bound).  A  null  value  indicates  negative
                            infinity.

                        MetricIntervalUpperBound -> (double)
                            The  upper  bound  for  the difference between the
                            alarm threshold and the CloudWatch metric. If  the
                            metric  value  is  above the breach threshold, the
                            upper bound is exclusive (the metric must be  less
                            than  the  threshold plus the upper bound). Other-
                            wise, it is inclusive (the  metric  must  be  less
                            than  or  equal  to  the  threshold plus the upper
                            bound). A null value indicates positive  infinity.

                            The  upper  bound  must  be greater than the lower
                            bound.

                        ScalingAdjustment -> (integer)
                            The amount by which to scale, based on the  speci-
                            fied adjustment type. A positive value adds to the
                            current capacity while a negative  number  removes
                            from the current capacity. For exact capacity, you
                            must specify a positive value.

                 MinAdjustmentMagnitude -> (integer)
                     The minimum value to scale by when the adjustment type is
                     PercentChangeInCapacity  .  For example, suppose that you
                     create a step scaling policy to scale out an  Amazon  ECS
                     service by 25 percent and you specify a MinAdjustmentMag-
                     nitude of 2. If the service has 4 tasks and  the  scaling
                     policy  is  performed,  25  percent  of  4 is 1. However,
                     because you  specified  a  MinAdjustmentMagnitude  of  2,
                     Application  Auto  Scaling  scales  out  the service by 2
                     tasks.

                 Cooldown -> (integer)
                     The amount of time, in seconds, to wait  for  a  previous
                     scaling activity to take effect.

                     With scale-out policies, the intention is to continuously
                     (but not excessively) scale out. After  Application  Auto
                     Scaling successfully scales out using a step scaling pol-
                     icy, it starts to calculate the cooldown time. The  scal-
                     ing  policy  won't  increase  the  desired capacity again
                     unless either a larger scale  out  is  triggered  or  the
                     cooldown  period  ends.  While  the cooldown period is in
                     effect, capacity added by the initiating scale-out activ-
                     ity is calculated as part of the desired capacity for the
                     next scale-out activity. For example, when an alarm trig-
                     gers a step scaling policy to increase the capacity by 2,
                     the  scaling  activity  completes  successfully,  and   a
                     cooldown  period starts. If the alarm triggers again dur-
                     ing the cooldown period but at  a  more  aggressive  step
                     adjustment of 3, the previous increase of 2 is considered
                     part of the current capacity. Therefore, only 1 is  added
                     to the capacity.

                     With scale-in policies, the intention is to scale in con-
                     servatively to protect your applications availability, so
                     scale-in activities are blocked until the cooldown period
                     has  expired.  However,  if  another  alarm  triggers   a
                     scale-out  activity  during  the  cooldown period after a
                     scale-in activity, Application Auto  Scaling  scales  out
                     the target immediately. In this case, the cooldown period
                     for the scale-in activity stops and doesn't complete.

                     Application Auto Scaling provides a default value of  600
                     for  Amazon  ElastiCache replication groups and a default
                     value of 300 for the following scalable targets:

                     o AppStream 2.0 fleets

                     o Aurora DB clusters

                     o ECS services

                     o EMR clusters

                     o Neptune clusters

                     o SageMaker endpoint variants

                     o Spot Fleets

                     o Custom resources

                     For all other scalable targets, the default value is 0:

                     o Amazon Comprehend document  classification  and  entity
                       recognizer endpoints

                     o DynamoDB tables and global secondary indexes

                     o Amazon Keyspaces tables

                     o Lambda provisioned concurrency

                     o Amazon MSK broker storage

                 MetricAggregationType -> (string)
                     The  aggregation  type  for the CloudWatch metrics. Valid
                     values are Minimum , Maximum  ,  and  Average  .  If  the
                     aggregation type is null, the value is treated as Average
                     .

              TargetTrackingScalingPolicyConfiguration -> (structure)
                 A target tracking scaling policy.

                 TargetValue -> (double)
                     The target value for the metric. Although  this  property
                     accepts  numbers  of  type Double, it won't accept values
                     that are either too small or too large. Values must be in
                     the  range  of -2^360 to 2^360. The value must be a valid
                     number based on the choice of metric. For example, if the
                     metric  is  CPU  utilization,  then the target value is a
                     percent value that represents how much of the CPU can  be
                     used before scaling out.

                 PredefinedMetricSpecification -> (structure)
                     A  predefined metric. You can specify either a predefined
                     metric or a customized metric.

                     PredefinedMetricType -> (string)
                        The metric type. The  ALBRequestCountPerTarget  metric
                        type  applies only to Spot Fleet requests and ECS ser-
                        vices.

                     ResourceLabel -> (string)
                        Identifies the resource  associated  with  the  metric
                        type.  You  can't  specify a resource label unless the
                        metric type is ALBRequestCountPerTarget and there is a
                        target group attached to the Spot Fleet request or ECS
                        service.

                        You create the resource label by appending  the  final
                        portion of the load balancer ARN and the final portion
                        of the target group ARN into a single value, separated
                        by  a  forward  slash  (/). The format of the resource
                        label is:
                            app/my-alb/778d41231b141a0f/target-
                            group/my-alb-target-group/943f017f100becff .

                        Where:

                        o app/<load-balancer-name>/<load-balancer-id>  is  the
                          final portion of the load balancer ARN

                        o targetgroup/<target-group-name>/<target-group-id> is
                          the final portion of the target group ARN.

                        To  find the ARN for an Application Load Balancer, use
                        the DescribeLoadBalancers API operation. To  find  the
                        ARN for the target group, use the DescribeTargetGroups
                        API operation.

                 CustomizedMetricSpecification -> (structure)
                     A customized metric. You can specify either a  predefined
                     metric or a customized metric.

                     MetricName -> (string)
                        The name of the metric.

                     Namespace -> (string)
                        The namespace of the metric.

                     Dimensions -> (list)
                        The dimensions of the metric.

                        Conditional:  If you published your metric with dimen-
                        sions, you must specify the same  dimensions  in  your
                        scaling policy.

                        (structure)
                            Describes  the  dimension names and values associ-
                            ated with a metric.

                            Name -> (string)
                               The name of the dimension.

                            Value -> (string)
                               The value of the dimension.

                     Statistic -> (string)
                        The statistic of the metric.

                     Unit -> (string)
                        The unit of the metric.

                 ScaleOutCooldown -> (integer)
                     The amount of time, in seconds, to wait  for  a  previous
                     scale-out activity to take effect.

                     With  the scale-out cooldown period , the intention is to
                     continuously  (but  not  excessively)  scale  out.  After
                     Application  Auto Scaling successfully scales out using a
                     target tracking scaling policy, it  starts  to  calculate
                     the  cooldown time. The scaling policy won't increase the
                     desired capacity again unless either a larger  scale  out
                     is  triggered  or  the  cooldown  period  ends. While the
                     cooldown period is in effect, the capacity added  by  the
                     initiating  scale-out  activity  is calculated as part of
                     the desired capacity for the next scale-out activity.

                     Application Auto Scaling provides a default value of  600
                     for  Amazon  ElastiCache replication groups and a default
                     value of 300 for the following scalable targets:

                     o AppStream 2.0 fleets

                     o Aurora DB clusters

                     o ECS services

                     o EMR clusters

                     o Neptune clusters

                     o SageMaker endpoint variants

                     o Spot Fleets

                     o Custom resources

                     For all other scalable targets, the default value is 0:

                     o Amazon Comprehend document  classification  and  entity
                       recognizer endpoints

                     o DynamoDB tables and global secondary indexes

                     o Amazon Keyspaces tables

                     o Lambda provisioned concurrency

                     o Amazon MSK broker storage

                 ScaleInCooldown -> (integer)
                     The amount of time, in seconds, after a scale-in activity
                     completes before another scale-in activity can start.

                     With the scale-in cooldown period , the intention  is  to
                     scale  in  conservatively  to  protect  your applications
                     availability, so scale-in activities  are  blocked  until
                     the  cooldown  period  has  expired.  However, if another
                     alarm triggers a scale-out activity during  the  scale-in
                     cooldown  period, Application Auto Scaling scales out the
                     target immediately. In this case, the  scale-in  cooldown
                     period stops and doesn't complete.

                     Application  Auto Scaling provides a default value of 600
                     for Amazon ElastiCache replication groups and  a  default
                     value of 300 for the following scalable targets:

                     o AppStream 2.0 fleets

                     o Aurora DB clusters

                     o ECS services

                     o EMR clusters

                     o Neptune clusters

                     o SageMaker endpoint variants

                     o Spot Fleets

                     o Custom resources

                     For all other scalable targets, the default value is 0:

                     o Amazon  Comprehend  document  classification and entity
                       recognizer endpoints

                     o DynamoDB tables and global secondary indexes

                     o Amazon Keyspaces tables

                     o Lambda provisioned concurrency

                     o Amazon MSK broker storage

                 DisableScaleIn -> (boolean)
                     Indicates whether scale in by the target tracking scaling
                     policy  is  disabled.  If the value is true , scale in is
                     disabled and the target  tracking  scaling  policy  won't
                     remove  capacity  from  the  scalable  target. Otherwise,
                     scale in is enabled and the target tracking scaling  pol-
                     icy  can  remove  capacity  from the scalable target. The
                     default value is false .

              Alarms -> (list)
                 The CloudWatch alarms associated with the scaling policy.

                 (structure)
                     Represents a CloudWatch alarm associated with  a  scaling
                     policy.

                     AlarmName -> (string)
                        The name of the alarm.

                     AlarmARN -> (string)
                        The Amazon Resource Name (ARN) of the alarm.

              CreationTime -> (timestamp)
                 The Unix timestamp for when the scaling policy was created.

       NextToken -> (string)
          The  token  required  to  get the next set of results. This value is
          null if there are no more results to return.



                                                   DESCRIBE-SCALING-POLICIES()
