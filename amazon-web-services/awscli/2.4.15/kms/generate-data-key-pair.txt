GENERATE-DATA-KEY-PAIR()                              GENERATE-DATA-KEY-PAIR()



NAME
       generate-data-key-pair -

DESCRIPTION
       Generates  a  unique  asymmetric data key pair. The GenerateDataKeyPair
       operation returns a plaintext public key, a plaintext private key,  and
       a copy of the private key that is encrypted under the symmetric KMS key
       you specify. You can use the data key pair to perform asymmetric  cryp-
       tography and implement digital signatures outside of KMS.

       You  can use the public key that GenerateDataKeyPair returns to encrypt
       data or verify a signature outside of KMS. Then,  store  the  encrypted
       private key with the data. When you are ready to decrypt data or sign a
       message, you can use the  Decrypt operation to  decrypt  the  encrypted
       private key.

       To  generate  a  data key pair, you must specify a symmetric KMS key to
       encrypt the private key in a data key pair. You cannot use an  asymmet-
       ric  KMS  key  or  a KMS key in a custom key store. To get the type and
       origin of your KMS key, use the  DescribeKey operation.

       Use the KeyPairSpec parameter to choose an RSA or Elliptic Curve  (ECC)
       data  key pair. KMS recommends that your use ECC key pairs for signing,
       and use RSA key pairs for either encryption or signing, but  not  both.
       However,  KMS  cannot  enforce  any restrictions on the use of data key
       pairs outside of KMS.

       If you are using the data key pair to encrypt data, or for  any  opera-
       tion where you don't immediately need a private key, consider using the
       GenerateDataKeyPairWithoutPlaintext operation. GenerateDataKeyPairWith-
       outPlaintext  returns  a  plaintext public key and an encrypted private
       key, but omits the plaintext private key that you need only to  decrypt
       ciphertext  or sign a message. Later, when you need to decrypt the data
       or sign a message, use the  Decrypt operation to decrypt the  encrypted
       private key in the data key pair.
          GenerateDataKeyPair returns a unique data key pair for each request.
          The bytes in the keys are not related to the caller or the  KMS  key
          that  is  used  to  encrypt  the  private  key.  The public key is a
          DER-encoded X.509 SubjectPublicKeyInfo, as specified in RFC  5280  .
          The  private key is a DER-encoded PKCS8 PrivateKeyInfo, as specified
          in RFC 5958 .

       You can use the optional encryption context to add additional  security
       to  the encryption operation. If you specify an EncryptionContext , you
       must specify the same encryption context (a case-sensitive exact match)
       when  decrypting  the  encrypted  data  key.  Otherwise, the request to
       decrypt fails with an InvalidCiphertextException .  For  more  informa-
       tion,  see  Encryption  Context in the Key Management Service Developer
       Guide .

       The KMS key that you use for this operation must be in a compatible key
       state.  For  details,  see Key state: Effect on your KMS key in the Key
       Management Service Developer Guide .
          Cross-account use : Yes. To perform this operation with a KMS key in
          a  different  Amazon  Web  Services  account, specify the key ARN or
          alias ARN in the value of the KeyId parameter.

          Required permissions : kms:GenerateDataKeyPair (key policy)

          Related operations:

       o Decrypt

       o Encrypt

       o GenerateDataKey

       o GenerateDataKeyPairWithoutPlaintext

       o GenerateDataKeyWithoutPlaintext

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            generate-data-key-pair
          [--encryption-context <value>]
          --key-id <value>
          --key-pair-spec <value>
          [--grant-tokens <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --encryption-context (map)
          Specifies the encryption context that will be used  when  encrypting
          the private key in the data key pair.

          An  encryption context is a collection of non-secret key-value pairs
          that represents additional  authenticated  data.  When  you  use  an
          encryption  context  to  encrypt data, you must specify the same (an
          exact case-sensitive match) encryption context to decrypt the  data.
          An  encryption  context is optional when encrypting with a symmetric
          KMS key, but it is highly recommended.

          For more information, see Encryption Context in the  Key  Management
          Service Developer Guide .

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --key-id (string)
          Specifies the symmetric KMS key that encrypts the private key in the
          data key pair. You cannot specify an asymmetric KMS key or a KMS key
          in  a  custom key store. To get the type and origin of your KMS key,
          use the  DescribeKey operation.

          To specify a KMS key, use its key ID, key ARN, alias name, or  alias
          ARN.  When using an alias name, prefix it with "alias/" . To specify
          a KMS key in a different Amazon Web Services account, you  must  use
          the key ARN or alias ARN.

          For example:

          o Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab

          o Key                                                           ARN:
            arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab

          o Alias name: alias/ExampleAlias

          o Alias ARN: arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias

          To  get  the  key  ID  and  key  ARN for a KMS key, use  ListKeys or
          DescribeKey . To get the alias name and alias ARN, use   ListAliases
          .

       --key-pair-spec (string)
          Determines the type of data key pair that is generated.

          The  KMS  rule  that restricts the use of asymmetric RSA KMS keys to
          encrypt and decrypt or to sign and verify (but not  both),  and  the
          rule  that  permits you to use ECC KMS keys only to sign and verify,
          are not effective on data key pairs, which are used outside of  KMS.

          Possible values:

          o RSA_2048

          o RSA_3072

          o RSA_4096

          o ECC_NIST_P256

          o ECC_NIST_P384

          o ECC_NIST_P521

          o ECC_SECG_P256K1

       --grant-tokens (list)
          A list of grant tokens.

          Use  a grant token when your permission to call this operation comes
          from a new grant that has not yet achieved  eventual  consistency  .
          For more information, see Grant token and Using a grant token in the
          Key Management Service Developer Guide .

          (string)

       Syntax:

          "string" "string" ...

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       PrivateKeyCiphertextBlob -> (blob)
          The encrypted copy of the private key. When you use the HTTP API  or
          the Amazon Web Services CLI, the value is Base64-encoded. Otherwise,
          it is not Base64-encoded.

       PrivateKeyPlaintext -> (blob)
          The plaintext copy of the private key. When you use the HTTP API  or
          the Amazon Web Services CLI, the value is Base64-encoded. Otherwise,
          it is not Base64-encoded.

       PublicKey -> (blob)
          The public key (in plaintext).

       KeyId -> (string)
          The Amazon Resource Name (key ARN ) of the KMS  key  that  encrypted
          the private key.

       KeyPairSpec -> (string)
          The type of data key pair that was generated.



                                                      GENERATE-DATA-KEY-PAIR()
