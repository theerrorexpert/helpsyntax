GET-PARAMETERS-FOR-IMPORT()                        GET-PARAMETERS-FOR-IMPORT()



NAME
       get-parameters-for-import -

DESCRIPTION
       Returns  the  items  you  need to import key material into a symmetric,
       customer managed KMS key. For  more  information  about  importing  key
       material  into  KMS,  see  Importing Key Material in the Key Management
       Service Developer Guide .

       This operation returns a public key and an import token. Use the public
       key  to  encrypt  the symmetric key material. Store the import token to
       send with a subsequent  ImportKeyMaterial request.

       You must specify the key ID of the symmetric KMS  key  into  which  you
       will  import key material. This KMS key's Origin must be EXTERNAL . You
       must also specify the wrapping algorithm and type of wrapping key (pub-
       lic key) that you will use to encrypt the key material. You cannot per-
       form this operation on an asymmetric KMS key or on any  KMS  key  in  a
       different Amazon Web Services account.

       To  import  key  material, you must use the public key and import token
       from the same response. These items are valid for 24 hours. The expira-
       tion  date  and time appear in the GetParametersForImport response. You
       cannot use an expired token in an  ImportKeyMaterial request.  If  your
       key and token expire, send another GetParametersForImport request.

       The KMS key that you use for this operation must be in a compatible key
       state. For details, see Key state: Effect on your KMS key  in  the  Key
       Management Service Developer Guide .
          Cross-account  use  : No. You cannot perform this operation on a KMS
          key in a different Amazon Web Services account.

          Required permissions : kms:GetParametersForImport (key policy)

          Related operations:

       o ImportKeyMaterial

       o DeleteImportedKeyMaterial

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-parameters-for-import
          --key-id <value>
          --wrapping-algorithm <value>
          --wrapping-key-spec <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --key-id (string)
          The identifier of the symmetric KMS key into which you  will  import
          key material. The Origin of the KMS key must be EXTERNAL .

          Specify the key ID or key ARN of the KMS key.

          For example:

          o Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab

          o Key                                                           ARN:
            arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab

          To  get  the  key  ID  and  key  ARN for a KMS key, use  ListKeys or
          DescribeKey .

       --wrapping-algorithm (string)
          The algorithm you will  use  to  encrypt  the  key  material  before
          importing  it  with   ImportKeyMaterial  . For more information, see
          Encrypt the Key Material in the  Key  Management  Service  Developer
          Guide .

          Possible values:

          o RSAES_PKCS1_V1_5

          o RSAES_OAEP_SHA_1

          o RSAES_OAEP_SHA_256

       --wrapping-key-spec (string)
          The  type  of  wrapping  key (public key) to return in the response.
          Only 2048-bit RSA public keys are supported.

          Possible values:

          o RSA_2048

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To get the items required to import key material into a CMK

       The following get-parameters-for-import example gets the public key and
       import  token that you need to import key material into a CMK. When you
       use the import-key-material command, be sure to use  the  import  token
       and  key material encrypted by the public key that were returned in the
       same get-parameters-for-import command. Also,  the  wrapping  algorithm
       that  you  specify  in this command must be one that you use to encrypt
       the key material with the public key.

       To specify the CMK, use the key-id parameter. This example uses an  key
       ID, but you can use a key ID or key ARN in this command.

          aws kms get-parameters-for-import \
              --key-id 1234abcd-12ab-34cd-56ef-1234567890ab \
              --wrapping-algorithm RSAES_OAEP_SHA_256 \
              --wrapping-key-spec RSA_2048

       Output:

          {
              "KeyId": "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab",
              "PublicKey": "<public key base64 encoded data>",
              "ImportToken": "<import token base64 encoded data>",
              "ParametersValidTo": 1593893322.32
          }

       For  more  information, see Download the public key and import token in
       the AWS Key Management Service Developer Guide.

OUTPUT
       KeyId -> (string)
          The Amazon Resource Name (key ARN ) of the KMS key to use in a  sub-
          sequent   ImportKeyMaterial request. This is the same KMS key speci-
          fied in the GetParametersForImport request.

       ImportToken -> (blob)
          The import token to send in a subsequent  ImportKeyMaterial request.

       PublicKey -> (blob)
          The  public  key to use to encrypt the key material before importing
          it with  ImportKeyMaterial .

       ParametersValidTo -> (timestamp)
          The time at which the import token and  public  key  are  no  longer
          valid. After this time, you cannot use them to make an  ImportKeyMa-
          terial request and  you  must  send  another  GetParametersForImport
          request to get new ones.



                                                   GET-PARAMETERS-FOR-IMPORT()
