GENERATE-DATA-KEY-WITHOUT-PLAINTEXT()    GENERATE-DATA-KEY-WITHOUT-PLAINTEXT()



NAME
       generate-data-key-without-plaintext -

DESCRIPTION
       Generates  a  unique  symmetric data key. This operation returns a data
       key that is encrypted under a KMS key that you specify. To  request  an
       asymmetric  data  key  pair, use the  GenerateDataKeyPair or  Generate-
       DataKeyPairWithoutPlaintext operations.
          GenerateDataKeyWithoutPlaintext is identical to the  GenerateDataKey
          operation  except  that  returns only the encrypted copy of the data
          key. This operation is useful for systems that need to encrypt  data
          at  some  point,  but  not immediately. When you need to encrypt the
          data, you call the  Decrypt operation on the encrypted copy  of  the
          key.

       It's also useful in distributed systems with different levels of trust.
       For example, you might store encrypted data in containers.  One  compo-
       nent of your system creates new containers and stores an encrypted data
       key with each container. Then, a different component puts the data into
       the  containers.  That  component first decrypts the data key, uses the
       plaintext data key to encrypt data, puts the encrypted  data  into  the
       container,  and  then  destroys the plaintext data key. In this system,
       the component that creates the containers never sees the plaintext data
       key.
          GenerateDataKeyWithoutPlaintext  returns  a unique data key for each
          request. The bytes in the keys are not related to the caller or  KMS
          key that is used to encrypt the private key.

       To  generate a data key, you must specify the symmetric KMS key that is
       used to encrypt the data key. You cannot use an asymmetric KMS  key  to
       generate  a  data  key.  To  get  the  type  of  your  KMS key, use the
       DescribeKey operation.

       If the operation succeeds, you will find the encrypted copy of the data
       key in the CiphertextBlob field.

       You  can use the optional encryption context to add additional security
       to the encryption operation. If you specify an EncryptionContext ,  you
       must specify the same encryption context (a case-sensitive exact match)
       when decrypting the encrypted  data  key.  Otherwise,  the  request  to
       decrypt  fails  with  an InvalidCiphertextException . For more informa-
       tion, see Encryption Context in the Key  Management  Service  Developer
       Guide .

       The KMS key that you use for this operation must be in a compatible key
       state. For details, see Key state: Effect on your KMS key  in  the  Key
       Management Service Developer Guide .
          Cross-account use : Yes. To perform this operation with a KMS key in
          a different Amazon Web Services account,  specify  the  key  ARN  or
          alias ARN in the value of the KeyId parameter.

          Required permissions : kms:GenerateDataKeyWithoutPlaintext (key pol-
          icy)

          Related operations:

       o Decrypt

       o Encrypt

       o GenerateDataKey

       o GenerateDataKeyPair

       o GenerateDataKeyPairWithoutPlaintext

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            generate-data-key-without-plaintext
          --key-id <value>
          [--encryption-context <value>]
          [--key-spec <value>]
          [--number-of-bytes <value>]
          [--grant-tokens <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --key-id (string)
          The identifier of the symmetric KMS key that encrypts the data  key.

          To  specify a KMS key, use its key ID, key ARN, alias name, or alias
          ARN. When using an alias name, prefix it with "alias/" . To  specify
          a  KMS  key in a different Amazon Web Services account, you must use
          the key ARN or alias ARN.

          For example:

          o Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab

          o Key                                                           ARN:
            arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab

          o Alias name: alias/ExampleAlias

          o Alias ARN: arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias

          To get the key ID and key ARN  for  a  KMS  key,  use   ListKeys  or
          DescribeKey  . To get the alias name and alias ARN, use  ListAliases
          .

       --encryption-context (map)
          Specifies the encryption context that will be used  when  encrypting
          the data key.

          An  encryption context is a collection of non-secret key-value pairs
          that represents additional  authenticated  data.  When  you  use  an
          encryption  context  to  encrypt data, you must specify the same (an
          exact case-sensitive match) encryption context to decrypt the  data.
          An  encryption  context is optional when encrypting with a symmetric
          KMS key, but it is highly recommended.

          For more information, see Encryption Context in the  Key  Management
          Service Developer Guide .

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --key-spec (string)
          The  length  of the data key. Use AES_128 to generate a 128-bit sym-
          metric key, or AES_256 to generate a 256-bit symmetric key.

          Possible values:

          o AES_256

          o AES_128

       --number-of-bytes (integer)
          The length of the data key in bytes. For example, use the  value  64
          to  generate  a  512-bit data key (64 bytes is 512 bits). For common
          key lengths (128-bit and 256-bit symmetric keys), we recommend  that
          you use the KeySpec field instead of this one.

       --grant-tokens (list)
          A list of grant tokens.

          Use  a grant token when your permission to call this operation comes
          from a new grant that has not yet achieved  eventual  consistency  .
          For more information, see Grant token and Using a grant token in the
          Key Management Service Developer Guide .

          (string)

       Syntax:

          "string" "string" ...

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       CiphertextBlob -> (blob)
          The encrypted data key. When you use the HTTP API or the Amazon  Web
          Services  CLI,  the  value  is  Base64-encoded. Otherwise, it is not
          Base64-encoded.

       KeyId -> (string)
          The Amazon Resource Name (key ARN ) of the KMS  key  that  encrypted
          the data key.



                                         GENERATE-DATA-KEY-WITHOUT-PLAINTEXT()
