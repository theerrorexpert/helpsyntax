PUT-SCALING-POLICY()                                      PUT-SCALING-POLICY()



NAME
       put-scaling-policy -

DESCRIPTION
       Creates  or  updates a scaling policy for a fleet. Scaling policies are
       used to automatically scale a fleet's hosting capacity to  meet  player
       demand.  An  active scaling policy instructs Amazon GameLift to track a
       fleet metric and automatically change the fleet's capacity when a  cer-
       tain  threshold  is  reached.  There are two types of scaling policies:
       target-based and rule-based. Use a target-based policy to  quickly  and
       efficiently  manage  fleet  scaling;  this  option is the most commonly
       used. Use rule-based policies when you need to exert fine-grained  con-
       trol over auto-scaling.

       Fleets  can have multiple scaling policies of each type in force at the
       same time; you can  have  one  target-based  policy,  one  or  multiple
       rule-based  scaling  policies,  or both. We recommend caution, however,
       because multiple  auto-scaling  policies  can  have  unintended  conse-
       quences.

       You can temporarily suspend all scaling policies for a fleet by calling
       StopFleetActions with the fleet action AUTO_SCALING. To resume  scaling
       policies,  call   StartFleetActions with the same fleet action. To stop
       just one scaling policy--or to permanently remove it, you  must  delete
       the policy with  DeleteScalingPolicy .

       Learn  more  about  how to work with auto-scaling in Set Up Fleet Auto-
       matic Scaling .
          Target-based policy

       A target-based policy tracks a single metric:  PercentAvailableGameSes-
       sions.  This  metric tells us how much of a fleet's hosting capacity is
       ready to host game sessions but is not currently in use.  This  is  the
       fleet's buffer; it measures the additional player demand that the fleet
       could handle at current capacity. With a target-based policy,  you  set
       your ideal buffer size and leave it to Amazon GameLift to take whatever
       action is needed to maintain that target.

       For example, you might choose to maintain a 10% buffer for a fleet that
       has  the  capacity  to host 100 simultaneous game sessions. This policy
       tells Amazon GameLift to take action  whenever  the  fleet's  available
       capacity  falls  below or rises above 10 game sessions. Amazon GameLift
       will start new instances or stop unused instances in order to return to
       the 10% buffer.

       To create or update a target-based policy, specify a fleet ID and name,
       and set the policy type to "TargetBased". Specify the metric  to  track
       (PercentAvailableGameSessions)  and  reference  a   TargetConfiguration
       object with your desired buffer value. Exclude all other parameters. On
       a  successful  request, the policy name is returned. The scaling policy
       is automatically in force as soon as it's successfully created. If  the
       fleet's  auto-scaling actions are temporarily suspended, the new policy
       will be in force once the fleet actions are restarted.
          Rule-based policy

       A rule-based policy tracks specified fleet  metric,  sets  a  threshold
       value,  and  specifies  the  type of action to initiate when triggered.
       With a rule-based policy, you can select from several  available  fleet
       metrics.  Each  policy specifies whether to scale up or scale down (and
       by how much), so you need one policy for each type of action.

       For example, a policy may make the following statement:  "If  the  per-
       centage of idle instances is greater than 20% for more than 15 minutes,
       then reduce the fleet capacity by 10%."

       A policy's rule statement has the following structure:

       If [MetricName] is [ComparisonOperator]  [Threshold] for [EvaluationPe-
       riods]  minutes, then [ScalingAdjustmentType] to/by [ScalingAdjustment]
       .

       To implement the example, the rule statement would look like this:

       If [PercentIdleInstances] is [GreaterThanThreshold]  [20] for [15] min-
       utes, then [PercentChangeInCapacity] to/by [10] .

       To  create  or update a scaling policy, specify a unique combination of
       name and fleet ID, and set the policy type to "RuleBased". Specify  the
       parameter  values for a policy rule statement. On a successful request,
       the policy name is returned.  Scaling  policies  are  automatically  in
       force   as  soon  as  they're  successfully  created.  If  the  fleet's
       auto-scaling actions are temporarily suspended, the new policy will  be
       in force once the fleet actions are restarted.
          Related actions
              DescribeFleetCapacity       |        UpdateFleetCapacity       |
              DescribeEC2InstanceLimits |  PutScalingPolicy  |   DescribeScal-
              ingPolicies |  DeleteScalingPolicy |  StopFleetActions |  Start-
              FleetActions | All APIs by task

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            put-scaling-policy
          --name <value>
          --fleet-id <value>
          [--scaling-adjustment <value>]
          [--scaling-adjustment-type <value>]
          [--threshold <value>]
          [--comparison-operator <value>]
          [--evaluation-periods <value>]
          --metric-name <value>
          [--policy-type <value>]
          [--target-configuration <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --name (string)
          A descriptive label that is associated with a fleet's  scaling  pol-
          icy.  Policy  names  do not need to be unique. A fleet can have only
          one scaling policy with the same name.

       --fleet-id (string)
          A unique identifier for the fleet to apply this policy to.  You  can
          use  either the fleet ID or ARN value. The fleet cannot be in any of
          the following statuses: ERROR or DELETING.

       --scaling-adjustment (integer)
          Amount of adjustment to make, based on the scaling adjustment  type.

       --scaling-adjustment-type (string)
          The  type  of  adjustment  to  make to a fleet's instance count (see
          FleetCapacity ):

          o ChangeInCapacity -- add (or subtract) the scaling adjustment value
            from  the  current  instance count. Positive values scale up while
            negative values scale down.

          o ExactCapacity -- set the instance count to the scaling  adjustment
            value.

          o PercentChangeInCapacity -- increase or reduce the current instance
            count by the scaling adjustment, read as  a  percentage.  Positive
            values  scale  up while negative values scale down; for example, a
            value of "-10" scales the fleet down by 10%.

          Possible values:

          o ChangeInCapacity

          o ExactCapacity

          o PercentChangeInCapacity

       --threshold (double)
          Metric value used to trigger a scaling event.

       --comparison-operator (string)
          Comparison operator to use when measuring  the  metric  against  the
          threshold value.

          Possible values:

          o GreaterThanOrEqualToThreshold

          o GreaterThanThreshold

          o LessThanThreshold

          o LessThanOrEqualToThreshold

       --evaluation-periods (integer)
          Length  of  time  (in  minutes)  the metric must be at or beyond the
          threshold before a scaling event is triggered.

       --metric-name (string)
          Name of the Amazon GameLift-defined metric that is used to trigger a
          scaling  adjustment. For detailed descriptions of fleet metrics, see
          Monitor Amazon GameLift with Amazon CloudWatch .

          o ActivatingGameSessions -- Game sessions in the  process  of  being
            created.

          o ActiveGameSessions -- Game sessions that are currently running.

          o ActiveInstances  --  Fleet instances that are currently running at
            least one game session.

          o AvailableGameSessions -- Additional game sessions that fleet could
            host simultaneously, given current capacity.

          o AvailablePlayerSessions  -- Empty player slots in currently active
            game sessions. This includes game sessions that are not  currently
            accepting players. Reserved player slots are not included.

          o CurrentPlayerSessions -- Player slots in active game sessions that
            are being used by a player or are reserved for a player.

          o IdleInstances -- Active instances that are currently hosting  zero
            game sessions.

          o PercentAvailableGameSessions  --  Unused  percentage  of the total
            number of game sessions that a fleet  could  host  simultaneously,
            given current capacity. Use this metric for a target-based scaling
            policy.

          o PercentIdleInstances -- Percentage of the total number  of  active
            instances that are hosting zero game sessions.

          o QueueDepth  --  Pending  game  session  placement requests, in any
            queue, where the current fleet is the top-priority destination.

          o WaitTime -- Current wait time for pending game  session  placement
            requests,  in any queue, where the current fleet is the top-prior-
            ity destination.

          Possible values:

          o ActivatingGameSessions

          o ActiveGameSessions

          o ActiveInstances

          o AvailableGameSessions

          o AvailablePlayerSessions

          o CurrentPlayerSessions

          o IdleInstances

          o PercentAvailableGameSessions

          o PercentIdleInstances

          o QueueDepth

          o WaitTime

       --policy-type (string)
          The type of scaling policy to create. For a target-based policy, set
          the parameter MetricName to 'PercentAvailableGameSessions' and spec-
          ify a TargetConfiguration . For a rule-based policy set the  follow-
          ing parameters: MetricName , ComparisonOperator , Threshold , Evalu-
          ationPeriods , ScalingAdjustmentType , and ScalingAdjustment .

          Possible values:

          o RuleBased

          o TargetBased

       --target-configuration (structure)
          An object that contains settings for a target-based scaling  policy.

          TargetValue -> (double)
              Desired  value  to  use  with a target-based scaling policy. The
              value must be relevant for whatever metric the scaling policy is
              using.  For  example, in a policy using the metric PercentAvail-
              ableGameSessions, the target value should be the preferred  size
              of  the  fleet's  buffer (the percent of capacity that should be
              idle and ready for new game sessions).

       Shorthand Syntax:

          TargetValue=double

       JSON Syntax:

          {
            "TargetValue": double
          }

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       Name -> (string)
          A descriptive label that is associated with a fleet's  scaling  pol-
          icy. Policy names do not need to be unique.



                                                          PUT-SCALING-POLICY()
