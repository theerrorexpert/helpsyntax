UPDATE-SCRIPT()                                                UPDATE-SCRIPT()



NAME
       update-script -

DESCRIPTION
       Updates Realtime script metadata and content.

       To  update  script  metadata, specify the script ID and provide updated
       name and/or version values.

       To update script content, provide an updated zip file  by  pointing  to
       either a local file or an Amazon S3 bucket location. You can use either
       method regardless of how the original script was uploaded. Use the Ver-
       sion parameter to track updates to the script.

       If the call is successful, the updated metadata is stored in the script
       record and a revised script is uploaded to the Amazon GameLift service.
       Once  the  script  is updated and acquired by a fleet instance, the new
       version is used for all new game sessions.
          Learn more

          Amazon GameLift Realtime Servers

          Related actions
              CreateScript |  ListScripts |  DescribeScript |  UpdateScript  |
              DeleteScript | All APIs by task

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            update-script
          --script-id <value>
          [--name <value>]
          [--storage-location <value>]
          [--zip-file <value>]
          [--script-version <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --script-id (string)
          A  unique  identifier for the Realtime script to update. You can use
          either the script ID or ARN value.

       --name (string)
          A descriptive label that is associated with a script.  Script  names
          do not need to be unique.

       --storage-location (structure)
          The  location of the Amazon S3 bucket where a zipped file containing
          your Realtime scripts is stored. The storage location  must  specify
          the Amazon S3 bucket name, the zip file name (the "key"), and a role
          ARN that allows Amazon GameLift to  access  the  Amazon  S3  storage
          location. The S3 bucket must be in the same Region where you want to
          create a new script. By default, Amazon GameLift uploads the  latest
          version of the zip file; if you have S3 object versioning turned on,
          you can use the ObjectVersion parameter to specify an  earlier  ver-
          sion.

          Bucket -> (string)
              An  Amazon  S3  bucket  identifier.  This  is the name of the S3
              bucket.

              NOTE:
                 GameLift currently does not support uploading from Amazon  S3
                 buckets with names that contain a dot (.).

          Key -> (string)
              The name of the zip file that contains the build files or script
              files.

          RoleArn -> (string)
              The Amazon Resource Name (ARN ) for an IAM role that allows Ama-
              zon GameLift to access the S3 bucket.

          ObjectVersion -> (string)
              The  version  of the file, if object versioning is turned on for
              the bucket. Amazon GameLift uses this information when  retriev-
              ing  files from an S3 bucket that you own. Use this parameter to
              specify a specific version of the file. If not set,  the  latest
              version of the file is retrieved.

       Shorthand Syntax:

          Bucket=string,Key=string,RoleArn=string,ObjectVersion=string

       JSON Syntax:

          {
            "Bucket": "string",
            "Key": "string",
            "RoleArn": "string",
            "ObjectVersion": "string"
          }

       --zip-file (blob)
          A data object containing your Realtime scripts and dependencies as a
          zip file. The zip file can have one or multiple files. Maximum  size
          of a zip file is 5 MB.

          When  using  the  AWS CLI tool to create a script, this parameter is
          set to the zip file name. It  must  be  prepended  with  the  string
          "fileb://"  to  indicate  that the file data is a binary object. For
          example: --zip-file fileb://myRealtimeScript.zip .

       --script-version (string)
          Version information that is associated with a build or script.  Ver-
          sion strings do not need to be unique.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       Script -> (structure)
          The  newly  created  script  record with a unique script ID. The new
          script's storage location reflects an Amazon S3 location: (1) If the
          script  was uploaded from an S3 bucket under your account, the stor-
          age location reflects the information that was provided in the  Cre-
          ateScript  request; (2) If the script file was uploaded from a local
          zip file, the storage location reflects an S3 location  controls  by
          the Amazon GameLift service.

          ScriptId -> (string)
              A unique identifier for the Realtime script

          ScriptArn -> (string)
              The  Amazon  Resource Name (ARN ) that is assigned to a GameLift
              script resource and uniquely  identifies  it.  ARNs  are  unique
              across  all  Regions.  In a GameLift script ARN, the resource ID
              matches the ScriptId value.

          Name -> (string)
              A descriptive label that is associated  with  a  script.  Script
              names do not need to be unique.

          Version -> (string)
              Version  information  that is associated with a build or script.
              Version strings do not need to be unique.

          SizeOnDisk -> (long)
              The file size of the  uploaded  Realtime  script,  expressed  in
              bytes.  When  files are uploaded from an S3 location, this value
              remains at "0".

          CreationTime -> (timestamp)
              A time stamp indicating when this data object was created.  For-
              mat  is  a  number  expressed  in Unix time as milliseconds (for
              example "1469498468.057" ).

          StorageLocation -> (structure)
              The location in Amazon S3 where build or script files are stored
              for  access  by  Amazon  GameLift. This location is specified in
              CreateBuild ,  CreateScript , and  UpdateScript requests.

              Bucket -> (string)
                 An Amazon S3 bucket identifier. This is the name  of  the  S3
                 bucket.

                 NOTE:
                     GameLift currently does not support uploading from Amazon
                     S3 buckets with names that contain a dot (.).

              Key -> (string)
                 The name of the zip file that contains  the  build  files  or
                 script files.

              RoleArn -> (string)
                 The  Amazon  Resource Name (ARN ) for an IAM role that allows
                 Amazon GameLift to access the S3 bucket.

              ObjectVersion -> (string)
                 The version of the file, if object versioning  is  turned  on
                 for  the  bucket.  Amazon GameLift uses this information when
                 retrieving files from an S3 bucket that  you  own.  Use  this
                 parameter  to  specify a specific version of the file. If not
                 set, the latest version of the file is retrieved.



                                                               UPDATE-SCRIPT()
