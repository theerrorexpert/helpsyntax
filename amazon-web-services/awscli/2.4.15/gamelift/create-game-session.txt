CREATE-GAME-SESSION()                                    CREATE-GAME-SESSION()



NAME
       create-game-session -

DESCRIPTION
       Creates  a  multiplayer  game  session  for players in a specific fleet
       location. This operation prompts an available server process to start a
       game session and retrieves connection information for the new game ses-
       sion. As an alternative,  consider  using  the  GameLift  game  session
       placement feature with

       with   StartGameSessionPlacement  ,  which  uses FleetIQ algorithms and
       queues to optimize the placement process.

       When creating a game session, you specify exactly  where  you  want  to
       place  it and provide a set of game session configuration settings. The
       fleet must be in ACTIVE status before a game session can be created  in
       it.

       This operation can be used in the following ways:

       o To  create  a  game  session on an instance in a fleet's home Region,
         provide a fleet or alias ID along with your game  session  configura-
         tion.

       o To create a game session on an instance in a fleet's remote location,
         provide a fleet or alias ID and a location name, along with your game
         session configuration.

       If  successful,  a workflow is initiated to start a new game session. A
       GameSession object is returned containing the game  session  configura-
       tion  and  status.  When the status is ACTIVE , game session connection
       information is provided and player sessions can be created for the game
       session.  By default, newly created game sessions are open to new play-
       ers. You can restrict new player access by using  UpdateGameSession  to
       change the game session's player session creation policy.

       Game  session  logs  are  retained  for all active game sessions for 14
       days. To access the logs, call  GetGameSessionLogUrl  to  download  the
       log files.
          Available in GameLift Local.

          Learn more

          Start a game session

          Related actions
              CreateGameSession  |   DescribeGameSessions  |  DescribeGameSes-
              sionDetails  |   SearchGameSessions   |    UpdateGameSession   |
              GetGameSessionLogUrl      |      StartGameSessionPlacement     |
              DescribeGameSessionPlacement |  StopGameSessionPlacement  |  All
              APIs by task

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-game-session
          [--fleet-id <value>]
          [--alias-id <value>]
          --maximum-player-session-count <value>
          [--name <value>]
          [--game-properties <value>]
          [--creator-id <value>]
          [--game-session-id <value>]
          [--idempotency-token <value>]
          [--game-session-data <value>]
          [--location <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --fleet-id (string)
          A  unique  identifier for the fleet to create a game session in. You
          can use either the fleet ID or ARN value. Each request  must  refer-
          ence either a fleet ID or alias ID, but not both.

       --alias-id (string)
          A  unique identifier for the alias associated with the fleet to cre-
          ate a game session in. You can use either the alias ID or ARN value.
          Each  request  must reference either a fleet ID or alias ID, but not
          both.

       --maximum-player-session-count (integer)
          The maximum number of players that can be  connected  simultaneously
          to the game session.

       --name (string)
          A  descriptive label that is associated with a game session. Session
          names do not need to be unique.

       --game-properties (list)
          A set  of  custom  properties  for  a  game  session,  formatted  as
          key:value  pairs.  These  properties  are  passed  to  a game server
          process in the  GameSession object with a request  to  start  a  new
          game session.

          (structure)
              Set  of  key-value  pairs  that contain information about a game
              session. When included in a game session request, these  proper-
              ties communicate details to be used when setting up the new game
              session. For example, a game property might specify a game mode,
              level,  or  map.  Game  properties are passed to the game server
              process when initiating a new game session.  For  more  informa-
              tion, see the GameLift Developer Guide .

              Key -> (string)
                 The game property identifier.

              Value -> (string)
                 The game property value.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --creator-id (string)
          A  unique  identifier  for a player or entity creating the game ses-
          sion. This parameter is required when requesting a new game  session
          on  a fleet with a resource creation limit policy. This type of pol-
          icy limits the number of concurrent active game  sessions  that  one
          player can create within a certain time span. GameLift uses the Cre-
          atorId to evaluate the new request against the policy.

       --game-session-id (string)
          This parameter is no longer preferred. Please  use  ``IdempotencyTo-
          ken``  instead. Custom string that uniquely identifies a request for
          a new game session. Maximum token length is 48 characters.  If  pro-
          vided, this string is included in the new game session's ID.

       --idempotency-token (string)
          Custom string that uniquely identifies the new game session request.
          This is useful for ensuring that game session requests with the same
          idempotency  token are processed only once. Subsequent requests with
          the same string return the  original  GameSession  object,  with  an
          updated  status. Maximum token length is 48 characters. If provided,
          this string is included in the new game session's ID. A game session
          ARN  has  the  following format: arn:aws:gamelift:<region>::gameses-
          sion/<fleet ID>/<custom ID string or idempotency  token>  .  Idempo-
          tency  tokens  remain  in  use  for 30 days after a game session has
          ended; game session objects are retained for this  time  period  and
          then deleted.

       --game-session-data (string)
          A  set  of  custom  game  session  properties, formatted as a single
          string value. This data is passed to a game server  process  in  the
          GameSession object with a request to start a new game session.

       --location (string)
          A  fleet's remote location to place the new game session in. If this
          parameter is not set, the new game session is placed in the  fleet's
          home  Region. Specify a remote location with an AWS Region code such
          as us-west-2 .

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       GameSession -> (structure)
          Object that describes the newly created game session record.

          GameSessionId -> (string)
              A unique identifier for the game session. A game session ARN has
              the    following   format:   arn:aws:gamelift:<region>::gameses-
              sion/<fleet ID>/<custom ID string or idempotency token> .

          Name -> (string)
              A descriptive label that is associated with a game session. Ses-
              sion names do not need to be unique.

          FleetId -> (string)
              A  unique identifier for the fleet that the game session is run-
              ning on.

          FleetArn -> (string)
              The Amazon Resource Name (ARN )  associated  with  the  GameLift
              fleet that this game session is running on.

          CreationTime -> (timestamp)
              A  time stamp indicating when this data object was created. For-
              mat is a number expressed in  Unix  time  as  milliseconds  (for
              example "1469498468.057" ).

          TerminationTime -> (timestamp)
              A  time  stamp  indicating when this data object was terminated.
              Format is a number expressed in Unix time as  milliseconds  (for
              example "1469498468.057" ).

          CurrentPlayerSessionCount -> (integer)
              Number of players currently in the game session.

          MaximumPlayerSessionCount -> (integer)
              The  maximum  number of players that can be connected simultane-
              ously to the game session.

          Status -> (string)
              Current status of the game session. A game session must have  an
              ACTIVE status to have player sessions.

          StatusReason -> (string)
              Provides  additional  information  about  game  session  status.
              INTERRUPTED indicates that the game session was hosted on a spot
              instance  that was reclaimed, causing the active game session to
              be terminated.

          GameProperties -> (list)
              A set of custom properties for  a  game  session,  formatted  as
              key:value  pairs.  These  properties are passed to a game server
              process in the  GameSession object with a request to start a new
              game  session.  You can search for active game sessions based on
              this custom data with  SearchGameSessions .

              (structure)
                 Set of key-value pairs that contain information about a  game
                 session. When included in a game session request, these prop-
                 erties communicate details to be used when setting up the new
                 game  session.  For  example, a game property might specify a
                 game mode, level, or map. Game properties are passed  to  the
                 game  server  process when initiating a new game session. For
                 more information, see the GameLift Developer Guide .

                 Key -> (string)
                     The game property identifier.

                 Value -> (string)
                     The game property value.

          IpAddress -> (string)
              The IP address of the game session. To  connect  to  a  GameLift
              game server, an app needs both the IP address and port number.

          DnsName -> (string)
              The  DNS identifier assigned to the instance that is running the
              game session. Values have the following format:

              o TLS-enabled  fleets:   <unique   identifier>.<region   identi-
                fier>.amazongamelift.com .

              o Non-TLS-enabled  fleets:  ec2-<unique identifier>.compute.ama-
                zonaws.com . (See Amazon EC2 Instance IP Addressing .)

              When  connecting  to  a  game  session  that  is  running  on  a
              TLS-enabled  fleet,  you  must  use  the  DNS  name,  not the IP
              address.

          Port -> (integer)
              The port number for the game session. To connect to  a  GameLift
              game server, an app needs both the IP address and port number.

          PlayerSessionCreationPolicy -> (string)
              Indicates whether or not the game session is accepting new play-
              ers.

          CreatorId -> (string)
              A unique identifier for a player. This ID is used to  enforce  a
              resource protection policy (if one exists), that limits the num-
              ber of game sessions a player can create.

          GameSessionData -> (string)
              A set of custom game session properties, formatted as  a  single
              string  value.  This  data is passed to a game server process in
              the  GameSession object with a request to start a new game  ses-
              sion.

          MatchmakerData -> (string)
              Information  about the matchmaking process that was used to cre-
              ate the game session. It is  in  JSON  syntax,  formatted  as  a
              string.  In addition the matchmaking configuration used, it con-
              tains data on all  players  assigned  to  the  match,  including
              player  attributes  and  team  assignments.  For more details on
              matchmaker data, see Match Data . Matchmaker data is useful when
              requesting  match backfills, and is updated whenever new players
              are added during a successful backfill (see   StartMatchBackfill
              ).

          Location -> (string)
              The fleet location where the game session is running. This value
              might specify the fleet's home  Region  or  a  remote  location.
              Location  is expressed as an AWS Region code such as us-west-2 .



                                                         CREATE-GAME-SESSION()
