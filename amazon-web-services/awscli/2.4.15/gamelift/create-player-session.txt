CREATE-PLAYER-SESSION()                                CREATE-PLAYER-SESSION()



NAME
       create-player-session -

DESCRIPTION
       Reserves an open player slot in a game session for a player. New player
       sessions can be created in any game session with an open slot  that  is
       in  ACTIVE  status and has a player creation policy of ACCEPT_ALL . You
       can add a group of players to a game session with  CreatePlayerSessions
       .

       To  create  a player session, specify a game session ID, player ID, and
       optionally a set of player data.

       If successful, a slot is reserved in the game session  for  the  player
       and  a  new  PlayerSession object is returned with a player session ID.
       The player references the player session ID when sending  a  connection
       request to the game session, and the game server can use it to validate
       the player reservation with the GameLift service. Player sessions  can-
       not be updated.
          Available in Amazon GameLift Local.

          Related actions
              CreatePlayerSession  |  CreatePlayerSessions |  DescribePlayerS-
              essions  |   StartGameSessionPlacement  |   DescribeGameSession-
              Placement | All APIs by task

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-player-session
          --game-session-id <value>
          --player-id <value>
          [--player-data <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --game-session-id (string)
          A unique identifier for the game session to add a player to.

       --player-id (string)
          A  unique identifier for a player. Player IDs are developer-defined.

       --player-data (string)
          Developer-defined information related to a player. GameLift does not
          use this data, so it can be formatted as needed for use in the game.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       PlayerSession -> (structure)
          Object that describes the newly created player session record.

          PlayerSessionId -> (string)
              A unique identifier for a player session.

          PlayerId -> (string)
              A unique identifier for a player that is  associated  with  this
              player session.

          GameSessionId -> (string)
              A unique identifier for the game session that the player session
              is connected to.

          FleetId -> (string)
              A unique identifier for the fleet that the player's game session
              is running on.

          FleetArn -> (string)
              The  Amazon  Resource  Name  (ARN ) associated with the GameLift
              fleet that the player's game session is running on.

          CreationTime -> (timestamp)
              A time stamp indicating when this data object was created.  For-
              mat  is  a  number  expressed  in Unix time as milliseconds (for
              example "1469498468.057" ).

          TerminationTime -> (timestamp)
              A time stamp indicating when this data  object  was  terminated.
              Format  is  a number expressed in Unix time as milliseconds (for
              example "1469498468.057" ).

          Status -> (string)
              Current status of the player session.

              Possible player session statuses include the following:

              o RESERVED -- The player session request has been received,  but
                the  player has not yet connected to the server process and/or
                been validated.

              o ACTIVE -- The player has been validated by the server  process
                and is currently connected.

              o COMPLETED -- The player connection has been dropped.

              o TIMEDOUT  --  A  player  session request was received, but the
                player did not connect and/or was  not  validated  within  the
                timeout limit (60 seconds).

          IpAddress -> (string)
              The  IP  address  of  the game session. To connect to a GameLift
              game server, an app needs both the IP address and port number.

          DnsName -> (string)
              The DNS identifier assigned to the instance that is running  the
              game session. Values have the following format:

              o TLS-enabled   fleets:   <unique   identifier>.<region  identi-
                fier>.amazongamelift.com .

              o Non-TLS-enabled fleets:  ec2-<unique  identifier>.compute.ama-
                zonaws.com . (See Amazon EC2 Instance IP Addressing .)

              When  connecting  to  a  game  session  that  is  running  on  a
              TLS-enabled fleet, you  must  use  the  DNS  name,  not  the  IP
              address.

          Port -> (integer)
              Port  number  for  the  game  session.  To  connect  to a Amazon
              GameLift server process, an app needs both the  IP  address  and
              port number.

          PlayerData -> (string)
              Developer-defined information related to a player. GameLift does
              not use this data, so it can be formatted as needed for  use  in
              the game.



                                                       CREATE-PLAYER-SESSION()
