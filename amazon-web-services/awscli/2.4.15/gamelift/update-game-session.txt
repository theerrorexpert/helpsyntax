UPDATE-GAME-SESSION()                                    UPDATE-GAME-SESSION()



NAME
       update-game-session -

DESCRIPTION
       Updates the mutable properties of a game session.

       To  update  a  game session, specify the game session ID and the values
       you want to change.

       If successful, the updated GameSession object is returned.
          Related actions
              CreateGameSession |   DescribeGameSessions  |   DescribeGameSes-
              sionDetails   |    SearchGameSessions   |   UpdateGameSession  |
              GetGameSessionLogUrl     |      StartGameSessionPlacement      |
              DescribeGameSessionPlacement  |   StopGameSessionPlacement | All
              APIs by task

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            update-game-session
          --game-session-id <value>
          [--maximum-player-session-count <value>]
          [--name <value>]
          [--player-session-creation-policy <value>]
          [--protection-policy <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --game-session-id (string)
          A unique identifier for the game session to update.

       --maximum-player-session-count (integer)
          The maximum number of players that can be  connected  simultaneously
          to the game session.

       --name (string)
          A  descriptive label that is associated with a game session. Session
          names do not need to be unique.

       --player-session-creation-policy (string)
          A policy that determines whether the game session is  accepting  new
          players.

          Possible values:

          o ACCEPT_ALL

          o DENY_ALL

       --protection-policy (string)
          Game session protection policy to apply to this game session only.

          o NoProtection  --  The  game  session  can  be  terminated during a
            scale-down event.

          o FullProtection -- If the game session is in an ACTIVE  status,  it
            cannot be terminated during a scale-down event.

          Possible values:

          o NoProtection

          o FullProtection

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       GameSession -> (structure)
          The updated game session properties.

          GameSessionId -> (string)
              A unique identifier for the game session. A game session ARN has
              the   following   format:    arn:aws:gamelift:<region>::gameses-
              sion/<fleet ID>/<custom ID string or idempotency token> .

          Name -> (string)
              A descriptive label that is associated with a game session. Ses-
              sion names do not need to be unique.

          FleetId -> (string)
              A unique identifier for the fleet that the game session is  run-
              ning on.

          FleetArn -> (string)
              The  Amazon  Resource  Name  (ARN ) associated with the GameLift
              fleet that this game session is running on.

          CreationTime -> (timestamp)
              A time stamp indicating when this data object was created.  For-
              mat  is  a  number  expressed  in Unix time as milliseconds (for
              example "1469498468.057" ).

          TerminationTime -> (timestamp)
              A time stamp indicating when this data  object  was  terminated.
              Format  is  a number expressed in Unix time as milliseconds (for
              example "1469498468.057" ).

          CurrentPlayerSessionCount -> (integer)
              Number of players currently in the game session.

          MaximumPlayerSessionCount -> (integer)
              The maximum number of players that can be  connected  simultane-
              ously to the game session.

          Status -> (string)
              Current  status of the game session. A game session must have an
              ACTIVE status to have player sessions.

          StatusReason -> (string)
              Provides  additional  information  about  game  session  status.
              INTERRUPTED indicates that the game session was hosted on a spot
              instance that was reclaimed, causing the active game session  to
              be terminated.

          GameProperties -> (list)
              A  set  of  custom  properties  for a game session, formatted as
              key:value pairs. These properties are passed to  a  game  server
              process in the  GameSession object with a request to start a new
              game session. You can search for active game sessions  based  on
              this custom data with  SearchGameSessions .

              (structure)
                 Set  of key-value pairs that contain information about a game
                 session. When included in a game session request, these prop-
                 erties communicate details to be used when setting up the new
                 game session. For example, a game property  might  specify  a
                 game  mode,  level, or map. Game properties are passed to the
                 game server process when initiating a new game  session.  For
                 more information, see the GameLift Developer Guide .

                 Key -> (string)
                     The game property identifier.

                 Value -> (string)
                     The game property value.

          IpAddress -> (string)
              The  IP  address  of  the game session. To connect to a GameLift
              game server, an app needs both the IP address and port number.

          DnsName -> (string)
              The DNS identifier assigned to the instance that is running  the
              game session. Values have the following format:

              o TLS-enabled   fleets:   <unique   identifier>.<region  identi-
                fier>.amazongamelift.com .

              o Non-TLS-enabled fleets:  ec2-<unique  identifier>.compute.ama-
                zonaws.com . (See Amazon EC2 Instance IP Addressing .)

              When  connecting  to  a  game  session  that  is  running  on  a
              TLS-enabled fleet, you  must  use  the  DNS  name,  not  the  IP
              address.

          Port -> (integer)
              The  port  number for the game session. To connect to a GameLift
              game server, an app needs both the IP address and port number.

          PlayerSessionCreationPolicy -> (string)
              Indicates whether or not the game session is accepting new play-
              ers.

          CreatorId -> (string)
              A  unique  identifier for a player. This ID is used to enforce a
              resource protection policy (if one exists), that limits the num-
              ber of game sessions a player can create.

          GameSessionData -> (string)
              A  set  of custom game session properties, formatted as a single
              string value. This data is passed to a game  server  process  in
              the   GameSession object with a request to start a new game ses-
              sion.

          MatchmakerData -> (string)
              Information about the matchmaking process that was used to  cre-
              ate  the  game  session.  It  is  in JSON syntax, formatted as a
              string. In addition the matchmaking configuration used, it  con-
              tains  data  on  all  players  assigned  to the match, including
              player attributes and team  assignments.  For  more  details  on
              matchmaker data, see Match Data . Matchmaker data is useful when
              requesting match backfills, and is updated whenever new  players
              are  added during a successful backfill (see  StartMatchBackfill
              ).

          Location -> (string)
              The fleet location where the game session is running. This value
              might  specify  the  fleet's  home  Region or a remote location.
              Location is expressed as an AWS Region code such as us-west-2  .



                                                         UPDATE-GAME-SESSION()
