DESCRIBE-RUNTIME-CONFIGURATION()              DESCRIBE-RUNTIME-CONFIGURATION()



NAME
       describe-runtime-configuration -

DESCRIPTION
       Retrieves a fleet's runtime configuration settings. The runtime config-
       uration tells GameLift which server processes to run (and how) on  each
       instance in the fleet.

       To  get  the  runtime  configuration  that is currently in forces for a
       fleet, provide the fleet ID.

       If successful, a   RuntimeConfiguration  object  is  returned  for  the
       requested  fleet.  If  the requested fleet has been deleted, the result
       set is empty.
          Learn more

          Setting up GameLift fleets

          Running multiple processes on a fleet

          Related actions
              ListFleets  |   DescribeEC2InstanceLimits  |    DescribeFleetAt-
              tributes   |   DescribeFleetCapacity  |   DescribeFleetEvents  |
              DescribeFleetLocationAttributes |   DescribeFleetPortSettings  |
              DescribeFleetUtilization   |    DescribeRuntimeConfiguration   |
              DescribeScalingPolicies | All APIs by task

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            describe-runtime-configuration
          --fleet-id <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --fleet-id (string)
          A unique identifier for the fleet to get the  runtime  configuration
          for. You can use either the fleet ID or ARN value.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To request the runtime configuration for a fleet

       The  following describe-runtime-configuration example retrieves details
       about the current runtime configuration for a specified fleet.

          aws gamelift describe-runtime-configuration \
              --fleet-id fleet-a1b2c3d4-5678-90ab-cdef-EXAMPLE11111

       Output:

          {
              "RuntimeConfiguration": {
                  "ServerProcesses": [
                      {
                          "LaunchPath": "C:\game\Bin64.Release.Dedicated\MegaFrogRace_Server.exe",
                          "Parameters": "+gamelift_start_server",
                          "ConcurrentExecutions": 3
                      },
                      {
                          "LaunchPath": "C:\game\Bin64.Release.Dedicated\MegaFrogRace_Server.exe",
                          "Parameters": "+gamelift_start_server +debug",
                          "ConcurrentExecutions": 1
                      }
                  ],
                  "MaxConcurrentGameSessionActivations": 2147483647,
                  "GameSessionActivationTimeoutSeconds": 300
              }
          }

       For more information, see Run Multiple Processes on a Fleet in the Ama-
       zon GameLift Developer Guide.

OUTPUT
       RuntimeConfiguration -> (structure)
          Instructions  that  describe how server processes should be launched
          and maintained on each instance in the fleet.

          ServerProcesses -> (list)
              A collection of server process configurations that identify what
              server processes to run on each instance in a fleet.

              (structure)
                 A  set of instructions for launching server processes on each
                 instance in a fleet. Server  processes  run  either  an  exe-
                 cutable  in a custom game build or a Realtime Servers script.
                 Server process configurations are part of a fleet's  Runtime-
                 Configuration .

                 LaunchPath -> (string)
                     The  location  of a game build executable or the Realtime
                     script file  that  contains  the  Init()  function.  Game
                     builds and Realtime scripts are installed on instances at
                     the root:

                     o Windows (custom game builds only): C:\game  .  Example:
                       "C:\game\MyGame\server.exe "

                     o Linux:          /local/game         .         Examples:
                       "/local/game/MyGame/server.exe " or  "/local/game/MyRe-
                       altimeScript.js "

                 Parameters -> (string)
                     An optional list of parameters to pass to the server exe-
                     cutable or Realtime script on launch.

                 ConcurrentExecutions -> (integer)
                     The number of server processes using  this  configuration
                     that run concurrently on each instance.

          MaxConcurrentGameSessionActivations -> (integer)
              The  number of game sessions in status ACTIVATING to allow on an
              instance. This setting limits the instance resources that can be
              used for new game activations at any one time.

          GameSessionActivationTimeoutSeconds -> (integer)
              The  maximum amount of time (in seconds) allowed to launch a new
              game session and have it report ready to  host  players.  During
              this  time,  the  game  session is in status ACTIVATING . If the
              game session does not become active before the  timeout,  it  is
              ended and the game session status is changed to TERMINATED .



                                              DESCRIBE-RUNTIME-CONFIGURATION()
