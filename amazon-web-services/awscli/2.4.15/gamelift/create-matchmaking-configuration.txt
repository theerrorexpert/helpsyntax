CREATE-MATCHMAKING-CONFIGURATION()          CREATE-MATCHMAKING-CONFIGURATION()



NAME
       create-matchmaking-configuration -

DESCRIPTION
       Defines a new matchmaking configuration for use with FlexMatch. Whether
       your are using FlexMatch with  GameLift  hosting  or  as  a  standalone
       matchmaking  service,  the matchmaking configuration sets out rules for
       matching players and forming teams. If you're also using GameLift host-
       ing,  it defines how to start game sessions for each match. Your match-
       making system can use multiple configurations to handle different  game
       scenarios.  All matchmaking requests ( StartMatchmaking or  StartMatch-
       Backfill ) identify the matchmaking configuration to  use  and  provide
       player attributes consistent with that configuration.

       To  create a matchmaking configuration, you must provide the following:
       configuration name and FlexMatch mode (with or without  GameLift  host-
       ing);  a  rule  set  that  specifies  how  to evaluate players and find
       acceptable matches; whether player acceptance is required; and the max-
       imum  time allowed for a matchmaking attempt. When using FlexMatch with
       GameLift hosting, you also need to identify the game session  queue  to
       use when starting a game session for the match.

       In  addition,  you  must  set  up an Amazon Simple Notification Service
       (SNS) topic to receive matchmaking notifications. Provide the topic ARN
       in  the  matchmaking configuration. An alternative method, continuously
       polling ticket status with  DescribeMatchmaking , is only suitable  for
       games in development with low matchmaking usage.
          Learn more

          Design a FlexMatch matchmaker

          Set up FlexMatch event notification

          Related actions
              CreateMatchmakingConfiguration  |  DescribeMatchmakingConfigura-
              tions |  UpdateMatchmakingConfiguration |  DeleteMatchmakingCon-
              figuration   |   CreateMatchmakingRuleSet  |   DescribeMatchmak-
              ingRuleSets  |   ValidateMatchmakingRuleSet  |   DeleteMatchmak-
              ingRuleSet | All APIs by task

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-matchmaking-configuration
          --name <value>
          [--description <value>]
          [--game-session-queue-arns <value>]
          --request-timeout-seconds <value>
          [--acceptance-timeout-seconds <value>]
          --acceptance-required | --no-acceptance-required
          --rule-set-name <value>
          [--notification-target <value>]
          [--additional-player-count <value>]
          [--custom-event-data <value>]
          [--game-properties <value>]
          [--game-session-data <value>]
          [--backfill-mode <value>]
          [--flex-match-mode <value>]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --name (string)
          A  unique identifier for the matchmaking configuration. This name is
          used to identify the configuration  associated  with  a  matchmaking
          request or ticket.

       --description (string)
          A human-readable description of the matchmaking configuration.

       --game-session-queue-arns (list)
          The  Amazon Resource Name (ARN ) that is assigned to a GameLift game
          session queue resource and uniquely identifies it. ARNs  are  unique
          across  all  Regions.  Format is arn:aws:gamelift:<region>::gameses-
          sionqueue/<queue name> . Queues can be located in any Region. Queues
          are used to start new GameLift-hosted game sessions for matches that
          are created with this matchmaking configuration. If FlexMatchMode is
          set to STANDALONE , do not set this parameter.

          (string)

       Syntax:

          "string" "string" ...

       --request-timeout-seconds (integer)
          The  maximum  duration,  in  seconds,  that a matchmaking ticket can
          remain in process before timing out. Requests that fail due to  tim-
          ing out can be resubmitted as needed.

       --acceptance-timeout-seconds (integer)
          The length of time (in seconds) to wait for players to accept a pro-
          posed match, if acceptance is required.

       --acceptance-required | --no-acceptance-required (boolean)
          A flag that determines whether a match that was  created  with  this
          configuration  must  be  accepted by the matched players. To require
          acceptance, set to TRUE .  With  this  option  enabled,  matchmaking
          tickets  use  the status REQUIRES_ACCEPTANCE to indicate when a com-
          pleted potential match is waiting for player acceptance.

       --rule-set-name (string)
          A unique identifier for the matchmaking rule set to  use  with  this
          configuration.  You can use either the rule set name or ARN value. A
          matchmaking configuration can only use rule sets that are defined in
          the same Region.

       --notification-target (string)
          An  SNS  topic  ARN  that is set up to receive matchmaking notifica-
          tions. See Setting up notifications for matchmaking for more  infor-
          mation.

       --additional-player-count (integer)
          The  number of player slots in a match to keep open for future play-
          ers. For example, if the configuration's rule set specifies a  match
          for  a single 12-person team, and the additional player count is set
          to 2, only 10 players are selected for the match. This parameter  is
          not used if FlexMatchMode is set to STANDALONE .

       --custom-event-data (string)
          Information  to  be  added to all events related to this matchmaking
          configuration.

       --game-properties (list)
          A set  of  custom  properties  for  a  game  session,  formatted  as
          key:value  pairs.  These  properties  are  passed  to  a game server
          process in the  GameSession object with a request  to  start  a  new
          game  session (see Start a Game Session ). This information is added
          to the new  GameSession object that  is  created  for  a  successful
          match.  This parameter is not used if FlexMatchMode is set to STAND-
          ALONE .

          (structure)
              Set of key-value pairs that contain  information  about  a  game
              session.  When included in a game session request, these proper-
              ties communicate details to be used when setting up the new game
              session. For example, a game property might specify a game mode,
              level, or map. Game properties are passed  to  the  game  server
              process  when  initiating  a new game session. For more informa-
              tion, see the GameLift Developer Guide .

              Key -> (string)
                 The game property identifier.

              Value -> (string)
                 The game property value.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --game-session-data (string)
          A set of custom game  session  properties,  formatted  as  a  single
          string  value.  This  data is passed to a game server process in the
          GameSession object with a request to start a new game  session  (see
          Start  a Game Session ). This information is added to the new  Game-
          Session object that is created for a successful match. This  parame-
          ter is not used if FlexMatchMode is set to STANDALONE .

       --backfill-mode (string)
          The method used to backfill game sessions that are created with this
          matchmaking configuration. Specify MANUAL  when  your  game  manages
          backfill  requests  manually or does not use the match backfill fea-
          ture. Specify AUTOMATIC to have GameLift create  a   StartMatchBack-
          fill  request  whenever  a  game session has one or more open slots.
          Learn more about manual and automatic backfill in Backfill  Existing
          Games  with  FlexMatch  .  Automatic  backfill is not available when
          FlexMatchMode is set to STANDALONE .

          Possible values:

          o AUTOMATIC

          o MANUAL

       --flex-match-mode (string)
          Indicates whether this matchmaking configuration is being used  with
          GameLift hosting or as a standalone matchmaking solution.

          o STANDALONE  -  FlexMatch  forms matches and returns match informa-
            tion,   including   players   and   team   assignments,    in    a
            MatchmakingSucceeded event.

          o WITH_QUEUE  -  FlexMatch  forms  matches  and  uses  the specified
            GameLift queue to start a game session for the match.

          Possible values:

          o STANDALONE

          o WITH_QUEUE

       --tags (list)
          A list of labels to assign  to  the  new  matchmaking  configuration
          resource.  Tags  are  developer-defined key-value pairs. Tagging AWS
          resources are useful for resource management, access management  and
          cost  allocation. For more information, see Tagging AWS Resources in
          the AWS General Reference . Once the resource is  created,  you  can
          use  TagResource ,  UntagResource , and  ListTagsForResource to add,
          remove, and view tags. The maximum  tag  limit  may  be  lower  than
          stated. See the AWS General Reference for actual tagging limits.

          (structure)
              A label that can be assigned to a GameLift resource.
                 Learn more

                 Tagging AWS Resources in the AWS General Reference

                 AWS Tagging Strategies

                 Related actions
                     TagResource |  UntagResource |  ListTagsForResource | All
                     APIs by task

              Key -> (string)
                 The key for a developer-defined key:value pair for tagging an
                 AWS resource.

              Value -> (string)
                 The  value for a developer-defined key:value pair for tagging
                 an AWS resource.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       Configuration -> (structure)
          Object that describes the newly created matchmaking configuration.

          Name -> (string)
              A unique identifier for the matchmaking configuration. This name
              is  used  to identify the configuration associated with a match-
              making request or ticket.

          ConfigurationArn -> (string)
              The Amazon Resource Name (ARN ) that is assigned to  a  GameLift
              matchmaking  configuration  resource and uniquely identifies it.
              ARNs   are   unique    across    all    Regions.    Format    is
              arn:aws:gamelift:<region>::matchmakingconfiguration/<matchmaking
              configuration name> .  In  a  GameLift  configuration  ARN,  the
              resource ID matches the Name value.

          Description -> (string)
              A descriptive label that is associated with matchmaking configu-
              ration.

          GameSessionQueueArns -> (list)
              The Amazon Resource Name (ARN ) that is assigned to  a  GameLift
              game session queue resource and uniquely identifies it. ARNs are
              unique      across      all       Regions.       Format       is
              arn:aws:gamelift:<region>::gamesessionqueue/<queue    name>    .
              Queues can be located in any Region. Queues are  used  to  start
              new  GameLift-hosted  game sessions for matches that are created
              with this matchmaking configuration. This property  is  not  set
              when FlexMatchMode is set to STANDALONE .

              (string)

          RequestTimeoutSeconds -> (integer)
              The  maximum duration, in seconds, that a matchmaking ticket can
              remain in process before timing out. Requests that fail  due  to
              timing out can be resubmitted as needed.

          AcceptanceTimeoutSeconds -> (integer)
              The  length of time (in seconds) to wait for players to accept a
              proposed match, if acceptance is required. If any player rejects
              the match or fails to accept before the timeout, the ticket con-
              tinues to look for an acceptable match.

          AcceptanceRequired -> (boolean)
              A flag that indicates whether a match that was created with this
              configuration  must  be  accepted  by  the  matched  players. To
              require acceptance, set to TRUE. When this  option  is  enabled,
              matchmaking  tickets use the status REQUIRES_ACCEPTANCE to indi-
              cate when a completed potential  match  is  waiting  for  player
              acceptance.

          RuleSetName -> (string)
              A  unique  identifier  for  the matchmaking rule set to use with
              this configuration. A matchmaking  configuration  can  only  use
              rule sets that are defined in the same Region.

          RuleSetArn -> (string)
              The  Amazon  Resource  Name  (ARN ) associated with the GameLift
              matchmaking rule set resource that this configuration uses.

          NotificationTarget -> (string)
              An SNS topic ARN that is set up to receive matchmaking notifica-
              tions.

          AdditionalPlayerCount -> (integer)
              The  number  of  player slots in a match to keep open for future
              players. For example, if the configuration's rule set  specifies
              a  match  for a single 12-person team, and the additional player
              count is set to 2, only 10 players are selected for  the  match.
              This  parameter  is not used when FlexMatchMode is set to STAND-
              ALONE .

          CustomEventData -> (string)
              Information to attach to all events related to  the  matchmaking
              configuration.

          CreationTime -> (timestamp)
              A  time stamp indicating when this data object was created. For-
              mat is a number expressed in  Unix  time  as  milliseconds  (for
              example "1469498468.057" ).

          GameProperties -> (list)
              A  set  of  custom  properties  for a game session, formatted as
              key:value pairs. These properties are passed to  a  game  server
              process in the  GameSession object with a request to start a new
              game session (see Start a Game Session ).  This  information  is
              added  to the new  GameSession object that is created for a suc-
              cessful match. This parameter is not used when FlexMatchMode  is
              set to STANDALONE .

              (structure)
                 Set  of key-value pairs that contain information about a game
                 session. When included in a game session request, these prop-
                 erties communicate details to be used when setting up the new
                 game session. For example, a game property  might  specify  a
                 game  mode,  level, or map. Game properties are passed to the
                 game server process when initiating a new game  session.  For
                 more information, see the GameLift Developer Guide .

                 Key -> (string)
                     The game property identifier.

                 Value -> (string)
                     The game property value.

          GameSessionData -> (string)
              A  set  of custom game session properties, formatted as a single
              string value. This data is passed to a game  server  process  in
              the   GameSession object with a request to start a new game ses-
              sion (see Start a Game Session ). This information is  added  to
              the  new   GameSession  object  that is created for a successful
              match. This parameter is not used when FlexMatchMode is  set  to
              STANDALONE .

          BackfillMode -> (string)
              The  method  used  to  backfill  game sessions created with this
              matchmaking configuration. MANUAL indicates that the game  makes
              backfill  requests  or  does not use the match backfill feature.
              AUTOMATIC indicates that  GameLift  creates   StartMatchBackfill
              requests  whenever  a  game  session has one or more open slots.
              Learn more about  manual  and  automatic  backfill  in  Backfill
              existing games with FlexMatch . Automatic backfill is not avail-
              able when FlexMatchMode is set to STANDALONE .

          FlexMatchMode -> (string)
              Indicates whether this matchmaking configuration is  being  used
              with GameLift hosting or as a standalone matchmaking solution.

              o STANDALONE  - FlexMatch forms matches and returns match infor-
                mation,  including  players  and  team   assignments,   in   a
                MatchmakingSucceeded event.

              o WITH_QUEUE  -  FlexMatch  forms matches and uses the specified
                GameLift queue to start a game session for the match.



                                            CREATE-MATCHMAKING-CONFIGURATION()
