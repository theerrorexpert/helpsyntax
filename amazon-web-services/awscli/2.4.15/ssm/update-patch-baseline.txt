UPDATE-PATCH-BASELINE()                                UPDATE-PATCH-BASELINE()



NAME
       update-patch-baseline -

DESCRIPTION
       Modifies  an  existing  patch  baseline.  Fields  not  specified in the
       request are left unchanged.

       NOTE:
          For information about valid key-value pairs in PatchFilters for each
          supported operating system type, see  PatchFilter .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            update-patch-baseline
          --baseline-id <value>
          [--name <value>]
          [--global-filters <value>]
          [--approval-rules <value>]
          [--approved-patches <value>]
          [--approved-patches-compliance-level <value>]
          [--approved-patches-enable-non-security | --no-approved-patches-enable-non-security]
          [--rejected-patches <value>]
          [--rejected-patches-action <value>]
          [--description <value>]
          [--sources <value>]
          [--replace | --no-replace]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --baseline-id (string)
          The ID of the patch baseline to update.

       --name (string)
          The name of the patch baseline.

       --global-filters (structure)
          A set of global filters used to include patches in the baseline.

          PatchFilters -> (list)
              The set of patch filters that make up the group.

              (structure)
                 Defines which patches should be included in a patch baseline.

                 A patch filter consists of a key and a  set  of  values.  The
                 filter  key  is  a patch property. For example, the available
                 filter keys for WINDOWS  are  PATCH_SET  ,  PRODUCT  ,  PROD-
                 UCT_FAMILY , CLASSIFICATION , and MSRC_SEVERITY .

                 The  filter  values define a matching criterion for the patch
                 property indicated by the key. For example, if the filter key
                 is  PRODUCT and the filter values are ["Office 2013", "Office
                 2016"] , then the filter accepts all  patches  where  product
                 name  is  either  "Office  2013" or "Office 2016". The filter
                 values can be exact values for the patch property given as  a
                 key, or a wildcard (*), which matches all values.

                 You  can  view lists of valid values for the patch properties
                 by running the DescribePatchProperties command. For  informa-
                 tion about which patch properties can be used with each major
                 operating system, see  DescribePatchProperties .

                 Key -> (string)
                     The key for the filter.

                     Run the  DescribePatchProperties command to view lists of
                     valid keys for each operating system type.

                 Values -> (list)
                     The value for the filter key.

                     Run the  DescribePatchProperties command to view lists of
                     valid values for each key based on operating system type.

                     (string)

       JSON Syntax:

          {
            "PatchFilters": [
              {
                "Key": "ARCH"|"ADVISORY_ID"|"BUGZILLA_ID"|"PATCH_SET"|"PRODUCT"|"PRODUCT_FAMILY"|"CLASSIFICATION"|"CVE_ID"|"EPOCH"|"MSRC_SEVERITY"|"NAME"|"PATCH_ID"|"SECTION"|"PRIORITY"|"REPOSITORY"|"RELEASE"|"SEVERITY"|"SECURITY"|"VERSION",
                "Values": ["string", ...]
              }
              ...
            ]
          }

       --approval-rules (structure)
          A set of rules used to include patches in the baseline.

          PatchRules -> (list)
              The rules that make up the rule group.

              (structure)
                 Defines an approval rule for a patch baseline.

                 PatchFilterGroup -> (structure)
                     The  patch filter group that defines the criteria for the
                     rule.

                     PatchFilters -> (list)
                        The set of patch filters that make up the group.

                        (structure)
                            Defines which patches  should  be  included  in  a
                            patch baseline.

                            A patch filter consists of a key and a set of val-
                            ues. The filter key is a patch property. For exam-
                            ple,  the  available  filter  keys for WINDOWS are
                            PATCH_SET , PRODUCT , PRODUCT_FAMILY , CLASSIFICA-
                            TION , and MSRC_SEVERITY .

                            The  filter values define a matching criterion for
                            the patch property indicated by the key. For exam-
                            ple,  if  the filter key is PRODUCT and the filter
                            values are ["Office 2013", "Office 2016"]  ,  then
                            the  filter accepts all patches where product name
                            is either "Office 2013" or "Office 2016". The fil-
                            ter values can be exact values for the patch prop-
                            erty given as a key,  or  a  wildcard  (*),  which
                            matches all values.

                            You  can  view lists of valid values for the patch
                            properties by running the  DescribePatchProperties
                            command. For information about which patch proper-
                            ties can be used with each major operating system,
                            see  DescribePatchProperties .

                            Key -> (string)
                               The key for the filter.

                               Run  the   DescribePatchProperties  command  to
                               view lists of valid  keys  for  each  operating
                               system type.

                            Values -> (list)
                               The value for the filter key.

                               Run  the   DescribePatchProperties  command  to
                               view lists of valid values for each  key  based
                               on operating system type.

                               (string)

                 ComplianceLevel -> (string)
                     A compliance severity level for all approved patches in a
                     patch baseline.

                 ApproveAfterDays -> (integer)
                     The number of days after the release date of  each  patch
                     matched  by the rule that the patch is marked as approved
                     in the patch baseline. For example, a value  of  7  means
                     that  patches  are  approved  seven  days  after they are
                     released.  Not  supported  on  Debian  Server  or  Ubuntu
                     Server.

                 ApproveUntilDate -> (string)
                     The  cutoff  date  for auto approval of released patches.
                     Any patches released on or before this date are installed
                     automatically.  Not  supported on Debian Server or Ubuntu
                     Server.

                     Enter dates in  the  format  YYYY-MM-DD  .  For  example,
                     2021-12-31 .

                 EnableNonSecurity -> (boolean)
                     For  managed  nodes  identified by the approval rule fil-
                     ters, enables a  patch  baseline  to  apply  non-security
                     updates   available  in  the  specified  repository.  The
                     default value is false . Applies to Linux  managed  nodes
                     only.

       JSON Syntax:

          {
            "PatchRules": [
              {
                "PatchFilterGroup": {
                  "PatchFilters": [
                    {
                      "Key": "ARCH"|"ADVISORY_ID"|"BUGZILLA_ID"|"PATCH_SET"|"PRODUCT"|"PRODUCT_FAMILY"|"CLASSIFICATION"|"CVE_ID"|"EPOCH"|"MSRC_SEVERITY"|"NAME"|"PATCH_ID"|"SECTION"|"PRIORITY"|"REPOSITORY"|"RELEASE"|"SEVERITY"|"SECURITY"|"VERSION",
                      "Values": ["string", ...]
                    }
                    ...
                  ]
                },
                "ComplianceLevel": "CRITICAL"|"HIGH"|"MEDIUM"|"LOW"|"INFORMATIONAL"|"UNSPECIFIED",
                "ApproveAfterDays": integer,
                "ApproveUntilDate": "string",
                "EnableNonSecurity": true|false
              }
              ...
            ]
          }

       --approved-patches (list)
          A list of explicitly approved patches for the baseline.

          For information about accepted formats for lists of approved patches
          and rejected patches, see About package name  formats  for  approved
          and  rejected patch lists in the Amazon Web Services Systems Manager
          User Guide .

          (string)

       Syntax:

          "string" "string" ...

       --approved-patches-compliance-level (string)
          Assigns a new compliance severity level to an existing  patch  base-
          line.

          Possible values:

          o CRITICAL

          o HIGH

          o MEDIUM

          o LOW

          o INFORMATIONAL

          o UNSPECIFIED

       --approved-patches-enable-non-security                                |
       --no-approved-patches-enable-non-security (boolean)
          Indicates whether the list of approved patches includes non-security
          updates  that  should  be  applied to the managed nodes. The default
          value is false . Applies to Linux managed nodes only.

       --rejected-patches (list)
          A list of explicitly rejected patches for the baseline.

          For information about accepted formats for lists of approved patches
          and  rejected  patches,  see About package name formats for approved
          and rejected patch lists in the Amazon Web Services Systems  Manager
          User Guide .

          (string)

       Syntax:

          "string" "string" ...

       --rejected-patches-action (string)
          The  action  for  Patch  Manager  to take on patches included in the
          RejectedPackages list.

          o
            **
            ALLOW_AS_DEPENDENCY ** : A package in the Rejected patches list is
            installed  only  if  it  is a dependency of another package. It is
            considered compliant with the patch baseline, and  its  status  is
            reported  as  InstalledOther  .  This  is the default action if no
            option is specified.

          o
            **
            BLOCK ** : Packages in the RejectedPatches list, and packages that
            include  them  as dependencies, aren't installed under any circum-
            stances. If a package was installed before it  was  added  to  the
            Rejected  patches  list,  it  is considered non-compliant with the
            patch baseline, and its status is reported as InstalledRejected  .

          Possible values:

          o ALLOW_AS_DEPENDENCY

          o BLOCK

       --description (string)
          A description of the patch baseline.

       --sources (list)
          Information  about  the  patches to use to update the managed nodes,
          including target operating systems and source repositories.  Applies
          to Linux managed nodes only.

          (structure)
              Information  about  the  patches  to  use  to update the managed
              nodes, including target operating systems and source repository.
              Applies to Linux managed nodes only.

              Name -> (string)
                 The name specified to identify the patch source.

              Products -> (list)
                 The  specific  operating  system  versions a patch repository
                 applies  to,  such  as  "Ubuntu16.04",  "AmazonLinux2016.09",
                 "RedhatEnterpriseLinux7.2"  or  "Suse12.7". For lists of sup-
                 ported product values, see  PatchFilter .

                 (string)

              Configuration -> (string)
                 The value of the yum repo configuration. For example:
                     [main]

                     name=MyCustomRepository

                     baseurl=https://my-custom-repository

                     enabled=1

                 NOTE:
                     For information about other options  available  for  your
                     yum repository configuration, see dnf.conf(5) .

       Shorthand Syntax:

          Name=string,Products=string,string,Configuration=string ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Products": ["string", ...],
              "Configuration": "string"
            }
            ...
          ]

       --replace | --no-replace (boolean)
          If  True, then all fields that are required by the  CreatePatchBase-
          line operation are also required  for  this  API  request.  Optional
          fields that aren't specified are set to null.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To update a patch baseline

       The  following  update-patch-baseline  example  adds  the specified two
       patches as rejected and one patch as approved to  the  specified  patch
       baseline.

          aws ssm update-patch-baseline \
                  --baseline-id "pb-0123456789abcdef0" \
                  --rejected-patches "KB2032276" "MS10-048" \
                  --approved-patches "KB2124261"

       Output:

          {
              "BaselineId": "pb-0123456789abcdef0",
              "Name": "WindowsPatching",
              "OperatingSystem": "WINDOWS",
              "GlobalFilters": {
                  "PatchFilters": []
              },
              "ApprovalRules": {
                  "PatchRules": [
                      {
                          "PatchFilterGroup": {
                              "PatchFilters": [
                                  {
                                      "Key": "PRODUCT",
                                      "Values": [
                                          "WindowsServer2016"
                                      ]
                                  }
                              ]
                          },
                          "ComplianceLevel": "CRITICAL",
                          "ApproveAfterDays": 0,
                          "EnableNonSecurity": false
                      }
                  ]
              },
              "ApprovedPatches": [
                  "KB2124261"
              ],
              "ApprovedPatchesComplianceLevel": "UNSPECIFIED",
              "ApprovedPatchesEnableNonSecurity": false,
              "RejectedPatches": [
                  "KB2032276",
                  "MS10-048"
              ],
              "RejectedPatchesAction": "ALLOW_AS_DEPENDENCY",
              "CreatedDate": 1550244180.465,
              "ModifiedDate": 1550244180.465,
              "Description": "Patches for Windows Servers",
              "Sources": []
          }

       Example 2: To rename a patch baseline

       The  following  update-patch-baseline  example  renames  theh specified
       patch baseline.

          aws ssm update-patch-baseline \
              --baseline-id "pb-0713accee01234567" \
              --name "Windows-Server-2012-R2-Important-and-Critical-Security-Updates"

       For more  information,  see  Update  or  Delete  a  Patch  Baseline  <-
       https://docs.aws.amazon.com/systems-manager/latest/user-
       guide/patch-baseline-update-or-delete.html>`__ in the AWS Systems  Man-
       ager User Guide.

OUTPUT
       BaselineId -> (string)
          The ID of the deleted patch baseline.

       Name -> (string)
          The name of the patch baseline.

       OperatingSystem -> (string)
          The operating system rule used by the updated patch baseline.

       GlobalFilters -> (structure)
          A set of global filters used to exclude patches from the baseline.

          PatchFilters -> (list)
              The set of patch filters that make up the group.

              (structure)
                 Defines which patches should be included in a patch baseline.

                 A patch filter consists of a key and a  set  of  values.  The
                 filter  key  is  a patch property. For example, the available
                 filter keys for WINDOWS  are  PATCH_SET  ,  PRODUCT  ,  PROD-
                 UCT_FAMILY , CLASSIFICATION , and MSRC_SEVERITY .

                 The  filter  values define a matching criterion for the patch
                 property indicated by the key. For example, if the filter key
                 is  PRODUCT and the filter values are ["Office 2013", "Office
                 2016"] , then the filter accepts all  patches  where  product
                 name  is  either  "Office  2013" or "Office 2016". The filter
                 values can be exact values for the patch property given as  a
                 key, or a wildcard (*), which matches all values.

                 You  can  view lists of valid values for the patch properties
                 by running the DescribePatchProperties command. For  informa-
                 tion about which patch properties can be used with each major
                 operating system, see  DescribePatchProperties .

                 Key -> (string)
                     The key for the filter.

                     Run the  DescribePatchProperties command to view lists of
                     valid keys for each operating system type.

                 Values -> (list)
                     The value for the filter key.

                     Run the  DescribePatchProperties command to view lists of
                     valid values for each key based on operating system type.

                     (string)

       ApprovalRules -> (structure)
          A set of rules used to include patches in the baseline.

          PatchRules -> (list)
              The rules that make up the rule group.

              (structure)
                 Defines an approval rule for a patch baseline.

                 PatchFilterGroup -> (structure)
                     The  patch filter group that defines the criteria for the
                     rule.

                     PatchFilters -> (list)
                        The set of patch filters that make up the group.

                        (structure)
                            Defines which patches  should  be  included  in  a
                            patch baseline.

                            A patch filter consists of a key and a set of val-
                            ues. The filter key is a patch property. For exam-
                            ple,  the  available  filter  keys for WINDOWS are
                            PATCH_SET , PRODUCT , PRODUCT_FAMILY , CLASSIFICA-
                            TION , and MSRC_SEVERITY .

                            The  filter values define a matching criterion for
                            the patch property indicated by the key. For exam-
                            ple,  if  the filter key is PRODUCT and the filter
                            values are ["Office 2013", "Office 2016"]  ,  then
                            the  filter accepts all patches where product name
                            is either "Office 2013" or "Office 2016". The fil-
                            ter values can be exact values for the patch prop-
                            erty given as a key,  or  a  wildcard  (*),  which
                            matches all values.

                            You  can  view lists of valid values for the patch
                            properties by running the  DescribePatchProperties
                            command. For information about which patch proper-
                            ties can be used with each major operating system,
                            see  DescribePatchProperties .

                            Key -> (string)
                               The key for the filter.

                               Run  the   DescribePatchProperties  command  to
                               view lists of valid  keys  for  each  operating
                               system type.

                            Values -> (list)
                               The value for the filter key.

                               Run  the   DescribePatchProperties  command  to
                               view lists of valid values for each  key  based
                               on operating system type.

                               (string)

                 ComplianceLevel -> (string)
                     A compliance severity level for all approved patches in a
                     patch baseline.

                 ApproveAfterDays -> (integer)
                     The number of days after the release date of  each  patch
                     matched  by the rule that the patch is marked as approved
                     in the patch baseline. For example, a value  of  7  means
                     that  patches  are  approved  seven  days  after they are
                     released.  Not  supported  on  Debian  Server  or  Ubuntu
                     Server.

                 ApproveUntilDate -> (string)
                     The  cutoff  date  for auto approval of released patches.
                     Any patches released on or before this date are installed
                     automatically.  Not  supported on Debian Server or Ubuntu
                     Server.

                     Enter dates in  the  format  YYYY-MM-DD  .  For  example,
                     2021-12-31 .

                 EnableNonSecurity -> (boolean)
                     For  managed  nodes  identified by the approval rule fil-
                     ters, enables a  patch  baseline  to  apply  non-security
                     updates   available  in  the  specified  repository.  The
                     default value is false . Applies to Linux  managed  nodes
                     only.

       ApprovedPatches -> (list)
          A list of explicitly approved patches for the baseline.

          (string)

       ApprovedPatchesComplianceLevel -> (string)
          The  compliance  severity level assigned to the patch baseline after
          the update completed.

       ApprovedPatchesEnableNonSecurity -> (boolean)
          Indicates whether the list of approved patches includes non-security
          updates  that  should  be  applied to the managed nodes. The default
          value is false . Applies to Linux managed nodes only.

       RejectedPatches -> (list)
          A list of explicitly rejected patches for the baseline.

          (string)

       RejectedPatchesAction -> (string)
          The action specified to take on patches included  in  the  Rejected-
          Patches  list.  A patch can be allowed only if it is a dependency of
          another package,  or  blocked  entirely  along  with  packages  that
          include it as a dependency.

       CreatedDate -> (timestamp)
          The date when the patch baseline was created.

       ModifiedDate -> (timestamp)
          The date when the patch baseline was last modified.

       Description -> (string)
          A description of the patch baseline.

       Sources -> (list)
          Information  about  the  patches to use to update the managed nodes,
          including target operating systems and source repositories.  Applies
          to Linux managed nodes only.

          (structure)
              Information  about  the  patches  to  use  to update the managed
              nodes, including target operating systems and source repository.
              Applies to Linux managed nodes only.

              Name -> (string)
                 The name specified to identify the patch source.

              Products -> (list)
                 The  specific  operating  system  versions a patch repository
                 applies  to,  such  as  "Ubuntu16.04",  "AmazonLinux2016.09",
                 "RedhatEnterpriseLinux7.2"  or  "Suse12.7". For lists of sup-
                 ported product values, see  PatchFilter .

                 (string)

              Configuration -> (string)
                 The value of the yum repo configuration. For example:
                     [main]

                     name=MyCustomRepository

                     baseurl=https://my-custom-repository

                     enabled=1

                 NOTE:
                     For information about other options  available  for  your
                     yum repository configuration, see dnf.conf(5) .



                                                       UPDATE-PATCH-BASELINE()
