SEND-AUTOMATION-SIGNAL()                              SEND-AUTOMATION-SIGNAL()



NAME
       send-automation-signal -

DESCRIPTION
       Sends  a signal to an Automation execution to change the current behav-
       ior or status of the execution.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            send-automation-signal
          --automation-execution-id <value>
          --signal-type <value>
          [--payload <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --automation-execution-id (string)
          The unique identifier for an existing Automation execution that  you
          want to send the signal to.

       --signal-type (string)
          The type of signal to send to an Automation execution.

          Possible values:

          o Approve

          o Reject

          o StartStep

          o StopStep

          o Resume

       --payload (map)
          The  data  sent with the signal. The data schema depends on the type
          of signal used in the request.

          For Approve and Reject signal types, the payload is an optional com-
          ment that you can send with the signal type. For example:
              Comment="Looks good"

          For StartStep and Resume signal types, you must send the name of the
          Automation step to start or resume as the payload. For example:
              StepName="step1"

          For the StopStep signal type, you must send the step execution ID as
          the payload. For example:
              StepExecutionId="97fff367-fc5a-4299-aed8-0123456789ab"

          key -> (string)

          value -> (list)
              (string)

       Shorthand Syntax:

          KeyName1=string,string,KeyName2=string,string

       JSON Syntax:

          {"string": ["string", ...]
            ...}

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To send a singal to an automation execution

       The following send-automation-signal example sends an Approve signal to
       an Automation execution.

          aws ssm send-automation-signal \
              --automation-execution-id 73c8eef8-f4ee-4a05-820c-e354fEXAMPLE \
              --signal-type "Approve"

       This command produces no output.

       For more information, see Running an Automation Workflow with Approvers
       in the AWS Systems Manager User Guide.

OUTPUT
       None



                                                      SEND-AUTOMATION-SIGNAL()
