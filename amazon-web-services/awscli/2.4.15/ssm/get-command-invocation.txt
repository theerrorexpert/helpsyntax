GET-COMMAND-INVOCATION()                              GET-COMMAND-INVOCATION()



NAME
       get-command-invocation -

DESCRIPTION
       Returns  detailed information about command execution for an invocation
       or plugin.
          GetCommandInvocation only gives the execution status of a plugin  in
          a  document.  To get the command execution status on a specific man-
          aged node, use  ListCommandInvocations . To get the  command  execu-
          tion status across managed nodes, use  ListCommands .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-command-invocation
          --command-id <value>
          --instance-id <value>
          [--plugin-name <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --command-id (string)
          (Required) The parent command ID of the invocation plugin.

       --instance-id (string)
          (Required)  The  ID  of  the managed node targeted by the command. A
          managed node can be an Amazon Elastic  Compute  Cloud  (Amazon  EC2)
          instance,  edge  device, and on-premises server or VM in your hybrid
          environment that is configured for Amazon Web Services Systems  Man-
          ager.

       --plugin-name (string)
          The  name  of the plugin for which you want detailed results. If the
          document contains only one plugin, you can omit the name and details
          for  that plugin. If the document contains more than one plugin, you
          must specify the name of the plugin  for  which  you  want  to  view
          details.

          Plugin  names  are also referred to as step names in Systems Manager
          documents (SSM documents).  For  example,  aws:RunShellScript  is  a
          plugin.

          To  find  the  PluginName  , check the document content and find the
          name of the plugin. Alternatively, use  ListCommandInvocations  with
          the  CommandId  and  Details  parameters. The PluginName is the Name
          attribute of the CommandPlugin object in the CommandPlugins list.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To display the details of a command invocation

       The following get-command-invocation example lists all the  invocations
       of the specified command on the specified instance.

          aws ssm get-command-invocation \
              --command-id "ef7fdfd8-9b57-4151-a15c-db9a12345678" \
              --instance-id "i-1234567890abcdef0"

       Output:

          {
              "CommandId": "ef7fdfd8-9b57-4151-a15c-db9a12345678",
              "InstanceId": "i-1234567890abcdef0",
              "Comment": "b48291dd-ba76-43e0-b9df-13e11ddaac26:6960febb-2907-4b59-8e1a-d6ce8EXAMPLE",
              "DocumentName": "AWS-UpdateSSMAgent",
              "DocumentVersion": "",
              "PluginName": "aws:updateSsmAgent",
              "ResponseCode": 0,
              "ExecutionStartDateTime": "2020-02-19T18:18:03.419Z",
              "ExecutionElapsedTime": "PT0.091S",
              "ExecutionEndDateTime": "2020-02-19T18:18:03.419Z",
              "Status": "Success",
              "StatusDetails": "Success",
              "StandardOutputContent": "Updating amazon-ssm-agent from 2.3.842.0 to latest\nSuccessfully downloaded https://s3.us-east-2.amazonaws.com/amazon-ssm-us-east-2/ssm-agent-manifest.json\namazon-ssm-agent 2.3.842.0 has already been installed, update skipped\n",
              "StandardOutputUrl": "",
              "StandardErrorContent": "",
              "StandardErrorUrl": "",
              "CloudWatchOutputConfig": {
                  "CloudWatchLogGroupName": "",
                  "CloudWatchOutputEnabled": false
              }
          }

       For  more  information,  see  Understanding Command Statuses in the AWS
       Systems Manager User Guide.

OUTPUT
       CommandId -> (string)
          The parent command ID of the invocation plugin.

       InstanceId -> (string)
          The ID of the managed node targeted by the command. A  managed  node
          can  be  an Amazon Elastic Compute Cloud (Amazon EC2) instance, edge
          device, or on-premises server or VM in your hybrid environment  that
          is configured for Amazon Web Services Systems Manager.

       Comment -> (string)
          The comment text for the command.

       DocumentName -> (string)
          The  name  of  the  document  that  was  run.  For example, AWS-Run-
          ShellScript .

       DocumentVersion -> (string)
          The Systems Manager document (SSM  document)  version  used  in  the
          request.

       PluginName -> (string)
          The  name  of  the  plugin,  or  step  name  , for which details are
          reported. For example, aws:RunShellScript is a plugin.

       ResponseCode -> (integer)
          The error level response code for the plugin script. If the response
          code  is -1 , then the command hasn't started running on the managed
          node, or it wasn't received by the node.

       ExecutionStartDateTime -> (string)
          The date and time the plugin started  running.  Date  and  time  are
          written in ISO 8601 format. For example, June 7, 2017 is represented
          as 2017-06-7. The following sample Amazon Web Services  CLI  command
          uses the InvokedBefore filter.
              aws      ssm      list-commands     --filters     key=InvokedBe-
              fore,value=2017-06-07T00:00:00Z

          If the plugin hasn't started to run, the string is empty.

       ExecutionElapsedTime -> (string)
          Duration since ExecutionStartDateTime .

       ExecutionEndDateTime -> (string)
          The date and time the plugin finished running.  Date  and  time  are
          written in ISO 8601 format. For example, June 7, 2017 is represented
          as 2017-06-7. The following sample Amazon Web Services  CLI  command
          uses the InvokedAfter filter.
              aws            ssm            list-commands            --filters
              key=InvokedAfter,value=2017-06-07T00:00:00Z

          If the plugin hasn't started to run, the string is empty.

       Status -> (string)
          The status of this invocation plugin. This status can  be  different
          than StatusDetails .

       StatusDetails -> (string)
          A  detailed  status of the command execution for an invocation. Sta-
          tusDetails includes more information than Status because it includes
          states resulting from error and concurrency control parameters. Sta-
          tusDetails can show different results than Status . For more  infor-
          mation  about  these statuses, see Understanding command statuses in
          the Amazon Web Services Systems Manager User Guide  .  StatusDetails
          can be one of the following values:

          o Pending: The command hasn't been sent to the managed node.

          o In  Progress:  The  command  has been sent to the managed node but
            hasn't reached a terminal state.

          o Delayed: The system attempted to send the command to  the  target,
            but  the  target  wasn't  available. The managed node might not be
            available because of network issues, because the node was stopped,
            or  for  similar  reasons. The system will try to send the command
            again.

          o Success: The command or plugin ran successfully. This is a  termi-
            nal state.

          o Delivery  Timed  Out:  The command wasn't delivered to the managed
            node before the delivery timeout expired. Delivery timeouts  don't
            count  against  the  parent command's MaxErrors limit, but they do
            contribute to whether the parent  command  status  is  Success  or
            Incomplete. This is a terminal state.

          o Execution  Timed  Out:  The  command started to run on the managed
            node,  but  the  execution  wasn't  complete  before  the  timeout
            expired.  Execution  timeouts count against the MaxErrors limit of
            the parent command. This is a terminal state.

          o Failed: The command wasn't run successfully on the  managed  node.
            For a plugin, this indicates that the result code wasn't zero. For
            a command invocation, this indicates that the result code for  one
            or more plugins wasn't zero. Invocation failures count against the
            MaxErrors limit of the parent command. This is a terminal state.

          o Cancelled: The command was terminated  before  it  was  completed.
            This is a terminal state.

          o Undeliverable: The command can't be delivered to the managed node.
            The node might not exist or might not be responding. Undeliverable
            invocations  don't  count  against  the parent command's MaxErrors
            limit and don't contribute to whether the parent command status is
            Success or Incomplete. This is a terminal state.

          o Terminated:  The  parent  command exceeded its MaxErrors limit and
            subsequent command invocations were canceled by the  system.  This
            is a terminal state.

       StandardOutputContent -> (string)
          The first 24,000 characters written by the plugin to stdout . If the
          command hasn't finished running, if ExecutionStatus is neither  Suc-
          ceeded nor Failed, then this string is empty.

       StandardOutputUrl -> (string)
          The  URL  for  the  complete text written by the plugin to stdout in
          Amazon Simple Storage Service (Amazon S3). If an  S3  bucket  wasn't
          specified, then this string is empty.

       StandardErrorContent -> (string)
          The  first 8,000 characters written by the plugin to stderr . If the
          command hasn't finished running, then this string is empty.

       StandardErrorUrl -> (string)
          The URL for the complete text written by the plugin to stderr  .  If
          the command hasn't finished running, then this string is empty.

       CloudWatchOutputConfig -> (structure)
          Amazon  CloudWatch  Logs  information where Systems Manager sent the
          command output.

          CloudWatchLogGroupName -> (string)
              The name of the CloudWatch Logs log group where you want to send
              command  output.  If  you don't specify a group name, Amazon Web
              Services Systems Manager automatically creates a log  group  for
              you. The log group uses the following naming format:

                 ``
                 aws/ssm/SystemsManagerDocumentName ``

          CloudWatchOutputEnabled -> (boolean)
              Enables  Systems  Manager  to  send command output to CloudWatch
              Logs.



                                                      GET-COMMAND-INVOCATION()
