DESCRIBE-ASSOCIATION()                                  DESCRIBE-ASSOCIATION()



NAME
       describe-association -

DESCRIPTION
       Describes  the association for the specified target or managed node. If
       you created the association by using the Targets  parameter,  then  you
       must retrieve the association by using the association ID.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            describe-association
          [--name <value>]
          [--instance-id <value>]
          [--association-id <value>]
          [--association-version <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --name (string)
          The name of the SSM document.

       --instance-id (string)
          The managed node ID.

       --association-id (string)
          The association ID for which you want information.

       --association-version (string)
          Specify the association version to retrieve. To view the latest ver-
          sion, either specify $LATEST for this parameter, or omit this param-
          eter.  To  view  a  list of all associations for a managed node, use
          ListAssociations . To get a list of versions for a specific associa-
          tion, use  ListAssociationVersions .

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To get details of an association

       The  following  describe-association  example describes the association
       for the specified association ID.

          aws ssm describe-association \
              --association-id "8dfe3659-4309-493a-8755-0123456789ab"

       Output:

          {
              "AssociationDescription": {
                  "Name": "AWS-GatherSoftwareInventory",
                  "AssociationVersion": "1",
                  "Date": 1534864780.995,
                  "LastUpdateAssociationDate": 1543235759.81,
                  "Overview": {
                      "Status": "Success",
                      "AssociationStatusAggregatedCount": {
                          "Success": 2
                      }
                  },
                  "DocumentVersion": "$DEFAULT",
                  "Parameters": {
                      "applications": [
                          "Enabled"
                      ],
                      "awsComponents": [
                          "Enabled"
                      ],
                      "customInventory": [
                          "Enabled"
                      ],
                      "files": [
                          ""
                      ],
                      "instanceDetailedInformation": [
                          "Enabled"
                      ],
                      "networkConfig": [
                          "Enabled"
                      ],
                      "services": [
                          "Enabled"
                      ],
                      "windowsRegistry": [
                          ""
                      ],
                      "windowsRoles": [
                          "Enabled"
                      ],
                      "windowsUpdates": [
                          "Enabled"
                      ]
                  },
                  "AssociationId": "8dfe3659-4309-493a-8755-0123456789ab",
                  "Targets": [
                      {
                          "Key": "InstanceIds",
                          "Values": [
                              "*"
                          ]
                      }
                  ],
                  "ScheduleExpression": "rate(24 hours)",
                  "LastExecutionDate": 1550501886.0,
                  "LastSuccessfulExecutionDate": 1550501886.0,
                  "AssociationName": "Inventory-Association"
              }
          }

       For more information, see Editing and creating  a  new  version  of  an
       association in the AWS Systems Manager User Guide.

       Example 2: To get details of an association for a specific instance and
       document

       The following describe-association example  describes  the  association
       between an instance and a document.

          aws ssm describe-association \
              --instance-id "i-1234567890abcdef0" \
              --name "AWS-UpdateSSMAgent"

       Output:

          {
              "AssociationDescription": {
                  "Status": {
                      "Date": 1487876122.564,
                      "Message": "Associated with AWS-UpdateSSMAgent",
                      "Name": "Associated"
                  },
                  "Name": "AWS-UpdateSSMAgent",
                  "InstanceId": "i-1234567890abcdef0",
                  "Overview": {
                      "Status": "Pending",
                      "DetailedStatus": "Associated",
                      "AssociationStatusAggregatedCount": {
                          "Pending": 1
                      }
                  },
                  "AssociationId": "d8617c07-2079-4c18-9847-1234567890ab",
                  "DocumentVersion": "$DEFAULT",
                  "LastUpdateAssociationDate": 1487876122.564,
                  "Date": 1487876122.564,
                  "Targets": [
                      {
                          "Values": [
                              "i-1234567890abcdef0"
                          ],
                          "Key": "InstanceIds"
                      }
                  ]
              }
          }

       For  more  information,  see  Editing  and creating a new version of an
       association in the AWS Systems Manager User Guide.

OUTPUT
       AssociationDescription -> (structure)
          Information about the association.

          Name -> (string)
              The name of the SSM document.

          InstanceId -> (string)
              The managed node ID.

          AssociationVersion -> (string)
              The association version.

          Date -> (timestamp)
              The date when the association was made.

          LastUpdateAssociationDate -> (timestamp)
              The date when the association was last updated.

          Status -> (structure)
              The association status.

              Date -> (timestamp)
                 The date when the status changed.

              Name -> (string)
                 The status.

              Message -> (string)
                 The reason for the status.

              AdditionalInfo -> (string)
                 A user-defined string.

          Overview -> (structure)
              Information about the association.

              Status -> (string)
                 The status of the association. Status can be:  Pending,  Suc-
                 cess, or Failed.

              DetailedStatus -> (string)
                 A detailed status of the association.

              AssociationStatusAggregatedCount -> (map)
                 Returns the number of targets for the association status. For
                 example, if you  created  an  association  with  two  managed
                 nodes,  and one of them was successful, this would return the
                 count of managed nodes by status.

                 key -> (string)

                 value -> (integer)

          DocumentVersion -> (string)
              The document version.

          AutomationTargetParameterName -> (string)
              Choose the parameter that will define how your  automation  will
              branch out. This target is required for associations that use an
              Automation runbook and target resources by using rate  controls.
              Automation  is  a capability of Amazon Web Services Systems Man-
              ager.

          Parameters -> (map)
              A description of the parameters for a document.

              key -> (string)

              value -> (list)
                 (string)

          AssociationId -> (string)
              The association ID.

          Targets -> (list)
              The managed nodes targeted by the request.

              (structure)
                 An array of search criteria that targets managed nodes  using
                 a key-value pair that you specify.

                 NOTE:
                     One  or  more  targets  must be specified for maintenance
                     window Run Command-type tasks.  Depending  on  the  task,
                     targets  are  optional  for other maintenance window task
                     types (Automation, Lambda, and Step Functions). For  more
                     information  about  running tasks that don't specify tar-
                     gets, see Registering maintenance  window  tasks  without
                     targets  in  the Amazon Web Services Systems Manager User
                     Guide .

                 Supported formats include the following.

                 o Key=InstanceIds,Val-
                   ues=<instance-id-1>,<instance-id-2>,<instance-id-3>

                 o Key=tag:<my-tag-key>,Val-
                   ues=<my-tag-value-1>,<my-tag-value-2>

                 o Key=tag-key,Values=<my-tag-key-1>,<my-tag-key-2>

                 o Run  Command  and  Maintenance  window   targets   only   :
                   Key=resource-groups:Name,Values=<resource-group-name>

                 o Maintenance        window        targets       only       :
                   Key=resource-groups:ResourceTypeFilters,Val-
                   ues=<resource-type-1>,<resource-type-2>

                 o Automation    targets    only    :   Key=ResourceGroup;Val-
                   ues=<resource-group-name>

                 For example:

                 o Key=InstanceIds,Values=i-02573cafcfEXAM-
                   PLE,i-0471e04240EXAMPLE,i-07782c72faEXAMPLE

                 o Key=tag:CostCenter,Values=CostCenter1,CostCenter2,CostCen-
                   ter3

                 o Key=tag-key,Values=Name,Instance-Type,CostCenter

                 o Run  Command  and  Maintenance  window   targets   only   :
                   Key=resource-groups:Name,Values=ProductionResourceGroup
                   This example demonstrates how to target  all  resources  in
                   the  resource group ProductionResourceGroup in your mainte-
                   nance window.

                 o Maintenance       window       targets        only        :
                   Key=resource-groups:ResourceTypeFilters,Val-
                   ues=AWS::EC2::INSTANCE,AWS::EC2::VPC   This example  demon-
                   strates  how  to  target  only Amazon Elastic Compute Cloud
                   (Amazon EC2) instances and VPCs in your maintenance window.

                 o Automation  targets  only  : Key=ResourceGroup,Values=MyRe-
                   sourceGroup

                 o State  Manager  association  targets  only  :   Key=Instan-
                   ceIds,Values=*    This  example  demonstrates how to target
                   all managed instances in the  Amazon  Web  Services  Region
                   where the association was created.

                 For  more  information about how to send commands that target
                 managed nodes using Key,Value parameters, see Targeting  mul-
                 tiple  instances  in  the Amazon Web Services Systems Manager
                 User Guide .

                 Key -> (string)
                     User-defined criteria for sending  commands  that  target
                     managed nodes that meet the criteria.

                 Values -> (list)
                     User-defined  criteria that maps to Key . For example, if
                     you  specified  tag:ServerRole  ,   you   could   specify
                     value:WebServer  to  run  a  command  on  instances  that
                     include EC2 tags of ServerRole,WebServer .

                     Depending on the type of target, the  maximum  number  of
                     values  for  a key might be lower than the global maximum
                     of 50.

                     (string)

          ScheduleExpression -> (string)
              A cron expression that specifies a schedule when the association
              runs.

          OutputLocation -> (structure)
              An  S3  bucket where you want to store the output details of the
              request.

              S3Location -> (structure)
                 An S3 bucket where you want to  store  the  results  of  this
                 request.

                 OutputS3Region -> (string)
                     The Amazon Web Services Region of the S3 bucket.

                 OutputS3BucketName -> (string)
                     The name of the S3 bucket.

                 OutputS3KeyPrefix -> (string)
                     The S3 bucket subfolder.

          LastExecutionDate -> (timestamp)
              The date on which the association was last run.

          LastSuccessfulExecutionDate -> (timestamp)
              The last date on which the association was successfully run.

          AssociationName -> (string)
              The association name.

          MaxErrors -> (string)
              The  number  of  errors that are allowed before the system stops
              sending requests to run the association on  additional  targets.
              You can specify either an absolute number of errors, for example
              10, or a percentage of the target set, for example 10%.  If  you
              specify  3,  for example, the system stops sending requests when
              the fourth error is received. If you specify 0, then the  system
              stops sending requests after the first error is returned. If you
              run an association on 50 managed nodes and set MaxError to  10%,
              then  the  system stops sending the request when the sixth error
              is received.

              Executions that are already running an association  when  MaxEr-
              rors  is reached are allowed to complete, but some of these exe-
              cutions may fail as well. If you need to ensure that there won't
              be more than max-errors failed executions, set MaxConcurrency to
              1 so that executions proceed one at a time.

          MaxConcurrency -> (string)
              The maximum number of targets allowed to run the association  at
              the  same  time.  You can specify a number, for example 10, or a
              percentage of the target set, for example 10%. The default value
              is 100%, which means all targets run the association at the same
              time.

              If a new managed node starts and attempts to run an  association
              while  Systems  Manager  is running MaxConcurrency associations,
              the association is allowed to run. During the  next  association
              interval,  the  new  managed  node  will process its association
              within the limit specified for MaxConcurrency .

          ComplianceSeverity -> (string)
              The severity level that is assigned to the association.

          SyncCompliance -> (string)
              The mode for generating association compliance. You can  specify
              AUTO or MANUAL . In AUTO mode, the system uses the status of the
              association execution to determine the compliance status. If the
              association execution runs successfully, then the association is
              COMPLIANT . If the association execution  doesn't  run  success-
              fully, the association is NON-COMPLIANT .

              In  MANUAL mode, you must specify the AssociationId as a parame-
              ter for the  PutComplianceItems API  operation.  In  this  case,
              compliance  data isn't managed by State Manager, a capability of
              Amazon Web Services Systems  Manager.  It  is  managed  by  your
              direct call to the  PutComplianceItems API operation.

              By default, all associations use AUTO mode.

          ApplyOnlyAtCronInterval -> (boolean)
              By  default, when you create a new associations, the system runs
              it immediately after it is created and  then  according  to  the
              schedule you specified. Specify this option if you don't want an
              association to run immediately after you create it. This parame-
              ter isn't supported for rate expressions.

          CalendarNames -> (list)
              The names or Amazon Resource Names (ARNs) of the Change Calendar
              type documents your associations are gated under.  The  associa-
              tions  only  run  when  that  change  calendar is open. For more
              information, see Amazon Web Services Systems Manager Change Cal-
              endar .

              (string)

          TargetLocations -> (list)
              The  combination  of  Amazon Web Services Regions and Amazon Web
              Services accounts where you want to run the association.

              (structure)
                 The combination of Amazon Web Services Regions and Amazon Web
                 Services  accounts  targeted by the current Automation execu-
                 tion.

                 Accounts -> (list)
                     The Amazon Web Services accounts targeted by the  current
                     Automation execution.

                     (string)

                 Regions -> (list)
                     The  Amazon  Web Services Regions targeted by the current
                     Automation execution.

                     (string)

                 TargetLocationMaxConcurrency -> (string)
                     The maximum number of Amazon  Web  Services  Regions  and
                     Amazon  Web  Services accounts allowed to run the Automa-
                     tion concurrently.

                 TargetLocationMaxErrors -> (string)
                     The maximum number of errors allowed  before  the  system
                     stops  queueing  additional Automation executions for the
                     currently running Automation.

                 ExecutionRoleName -> (string)
                     The Automation execution role used by the currently  run-
                     ning  Automation.  If not specified, the default value is
                     AWS-SystemsManager-AutomationExecutionRole .



                                                        DESCRIBE-ASSOCIATION()
