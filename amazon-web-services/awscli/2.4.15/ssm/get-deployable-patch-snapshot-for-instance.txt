GET-DEPLOYABLE-PATCH-SNAPSHOT-FOR-GET-DEPLOYABLE-PATCH-SNAPSHOT-FOR-INSTANCE()



NAME
       get-deployable-patch-snapshot-for-instance -

DESCRIPTION
       Retrieves  the current snapshot for the patch baseline the managed node
       uses. This API is primarily used by  the  AWS-RunPatchBaseline  Systems
       Manager document (SSM document).

       NOTE:
          If you run the command locally, such as with the Command Line Inter-
          face (CLI), the system attempts to use your local  Amazon  Web  Ser-
          vices  credentials  and  the operation fails. To avoid this, you can
          run the command in the Amazon Web Services Systems Manager  console.
          Use  Run  Command,  a capability of Amazon Web Services Systems Man-
          ager, with an SSM document that enables you to target a managed node
          with  a  script  or  command. For example, run the command using the
          AWS-RunShellScript document or the AWS-RunPowerShellScript document.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-deployable-patch-snapshot-for-instance
          --instance-id <value>
          --snapshot-id <value>
          [--baseline-override <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --instance-id (string)
          The  ID of the managed node for which the appropriate patch snapshot
          should be retrieved.

       --snapshot-id (string)
          The snapshot ID provided by the user when running  AWS-RunPatchBase-
          line .

       --baseline-override (structure)
          Defines the basic information about a patch baseline override.

          OperatingSystem -> (string)
              The operating system rule used by the patch baseline override.

          GlobalFilters -> (structure)
              A set of patch filters, typically used for approval rules.

              PatchFilters -> (list)
                 The set of patch filters that make up the group.

                 (structure)
                     Defines which patches should be included in a patch base-
                     line.

                     A patch filter consists of a key and a set of values. The
                     filter  key  is a patch property. For example, the avail-
                     able filter keys for WINDOWS are PATCH_SET  ,  PRODUCT  ,
                     PRODUCT_FAMILY , CLASSIFICATION , and MSRC_SEVERITY .

                     The  filter  values  define  a matching criterion for the
                     patch property indicated by the key. For example, if  the
                     filter  key is PRODUCT and the filter values are ["Office
                     2013", "Office 2016"]  ,  then  the  filter  accepts  all
                     patches  where  product  name  is either "Office 2013" or
                     "Office 2016". The filter values can be exact values  for
                     the  patch  property  given  as a key, or a wildcard (*),
                     which matches all values.

                     You can view lists of valid values for the patch  proper-
                     ties  by running the DescribePatchProperties command. For
                     information about which patch properties can be used with
                     each major operating system, see  DescribePatchProperties
                     .

                     Key -> (string)
                        The key for the filter.

                        Run the  DescribePatchProperties command to view lists
                        of valid keys for each operating system type.

                     Values -> (list)
                        The value for the filter key.

                        Run the  DescribePatchProperties command to view lists
                        of valid values for each key based on operating system
                        type.

                        (string)

          ApprovalRules -> (structure)
              A set of rules defining the approval rules for a patch baseline.

              PatchRules -> (list)
                 The rules that make up the rule group.

                 (structure)
                     Defines an approval rule for a patch baseline.

                     PatchFilterGroup -> (structure)
                        The patch filter group that defines the  criteria  for
                        the rule.

                        PatchFilters -> (list)
                            The set of patch filters that make up the group.

                            (structure)
                               Defines  which  patches should be included in a
                               patch baseline.

                               A patch filter consists of a key and a  set  of
                               values. The filter key is a patch property. For
                               example, the available filter keys for  WINDOWS
                               are  PATCH_SET  ,  PRODUCT  ,  PRODUCT_FAMILY ,
                               CLASSIFICATION , and MSRC_SEVERITY .

                               The filter values define a  matching  criterion
                               for  the  patch  property indicated by the key.
                               For example, if the filter key is  PRODUCT  and
                               the  filter  values are ["Office 2013", "Office
                               2016"] , then the filter  accepts  all  patches
                               where  product  name is either "Office 2013" or
                               "Office 2016". The filter values can  be  exact
                               values  for  the patch property given as a key,
                               or a wildcard (*), which matches all values.

                               You can view lists  of  valid  values  for  the
                               patch  properties by running the DescribePatch-
                               Properties command. For information about which
                               patch  properties  can  be used with each major
                               operating system, see   DescribePatchProperties
                               .

                               Key -> (string)
                                   The key for the filter.

                                   Run the  DescribePatchProperties command to
                                   view lists of valid keys for each operating
                                   system type.

                               Values -> (list)
                                   The value for the filter key.

                                   Run the  DescribePatchProperties command to
                                   view lists of valid  values  for  each  key
                                   based on operating system type.

                                   (string)

                     ComplianceLevel -> (string)
                        A  compliance  severity level for all approved patches
                        in a patch baseline.

                     ApproveAfterDays -> (integer)
                        The number of days after  the  release  date  of  each
                        patch  matched by the rule that the patch is marked as
                        approved in the patch baseline. For example,  a  value
                        of  7 means that patches are approved seven days after
                        they are released. Not supported on Debian  Server  or
                        Ubuntu Server.

                     ApproveUntilDate -> (string)
                        The cutoff date for auto approval of released patches.
                        Any patches  released  on  or  before  this  date  are
                        installed   automatically.  Not  supported  on  Debian
                        Server or Ubuntu Server.

                        Enter dates in the format YYYY-MM-DD  .  For  example,
                        2021-12-31 .

                     EnableNonSecurity -> (boolean)
                        For managed nodes identified by the approval rule fil-
                        ters, enables a patch baseline to  apply  non-security
                        updates  available  in  the  specified repository. The
                        default value is false  .  Applies  to  Linux  managed
                        nodes only.

          ApprovedPatches -> (list)
              A list of explicitly approved patches for the baseline.

              For  information  about  accepted  formats for lists of approved
              patches and rejected patches, see About package name formats for
              approved  and  rejected  patch  lists in the Amazon Web Services
              Systems Manager User Guide .

              (string)

          ApprovedPatchesComplianceLevel -> (string)
              Defines the compliance  level  for  approved  patches.  When  an
              approved  patch is reported as missing, this value describes the
              severity of the compliance violation.

          RejectedPatches -> (list)
              A list of explicitly rejected patches for the baseline.

              For information about accepted formats  for  lists  of  approved
              patches and rejected patches, see About package name formats for
              approved and rejected patch lists in  the  Amazon  Web  Services
              Systems Manager User Guide .

              (string)

          RejectedPatchesAction -> (string)
              The  action for Patch Manager to take on patches included in the
              RejectedPackages list. A patch can be allowed only if  it  is  a
              dependency  of  another  package, or blocked entirely along with
              packages that include it as a dependency.

          ApprovedPatchesEnableNonSecurity -> (boolean)
              Indicates  whether  the  list  of  approved   patches   includes
              non-security  updates  that  should  be  applied  to the managed
              nodes. The default value is false .  Applies  to  Linux  managed
              nodes only.

          Sources -> (list)
              Information  about  the  patches  to  use  to update the managed
              nodes, including target operating systems and  source  reposito-
              ries. Applies to Linux managed nodes only.

              (structure)
                 Information  about  the  patches to use to update the managed
                 nodes, including target operating systems and source  reposi-
                 tory. Applies to Linux managed nodes only.

                 Name -> (string)
                     The name specified to identify the patch source.

                 Products -> (list)
                     The specific operating system versions a patch repository
                     applies to, such as "Ubuntu16.04",  "AmazonLinux2016.09",
                     "RedhatEnterpriseLinux7.2"  or  "Suse12.7".  For lists of
                     supported product values, see  PatchFilter .

                     (string)

                 Configuration -> (string)
                     The value of the yum repo configuration. For example:
                        [main]

                        name=MyCustomRepository

                        baseurl=https://my-custom-repository

                        enabled=1

                     NOTE:
                        For information about other options available for your
                        yum repository configuration, see dnf.conf(5) .

       JSON Syntax:

          {
            "OperatingSystem": "WINDOWS"|"AMAZON_LINUX"|"AMAZON_LINUX_2"|"UBUNTU"|"REDHAT_ENTERPRISE_LINUX"|"SUSE"|"CENTOS"|"ORACLE_LINUX"|"DEBIAN"|"MACOS"|"RASPBIAN",
            "GlobalFilters": {
              "PatchFilters": [
                {
                  "Key": "ARCH"|"ADVISORY_ID"|"BUGZILLA_ID"|"PATCH_SET"|"PRODUCT"|"PRODUCT_FAMILY"|"CLASSIFICATION"|"CVE_ID"|"EPOCH"|"MSRC_SEVERITY"|"NAME"|"PATCH_ID"|"SECTION"|"PRIORITY"|"REPOSITORY"|"RELEASE"|"SEVERITY"|"SECURITY"|"VERSION",
                  "Values": ["string", ...]
                }
                ...
              ]
            },
            "ApprovalRules": {
              "PatchRules": [
                {
                  "PatchFilterGroup": {
                    "PatchFilters": [
                      {
                        "Key": "ARCH"|"ADVISORY_ID"|"BUGZILLA_ID"|"PATCH_SET"|"PRODUCT"|"PRODUCT_FAMILY"|"CLASSIFICATION"|"CVE_ID"|"EPOCH"|"MSRC_SEVERITY"|"NAME"|"PATCH_ID"|"SECTION"|"PRIORITY"|"REPOSITORY"|"RELEASE"|"SEVERITY"|"SECURITY"|"VERSION",
                        "Values": ["string", ...]
                      }
                      ...
                    ]
                  },
                  "ComplianceLevel": "CRITICAL"|"HIGH"|"MEDIUM"|"LOW"|"INFORMATIONAL"|"UNSPECIFIED",
                  "ApproveAfterDays": integer,
                  "ApproveUntilDate": "string",
                  "EnableNonSecurity": true|false
                }
                ...
              ]
            },
            "ApprovedPatches": ["string", ...],
            "ApprovedPatchesComplianceLevel": "CRITICAL"|"HIGH"|"MEDIUM"|"LOW"|"INFORMATIONAL"|"UNSPECIFIED",
            "RejectedPatches": ["string", ...],
            "RejectedPatchesAction": "ALLOW_AS_DEPENDENCY"|"BLOCK",
            "ApprovedPatchesEnableNonSecurity": true|false,
            "Sources": [
              {
                "Name": "string",
                "Products": ["string", ...],
                "Configuration": "string"
              }
              ...
            ]
          }

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To  retrieve  the  current  snapshot for the patch baseline an instance
       uses

       The   following   get-deployable-patch-snapshot-for-instance    example
       retrieves  details  for  the  current  snapshot for the specified patch
       baseline used by an  instance.  This  command  must  be  run  from  the
       instance using the instance credentials. To ensure it uses the instance
       credentials, run aws configure and specify  only  the  Region  of  your
       instance. Leave the Access Key and Secret Key fields empty.

       Tip: Use uuidgen to generate a snapshot-id.

          aws ssm get-deployable-patch-snapshot-for-instance \
              --instance-id "i-1234567890abcdef0" \
              --snapshot-id "521c3536-930c-4aa9-950e-01234567abcd"

       Output:

          {
              "InstanceId": "i-1234567890abcdef0",
              "SnapshotId": "521c3536-930c-4aa9-950e-01234567abcd",
              "Product": "AmazonLinux2018.03",
              "SnapshotDownloadUrl": "https://patch-baseline-snapshot-us-east-1.s3.amazonaws.com/ed85194ef27214f5984f28b4d664d14f7313568fea7d4b6ac6c10ad1f729d7e7-773304212436/AMAZON_LINUX-521c3536-930c-4aa9-950e-01234567abcd?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20190215T164031Z&X-Amz-SignedHeaders=host&X-Amz-Expires=86400&X-Amz-Credential=AKIAJ5C56P35AEBRX2QQ%2F20190215%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=efaaaf6e3878e77f48a6697e015efdbda9c426b09c5822055075c062f6ad2149"
          }

       For  more  information, see Parameter name: Snapshot ID in the AWS Sys-
       tems Manager User Guide.

OUTPUT
       InstanceId -> (string)
          The managed node ID.

       SnapshotId -> (string)
          The user-defined snapshot ID.

       SnapshotDownloadUrl -> (string)
          A pre-signed Amazon Simple Storage Service (Amazon S3) URL that  can
          be used to download the patch snapshot.

       Product -> (string)
          Returns  the  specific  operating system (for example Windows Server
          2012 or Amazon Linux 2015.09) on the managed node for the  specified
          patch snapshot.



                                  GET-DEPLOYABLE-PATCH-SNAPSHOT-FOR-INSTANCE()
