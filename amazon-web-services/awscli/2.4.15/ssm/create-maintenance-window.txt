CREATE-MAINTENANCE-WINDOW()                        CREATE-MAINTENANCE-WINDOW()



NAME
       create-maintenance-window -

DESCRIPTION
       Creates a new maintenance window.

       NOTE:
          The  value you specify for Duration determines the specific end time
          for the maintenance window based on the time it begins.  No  mainte-
          nance  window  tasks are permitted to start after the resulting end-
          time minus the number of hours you specify for Cutoff . For example,
          if  the  maintenance  window  starts  at 3 PM, the duration is three
          hours, and the value you specify for Cutoff is one hour, no  mainte-
          nance window tasks can start after 5 PM.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-maintenance-window
          --name <value>
          [--description <value>]
          [--start-date <value>]
          [--end-date <value>]
          --schedule <value>
          [--schedule-timezone <value>]
          [--schedule-offset <value>]
          --duration <value>
          --cutoff <value>
          --allow-unassociated-targets | --no-allow-unassociated-targets
          [--client-token <value>]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --name (string)
          The name of the maintenance window.

       --description (string)
          An  optional  description  for  the maintenance window. We recommend
          specifying a description to help you organize your maintenance  win-
          dows.

       --start-date (string)
          The  date  and  time, in ISO-8601 Extended format, for when you want
          the maintenance window to become active.  StartDate  allows  you  to
          delay  activation  of  the  maintenance  window  until the specified
          future date.

       --end-date (string)
          The date and time, in ISO-8601 Extended format, for  when  you  want
          the maintenance window to become inactive. EndDate allows you to set
          a date and time in the future when the maintenance  window  will  no
          longer run.

       --schedule (string)
          The schedule of the maintenance window in the form of a cron or rate
          expression.

       --schedule-timezone (string)
          The time zone that the scheduled maintenance window  executions  are
          based  on, in Internet Assigned Numbers Authority (IANA) format. For
          example: "America/Los_Angeles", "UTC",  or  "Asia/Seoul".  For  more
          information, see the Time Zone Database on the IANA website.

       --schedule-offset (integer)
          The  number  of  days to wait after the date and time specified by a
          cron expression before running the maintenance window.

          For example, the following cron expression schedules  a  maintenance
          window to run on the third Tuesday of every month at 11:30 PM.
              cron(30 23 ? * TUE#3 *)

          If the schedule offset is 2 , the maintenance window won't run until
          two days later.

       --duration (integer)
          The duration of the maintenance window in hours.

       --cutoff (integer)
          The number of hours before the end of the  maintenance  window  that
          Amazon  Web  Services Systems Manager stops scheduling new tasks for
          execution.

       --allow-unassociated-targets     |      --no-allow-unassociated-targets
       (boolean)
          Enables  a  maintenance window task to run on managed nodes, even if
          you haven't registered those nodes as targets. If enabled, then  you
          must  specify  the  unregistered managed nodes (by node ID) when you
          register a task with the maintenance window.

          If you don't enable  this  option,  then  you  must  specify  previ-
          ously-registered  targets  when you register a task with the mainte-
          nance window.

       --client-token (string)
          User-provided idempotency token.

       --tags (list)
          Optional metadata that you assign to a resource. Tags enable you  to
          categorize  a resource in different ways, such as by purpose, owner,
          or environment. For example, you might want  to  tag  a  maintenance
          window  to identify the type of tasks it will run, the types of tar-
          gets, and the environment it will run in. In this  case,  you  could
          specify the following key-value pairs:

          o Key=TaskType,Value=AgentUpdate

          o Key=OS,Value=Windows

          o Key=Environment,Value=Production

          NOTE:
              To  add tags to an existing maintenance window, use the  AddTag-
              sToResource operation.

          (structure)
              Metadata that you assign to your Amazon Web Services  resources.
              Tags  enable you to categorize your resources in different ways,
              for example, by purpose, owner, or environment.  In  Amazon  Web
              Services  Systems Manager, you can apply tags to Systems Manager
              documents (SSM documents), managed nodes,  maintenance  windows,
              parameters, patch baselines, OpsItems, and OpsMetadata.

              Key -> (string)
                 The name of the tag.

              Value -> (string)
                 The value of the tag.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To create a maintenance window

       The  following  create-maintenance-window example creates a new mainte-
       nance window that every five minutes for up to two hours  (as  needed),
       prevents  new  tasks  from  starting  within one hour of the end of the
       maintenance window execution, allows  unassociated  targets  (instances
       that you haven't registered with the maintenance window), and indicates
       through the use of custom tags that its creator intends to use it in  a
       tutorial.

          aws ssm create-maintenance-window \
              --name "My-Tutorial-Maintenance-Window" \
              --schedule "rate(5 minutes)" \
              --duration 2 --cutoff 1 \
              --allow-unassociated-targets \
              --tags "Key=Purpose,Value=Tutorial"

       Output:

          {
              "WindowId": "mw-0c50858d01EXAMPLE"
          }

       Example 2: To create a maintenance window that runs only once

       The  following  create-maintenance-window example creates a new mainte-
       nance window that only runs one time on the specified date and time.

          aws ssm create-maintenance-window \
              --name My-One-Time-Maintenance-Window \
              --schedule "at(2020-05-14T15:55:00)" \
              --duration 5 \
              --cutoff 2 \
              --allow-unassociated-targets \
              --tags "Key=Environment,Value=Production"

       Output:

          {
              "WindowId": "mw-01234567890abcdef"
          }

       For more information, see Maintenance Windows in the AWS  Systems  Man-
       ager User Guide.

OUTPUT
       WindowId -> (string)
          The ID of the created maintenance window.



                                                   CREATE-MAINTENANCE-WINDOW()
