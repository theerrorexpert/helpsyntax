REGISTER-TARGET-WITH-MAINTENANCE-WINDREGISTER-TARGET-WITH-MAINTENANCE-WINDOW()



NAME
       register-target-with-maintenance-window -

DESCRIPTION
       Registers a target with a maintenance window.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            register-target-with-maintenance-window
          --window-id <value>
          --resource-type <value>
          --targets <value>
          [--owner-information <value>]
          [--name <value>]
          [--description <value>]
          [--client-token <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --window-id (string)
          The  ID  of  the  maintenance window the target should be registered
          with.

       --resource-type (string)
          The type of target being registered with the maintenance window.

          Possible values:

          o INSTANCE

          o RESOURCE_GROUP

       --targets (list)
          The targets to register with the maintenance window. In other words,
          the  managed  nodes  to  run commands on when the maintenance window
          runs.

          NOTE:
              If a single maintenance window task is registered with  multiple
              targets, its task invocations occur sequentially and not in par-
              allel. If your task must run on multiple  targets  at  the  same
              time,  register  a  task for each target individually and assign
              each task the same priority level.

          You can specify targets  using  managed  node  IDs,  resource  group
          names, or tags that have been applied to managed nodes.
              Example 1 : Specify managed node IDs

              Key=InstanceIds,Val-
              ues=<instance-id-1>,<instance-id-2>,<instance-id-3>

              Example 2 : Use tag key-pairs applied to managed nodes

              Key=tag:<my-tag-key>,Values=<my-tag-value-1>,<my-tag-value-2>

              Example 3 : Use tag-keys applied to managed nodes

              Key=tag-key,Values=<my-tag-key-1>,<my-tag-key-2>

              Example 4 : Use resource group names

              Key=resource-groups:Name,Values=<resource-group-name>

              Example 5 : Use filters for resource group types

              Key=resource-groups:ResourceTypeFilters,Val-
              ues=<resource-type-1>,<resource-type-2>

          NOTE:
              For  Key=resource-groups:ResourceTypeFilters  , specify resource
              types in the following format
                 Key=resource-groups:ResourceTypeFilters,Val-
                 ues=AWS::EC2::INSTANCE,AWS::EC2::VPC

          For  more  information  about  these examples formats, including the
          best use case for each one, see Examples: Register  targets  with  a
          maintenance  window  in the Amazon Web Services Systems Manager User
          Guide .

          (structure)
              An array of search criteria that targets managed nodes  using  a
              key-value pair that you specify.

              NOTE:
                 One  or more targets must be specified for maintenance window
                 Run Command-type tasks. Depending on the  task,  targets  are
                 optional for other maintenance window task types (Automation,
                 Lambda, and Step Functions). For more information about  run-
                 ning  tasks that don't specify targets, see Registering main-
                 tenance window tasks without targets in the Amazon  Web  Ser-
                 vices Systems Manager User Guide .

              Supported formats include the following.

              o Key=InstanceIds,Val-
                ues=<instance-id-1>,<instance-id-2>,<instance-id-3>

              o Key=tag:<my-tag-key>,Values=<my-tag-value-1>,<my-tag-value-2>

              o Key=tag-key,Values=<my-tag-key-1>,<my-tag-key-2>

              o Run  Command   and   Maintenance   window   targets   only   :
                Key=resource-groups:Name,Values=<resource-group-name>

              o Maintenance         window        targets        only        :
                Key=resource-groups:ResourceTypeFilters,Val-
                ues=<resource-type-1>,<resource-type-2>

              o Automation     targets     only    :    Key=ResourceGroup;Val-
                ues=<resource-group-name>

              For example:

              o Key=InstanceIds,Values=i-02573cafcfEXAMPLE,i-0471e04240EXAM-
                PLE,i-07782c72faEXAMPLE

              o Key=tag:CostCenter,Values=CostCenter1,CostCenter2,CostCenter3

              o Key=tag-key,Values=Name,Instance-Type,CostCenter

              o Run   Command   and   Maintenance   window   targets   only  :
                Key=resource-groups:Name,Values=ProductionResourceGroup   This
                example  demonstrates  how  to  target  all  resources  in the
                resource group  ProductionResourceGroup  in  your  maintenance
                window.

              o Maintenance         window        targets        only        :
                Key=resource-groups:ResourceTypeFilters,Val-
                ues=AWS::EC2::INSTANCE,AWS::EC2::VPC     This  example  demon-
                strates how to target only Amazon Elastic Compute Cloud  (Ama-
                zon EC2) instances and VPCs in your maintenance window.

              o Automation targets only : Key=ResourceGroup,Values=MyResource-
                Group

              o State Manager association targets only :  Key=InstanceIds,Val-
                ues=*    This  example  demonstrates how to target all managed
                instances in the Amazon Web Services Region where the associa-
                tion was created.

              For more information about how to send commands that target man-
              aged nodes using Key,Value parameters,  see  Targeting  multiple
              instances  in the Amazon Web Services Systems Manager User Guide
              .

              Key -> (string)
                 User-defined criteria for sending commands that  target  man-
                 aged nodes that meet the criteria.

              Values -> (list)
                 User-defined  criteria that maps to Key . For example, if you
                 specified tag:ServerRole , you could specify  value:WebServer
                 to  run  a  command  on  instances  that  include EC2 tags of
                 ServerRole,WebServer .

                 Depending on the type of target, the maximum number of values
                 for a key might be lower than the global maximum of 50.

                 (string)

       Shorthand Syntax:

          Key=string,Values=string,string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Values": ["string", ...]
            }
            ...
          ]

       --owner-information (string)
          User-provided  value  that will be included in any Amazon CloudWatch
          Events events raised while running tasks for these targets  in  this
          maintenance window.

       --name (string)
          An optional name for the target.

       --description (string)
          An optional description for the target.

       --client-token (string)
          User-provided idempotency token.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To register a single target with a maintenance window

       The following register-target-with-maintenance-window example registers
       an instance with a maintenance window.

          aws ssm register-target-with-maintenance-window \
              --window-id "mw-ab12cd34ef56gh78" \
              --target "Key=InstanceIds,Values=i-0000293ffd8c57862" \
              --owner-information "Single instance" \
              --resource-type "INSTANCE"

       Output:

          {
              "WindowTargetId":"1a2b3c4d-1a2b-1a2b-1a2b-1a2b3c4d-1a2"
          }

       Example 2: To register multiple targets with a maintenance window using
       instance IDs

       The following register-target-with-maintenance-window example registers
       two instances with a maintenance window by  specifying  their  instance
       IDs.

          aws ssm register-target-with-maintenance-window \
              --window-id "mw-ab12cd34ef56gh78" \
              --target "Key=InstanceIds,Values=i-0000293ffd8c57862,i-0cb2b964d3e14fd9f" \
              --owner-information "Two instances in a list" \
              --resource-type "INSTANCE"

       Output:

          {
              "WindowTargetId":"1a2b3c4d-1a2b-1a2b-1a2b-1a2b3c4d-1a2"
          }

       Example 3: To register targets with a maintenance window using resource
       tags

       The following register-target-with-maintenance-window example registers
       instances  with  a  maintenance window by specifying resource tags that
       have been applied to the instances.

          aws ssm register-target-with-maintenance-window \
              --window-id "mw-06cf17cbefcb4bf4f" \
              --targets "Key=tag:Environment,Values=Prod" "Key=Role,Values=Web" \
              --owner-information "Production Web Servers" \
              --resource-type "INSTANCE"

       Output:

          {
              "WindowTargetId":"1a2b3c4d-1a2b-1a2b-1a2b-1a2b3c4d-1a2"
          }

       Example 4: To register targets using a group of tag keys

       The following register-target-with-maintenance-window example  register
       instances  that all have one or more tag keys assigned to them, regard-
       less of their key values.

          aws ssm register-target-with-maintenance-window \
              --window-id "mw-0c50858d01EXAMPLE" \
              --resource-type "INSTANCE" \
              --target "Key=tag-key,Values=Name,Instance-Type,CostCenter"

       Output:

          {
              "WindowTargetId":"1a2b3c4d-1a2b-1a2b-1a2b-1a2b3c4d-1a2"
          }

       Example 5: To register targets using a resource group name

       The following register-target-with-maintenance-window example  register
       a specified resource group, regardless of the type of resources it con-
       tains.

          aws ssm register-target-with-maintenance-window \
              --window-id "mw-0c50858d01EXAMPLE" \
              --resource-type "RESOURCE_GROUP" \
              --target "Key=resource-groups:Name,Values=MyResourceGroup"

       Output:

          {
              "WindowTargetId":"1a2b3c4d-1a2b-1a2b-1a2b-1a2b3c4d-1a2"
          }

       For more information, see Register a Target Instance with  the  Mainte-
       nance Window (AWS CLI) in the AWS Systems Manager User Guide.

OUTPUT
       WindowTargetId -> (string)
          The ID of the target definition in this maintenance window.



                                     REGISTER-TARGET-WITH-MAINTENANCE-WINDOW()
