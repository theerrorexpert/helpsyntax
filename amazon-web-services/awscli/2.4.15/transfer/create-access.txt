CREATE-ACCESS()                                                CREATE-ACCESS()



NAME
       create-access -

DESCRIPTION
       Used  by  administrators to choose which groups in the directory should
       have access to upload and download files  over  the  enabled  protocols
       using  Amazon  Web  Services  Transfer Family. For example, a Microsoft
       Active Directory might contain 50,000 users, but only a small  fraction
       might  need the ability to transfer files to the server. An administra-
       tor can use CreateAccess to limit the access  to  the  correct  set  of
       users who need this ability.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-access
          [--home-directory <value>]
          [--home-directory-type <value>]
          [--home-directory-mappings <value>]
          [--policy <value>]
          [--posix-profile <value>]
          --role <value>
          --server-id <value>
          --external-id <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --home-directory (string)
          The  landing  directory  (folder) for a user when they log in to the
          server using the client.

          A HomeDirectory example is /bucket_name/home/mydirectory .

       --home-directory-type (string)
          The type of landing directory (folder) you  want  your  users'  home
          directory to be when they log into the server. If you set it to PATH
          , the user will see the absolute Amazon S3 bucket or EFS paths as is
          in their file transfer protocol clients. If you set it LOGICAL , you
          need to provide mappings in the HomeDirectoryMappings  for  how  you
          want to make Amazon S3 or EFS paths visible to your users.

          Possible values:

          o PATH

          o LOGICAL

       --home-directory-mappings (list)
          Logical directory mappings that specify what Amazon S3 or Amazon EFS
          paths and keys should be visible to your user and how  you  want  to
          make them visible. You must specify the Entry and Target pair, where
          Entry shows how the path is made visible and Target  is  the  actual
          Amazon  S3  or  Amazon EFS path. If you only specify a target, it is
          displayed as is. You also must ensure that your Amazon Web  Services
          Identity  and  Access Management (IAM) role provides access to paths
          in Target . This value can only be set when HomeDirectoryType is set
          to LOGICAL .

          The following is an Entry and Target pair example.
              [  {  "Entry": "/directory1", "Target": "/bucket_name/home/mydi-
              rectory" } ]

          In most cases, you can use this value instead of the session  policy
          to lock down your user to the designated home directory ("chroot ").
          To do this, you can set Entry to / and set Target to the  HomeDirec-
          tory parameter value.

          The following is an Entry and Target pair example for chroot .
              [ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]

          NOTE:
              If the target of a logical directory entry  does  not  exist  in
              Amazon S3 or EFS, the entry is ignored. As a workaround, you can
              use the Amazon S3 API or EFS API to create  0  byte  objects  as
              place  holders  for  your  directory.  If using the CLI, use the
              s3api or efsapi call instead of s3 or efs so  you  can  use  the
              put-object  operation.  For  example, you use the following: aws
              s3api put-object --bucket  bucketname  --key  path/to/folder/  .
              Make  sure that the end of the key name ends in a / for it to be
              considered a folder.

          (structure)
              Represents an object that contains entries and targets for Home-
              DirectoryMappings .

              The following is an Entry and Target pair example for chroot .
                 [  { "Entry:": "/", "Target": "/bucket_name/home/mydirectory"
                 } ]

              NOTE:
                 If the target of a logical directory entry does not exist  in
                 Amazon  S3 or EFS, the entry is ignored. As a workaround, you
                 can use the Amazon S3 API or EFS API to create 0 byte objects
                 as  place  holders  for your directory. If using the CLI, use
                 the s3api or efsapi call instead of s3 or efs so you can  use
                 the put-object operation. For example, you use the following:
                 aws    s3api    put-object    --bucket    bucketname    --key
                 path/to/folder/ . Make sure that the end of the key name ends
                 in a / for it to be considered a folder.

              Entry -> (string)
                 Represents an entry for HomeDirectoryMappings .

              Target -> (string)
                 Represents the map target that  is  used  in  a  HomeDirecto-
                 rymapEntry .

       Shorthand Syntax:

          Entry=string,Target=string ...

       JSON Syntax:

          [
            {
              "Entry": "string",
              "Target": "string"
            }
            ...
          ]

       --policy (string)
          A session policy for your user so that you can use the same IAM role
          across multiple users. This policy scopes down user access  to  por-
          tions  of  their Amazon S3 bucket. Variables that you can use inside
          this policy include ${Transfer:UserName} , ${Transfer:HomeDirectory}
          , and ${Transfer:HomeBucket} .

          NOTE:
              This  only  applies  when the domain of ServerId is S3. EFS does
              not use session policies.

              For session policies, Amazon Web Services Transfer Family stores
              the  policy  as a JSON blob, instead of the Amazon Resource Name
              (ARN) of the policy. You save the policy as a JSON blob and pass
              it in the Policy argument.

              For an example of a session policy, see Example session policy .

              For more information, see AssumeRole in the Amazon Web  Services
              Security Token Service API Reference .

       --posix-profile (structure)
          The  full POSIX identity, including user ID (Uid ), group ID (Gid ),
          and any secondary groups IDs (SecondaryGids ),  that  controls  your
          users' access to your Amazon EFS file systems. The POSIX permissions
          that are set on files and directories in your file system  determine
          the  level of access your users get when transferring files into and
          out of your Amazon EFS file systems.

          Uid -> (long)
              The POSIX user ID used for all EFS operations by this user.

          Gid -> (long)
              The POSIX group ID used for all EFS operations by this user.

          SecondaryGids -> (list)
              The secondary POSIX group IDs used for  all  EFS  operations  by
              this user.

              (long)

       Shorthand Syntax:

          Uid=long,Gid=long,SecondaryGids=long,long

       JSON Syntax:

          {
            "Uid": long,
            "Gid": long,
            "SecondaryGids": [long, ...]
          }

       --role (string)
          Specifies  the  Amazon Resource Name (ARN) of the IAM role that con-
          trols your users' access to your Amazon S3 bucket or EFS  file  sys-
          tem.  The  policies  attached  to  this  role determine the level of
          access that you want to provide your users when  transferring  files
          into  and  out  of your Amazon S3 bucket or EFS file system. The IAM
          role should also contain a trust relationship that allows the server
          to  access  your  resources  when  servicing  your  users'  transfer
          requests.

       --server-id (string)
          A system-assigned unique identifier for a server instance.  This  is
          the specific server that you added your user to.

       --external-id (string)
          A  unique  identifier  that  is required to identify specific groups
          within your directory. The users of the  group  that  you  associate
          have  access  to  your  Amazon  S3  or Amazon EFS resources over the
          enabled protocols using Amazon Web Services Transfer Family. If  you
          know the group name, you can view the SID values by running the fol-
          lowing command using Windows PowerShell.
              Get-ADGroup -Filter {samAccountName -like  "*YourGroupName*  *"}
              -Properties * | Select SamAccountName,ObjectSid

          In  that command, replace YourGroupName with the name of your Active
          Directory group.

          The regex used to validate this parameter is a string of  characters
          consisting  of  uppercase and lowercase alphanumeric characters with
          no spaces. You can also include underscores or any of the  following
          characters: =,.@:/-

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       ServerId -> (string)
          The ID of the server that the user is attached to.

       ExternalId -> (string)
          The  external ID of the group whose users have access to your Amazon
          S3 or Amazon EFS resources over the enabled protocols  using  Amazon
          Web Services Transfer Family.



                                                               CREATE-ACCESS()
