CREATE-AUTO-SCALING-CONFIGURATION()        CREATE-AUTO-SCALING-CONFIGURATION()



NAME
       create-auto-scaling-configuration -

DESCRIPTION
       Create an App Runner automatic scaling configuration resource. App Run-
       ner requires this resource when you create  App  Runner  services  that
       require  non-default auto scaling settings. You can share an auto scal-
       ing configuration across multiple services.

       Create  multiple  revisions  of  a  configuration  by  using  the  same
       AutoScalingConfigurationName  and different AutoScalingConfigurationRe-
       vision values. When you create a service, you can set  it  to  use  the
       latest  active  revision of an auto scaling configuration or a specific
       revision.

       Configure a higher MinSize to increase the spread of  your  App  Runner
       service over more Availability Zones in the Amazon Web Services Region.
       The tradeoff is a higher minimal cost.

       Configure a lower MaxSize to control your cost. The tradeoff  is  lower
       responsiveness during peak demand.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-auto-scaling-configuration
          --auto-scaling-configuration-name <value>
          [--max-concurrency <value>]
          [--min-size <value>]
          [--max-size <value>]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --auto-scaling-configuration-name (string)
          A  name  for the auto scaling configuration. When you use it for the
          first time in an Amazon Web  Services  Region,  App  Runner  creates
          revision number 1 of this name. When you use the same name in subse-
          quent calls, App Runner creates incremental revisions of the config-
          uration.

       --max-concurrency (integer)
          The  maximum number of concurrent requests that you want an instance
          to process. If the number of concurrent requests exceeds this limit,
          App Runner scales up your service.

          Default: 100

       --min-size (integer)
          The  minimum number of instances that App Runner provisions for your
          service.  The  service  always  has  at  least  MinSize  provisioned
          instances.  Some  of  them  actively serve traffic. The rest of them
          (provisioned and inactive instances) are  a  cost-effective  compute
          capacity  reserve and are ready to be quickly activated. You pay for
          memory usage of all the provisioned instances. You pay for CPU usage
          of only the active subset.

          App  Runner  temporarily doubles the number of provisioned instances
          during deployments, to maintain the same capacity for both  old  and
          new code.

          Default: 1

       --max-size (integer)
          The  maximum  number of instances that your service scales up to. At
          most MaxSize instances actively serve traffic for your service.

          Default: 25

       --tags (list)
          A list of metadata items that you can associate with your auto scal-
          ing configuration resource. A tag is a key-value pair.

          (structure)
              Describes a tag that is applied to an App Runner resource. A tag
              is a metadata item consisting of a key-value pair.

              Key -> (string)
                 The key of the tag.

              Value -> (string)
                 The value of the tag.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a high availability auto scaling configuration

       The following create-auto-scaling-configuration example creates an auto
       scaling  configuration  optimized for high availability by setting Min-
       Size to 5.  With this configuration, App Runner attempts to spread your
       service  instances  over  the  most  Availability Zones possible, up to
       five, depending on the AWS Region.

       The call returns an AutoScalingConfiguration object with the other set-
       tings set to their defaults.  In the example, this is the first call to
       create a configuration named high-availability. The revision is set  to
       1, and it's the latest revision.

          aws apprunner create-auto-scaling-configuration \
              --cli-input-json file://input.json

       Contents of input.json:

          {
              "AutoScalingConfigurationName": "high-availability",
              "MinSize": 5
          }

       Output:

          {
              "AutoScalingConfiguration": {
                  "AutoScalingConfigurationArn": "arn:aws:apprunner:us-east-1:123456789012:autoscalingconfiguration/high-availability/1/2f50e7656d7819fead0f59672e68042e",
                  "AutoScalingConfigurationName": "high-availability",
                  "AutoScalingConfigurationRevision": 1,
                  "CreatedAt": "2020-11-03T00:29:17Z",
                  "Latest": true,
                  "Status": "ACTIVE",
                  "MaxConcurrency": 100,
                  "MaxSize": 50,
                  "MinSize": 5
              }
          }

OUTPUT
       AutoScalingConfiguration -> (structure)
          A  description  of  the App Runner auto scaling configuration that's
          created by this request.

          AutoScalingConfigurationArn -> (string)
              The Amazon Resource Name (ARN) of this auto  scaling  configura-
              tion.

          AutoScalingConfigurationName -> (string)
              The customer-provided auto scaling configuration name. It can be
              used in multiple revisions of a configuration.

          AutoScalingConfigurationRevision -> (integer)
              The revision of this auto  scaling  configuration.  It's  unique
              among  all  the active configurations ("Status": "ACTIVE" ) that
              share the same AutoScalingConfigurationName .

          Latest -> (boolean)
              It's set to true for the configuration with the highest Revision
              among  all configurations that share the same Name . It's set to
              false otherwise.

          Status -> (string)
              The current state of the auto scaling configuration. If the sta-
              tus of a configuration revision is INACTIVE , it was deleted and
              can't be used. Inactive configuration revisions are  permanently
              removed some time after they are deleted.

          MaxConcurrency -> (integer)
              The  maximum number of concurrent requests that an instance pro-
              cesses. If the number of concurrent requests exceeds this limit,
              App Runner scales the service up.

          MinSize -> (integer)
              The minimum number of instances that App Runner provisions for a
              service. The service always has  at  least  MinSize  provisioned
              instances. Some of them actively serve traffic. The rest of them
              (provisioned and inactive instances) are a  cost-effective  com-
              pute capacity reserve and are ready to be quickly activated. You
              pay for memory usage of all the provisioned instances.  You  pay
              for CPU usage of only the active subset.

              App   Runner  temporarily  doubles  the  number  of  provisioned
              instances during deployments, to maintain the same capacity  for
              both old and new code.

          MaxSize -> (integer)
              The  maximum number of instances that a service scales up to. At
              most MaxSize instances actively serve traffic for your  service.

          CreatedAt -> (timestamp)
              The  time  when the auto scaling configuration was created. It's
              in Unix time stamp format.

          DeletedAt -> (timestamp)
              The time when the auto scaling configuration was  deleted.  It's
              in Unix time stamp format.



                                           CREATE-AUTO-SCALING-CONFIGURATION()
