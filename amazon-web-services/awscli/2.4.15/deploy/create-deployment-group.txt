CREATE-DEPLOYMENT-GROUP()                            CREATE-DEPLOYMENT-GROUP()



NAME
       create-deployment-group -

DESCRIPTION
       Creates a deployment group to which application revisions are deployed.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-deployment-group
          --application-name <value>
          --deployment-group-name <value>
          [--deployment-config-name <value>]
          [--ec2-tag-filters <value>]
          [--on-premises-instance-tag-filters <value>]
          [--auto-scaling-groups <value>]
          --service-role-arn <value>
          [--trigger-configurations <value>]
          [--alarm-configuration <value>]
          [--auto-rollback-configuration <value>]
          [--outdated-instances-strategy <value>]
          [--deployment-style <value>]
          [--blue-green-deployment-configuration <value>]
          [--load-balancer-info <value>]
          [--ec2-tag-set <value>]
          [--ecs-services <value>]
          [--on-premises-tag-set <value>]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --application-name (string)
          The name of an AWS CodeDeploy application associated  with  the  IAM
          user or AWS account.

       --deployment-group-name (string)
          The name of a new deployment group for the specified application.

       --deployment-config-name (string)
          If specified, the deployment configuration name can be either one of
          the predefined configurations provided with AWS CodeDeploy or a cus-
          tom  deployment  configuration that you create by calling the create
          deployment configuration operation.
              CodeDeployDefault.OneAtATime is the default deployment  configu-
              ration.  It  is  used if a configuration isn't specified for the
              deployment or deployment group.

          For more information about the predefined deployment  configurations
          in  AWS  CodeDeploy,  see  Working with Deployment Configurations in
          CodeDeploy in the AWS CodeDeploy User Guide .

       --ec2-tag-filters (list)
          The Amazon EC2  tags  on  which  to  filter.  The  deployment  group
          includes  EC2  instances  with  any of the specified tags. Cannot be
          used in the same call as ec2TagSet.

          (structure)
              Information about an EC2 tag filter.

              Key -> (string)
                 The tag filter key.

              Value -> (string)
                 The tag filter value.

              Type -> (string)
                 The tag filter type:

                 o KEY_ONLY : Key only.

                 o VALUE_ONLY : Value only.

                 o KEY_AND_VALUE : Key and value.

       Shorthand Syntax:

          Key=string,Value=string,Type=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string",
              "Type": "KEY_ONLY"|"VALUE_ONLY"|"KEY_AND_VALUE"
            }
            ...
          ]

       --on-premises-instance-tag-filters (list)
          The on-premises instance tags on which  to  filter.  The  deployment
          group includes on-premises instances with any of the specified tags.
          Cannot be used in the same call as OnPremisesTagSet .

          (structure)
              Information about an on-premises instance tag filter.

              Key -> (string)
                 The on-premises instance tag filter key.

              Value -> (string)
                 The on-premises instance tag filter value.

              Type -> (string)
                 The on-premises instance tag filter type:

                 o KEY_ONLY: Key only.

                 o VALUE_ONLY: Value only.

                 o KEY_AND_VALUE: Key and value.

       Shorthand Syntax:

          Key=string,Value=string,Type=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string",
              "Type": "KEY_ONLY"|"VALUE_ONLY"|"KEY_AND_VALUE"
            }
            ...
          ]

       --auto-scaling-groups (list)
          A list of associated Amazon EC2 Auto Scaling groups.

          (string)

       Syntax:

          "string" "string" ...

       --service-role-arn (string)
          A service role Amazon Resource Name (ARN) that allows AWS CodeDeploy
          to act on the user's behalf when interacting with AWS services.

       --trigger-configurations (list)
          Information  about  triggers  to create when the deployment group is
          created. For examples, see Create a Trigger for  an  AWS  CodeDeploy
          Event in the AWS CodeDeploy User Guide .

          (structure)
              Information  about  notification  triggers  for  the  deployment
              group.

              triggerName -> (string)
                 The name of the notification trigger.

              triggerTargetArn -> (string)
                 The Amazon Resource Name (ARN) of the Amazon Simple Notifica-
                 tion  Service topic through which notifications about deploy-
                 ment or instance events are sent.

              triggerEvents -> (list)
                 The event type or types for  which  notifications  are  trig-
                 gered.

                 (string)

       Shorthand Syntax:

          triggerName=string,triggerTargetArn=string,triggerEvents=string,string ...

       JSON Syntax:

          [
            {
              "triggerName": "string",
              "triggerTargetArn": "string",
              "triggerEvents": ["DeploymentStart"|"DeploymentSuccess"|"DeploymentFailure"|"DeploymentStop"|"DeploymentRollback"|"DeploymentReady"|"InstanceStart"|"InstanceSuccess"|"InstanceFailure"|"InstanceReady", ...]
            }
            ...
          ]

       --alarm-configuration (structure)
          Information  to  add about Amazon CloudWatch alarms when the deploy-
          ment group is created.

          enabled -> (boolean)
              Indicates whether the alarm configuration is enabled.

          ignorePollAlarmFailure -> (boolean)
              Indicates whether a deployment should  continue  if  information
              about  the current state of alarms cannot be retrieved from Ama-
              zon CloudWatch. The default value is false.

              o true : The deployment proceeds even if alarm  status  informa-
                tion can't be retrieved from Amazon CloudWatch.

              o false : The deployment stops if alarm status information can't
                be retrieved from Amazon CloudWatch.

          alarms -> (list)
              A list of alarms configured for the deployment group. A  maximum
              of 10 alarms can be added to a deployment group.

              (structure)
                 Information about an alarm.

                 name -> (string)
                     The  name of the alarm. Maximum length is 255 characters.
                     Each alarm name can be  used  only  once  in  a  list  of
                     alarms.

       Shorthand Syntax:

          enabled=boolean,ignorePollAlarmFailure=boolean,alarms=[{name=string},{name=string}]

       JSON Syntax:

          {
            "enabled": true|false,
            "ignorePollAlarmFailure": true|false,
            "alarms": [
              {
                "name": "string"
              }
              ...
            ]
          }

       --auto-rollback-configuration (structure)
          Configuration  information  for  an automatic rollback that is added
          when a deployment group is created.

          enabled -> (boolean)
              Indicates whether a defined automatic rollback configuration  is
              currently enabled.

          events -> (list)
              The event type or types that trigger a rollback.

              (string)

       Shorthand Syntax:

          enabled=boolean,events=string,string

       JSON Syntax:

          {
            "enabled": true|false,
            "events": ["DEPLOYMENT_FAILURE"|"DEPLOYMENT_STOP_ON_ALARM"|"DEPLOYMENT_STOP_ON_REQUEST", ...]
          }

       --outdated-instances-strategy (string)
          Indicates   what   happens  when  new  EC2  instances  are  launched
          mid-deployment and do not receive the deployed application revision.

          If this option is set to UPDATE or is unspecified, CodeDeploy initi-
          ates one or more 'auto-update  outdated  instances'  deployments  to
          apply the deployed application revision to the new EC2 instances.

          If  this  option  is  set to IGNORE , CodeDeploy does not initiate a
          deployment to update the new  EC2  instances.  This  may  result  in
          instances having different revisions.

          Possible values:

          o UPDATE

          o IGNORE

       --deployment-style (structure)
          Information  about  the  type of deployment, in-place or blue/green,
          that you want to run and whether to route deployment traffic  behind
          a load balancer.

          deploymentType -> (string)
              Indicates  whether to run an in-place deployment or a blue/green
              deployment.

          deploymentOption -> (string)
              Indicates whether to route deployment traffic behind a load bal-
              ancer.

       Shorthand Syntax:

          deploymentType=string,deploymentOption=string

       JSON Syntax:

          {
            "deploymentType": "IN_PLACE"|"BLUE_GREEN",
            "deploymentOption": "WITH_TRAFFIC_CONTROL"|"WITHOUT_TRAFFIC_CONTROL"
          }

       --blue-green-deployment-configuration (structure)
          Information  about  blue/green  deployment  options for a deployment
          group.

          terminateBlueInstancesOnDeploymentSuccess -> (structure)
              Information about whether to terminate instances in the original
              fleet during a blue/green deployment.

              action -> (string)
                 The  action  to take on instances in the original environment
                 after a successful blue/green deployment.

                 o TERMINATE : Instances are terminated after a specified wait
                   time.

                 o KEEP_ALIVE  :  Instances  are  left  running after they are
                   deregistered from the load balancer and  removed  from  the
                   deployment group.

              terminationWaitTimeInMinutes -> (integer)
                 For  an  Amazon EC2 deployment, the number of minutes to wait
                 after a successful blue/green deployment  before  terminating
                 instances from the original environment.

                 For  an  Amazon  ECS deployment, the number of minutes before
                 deleting the original (blue) task set. During an  Amazon  ECS
                 deployment,  CodeDeploy  shifts  traffic  from  the  original
                 (blue) task set to a replacement (green) task set.

                 The maximum setting is 2880 minutes (2 days).

          deploymentReadyOption -> (structure)
              Information about the action  to  take  when  newly  provisioned
              instances  are  ready to receive traffic in a blue/green deploy-
              ment.

              actionOnTimeout -> (string)
                 Information about when to reroute traffic  from  an  original
                 environment  to  a  replacement  environment  in a blue/green
                 deployment.

                 o CONTINUE_DEPLOYMENT: Register new instances with  the  load
                   balancer  immediately after the new application revision is
                   installed on the instances in the replacement  environment.

                 o STOP_DEPLOYMENT:  Do not register new instances with a load
                   balancer unless traffic rerouting is started using  Contin-
                   ueDeployment  .  If traffic rerouting is not started before
                   the end of the specified wait period, the deployment status
                   is changed to Stopped.

              waitTimeInMinutes -> (integer)
                 The  number  of  minutes  to  wait  before  the  status  of a
                 blue/green deployment is changed to Stopped if  rerouting  is
                 not  started  manually.  Applies  only to the STOP_DEPLOYMENT
                 option for actionOnTimeout .

          greenFleetProvisioningOption -> (structure)
              Information about how instances are provisioned for  a  replace-
              ment environment in a blue/green deployment.

              action -> (string)
                 The  method  used  to add instances to a replacement environ-
                 ment.

                 o DISCOVER_EXISTING : Use instances  that  already  exist  or
                   will be created manually.

                 o COPY_AUTO_SCALING_GROUP  :  Use  settings  from a specified
                   Auto Scaling group to define and create instances in a  new
                   Auto Scaling group.

       Shorthand Syntax:

          terminateBlueInstancesOnDeploymentSuccess={action=string,terminationWaitTimeInMinutes=integer},deploymentReadyOption={actionOnTimeout=string,waitTimeInMinutes=integer},greenFleetProvisioningOption={action=string}

       JSON Syntax:

          {
            "terminateBlueInstancesOnDeploymentSuccess": {
              "action": "TERMINATE"|"KEEP_ALIVE",
              "terminationWaitTimeInMinutes": integer
            },
            "deploymentReadyOption": {
              "actionOnTimeout": "CONTINUE_DEPLOYMENT"|"STOP_DEPLOYMENT",
              "waitTimeInMinutes": integer
            },
            "greenFleetProvisioningOption": {
              "action": "DISCOVER_EXISTING"|"COPY_AUTO_SCALING_GROUP"
            }
          }

       --load-balancer-info (structure)
          Information about the load balancer used in a deployment.

          elbInfoList -> (list)
              An  array  that  contains information about the load balancer to
              use for load balancing in a deployment. In Elastic Load  Balanc-
              ing, load balancers are used with Classic Load Balancers.

              NOTE:
                 Adding  more  than one load balancer to the array is not sup-
                 ported.

              (structure)
                 Information about a load balancer in Elastic  Load  Balancing
                 to  use  in  a  deployment. Instances are registered directly
                 with a load balancer, and traffic is routed to the load  bal-
                 ancer.

                 name -> (string)
                     For blue/green deployments, the name of the load balancer
                     that is used to route traffic from original instances  to
                     replacement  instances  in  a  blue/green deployment. For
                     in-place deployments, the name of the load balancer  that
                     instances  are  deregistered from so they are not serving
                     traffic during a deployment, and then re-registered  with
                     after the deployment is complete.

          targetGroupInfoList -> (list)
              An array that contains information about the target group to use
              for load balancing in a deployment. In Elastic  Load  Balancing,
              target groups are used with Application Load Balancers.

              NOTE:
                 Adding  more  than  one target group to the array is not sup-
                 ported.

              (structure)
                 Information about a target group in Elastic Load Balancing to
                 use in a deployment. Instances are registered as targets in a
                 target group, and traffic is routed to the target group.

                 name -> (string)
                     For blue/green deployments, the name of the target  group
                     that  instances  in the original environment are deregis-
                     tered from, and instances in the replacement  environment
                     are  registered  with. For in-place deployments, the name
                     of the target group that instances are deregistered from,
                     so  they are not serving traffic during a deployment, and
                     then re-registered with after the deployment is complete.

          targetGroupPairInfoList -> (list)
              The  target  group  pair information. This is an array of Targe-
              GroupPairInfo objects with a maximum size of one.

              (structure)
                 Information about two target groups and how traffic is routed
                 during  an  Amazon  ECS  deployment. An optional test traffic
                 route can be specified.

                 targetGroups -> (list)
                     One pair of target groups. One  is  associated  with  the
                     original task set. The second is associated with the task
                     set that serves traffic after the deployment is complete.

                     (structure)
                        Information  about a target group in Elastic Load Bal-
                        ancing to use in a deployment.  Instances  are  regis-
                        tered  as  targets  in  a target group, and traffic is
                        routed to the target group.

                        name -> (string)
                            For blue/green deployments, the name of the target
                            group  that  instances in the original environment
                            are  deregistered  from,  and  instances  in   the
                            replacement  environment  are registered with. For
                            in-place deployments, the name of the target group
                            that  instances are deregistered from, so they are
                            not serving traffic during a deployment, and  then
                            re-registered  with  after  the deployment is com-
                            plete.

                 prodTrafficRoute -> (structure)
                     The path used by a  load  balancer  to  route  production
                     traffic when an Amazon ECS deployment is complete.

                     listenerArns -> (list)
                        The  Amazon  Resource  Name (ARN) of one listener. The
                        listener identifies the route between a  target  group
                        and  a load balancer. This is an array of strings with
                        a maximum size of one.

                        (string)

                 testTrafficRoute -> (structure)
                     An optional path used by a load balancer  to  route  test
                     traffic  after  an  Amazon ECS deployment. Validation can
                     occur while test traffic is served during a deployment.

                     listenerArns -> (list)
                        The Amazon Resource Name (ARN) of  one  listener.  The
                        listener  identifies  the route between a target group
                        and a load balancer. This is an array of strings  with
                        a maximum size of one.

                        (string)

       JSON Syntax:

          {
            "elbInfoList": [
              {
                "name": "string"
              }
              ...
            ],
            "targetGroupInfoList": [
              {
                "name": "string"
              }
              ...
            ],
            "targetGroupPairInfoList": [
              {
                "targetGroups": [
                  {
                    "name": "string"
                  }
                  ...
                ],
                "prodTrafficRoute": {
                  "listenerArns": ["string", ...]
                },
                "testTrafficRoute": {
                  "listenerArns": ["string", ...]
                }
              }
              ...
            ]
          }

       --ec2-tag-set (structure)
          Information  about  groups  of  tags  applied  to EC2 instances. The
          deployment group includes only EC2 instances identified by  all  the
          tag groups. Cannot be used in the same call as ec2TagFilters .

          ec2TagSetList -> (list)
              A list that contains other lists of EC2 instance tag groups. For
              an instance to be included in the deployment group, it  must  be
              identified by all of the tag groups in the list.

              (list)
                 (structure)
                     Information about an EC2 tag filter.

                     Key -> (string)
                        The tag filter key.

                     Value -> (string)
                        The tag filter value.

                     Type -> (string)
                        The tag filter type:

                        o KEY_ONLY : Key only.

                        o VALUE_ONLY : Value only.

                        o KEY_AND_VALUE : Key and value.

       JSON Syntax:

          {
            "ec2TagSetList": [
              [
                {
                  "Key": "string",
                  "Value": "string",
                  "Type": "KEY_ONLY"|"VALUE_ONLY"|"KEY_AND_VALUE"
                }
                ...
              ]
              ...
            ]
          }

       --ecs-services (list)
          The target Amazon ECS services in the deployment group. This applies
          only to deployment groups that use the Amazon ECS compute  platform.
          A  target  Amazon  ECS service is specified as an Amazon ECS cluster
          and service name pair using the format <clustername>:<servicename> .

          (structure)
              Contains  the service and cluster names used to identify an Ama-
              zon ECS deployment's target.

              serviceName -> (string)
                 The name of the target Amazon ECS service.

              clusterName -> (string)
                 The name of the cluster that the Amazon ECS service is  asso-
                 ciated with.

       Shorthand Syntax:

          serviceName=string,clusterName=string ...

       JSON Syntax:

          [
            {
              "serviceName": "string",
              "clusterName": "string"
            }
            ...
          ]

       --on-premises-tag-set (structure)
          Information  about  groups of tags applied to on-premises instances.
          The deployment group includes only on-premises instances  identified
          by  all  of  the  tag  groups.  Cannot  be  used in the same call as
          onPremisesInstanceTagFilters .

          onPremisesTagSetList -> (list)
              A list that contains other lists  of  on-premises  instance  tag
              groups.  For an instance to be included in the deployment group,
              it must be identified by all of the tag groups in the list.

              (list)
                 (structure)
                     Information about an on-premises instance tag filter.

                     Key -> (string)
                        The on-premises instance tag filter key.

                     Value -> (string)
                        The on-premises instance tag filter value.

                     Type -> (string)
                        The on-premises instance tag filter type:

                        o KEY_ONLY: Key only.

                        o VALUE_ONLY: Value only.

                        o KEY_AND_VALUE: Key and value.

       JSON Syntax:

          {
            "onPremisesTagSetList": [
              [
                {
                  "Key": "string",
                  "Value": "string",
                  "Type": "KEY_ONLY"|"VALUE_ONLY"|"KEY_AND_VALUE"
                }
                ...
              ]
              ...
            ]
          }

       --tags (list)
          The metadata that you apply to CodeDeploy deployment groups to  help
          you  organize and categorize them. Each tag consists of a key and an
          optional value, both of which you define.

          (structure)
              Information about a tag.

              Key -> (string)
                 The tag's key.

              Value -> (string)
                 The tag's value.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a deployment group

       The following  create-deployment-group  example  creates  a  deployment
       group  and  associates it with the specified application and the user's
       AWS account.

          aws deploy create-deployment-group \
              --application-name WordPress_App \
              --auto-scaling-groups CodeDeployDemo-ASG \
              --deployment-config-name CodeDeployDefault.OneAtATime \
              --deployment-group-name WordPress_DG \
              --ec2-tag-filters Key=Name,Value=CodeDeployDemo,Type=KEY_AND_VALUE \
              --service-role-arn arn:aws:iam::123456789012:role/CodeDeployDemoRole

       Output:

          {
              "deploymentGroupId": "a1b2c3d4-5678-90ab-cdef-11111EXAMPLE"
          }

OUTPUT
       deploymentGroupId -> (string)
          A unique deployment group ID.



                                                     CREATE-DEPLOYMENT-GROUP()
