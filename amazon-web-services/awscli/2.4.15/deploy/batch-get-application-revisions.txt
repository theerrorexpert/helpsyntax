BATCH-GET-APPLICATION-REVISIONS()            BATCH-GET-APPLICATION-REVISIONS()



NAME
       batch-get-application-revisions -

DESCRIPTION
       Gets  information  about one or more application revisions. The maximum
       number of application revisions that can be returned is 25.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            batch-get-application-revisions
          --application-name <value>
          --revisions <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --application-name (string)
          The name of an AWS CodeDeploy application about which to  get  revi-
          sion information.

       --revisions (list)
          An array of RevisionLocation objects that specify information to get
          about the application revisions, including type  and  location.  The
          maximum number of RevisionLocation objects you can specify is 25.

          (structure)
              Information about the location of an application revision.

              revisionType -> (string)
                 The type of application revision:

                 o S3: An application revision stored in Amazon S3.

                 o GitHub:   An   application   revision   stored   in  GitHub
                   (EC2/On-premises deployments only).

                 o String: A  YAML-formatted  or  JSON-formatted  string  (AWS
                   Lambda deployments only).

                 o AppSpecContent:  An AppSpecContent object that contains the
                   contents of an AppSpec file for an AWS Lambda or Amazon ECS
                   deployment. The content is formatted as JSON or YAML stored
                   as a RawString.

              s3Location -> (structure)
                 Information about the location of a revision stored in Amazon
                 S3.

                 bucket -> (string)
                     The  name  of  the Amazon S3 bucket where the application
                     revision is stored.

                 key -> (string)
                     The name of the Amazon S3 object that represents the bun-
                     dled artifacts for the application revision.

                 bundleType -> (string)
                     The file type of the application revision. Must be one of
                     the following:

                     o tar : A tar archive file.

                     o tgz : A compressed tar archive file.

                     o zip : A zip archive file.

                 version -> (string)
                     A specific version of the Amazon S3  object  that  repre-
                     sents the bundled artifacts for the application revision.

                     If the version is not specified, the system uses the most
                     recent version by default.

                 eTag -> (string)
                     The ETag of the Amazon S3 object that represents the bun-
                     dled artifacts for the application revision.

                     If the ETag is not specified as an input parameter,  ETag
                     validation of the object is skipped.

              gitHubLocation -> (structure)
                 Information  about  the  location  of  application  artifacts
                 stored in GitHub.

                 repository -> (string)
                     The GitHub account and repository pair that stores a ref-
                     erence  to  the  commit that represents the bundled arti-
                     facts for the application revision.

                     Specified as account/repository.

                 commitId -> (string)
                     The SHA1 commit ID of the GitHub commit  that  represents
                     the bundled artifacts for the application revision.

              string -> (structure)
                 Information  about  the  location of an AWS Lambda deployment
                 revision stored as a RawString.

                 content -> (string)
                     The YAML-formatted or JSON-formatted revision string.  It
                     includes  information  about  which  Lambda  function  to
                     update  and  optional  Lambda  functions  that   validate
                     deployment lifecycle events.

                 sha256 -> (string)
                     The SHA256 hash value of the revision content.

              appSpecContent -> (structure)
                 The  content  of  an AppSpec file for an AWS Lambda or Amazon
                 ECS deployment. The content is formatted as JSON or YAML  and
                 stored as a RawString.

                 content -> (string)
                     The YAML-formatted or JSON-formatted revision string.

                     For  an  AWS  Lambda  deployment,  the content includes a
                     Lambda function name, the alias for its original version,
                     and the alias for its replacement version. The deployment
                     shifts traffic from the original version  of  the  Lambda
                     function to the replacement version.

                     For  an  Amazon  ECS deployment, the content includes the
                     task name,  information  about  the  load  balancer  that
                     serves traffic to the container, and more.

                     For  both  types  of deployments, the content can specify
                     Lambda functions that run at  specified  hooks,  such  as
                     BeforeInstall , during a deployment.

                 sha256 -> (string)
                     The SHA256 hash value of the revision content.

       Shorthand Syntax:

          revisionType=string,s3Location={bucket=string,key=string,bundleType=string,version=string,eTag=string},gitHubLocation={repository=string,commitId=string},string={content=string,sha256=string},appSpecContent={content=string,sha256=string} ...

       JSON Syntax:

          [
            {
              "revisionType": "S3"|"GitHub"|"String"|"AppSpecContent",
              "s3Location": {
                "bucket": "string",
                "key": "string",
                "bundleType": "tar"|"tgz"|"zip"|"YAML"|"JSON",
                "version": "string",
                "eTag": "string"
              },
              "gitHubLocation": {
                "repository": "string",
                "commitId": "string"
              },
              "string": {
                "content": "string",
                "sha256": "string"
              },
              "appSpecContent": {
                "content": "string",
                "sha256": "string"
              }
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To retrieve information about application revisions

       The  following batch-get-application-revisions example retrieves infor-
       mation about the specified revision stored in a GitHub repository.

          aws deploy batch-get-application-revisions \
              --application-name my-codedeploy-application \
              --revisions "[{\"gitHubLocation\": {\"commitId\": \"fa85936EXAMPLEa31736c051f10d77297EXAMPLE\",\"repository\": \"my-github-token/my-repository\"},\"revisionType\": \"GitHub\"}]"

       Output:

          {
              "revisions": [
                  {
                      "genericRevisionInfo": {
                          "description": "Application revision registered by Deployment ID: d-A1B2C3111",
                          "lastUsedTime": 1556912355.884,
                          "registerTime": 1556912355.884,
                          "firstUsedTime": 1556912355.884,
                          "deploymentGroups": []
                      },
                      "revisionLocation": {
                          "revisionType": "GitHub",
                          "gitHubLocation": {
                              "commitId": "fa85936EXAMPLEa31736c051f10d77297EXAMPLE",
                              "repository": "my-github-token/my-repository"
                          }
                      }
                  }
              ],
              "applicationName": "my-codedeploy-application",
              "errorMessage": ""
          }

       For more information, see BatchGetApplicationRevisions in the AWS  Cod-
       eDeploy API Reference.

OUTPUT
       applicationName -> (string)
          The name of the application that corresponds to the revisions.

       errorMessage -> (string)
          Information  about  errors  that  might have occurred during the API
          call.

       revisions -> (list)
          Additional information about the revisions, including the  type  and
          location.

          (structure)
              Information about an application revision.

              revisionLocation -> (structure)
                 Information  about  the  location  and type of an application
                 revision.

                 revisionType -> (string)
                     The type of application revision:

                     o S3: An application revision stored in Amazon S3.

                     o GitHub:  An  application  revision  stored  in   GitHub
                       (EC2/On-premises deployments only).

                     o String:  A YAML-formatted or JSON-formatted string (AWS
                       Lambda deployments only).

                     o AppSpecContent: An AppSpecContent object that  contains
                       the  contents  of  an AppSpec file for an AWS Lambda or
                       Amazon ECS deployment. The content is formatted as JSON
                       or YAML stored as a RawString.

                 s3Location -> (structure)
                     Information  about  the  location of a revision stored in
                     Amazon S3.

                     bucket -> (string)
                        The name of the Amazon S3 bucket where the application
                        revision is stored.

                     key -> (string)
                        The  name  of the Amazon S3 object that represents the
                        bundled artifacts for the application revision.

                     bundleType -> (string)
                        The file type of the application revision. Must be one
                        of the following:

                        o tar : A tar archive file.

                        o tgz : A compressed tar archive file.

                        o zip : A zip archive file.

                     version -> (string)
                        A specific version of the Amazon S3 object that repre-
                        sents the bundled artifacts for the application  revi-
                        sion.

                        If  the  version is not specified, the system uses the
                        most recent version by default.

                     eTag -> (string)
                        The ETag of the Amazon S3 object that  represents  the
                        bundled artifacts for the application revision.

                        If  the  ETag  is not specified as an input parameter,
                        ETag validation of the object is skipped.

                 gitHubLocation -> (structure)
                     Information about the location of  application  artifacts
                     stored in GitHub.

                     repository -> (string)
                        The  GitHub  account and repository pair that stores a
                        reference to the commit that  represents  the  bundled
                        artifacts for the application revision.

                        Specified as account/repository.

                     commitId -> (string)
                        The  SHA1  commit  ID of the GitHub commit that repre-
                        sents the bundled artifacts for the application  revi-
                        sion.

                 string -> (structure)
                     Information  about  the location of an AWS Lambda deploy-
                     ment revision stored as a RawString.

                     content -> (string)
                        The YAML-formatted or JSON-formatted revision  string.
                        It includes information about which Lambda function to
                        update and optional  Lambda  functions  that  validate
                        deployment lifecycle events.

                     sha256 -> (string)
                        The SHA256 hash value of the revision content.

                 appSpecContent -> (structure)
                     The  content of an AppSpec file for an AWS Lambda or Ama-
                     zon ECS deployment. The content is formatted as  JSON  or
                     YAML and stored as a RawString.

                     content -> (string)
                        The  YAML-formatted or JSON-formatted revision string.

                        For an AWS Lambda deployment, the content  includes  a
                        Lambda  function name, the alias for its original ver-
                        sion, and the alias for its replacement  version.  The
                        deployment shifts traffic from the original version of
                        the Lambda function to the replacement version.

                        For an Amazon ECS deployment, the content includes the
                        task  name,  information  about the load balancer that
                        serves traffic to the container, and more.

                        For both types of deployments, the content can specify
                        Lambda  functions that run at specified hooks, such as
                        BeforeInstall , during a deployment.

                     sha256 -> (string)
                        The SHA256 hash value of the revision content.

              genericRevisionInfo -> (structure)
                 Information about an application  revision,  including  usage
                 details and associated deployment groups.

                 description -> (string)
                     A comment about the revision.

                 deploymentGroups -> (list)
                     The  deployment groups for which this is the current tar-
                     get revision.

                     (string)

                 firstUsedTime -> (timestamp)
                     When the revision was first used by AWS CodeDeploy.

                 lastUsedTime -> (timestamp)
                     When the revision was last used by AWS CodeDeploy.

                 registerTime -> (timestamp)
                     When the revision was registered with AWS CodeDeploy.



                                             BATCH-GET-APPLICATION-REVISIONS()
