GET-DEPLOYMENT-CONFIG()                                GET-DEPLOYMENT-CONFIG()



NAME
       get-deployment-config -

DESCRIPTION
       Gets information about a deployment configuration.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-deployment-config
          --deployment-config-name <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --deployment-config-name (string)
          The  name of a deployment configuration associated with the IAM user
          or AWS account.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To get information about a deployment configuration

       The following get-deployment-config example displays information  about
       a  deployment  configuration  that  is  associated  with the user's AWS
       account.

          aws deploy get-deployment-config --deployment-config-name ThreeQuartersHealthy

       Output:

          {
              "deploymentConfigInfo": {
                  "deploymentConfigId": "a1b2c3d4-5678-90ab-cdef-11111EXAMPLE",
                  "minimumHealthyHosts": {
                      "type": "FLEET_PERCENT",
                      "value": 75
                  },
                  "createTime": 1411081164.379,
                  "deploymentConfigName": "ThreeQuartersHealthy"
              }
          }

OUTPUT
       deploymentConfigInfo -> (structure)
          Information about the deployment configuration.

          deploymentConfigId -> (string)
              The deployment configuration ID.

          deploymentConfigName -> (string)
              The deployment configuration name.

          minimumHealthyHosts -> (structure)
              Information about the number or percentage  of  minimum  healthy
              instance.

              type -> (string)
                 The minimum healthy instance type:

                 o HOST_COUNT  : The minimum number of healthy instances as an
                   absolute value.

                 o FLEET_PERCENT : The minimum number of healthy instances  as
                   a  percentage  of  the  total  number  of  instances in the
                   deployment.

                 In an example of nine instances, if a HOST_COUNT  of  six  is
                 specified,  deploy  to  up  to three instances at a time. The
                 deployment  is  successful  if  six  or  more  instances  are
                 deployed to successfully. Otherwise, the deployment fails. If
                 a FLEET_PERCENT of 40 is specified,  deploy  to  up  to  five
                 instances  at a time. The deployment is successful if four or
                 more instances are deployed to successfully.  Otherwise,  the
                 deployment fails.

                 NOTE:
                     In  a  call  to  the  GetDeploymentConfig , CodeDeployDe-
                     fault.OneAtATime returns a minimum healthy instance  type
                     of  MOST_CONCURRENCY  and  a  value  of  1.  This means a
                     deployment to only one instance at a  time.  (You  cannot
                     set  the  type to MOST_CONCURRENCY, only to HOST_COUNT or
                     FLEET_PERCENT.)   In   addition,    with    CodeDeployDe-
                     fault.OneAtATime,  AWS CodeDeploy attempts to ensure that
                     all instances but one are kept in a healthy state  during
                     the  deployment.  Although  this allows one instance at a
                     time to be taken offline for a new  deployment,  it  also
                     means  that if the deployment to the last instance fails,
                     the overall deployment is still successful.

                 For more information, see AWS CodeDeploy Instance  Health  in
                 the AWS CodeDeploy User Guide .

              value -> (integer)
                 The minimum healthy instance value.

          createTime -> (timestamp)
              The time at which the deployment configuration was created.

          computePlatform -> (string)
              The  destination  platform  type  for  the  deployment (Lambda ,
              Server , or ECS ).

          trafficRoutingConfig -> (structure)
              The configuration that specifies how the deployment  traffic  is
              routed.  Used for deployments with a Lambda or ECS compute plat-
              form only.

              type -> (string)
                 The type of traffic shifting (TimeBasedCanary  or  TimeBased-
                 Linear ) used by a deployment configuration.

              timeBasedCanary -> (structure)
                 A  configuration  that  shifts  traffic from one version of a
                 Lambda function or ECS task set to another in two increments.
                 The  original and target Lambda function versions or ECS task
                 sets are specified in the deployment's AppSpec file.

                 canaryPercentage -> (integer)
                     The percentage of traffic to shift in the first increment
                     of a TimeBasedCanary deployment.

                 canaryInterval -> (integer)
                     The  number of minutes between the first and second traf-
                     fic shifts of a TimeBasedCanary deployment.

              timeBasedLinear -> (structure)
                 A configuration that shifts traffic from  one  version  of  a
                 Lambda  function  or  ECS task set to another in equal incre-
                 ments, with an equal number of minutes  between  each  incre-
                 ment. The original and target Lambda function versions or ECS
                 task sets are specified in the deployment's AppSpec file.

                 linearPercentage -> (integer)
                     The percentage of traffic that is shifted at the start of
                     each increment of a TimeBasedLinear deployment.

                 linearInterval -> (integer)
                     The  number  of  minutes between each incremental traffic
                     shift of a TimeBasedLinear deployment.



                                                       GET-DEPLOYMENT-CONFIG()
