GET-DEPLOYMENT-GROUP()                                  GET-DEPLOYMENT-GROUP()



NAME
       get-deployment-group -

DESCRIPTION
       Gets information about a deployment group.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-deployment-group
          --application-name <value>
          --deployment-group-name <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --application-name (string)
          The  name  of  an AWS CodeDeploy application associated with the IAM
          user or AWS account.

       --deployment-group-name (string)
          The name of a deployment group for the specified application.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To view information about a deployment group

       The following get-deployment-group example displays information about a
       deployment group that is associated with the specified application.

          aws deploy get-deployment-group \
              --application-name WordPress_App \
              --deployment-group-name WordPress_DG

       Output:

          {
              "deploymentGroupInfo": {
                  "applicationName": "WordPress_App",
                  "autoScalingGroups": [
                      "CodeDeployDemo-ASG"
                  ],
                  "deploymentConfigName": "CodeDeployDefault.OneAtATime",
                  "ec2TagFilters": [
                      {
                          "Type": "KEY_AND_VALUE",
                          "Value": "CodeDeployDemo",
                          "Key": "Name"
                      }
                  ],
                  "deploymentGroupId": "a1b2c3d4-5678-90ab-cdef-11111EXAMPLE",
                  "serviceRoleArn": "arn:aws:iam::123456789012:role/CodeDeployDemoRole",
                  "deploymentGroupName": "WordPress_DG"
              }
          }

OUTPUT
       deploymentGroupInfo -> (structure)
          Information about the deployment group.

          applicationName -> (string)
              The application name.

          deploymentGroupId -> (string)
              The deployment group ID.

          deploymentGroupName -> (string)
              The deployment group name.

          deploymentConfigName -> (string)
              The deployment configuration name.

          ec2TagFilters -> (list)
              The  Amazon  EC2  tags  on which to filter. The deployment group
              includes EC2 instances with any of the specified tags.

              (structure)
                 Information about an EC2 tag filter.

                 Key -> (string)
                     The tag filter key.

                 Value -> (string)
                     The tag filter value.

                 Type -> (string)
                     The tag filter type:

                     o KEY_ONLY : Key only.

                     o VALUE_ONLY : Value only.

                     o KEY_AND_VALUE : Key and value.

          onPremisesInstanceTagFilters -> (list)
              The on-premises instance tags on which to filter. The deployment
              group  includes  on-premises instances with any of the specified
              tags.

              (structure)
                 Information about an on-premises instance tag filter.

                 Key -> (string)
                     The on-premises instance tag filter key.

                 Value -> (string)
                     The on-premises instance tag filter value.

                 Type -> (string)
                     The on-premises instance tag filter type:

                     o KEY_ONLY: Key only.

                     o VALUE_ONLY: Value only.

                     o KEY_AND_VALUE: Key and value.

          autoScalingGroups -> (list)
              A list of associated Auto Scaling groups.

              (structure)
                 Information about an Auto Scaling group.

                 name -> (string)
                     The Auto Scaling group name.

                 hook -> (string)
                     An Auto Scaling lifecycle event hook name.

          serviceRoleArn -> (string)
              A service role Amazon Resource Name (ARN) that grants CodeDeploy
              permission  to  make  calls  to AWS services on your behalf. For
              more information, see Create a Service Role for  AWS  CodeDeploy
              in the AWS CodeDeploy User Guide .

          targetRevision -> (structure)
              Information   about  the  deployment  group's  target  revision,
              including type and location.

              revisionType -> (string)
                 The type of application revision:

                 o S3: An application revision stored in Amazon S3.

                 o GitHub:  An   application   revision   stored   in   GitHub
                   (EC2/On-premises deployments only).

                 o String:  A  YAML-formatted  or  JSON-formatted  string (AWS
                   Lambda deployments only).

                 o AppSpecContent: An AppSpecContent object that contains  the
                   contents of an AppSpec file for an AWS Lambda or Amazon ECS
                   deployment. The content is formatted as JSON or YAML stored
                   as a RawString.

              s3Location -> (structure)
                 Information about the location of a revision stored in Amazon
                 S3.

                 bucket -> (string)
                     The name of the Amazon S3 bucket  where  the  application
                     revision is stored.

                 key -> (string)
                     The name of the Amazon S3 object that represents the bun-
                     dled artifacts for the application revision.

                 bundleType -> (string)
                     The file type of the application revision. Must be one of
                     the following:

                     o tar : A tar archive file.

                     o tgz : A compressed tar archive file.

                     o zip : A zip archive file.

                 version -> (string)
                     A  specific  version  of the Amazon S3 object that repre-
                     sents the bundled artifacts for the application revision.

                     If the version is not specified, the system uses the most
                     recent version by default.

                 eTag -> (string)
                     The ETag of the Amazon S3 object that represents the bun-
                     dled artifacts for the application revision.

                     If  the ETag is not specified as an input parameter, ETag
                     validation of the object is skipped.

              gitHubLocation -> (structure)
                 Information  about  the  location  of  application  artifacts
                 stored in GitHub.

                 repository -> (string)
                     The GitHub account and repository pair that stores a ref-
                     erence to the commit that represents  the  bundled  arti-
                     facts for the application revision.

                     Specified as account/repository.

                 commitId -> (string)
                     The  SHA1  commit ID of the GitHub commit that represents
                     the bundled artifacts for the application revision.

              string -> (structure)
                 Information about the location of an  AWS  Lambda  deployment
                 revision stored as a RawString.

                 content -> (string)
                     The  YAML-formatted or JSON-formatted revision string. It
                     includes  information  about  which  Lambda  function  to
                     update   and  optional  Lambda  functions  that  validate
                     deployment lifecycle events.

                 sha256 -> (string)
                     The SHA256 hash value of the revision content.

              appSpecContent -> (structure)
                 The content of an AppSpec file for an AWS  Lambda  or  Amazon
                 ECS  deployment. The content is formatted as JSON or YAML and
                 stored as a RawString.

                 content -> (string)
                     The YAML-formatted or JSON-formatted revision string.

                     For an AWS Lambda  deployment,  the  content  includes  a
                     Lambda function name, the alias for its original version,
                     and the alias for its replacement version. The deployment
                     shifts  traffic  from  the original version of the Lambda
                     function to the replacement version.

                     For an Amazon ECS deployment, the  content  includes  the
                     task  name,  information  about  the  load  balancer that
                     serves traffic to the container, and more.

                     For both types of deployments, the  content  can  specify
                     Lambda  functions  that  run  at specified hooks, such as
                     BeforeInstall , during a deployment.

                 sha256 -> (string)
                     The SHA256 hash value of the revision content.

          triggerConfigurations -> (list)
              Information about triggers associated with the deployment group.

              (structure)
                 Information  about  notification  triggers for the deployment
                 group.

                 triggerName -> (string)
                     The name of the notification trigger.

                 triggerTargetArn -> (string)
                     The Amazon Resource Name (ARN) of the Amazon Simple Noti-
                     fication  Service topic through which notifications about
                     deployment or instance events are sent.

                 triggerEvents -> (list)
                     The event type or types for which notifications are trig-
                     gered.

                     (string)

          alarmConfiguration -> (structure)
              A list of alarms associated with the deployment group.

              enabled -> (boolean)
                 Indicates whether the alarm configuration is enabled.

              ignorePollAlarmFailure -> (boolean)
                 Indicates whether a deployment should continue if information
                 about the current state of alarms cannot  be  retrieved  from
                 Amazon CloudWatch. The default value is false.

                 o true  : The deployment proceeds even if alarm status infor-
                   mation can't be retrieved from Amazon CloudWatch.

                 o false : The deployment stops if  alarm  status  information
                   can't be retrieved from Amazon CloudWatch.

              alarms -> (list)
                 A list of alarms configured for the deployment group. A maxi-
                 mum of 10 alarms can be added to a deployment group.

                 (structure)
                     Information about an alarm.

                     name -> (string)
                        The name of the alarm. Maximum length is  255  charac-
                        ters.  Each alarm name can be used only once in a list
                        of alarms.

          autoRollbackConfiguration -> (structure)
              Information about the automatic rollback  configuration  associ-
              ated with the deployment group.

              enabled -> (boolean)
                 Indicates  whether a defined automatic rollback configuration
                 is currently enabled.

              events -> (list)
                 The event type or types that trigger a rollback.

                 (string)

          deploymentStyle -> (structure)
              Information about the type of  deployment,  either  in-place  or
              blue/green,  you  want  to  run  and whether to route deployment
              traffic behind a load balancer.

              deploymentType -> (string)
                 Indicates  whether  to  run  an  in-place  deployment  or   a
                 blue/green deployment.

              deploymentOption -> (string)
                 Indicates  whether  to route deployment traffic behind a load
                 balancer.

          outdatedInstancesStrategy -> (string)
              Indicates what happens  when  new  EC2  instances  are  launched
              mid-deployment and do not receive the deployed application revi-
              sion.

              If this option is set to UPDATE or  is  unspecified,  CodeDeploy
              initiates  one  or more 'auto-update outdated instances' deploy-
              ments to apply the deployed application revision to the new  EC2
              instances.

              If this option is set to IGNORE , CodeDeploy does not initiate a
              deployment to update the new EC2 instances. This may  result  in
              instances having different revisions.

          blueGreenDeploymentConfiguration -> (structure)
              Information about blue/green deployment options for a deployment
              group.

              terminateBlueInstancesOnDeploymentSuccess -> (structure)
                 Information about whether to terminate instances in the orig-
                 inal fleet during a blue/green deployment.

                 action -> (string)
                     The  action to take on instances in the original environ-
                     ment after a successful blue/green deployment.

                     o TERMINATE : Instances are terminated after a  specified
                       wait time.

                     o KEEP_ALIVE  : Instances are left running after they are
                       deregistered from the load balancer  and  removed  from
                       the deployment group.

                 terminationWaitTimeInMinutes -> (integer)
                     For  an  Amazon  EC2 deployment, the number of minutes to
                     wait after a successful blue/green deployment before ter-
                     minating instances from the original environment.

                     For  an  Amazon  ECS  deployment,  the  number of minutes
                     before deleting the original (blue) task set.  During  an
                     Amazon ECS deployment, CodeDeploy shifts traffic from the
                     original (blue) task set to a  replacement  (green)  task
                     set.

                     The maximum setting is 2880 minutes (2 days).

              deploymentReadyOption -> (structure)
                 Information  about  the action to take when newly provisioned
                 instances are  ready  to  receive  traffic  in  a  blue/green
                 deployment.

                 actionOnTimeout -> (string)
                     Information  about when to reroute traffic from an origi-
                     nal  environment  to  a  replacement  environment  in   a
                     blue/green deployment.

                     o CONTINUE_DEPLOYMENT:  Register  new  instances with the
                       load balancer immediately  after  the  new  application
                       revision  is installed on the instances in the replace-
                       ment environment.

                     o STOP_DEPLOYMENT: Do not register new instances  with  a
                       load balancer unless traffic rerouting is started using
                       ContinueDeployment  .  If  traffic  rerouting  is   not
                       started  before  the  end of the specified wait period,
                       the deployment status is changed to Stopped.

                 waitTimeInMinutes -> (integer)
                     The number of minutes to wait  before  the  status  of  a
                     blue/green  deployment is changed to Stopped if rerouting
                     is not started manually. Applies only to the STOP_DEPLOY-
                     MENT option for actionOnTimeout .

              greenFleetProvisioningOption -> (structure)
                 Information   about  how  instances  are  provisioned  for  a
                 replacement environment in a blue/green deployment.

                 action -> (string)
                     The method used to add instances to a  replacement  envi-
                     ronment.

                     o DISCOVER_EXISTING : Use instances that already exist or
                       will be created manually.

                     o COPY_AUTO_SCALING_GROUP : Use settings from a specified
                       Auto  Scaling group to define and create instances in a
                       new Auto Scaling group.

          loadBalancerInfo -> (structure)
              Information about the load balancer to use in a deployment.

              elbInfoList -> (list)
                 An array that contains information about the load balancer to
                 use  for load balancing in a deployment. In Elastic Load Bal-
                 ancing, load balancers are used with Classic Load  Balancers.

                 NOTE:
                     Adding  more  than  one load balancer to the array is not
                     supported.

                 (structure)
                     Information about a load balancer in Elastic Load Balanc-
                     ing  to  use  in  a  deployment. Instances are registered
                     directly with a load balancer, and traffic is  routed  to
                     the load balancer.

                     name -> (string)
                        For  blue/green deployments, the name of the load bal-
                        ancer that is used  to  route  traffic  from  original
                        instances  to  replacement  instances  in a blue/green
                        deployment. For in-place deployments, the name of  the
                        load  balancer that instances are deregistered from so
                        they are not serving traffic during a deployment,  and
                        then  re-registered  with after the deployment is com-
                        plete.

              targetGroupInfoList -> (list)
                 An array that contains information about the target group  to
                 use  for load balancing in a deployment. In Elastic Load Bal-
                 ancing, target groups are used  with  Application  Load  Bal-
                 ancers.

                 NOTE:
                     Adding  more  than  one  target group to the array is not
                     supported.

                 (structure)
                     Information about a target group in Elastic Load  Balanc-
                     ing  to  use in a deployment. Instances are registered as
                     targets in a target group, and traffic is routed  to  the
                     target group.

                     name -> (string)
                        For  blue/green  deployments,  the  name of the target
                        group that instances in the original  environment  are
                        deregistered  from,  and  instances in the replacement
                        environment are registered with. For in-place  deploy-
                        ments, the name of the target group that instances are
                        deregistered from, so they  are  not  serving  traffic
                        during a deployment, and then re-registered with after
                        the deployment is complete.

              targetGroupPairInfoList -> (list)
                 The target group pair information. This is an array of Targe-
                 GroupPairInfo objects with a maximum size of one.

                 (structure)
                     Information  about  two  target groups and how traffic is
                     routed during an Amazon ECS deployment. An optional  test
                     traffic route can be specified.

                     targetGroups -> (list)
                        One  pair of target groups. One is associated with the
                        original task set. The second is associated  with  the
                        task  set  that serves traffic after the deployment is
                        complete.

                        (structure)
                            Information about a target group in  Elastic  Load
                            Balancing  to  use  in a deployment. Instances are
                            registered as targets in a target group, and traf-
                            fic is routed to the target group.

                            name -> (string)
                               For  blue/green  deployments,  the  name of the
                               target group that  instances  in  the  original
                               environment    are   deregistered   from,   and
                               instances in the  replacement  environment  are
                               registered  with. For in-place deployments, the
                               name of the target  group  that  instances  are
                               deregistered  from,  so  they  are  not serving
                               traffic during a deployment, and then re-regis-
                               tered with after the deployment is complete.

                     prodTrafficRoute -> (structure)
                        The  path  used by a load balancer to route production
                        traffic when an Amazon ECS deployment is complete.

                        listenerArns -> (list)
                            The Amazon Resource Name (ARN)  of  one  listener.
                            The listener identifies the route between a target
                            group and a load balancer. This  is  an  array  of
                            strings with a maximum size of one.

                            (string)

                     testTrafficRoute -> (structure)
                        An optional path used by a load balancer to route test
                        traffic after an Amazon ECS deployment. Validation can
                        occur  while  test  traffic is served during a deploy-
                        ment.

                        listenerArns -> (list)
                            The Amazon Resource Name (ARN)  of  one  listener.
                            The listener identifies the route between a target
                            group and a load balancer. This  is  an  array  of
                            strings with a maximum size of one.

                            (string)

          lastSuccessfulDeployment -> (structure)
              Information  about  the most recent successful deployment to the
              deployment group.

              deploymentId -> (string)
                 The unique ID of a deployment.

              status -> (string)
                 The status of the most recent deployment.

              endTime -> (timestamp)
                 A timestamp that indicates when the most recent deployment to
                 the deployment group was complete.

              createTime -> (timestamp)
                 A timestamp that indicates when the most recent deployment to
                 the deployment group started.

          lastAttemptedDeployment -> (structure)
              Information about the most recent attempted  deployment  to  the
              deployment group.

              deploymentId -> (string)
                 The unique ID of a deployment.

              status -> (string)
                 The status of the most recent deployment.

              endTime -> (timestamp)
                 A timestamp that indicates when the most recent deployment to
                 the deployment group was complete.

              createTime -> (timestamp)
                 A timestamp that indicates when the most recent deployment to
                 the deployment group started.

          ec2TagSet -> (structure)
              Information about groups of tags applied to an EC2 instance. The
              deployment group includes only EC2 instances identified  by  all
              of the tag groups. Cannot be used in the same call as ec2TagFil-
              ters.

              ec2TagSetList -> (list)
                 A list that contains other lists of EC2 instance tag  groups.
                 For  an  instance  to be included in the deployment group, it
                 must be identified by all of the tag groups in the list.

                 (list)
                     (structure)
                        Information about an EC2 tag filter.

                        Key -> (string)
                            The tag filter key.

                        Value -> (string)
                            The tag filter value.

                        Type -> (string)
                            The tag filter type:

                            o KEY_ONLY : Key only.

                            o VALUE_ONLY : Value only.

                            o KEY_AND_VALUE : Key and value.

          onPremisesTagSet -> (structure)
              Information about groups  of  tags  applied  to  an  on-premises
              instance.   The   deployment  group  includes  only  on-premises
              instances identified by all the tag groups. Cannot  be  used  in
              the same call as onPremisesInstanceTagFilters.

              onPremisesTagSetList -> (list)
                 A  list that contains other lists of on-premises instance tag
                 groups. For an instance to  be  included  in  the  deployment
                 group,  it must be identified by all of the tag groups in the
                 list.

                 (list)
                     (structure)
                        Information about an on-premises instance tag  filter.

                        Key -> (string)
                            The on-premises instance tag filter key.

                        Value -> (string)
                            The on-premises instance tag filter value.

                        Type -> (string)
                            The on-premises instance tag filter type:

                            o KEY_ONLY: Key only.

                            o VALUE_ONLY: Value only.

                            o KEY_AND_VALUE: Key and value.

          computePlatform -> (string)
              The  destination  platform  type  for  the  deployment (Lambda ,
              Server , or ECS ).

          ecsServices -> (list)
              The target Amazon ECS services in  the  deployment  group.  This
              applies  only  to deployment groups that use the Amazon ECS com-
              pute platform. A target Amazon ECS service is  specified  as  an
              Amazon ECS cluster and service name pair using the format <clus-
              tername>:<servicename> .

              (structure)
                 Contains the service and cluster names used  to  identify  an
                 Amazon ECS deployment's target.

                 serviceName -> (string)
                     The name of the target Amazon ECS service.

                 clusterName -> (string)
                     The  name  of  the cluster that the Amazon ECS service is
                     associated with.



                                                        GET-DEPLOYMENT-GROUP()
