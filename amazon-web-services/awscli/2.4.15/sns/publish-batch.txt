PUBLISH-BATCH()                                                PUBLISH-BATCH()



NAME
       publish-batch -

DESCRIPTION
       Publishes  up  to  ten messages to the specified topic. This is a batch
       version of Publish . For FIFO topics, multiple messages within a single
       batch  are published in the order they are sent, and messages are dedu-
       plicated within the batch and across batches for 5 minutes.

       The result of publishing each message is reported individually  in  the
       response. Because the batch request can result in a combination of suc-
       cessful and unsuccessful actions, you should  check  for  batch  errors
       even when the call returns an HTTP status code of 200 .

       The  maximum allowed individual message size and the maximum total pay-
       load size (the sum of the individual lengths of all of the batched mes-
       sages) are both 256 KB (262,144 bytes).

       Some  actions take lists of parameters. These lists are specified using
       the param.n notation. Values of n are integers  starting  from  1.  For
       example, a parameter list with two elements looks like this:

       &AttributeName.1=first

       &AttributeName.2=second

       If  you send a batch message to a topic, Amazon SNS publishes the batch
       message to each endpoint that is subscribed to the topic. The format of
       the  batch  message  depends on the notification protocol for each sub-
       scribed endpoint.

       When a messageId is returned, the batch message is saved and Amazon SNS
       immediately delivers the message to subscribers.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            publish-batch
          --topic-arn <value>
          --publish-batch-request-entries <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --topic-arn (string)
          The  Amazon  resource name (ARN) of the topic you want to batch pub-
          lish to.

       --publish-batch-request-entries (list)
          A list of PublishBatch request entries to be sent to the SNS  topic.

          (structure)
              Contains  the  details of a single Amazon SNS message along with
              an Id that identifies a message within the batch.

              Id -> (string)
                 An identifier for the message in this batch.

                 NOTE:
                     The Ids of a  batch  request  must  be  unique  within  a
                     request.

                     This identifier can have up to 80 characters. The follow-
                     ing characters  are  accepted:  alphanumeric  characters,
                     hyphens(-), and underscores (_).

              Message -> (string)
                 The body of the message.

              Subject -> (string)
                 The subject of the batch message.

              MessageStructure -> (string)
                 Set  MessageStructure to json if you want to send a different
                 message for each protocol. For  example,  using  one  publish
                 action,  you can send a short message to your SMS subscribers
                 and a longer message to your email subscribers.  If  you  set
                 MessageStructure to json , the value of the Message parameter
                 must:

                 o be a syntactically valid JSON object; and

                 o contain at least a top-level JSON key of "default"  with  a
                   value that is a string.

                 You  can  define other top-level keys that define the message
                 you want to send  to  a  specific  transport  protocol  (e.g.
                 http).

              MessageAttributes -> (map)
                 Each  message attribute consists of a Name , Type , and Value
                 . For more information, see Amazon SNS message attributes  in
                 the Amazon SNS Developer Guide.

                 Name -> (string)

                 Value -> (structure)
                     The  user-specified  message  attribute value. For string
                     data types, the value attribute has the same restrictions
                     on the content as the message body. For more information,
                     see Publish .

                     Name, type, and value must not be empty or null. In addi-
                     tion,  the  message body should not be empty or null. All
                     parts of the message attribute, including name, type, and
                     value,  are  included  in  the  message size restriction,
                     which is currently  256  KB  (262,144  bytes).  For  more
                     information,   see  Amazon  SNS  message  attributes  and
                     Publishing to a mobile phone in the Amazon SNS  Developer
                     Guide.

                     DataType -> (string)
                        Amazon  SNS supports the following logical data types:
                        String, String.Array, Number,  and  Binary.  For  more
                        information, see Message Attribute Data Types .

                     StringValue -> (string)
                        Strings  are  Unicode with UTF8 binary encoding. For a
                        list of code values, see ASCII Printable Characters  .

                     BinaryValue -> (blob)
                        Binary  type attributes can store any binary data, for
                        example, compressed data, encrypted data, or images.

              MessageDeduplicationId -> (string)
                 This parameter applies only to FIFO (first-in-first-out) top-
                 ics.

                 The  token  used  for  deduplication  of  messages  within  a
                 5-minute minimum deduplication interval. If a message with  a
                 particular  MessageDeduplicationId is sent successfully, sub-
                 sequent messages with  the  same  MessageDeduplicationId  are
                 accepted successfully but aren't delivered.

                 o Every message must have a unique MessageDeduplicationId .

                   o You may provide a MessageDeduplicationId explicitly.

                   o If  you  aren't  able to provide a MessageDeduplicationId
                     and you enable ContentBasedDeduplication for your  topic,
                     Amazon  SNS uses a SHA-256 hash to generate the MessageD-
                     eduplicationId using the body of the message (but not the
                     attributes of the message).

                   o If  you  don't  provide  a MessageDeduplicationId and the
                     topic doesn't  have  ContentBasedDeduplication  set,  the
                     action fails with an error.

                   o If  the  topic  has a ContentBasedDeduplication set, your
                     MessageDeduplicationId overrides the generated one.

                 o When ContentBasedDeduplication is in effect, messages  with
                   identical  content  sent  within the deduplication interval
                   are treated as duplicates and only one copy of the  message
                   is delivered.

                 o If  you  send  one  message  with ContentBasedDeduplication
                   enabled, and then another message with a  MessageDeduplica-
                   tionId  that is the same as the one generated for the first
                   MessageDeduplicationId , the two messages  are  treated  as
                   duplicates and only one copy of the message is delivered.

                 NOTE:
                     The  MessageDeduplicationId  is available to the consumer
                     of the message (this can be  useful  for  troubleshooting
                     delivery issues).

                     If a message is sent successfully but the acknowledgement
                     is lost and the message is resent with the same MessageD-
                     eduplicationId  after  the deduplication interval, Amazon
                     SNS can't detect duplicate messages.

                     Amazon SNS continues to keep track of the  message  dedu-
                     plication  ID  even  after  the  message  is received and
                     deleted.

                 The length of MessageDeduplicationId is 128 characters.
                     MessageDeduplicationId can contain  alphanumeric  charac-
                     ters      (a-z,     A-Z,     0-9)     and     punctuation
                     (!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~) .

              MessageGroupId -> (string)
                 This parameter applies only to FIFO (first-in-first-out) top-
                 ics.

                 The  tag  that specifies that a message belongs to a specific
                 message group. Messages that belong to the same message group
                 are  processed in a FIFO manner (however, messages in differ-
                 ent message groups might  be  processed  out  of  order).  To
                 interleave  multiple  ordered  streams within a single topic,
                 use MessageGroupId values (for example, session data for mul-
                 tiple  users).  In  this  scenario,  multiple  consumers  can
                 process the topic, but the session data of each user is  pro-
                 cessed in a FIFO fashion.

                 You must associate a non-empty MessageGroupId with a message.
                 If you don't provide a MessageGroupId , the action fails.

                 The length of MessageGroupId is 128 characters.
                     MessageGroupId can contain alphanumeric characters  (a-z,
                     A-Z,            0-9)            and           punctuation
                     (!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~) .

                 WARNING:
                     MessageGroupId is required for FIFO topics. You can't use
                     it for standard topics.

       Shorthand Syntax:

          Id=string,Message=string,Subject=string,MessageStructure=string,MessageAttributes={KeyName1={DataType=string,StringValue=string,BinaryValue=blob},KeyName2={DataType=string,StringValue=string,BinaryValue=blob}},MessageDeduplicationId=string,MessageGroupId=string ...

       JSON Syntax:

          [
            {
              "Id": "string",
              "Message": "string",
              "Subject": "string",
              "MessageStructure": "string",
              "MessageAttributes": {"string": {
                    "DataType": "string",
                    "StringValue": "string",
                    "BinaryValue": blob
                  }
                ...},
              "MessageDeduplicationId": "string",
              "MessageGroupId": "string"
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       Successful -> (list)
          A list of successful PublishBatch responses.

          (structure)
              Encloses data related to a successful message in a batch request
              for topic.

              Id -> (string)
                 The Id of an entry in a batch request.

              MessageId -> (string)
                 An identifier for the message.

              SequenceNumber -> (string)
                 This parameter applies only to FIFO (first-in-first-out) top-
                 ics.

                 The  large, non-consecutive number that Amazon SNS assigns to
                 each message.

                 The length of SequenceNumber is 128 bits. SequenceNumber con-
                 tinues to increase for a particular MessageGroupId .

       Failed -> (list)
          A list of failed PublishBatch responses.

          (structure)
              Gives a detailed description of failed messages in the batch.

              Id -> (string)
                 The Id of an entry in a batch request

              Code -> (string)
                 An  error  code  representing  why  the action failed on this
                 entry.

              Message -> (string)
                 A message explaining why the action failed on this entry.

              SenderFault -> (boolean)
                 Specifies whether the error happened due to the caller of the
                 batch API action.



                                                               PUBLISH-BATCH()
