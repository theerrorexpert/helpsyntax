CREATE-SUBNET()                                                CREATE-SUBNET()



NAME
       create-subnet -

DESCRIPTION
       Creates a subnet in a specified VPC.

       You  must specify an IPv4 CIDR block for the subnet. After you create a
       subnet, you can't change its CIDR block.  The  allowed  block  size  is
       between  a  /16  netmask  (65,536  IP addresses) and /28 netmask (16 IP
       addresses). The CIDR block must not overlap with the CIDR block  of  an
       existing subnet in the VPC.

       If you've associated an IPv6 CIDR block with your VPC, you can create a
       subnet with an IPv6 CIDR block that uses a /64 prefix length.

       WARNING:
          Amazon Web Services reserves both the first four and the  last  IPv4
          address  in each subnet's CIDR block. They're not available for use.

       If you add more than one subnet to a VPC, they're  set  up  in  a  star
       topology with a logical router in the middle.

       When  you  stop  an  instance  in a subnet, it retains its private IPv4
       address. It's therefore possible to  have  a  subnet  with  no  running
       instances  (they're  all stopped), but no remaining IP addresses avail-
       able.

       For more information about subnets, see Your VPC  and  subnets  in  the
       Amazon Virtual Private Cloud User Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-subnet
          [--tag-specifications <value>]
          [--availability-zone <value>]
          [--availability-zone-id <value>]
          [--cidr-block <value>]
          [--ipv6-cidr-block <value>]
          [--outpost-arn <value>]
          --vpc-id <value>
          [--dry-run | --no-dry-run]
          [--ipv6-native | --no-ipv6-native]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --tag-specifications (list)
          The tags to assign to the subnet.

          (structure)
              The  tags to apply to a resource when the resource is being cre-
              ated.

              ResourceType -> (string)
                 The type of resource to tag on creation.

              Tags -> (list)
                 The tags to apply to the resource.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints: Tag keys are case-sensitive and accept  a
                        maximum  of 127 Unicode characters. May not begin with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints: Tag values are case-sensitive and  accept
                        a maximum of 255 Unicode characters.

       Shorthand Syntax:

          ResourceType=string,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "ResourceType": "capacity-reservation"|"client-vpn-endpoint"|"customer-gateway"|"carrier-gateway"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-ip"|"elastic-gpu"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"instance-event-window"|"internet-gateway"|"ipam"|"ipam-pool"|"ipam-scope"|"ipv4pool-ec2"|"ipv6pool-ec2"|"key-pair"|"launch-template"|"local-gateway"|"local-gateway-route-table"|"local-gateway-virtual-interface"|"local-gateway-virtual-interface-group"|"local-gateway-route-table-vpc-association"|"local-gateway-route-table-virtual-interface-group-association"|"natgateway"|"network-acl"|"network-interface"|"network-insights-analysis"|"network-insights-path"|"network-insights-access-scope"|"network-insights-access-scope-analysis"|"placement-group"|"prefix-list"|"replace-root-volume-task"|"reserved-instances"|"route-table"|"security-group"|"security-group-rule"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-route-table"|"volume"|"vpc"|"vpc-endpoint"|"vpc-endpoint-service"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"|"vpc-flow-log",
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --availability-zone (string)
          The Availability Zone or Local Zone for the subnet.

          Default: Amazon Web Services selects one for you. If you create more
          than one subnet in your VPC, we do not necessarily select a  differ-
          ent zone for each subnet.

          To create a subnet in a Local Zone, set this value to the Local Zone
          ID, for example us-west-2-lax-1a . For information about the Regions
          that  support Local Zones, see Available Regions in the Amazon Elas-
          tic Compute Cloud User Guide .

          To create a subnet in an Outpost, set this value to the Availability
          Zone for the Outpost and specify the Outpost ARN.

       --availability-zone-id (string)
          The AZ ID or the Local Zone ID of the subnet.

       --cidr-block (string)
          The  IPv4  network range for the subnet, in CIDR notation. For exam-
          ple, 10.0.0.0/24 . We modify the specified CIDR block to its canoni-
          cal  form; for example, if you specify 100.68.0.18/18 , we modify it
          to 100.68.0.0/18 .

          This parameter is not supported for an IPv6 only subnet.

       --ipv6-cidr-block (string)
          The IPv6 network range for the subnet, in CIDR notation. The  subnet
          size must use a /64 prefix length.

          This parameter is required for an IPv6 only subnet.

       --outpost-arn (string)
          The  Amazon  Resource  Name  (ARN) of the Outpost. If you specify an
          Outpost ARN, you must also specify the Availability Zone of the Out-
          post subnet.

       --vpc-id (string)
          The ID of the VPC.

       --dry-run | --no-dry-run (boolean)
          Checks  whether  you  have  the required permissions for the action,
          without actually making the request, and provides an error response.
          If  you have the required permissions, the error response is DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --ipv6-native | --no-ipv6-native (boolean)
          Indicates whether to create an IPv6 only subnet.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To create a subnet with an IPv4 CIDR block only

       The following create-subnet example creates a subnet in  the  specified
       VPC with the specified IPv4 CIDR block.

          aws ec2 create-subnet \
              --vpc-id vpc-081ec835f3EXAMPLE \
              --cidr-block 10.0.0.0/24 \
              --tag-specifications ResourceType=subnet,Tags=[{Key=Name,Value=my-ipv4-only-subnet}]

       Output:

          {
              "Subnet": {
                  "AvailabilityZone": "us-west-2a",
                  "AvailabilityZoneId": "usw2-az2",
                  "AvailableIpAddressCount": 251,
                  "CidrBlock": "10.0.0.0/24",
                  "DefaultForAz": false,
                  "MapPublicIpOnLaunch": false,
                  "State": "available",
                  "SubnetId": "subnet-0e99b93155EXAMPLE",
                  "VpcId": "vpc-081ec835f3EXAMPLE",
                  "OwnerId": "123456789012",
                  "AssignIpv6AddressOnCreation": false,
                  "Ipv6CidrBlockAssociationSet": [],
                  "Tags": [
                      {
                          "Key": "Name",
                          "Value": "my-ipv4-only-subnet"
                      }
                  ],
                  "SubnetArn": "arn:aws:ec2:us-west-2:123456789012:subnet/subnet-0e99b93155EXAMPLE"
              }
          }

       Example 2: To create a subnet with both IPv4 and IPv6 CIDR blocks

       The  following  create-subnet example creates a subnet in the specified
       VPC with the specified IPv4 and IPv6 CIDR blocks.

          aws ec2 create-subnet \
              --vpc-id vpc-081ec835f3EXAMPLE \
              --cidr-block 10.0.0.0/24 \
              --ipv6-cidr-block 2600:1f16:cfe:3660::/64 \
              --tag-specifications ResourceType=subnet,Tags=[{Key=Name,Value=my-ipv4-ipv6-subnet}]

       Output:

          {
              "Subnet": {
                  "AvailabilityZone": "us-west-2a",
                  "AvailabilityZoneId": "usw2-az2",
                  "AvailableIpAddressCount": 251,
                  "CidrBlock": "10.0.0.0/24",
                  "DefaultForAz": false,
                  "MapPublicIpOnLaunch": false,
                  "State": "available",
                  "SubnetId": "subnet-0736441d38EXAMPLE",
                  "VpcId": "vpc-081ec835f3EXAMPLE",
                  "OwnerId": "123456789012",
                  "AssignIpv6AddressOnCreation": false,
                  "Ipv6CidrBlockAssociationSet": [
                      {
                          "AssociationId": "subnet-cidr-assoc-06c5f904499fcc623",
                          "Ipv6CidrBlock": "2600:1f13:cfe:3660::/64",
                          "Ipv6CidrBlockState": {
                              "State": "associating"
                          }
                      }
                  ],
                  "Tags": [
                      {
                          "Key": "Name",
                          "Value": "my-ipv4-ipv6-subnet"
                      }
                  ],
                  "SubnetArn": "arn:aws:ec2:us-west-2:123456789012:subnet/subnet-0736441d38EXAMPLE"
              }
          }

       Example 3: To create a subnet with an IPv6 CIDR block only

       The following create-subnet example creates a subnet in  the  specified
       VPC with the specified IPv6 CIDR block.

          aws ec2 create-subnet \
              --vpc-id vpc-081ec835f3EXAMPLE \
              --ipv6-native \
              --ipv6-cidr-block 2600:1f16:115:200::/64 \
              --tag-specifications ResourceType=subnet,Tags=[{Key=Name,Value=my-ipv6-only-subnet}]

       Output:

          {
              "Subnet": {
                  "AvailabilityZone": "us-west-2a",
                  "AvailabilityZoneId": "usw2-az2",
                  "AvailableIpAddressCount": 0,
                  "DefaultForAz": false,
                  "MapPublicIpOnLaunch": false,
                  "State": "available",
                  "SubnetId": "subnet-03f720e7deEXAMPLE",
                  "VpcId": "vpc-081ec835f3EXAMPLE",
                  "OwnerId": "123456789012",
                  "AssignIpv6AddressOnCreation": true,
                  "Ipv6CidrBlockAssociationSet": [
                      {
                          "AssociationId": "subnet-cidr-assoc-01ef639edde556709",
                          "Ipv6CidrBlock": "2600:1f13:cfe:3660::/64",
                          "Ipv6CidrBlockState": {
                              "State": "associating"
                          }
                      }
                  ],
                  "Tags": [
                      {
                          "Key": "Name",
                          "Value": "my-ipv6-only-subnet"
                      }
                  ],
                  "SubnetArn": "arn:aws:ec2:us-west-2:123456789012:subnet/subnet-03f720e7deEXAMPLE"
              }
          }

       For  more  information,  see  VPCs  and  subnets in the Amazon VPC User
       Guide.

OUTPUT
       Subnet -> (structure)
          Information about the subnet.

          AvailabilityZone -> (string)
              The Availability Zone of the subnet.

          AvailabilityZoneId -> (string)
              The AZ ID of the subnet.

          AvailableIpAddressCount -> (integer)
              The number of unused private IPv4 addresses in the  subnet.  The
              IPv4 addresses for any stopped instances are considered unavail-
              able.

          CidrBlock -> (string)
              The IPv4 CIDR block assigned to the subnet.

          DefaultForAz -> (boolean)
              Indicates whether this is the default subnet for the  Availabil-
              ity Zone.

          EnableLniAtDeviceIndex -> (integer)
              Indicates  the  device  position for local network interfaces in
              this subnet. For example, 1 indicates local  network  interfaces
              in this subnet are the secondary network interface (eth1).

          MapPublicIpOnLaunch -> (boolean)
              Indicates  whether  instances  launched in this subnet receive a
              public IPv4 address.

          MapCustomerOwnedIpOnLaunch -> (boolean)
              Indicates whether a network interface  created  in  this  subnet
              (including  a  network  interface  created  by   RunInstances  )
              receives a customer-owned IPv4 address.

          CustomerOwnedIpv4Pool -> (string)
              The customer-owned IPv4 address pool associated with the subnet.

          State -> (string)
              The current state of the subnet.

          SubnetId -> (string)
              The ID of the subnet.

          VpcId -> (string)
              The ID of the VPC the subnet is in.

          OwnerId -> (string)
              The  ID of the Amazon Web Services account that owns the subnet.

          AssignIpv6AddressOnCreation -> (boolean)
              Indicates whether a network interface  created  in  this  subnet
              (including  a  network  interface  created  by   RunInstances  )
              receives an IPv6 address.

          Ipv6CidrBlockAssociationSet -> (list)
              Information about the IPv6 CIDR blocks associated with the  sub-
              net.

              (structure)
                 Describes  an  association  between a subnet and an IPv6 CIDR
                 block.

                 AssociationId -> (string)
                     The ID of the association.

                 Ipv6CidrBlock -> (string)
                     The IPv6 CIDR block.

                 Ipv6CidrBlockState -> (structure)
                     The state of the CIDR block.

                     State -> (string)
                        The state of a CIDR block.

                     StatusMessage -> (string)
                        A message about the  status  of  the  CIDR  block,  if
                        applicable.

          Tags -> (list)
              Any tags assigned to the subnet.

              (structure)
                 Describes a tag.

                 Key -> (string)
                     The key of the tag.

                     Constraints:  Tag  keys  are  case-sensitive and accept a
                     maximum of 127 Unicode characters.  May  not  begin  with
                     aws: .

                 Value -> (string)
                     The value of the tag.

                     Constraints:  Tag  values are case-sensitive and accept a
                     maximum of 255 Unicode characters.

          SubnetArn -> (string)
              The Amazon Resource Name (ARN) of the subnet.

          OutpostArn -> (string)
              The Amazon Resource Name (ARN) of the Outpost.

          EnableDns64 -> (boolean)
              Indicates whether DNS queries made to  the  Amazon-provided  DNS
              Resolver  in  this subnet should return synthetic IPv6 addresses
              for IPv4-only destinations.

          Ipv6Native -> (boolean)
              Indicates whether this is an IPv6 only subnet.

          PrivateDnsNameOptionsOnLaunch -> (structure)
              The type of hostnames to assign to instances in  the  subnet  at
              launch.  An instance hostname is based on the IPv4 address or ID
              of the instance.

              HostnameType -> (string)
                 The type of hostname for EC2 instances. For  IPv4  only  sub-
                 nets, an instance DNS name must be based on the instance IPv4
                 address. For IPv6 only subnets, an instance DNS name must  be
                 based  on  the  instance  ID. For dual-stack subnets, you can
                 specify whether DNS names use the instance  IPv4  address  or
                 the instance ID.

              EnableResourceNameDnsARecord -> (boolean)
                 Indicates  whether  to  respond  to  DNS queries for instance
                 hostnames with DNS A records.

              EnableResourceNameDnsAAAARecord -> (boolean)
                 Indicates whether to respond  to  DNS  queries  for  instance
                 hostname with DNS AAAA records.



                                                               CREATE-SUBNET()
