CREATE-IPAM-POOL()                                          CREATE-IPAM-POOL()



NAME
       create-ipam-pool -

DESCRIPTION
       Create  an IP address pool for Amazon VPC IP Address Manager (IPAM). In
       IPAM, a pool is a collection of contiguous IP  addresses  CIDRs.  Pools
       enable  you to organize your IP addresses according to your routing and
       security needs. For example, if you have separate routing and  security
       needs  for  development  and  production applications, you can create a
       pool for each.

       For more information, see Create a top-level pool  in  the  Amazon  VPC
       IPAM User Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-ipam-pool
          [--dry-run | --no-dry-run]
          --ipam-scope-id <value>
          [--locale <value>]
          [--source-ipam-pool-id <value>]
          [--description <value>]
          [--address-family <value>]
          [--auto-import | --no-auto-import]
          [--publicly-advertisable | --no-publicly-advertisable]
          [--allocation-min-netmask-length <value>]
          [--allocation-max-netmask-length <value>]
          [--allocation-default-netmask-length <value>]
          [--allocation-resource-tags <value>]
          [--tag-specifications <value>]
          [--client-token <value>]
          [--aws-service <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --dry-run | --no-dry-run (boolean)
          A check for whether you have the required permissions for the action
          without actually making the request and provides an error  response.
          If  you have the required permissions, the error response is DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --ipam-scope-id (string)
          The ID of the scope in which you would like to create the IPAM pool.

       --locale (string)
          In IPAM, the locale is the Amazon Web Services Region where you want
          to make an IPAM pool available for allocations.  Only  resources  in
          the same Region as the locale of the pool can get IP address alloca-
          tions from the pool. You can only allocate a CIDR  for  a  VPC,  for
          example,  from  an  IPAM  pool  that  shares  a locale with the VPCs
          Region. Note that once you choose a Locale for a  pool,  you  cannot
          modify  it. If you do not choose a locale, resources in Regions oth-
          ers than the IPAM's home region cannot use CIDRs from this pool.

          Possible values: Any Amazon Web Services Region, such as  us-east-1.

       --source-ipam-pool-id (string)
          The  ID  of  the  source IPAM pool. Use this option to create a pool
          within an existing pool. Note that the CIDR you  provision  for  the
          pool  within  the source pool must be available in the source pool's
          CIDR range.

       --description (string)
          A description for the IPAM pool.

       --address-family (string)
          The IP protocol assigned to this IPAM pool. You must  choose  either
          IPv4 or IPv6 protocol for a pool.

          Possible values:

          o ipv4

          o ipv6

       --auto-import | --no-auto-import (boolean)
          If  selected,  IPAM  will continuously look for resources within the
          CIDR range of this pool and automatically import them as allocations
          into your IPAM. The CIDRs that will be allocated for these resources
          must not already be allocated to other resources in  order  for  the
          import to succeed. IPAM will import a CIDR regardless of its compli-
          ance with the pool's  allocation  rules,  so  a  resource  might  be
          imported  and subsequently marked as noncompliant. If IPAM discovers
          multiple CIDRs that overlap, IPAM will import the largest CIDR only.
          If IPAM discovers multiple CIDRs with matching CIDRs, IPAM will ran-
          domly import one of them only.

          A locale must be set on the pool for this feature to work.

       --publicly-advertisable | --no-publicly-advertisable (boolean)
          Determines if the pool is publicly advertisable. This option is  not
          available for pools with AddressFamily set to ipv4 .

       --allocation-min-netmask-length (integer)
          The  minimum  netmask  length  required for CIDR allocations in this
          IPAM pool to be compliant. The minimum netmask length must  be  less
          than  the  maximum netmask length. Possible netmask lengths for IPv4
          addresses are 0 - 32. Possible netmask lengths  for  IPv6  addresses
          are 0 - 128.

       --allocation-max-netmask-length (integer)
          The  maximum  netmask  length  possible for CIDR allocations in this
          IPAM pool to be  compliant.  The  maximum  netmask  length  must  be
          greater  than  the  minimum netmask length. Possible netmask lengths
          for IPv4 addresses are 0 - 32. Possible  netmask  lengths  for  IPv6
          addresses are 0 - 128.

       --allocation-default-netmask-length (integer)
          The  default  netmask length for allocations added to this pool. If,
          for example, the CIDR assigned to this pool is  10.0.0.0/8  and  you
          enter 16 here, new allocations will default to 10.0.0.0/16.

       --allocation-resource-tags (list)
          Tags  that  are required for resources that use CIDRs from this IPAM
          pool. Resources that do not have these tags will not be  allowed  to
          allocate  space  from  the  pool.  If  the resources have their tags
          changed after they have allocated space or if the allocation tagging
          requirements  are changed on the pool, the resource may be marked as
          noncompliant.

          (structure)
              A tag on an IPAM resource.

              Key -> (string)
                 The key of a tag assigned to the resource. Use this filter to
                 find  all  resources  assigned  a  tag  with  a specific key,
                 regardless of the tag value.

              Value -> (string)
                 The value for the tag.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --tag-specifications (list)
          The key/value combination of a tag assigned to the resource. Use the
          tag  key  in  the filter name and the tag value as the filter value.
          For example, to find all resources that have  a  tag  with  the  key
          Owner  and  the  value TeamA , specify tag:Owner for the filter name
          and TeamA for the filter value.

          (structure)
              The tags to apply to a resource when the resource is being  cre-
              ated.

              ResourceType -> (string)
                 The type of resource to tag on creation.

              Tags -> (list)
                 The tags to apply to the resource.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints:  Tag keys are case-sensitive and accept a
                        maximum of 127 Unicode characters. May not begin  with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints:  Tag values are case-sensitive and accept
                        a maximum of 255 Unicode characters.

       Shorthand Syntax:

          ResourceType=string,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "ResourceType": "capacity-reservation"|"client-vpn-endpoint"|"customer-gateway"|"carrier-gateway"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-ip"|"elastic-gpu"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"instance-event-window"|"internet-gateway"|"ipam"|"ipam-pool"|"ipam-scope"|"ipv4pool-ec2"|"ipv6pool-ec2"|"key-pair"|"launch-template"|"local-gateway"|"local-gateway-route-table"|"local-gateway-virtual-interface"|"local-gateway-virtual-interface-group"|"local-gateway-route-table-vpc-association"|"local-gateway-route-table-virtual-interface-group-association"|"natgateway"|"network-acl"|"network-interface"|"network-insights-analysis"|"network-insights-path"|"network-insights-access-scope"|"network-insights-access-scope-analysis"|"placement-group"|"prefix-list"|"replace-root-volume-task"|"reserved-instances"|"route-table"|"security-group"|"security-group-rule"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-route-table"|"volume"|"vpc"|"vpc-endpoint"|"vpc-endpoint-service"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"|"vpc-flow-log",
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --client-token (string)
          A unique, case-sensitive identifier that you provide to  ensure  the
          idempotency of the request. For more information, see Ensuring Idem-
          potency .

       --aws-service (string)
          Limits which service in Amazon Web Services that  the  pool  can  be
          used  in.  "ec2", for example, allows users to use space for Elastic
          IP addresses and VPCs.

          Possible values:

          o ec2

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create an IPAM pool

       The following create-ipam-pool example creates an IPAM pool.

       (Linux):

          aws ec2 create-ipam-pool \
              --ipam-scope-id ipam-scope-02fc38cd4c48e7d38 \
              --address-family ipv4 \
              --auto-import \
              --allocation-min-netmask-length 16 \
              --allocation-max-netmask-length 26 \
              --allocation-default-netmask-length 24 \
              --allocation-resource-tags "Key=Environment,Value=Preprod" \
              --tag-specifications 'ResourceType=ipam-pool,Tags=[{Key=Name,Value="Preprod pool"}]'

       (Windows):

          aws ec2 create-ipam-pool ^
              --ipam-scope-id ipam-scope-02fc38cd4c48e7d38 ^
              --address-family ipv4 ^
              --auto-import ^
              --allocation-min-netmask-length 16 ^
              --allocation-max-netmask-length 26 ^
              --allocation-default-netmask-length 24 ^
              --allocation-resource-tags "Key=Environment,Value=Preprod" ^
              --tag-specifications ResourceType=ipam-pool,Tags=[{Key=Name,Value="Preprod pool"}]

       Output:

          {
              "IpamPool": {
                  "OwnerId": "123456789012",
                  "IpamPoolId": "ipam-pool-0533048da7d823723",
                  "IpamPoolArn": "arn:aws:ec2::123456789012:ipam-pool/ipam-pool-0533048da7d823723",
                  "IpamScopeArn": "arn:aws:ec2::123456789012:ipam-scope/ipam-scope-02fc38cd4c48e7d38",
                  "IpamScopeType": "private",
                  "IpamArn": "arn:aws:ec2::123456789012:ipam/ipam-08440e7a3acde3908",
                  "IpamRegion": "us-east-1",
                  "Locale": "None",
                  "PoolDepth": 1,
                  "State": "create-in-progress",
                  "AutoImport": true,
                  "AddressFamily": "ipv4",
                  "AllocationMinNetmaskLength": 16,
                  "AllocationMaxNetmaskLength": 26,
                  "AllocationDefaultNetmaskLength": 24,
                  "AllocationResourceTags": [
                      {
                          "Key": "Environment",
                          "Value": "Preprod"
                      }
                  ],
                  "Tags": [
                      {
                          "Key": "Name",
                          "Value": "Preprod pool"
                      }
                  ]
              }
          }

       For more information, see Plan for IP address provisioning in the  Ama-
       zon VPC IPAM User Guide.

OUTPUT
       IpamPool -> (structure)
          Information about the IPAM pool created.

          OwnerId -> (string)
              The  Amazon  Web  Services  account  ID of the owner of the IPAM
              pool.

          IpamPoolId -> (string)
              The ID of the IPAM pool.

          SourceIpamPoolId -> (string)
              The ID of the source IPAM pool. You can use this option to  cre-
              ate an IPAM pool within an existing source pool.

          IpamPoolArn -> (string)
              The ARN of the IPAM pool.

          IpamScopeArn -> (string)
              The ARN of the scope of the IPAM pool.

          IpamScopeType -> (string)
              In  IPAM, a scope is the highest-level container within IPAM. An
              IPAM contains two default scopes. Each scope represents  the  IP
              space  for  a  single network. The private scope is intended for
              all private IP address space. The public scope is  intended  for
              all  public  IP  address  space.  Scopes  enable you to reuse IP
              addresses across multiple unconnected networks  without  causing
              IP address overlap or conflict.

          IpamArn -> (string)
              The ARN of the IPAM.

          IpamRegion -> (string)
              The Amazon Web Services Region of the IPAM pool.

          Locale -> (string)
              The  locale  of the IPAM pool. In IPAM, the locale is the Amazon
              Web Services Region where you want to make an IPAM  pool  avail-
              able  for  allocations. Only resources in the same Region as the
              locale of the pool can get IP address allocations from the pool.
              You  can  only  allocate  a CIDR for a VPC, for example, from an
              IPAM pool that shares a locale with the VPCs Region.  Note  that
              once  you  choose  a Locale for a pool, you cannot modify it. If
              you choose an Amazon Web Services Region for locale that has not
              been  configured as an operating Region for the IPAM, you'll get
              an error.

          PoolDepth -> (integer)
              The depth of pools in your IPAM pool. The pool  depth  quota  is
              10.  For  more information, see Quotas in IPAM in the Amazon VPC
              IPAM User Guide .

          State -> (string)
              The state of the IPAM pool.

          StateMessage -> (string)
              A message related to the failed creation of an IPAM pool.

          Description -> (string)
              The description of the IPAM pool.

          AutoImport -> (boolean)
              If selected, IPAM will continuously look  for  resources  within
              the  CIDR  range  of  this pool and automatically import them as
              allocations into your IPAM. The CIDRs that will be allocated for
              these resources must not already be allocated to other resources
              in order for the import to succeed.  IPAM  will  import  a  CIDR
              regardless  of  its compliance with the pool's allocation rules,
              so a resource might be imported and subsequently marked as  non-
              compliant.  If  IPAM discovers multiple CIDRs that overlap, IPAM
              will import the largest CIDR only. If  IPAM  discovers  multiple
              CIDRs with matching CIDRs, IPAM will randomly import one of them
              only.

              A locale must be set on the pool for this feature to work.

          PubliclyAdvertisable -> (boolean)
              Determines if a pool is publicly advertisable.  This  option  is
              not available for pools with AddressFamily set to ipv4 .

          AddressFamily -> (string)
              The address family of the pool.

          AllocationMinNetmaskLength -> (integer)
              The minimum netmask length required for CIDR allocations in this
              IPAM pool to be compliant. The minimum netmask  length  must  be
              less  than  the maximum netmask length. Possible netmask lengths
              for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6
              addresses are 0 - 128.

          AllocationMaxNetmaskLength -> (integer)
              The maximum netmask length possible for CIDR allocations in this
              IPAM pool to be compliant. The maximum netmask  length  must  be
              greater  than  the  minimum  netmask  length.  Possible  netmask
              lengths for IPv4 addresses are 0 - 32. Possible netmask  lengths
              for IPv6 addresses are 0 - 128.

          AllocationDefaultNetmaskLength -> (integer)
              The  default  netmask length for allocations added to this pool.
              If, for example, the CIDR assigned to this  pool  is  10.0.0.0/8
              and   you  enter  16  here,  new  allocations  will  default  to
              10.0.0.0/16.

          AllocationResourceTags -> (list)
              Tags that are required for resources that use  CIDRs  from  this
              IPAM  pool.  Resources  that  do not have these tags will not be
              allowed to allocate space from the pool. If the  resources  have
              their  tags  changed  after  they have allocated space or if the
              allocation tagging requirements are changed  on  the  pool,  the
              resource may be marked as noncompliant.

              (structure)
                 The  key/value combination of a tag assigned to the resource.
                 Use the tag key in the filter name and the tag value  as  the
                 filter  value. For example, to find all resources that have a
                 tag with  the  key  Owner  and  the  value  TeamA  ,  specify
                 tag:Owner for the filter name and TeamA for the filter value.

                 Key -> (string)
                     The key of a tag assigned to the resource. Use this  fil-
                     ter  to find all resources assigned a tag with a specific
                     key, regardless of the tag value.

                 Value -> (string)
                     The value of the tag.

          Tags -> (list)
              The key/value combination of a tag assigned to the resource. Use
              the  tag  key in the filter name and the tag value as the filter
              value. For example, to find all resources that have a  tag  with
              the  key  Owner  and the value TeamA , specify tag:Owner for the
              filter name and TeamA for the filter value.

              (structure)
                 Describes a tag.

                 Key -> (string)
                     The key of the tag.

                     Constraints: Tag keys are  case-sensitive  and  accept  a
                     maximum  of  127  Unicode  characters. May not begin with
                     aws: .

                 Value -> (string)
                     The value of the tag.

                     Constraints: Tag values are case-sensitive and  accept  a
                     maximum of 255 Unicode characters.

          AwsService -> (string)
              Limits which service in Amazon Web Services that the pool can be
              used in. "ec2", for example, allows users to use space for Elas-
              tic IP addresses and VPCs.



                                                            CREATE-IPAM-POOL()
