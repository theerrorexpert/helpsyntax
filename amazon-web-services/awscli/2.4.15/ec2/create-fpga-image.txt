CREATE-FPGA-IMAGE()                                        CREATE-FPGA-IMAGE()



NAME
       create-fpga-image -

DESCRIPTION
       Creates an Amazon FPGA Image (AFI) from the specified design checkpoint
       (DCP).

       The create operation is asynchronous. To verify that the AFI  is  ready
       for use, check the output logs.

       An  AFI  contains  the  FPGA  bitstream that is ready to download to an
       FPGA. You can securely  deploy  an  AFI  on  multiple  FPGA-accelerated
       instances. For more information, see the Amazon Web Services FPGA Hard-
       ware Development Kit .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-fpga-image
          [--dry-run | --no-dry-run]
          --input-storage-location <value>
          [--logs-storage-location <value>]
          [--description <value>]
          [--name <value>]
          [--client-token <value>]
          [--tag-specifications <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --dry-run | --no-dry-run (boolean)
          Checks whether you have the required  permissions  for  the  action,
          without actually making the request, and provides an error response.
          If you have the required permissions, the error response is  DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --input-storage-location (structure)
          The  location  of  the encrypted design checkpoint in Amazon S3. The
          input must be a tarball.

          Bucket -> (string)
              The name of the S3 bucket.

          Key -> (string)
              The key.

       Shorthand Syntax:

          Bucket=string,Key=string

       JSON Syntax:

          {
            "Bucket": "string",
            "Key": "string"
          }

       --logs-storage-location (structure)
          The location in Amazon S3 for the output logs.

          Bucket -> (string)
              The name of the S3 bucket.

          Key -> (string)
              The key.

       Shorthand Syntax:

          Bucket=string,Key=string

       JSON Syntax:

          {
            "Bucket": "string",
            "Key": "string"
          }

       --description (string)
          A description for the AFI.

       --name (string)
          A name for the AFI.

       --client-token (string)
          Unique, case-sensitive identifier that you  provide  to  ensure  the
          idempotency of the request. For more information, see Ensuring Idem-
          potency .

       --tag-specifications (list)
          The tags to apply to the FPGA image during creation.

          (structure)
              The tags to apply to a resource when the resource is being  cre-
              ated.

              ResourceType -> (string)
                 The type of resource to tag on creation.

              Tags -> (list)
                 The tags to apply to the resource.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints:  Tag keys are case-sensitive and accept a
                        maximum of 127 Unicode characters. May not begin  with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints:  Tag values are case-sensitive and accept
                        a maximum of 255 Unicode characters.

       Shorthand Syntax:

          ResourceType=string,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "ResourceType": "capacity-reservation"|"client-vpn-endpoint"|"customer-gateway"|"carrier-gateway"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-ip"|"elastic-gpu"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"instance-event-window"|"internet-gateway"|"ipam"|"ipam-pool"|"ipam-scope"|"ipv4pool-ec2"|"ipv6pool-ec2"|"key-pair"|"launch-template"|"local-gateway"|"local-gateway-route-table"|"local-gateway-virtual-interface"|"local-gateway-virtual-interface-group"|"local-gateway-route-table-vpc-association"|"local-gateway-route-table-virtual-interface-group-association"|"natgateway"|"network-acl"|"network-interface"|"network-insights-analysis"|"network-insights-path"|"network-insights-access-scope"|"network-insights-access-scope-analysis"|"placement-group"|"prefix-list"|"replace-root-volume-task"|"reserved-instances"|"route-table"|"security-group"|"security-group-rule"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-route-table"|"volume"|"vpc"|"vpc-endpoint"|"vpc-endpoint-service"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"|"vpc-flow-log",
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create an Amazon FPGA image

       This example creates an AFI from the specified tarball in the specified
       bucket.

       Command:

          aws ec2 create-fpga-image --name my-afi --description test-afi --input-storage-location Bucket=my-fpga-bucket,Key=dcp/17_12_22-103226.Developer_CL.tar --logs-storage-location Bucket=my-fpga-bucket,Key=logs

       Output:

          {
            "FpgaImageId": "afi-0d123e123bfc85abc",
            "FpgaImageGlobalId": "agfi-123cb27b5e84a0abc"
          }

OUTPUT
       FpgaImageId -> (string)
          The FPGA image identifier (AFI ID).

       FpgaImageGlobalId -> (string)
          The global FPGA image identifier (AGFI ID).



                                                           CREATE-FPGA-IMAGE()
