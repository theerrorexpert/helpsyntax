DESCRIBE-IPAM-POOLS()                                    DESCRIBE-IPAM-POOLS()



NAME
       describe-ipam-pools -

DESCRIPTION
       Get information about your IPAM pools.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       describe-ipam-pools is a paginated operation. Multiple API calls may be
       issued in order to retrieve the entire data set  of  results.  You  can
       disable pagination by providing the --no-paginate argument.  When using
       --output text and the --query argument on  a  paginated  response,  the
       --query  argument  must  extract data from the results of the following
       query expressions: IpamPools

SYNOPSIS
            describe-ipam-pools
          [--dry-run | --no-dry-run]
          [--filters <value>]
          [--ipam-pool-ids <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --dry-run | --no-dry-run (boolean)
          A check for whether you have the required permissions for the action
          without  actually making the request and provides an error response.
          If you have the required permissions, the error response is  DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --filters (list)
          One or more filters for the request. For more information about fil-
          tering, see Filtering CLI output .

          (structure)
              A filter name and value pair that is used to return a more  spe-
              cific  list of results from a describe operation. Filters can be
              used to match a set of resources by specific criteria,  such  as
              tags, attributes, or IDs.

              If  you specify multiple filters, the filters are joined with an
              AND , and the request returns only results that match all of the
              specified filters.

              Name -> (string)
                 The name of the filter. Filter names are case-sensitive.

              Values -> (list)
                 The  filter  values. Filter values are case-sensitive. If you
                 specify multiple values for a filter, the values  are  joined
                 with  an  OR , and the request returns all results that match
                 any of the specified values.

                 (string)

       Shorthand Syntax:

          Name=string,Values=string,string ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Values": ["string", ...]
            }
            ...
          ]

       --ipam-pool-ids (list)
          The IDs of the IPAM pools you would like information on.

          (string)

       Syntax:

          "string" "string" ...

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --starting-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The size of each page to get in the AWS service call. This does  not
          affect the number of items returned in the command's output. Setting
          a smaller page size results  in  more  calls  to  the  AWS  service,
          retrieving  fewer  items in each call. This can help prevent the AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To view the details for an IPAM pool

       The  following describe-ipam-pools example shows the details for pools.

       (Linux):

          aws ec2 describe-ipam-pools \
              --filters Name=owner-id,Values=123456789012 Name=ipam-scope-id,Values=ipam-scope-02fc38cd4c48e7d38

       (Windows):

          aws ec2 describe-ipam-pools ^
              --filters Name=owner-id,Values=123456789012 Name=ipam-scope-id,Values=ipam-scope-02fc38cd4c48e7d38

       Output:

          {
              "IpamPools": [
                  {
                      "OwnerId": "123456789012",
                      "IpamPoolId": "ipam-pool-02ec043a19bbe5d08",
                      "IpamPoolArn": "arn:aws:ec2::123456789012:ipam-pool/ipam-pool-02ec043a19bbe5d08",
                      "IpamScopeArn": "arn:aws:ec2::123456789012:ipam-scope/ipam-scope-02fc38cd4c48e7d38",
                      "IpamScopeType": "private",
                      "IpamArn": "arn:aws:ec2::123456789012:ipam/ipam-08440e7a3acde3908",
                      "IpamRegion": "us-east-1",
                      "Locale": "None",
                      "PoolDepth": 1,
                      "State": "create-complete",
                      "AutoImport": true,
                      "AddressFamily": "ipv4",
                      "AllocationMinNetmaskLength": 16,
                      "AllocationMaxNetmaskLength": 26,
                      "AllocationDefaultNetmaskLength": 24,
                      "AllocationResourceTags": [
                          {
                              "Key": "Environment",
                              "Value": "Preprod"
                          }
                      ],
                      "Tags": [
                          {
                              "Key": "Name",
                              "Value": "Preprod pool"
                          }
                      ]
                  }
              ]
          }

OUTPUT
       NextToken -> (string)
          The token to use to retrieve the next page of results. This value is
          null when there are no more results to return.

       IpamPools -> (list)
          Information about the IPAM pools.

          (structure)
              In  IPAM,  a  pool  is  a  collection of contiguous IP addresses
              CIDRs. Pools enable you to organize your IP addresses  according
              to  your  routing  and  security needs. For example, if you have
              separate routing and security needs for development and  produc-
              tion applications, you can create a pool for each.

              OwnerId -> (string)
                 The  Amazon  Web Services account ID of the owner of the IPAM
                 pool.

              IpamPoolId -> (string)
                 The ID of the IPAM pool.

              SourceIpamPoolId -> (string)
                 The ID of the source IPAM pool. You can use  this  option  to
                 create an IPAM pool within an existing source pool.

              IpamPoolArn -> (string)
                 The ARN of the IPAM pool.

              IpamScopeArn -> (string)
                 The ARN of the scope of the IPAM pool.

              IpamScopeType -> (string)
                 In  IPAM, a scope is the highest-level container within IPAM.
                 An IPAM contains two default scopes.  Each  scope  represents
                 the  IP  space  for  a  single  network. The private scope is
                 intended for all private IP address space. The  public  scope
                 is  intended  for  all public IP address space. Scopes enable
                 you to reuse IP addresses across  multiple  unconnected  net-
                 works without causing IP address overlap or conflict.

              IpamArn -> (string)
                 The ARN of the IPAM.

              IpamRegion -> (string)
                 The Amazon Web Services Region of the IPAM pool.

              Locale -> (string)
                 The  locale of the IPAM pool. In IPAM, the locale is the Ama-
                 zon Web Services Region where you want to make an  IPAM  pool
                 available  for allocations. Only resources in the same Region
                 as the locale of the pool can get IP address allocations from
                 the  pool.  You can only allocate a CIDR for a VPC, for exam-
                 ple, from an IPAM pool that shares a  locale  with  the  VPCs
                 Region.  Note  that  once you choose a Locale for a pool, you
                 cannot modify it. If you choose an Amazon Web Services Region
                 for  locale  that  has  not  been  configured as an operating
                 Region for the IPAM, you'll get an error.

              PoolDepth -> (integer)
                 The depth of pools in your IPAM pool. The pool depth quota is
                 10.  For  more  information, see Quotas in IPAM in the Amazon
                 VPC IPAM User Guide .

              State -> (string)
                 The state of the IPAM pool.

              StateMessage -> (string)
                 A message related to the failed creation of an IPAM pool.

              Description -> (string)
                 The description of the IPAM pool.

              AutoImport -> (boolean)
                 If selected, IPAM will continuously look for resources within
                 the  CIDR range of this pool and automatically import them as
                 allocations into your IPAM. The CIDRs that will be  allocated
                 for  these  resources  must not already be allocated to other
                 resources in order for  the  import  to  succeed.  IPAM  will
                 import  a  CIDR  regardless of its compliance with the pool's
                 allocation rules, so a resource might be imported and  subse-
                 quently  marked  as  noncompliant. If IPAM discovers multiple
                 CIDRs that overlap, IPAM will import the largest  CIDR  only.
                 If  IPAM  discovers  multiple CIDRs with matching CIDRs, IPAM
                 will randomly import one of them only.

                 A locale must be set on the pool for this feature to work.

              PubliclyAdvertisable -> (boolean)
                 Determines if a pool is publicly advertisable. This option is
                 not available for pools with AddressFamily set to ipv4 .

              AddressFamily -> (string)
                 The address family of the pool.

              AllocationMinNetmaskLength -> (integer)
                 The  minimum  netmask length required for CIDR allocations in
                 this IPAM pool to be compliant. The  minimum  netmask  length
                 must  be  less than the maximum netmask length. Possible net-
                 mask lengths for IPv4 addresses are 0 - 32. Possible  netmask
                 lengths for IPv6 addresses are 0 - 128.

              AllocationMaxNetmaskLength -> (integer)
                 The  maximum  netmask length possible for CIDR allocations in
                 this IPAM pool to be compliant. The  maximum  netmask  length
                 must  be  greater  than  the minimum netmask length. Possible
                 netmask lengths for IPv4 addresses are 0 - 32. Possible  net-
                 mask lengths for IPv6 addresses are 0 - 128.

              AllocationDefaultNetmaskLength -> (integer)
                 The  default  netmask  length  for  allocations added to this
                 pool. If, for example, the CIDR  assigned  to  this  pool  is
                 10.0.0.0/8  and  you  enter  16  here,  new  allocations will
                 default to 10.0.0.0/16.

              AllocationResourceTags -> (list)
                 Tags that are required for resources that use CIDRs from this
                 IPAM  pool. Resources that do not have these tags will not be
                 allowed to allocate space from the  pool.  If  the  resources
                 have their tags changed after they have allocated space or if
                 the allocation tagging requirements are changed on the  pool,
                 the resource may be marked as noncompliant.

                 (structure)
                     The  key/value  combination  of  a  tag  assigned  to the
                     resource. Use the tag key in the filter name and the  tag
                     value  as  the  filter  value.  For  example, to find all
                     resources that have a tag with  the  key  Owner  and  the
                     value  TeamA  , specify tag:Owner for the filter name and
                     TeamA for the filter value.

                     Key -> (string)
                        The key of a tag assigned to the  resource.  Use  this
                        filter  to  find  all  resources assigned a tag with a
                        specific key, regardless of the tag value.

                     Value -> (string)
                        The value of the tag.

              Tags -> (list)
                 The key/value combination of a tag assigned to the  resource.
                 Use  the  tag key in the filter name and the tag value as the
                 filter value. For example, to find all resources that have  a
                 tag  with  the  key  Owner  and  the  value  TeamA  , specify
                 tag:Owner for the filter name and TeamA for the filter value.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints:  Tag keys are case-sensitive and accept a
                        maximum of 127 Unicode characters. May not begin  with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints:  Tag values are case-sensitive and accept
                        a maximum of 255 Unicode characters.

              AwsService -> (string)
                 Limits which service in Amazon Web Services that the pool can
                 be used in. "ec2", for example, allows users to use space for
                 Elastic IP addresses and VPCs.



                                                         DESCRIBE-IPAM-POOLS()
