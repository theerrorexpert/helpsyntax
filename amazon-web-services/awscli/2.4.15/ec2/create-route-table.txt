CREATE-ROUTE-TABLE()                                      CREATE-ROUTE-TABLE()



NAME
       create-route-table -

DESCRIPTION
       Creates  a  route table for the specified VPC. After you create a route
       table, you can add routes and associate the table with a subnet.

       For more information, see Route tables in the  Amazon  Virtual  Private
       Cloud User Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-route-table
          [--dry-run | --no-dry-run]
          --vpc-id <value>
          [--tag-specifications <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --dry-run | --no-dry-run (boolean)
          Checks  whether  you  have  the required permissions for the action,
          without actually making the request, and provides an error response.
          If  you have the required permissions, the error response is DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --vpc-id (string)
          The ID of the VPC.

       --tag-specifications (list)
          The tags to assign to the route table.

          (structure)
              The tags to apply to a resource when the resource is being  cre-
              ated.

              ResourceType -> (string)
                 The type of resource to tag on creation.

              Tags -> (list)
                 The tags to apply to the resource.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints:  Tag keys are case-sensitive and accept a
                        maximum of 127 Unicode characters. May not begin  with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints:  Tag values are case-sensitive and accept
                        a maximum of 255 Unicode characters.

       Shorthand Syntax:

          ResourceType=string,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "ResourceType": "capacity-reservation"|"client-vpn-endpoint"|"customer-gateway"|"carrier-gateway"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-ip"|"elastic-gpu"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"instance-event-window"|"internet-gateway"|"ipam"|"ipam-pool"|"ipam-scope"|"ipv4pool-ec2"|"ipv6pool-ec2"|"key-pair"|"launch-template"|"local-gateway"|"local-gateway-route-table"|"local-gateway-virtual-interface"|"local-gateway-virtual-interface-group"|"local-gateway-route-table-vpc-association"|"local-gateway-route-table-virtual-interface-group-association"|"natgateway"|"network-acl"|"network-interface"|"network-insights-analysis"|"network-insights-path"|"network-insights-access-scope"|"network-insights-access-scope-analysis"|"placement-group"|"prefix-list"|"replace-root-volume-task"|"reserved-instances"|"route-table"|"security-group"|"security-group-rule"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-route-table"|"volume"|"vpc"|"vpc-endpoint"|"vpc-endpoint-service"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"|"vpc-flow-log",
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a route table

       This example creates a route table for the specified VPC.

       Command:

          aws ec2 create-route-table --vpc-id vpc-a01106c2

       Output:

          {
              "RouteTable": {
                  "Associations": [],
                  "RouteTableId": "rtb-22574640",
                  "VpcId": "vpc-a01106c2",
                  "PropagatingVgws": [],
                  "Tags": [],
                  "Routes": [
                      {
                          "GatewayId": "local",
                          "DestinationCidrBlock": "10.0.0.0/16",
                          "State": "active"
                      }
                  ]
              }
          }

OUTPUT
       RouteTable -> (structure)
          Information about the route table.

          Associations -> (list)
              The associations between the route table and one or more subnets
              or a gateway.

              (structure)
                 Describes  an  association between a route table and a subnet
                 or gateway.

                 Main -> (boolean)
                     Indicates whether this is the main route table.

                 RouteTableAssociationId -> (string)
                     The ID of the association.

                 RouteTableId -> (string)
                     The ID of the route table.

                 SubnetId -> (string)
                     The ID of the subnet. A subnet ID is not returned for  an
                     implicit association.

                 GatewayId -> (string)
                     The  ID  of the internet gateway or virtual private gate-
                     way.

                 AssociationState -> (structure)
                     The state of the association.

                     State -> (string)
                        The state of the association.

                     StatusMessage -> (string)
                        The status message, if applicable.

          PropagatingVgws -> (list)
              Any virtual private gateway (VGW) propagating routes.

              (structure)
                 Describes a virtual private gateway propagating route.

                 GatewayId -> (string)
                     The ID of the virtual private gateway.

          RouteTableId -> (string)
              The ID of the route table.

          Routes -> (list)
              The routes in the route table.

              (structure)
                 Describes a route in a route table.

                 DestinationCidrBlock -> (string)
                     The IPv4 CIDR block used for the destination match.

                 DestinationIpv6CidrBlock -> (string)
                     The IPv6 CIDR block used for the destination match.

                 DestinationPrefixListId -> (string)
                     The prefix of the Amazon Web Service.

                 EgressOnlyInternetGatewayId -> (string)
                     The ID of the egress-only internet gateway.

                 GatewayId -> (string)
                     The ID of a gateway attached to your VPC.

                 InstanceId -> (string)
                     The ID of a NAT instance in your VPC.

                 InstanceOwnerId -> (string)
                     The ID of Amazon  Web  Services  account  that  owns  the
                     instance.

                 NatGatewayId -> (string)
                     The ID of a NAT gateway.

                 TransitGatewayId -> (string)
                     The ID of a transit gateway.

                 LocalGatewayId -> (string)
                     The ID of the local gateway.

                 CarrierGatewayId -> (string)
                     The ID of the carrier gateway.

                 NetworkInterfaceId -> (string)
                     The ID of the network interface.

                 Origin -> (string)
                     Describes how the route was created.

                     o CreateRouteTable  - The route was automatically created
                       when the route table was created.

                     o CreateRoute - The route was manually added to the route
                       table.

                     o EnableVgwRoutePropagation - The route was propagated by
                       route propagation.

                 State -> (string)
                     The state of the route.  The  blackhole  state  indicates
                     that the route's target isn't available (for example, the
                     specified gateway isn't attached to the VPC, or the spec-
                     ified NAT instance has been terminated).

                 VpcPeeringConnectionId -> (string)
                     The ID of a VPC peering connection.

                 CoreNetworkArn -> (string)
                     The Amazon Resource Name (ARN) of the core network.

          Tags -> (list)
              Any tags assigned to the route table.

              (structure)
                 Describes a tag.

                 Key -> (string)
                     The key of the tag.

                     Constraints:  Tag  keys  are  case-sensitive and accept a
                     maximum of 127 Unicode characters.  May  not  begin  with
                     aws: .

                 Value -> (string)
                     The value of the tag.

                     Constraints:  Tag  values are case-sensitive and accept a
                     maximum of 255 Unicode characters.

          VpcId -> (string)
              The ID of the VPC.

          OwnerId -> (string)
              The ID of the Amazon Web Services account that  owns  the  route
              table.



                                                          CREATE-ROUTE-TABLE()
