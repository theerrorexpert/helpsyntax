CREATE-VPC-ENDPOINT()                                    CREATE-VPC-ENDPOINT()



NAME
       create-vpc-endpoint -

DESCRIPTION
       Creates a VPC endpoint for a specified service. An endpoint enables you
       to create a private connection between your VPC and  the  service.  The
       service  may be provided by Amazon Web Services, an Amazon Web Services
       Marketplace Partner, or another Amazon Web Services account.  For  more
       information, see VPC Endpoints in the Amazon Virtual Private Cloud User
       Guide .

       A gateway endpoint serves as a target for a route in your  route  table
       for  traffic  destined  for  the Amazon Web Service. You can specify an
       endpoint policy to attach to the endpoint, which will control access to
       the  service  from  your VPC. You can also specify the VPC route tables
       that use the endpoint.

       An interface endpoint is a network interface in your subnet that serves
       as  an  endpoint  for communicating with the specified service. You can
       specify the subnets in which to create an endpoint,  and  the  security
       groups to associate with the endpoint network interface.

       A  GatewayLoadBalancer  endpoint  is a network interface in your subnet
       that serves an endpoint for communicating with a Gateway Load  Balancer
       that you've configured as a VPC endpoint service.

       Use  DescribeVpcEndpointServices to get a list of supported services.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-vpc-endpoint
          [--dry-run | --no-dry-run]
          [--vpc-endpoint-type <value>]
          --vpc-id <value>
          --service-name <value>
          [--policy-document <value>]
          [--route-table-ids <value>]
          [--subnet-ids <value>]
          [--security-group-ids <value>]
          [--client-token <value>]
          [--private-dns-enabled | --no-private-dns-enabled]
          [--tag-specifications <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --dry-run | --no-dry-run (boolean)
          Checks  whether  you  have  the required permissions for the action,
          without actually making the request, and provides an error response.
          If  you have the required permissions, the error response is DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --vpc-endpoint-type (string)
          The type of endpoint.

          Default: Gateway

          Possible values:

          o Interface

          o Gateway

          o GatewayLoadBalancer

       --vpc-id (string)
          The ID of the VPC in which the endpoint will be used.

       --service-name (string)
          The service name. To get a  list  of  available  services,  use  the
          DescribeVpcEndpointServices  request,  or get the name from the ser-
          vice provider.

       --policy-document (string)
          (Interface and gateway endpoints) A policy to attach to the endpoint
          that  controls  access  to  the service. The policy must be in valid
          JSON format. If this parameter is not specified, we attach a default
          policy that allows full access to the service.

       --route-table-ids (list)
          (Gateway endpoint) One or more route table IDs.

          (string)

       Syntax:

          "string" "string" ...

       --subnet-ids (list)
          (Interface  and  Gateway  Load  Balancer endpoints) The ID of one or
          more subnets in which to create an endpoint network interface. For a
          Gateway Load Balancer endpoint, you can specify one subnet only.

          (string)

       Syntax:

          "string" "string" ...

       --security-group-ids (list)
          (Interface  endpoint) The ID of one or more security groups to asso-
          ciate with the endpoint network interface.

          (string)

       Syntax:

          "string" "string" ...

       --client-token (string)
          Unique, case-sensitive identifier that you  provide  to  ensure  the
          idempotency  of the request. For more information, see How to ensure
          idempotency .

       --private-dns-enabled | --no-private-dns-enabled (boolean)
          (Interface endpoint) Indicates whether to associate a private hosted
          zone  with  the  specified  VPC.  The private hosted zone contains a
          record set for the default public DNS name for the service  for  the
          Region   (for   example,  kinesis.us-east-1.amazonaws.com  ),  which
          resolves to the private IP addresses of the endpoint network  inter-
          faces  in  the VPC. This enables you to make requests to the default
          public DNS name for the service instead of the public DNS names that
          are automatically generated by the VPC endpoint service.

          To  use  a  private  hosted  zone,  you  must  set the following VPC
          attributes to true : enableDnsHostnames and enableDnsSupport  .  Use
          ModifyVpcAttribute to set the VPC attributes.

          Default: true

       --tag-specifications (list)
          The tags to associate with the endpoint.

          (structure)
              The  tags to apply to a resource when the resource is being cre-
              ated.

              ResourceType -> (string)
                 The type of resource to tag on creation.

              Tags -> (list)
                 The tags to apply to the resource.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints: Tag keys are case-sensitive and accept  a
                        maximum  of 127 Unicode characters. May not begin with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints: Tag values are case-sensitive and  accept
                        a maximum of 255 Unicode characters.

       Shorthand Syntax:

          ResourceType=string,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "ResourceType": "capacity-reservation"|"client-vpn-endpoint"|"customer-gateway"|"carrier-gateway"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-ip"|"elastic-gpu"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"instance-event-window"|"internet-gateway"|"ipam"|"ipam-pool"|"ipam-scope"|"ipv4pool-ec2"|"ipv6pool-ec2"|"key-pair"|"launch-template"|"local-gateway"|"local-gateway-route-table"|"local-gateway-virtual-interface"|"local-gateway-virtual-interface-group"|"local-gateway-route-table-vpc-association"|"local-gateway-route-table-virtual-interface-group-association"|"natgateway"|"network-acl"|"network-interface"|"network-insights-analysis"|"network-insights-path"|"network-insights-access-scope"|"network-insights-access-scope-analysis"|"placement-group"|"prefix-list"|"replace-root-volume-task"|"reserved-instances"|"route-table"|"security-group"|"security-group-rule"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-route-table"|"volume"|"vpc"|"vpc-endpoint"|"vpc-endpoint-service"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"|"vpc-flow-log",
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To create a gateway endpoint

       The  following  create-vpc-endpoint  example creates a gateway VPC end-
       point between VPC vpc-1a2b3c4d and Amazon S3 in the  us-east-1  region,
       and associates route table rtb-11aa22bb with the endpoint.

          aws ec2 create-vpc-endpoint \
              --vpc-id vpc-1a2b3c4d \
              --service-name com.amazonaws.us-east-1.s3 \
              --route-table-ids rtb-11aa22bb

       Output:

          {
              "VpcEndpoint": {
                  "PolicyDocument": "{\"Version\":\"2008-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":\"\*\",\"Action\":\"\*\",\"Resource\":\"\*\"}]}",
                  "VpcId": "vpc-1a2b3c4d",
                  "State": "available",
                  "ServiceName": "com.amazonaws.us-east-1.s3",
                  "RouteTableIds": [
                      "rtb-11aa22bb"
                  ],
                  "VpcEndpointId": "vpc-1a2b3c4d",
                  "CreationTimestamp": "2015-05-15T09:40:50Z"
              }
          }

       For  more  information,  see Creating a gateway endpoint in the AWSPri-
       vateLink Guide.

       Example 2: To create an interface endpoint

       The following create-vpc-endpoint example creates an interface VPC end-
       point  between  VPC vpc-1a2b3c4d and Amazon S3 in the us-east-1 region.
       The command creates the endpoint in subnet subnet-1a2b3c4d,  associates
       it  with security group sg-1a2b3c4d, and adds a tag with a key of "Ser-
       vice" and a Value of "S3".

          aws ec2 create-vpc-endpoint \
              --vpc-id vpc-1a2b3c4d \
              --vpc-endpoint-type Interface \
              --service-name com.amazonaws.us-east-1.s3 \
              --subnet-id subnet-7b16de0c \
              --security-group-id sg-1a2b3c4d \
              --tag-specifications ResourceType=vpc-endpoint,Tags=[{Key=service,Value=S3}]

       Output:

          {
              "VpcEndpoint": {
                  "VpcEndpointId": "vpce-1a2b3c4d5e6f1a2b3",
                  "VpcEndpointType": "Interface",
                  "VpcId": "vpc-1a2b3c4d",
                  "ServiceName": "com.amazonaws.us-east-1.s3",
                  "State": "pending",
                  "RouteTableIds": [],
                  "SubnetIds": [
                      "subnet-1a2b3c4d"
                  ],
                  "Groups": [
                      {
                          "GroupId": "sg-1a2b3c4d",
                          "GroupName": "default"
                      }
                  ],
                  "PrivateDnsEnabled": false,
                  "RequesterManaged": false,
                  "NetworkInterfaceIds": [
                      "eni-0b16f0581c8ac6877"
                  ],
                  "DnsEntries": [
                      {
                          "DnsName": "*.vpce-1a2b3c4d5e6f1a2b3-9hnenorg.s3.us-east-1.vpce.amazonaws.com",
                          "HostedZoneId": "Z7HUB22UULQXV"
                      },
                      {
                          "DnsName": "*.vpce-1a2b3c4d5e6f1a2b3-9hnenorg-us-east-1c.s3.us-east-1.vpce.amazonaws.com",
                          "HostedZoneId": "Z7HUB22UULQXV"
                      }
                  ],
                  "CreationTimestamp": "2021-03-05T14:46:16.030000+00:00",
                  "Tags": [
                      {
                          "Key": "service",
                          "Value": "S3"
                      }
                  ],
                  "OwnerId": "123456789012"
              }
          }

       For more information, see Creating an interface endpoint  in  the  User
       Guide for AWSPrivateLink.

       Example 3: To create a Gateway Load Balancer endpoint

       The  following  create-vpc-endpoint example creates a Gateway Load Bal-
       ancer endpoint between VPC vpc-111122223333aabbc and and a service that
       is configured using a Gateway Load Balancer.

          aws ec2 create-vpc-endpoint \
              --service-name com.amazonaws.vpce.us-east-1.vpce-svc-123123a1c43abc123 \
              --vpc-endpoint-type GatewayLoadBalancer \
              --vpc-id vpc-111122223333aabbc \
              --subnet-id subnet-0011aabbcc2233445

       Output:

          {
              "VpcEndpoint": {
                  "VpcEndpointId": "vpce-aabbaabbaabbaabba",
                  "VpcEndpointType": "GatewayLoadBalancer",
                  "VpcId": "vpc-111122223333aabbc",
                  "ServiceName": "com.amazonaws.vpce.us-east-1.vpce-svc-123123a1c43abc123",
                  "State": "pending",
                  "SubnetIds": [
                      "subnet-0011aabbcc2233445"
                  ],
                  "RequesterManaged": false,
                  "NetworkInterfaceIds": [
                      "eni-01010120203030405"
                  ],
                  "CreationTimestamp": "2020-11-11T08:06:03.522Z",
                  "OwnerId": "123456789012"
              }
          }

       For  more  information, see Gateway Load Balancer endpoints in the User
       Guide for AWSPrivateLink.

OUTPUT
       VpcEndpoint -> (structure)
          Information about the endpoint.

          VpcEndpointId -> (string)
              The ID of the VPC endpoint.

          VpcEndpointType -> (string)
              The type of endpoint.

          VpcId -> (string)
              The ID of the VPC to which the endpoint is associated.

          ServiceName -> (string)
              The name of the service to which the endpoint is associated.

          State -> (string)
              The state of the VPC endpoint.

          PolicyDocument -> (string)
              The policy document associated with the endpoint, if applicable.

          RouteTableIds -> (list)
              (Gateway  endpoint) One or more route tables associated with the
              endpoint.

              (string)

          SubnetIds -> (list)
              (Interface endpoint) One or more subnets in which  the  endpoint
              is located.

              (string)

          Groups -> (list)
              (Interface  endpoint) Information about the security groups that
              are associated with the network interface.

              (structure)
                 Describes a security group.

                 GroupId -> (string)
                     The ID of the security group.

                 GroupName -> (string)
                     The name of the security group.

          PrivateDnsEnabled -> (boolean)
              (Interface endpoint) Indicates whether  the  VPC  is  associated
              with a private hosted zone.

          RequesterManaged -> (boolean)
              Indicates  whether the VPC endpoint is being managed by its ser-
              vice.

          NetworkInterfaceIds -> (list)
              (Interface endpoint) One or more network interfaces for the end-
              point.

              (string)

          DnsEntries -> (list)
              (Interface endpoint) The DNS entries for the endpoint.

              (structure)
                 Describes a DNS entry.

                 DnsName -> (string)
                     The DNS name.

                 HostedZoneId -> (string)
                     The ID of the private hosted zone.

          CreationTimestamp -> (timestamp)
              The date and time that the VPC endpoint was created.

          Tags -> (list)
              Any tags assigned to the VPC endpoint.

              (structure)
                 Describes a tag.

                 Key -> (string)
                     The key of the tag.

                     Constraints:  Tag  keys  are  case-sensitive and accept a
                     maximum of 127 Unicode characters.  May  not  begin  with
                     aws: .

                 Value -> (string)
                     The value of the tag.

                     Constraints:  Tag  values are case-sensitive and accept a
                     maximum of 255 Unicode characters.

          OwnerId -> (string)
              The ID of the Amazon Web Services account that owns the VPC end-
              point.

          LastError -> (structure)
              The last error that occurred for VPC endpoint.

              Message -> (string)
                 The error message for the VPC endpoint error.

              Code -> (string)
                 The error code for the VPC endpoint error.

       ClientToken -> (string)
          Unique,  case-sensitive  identifier  that  you provide to ensure the
          idempotency of the request.



                                                         CREATE-VPC-ENDPOINT()
