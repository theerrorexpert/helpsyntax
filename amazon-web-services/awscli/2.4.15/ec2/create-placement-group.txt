CREATE-PLACEMENT-GROUP()                              CREATE-PLACEMENT-GROUP()



NAME
       create-placement-group -

DESCRIPTION
       Creates a placement group in which to launch instances. The strategy of
       the placement group determines how the instances are  organized  within
       the group.

       A  cluster  placement group is a logical grouping of instances within a
       single Availability Zone that benefit from low  network  latency,  high
       network  throughput.  A spread placement group places instances on dis-
       tinct hardware. A partition placement group places groups of  instances
       in  different partitions, where instances in one partition do not share
       the same hardware with instances in another partition.

       For more information, see Placement groups in the Amazon EC2 User Guide
       .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-placement-group
          [--dry-run | --no-dry-run]
          [--group-name <value>]
          [--strategy <value>]
          [--partition-count <value>]
          [--tag-specifications <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --dry-run | --no-dry-run (boolean)
          Checks  whether  you  have  the required permissions for the action,
          without actually making the request, and provides an error response.
          If  you have the required permissions, the error response is DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --group-name (string)
          A name for the placement group. Must be unique within the  scope  of
          your account for the Region.

          Constraints: Up to 255 ASCII characters

       --strategy (string)
          The placement strategy.

          Possible values:

          o cluster

          o spread

          o partition

       --partition-count (integer)
          The  number of partitions. Valid only when Strategy is set to parti-
          tion .

       --tag-specifications (list)
          The tags to apply to the new placement group.

          (structure)
              The tags to apply to a resource when the resource is being  cre-
              ated.

              ResourceType -> (string)
                 The type of resource to tag on creation.

              Tags -> (list)
                 The tags to apply to the resource.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints:  Tag keys are case-sensitive and accept a
                        maximum of 127 Unicode characters. May not begin  with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints:  Tag values are case-sensitive and accept
                        a maximum of 255 Unicode characters.

       Shorthand Syntax:

          ResourceType=string,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "ResourceType": "capacity-reservation"|"client-vpn-endpoint"|"customer-gateway"|"carrier-gateway"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-ip"|"elastic-gpu"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"instance-event-window"|"internet-gateway"|"ipam"|"ipam-pool"|"ipam-scope"|"ipv4pool-ec2"|"ipv6pool-ec2"|"key-pair"|"launch-template"|"local-gateway"|"local-gateway-route-table"|"local-gateway-virtual-interface"|"local-gateway-virtual-interface-group"|"local-gateway-route-table-vpc-association"|"local-gateway-route-table-virtual-interface-group-association"|"natgateway"|"network-acl"|"network-interface"|"network-insights-analysis"|"network-insights-path"|"network-insights-access-scope"|"network-insights-access-scope-analysis"|"placement-group"|"prefix-list"|"replace-root-volume-task"|"reserved-instances"|"route-table"|"security-group"|"security-group-rule"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-route-table"|"volume"|"vpc"|"vpc-endpoint"|"vpc-endpoint-service"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"|"vpc-flow-log",
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a placement group

       This example command creates a placement group with the specified name.

       Command:

          aws ec2 create-placement-group --group-name my-cluster --strategy cluster

       To create a partition placement group

       This   example  command  creates  a  partition  placement  group  named
       HDFS-Group-A with five partitions.

       Command:

          aws ec2 create-placement-group --group-name HDFS-Group-A --strategy partition --partition-count 5

OUTPUT
       PlacementGroup -> (structure)
          Describes a placement group.

          GroupName -> (string)
              The name of the placement group.

          State -> (string)
              The state of the placement group.

          Strategy -> (string)
              The placement strategy.

          PartitionCount -> (integer)
              The number of partitions. Valid only if strategy is set to  par-
              tition .

          GroupId -> (string)
              The ID of the placement group.

          Tags -> (list)
              Any tags applied to the placement group.

              (structure)
                 Describes a tag.

                 Key -> (string)
                     The key of the tag.

                     Constraints:  Tag  keys  are  case-sensitive and accept a
                     maximum of 127 Unicode characters.  May  not  begin  with
                     aws: .

                 Value -> (string)
                     The value of the tag.

                     Constraints:  Tag  values are case-sensitive and accept a
                     maximum of 255 Unicode characters.

          GroupArn -> (string)
              The Amazon Resource Name (ARN) of the placement group.



                                                      CREATE-PLACEMENT-GROUP()
