GET-SPOT-PLACEMENT-SCORES()                        GET-SPOT-PLACEMENT-SCORES()



NAME
       get-spot-placement-scores -

DESCRIPTION
       Calculates  the  Spot placement score for a Region or Availability Zone
       based on the specified target capacity and compute requirements.

       You  can  specify   your   compute   requirements   either   by   using
       InstanceRequirementsWithMetadata  and  letting  Amazon  EC2  choose the
       optimal instance types to fulfill your Spot request, or you can specify
       the instance types by using InstanceTypes .

       For  more  information, see Spot placement score in the Amazon EC2 User
       Guide.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       get-spot-placement-scores is a paginated operation. Multiple API  calls
       may  be issued in order to retrieve the entire data set of results. You
       can disable pagination by providing the --no-paginate  argument.   When
       using  --output  text and the --query argument on a paginated response,
       the --query argument must extract data from the results of the  follow-
       ing query expressions: SpotPlacementScores

SYNOPSIS
            get-spot-placement-scores
          [--instance-types <value>]
          --target-capacity <value>
          [--target-capacity-unit-type <value>]
          [--single-availability-zone | --no-single-availability-zone]
          [--region-names <value>]
          [--instance-requirements-with-metadata <value>]
          [--dry-run | --no-dry-run]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --instance-types (list)
          The  instance  types.  We  recommend that you specify at least three
          instance types. If you specify one or two instance types, or specify
          variations of a single instance type (for example, an m3.xlarge with
          and without instance storage), the  returned  placement  score  will
          always be low.

          If  you  specify  InstanceTypes , you can't specify InstanceRequire-
          mentsWithMetadata .

          (string)

       Syntax:

          "string" "string" ...

       --target-capacity (integer)
          The target capacity.

       --target-capacity-unit-type (string)
          The unit for the target capacity.

          Default: units (translates to number of instances)

          Possible values:

          o vcpu

          o memory-mib

          o units

       --single-availability-zone | --no-single-availability-zone (boolean)
          Specify true so that the response returns a list  of  scored  Avail-
          ability  Zones.  Otherwise,  the  response  returns a list of scored
          Regions.

          A list of scored Availability Zones is useful if you want to  launch
          all of your Spot capacity into a single Availability Zone.

       --region-names (list)
          The  Regions  used  to narrow down the list of Regions to be scored.
          Enter the Region code, for example, us-east-1 .

          (string)

       Syntax:

          "string" "string" ...

       --instance-requirements-with-metadata (structure)
          The attributes for the instance types.  When  you  specify  instance
          attributes,  Amazon  EC2  will  identify  instance  types with those
          attributes.

          If you specify InstanceRequirementsWithMetadata , you can't  specify
          InstanceTypes .

          ArchitectureTypes -> (list)
              The architecture type.

              (string)

          VirtualizationTypes -> (list)
              The virtualization type.

              (string)

          InstanceRequirements -> (structure)
              The attributes for the instance types. When you specify instance
              attributes, Amazon EC2 will identify instance types  with  those
              attributes.

              VCpuCount -> (structure)
                 The minimum and maximum number of vCPUs.

                 Min -> (integer)
                     The minimum number of vCPUs. To specify no minimum limit,
                     specify 0 .

                 Max -> (integer)
                     The maximum number of vCPUs. To specify no maximum limit,
                     omit this parameter.

              MemoryMiB -> (structure)
                 The minimum and maximum amount of memory, in MiB.

                 Min -> (integer)
                     The minimum amount of memory, in MiB. To specify no mini-
                     mum limit, specify 0 .

                 Max -> (integer)
                     The maximum amount of memory, in MiB. To specify no maxi-
                     mum limit, omit this parameter.

              CpuManufacturers -> (list)
                 The CPU manufacturers to include.

                 o For instance types with Intel CPUs, specify intel .

                 o For instance types with AMD CPUs, specify amd .

                 o For  instance  types with Amazon Web Services CPUs, specify
                   amazon-web-services .

                 NOTE:
                     Don't confuse the CPU manufacturer with the CPU architec-
                     ture.  Instances  will  be launched with a compatible CPU
                     architecture based on the Amazon Machine Image (AMI) that
                     you specify in your launch template.

                 Default: Any manufacturer

                 (string)

              MemoryGiBPerVCpu -> (structure)
                 The minimum and maximum amount of memory per vCPU, in GiB.

                 Default: No minimum or maximum limits

                 Min -> (double)
                     The minimum amount of memory per vCPU, in GiB. To specify
                     no minimum limit, omit this parameter.

                 Max -> (double)
                     The maximum amount of memory per vCPU, in GiB. To specify
                     no maximum limit, omit this parameter.

              ExcludedInstanceTypes -> (list)
                 The  instance  types to exclude. You can use strings with one
                 or more wild cards, represented  by  an  asterisk  (*  ),  to
                 exclude  an  instance  family, type, size, or generation. The
                 following are examples: m5.8xlarge , c5*.* , m5a.* , r* , *3*
                 .

                 For  example, if you specify c5* ,Amazon EC2 will exclude the
                 entire C5 instance family, which includes  all  C5a  and  C5n
                 instance  types.  If  you  specify  m5a.*  ,  Amazon EC2 will
                 exclude all the M5a instance types, but not the M5n  instance
                 types.

                 Default: No excluded instance types

                 (string)

              InstanceGenerations -> (list)
                 Indicates  whether  current  or  previous generation instance
                 types are included. The current generation instance types are
                 recommended  for  use.  Current generation instance types are
                 typically  the  latest  two  to  three  generations  in  each
                 instance  family. For more information, see Instance types in
                 the Amazon EC2 User Guide .

                 For current generation instance types, specify current .

                 For previous generation instance types, specify previous .

                 Default: Current and previous generation instance types

                 (string)

              SpotMaxPricePercentageOverLowestPrice -> (integer)
                 The price protection threshold for Spot Instance. This is the
                 maximum  youll  pay for an Spot Instance, expressed as a per-
                 centage above the cheapest M, C, or R instance type with your
                 specified  attributes. When Amazon EC2 selects instance types
                 with your attributes, it excludes instance types priced above
                 your threshold.

                 The parameter accepts an integer, which Amazon EC2 interprets
                 as a percentage.

                 To turn off price protection, specify a high value,  such  as
                 999999 .

                 This  parameter  is  not supported for GetSpotPlacementScores
                 and GetInstanceTypesFromInstanceRequirements .

                 Default: 100

              OnDemandMaxPricePercentageOverLowestPrice -> (integer)
                 The price protection threshold for On-Demand Instances.  This
                 is the maximum youll pay for an On-Demand Instance, expressed
                 as a percentage above the cheapest M, C, or R  instance  type
                 with  your  specified  attributes.  When  Amazon  EC2 selects
                 instance types with your  attributes,  it  excludes  instance
                 types priced above your threshold.

                 The parameter accepts an integer, which Amazon EC2 interprets
                 as a percentage.

                 To turn off price protection, specify a high value,  such  as
                 999999 .

                 This  parameter  is  not supported for GetSpotPlacementScores
                 and GetInstanceTypesFromInstanceRequirements .

                 Default: 20

              BareMetal -> (string)
                 Indicates whether bare metal instance types must be included,
                 excluded, or required.

                 o To include bare metal instance types, specify included .

                 o To require only bare metal instance types, specify required
                   .

                 o To exclude bare metal instance types, specify excluded .

                 Default: excluded

              BurstablePerformance -> (string)
                 Indicates whether burstable performance T instance types  are
                 included,  excluded,  or  required. For more information, see
                 Burstable performance instances .

                 o To include burstable performance  instance  types,  specify
                   included .

                 o To require only burstable performance instance types, spec-
                   ify required .

                 o To exclude burstable performance  instance  types,  specify
                   excluded .

                 Default: excluded

              RequireHibernateSupport -> (boolean)
                 Indicates whether instance types must support hibernation for
                 On-Demand Instances.

                 This parameter is not supported for GetSpotPlacementScores  .

                 Default: false

              NetworkInterfaceCount -> (structure)
                 The minimum and maximum number of network interfaces.

                 Default: No minimum or maximum limits

                 Min -> (integer)
                     The  minimum  number of network interfaces. To specify no
                     minimum limit, omit this parameter.

                 Max -> (integer)
                     The maximum number of network interfaces. To  specify  no
                     maximum limit, omit this parameter.

              LocalStorage -> (string)
                 Indicates  whether instance types with instance store volumes
                 are included, excluded, or required.  For  more  information,
                 Amazon EC2 instance store in the Amazon EC2 User Guide .

                 o To  include  instance  types  with  instance store volumes,
                   specify included .

                 o To require only instance types with instance store volumes,
                   specify required .

                 o To  exclude  instance  types  with  instance store volumes,
                   specify excluded .

                 Default: included

              LocalStorageTypes -> (list)
                 The type of local storage that is required.

                 o For instance types with  hard  disk  drive  (HDD)  storage,
                   specify hdd .

                 o For  instance  types  with solid state drive (SDD) storage,
                   specify sdd .

                 Default: hdd and sdd

                 (string)

              TotalLocalStorageGB -> (structure)
                 The minimum and maximum amount of total local storage, in GB.

                 Default: No minimum or maximum limits

                 Min -> (double)
                     The  minimum  amount  of  total  local storage, in GB. To
                     specify no minimum limit, omit this parameter.

                 Max -> (double)
                     The maximum amount of total  local  storage,  in  GB.  To
                     specify no maximum limit, omit this parameter.

              BaselineEbsBandwidthMbps -> (structure)
                 The  minimum and maximum baseline bandwidth to Amazon EBS, in
                 Mbps. For more information, see Amazon EBSoptimized instances
                 in the Amazon EC2 User Guide .

                 Default: No minimum or maximum limits

                 Min -> (integer)
                     The  minimum  baseline  bandwidth, in Mbps. To specify no
                     minimum limit, omit this parameter.

                 Max -> (integer)
                     The maximum baseline bandwidth, in Mbps.  To  specify  no
                     maximum limit, omit this parameter.

              AcceleratorTypes -> (list)
                 The accelerator types that must be on the instance type.

                 o To  include instance types with GPU hardware, specify gpu .

                 o To include instance types with FPGA hardware, specify  fpga
                   .

                 o To  include instance types with inference hardware, specify
                   inference .

                 Default: Any accelerator type

                 (string)

              AcceleratorCount -> (structure)
                 The minimum and maximum number of accelerators (GPUs,  FPGAs,
                 or Amazon Web Services Inferentia chips) on an instance.

                 To exclude accelerator-enabled instance types, set Max to 0 .

                 Default: No minimum or maximum limits

                 Min -> (integer)
                     The minimum number of accelerators. To specify no minimum
                     limit, omit this parameter.

                 Max -> (integer)
                     The maximum number of accelerators. To specify no maximum
                     limit,  omit  this  parameter.   To   exclude   accelera-
                     tor-enabled instance types, set Max to 0 .

              AcceleratorManufacturers -> (list)
                 Indicates  whether  instance  types must have accelerators by
                 specific manufacturers.

                 o For instance types with NVIDIA devices, specify nvidia .

                 o For instance types with AMD devices, specify amd .

                 o For instance types with Amazon Web Services devices,  spec-
                   ify amazon-web-services .

                 o For instance types with Xilinx devices, specify xilinx .

                 Default: Any manufacturer

                 (string)

              AcceleratorNames -> (list)
                 The accelerators that must be on the instance type.

                 o For instance types with NVIDIA A100 GPUs, specify a100 .

                 o For instance types with NVIDIA V100 GPUs, specify v100 .

                 o For instance types with NVIDIA K80 GPUs, specify k80 .

                 o For instance types with NVIDIA T4 GPUs, specify t4 .

                 o For instance types with NVIDIA M60 GPUs, specify m60 .

                 o For  instance  types with AMD Radeon Pro V520 GPUs, specify
                   radeon-pro-v520 .

                 o For instance types with Xilinx VU9P FPGAs, specify vu9p .

                 Default: Any accelerator

                 (string)

              AcceleratorTotalMemoryMiB -> (structure)
                 The minimum and maximum amount of total  accelerator  memory,
                 in MiB.

                 Default: No minimum or maximum limits

                 Min -> (integer)
                     The  minimum  amount  of  accelerator  memory, in MiB. To
                     specify no minimum limit, omit this parameter.

                 Max -> (integer)
                     The maximum amount of  accelerator  memory,  in  MiB.  To
                     specify no maximum limit, omit this parameter.

       Shorthand Syntax:

          ArchitectureTypes=string,string,VirtualizationTypes=string,string,InstanceRequirements={VCpuCount={Min=integer,Max=integer},MemoryMiB={Min=integer,Max=integer},CpuManufacturers=[string,string],MemoryGiBPerVCpu={Min=double,Max=double},ExcludedInstanceTypes=[string,string],InstanceGenerations=[string,string],SpotMaxPricePercentageOverLowestPrice=integer,OnDemandMaxPricePercentageOverLowestPrice=integer,BareMetal=string,BurstablePerformance=string,RequireHibernateSupport=boolean,NetworkInterfaceCount={Min=integer,Max=integer},LocalStorage=string,LocalStorageTypes=[string,string],TotalLocalStorageGB={Min=double,Max=double},BaselineEbsBandwidthMbps={Min=integer,Max=integer},AcceleratorTypes=[string,string],AcceleratorCount={Min=integer,Max=integer},AcceleratorManufacturers=[string,string],AcceleratorNames=[string,string],AcceleratorTotalMemoryMiB={Min=integer,Max=integer}}

       JSON Syntax:

          {
            "ArchitectureTypes": ["i386"|"x86_64"|"arm64"|"x86_64_mac", ...],
            "VirtualizationTypes": ["hvm"|"paravirtual", ...],
            "InstanceRequirements": {
              "VCpuCount": {
                "Min": integer,
                "Max": integer
              },
              "MemoryMiB": {
                "Min": integer,
                "Max": integer
              },
              "CpuManufacturers": ["intel"|"amd"|"amazon-web-services", ...],
              "MemoryGiBPerVCpu": {
                "Min": double,
                "Max": double
              },
              "ExcludedInstanceTypes": ["string", ...],
              "InstanceGenerations": ["current"|"previous", ...],
              "SpotMaxPricePercentageOverLowestPrice": integer,
              "OnDemandMaxPricePercentageOverLowestPrice": integer,
              "BareMetal": "included"|"required"|"excluded",
              "BurstablePerformance": "included"|"required"|"excluded",
              "RequireHibernateSupport": true|false,
              "NetworkInterfaceCount": {
                "Min": integer,
                "Max": integer
              },
              "LocalStorage": "included"|"required"|"excluded",
              "LocalStorageTypes": ["hdd"|"ssd", ...],
              "TotalLocalStorageGB": {
                "Min": double,
                "Max": double
              },
              "BaselineEbsBandwidthMbps": {
                "Min": integer,
                "Max": integer
              },
              "AcceleratorTypes": ["gpu"|"fpga"|"inference", ...],
              "AcceleratorCount": {
                "Min": integer,
                "Max": integer
              },
              "AcceleratorManufacturers": ["nvidia"|"amd"|"amazon-web-services"|"xilinx", ...],
              "AcceleratorNames": ["a100"|"v100"|"k80"|"t4"|"m60"|"radeon-pro-v520"|"vu9p", ...],
              "AcceleratorTotalMemoryMiB": {
                "Min": integer,
                "Max": integer
              }
            }
          }

       --dry-run | --no-dry-run (boolean)
          Checks  whether  you  have  the required permissions for the action,
          without actually making the request, and provides an error response.
          If  you have the required permissions, the error response is DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --starting-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The size of each page to get in the AWS service call. This does  not
          affect the number of items returned in the command's output. Setting
          a smaller page size results  in  more  calls  to  the  AWS  service,
          retrieving  fewer  items in each call. This can help prevent the AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       SpotPlacementScores -> (list)
          The  Spot  placement  score  for  the top 10 Regions or Availability
          Zones, scored on a scale from 1  to  10.  Each  score  reflects  how
          likely  it  is that each Region or Availability Zone will succeed at
          fulfilling the specified target capacity at the  time  of  the  Spot
          placement  score request . A score of 10 means that your Spot capac-
          ity request is highly likely to succeed in that Region or Availabil-
          ity Zone.

          If  you  request  a  Spot  placement score for Regions, a high score
          assumes that your fleet request will be configured to use all Avail-
          ability Zones and the capacity-optimized allocation strategy. If you
          request a Spot placement score for Availability Zones, a high  score
          assumes  that  your fleet request will be configured to use a single
          Availability Zone and the capacity-optimized allocation strategy.

          Different Regions or Availability Zones might return the same score.

          NOTE:
              The  Spot  placement  score  serves as a recommendation only. No
              score guarantees that your Spot request will be  fully  or  par-
              tially fulfilled.

          (structure)
              The  Spot  placement score for this Region or Availability Zone.
              The score is calculated based on the assumption that the  capac-
              ity-optimized  allocation  strategy  is used and that all of the
              Availability Zones in the Region can be used.

              Region -> (string)
                 The Region.

              AvailabilityZoneId -> (string)
                 The Availability Zone.

              Score -> (integer)
                 The placement score, on a scale from 1 to 10 . A score of  10
                 indicates  that your Spot request is highly likely to succeed
                 in this Region or Availability Zone. A score of  1  indicates
                 that your Spot request is not likely to succeed.

       NextToken -> (string)
          The token for the next set of results.



                                                   GET-SPOT-PLACEMENT-SCORES()
