CREATE-TRAFFIC-MIRROR-FILTER()                  CREATE-TRAFFIC-MIRROR-FILTER()



NAME
       create-traffic-mirror-filter -

DESCRIPTION
       Creates a Traffic Mirror filter.

       A  Traffic  Mirror filter is a set of rules that defines the traffic to
       mirror.

       By  default,  no  traffic  is  mirrored.   To   mirror   traffic,   use
       CreateTrafficMirrorFilterRule  to  add Traffic Mirror rules to the fil-
       ter. The rules you add define what traffic gets mirrored. You can  also
       use  ModifyTrafficMirrorFilterNetworkServices  to mirror supported net-
       work services.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-traffic-mirror-filter
          [--description <value>]
          [--tag-specifications <value>]
          [--dry-run | --no-dry-run]
          [--client-token <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --description (string)
          The description of the Traffic Mirror filter.

       --tag-specifications (list)
          The tags to assign to a Traffic Mirror filter.

          (structure)
              The tags to apply to a resource when the resource is being  cre-
              ated.

              ResourceType -> (string)
                 The type of resource to tag on creation.

              Tags -> (list)
                 The tags to apply to the resource.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints:  Tag keys are case-sensitive and accept a
                        maximum of 127 Unicode characters. May not begin  with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints:  Tag values are case-sensitive and accept
                        a maximum of 255 Unicode characters.

       Shorthand Syntax:

          ResourceType=string,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "ResourceType": "capacity-reservation"|"client-vpn-endpoint"|"customer-gateway"|"carrier-gateway"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-ip"|"elastic-gpu"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"instance-event-window"|"internet-gateway"|"ipam"|"ipam-pool"|"ipam-scope"|"ipv4pool-ec2"|"ipv6pool-ec2"|"key-pair"|"launch-template"|"local-gateway"|"local-gateway-route-table"|"local-gateway-virtual-interface"|"local-gateway-virtual-interface-group"|"local-gateway-route-table-vpc-association"|"local-gateway-route-table-virtual-interface-group-association"|"natgateway"|"network-acl"|"network-interface"|"network-insights-analysis"|"network-insights-path"|"network-insights-access-scope"|"network-insights-access-scope-analysis"|"placement-group"|"prefix-list"|"replace-root-volume-task"|"reserved-instances"|"route-table"|"security-group"|"security-group-rule"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-route-table"|"volume"|"vpc"|"vpc-endpoint"|"vpc-endpoint-service"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"|"vpc-flow-log",
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --dry-run | --no-dry-run (boolean)
          Checks whether you have the required  permissions  for  the  action,
          without actually making the request, and provides an error response.
          If you have the required permissions, the error response is  DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --client-token (string)
          Unique,  case-sensitive  identifier  that  you provide to ensure the
          idempotency of the request. For more information, see How to  ensure
          idempotency .

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a Traffic Mirror Filter

       The  following  create-traffic-mirror-filter  example creates a Traffic
       Mirror filter. After you create  the  filter,  use  create-traffic-mir-
       ror-filter-rule to add rules to the filter.

          aws ec2 create-traffic-mirror-filter \
              --description "TCP Filter"

       Output:

          {
              "ClientToken": "28908518-100b-4987-8233-8c744EXAMPLE",
              "TrafficMirrorFilter": {
                  "TrafficMirrorFilterId": "tmf-04812ff784EXAMPLE",
                  "Description": "TCP Filter",
                  "EgressFilterRules": [],
                  "IngressFilterRules": [],
                  "Tags": [],
                  "NetworkServices": []
              }
          }

       For  more  information,  see  Create a Traffic Mirror Filter in the AWS
       Traffic Mirroring Guide.

OUTPUT
       TrafficMirrorFilter -> (structure)
          Information about the Traffic Mirror filter.

          TrafficMirrorFilterId -> (string)
              The ID of the Traffic Mirror filter.

          IngressFilterRules -> (list)
              Information about the ingress rules that are associated with the
              Traffic Mirror filter.

              (structure)
                 Describes the Traffic Mirror rule.

                 TrafficMirrorFilterRuleId -> (string)
                     The ID of the Traffic Mirror rule.

                 TrafficMirrorFilterId -> (string)
                     The  ID  of  the  Traffic  Mirror filter that the rule is
                     associated with.

                 TrafficDirection -> (string)
                     The traffic direction  assigned  to  the  Traffic  Mirror
                     rule.

                 RuleNumber -> (integer)
                     The rule number of the Traffic Mirror rule.

                 RuleAction -> (string)
                     The action assigned to the Traffic Mirror rule.

                 Protocol -> (integer)
                     The protocol assigned to the Traffic Mirror rule.

                 DestinationPortRange -> (structure)
                     The destination port range assigned to the Traffic Mirror
                     rule.

                     FromPort -> (integer)
                        The start of  the  Traffic  Mirror  port  range.  This
                        applies to the TCP and UDP protocols.

                     ToPort -> (integer)
                        The end of the Traffic Mirror port range. This applies
                        to the TCP and UDP protocols.

                 SourcePortRange -> (structure)
                     The source port range  assigned  to  the  Traffic  Mirror
                     rule.

                     FromPort -> (integer)
                        The  start  of  the  Traffic  Mirror  port range. This
                        applies to the TCP and UDP protocols.

                     ToPort -> (integer)
                        The end of the Traffic Mirror port range. This applies
                        to the TCP and UDP protocols.

                 DestinationCidrBlock -> (string)
                     The destination CIDR block assigned to the Traffic Mirror
                     rule.

                 SourceCidrBlock -> (string)
                     The source CIDR block  assigned  to  the  Traffic  Mirror
                     rule.

                 Description -> (string)
                     The description of the Traffic Mirror rule.

          EgressFilterRules -> (list)
              Information  about the egress rules that are associated with the
              Traffic Mirror filter.

              (structure)
                 Describes the Traffic Mirror rule.

                 TrafficMirrorFilterRuleId -> (string)
                     The ID of the Traffic Mirror rule.

                 TrafficMirrorFilterId -> (string)
                     The ID of the Traffic Mirror  filter  that  the  rule  is
                     associated with.

                 TrafficDirection -> (string)
                     The  traffic  direction  assigned  to  the Traffic Mirror
                     rule.

                 RuleNumber -> (integer)
                     The rule number of the Traffic Mirror rule.

                 RuleAction -> (string)
                     The action assigned to the Traffic Mirror rule.

                 Protocol -> (integer)
                     The protocol assigned to the Traffic Mirror rule.

                 DestinationPortRange -> (structure)
                     The destination port range assigned to the Traffic Mirror
                     rule.

                     FromPort -> (integer)
                        The  start  of  the  Traffic  Mirror  port range. This
                        applies to the TCP and UDP protocols.

                     ToPort -> (integer)
                        The end of the Traffic Mirror port range. This applies
                        to the TCP and UDP protocols.

                 SourcePortRange -> (structure)
                     The  source  port  range  assigned  to the Traffic Mirror
                     rule.

                     FromPort -> (integer)
                        The start of  the  Traffic  Mirror  port  range.  This
                        applies to the TCP and UDP protocols.

                     ToPort -> (integer)
                        The end of the Traffic Mirror port range. This applies
                        to the TCP and UDP protocols.

                 DestinationCidrBlock -> (string)
                     The destination CIDR block assigned to the Traffic Mirror
                     rule.

                 SourceCidrBlock -> (string)
                     The  source  CIDR  block  assigned  to the Traffic Mirror
                     rule.

                 Description -> (string)
                     The description of the Traffic Mirror rule.

          NetworkServices -> (list)
              The network service traffic that is associated with the  Traffic
              Mirror filter.

              (string)

          Description -> (string)
              The description of the Traffic Mirror filter.

          Tags -> (list)
              The tags assigned to the Traffic Mirror filter.

              (structure)
                 Describes a tag.

                 Key -> (string)
                     The key of the tag.

                     Constraints:  Tag  keys  are  case-sensitive and accept a
                     maximum of 127 Unicode characters.  May  not  begin  with
                     aws: .

                 Value -> (string)
                     The value of the tag.

                     Constraints:  Tag  values are case-sensitive and accept a
                     maximum of 255 Unicode characters.

       ClientToken -> (string)
          Unique, case-sensitive identifier that you  provide  to  ensure  the
          idempotency  of the request. For more information, see How to ensure
          idempotency .



                                                CREATE-TRAFFIC-MIRROR-FILTER()
