DESCRIBE-ROUTE-TABLES()                                DESCRIBE-ROUTE-TABLES()



NAME
       describe-route-tables -

DESCRIPTION
       Describes one or more of your route tables.

       Each  subnet  in  your  VPC must be associated with a route table. If a
       subnet is not explicitly associated with any route table, it is implic-
       itly associated with the main route table. This command does not return
       the subnet ID for implicit associations.

       For more information, see Route tables in the  Amazon  Virtual  Private
       Cloud User Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       describe-route-tables  is a paginated operation. Multiple API calls may
       be issued in order to retrieve the entire data set of results. You  can
       disable pagination by providing the --no-paginate argument.  When using
       --output text and the --query argument on  a  paginated  response,  the
       --query  argument  must  extract data from the results of the following
       query expressions: RouteTables

SYNOPSIS
            describe-route-tables
          [--filters <value>]
          [--dry-run | --no-dry-run]
          [--route-table-ids <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --filters (list)
          One or more filters.

          o association.route-table-association-id - The ID of an  association
            ID for the route table.

          o association.route-table-id - The ID of the route table involved in
            the association.

          o association.subnet-id - The ID of the subnet involved in the asso-
            ciation.

          o association.main  -  Indicates whether the route table is the main
            route table for the VPC (true | false ). Route tables that do  not
            have an association ID are not returned in the response.

          o owner-id - The ID of the Amazon Web Services account that owns the
            route table.

          o route-table-id - The ID of the route table.

          o route.destination-cidr-block - The IPv4 CIDR range specified in  a
            route in the table.

          o route.destination-ipv6-cidr-block  - The IPv6 CIDR range specified
            in a route in the route table.

          o route.destination-prefix-list-id - The ID (prefix) of  the  Amazon
            Web Service specified in a route in the table.

          o route.egress-only-internet-gateway-id  -  The ID of an egress-only
            Internet gateway specified in a route in the route table.

          o route.gateway-id - The ID of a gateway specified in a route in the
            table.

          o route.instance-id  - The ID of an instance specified in a route in
            the table.

          o route.nat-gateway-id - The ID of a NAT gateway.

          o route.transit-gateway-id - The ID of a transit gateway.

          o route.origin - Describes  how  the  route  was  created.  CreateR-
            outeTable  indicates that the route was automatically created when
            the route table was created; CreateRoute indicates that the  route
            was  manually  added to the route table; EnableVgwRoutePropagation
            indicates that the route was propagated by route propagation.

          o route.state - The state of a route in the route  table  (active  |
            blackhole ). The blackhole state indicates that the route's target
            isn't available (for example, the specified gateway isn't attached
            to the VPC, the specified NAT instance has been terminated, and so
            on).

          o route.vpc-peering-connection-id - The ID of a VPC peering  connec-
            tion specified in a route in the table.

          o tag  :<key>  -  The key/value combination of a tag assigned to the
            resource. Use the tag key in the filter name and the tag value  as
            the  filter  value. For example, to find all resources that have a
            tag with the key Owner and the value TeamA , specify tag:Owner for
            the filter name and TeamA for the filter value.

          o tag-key - The key of a tag assigned to the resource. Use this fil-
            ter to find all resources assigned a  tag  with  a  specific  key,
            regardless of the tag value.

          o vpc-id - The ID of the VPC for the route table.

          (structure)
              A  filter name and value pair that is used to return a more spe-
              cific list of results from a describe operation. Filters can  be
              used  to  match a set of resources by specific criteria, such as
              tags, attributes, or IDs.

              If you specify multiple filters, the filters are joined with  an
              AND , and the request returns only results that match all of the
              specified filters.

              Name -> (string)
                 The name of the filter. Filter names are case-sensitive.

              Values -> (list)
                 The filter values. Filter values are case-sensitive.  If  you
                 specify  multiple  values for a filter, the values are joined
                 with an OR , and the request returns all results  that  match
                 any of the specified values.

                 (string)

       Shorthand Syntax:

          Name=string,Values=string,string ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Values": ["string", ...]
            }
            ...
          ]

       --dry-run | --no-dry-run (boolean)
          Checks  whether  you  have  the required permissions for the action,
          without actually making the request, and provides an error response.
          If  you have the required permissions, the error response is DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --route-table-ids (list)
          One or more route table IDs.

          Default: Describes all your route tables.

          (string)

       Syntax:

          "string" "string" ...

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --starting-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The size of each page to get in the AWS service call. This does  not
          affect the number of items returned in the command's output. Setting
          a smaller page size results  in  more  calls  to  the  AWS  service,
          retrieving  fewer  items in each call. This can help prevent the AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To describe your route tables

       The following describe-route-tables example retrieves the details about
       your route tables

          aws ec2 describe-route-tables

       Output:

          {
              "RouteTables": [
                  {
                      "Associations": [
                          {
                              "Main": true,
                              "RouteTableAssociationId": "rtbassoc-0df3f54e06EXAMPLE",
                              "RouteTableId": "rtb-09ba434c1bEXAMPLE"
                          }
                      ],
                      "PropagatingVgws": [],
                      "RouteTableId": "rtb-09ba434c1bEXAMPLE",
                      "Routes": [
                          {
                              "DestinationCidrBlock": "10.0.0.0/16",
                              "GatewayId": "local",
                              "Origin": "CreateRouteTable",
                              "State": "active"
                          },
                          {
                              "DestinationCidrBlock": "0.0.0.0/0",
                              "NatGatewayId": "nat-06c018cbd8EXAMPLE",
                              "Origin": "CreateRoute",
                              "State": "blackhole"
                          }
                      ],
                      "Tags": [],
                      "VpcId": "vpc-0065acced4EXAMPLE",
                      "OwnerId": "111122223333"
                  },
                  {
                      "Associations": [
                          {
                              "Main": true,
                              "RouteTableAssociationId": "rtbassoc-9EXAMPLE",
                              "RouteTableId": "rtb-a1eec7de"
                          }
                      ],
                      "PropagatingVgws": [],
                      "RouteTableId": "rtb-a1eec7de",
                      "Routes": [
                          {
                              "DestinationCidrBlock": "172.31.0.0/16",
                              "GatewayId": "local",
                              "Origin": "CreateRouteTable",
                              "State": "active"
                          },
                          {
                              "DestinationCidrBlock": "0.0.0.0/0",
                              "GatewayId": "igw-fEXAMPLE",
                              "Origin": "CreateRoute",
                              "State": "active"
                          }
                      ],
                      "Tags": [],
                      "VpcId": "vpc-3EXAMPLE",
                      "OwnerId": "111122223333"
                  },
                  {
                      "Associations": [
                          {
                              "Main": false,
                              "RouteTableAssociationId": "rtbassoc-0b100c28b2EXAMPLE",
                              "RouteTableId": "rtb-07a98f76e5EXAMPLE",
                              "SubnetId": "subnet-0d3d002af8EXAMPLE"
                          }
                      ],
                      "PropagatingVgws": [],
                      "RouteTableId": "rtb-07a98f76e5EXAMPLE",
                      "Routes": [
                          {
                              "DestinationCidrBlock": "10.0.0.0/16",
                              "GatewayId": "local",
                              "Origin": "CreateRouteTable",
                              "State": "active"
                          },
                          {
                              "DestinationCidrBlock": "0.0.0.0/0",
                              "GatewayId": "igw-06cf664d80EXAMPLE",
                              "Origin": "CreateRoute",
                              "State": "active"
                          }
                      ],
                      "Tags": [],
                      "VpcId": "vpc-0065acced4EXAMPLE",
                      "OwnerId": "111122223333"
                  }
              ]
          }

       For more information, see Working with Route Tables in the AWS VPC User
       Guide.

OUTPUT
       RouteTables -> (list)
          Information about one or more route tables.

          (structure)
              Describes a route table.

              Associations -> (list)
                 The associations between the route table and one or more sub-
                 nets or a gateway.

                 (structure)
                     Describes an association between a route table and a sub-
                     net or gateway.

                     Main -> (boolean)
                        Indicates whether this is the main route table.

                     RouteTableAssociationId -> (string)
                        The ID of the association.

                     RouteTableId -> (string)
                        The ID of the route table.

                     SubnetId -> (string)
                        The  ID of the subnet. A subnet ID is not returned for
                        an implicit association.

                     GatewayId -> (string)
                        The ID of the  internet  gateway  or  virtual  private
                        gateway.

                     AssociationState -> (structure)
                        The state of the association.

                        State -> (string)
                            The state of the association.

                        StatusMessage -> (string)
                            The status message, if applicable.

              PropagatingVgws -> (list)
                 Any virtual private gateway (VGW) propagating routes.

                 (structure)
                     Describes a virtual private gateway propagating route.

                     GatewayId -> (string)
                        The ID of the virtual private gateway.

              RouteTableId -> (string)
                 The ID of the route table.

              Routes -> (list)
                 The routes in the route table.

                 (structure)
                     Describes a route in a route table.

                     DestinationCidrBlock -> (string)
                        The IPv4 CIDR block used for the destination match.

                     DestinationIpv6CidrBlock -> (string)
                        The IPv6 CIDR block used for the destination match.

                     DestinationPrefixListId -> (string)
                        The prefix of the Amazon Web Service.

                     EgressOnlyInternetGatewayId -> (string)
                        The ID of the egress-only internet gateway.

                     GatewayId -> (string)
                        The ID of a gateway attached to your VPC.

                     InstanceId -> (string)
                        The ID of a NAT instance in your VPC.

                     InstanceOwnerId -> (string)
                        The  ID  of  Amazon Web Services account that owns the
                        instance.

                     NatGatewayId -> (string)
                        The ID of a NAT gateway.

                     TransitGatewayId -> (string)
                        The ID of a transit gateway.

                     LocalGatewayId -> (string)
                        The ID of the local gateway.

                     CarrierGatewayId -> (string)
                        The ID of the carrier gateway.

                     NetworkInterfaceId -> (string)
                        The ID of the network interface.

                     Origin -> (string)
                        Describes how the route was created.

                        o CreateRouteTable - The route was automatically  cre-
                          ated when the route table was created.

                        o CreateRoute  -  The  route was manually added to the
                          route table.

                        o EnableVgwRoutePropagation - The route was propagated
                          by route propagation.

                     State -> (string)
                        The  state of the route. The blackhole state indicates
                        that the route's target isn't available (for  example,
                        the  specified  gateway  isn't attached to the VPC, or
                        the specified NAT instance has been terminated).

                     VpcPeeringConnectionId -> (string)
                        The ID of a VPC peering connection.

                     CoreNetworkArn -> (string)
                        The Amazon Resource Name (ARN) of the core network.

              Tags -> (list)
                 Any tags assigned to the route table.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints: Tag keys are case-sensitive and accept  a
                        maximum  of 127 Unicode characters. May not begin with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints: Tag values are case-sensitive and  accept
                        a maximum of 255 Unicode characters.

              VpcId -> (string)
                 The ID of the VPC.

              OwnerId -> (string)
                 The ID of the Amazon Web Services account that owns the route
                 table.

       NextToken -> (string)
          The token to use to retrieve the next page of results. This value is
          null when there are no more results to return.



                                                       DESCRIBE-ROUTE-TABLES()
