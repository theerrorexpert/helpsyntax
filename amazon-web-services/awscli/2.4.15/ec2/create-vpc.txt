CREATE-VPC()                                                      CREATE-VPC()



NAME
       create-vpc -

DESCRIPTION
       Creates  a VPC with the specified IPv4 CIDR block. The smallest VPC you
       can create uses a /28 netmask (16 IPv4 addresses), and the largest uses
       a  /16  netmask (65,536 IPv4 addresses). For more information about how
       large to make your VPC, see Your VPC and subnets in the Amazon  Virtual
       Private Cloud User Guide .

       You  can  optionally  request  an  IPv6 CIDR block for the VPC. You can
       request an Amazon-provided IPv6 CIDR block from Amazon's pool  of  IPv6
       addresses,  or  an  IPv6  CIDR block from an IPv6 address pool that you
       provisioned through bring your own IP addresses (BYOIP ).

       By default, each instance you launch in the VPC has  the  default  DHCP
       options,  which include only a default DNS server that we provide (Ama-
       zonProvidedDNS). For more information, see DHCP  options  sets  in  the
       Amazon Virtual Private Cloud User Guide .

       You  can specify the instance tenancy value for the VPC when you create
       it. You can't change this value for the VPC after you  create  it.  For
       more information, see Dedicated Instances in the Amazon Elastic Compute
       Cloud User Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-vpc
          [--cidr-block <value>]
          [--amazon-provided-ipv6-cidr-block | --no-amazon-provided-ipv6-cidr-block]
          [--ipv6-pool <value>]
          [--ipv6-cidr-block <value>]
          [--ipv4-ipam-pool-id <value>]
          [--ipv4-netmask-length <value>]
          [--ipv6-ipam-pool-id <value>]
          [--ipv6-netmask-length <value>]
          [--dry-run | --no-dry-run]
          [--instance-tenancy <value>]
          [--ipv6-cidr-block-network-border-group <value>]
          [--tag-specifications <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --cidr-block (string)
          The IPv4 network range for the VPC, in CIDR notation.  For  example,
          10.0.0.0/16  .  We  modify the specified CIDR block to its canonical
          form; for example, if you specify 100.68.0.18/18 , we modify  it  to
          100.68.0.0/18 .

       --amazon-provided-ipv6-cidr-block           |          --no-amazon-pro-
       vided-ipv6-cidr-block (boolean)
          Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length
          for  the  VPC.  You cannot specify the range of IP addresses, or the
          size of the CIDR block.

       --ipv6-pool (string)
          The ID of an IPv6 address pool from which to allocate the IPv6  CIDR
          block.

       --ipv6-cidr-block (string)
          The  IPv6 CIDR block from the IPv6 address pool. You must also spec-
          ify Ipv6Pool in the request.

          To let Amazon choose the IPv6 CIDR block for you, omit this  parame-
          ter.

       --ipv4-ipam-pool-id (string)
          The  ID  of  an  IPv4  IPAM pool you want to use for allocating this
          VPC's CIDR. For more information, see What is IPAM?  in  the  Amazon
          VPC IPAM User Guide .

       --ipv4-netmask-length (integer)
          The netmask length of the IPv4 CIDR you want to allocate to this VPC
          from an Amazon VPC IP Address Manager (IPAM) pool. For more informa-
          tion about IPAM, see What is IPAM? in the Amazon VPC IPAM User Guide
          .

       --ipv6-ipam-pool-id (string)
          The ID of an IPv6 IPAM pool which will be used to allocate this  VPC
          an  IPv6  CIDR.  IPAM  is a VPC feature that you can use to automate
          your IP address management workflows including assigning,  tracking,
          troubleshooting,  and  auditing  IP addresses across Amazon Web Ser-
          vices Regions and accounts throughout your Amazon Web Services Orga-
          nization.  For more information, see What is IPAM? in the Amazon VPC
          IPAM User Guide .

       --ipv6-netmask-length (integer)
          The netmask length of the IPv6 CIDR you want to allocate to this VPC
          from an Amazon VPC IP Address Manager (IPAM) pool. For more informa-
          tion about IPAM, see What is IPAM? in the Amazon VPC IPAM User Guide
          .

       --dry-run | --no-dry-run (boolean)
          Checks  whether  you  have  the required permissions for the action,
          without actually making the request, and provides an error response.
          If  you have the required permissions, the error response is DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --instance-tenancy (string)
          The tenancy options for instances launched into the VPC. For default
          ,  instances  are  launched  with shared tenancy by default. You can
          launch instances with any tenancy into a  shared  tenancy  VPC.  For
          dedicated , instances are launched as dedicated tenancy instances by
          default. You can only launch instances with a tenancy  of  dedicated
          or host into a dedicated tenancy VPC.
              Important:  The  host  value cannot be used with this parameter.
              Use the default or dedicated values only.

          Default: default

          Possible values:

          o default

          o dedicated

          o host

       --ipv6-cidr-block-network-border-group (string)
          The name of the location from  which  we  advertise  the  IPV6  CIDR
          block. Use this parameter to limit the address to this location.

          You must set AmazonProvidedIpv6CidrBlock to true to use this parame-
          ter.

       --tag-specifications (list)
          The tags to assign to the VPC.

          (structure)
              The tags to apply to a resource when the resource is being  cre-
              ated.

              ResourceType -> (string)
                 The type of resource to tag on creation.

              Tags -> (list)
                 The tags to apply to the resource.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints:  Tag keys are case-sensitive and accept a
                        maximum of 127 Unicode characters. May not begin  with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints:  Tag values are case-sensitive and accept
                        a maximum of 255 Unicode characters.

       Shorthand Syntax:

          ResourceType=string,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "ResourceType": "capacity-reservation"|"client-vpn-endpoint"|"customer-gateway"|"carrier-gateway"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-ip"|"elastic-gpu"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"instance-event-window"|"internet-gateway"|"ipam"|"ipam-pool"|"ipam-scope"|"ipv4pool-ec2"|"ipv6pool-ec2"|"key-pair"|"launch-template"|"local-gateway"|"local-gateway-route-table"|"local-gateway-virtual-interface"|"local-gateway-virtual-interface-group"|"local-gateway-route-table-vpc-association"|"local-gateway-route-table-virtual-interface-group-association"|"natgateway"|"network-acl"|"network-interface"|"network-insights-analysis"|"network-insights-path"|"network-insights-access-scope"|"network-insights-access-scope-analysis"|"placement-group"|"prefix-list"|"replace-root-volume-task"|"reserved-instances"|"route-table"|"security-group"|"security-group-rule"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-route-table"|"volume"|"vpc"|"vpc-endpoint"|"vpc-endpoint-service"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"|"vpc-flow-log",
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To create a VPC

       The following create-vpc example creates a VPC with the specified  IPv4
       CIDR block.

          aws ec2 create-vpc \
              --ipv6-cidr-block-network-border-group us-west-2-lax-1 \
              --cidr-block 10.0.0.0/16

       Output:

          {
              "Vpc": {
                  "CidrBlock": "10.0.0.0/16",
                  "DhcpOptionsId": "dopt-5EXAMPLE",
                  "State": "pending",
                  "VpcId": "vpc-0a60eb65b4EXAMPLE",
                  "OwnerId": "123456789012",
                  "InstanceTenancy": "default",
                  "Ipv6CidrBlockAssociationSet": [],
                  "CidrBlockAssociationSet": [
                      {
                          "AssociationId": "vpc-cidr-assoc-07501b79ecEXAMPLE",
                          "CidrBlock": "10.0.0.0/16",
                          "CidrBlockState": {
                              "State": "associated"
                      }
                  "NetworkBorderGroup": "us-west-2-lax-1"
                      }
                  ],
                  "IsDefault": false,
                  "Tags": []
              }
          }

       Example 2: To create a VPC with dedicated tenancy

       The  following create-vpc example creates a VPC with the specified IPv4
       CIDR block and dedicated tenancy.

          aws ec2 create-vpc \
              --cidr-block 10.0.0.0/16 \
              --instance-tenancy dedicated

       Output:

          {
              "Vpc": {
                  "CidrBlock": "10.0.0.0/16",
                  "DhcpOptionsId": "dopt-19edf471",
                  "State": "pending",
                  "VpcId": "vpc-0a53287fa4EXAMPLE",
                  "OwnerId": "111122223333",
                  "InstanceTenancy": "dedicated",
                  "Ipv6CidrBlockAssociationSet": [],
                  "CidrBlockAssociationSet": [
                      {
                          "AssociationId": "vpc-cidr-assoc-00b24cc1c2EXAMPLE",
                          "CidrBlock": "10.0.0.0/16",
                          "CidrBlockState": {
                              "State": "associated"
                          }
                      }
                  ],
                  "IsDefault": false,
                  "Tags": []
              }
          }

       Example 3: To create a VPC with an IPv6 CIDR block

       The following create-vpc example creates a VPC with an  Amazon-provided
       IPv6 CIDR block.

          aws ec2 create-vpc \
              --cidr-block 10.0.0.0/16 \
              --amazon-provided-ipv6-cidr-block

       Output:

          {
              "Vpc": {
                  "CidrBlock": "10.0.0.0/16",
                  "DhcpOptionsId": "dopt-dEXAMPLE",
                  "State": "pending",
                  "VpcId": "vpc-0fc5e3406bEXAMPLE",
                  "OwnerId": "123456789012",
                  "InstanceTenancy": "default",
                  "Ipv6CidrBlockAssociationSet": [
                      {
                          "AssociationId": "vpc-cidr-assoc-068432c60bEXAMPLE",
                          "Ipv6CidrBlock": "",
                          "Ipv6CidrBlockState": {
                              "State": "associating"
                          },
                          "Ipv6Pool": "Amazon",
                          "NetworkBorderGroup": "us-west-2"
                      }
                  ],
                  "CidrBlockAssociationSet": [
                      {
                          "AssociationId": "vpc-cidr-assoc-0669f8f9f5EXAMPLE",
                          "CidrBlock": "10.0.0.0/16",
                          "CidrBlockState": {
                              "State": "associated"
                          }
                      }
                  ],
                  "IsDefault": false,
                  "Tags": []
              }
          }

       Example 4: To create a VPC with a CIDR from an IPAM pool

       The following create-vpc example creates a VPC with a CIDR from an Ama-
       zon VPC IP Address Manager (IPAM) pool.

       (Linux):

          aws ec2 create-vpc \
              --ipv4-ipam-pool-id ipam-pool-0533048da7d823723 \
              --tag-specifications ResourceType=vpc,Tags='[{Key=Environment,Value="Preprod"},{Key=Owner,Value="Build Team"}]'

       (Windows):

          aws ec2 create-vpc ^
              --ipv4-ipam-pool-id ipam-pool-0533048da7d823723 ^
              --tag-specifications ResourceType=vpc,Tags=[{Key=Environment,Value="Preprod"},{Key=Owner,Value="Build Team"}]

       Output:

          {
               "Vpc": {
                   "CidrBlock": "10.0.1.0/24",
                   "DhcpOptionsId": "dopt-2afccf50",
                   "State": "pending",
                   "VpcId": "vpc-010e1791024eb0af9",
                   "OwnerId": "123456789012",
                   "InstanceTenancy": "default",
                   "Ipv6CidrBlockAssociationSet": [],
                   "CidrBlockAssociationSet": [
                       {
                           "AssociationId": "vpc-cidr-assoc-0a77de1d803226d4b",
                           "CidrBlock": "10.0.1.0/24",
                           "CidrBlockState": {
                               "State": "associated"
                           }
                       }
                   ],
                   "IsDefault": false,
                   "Tags": [
                       {
                           "Key": "Environment",
                           "Value": "Preprod"
                       },
                       {
                           "Key": "Owner",
                           "Value": "Build Team"
                       }
                   ]
               }
           }

       For more information, see Create a VPC that uses an IPAM pool  CIDR  in
       the Amazon VPC IPAM User Guide.

OUTPUT
       Vpc -> (structure)
          Information about the VPC.

          CidrBlock -> (string)
              The primary IPv4 CIDR block for the VPC.

          DhcpOptionsId -> (string)
              The  ID  of  the  set of DHCP options you've associated with the
              VPC.

          State -> (string)
              The current state of the VPC.

          VpcId -> (string)
              The ID of the VPC.

          OwnerId -> (string)
              The ID of the Amazon Web Services account that owns the VPC.

          InstanceTenancy -> (string)
              The allowed tenancy of instances launched into the VPC.

          Ipv6CidrBlockAssociationSet -> (list)
              Information about the IPv6 CIDR blocks associated with the  VPC.

              (structure)
                 Describes an IPv6 CIDR block associated with a VPC.

                 AssociationId -> (string)
                     The association ID for the IPv6 CIDR block.

                 Ipv6CidrBlock -> (string)
                     The IPv6 CIDR block.

                 Ipv6CidrBlockState -> (structure)
                     Information about the state of the CIDR block.

                     State -> (string)
                        The state of the CIDR block.

                     StatusMessage -> (string)
                        A  message  about  the  status  of  the CIDR block, if
                        applicable.

                 NetworkBorderGroup -> (string)
                     The name of the unique set of Availability  Zones,  Local
                     Zones, or Wavelength Zones from which Amazon Web Services
                     advertises      IP      addresses,      for      example,
                     us-east-1-wl1-bos-wlz-1 .

                 Ipv6Pool -> (string)
                     The  ID of the IPv6 address pool from which the IPv6 CIDR
                     block is allocated.

          CidrBlockAssociationSet -> (list)
              Information about the IPv4 CIDR blocks associated with the  VPC.

              (structure)
                 Describes an IPv4 CIDR block associated with a VPC.

                 AssociationId -> (string)
                     The association ID for the IPv4 CIDR block.

                 CidrBlock -> (string)
                     The IPv4 CIDR block.

                 CidrBlockState -> (structure)
                     Information about the state of the CIDR block.

                     State -> (string)
                        The state of the CIDR block.

                     StatusMessage -> (string)
                        A  message  about  the  status  of  the CIDR block, if
                        applicable.

          IsDefault -> (boolean)
              Indicates whether the VPC is the default VPC.

          Tags -> (list)
              Any tags assigned to the VPC.

              (structure)
                 Describes a tag.

                 Key -> (string)
                     The key of the tag.

                     Constraints: Tag keys are  case-sensitive  and  accept  a
                     maximum  of  127  Unicode  characters. May not begin with
                     aws: .

                 Value -> (string)
                     The value of the tag.

                     Constraints: Tag values are case-sensitive and  accept  a
                     maximum of 255 Unicode characters.



                                                                  CREATE-VPC()
