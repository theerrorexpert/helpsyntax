CREATE-TRANSIT-GATEWAY-VPC-ATTACHMENT()CREATE-TRANSIT-GATEWAY-VPC-ATTACHMENT()



NAME
       create-transit-gateway-vpc-attachment -

DESCRIPTION
       Attaches the specified VPC to the specified transit gateway.

       If you attach a VPC with a CIDR range that overlaps the CIDR range of a
       VPC that is already attached, the new VPC CIDR range is not  propagated
       to the default propagation route table.

       To  send VPC traffic to an attached transit gateway, add a route to the
       VPC route table using  CreateRoute .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-transit-gateway-vpc-attachment
          --transit-gateway-id <value>
          --vpc-id <value>
          --subnet-ids <value>
          [--options <value>]
          [--tag-specifications <value>]
          [--dry-run | --no-dry-run]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --transit-gateway-id (string)
          The ID of the transit gateway.

       --vpc-id (string)
          The ID of the VPC.

       --subnet-ids (list)
          The IDs of one or more subnets. You can specify only one subnet  per
          Availability Zone. You must specify at least one subnet, but we rec-
          ommend that you specify two subnets  for  better  availability.  The
          transit gateway uses one IP address from each specified subnet.

          (string)

       Syntax:

          "string" "string" ...

       --options (structure)
          The VPC attachment options.

          DnsSupport -> (string)
              Enable or disable DNS support. The default is enable .

          Ipv6Support -> (string)
              Enable or disable IPv6 support. The default is disable .

          ApplianceModeSupport -> (string)
              Enable  or  disable  support  for  appliance mode. If enabled, a
              traffic flow between a source  and  destination  uses  the  same
              Availability  Zone  for  the  VPC attachment for the lifetime of
              that flow. The default is disable .

       Shorthand Syntax:

          DnsSupport=string,Ipv6Support=string,ApplianceModeSupport=string

       JSON Syntax:

          {
            "DnsSupport": "enable"|"disable",
            "Ipv6Support": "enable"|"disable",
            "ApplianceModeSupport": "enable"|"disable"
          }

       --tag-specifications (list)
          The tags to apply to the VPC attachment.

          (structure)
              The tags to apply to a resource when the resource is being  cre-
              ated.

              ResourceType -> (string)
                 The type of resource to tag on creation.

              Tags -> (list)
                 The tags to apply to the resource.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints:  Tag keys are case-sensitive and accept a
                        maximum of 127 Unicode characters. May not begin  with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints:  Tag values are case-sensitive and accept
                        a maximum of 255 Unicode characters.

       Shorthand Syntax:

          ResourceType=string,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "ResourceType": "capacity-reservation"|"client-vpn-endpoint"|"customer-gateway"|"carrier-gateway"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-ip"|"elastic-gpu"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"instance-event-window"|"internet-gateway"|"ipam"|"ipam-pool"|"ipam-scope"|"ipv4pool-ec2"|"ipv6pool-ec2"|"key-pair"|"launch-template"|"local-gateway"|"local-gateway-route-table"|"local-gateway-virtual-interface"|"local-gateway-virtual-interface-group"|"local-gateway-route-table-vpc-association"|"local-gateway-route-table-virtual-interface-group-association"|"natgateway"|"network-acl"|"network-interface"|"network-insights-analysis"|"network-insights-path"|"network-insights-access-scope"|"network-insights-access-scope-analysis"|"placement-group"|"prefix-list"|"replace-root-volume-task"|"reserved-instances"|"route-table"|"security-group"|"security-group-rule"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-route-table"|"volume"|"vpc"|"vpc-endpoint"|"vpc-endpoint-service"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"|"vpc-flow-log",
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --dry-run | --no-dry-run (boolean)
          Checks whether you have the required  permissions  for  the  action,
          without actually making the request, and provides an error response.
          If you have the required permissions, the error response is  DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To associate a transit gateway with a VPC

       The  following  create-transit-gateway-vpc-attachment example creates a
       transit gateway attachment to the specified VPC.

          aws ec2 create-transit-gateway-vpc-attachment \
              --transit-gateway-id tgw-0262a0e521EXAMPLE \
              --vpc-id vpc-07e8ffd50f49335df \
              --subnet-id subnet-0752213d59EXAMPLE

       Output:

          {
              "TransitGatewayVpcAttachment": {
                  "TransitGatewayAttachmentId": "tgw-attach-0a34fe6b4fEXAMPLE",
                  "TransitGatewayId": "tgw-0262a0e521EXAMPLE",
                  "VpcId": "vpc-07e8ffd50fEXAMPLE",
                  "VpcOwnerId": "111122223333",
                  "State": "pending",
                  "SubnetIds": [
                      "subnet-0752213d59EXAMPLE"
                  ],
                  "CreationTime": "2019-07-10T17:33:46.000Z",
                  "Options": {
                      "DnsSupport": "enable",
                      "Ipv6Support": "disable"
                  }
              }
          }

       For more information, see Create a transit gateway attachment to a  VPC
       in the Transit Gateways Guide.

       Example  2:  To  associate a transit gateway with multiple subnets in a
       VPC

       The following create-transit-gateway-vpc-attachment example  creates  a
       transit gateway attachment to the specified VPC and subnets.

          aws ec2 create-transit-gateway-vpc-attachment \
              --transit-gateway-id tgw-02f776b1a7EXAMPLE  \
              --vpc-id vpc-3EXAMPLE \
              --subnet-ids "subnet-dEXAMPLE" "subnet-6EXAMPLE"

       Output:

          {
              "TransitGatewayVpcAttachment": {
                  "TransitGatewayAttachmentId": "tgw-attach-0e141e0bebEXAMPLE",
                  "TransitGatewayId": "tgw-02f776b1a7EXAMPLE",
                  "VpcId": "vpc-3EXAMPLE",
                  "VpcOwnerId": "111122223333",
                  "State": "pending",
                  "SubnetIds": [
                      "subnet-6EXAMPLE",
                      "subnet-dEXAMPLE"
                  ],
                  "CreationTime": "2019-12-17T20:07:52.000Z",
                  "Options": {
                      "DnsSupport": "enable",
                      "Ipv6Support": "disable"
                  }
              }
          }

       For  more information, see Create a transit gateway attachment to a VPC
       in the Transit Gateways Guide.

OUTPUT
       TransitGatewayVpcAttachment -> (structure)
          Information about the VPC attachment.

          TransitGatewayAttachmentId -> (string)
              The ID of the attachment.

          TransitGatewayId -> (string)
              The ID of the transit gateway.

          VpcId -> (string)
              The ID of the VPC.

          VpcOwnerId -> (string)
              The ID of the Amazon Web Services account that owns the VPC.

          State -> (string)
              The state of the VPC attachment. Note that the initiating  state
              has been deprecated.

          SubnetIds -> (list)
              The IDs of the subnets.

              (string)

          CreationTime -> (timestamp)
              The creation time.

          Options -> (structure)
              The VPC attachment options.

              DnsSupport -> (string)
                 Indicates whether DNS support is enabled.

              Ipv6Support -> (string)
                 Indicates whether IPv6 support is disabled.

              ApplianceModeSupport -> (string)
                 Indicates whether appliance mode support is enabled.

          Tags -> (list)
              The tags for the VPC attachment.

              (structure)
                 Describes a tag.

                 Key -> (string)
                     The key of the tag.

                     Constraints:  Tag  keys  are  case-sensitive and accept a
                     maximum of 127 Unicode characters.  May  not  begin  with
                     aws: .

                 Value -> (string)
                     The value of the tag.

                     Constraints:  Tag  values are case-sensitive and accept a
                     maximum of 255 Unicode characters.



                                       CREATE-TRANSIT-GATEWAY-VPC-ATTACHMENT()
