IMPORT-KEY-PAIR()                                            IMPORT-KEY-PAIR()



NAME
       import-key-pair -

DESCRIPTION
       Imports the public key from an RSA or ED25519 key pair that you created
       with a third-party tool. Compare this with  CreateKeyPair  ,  in  which
       Amazon  Web  Services  creates  the  key pair and gives the keys to you
       (Amazon Web Services keeps a copy of the public key).  With  ImportKey-
       Pair,  you  create  the  key pair and give Amazon Web Services just the
       public key. The private key is never transferred between you and Amazon
       Web Services.

       For  more  information about key pairs, see Amazon EC2 key pairs in the
       Amazon Elastic Compute Cloud User Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            import-key-pair
          [--dry-run | --no-dry-run]
          --key-name <value>
          --public-key-material <value>
          [--tag-specifications <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --dry-run | --no-dry-run (boolean)
          Checks whether you have the required  permissions  for  the  action,
          without actually making the request, and provides an error response.
          If you have the required permissions, the error response is  DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --key-name (string)
          A unique name for the key pair.

       --public-key-material (blob)
          The  public key. For API calls, the text must be base64-encoded. For
          command line tools, base64 encoding is performed for you.

       --tag-specifications (list)
          The tags to apply to the imported key pair.

          (structure)
              The tags to apply to a resource when the resource is being  cre-
              ated.

              ResourceType -> (string)
                 The type of resource to tag on creation.

              Tags -> (list)
                 The tags to apply to the resource.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints:  Tag keys are case-sensitive and accept a
                        maximum of 127 Unicode characters. May not begin  with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints:  Tag values are case-sensitive and accept
                        a maximum of 255 Unicode characters.

       Shorthand Syntax:

          ResourceType=string,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "ResourceType": "capacity-reservation"|"client-vpn-endpoint"|"customer-gateway"|"carrier-gateway"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-ip"|"elastic-gpu"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"instance-event-window"|"internet-gateway"|"ipam"|"ipam-pool"|"ipam-scope"|"ipv4pool-ec2"|"ipv6pool-ec2"|"key-pair"|"launch-template"|"local-gateway"|"local-gateway-route-table"|"local-gateway-virtual-interface"|"local-gateway-virtual-interface-group"|"local-gateway-route-table-vpc-association"|"local-gateway-route-table-virtual-interface-group-association"|"natgateway"|"network-acl"|"network-interface"|"network-insights-analysis"|"network-insights-path"|"network-insights-access-scope"|"network-insights-access-scope-analysis"|"placement-group"|"prefix-list"|"replace-root-volume-task"|"reserved-instances"|"route-table"|"security-group"|"security-group-rule"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-route-table"|"volume"|"vpc"|"vpc-endpoint"|"vpc-endpoint-service"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"|"vpc-flow-log",
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To import a public key

       First, generate a key pair with the tool of your choice.  For  example,
       use this ssh-keygen command:

       Command:

          ssh-keygen -t rsa -C "my-key" -f ~/.ssh/my-key

       Output:

          Generating public/private rsa key pair.
          Enter passphrase (empty for no passphrase):
          Enter same passphrase again:
          Your identification has been saved in /home/ec2-user/.ssh/my-key.
          Your public key has been saved in /home/ec2-user/.ssh/my-key.pub.
          ...

       This example command imports the specified public key.

       Command:

          aws ec2 import-key-pair --key-name "my-key" --public-key-material fileb://~/.ssh/my-key.pub

       Output:

          {
            "KeyName": "my-key",
            "KeyFingerprint": "1f:51:ae:28:bf:89:e9:d8:1f:25:5d:37:2d:7d:b8:ca"
          }

OUTPUT
       KeyFingerprint -> (string)
          The  MD5  public  key  fingerprint  as specified in section 4 of RFC
          4716.

       KeyName -> (string)
          The key pair name that you provided.

       KeyPairId -> (string)
          The ID of the resulting key pair.

       Tags -> (list)
          The tags applied to the imported key pair.

          (structure)
              Describes a tag.

              Key -> (string)
                 The key of the tag.

                 Constraints: Tag keys are case-sensitive and accept a maximum
                 of 127 Unicode characters. May not begin with aws: .

              Value -> (string)
                 The value of the tag.

                 Constraints: Tag values are case-sensitive and accept a maxi-
                 mum of 255 Unicode characters.



                                                             IMPORT-KEY-PAIR()
