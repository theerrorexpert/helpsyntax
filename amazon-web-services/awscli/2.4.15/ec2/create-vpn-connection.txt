CREATE-VPN-CONNECTION()                                CREATE-VPN-CONNECTION()



NAME
       create-vpn-connection -

DESCRIPTION
       Creates a VPN connection between an existing virtual private gateway or
       transit gateway and a customer gateway. The supported  connection  type
       is ipsec.1 .

       The response includes information that you need to give to your network
       administrator to configure your customer gateway.

       WARNING:
          We strongly recommend that you use HTTPS when calling this operation
          because  the  response  contains sensitive cryptographic information
          for configuring your customer gateway device.

       If you decide to shut down your VPN connection for any reason and later
       create a new VPN connection, you must reconfigure your customer gateway
       with the new information returned from this call.

       This is an idempotent operation. If you perform the operation more than
       once, Amazon EC2 doesn't return an error.

       For  more  information, see Amazon Web Services Site-to-Site VPN in the
       Amazon Web Services Site-to-Site VPN User Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-vpn-connection
          --customer-gateway-id <value>
          --type <value>
          [--vpn-gateway-id <value>]
          [--transit-gateway-id <value>]
          [--dry-run | --no-dry-run]
          [--options <value>]
          [--tag-specifications <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --customer-gateway-id (string)
          The ID of the customer gateway.

       --type (string)
          The type of VPN connection (ipsec.1 ).

       --vpn-gateway-id (string)
          The ID of the virtual private gateway. If you specify a virtual pri-
          vate gateway, you cannot specify a transit gateway.

       --transit-gateway-id (string)
          The ID of the transit gateway. If you specify a transit gateway, you
          cannot specify a virtual private gateway.

       --dry-run | --no-dry-run (boolean)
          Checks whether you have the required  permissions  for  the  action,
          without actually making the request, and provides an error response.
          If you have the required permissions, the error response is  DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --options (structure)
          The options for the VPN connection.

          EnableAcceleration -> (boolean)
              Indicate  whether to enable acceleration for the VPN connection.

              Default: false

          StaticRoutesOnly -> (boolean)
              Indicate whether the VPN connection uses static routes only.  If
              you  are  creating  a  VPN connection for a device that does not
              support BGP, you must specify true .  Use   CreateVpnConnection-
              Route to create a static route.

              Default: false

          TunnelInsideIpVersion -> (string)
              Indicate whether the VPN tunnels process IPv4 or IPv6 traffic.

              Default: ipv4

          TunnelOptions -> (list)
              The tunnel options for the VPN connection.

              (structure)
                 The tunnel options for a single VPN tunnel.

                 TunnelInsideCidr -> (string)
                     The  range  of  inside IPv4 addresses for the tunnel. Any
                     specified CIDR blocks must be unique across all VPN  con-
                     nections that use the same virtual private gateway.

                     Constraints:   A   size   /30   CIDR   block   from   the
                     169.254.0.0/16  range.  The  following  CIDR  blocks  are
                     reserved and cannot be used:

                     o 169.254.0.0/30

                     o 169.254.1.0/30

                     o 169.254.2.0/30

                     o 169.254.3.0/30

                     o 169.254.4.0/30

                     o 169.254.5.0/30

                     o 169.254.169.252/30

                 TunnelInsideIpv6Cidr -> (string)
                     The  range  of  inside IPv6 addresses for the tunnel. Any
                     specified CIDR blocks must be unique across all VPN  con-
                     nections that use the same transit gateway.

                     Constraints:  A  size  /126  CIDR  block  from  the local
                     fd00::/8 range.

                 PreSharedKey -> (string)
                     The pre-shared key (PSK) to establish initial authentica-
                     tion  between  the  virtual  private gateway and customer
                     gateway.

                     Constraints: Allowed characters are alphanumeric  charac-
                     ters, periods (.), and underscores (_). Must be between 8
                     and 64 characters in length and cannot  start  with  zero
                     (0).

                 Phase1LifetimeSeconds -> (integer)
                     The  lifetime for phase 1 of the IKE negotiation, in sec-
                     onds.

                     Constraints: A value between 900 and 28,800.

                     Default: 28800

                 Phase2LifetimeSeconds -> (integer)
                     The lifetime for phase 2 of the IKE negotiation, in  sec-
                     onds.

                     Constraints:  A  value  between  900 and 3,600. The value
                     must be less than the value for Phase1LifetimeSeconds .

                     Default: 3600

                 RekeyMarginTimeSeconds -> (integer)
                     The margin time, in seconds, before the phase 2  lifetime
                     expires, during which the Amazon Web Services side of the
                     VPN connection performs an IKE rekey. The exact  time  of
                     the  rekey  is  randomly  selected based on the value for
                     RekeyFuzzPercentage .

                     Constraints: A value between 60 and half  of  Phase2Life-
                     timeSeconds .

                     Default: 540

                 RekeyFuzzPercentage -> (integer)
                     The  percentage of the rekey window (determined by Rekey-
                     MarginTimeSeconds ) during which the rekey time  is  ran-
                     domly selected.

                     Constraints: A value between 0 and 100.

                     Default: 100

                 ReplayWindowSize -> (integer)
                     The number of packets in an IKE replay window.

                     Constraints: A value between 64 and 2048.

                     Default: 1024

                 DPDTimeoutSeconds -> (integer)
                     The number of seconds after which a DPD timeout occurs.

                     Constraints: A value greater than or equal to 30.

                     Default: 30

                 DPDTimeoutAction -> (string)
                     The  action  to  take  after  DPD timeout occurs. Specify
                     restart to restart the IKE initiation. Specify  clear  to
                     end the IKE session.

                     Valid Values: clear | none | restart

                     Default: clear

                 Phase1EncryptionAlgorithms -> (list)
                     One  or more encryption algorithms that are permitted for
                     the VPN tunnel for phase 1 IKE negotiations.

                     Valid  values:  AES128  |  AES256   |   AES128-GCM-16   |
                     AES256-GCM-16

                     (structure)
                        Specifies  the encryption algorithm for the VPN tunnel
                        for phase 1 IKE negotiations.

                        Value -> (string)
                            The value for the encryption algorithm.

                 Phase2EncryptionAlgorithms -> (list)
                     One or more encryption algorithms that are permitted  for
                     the VPN tunnel for phase 2 IKE negotiations.

                     Valid   values:   AES128   |  AES256  |  AES128-GCM-16  |
                     AES256-GCM-16

                     (structure)
                        Specifies the encryption algorithm for the VPN  tunnel
                        for phase 2 IKE negotiations.

                        Value -> (string)
                            The encryption algorithm.

                 Phase1IntegrityAlgorithms -> (list)
                     One  or  more integrity algorithms that are permitted for
                     the VPN tunnel for phase 1 IKE negotiations.

                     Valid values: SHA1 | SHA2-256 | SHA2-384 | SHA2-512

                     (structure)
                        Specifies the integrity algorithm for the  VPN  tunnel
                        for phase 1 IKE negotiations.

                        Value -> (string)
                            The value for the integrity algorithm.

                 Phase2IntegrityAlgorithms -> (list)
                     One  or  more integrity algorithms that are permitted for
                     the VPN tunnel for phase 2 IKE negotiations.

                     Valid values: SHA1 | SHA2-256 | SHA2-384 | SHA2-512

                     (structure)
                        Specifies the integrity algorithm for the  VPN  tunnel
                        for phase 2 IKE negotiations.

                        Value -> (string)
                            The integrity algorithm.

                 Phase1DHGroupNumbers -> (list)
                     One or more Diffie-Hellman group numbers that are permit-
                     ted for the VPN tunnel for phase 1 IKE negotiations.

                     Valid values: 2 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 |
                     22 | 23 | 24

                     (structure)
                        Specifies  a  Diffie-Hellman  group number for the VPN
                        tunnel for phase 1 IKE negotiations.

                        Value -> (integer)
                            The Diffie-Hellmann group number.

                 Phase2DHGroupNumbers -> (list)
                     One or more Diffie-Hellman group numbers that are permit-
                     ted for the VPN tunnel for phase 2 IKE negotiations.

                     Valid  values: 2 | 5 | 14 | 15 | 16 | 17 | 18 | 19 | 20 |
                     21 | 22 | 23 | 24

                     (structure)
                        Specifies a Diffie-Hellman group number  for  the  VPN
                        tunnel for phase 2 IKE negotiations.

                        Value -> (integer)
                            The Diffie-Hellmann group number.

                 IKEVersions -> (list)
                     The IKE versions that are permitted for the VPN tunnel.

                     Valid values: ikev1 | ikev2

                     (structure)
                        The  IKE version that is permitted for the VPN tunnel.

                        Value -> (string)
                            The IKE version.

                 StartupAction -> (string)
                     The action to take when the establishing the  tunnel  for
                     the  VPN  connection.  By  default, your customer gateway
                     device must initiate the IKE negotiation and bring up the
                     tunnel. Specify start for Amazon Web Services to initiate
                     the IKE negotiation.

                     Valid Values: add | start

                     Default: add

          LocalIpv4NetworkCidr -> (string)
              The IPv4 CIDR on the customer gateway (on-premises) side of  the
              VPN connection.

              Default: 0.0.0.0/0

          RemoteIpv4NetworkCidr -> (string)
              The IPv4 CIDR on the Amazon Web Services side of the VPN connec-
              tion.

              Default: 0.0.0.0/0

          LocalIpv6NetworkCidr -> (string)
              The IPv6 CIDR on the customer gateway (on-premises) side of  the
              VPN connection.

              Default: ::/0

          RemoteIpv6NetworkCidr -> (string)
              The IPv6 CIDR on the Amazon Web Services side of the VPN connec-
              tion.

              Default: ::/0

       JSON Syntax:

          {
            "EnableAcceleration": true|false,
            "StaticRoutesOnly": true|false,
            "TunnelInsideIpVersion": "ipv4"|"ipv6",
            "TunnelOptions": [
              {
                "TunnelInsideCidr": "string",
                "TunnelInsideIpv6Cidr": "string",
                "PreSharedKey": "string",
                "Phase1LifetimeSeconds": integer,
                "Phase2LifetimeSeconds": integer,
                "RekeyMarginTimeSeconds": integer,
                "RekeyFuzzPercentage": integer,
                "ReplayWindowSize": integer,
                "DPDTimeoutSeconds": integer,
                "DPDTimeoutAction": "string",
                "Phase1EncryptionAlgorithms": [
                  {
                    "Value": "string"
                  }
                  ...
                ],
                "Phase2EncryptionAlgorithms": [
                  {
                    "Value": "string"
                  }
                  ...
                ],
                "Phase1IntegrityAlgorithms": [
                  {
                    "Value": "string"
                  }
                  ...
                ],
                "Phase2IntegrityAlgorithms": [
                  {
                    "Value": "string"
                  }
                  ...
                ],
                "Phase1DHGroupNumbers": [
                  {
                    "Value": integer
                  }
                  ...
                ],
                "Phase2DHGroupNumbers": [
                  {
                    "Value": integer
                  }
                  ...
                ],
                "IKEVersions": [
                  {
                    "Value": "string"
                  }
                  ...
                ],
                "StartupAction": "string"
              }
              ...
            ],
            "LocalIpv4NetworkCidr": "string",
            "RemoteIpv4NetworkCidr": "string",
            "LocalIpv6NetworkCidr": "string",
            "RemoteIpv6NetworkCidr": "string"
          }

       --tag-specifications (list)
          The tags to apply to the VPN connection.

          (structure)
              The tags to apply to a resource when the resource is being  cre-
              ated.

              ResourceType -> (string)
                 The type of resource to tag on creation.

              Tags -> (list)
                 The tags to apply to the resource.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints:  Tag keys are case-sensitive and accept a
                        maximum of 127 Unicode characters. May not begin  with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints:  Tag values are case-sensitive and accept
                        a maximum of 255 Unicode characters.

       Shorthand Syntax:

          ResourceType=string,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "ResourceType": "capacity-reservation"|"client-vpn-endpoint"|"customer-gateway"|"carrier-gateway"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-ip"|"elastic-gpu"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"instance-event-window"|"internet-gateway"|"ipam"|"ipam-pool"|"ipam-scope"|"ipv4pool-ec2"|"ipv6pool-ec2"|"key-pair"|"launch-template"|"local-gateway"|"local-gateway-route-table"|"local-gateway-virtual-interface"|"local-gateway-virtual-interface-group"|"local-gateway-route-table-vpc-association"|"local-gateway-route-table-virtual-interface-group-association"|"natgateway"|"network-acl"|"network-interface"|"network-insights-analysis"|"network-insights-path"|"network-insights-access-scope"|"network-insights-access-scope-analysis"|"placement-group"|"prefix-list"|"replace-root-volume-task"|"reserved-instances"|"route-table"|"security-group"|"security-group-rule"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-route-table"|"volume"|"vpc"|"vpc-endpoint"|"vpc-endpoint-service"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"|"vpc-flow-log",
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To create a VPN connection with dynamic routing

       The following create-vpn-connection example creates  a  VPN  connection
       between  the  specified  virtual private gateway and the specified cus-
       tomer gateway, and applies tags  to  the  VPN  connection.  The  output
       includes  the  configuration  information  for  your  customer  gateway
       device, in XML format.

          aws ec2 create-vpn-connection \
              --type ipsec.1 \
              --customer-gateway-id cgw-001122334455aabbc \
              --vpn-gateway-id vgw-1a1a1a1a1a1a2b2b2 \
              --tag-specification 'ResourceType=vpn-connection,Tags=[{Key=Name,Value=BGP-VPN}]'

       Output:

          {
              "VpnConnection": {
                  "CustomerGatewayConfiguration": "...configuration information...",
                  "CustomerGatewayId": "cgw-001122334455aabbc",
                  "Category": "VPN",
                  "State": "pending",
                  "VpnConnectionId": "vpn-123123123123abcab",
                  "VpnGatewayId": "vgw-1a1a1a1a1a1a2b2b2",
                  "Options": {
                      "EnableAcceleration": false,
                      "StaticRoutesOnly": false,
                      "LocalIpv4NetworkCidr": "0.0.0.0/0",
                      "RemoteIpv4NetworkCidr": "0.0.0.0/0",
                      "TunnelInsideIpVersion": "ipv4",
                      "TunnelOptions": [
                          {},
                          {}
                      ]
                  },
                  "Routes": [],
                  "Tags": [
                       {
                          "Key": "Name",
                          "Value": "BGP-VPN"
                      }
                  ]
              }
          }

       For more information, see How AWS Site-to-Site VPN  works  in  the  AWS
       Site-to-Site VPN User Guide.

       Example 2: To create a VPN connection with static routing

       The  following  create-vpn-connection  example creates a VPN connection
       between the specified virtual private gateway and  the  specified  cus-
       tomer  gateway. The options specify static routing. The output includes
       the configuration information for your customer gateway device, in  XML
       format.

          aws ec2 create-vpn-connection \
              --type ipsec.1 \
              --customer-gateway-id cgw-001122334455aabbc \
              --vpn-gateway-id vgw-1a1a1a1a1a1a2b2b2 \
              --options "{\"StaticRoutesOnly\":true}"

       Output:

          {
              "VpnConnection": {
                  "CustomerGatewayConfiguration": "..configuration information...",
                  "CustomerGatewayId": "cgw-001122334455aabbc",
                  "Category": "VPN",
                  "State": "pending",
                  "VpnConnectionId": "vpn-123123123123abcab",
                  "VpnGatewayId": "vgw-1a1a1a1a1a1a2b2b2",
                  "Options": {
                      "EnableAcceleration": false,
                      "StaticRoutesOnly": true,
                      "LocalIpv4NetworkCidr": "0.0.0.0/0",
                      "RemoteIpv4NetworkCidr": "0.0.0.0/0",
                      "TunnelInsideIpVersion": "ipv4",
                      "TunnelOptions": [
                          {},
                          {}
                      ]
                  },
                  "Routes": [],
                  "Tags": []
              }
          }

       For  more  information,  see  How AWS Site-to-Site VPN works in the AWS
       Site-to-Site VPN User Guide.

       Example 3: To create a VPN connection and specify your own inside  CIDR
       and pre-shared key

       The  following  create-vpn-connection  example creates a VPN connection
       and specifies the inside IP address CIDR block and a custom  pre-shared
       key for each tunnel. The specified values are returned in the Customer-
       GatewayConfiguration information.

          aws ec2 create-vpn-connection \
              --type ipsec.1 \
              --customer-gateway-id cgw-001122334455aabbc \
              --vpn-gateway-id vgw-1a1a1a1a1a1a2b2b2 \
              --options TunnelOptions='[{TunnelInsideCidr=169.254.12.0/30,PreSharedKey=ExamplePreSharedKey1},{TunnelInsideCidr=169.254.13.0/30,PreSharedKey=ExamplePreSharedKey2}]'

       Output:

          {
              "VpnConnection": {
                  "CustomerGatewayConfiguration": "..configuration information...",
                  "CustomerGatewayId": "cgw-001122334455aabbc",
                  "Category": "VPN",
                  "State": "pending",
                  "VpnConnectionId": "vpn-123123123123abcab",
                  "VpnGatewayId": "vgw-1a1a1a1a1a1a2b2b2",
                  "Options": {
                      "EnableAcceleration": false,
                      "StaticRoutesOnly": false,
                      "LocalIpv4NetworkCidr": "0.0.0.0/0",
                      "RemoteIpv4NetworkCidr": "0.0.0.0/0",
                      "TunnelInsideIpVersion": "ipv4",
                      "TunnelOptions": [
                          {
                              "OutsideIpAddress": "203.0.113.3",
                              "TunnelInsideCidr": "169.254.12.0/30",
                              "PreSharedKey": "ExamplePreSharedKey1"
                          },
                          {
                              "OutsideIpAddress": "203.0.113.5",
                              "TunnelInsideCidr": "169.254.13.0/30",
                              "PreSharedKey": "ExamplePreSharedKey2"
                          }
                      ]
                  },
                  "Routes": [],
                  "Tags": []
              }
          }

       For more information, see How AWS Site-to-Site VPN  works  in  the  AWS
       Site-to-Site VPN User Guide.

       Example 4: To create a VPN connection that supports IPv6 traffic

       The  following  create-vpn-connection  example creates a VPN connection
       that supports IPv6 traffic between the specified  transit  gateway  and
       specified customer gateway. The tunnel options for both tunnels specify
       that AWS must initiate the IKE negotiation.

          aws ec2 create-vpn-connection \
              --type ipsec.1 \
              --transit-gateway-id tgw-12312312312312312 \
              --customer-gateway-id cgw-001122334455aabbc \
              --options TunnelInsideIpVersion=ipv6,TunnelOptions=[{StartupAction=start},{StartupAction=start}]

       Output:

          {
              "VpnConnection": {
                  "CustomerGatewayConfiguration": "..configuration information...",
                  "CustomerGatewayId": "cgw-001122334455aabbc",
                  "Category": "VPN",
                  "State": "pending",
                  "VpnConnectionId": "vpn-11111111122222222",
                  "TransitGatewayId": "tgw-12312312312312312",
                  "Options": {
                      "EnableAcceleration": false,
                      "StaticRoutesOnly": false,
                      "LocalIpv6NetworkCidr": "::/0",
                      "RemoteIpv6NetworkCidr": "::/0",
                      "TunnelInsideIpVersion": "ipv6",
                      "TunnelOptions": [
                          {
                              "OutsideIpAddress": "203.0.113.3",
                              "StartupAction": "start"
                          },
                          {
                              "OutsideIpAddress": "203.0.113.5",
                              "StartupAction": "start"
                          }
                      ]
                  },
                  "Routes": [],
                  "Tags": []
              }
          }

       For more information, see How AWS Site-to-Site VPN  works  in  the  AWS
       Site-to-Site VPN User Guide.

OUTPUT
       VpnConnection -> (structure)
          Information about the VPN connection.

          CustomerGatewayConfiguration -> (string)
              The  configuration information for the VPN connection's customer
              gateway (in the native  XML  format).  This  element  is  always
              present  in  the   CreateVpnConnection  response;  however, it's
              present in the  DescribeVpnConnections response only if the  VPN
              connection is in the pending or available state.

          CustomerGatewayId -> (string)
              The  ID  of  the customer gateway at your end of the VPN connec-
              tion.

          Category -> (string)
              The category of the VPN connection. A value of VPN indicates  an
              Amazon Web Services VPN connection. A value of VPN-Classic indi-
              cates an Amazon Web Services Classic VPN connection.

          State -> (string)
              The current state of the VPN connection.

          Type -> (string)
              The type of VPN connection.

          VpnConnectionId -> (string)
              The ID of the VPN connection.

          VpnGatewayId -> (string)
              The ID of the virtual private gateway at the Amazon Web Services
              side of the VPN connection.

          TransitGatewayId -> (string)
              The  ID  of  the transit gateway associated with the VPN connec-
              tion.

          CoreNetworkArn -> (string)
              The ARN of the core network.

          CoreNetworkAttachmentArn -> (string)
              The ARN of the core network attachment.

          GatewayAssociationState -> (string)
              The current state of the gateway association.

          Options -> (structure)
              The VPN connection options.

              EnableAcceleration -> (boolean)
                 Indicates whether acceleration is enabled for the VPN connec-
                 tion.

              StaticRoutesOnly -> (boolean)
                 Indicates whether the VPN connection uses static routes only.
                 Static routes must be used for  devices  that  don't  support
                 BGP.

              LocalIpv4NetworkCidr -> (string)
                 The  IPv4  CIDR on the customer gateway (on-premises) side of
                 the VPN connection.

              RemoteIpv4NetworkCidr -> (string)
                 The IPv4 CIDR on the Amazon Web Services side of the VPN con-
                 nection.

              LocalIpv6NetworkCidr -> (string)
                 The  IPv6  CIDR on the customer gateway (on-premises) side of
                 the VPN connection.

              RemoteIpv6NetworkCidr -> (string)
                 The IPv6 CIDR on the Amazon Web Services side of the VPN con-
                 nection.

              TunnelInsideIpVersion -> (string)
                 Indicates  whether the VPN tunnels process IPv4 or IPv6 traf-
                 fic.

              TunnelOptions -> (list)
                 Indicates the VPN tunnel options.

                 (structure)
                     The VPN tunnel options.

                     OutsideIpAddress -> (string)
                        The external IP address of the VPN tunnel.

                     TunnelInsideCidr -> (string)
                        The range of inside IPv4 addresses for the tunnel.

                     TunnelInsideIpv6Cidr -> (string)
                        The range of inside IPv6 addresses for the tunnel.

                     PreSharedKey -> (string)
                        The pre-shared key (PSK) to establish initial  authen-
                        tication  between  the virtual private gateway and the
                        customer gateway.

                     Phase1LifetimeSeconds -> (integer)
                        The lifetime for phase 1 of the  IKE  negotiation,  in
                        seconds.

                     Phase2LifetimeSeconds -> (integer)
                        The  lifetime  for  phase 2 of the IKE negotiation, in
                        seconds.

                     RekeyMarginTimeSeconds -> (integer)
                        The margin time, in seconds, before the phase 2  life-
                        time  expires,  during  which  the Amazon Web Services
                        side of the VPN connection performs an IKE rekey.

                     RekeyFuzzPercentage -> (integer)
                        The percentage  of  the  rekey  window  determined  by
                        RekeyMarginTimeSeconds  during which the rekey time is
                        randomly selected.

                     ReplayWindowSize -> (integer)
                        The number of packets in an IKE replay window.

                     DpdTimeoutSeconds -> (integer)
                        The number  of  seconds  after  which  a  DPD  timeout
                        occurs.

                     DpdTimeoutAction -> (string)
                        The action to take after a DPD timeout occurs.

                     Phase1EncryptionAlgorithms -> (list)
                        The permitted encryption algorithms for the VPN tunnel
                        for phase 1 IKE negotiations.

                        (structure)
                            The encryption algorithm for phase 1 IKE  negotia-
                            tions.

                            Value -> (string)
                               The value for the encryption algorithm.

                     Phase2EncryptionAlgorithms -> (list)
                        The permitted encryption algorithms for the VPN tunnel
                        for phase 2 IKE negotiations.

                        (structure)
                            The encryption algorithm for phase 2 IKE  negotia-
                            tions.

                            Value -> (string)
                               The encryption algorithm.

                     Phase1IntegrityAlgorithms -> (list)
                        The  permitted integrity algorithms for the VPN tunnel
                        for phase 1 IKE negotiations.

                        (structure)
                            The integrity algorithm for phase 1  IKE  negotia-
                            tions.

                            Value -> (string)
                               The value for the integrity algorithm.

                     Phase2IntegrityAlgorithms -> (list)
                        The  permitted integrity algorithms for the VPN tunnel
                        for phase 2 IKE negotiations.

                        (structure)
                            The integrity algorithm for phase 2  IKE  negotia-
                            tions.

                            Value -> (string)
                               The integrity algorithm.

                     Phase1DHGroupNumbers -> (list)
                        The permitted Diffie-Hellman group numbers for the VPN
                        tunnel for phase 1 IKE negotiations.

                        (structure)
                            The Diffie-Hellmann group number for phase  1  IKE
                            negotiations.

                            Value -> (integer)
                               The Diffie-Hellmann group number.

                     Phase2DHGroupNumbers -> (list)
                        The permitted Diffie-Hellman group numbers for the VPN
                        tunnel for phase 2 IKE negotiations.

                        (structure)
                            The Diffie-Hellmann group number for phase  2  IKE
                            negotiations.

                            Value -> (integer)
                               The Diffie-Hellmann group number.

                     IkeVersions -> (list)
                        The  IKE  versions that are permitted for the VPN tun-
                        nel.

                        (structure)
                            The internet key exchange (IKE) version  permitted
                            for the VPN tunnel.

                            Value -> (string)
                               The IKE version.

                     StartupAction -> (string)
                        The  action to take when the establishing the VPN tun-
                        nels for a VPN connection.

          Routes -> (list)
              The static routes associated with the VPN connection.

              (structure)
                 Describes a static route for a VPN connection.

                 DestinationCidrBlock -> (string)
                     The CIDR block associated with the local  subnet  of  the
                     customer data center.

                 Source -> (string)
                     Indicates how the routes were provided.

                 State -> (string)
                     The current state of the static route.

          Tags -> (list)
              Any tags assigned to the VPN connection.

              (structure)
                 Describes a tag.

                 Key -> (string)
                     The key of the tag.

                     Constraints:  Tag  keys  are  case-sensitive and accept a
                     maximum of 127 Unicode characters.  May  not  begin  with
                     aws: .

                 Value -> (string)
                     The value of the tag.

                     Constraints:  Tag  values are case-sensitive and accept a
                     maximum of 255 Unicode characters.

          VgwTelemetry -> (list)
              Information about the VPN tunnel.

              (structure)
                 Describes telemetry for a VPN tunnel.

                 AcceptedRouteCount -> (integer)
                     The number of accepted routes.

                 LastStatusChange -> (timestamp)
                     The date and time of the last change in status.

                 OutsideIpAddress -> (string)
                     The Internet-routable IP address of the  virtual  private
                     gateway's outside interface.

                 Status -> (string)
                     The status of the VPN tunnel.

                 StatusMessage -> (string)
                     If an error occurs, a description of the error.

                 CertificateArn -> (string)
                     The Amazon Resource Name (ARN) of the VPN tunnel endpoint
                     certificate.



                                                       CREATE-VPN-CONNECTION()
