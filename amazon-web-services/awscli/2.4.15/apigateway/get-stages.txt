GET-STAGES()                                                      GET-STAGES()



NAME
       get-stages -

DESCRIPTION
       Gets information about one or more  Stage resources.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-stages
          --rest-api-id <value>
          [--deployment-id <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --rest-api-id (string)
          [Required] The string identifier of the associated  RestApi .

       --deployment-id (string)
          The stages' deployment identifiers.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To get the list of stages for a REST API

       Command:

          aws apigateway get-stages --rest-api-id 1234123412

       Output:

          {
              "item": [
                  {
                      "stageName": "dev",
                      "cacheClusterSize": "0.5",
                      "cacheClusterEnabled": true,
                      "cacheClusterStatus": "AVAILABLE",
                      "deploymentId": "123h64",
                      "lastUpdatedDate": 1456185138,
                      "createdDate": 1453589092,
                      "methodSettings": {
                          "~1resource~1subresource/POST": {
                              "cacheTtlInSeconds": 300,
                              "loggingLevel": "INFO",
                              "dataTraceEnabled": true,
                              "metricsEnabled": true,
                              "throttlingRateLimit": 500.0,
                              "cacheDataEncrypted": false,
                              "cachingEnabled": false,
                              "throttlingBurstLimit": 1000
                          }
                      }
                  }
              ]
          }

OUTPUT
       item -> (list)
          The current page of elements from this collection.

          (structure)
              Represents  a  unique  identifier  for  a  version of a deployed
              RestApi that is callable by users.
                 Deploy an API

              deploymentId -> (string)
                 The identifier of the  Deployment that the stage points to.

              clientCertificateId -> (string)
                 The identifier of a client certificate for an API stage.

              stageName -> (string)
                 The name of the stage is the first path segment in  the  Uni-
                 form  Resource  Identifier  (URI)  of  a call to API Gateway.
                 Stage  names  can  only  contain   alphanumeric   characters,
                 hyphens, and underscores. Maximum length is 128 characters.

              description -> (string)
                 The stage's description.

              cacheClusterEnabled -> (boolean)
                 Specifies whether a cache cluster is enabled for the stage.

              cacheClusterSize -> (string)
                 The size of the cache cluster for the stage, if enabled.

              cacheClusterStatus -> (string)
                 The status of the cache cluster for the stage, if enabled.

              methodSettings -> (map)
                 A map that defines the method settings for a  Stage resource.
                 Keys (designated as /{method_setting_key  below)  are  method
                 paths  defined  as {resource_path}/{http_method} for an indi-
                 vidual method override, or /\*/\* for overriding all  methods
                 in the stage.

                 key -> (string)

                 value -> (structure)
                     Specifies the method setting properties.

                     metricsEnabled -> (boolean)
                        Specifies   whether   Amazon  CloudWatch  metrics  are
                        enabled for this method. The PATCH path for this  set-
                        ting  is  /{method_setting_key}/metrics/enabled  , and
                        the value is a Boolean.

                     loggingLevel -> (string)
                        Specifies the logging level  for  this  method,  which
                        affects  the  log  entries pushed to Amazon CloudWatch
                        Logs. The PATCH path for this setting is /{method_set-
                        ting_key}/logging/loglevel  , and the available levels
                        are OFF , ERROR , and INFO .  Choose  ERROR  to  write
                        only error-level entries to CloudWatch Logs, or choose
                        INFO to include all ERROR  events  as  well  as  extra
                        informational events.

                     dataTraceEnabled -> (boolean)
                        Specifies  whether  full  requests  and  responses are
                        logged for this method, which affects the log  entries
                        pushed  to  Amazon CloudWatch Logs. This can be useful
                        to troubleshoot APIs, but can result in logging sensi-
                        tive  data.  We  recommend  that you don't enable this
                        option for production APIs. The PATCH  path  for  this
                        setting  is  /{method_setting_key}/logging/dataTrace ,
                        and the value is a Boolean.

                     throttlingBurstLimit -> (integer)
                        Specifies the throttling burst limit. The  PATCH  path
                        for   this   setting  is  /{method_setting_key}/throt-
                        tling/burstLimit , and the value is an integer.

                     throttlingRateLimit -> (double)
                        Specifies the throttling rate limit.  The  PATCH  path
                        for   this   setting  is  /{method_setting_key}/throt-
                        tling/rateLimit , and the value is a double.

                     cachingEnabled -> (boolean)
                        Specifies  whether  responses  should  be  cached  and
                        returned for requests. A cache cluster must be enabled
                        on the stage for responses to  be  cached.  The  PATCH
                        path     for    this    setting    is    /{method_set-
                        ting_key}/caching/enabled  ,  and  the  value   is   a
                        Boolean.

                     cacheTtlInSeconds -> (integer)
                        Specifies  the  time  to  live  (TTL), in seconds, for
                        cached responses. The higher the TTL, the  longer  the
                        response  will be cached. The PATCH path for this set-
                        ting is  /{method_setting_key}/caching/ttlInSeconds  ,
                        and the value is an integer.

                     cacheDataEncrypted -> (boolean)
                        Specifies  whether the cached responses are encrypted.
                        The PATCH  path  for  this  setting  is  /{method_set-
                        ting_key}/caching/dataEncrypted  ,  and the value is a
                        Boolean.

                     requireAuthorizationForCacheControl -> (boolean)
                        Specifies whether  authorization  is  required  for  a
                        cache  invalidation  request.  The PATCH path for this
                        setting is /{method_setting_key}/caching/requireAutho-
                        rizationForCacheControl  , and the value is a Boolean.

                     unauthorizedCacheControlHeaderStrategy -> (string)
                        Specifies how  to  handle  unauthorized  requests  for
                        cache invalidation. The PATCH path for this setting is
                        /{method_setting_key}/caching/unauthorizedCacheCon-
                        trolHeaderStrategy  ,  and  the  available  values are
                        FAIL_WITH_403 ,  SUCCEED_WITH_RESPONSE_HEADER  ,  SUC-
                        CEED_WITHOUT_RESPONSE_HEADER .

              variables -> (map)
                 A map that defines the stage variables for a  Stage resource.
                 Variable names can have alphanumeric and  underscore  charac-
                 ters, and the values must match [A-Za-z0-9-._~:/?#&=,]+ .

                 key -> (string)

                 value -> (string)

              documentationVersion -> (string)
                 The version of the associated API documentation.

              accessLogSettings -> (structure)
                 Settings for logging access in this stage.

                 format -> (string)
                     A single line format of the access logs of data, as spec-
                     ified by selected $context variables .  The  format  must
                     include at least $context.requestId .

                 destinationArn -> (string)
                     The Amazon Resource Name (ARN) of the CloudWatch Logs log
                     group or Kinesis Data Firehose delivery stream to receive
                     access  logs.  If  you  specify  a  Kinesis Data Firehose
                     delivery stream, the stream name  must  begin  with  ama-
                     zon-apigateway- .

              canarySettings -> (structure)
                 Settings for the canary deployment in this stage.

                 percentTraffic -> (double)
                     The  percent  (0-100)  of  traffic  diverted  to a canary
                     deployment.

                 deploymentId -> (string)
                     The ID of the canary deployment.

                 stageVariableOverrides -> (map)
                     Stage variables overridden for a canary  release  deploy-
                     ment,  including  new  stage  variables introduced in the
                     canary.  These  stage  variables  are  represented  as  a
                     string-to-string  map  between  stage  variable names and
                     their values.

                     key -> (string)

                     value -> (string)

                 useStageCache -> (boolean)
                     A Boolean flag to indicate whether the canary  deployment
                     uses the stage cache or not.

              tracingEnabled -> (boolean)
                 Specifies  whether  active  tracing with X-ray is enabled for
                 the  Stage .

              webAclArn -> (string)
                 The ARN of the WebAcl associated with the  Stage .

              tags -> (map)
                 The collection of tags. Each tag element is associated with a
                 given resource.

                 key -> (string)

                 value -> (string)

              createdDate -> (timestamp)
                 The timestamp when the stage was created.

              lastUpdatedDate -> (timestamp)
                 The timestamp when the stage last updated.



                                                                  GET-STAGES()
