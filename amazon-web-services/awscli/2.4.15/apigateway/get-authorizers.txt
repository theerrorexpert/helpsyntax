GET-AUTHORIZERS()                                            GET-AUTHORIZERS()



NAME
       get-authorizers -

DESCRIPTION
       Describe an existing  Authorizers resource.
          AWS CLI

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       get-authorizers  is  a  paginated  operation. Multiple API calls may be
       issued in order to retrieve the entire data set  of  results.  You  can
       disable pagination by providing the --no-paginate argument.  When using
       --output text and the --query argument on  a  paginated  response,  the
       --query  argument  must  extract data from the results of the following
       query expressions: items

SYNOPSIS
            get-authorizers
          --rest-api-id <value>
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --rest-api-id (string)
          [Required] The string identifier of the associated  RestApi .

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --starting-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The size of each page to get in the AWS service call. This does  not
          affect the number of items returned in the command's output. Setting
          a smaller page size results  in  more  calls  to  the  AWS  service,
          retrieving  fewer  items in each call. This can help prevent the AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To get the list of authorizers for a REST API

       Command:

          aws apigateway get-authorizers --rest-api-id 1234123412

       Output:

          {
              "items": [
                  {
                      "name": "MyAuthorizer",
                      "authorizerUri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:123412341234:function:My_Authorizer_Function/invocations",
                      "authorizerResultTtlInSeconds": 300,
                      "identitySource": "method.request.header.Authorization",
                      "type": "TOKEN",
                      "id": "gfi4n3"
                  }
              ]
          }

OUTPUT
       position -> (string)

       items -> (list)
          The current page of elements from this collection.

          (structure)
              Represents  an  authorization layer for methods. If enabled on a
              method, API Gateway will activate the authorizer when  a  client
              calls the method.
                 Use  Lambda  Function as Authorizer  Use Cognito User Pool as
                 Authorizer

              id -> (string)
                 The identifier for the authorizer resource.

              name -> (string)
                 [Required] The name of the authorizer.

              type -> (string)
                 The authorizer type. Valid values  are  TOKEN  for  a  Lambda
                 function  using  a  single authorization token submitted in a
                 custom header, REQUEST for a Lambda function  using  incoming
                 request  parameters, and COGNITO_USER_POOLS for using an Ama-
                 zon Cognito user pool.

              providerARNs -> (list)
                 A list of the Amazon Cognito user  pool  ARNs  for  the  COG-
                 NITO_USER_POOLS  authorizer.  Each element is of this format:
                 arn:aws:cognito-idp:{region}:{account_id}:user-
                 pool/{user_pool_id} . For a TOKEN or REQUEST authorizer, this
                 is not defined.

                 (string)

              authType -> (string)
                 Optional customer-defined field, used in OpenAPI imports  and
                 exports without functional impact.

              authorizerUri -> (string)
                 Specifies the authorizer's Uniform Resource Identifier (URI).
                 For TOKEN or REQUEST authorizers, this must be a  well-formed
                 Lambda    function   URI,   for   example,   arn:aws:apigate-
                 way:us-west-2:lambda:path/2015-03-31/func-
                 tions/arn:aws:lambda:us-west-2:{account_id}:func-
                 tion:{lambda_function_name}/invocations . In general, the URI
                 has  this  form arn:aws:apigateway:{region}:lambda:path/{ser-
                 vice_api} , where {region} is the same as the region  hosting
                 the  Lambda  function, path indicates that the remaining sub-
                 string in the URI should  be  treated  as  the  path  to  the
                 resource,  including  the  initial  / . For Lambda functions,
                 this is  usually  of  the  form  /2015-03-31/functions/[Func-
                 tionARN]/invocations .

              authorizerCredentials -> (string)
                 Specifies  the  required  credentials  as an IAM role for API
                 Gateway to invoke the authorizer. To specify an IAM role  for
                 API  Gateway  to  assume, use the role's Amazon Resource Name
                 (ARN). To use resource-based permissions on the Lambda  func-
                 tion, specify null.

              identitySource -> (string)
                 The identity source for which authorization is requested.

                 o For  a  TOKEN  or  COGNITO_USER_POOLS  authorizer,  this is
                   required and specifies the request header  mapping  expres-
                   sion  for the custom header holding the authorization token
                   submitted by the client. For example, if the  token  header
                   name   is   Auth   ,   the  header  mapping  expression  is
                   method.request.header.Auth .

                 o For the REQUEST authorizer, this is  required  when  autho-
                   rization caching is enabled. The value is a comma-separated
                   string of one or more mapping expressions of the  specified
                   request  parameters. For example, if an Auth header, a Name
                   query string parameter are  defined  as  identity  sources,
                   this       value       is       method.request.header.Auth,
                   method.request.querystring.Name . These parameters will  be
                   used to derive the authorization caching key and to perform
                   runtime validation of the REQUEST authorizer  by  verifying
                   all of the identity-related request parameters are present,
                   not null and non-empty. Only when this  is  true  does  the
                   authorizer  invoke  the  authorizer Lambda function, other-
                   wise, it returns a 401 Unauthorized response without  call-
                   ing  the  Lambda  function.  The valid value is a string of
                   comma-separated  mapping  expressions  of   the   specified
                   request  parameters.  When the authorization caching is not
                   enabled, this property is optional.

              identityValidationExpression -> (string)
                 A validation expression for the incoming identity token.  For
                 TOKEN  authorizers,  this  value is a regular expression. For
                 COGNITO_USER_POOLS authorizers, API Gateway  will  match  the
                 aud  field  of the incoming token from the client against the
                 specified regular expression. It will invoke the authorizer's
                 Lambda  function  when  there  is a match. Otherwise, it will
                 return a 401 Unauthorized response without calling the Lambda
                 function.  The  validation  expression  does not apply to the
                 REQUEST authorizer.

              authorizerResultTtlInSeconds -> (integer)
                 The TTL in seconds of cached authorizer results. If it equals
                 0,  authorization  caching is disabled. If it is greater than
                 0, API Gateway will cache authorizer responses. If this field
                 is  not  set,  the default value is 300. The maximum value is
                 3600, or 1 hour.



                                                             GET-AUTHORIZERS()
