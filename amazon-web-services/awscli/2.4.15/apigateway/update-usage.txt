UPDATE-USAGE()                                                  UPDATE-USAGE()



NAME
       update-usage -

DESCRIPTION
       Grants  a  temporary  extension  to the remaining quota of a usage plan
       associated with a specified API key.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            update-usage
          --usage-plan-id <value>
          --key-id <value>
          [--patch-operations <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --usage-plan-id (string)
          [Required] The Id of the usage plan associated with the usage  data.

       --key-id (string)
          [Required]  The  identifier of the API key associated with the usage
          plan in which a temporary extension  is  granted  to  the  remaining
          quota.

       --patch-operations (list)
          A  list of update operations to be applied to the specified resource
          and in the order specified in this list.

          (structure)
              A single patch operation to apply  to  the  specified  resource.
              Please refer to http://tools.ietf.org/html/rfc6902#section-4 for
              an explanation of how each operation is used.

              op -> (string)
                 An update operation to be performed with this PATCH  request.
                 The  valid  value can be add , remove , replace or copy . Not
                 all valid operations are supported for a given resource. Sup-
                 port  of  the operations depends on specific operational con-
                 texts. Attempts  to  apply  an  unsupported  operation  on  a
                 resource will return an error message.

              path -> (string)
                 The  op  operation's  target, as identified by a JSON Pointer
                 value  that  references  a  location  within   the   targeted
                 resource.  For example, if the target resource has an update-
                 able property of {"name":"value"} , the path for  this  prop-
                 erty  is  /name . If the name property value is a JSON object
                 (e.g., {"name": {"child/name": "child-value"}}  ),  the  path
                 for  the  child/name property will be /name/child~1name . Any
                 slash ("/") character appearing in path names must be escaped
                 with  "~1",  as shown in the example above. Each op operation
                 can have only one path associated with it.

              value -> (string)
                 The new target value of the update operation. It is  applica-
                 ble  for  the add or replace operation. When using AWS CLI to
                 update a property of a JSON value, enclose  the  JSON  object
                 with  a  pair of single quotes in a Linux shell, e.g., '{"a":
                 ...}'. In a Windows shell, see Using JSON for Parameters .

              from -> (string)
                 The  copy  update  operation's  source  as  identified  by  a
                 JSON-Pointer  value  referencing the location within the tar-
                 geted resource to copy the value from. For example,  to  pro-
                 mote  a  canary deployment, you copy the canary deployment ID
                 to the affiliated deployment ID by calling a PATCH request on
                 a   Stage  resource  with  "op":"copy"  , "from":"/canarySet-
                 tings/deploymentId" and "path":"/deploymentId" .

       Shorthand Syntax:

          op=string,path=string,value=string,from=string ...

       JSON Syntax:

          [
            {
              "op": "add"|"remove"|"replace"|"move"|"copy"|"test",
              "path": "string",
              "value": "string",
              "from": "string"
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To temporarily modify the quota on an API key for  the  current  period
       defined in the Usage Plan

       Command:

          aws apigateway update-usage --usage-plan-id a1b2c3 --key-id 1NbjQzMReAkeEQPNAW8r3dXsU2rDD7fc7f2Sipnu --patch-operations op="replace",path="/remaining",value="50"

OUTPUT
       usagePlanId -> (string)
          The plan Id associated with this usage data.

       startDate -> (string)
          The starting date of the usage data.

       endDate -> (string)
          The ending date of the usage data.

       position -> (string)

       items -> (map)
          The usage data, as daily logs of used and remaining quotas, over the
          specified time interval indexed over the API keys in a  usage  plan.
          For  example, {..., "values" : { "{api_key}" : [ [0, 100], [10, 90],
          [100, 10]]} , where {api_key} stands for an API key  value  and  the
          daily log entry is of the format [used quota, remaining quota] .

          key -> (string)

          value -> (list)
              (list)
                 (long)



                                                                UPDATE-USAGE()
