CREATE-AUTHORIZER()                                        CREATE-AUTHORIZER()



NAME
       create-authorizer -

DESCRIPTION
       Adds a new  Authorizer resource to an existing  RestApi resource.
          AWS CLI

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-authorizer
          --rest-api-id <value>
          --name <value>
          --type <value>
          [--provider-arns <value>]
          [--auth-type <value>]
          [--authorizer-uri <value>]
          [--authorizer-credentials <value>]
          [--identity-source <value>]
          [--identity-validation-expression <value>]
          [--authorizer-result-ttl-in-seconds <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --rest-api-id (string)
          [Required] The string identifier of the associated  RestApi .

       --name (string)
          [Required] The name of the authorizer.

       --type (string)
          [Required]  The authorizer type. Valid values are TOKEN for a Lambda
          function using a single authorization token submitted  in  a  custom
          header, REQUEST for a Lambda function using incoming request parame-
          ters, and COGNITO_USER_POOLS for using an Amazon Cognito user  pool.

          Possible values:

          o TOKEN

          o REQUEST

          o COGNITO_USER_POOLS

       --provider-arns (list)
          A   list  of  the  Amazon  Cognito  user  pool  ARNs  for  the  COG-
          NITO_USER_POOLS  authorizer.  Each  element  is  of   this   format:
          arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}  .
          For a TOKEN or REQUEST authorizer, this is not defined.

          (string)

       Syntax:

          "string" "string" ...

       --auth-type (string)
          Optional customer-defined field, used in OpenAPI imports and exports
          without functional impact.

       --authorizer-uri (string)
          Specifies  the  authorizer's  Uniform Resource Identifier (URI). For
          TOKEN or REQUEST authorizers, this  must  be  a  well-formed  Lambda
          function        URI,       for       example,       arn:aws:apigate-
          way:us-west-2:lambda:path/2015-03-31/func-
          tions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_func-
          tion_name}/invocations  .  In  general,  the  URI  has   this   form
          arn:aws:apigateway:{region}:lambda:path/{service_api}     ,    where
          {region} is the same as the region hosting the Lambda function, path
          indicates  that the remaining substring in the URI should be treated
          as the path to the resource, including the initial /  .  For  Lambda
          functions,  this is usually of the form /2015-03-31/functions/[Func-
          tionARN]/invocations .

       --authorizer-credentials (string)
          Specifies the required credentials as an IAM role for API Gateway to
          invoke  the  authorizer.  To  specify an IAM role for API Gateway to
          assume,  use  the  role's  Amazon  Resource  Name  (ARN).   To   use
          resource-based permissions on the Lambda function, specify null.

       --identity-source (string)
          The identity source for which authorization is requested.

          o For a TOKEN or COGNITO_USER_POOLS authorizer, this is required and
            specifies the request header mapping  expression  for  the  custom
            header  holding  the  authorization token submitted by the client.
            For example, if the token header name is Auth , the header mapping
            expression is method.request.header.Auth .

          o For  the  REQUEST  authorizer, this is required when authorization
            caching is enabled. The value is a comma-separated string  of  one
            or  more  mapping expressions of the specified request parameters.
            For example, if an Auth header, a Name query string parameter  are
            defined     as     identity     sources,     this     value     is
            method.request.header.Auth,   method.request.querystring.Name    .
            These  parameters will be used to derive the authorization caching
            key and to perform runtime validation of the REQUEST authorizer by
            verifying  all  of  the  identity-related  request  parameters are
            present, not null and non-empty. Only when this is true  does  the
            authorizer  invoke  the  authorizer Lambda function, otherwise, it
            returns a 401 Unauthorized response  without  calling  the  Lambda
            function.  The  valid value is a string of comma-separated mapping
            expressions of the specified request parameters. When  the  autho-
            rization caching is not enabled, this property is optional.

       --identity-validation-expression (string)
          A  validation  expression for the incoming identity token. For TOKEN
          authorizers,  this  value  is  a  regular   expression.   For   COG-
          NITO_USER_POOLS authorizers, API Gateway will match the aud field of
          the incoming token from the client  against  the  specified  regular
          expression.  It  will  invoke  the authorizer's Lambda function when
          there is a match. Otherwise,  it  will  return  a  401  Unauthorized
          response without calling the Lambda function. The validation expres-
          sion does not apply to the REQUEST authorizer.

       --authorizer-result-ttl-in-seconds (integer)
          The TTL in seconds of cached authorizer results.  If  it  equals  0,
          authorization  caching  is  disabled.  If  it is greater than 0, API
          Gateway will cache authorizer responses. If this field is  not  set,
          the default value is 300. The maximum value is 3600, or 1 hour.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a token based API Gateway Custom Authorizer for the API

       Command:

          aws apigateway create-authorizer --rest-api-id 1234123412 --name 'First_Token_Custom_Authorizer' --type TOKEN --authorizer-uri 'arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:123412341234:function:customAuthFunction/invocations' --identity-source 'method.request.header.Authorization' --authorizer-result-ttl-in-seconds 300

       Output:

          {
              "authType": "custom",
              "name": "First_Token_Custom_Authorizer",
              "authorizerUri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:123412341234:function:customAuthFunction/invocations",
              "authorizerResultTtlInSeconds": 300,
              "identitySource": "method.request.header.Authorization",
              "type": "TOKEN",
              "id": "z40xj0"
          }

       To  create a Cognito User Pools based API Gateway Custom Authorizer for
       the API

       Command:

          aws apigateway create-authorizer --rest-api-id 1234123412 --name 'First_Cognito_Custom_Authorizer' --type COGNITO_USER_POOLS --provider-arns 'arn:aws:cognito-idp:us-east-1:123412341234:userpool/us-east-1_aWcZeQbuD' --identity-source 'method.request.header.Authorization'

       Output:

          {
              "authType": "cognito_user_pools",
              "identitySource": "method.request.header.Authorization",
              "name": "First_Cognito_Custom_Authorizer",
              "providerARNs": [
                  "arn:aws:cognito-idp:us-east-1:342398297714:userpool/us-east-1_qWbZzQhzE"
              ],
              "type": "COGNITO_USER_POOLS",
              "id": "5yid1t"
          }

OUTPUT
       id -> (string)
          The identifier for the authorizer resource.

       name -> (string)
          [Required] The name of the authorizer.

       type -> (string)
          The authorizer type. Valid values are TOKEN for  a  Lambda  function
          using  a  single  authorization  token submitted in a custom header,
          REQUEST for a Lambda function using incoming request parameters, and
          COGNITO_USER_POOLS for using an Amazon Cognito user pool.

       providerARNs -> (list)
          A   list  of  the  Amazon  Cognito  user  pool  ARNs  for  the  COG-
          NITO_USER_POOLS  authorizer.  Each  element  is  of   this   format:
          arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}  .
          For a TOKEN or REQUEST authorizer, this is not defined.

          (string)

       authType -> (string)
          Optional customer-defined field, used in OpenAPI imports and exports
          without functional impact.

       authorizerUri -> (string)
          Specifies  the  authorizer's  Uniform Resource Identifier (URI). For
          TOKEN or REQUEST authorizers, this  must  be  a  well-formed  Lambda
          function        URI,       for       example,       arn:aws:apigate-
          way:us-west-2:lambda:path/2015-03-31/func-
          tions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_func-
          tion_name}/invocations  .  In  general,  the  URI  has   this   form
          arn:aws:apigateway:{region}:lambda:path/{service_api}     ,    where
          {region} is the same as the region hosting the Lambda function, path
          indicates  that the remaining substring in the URI should be treated
          as the path to the resource, including the initial /  .  For  Lambda
          functions,  this is usually of the form /2015-03-31/functions/[Func-
          tionARN]/invocations .

       authorizerCredentials -> (string)
          Specifies the required credentials as an IAM role for API Gateway to
          invoke  the  authorizer.  To  specify an IAM role for API Gateway to
          assume,  use  the  role's  Amazon  Resource  Name  (ARN).   To   use
          resource-based permissions on the Lambda function, specify null.

       identitySource -> (string)
          The identity source for which authorization is requested.

          o For a TOKEN or COGNITO_USER_POOLS authorizer, this is required and
            specifies the request header mapping  expression  for  the  custom
            header  holding  the  authorization token submitted by the client.
            For example, if the token header name is Auth , the header mapping
            expression is method.request.header.Auth .

          o For  the  REQUEST  authorizer, this is required when authorization
            caching is enabled. The value is a comma-separated string  of  one
            or  more  mapping expressions of the specified request parameters.
            For example, if an Auth header, a Name query string parameter  are
            defined     as     identity     sources,     this     value     is
            method.request.header.Auth,   method.request.querystring.Name    .
            These  parameters will be used to derive the authorization caching
            key and to perform runtime validation of the REQUEST authorizer by
            verifying  all  of  the  identity-related  request  parameters are
            present, not null and non-empty. Only when this is true  does  the
            authorizer  invoke  the  authorizer Lambda function, otherwise, it
            returns a 401 Unauthorized response  without  calling  the  Lambda
            function.  The  valid value is a string of comma-separated mapping
            expressions of the specified request parameters. When  the  autho-
            rization caching is not enabled, this property is optional.

       identityValidationExpression -> (string)
          A  validation  expression for the incoming identity token. For TOKEN
          authorizers,  this  value  is  a  regular   expression.   For   COG-
          NITO_USER_POOLS authorizers, API Gateway will match the aud field of
          the incoming token from the client  against  the  specified  regular
          expression.  It  will  invoke  the authorizer's Lambda function when
          there is a match. Otherwise,  it  will  return  a  401  Unauthorized
          response without calling the Lambda function. The validation expres-
          sion does not apply to the REQUEST authorizer.

       authorizerResultTtlInSeconds -> (integer)
          The TTL in seconds of cached authorizer results.  If  it  equals  0,
          authorization  caching  is  disabled.  If  it is greater than 0, API
          Gateway will cache authorizer responses. If this field is  not  set,
          the default value is 300. The maximum value is 3600, or 1 hour.



                                                           CREATE-AUTHORIZER()
