CREATE-STAGE()                                                  CREATE-STAGE()



NAME
       create-stage -

DESCRIPTION
       Creates  a  new  Stage resource that references a pre-existing  Deploy-
       ment for the API.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-stage
          --rest-api-id <value>
          --stage-name <value>
          --deployment-id <value>
          [--description <value>]
          [--cache-cluster-enabled | --no-cache-cluster-enabled]
          [--cache-cluster-size <value>]
          [--variables <value>]
          [--documentation-version <value>]
          [--canary-settings <value>]
          [--tracing-enabled | --no-tracing-enabled]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --rest-api-id (string)
          [Required] The string identifier of the associated  RestApi .

       --stage-name (string)
          [Required] The name for the  Stage resource. Stage  names  can  only
          contain  alphanumeric  characters, hyphens, and underscores. Maximum
          length is 128 characters.

       --deployment-id (string)
          [Required] The identifier of the  Deployment resource for the  Stage
          resource.

       --description (string)
          The description of the  Stage resource.

       --cache-cluster-enabled | --no-cache-cluster-enabled (boolean)
          Whether cache clustering is enabled for the stage.

       --cache-cluster-size (string)
          The stage's cache cluster size.

          Possible values:

          o 0.5

          o 1.6

          o 6.1

          o 13.5

          o 28.4

          o 58.2

          o 118

          o 237

       --variables (map)
          A  map that defines the stage variables for the new  Stage resource.
          Variable names can have alphanumeric and underscore characters,  and
          the values must match [A-Za-z0-9-._~:/?#&=,]+ .

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --documentation-version (string)
          The version of the associated API documentation.

       --canary-settings (structure)
          The canary deployment settings of this stage.

          percentTraffic -> (double)
              The  percent (0-100) of traffic diverted to a canary deployment.

          deploymentId -> (string)
              The ID of the canary deployment.

          stageVariableOverrides -> (map)
              Stage variables overridden  for  a  canary  release  deployment,
              including  new  stage  variables introduced in the canary. These
              stage  variables  are  represented  as  a  string-to-string  map
              between stage variable names and their values.

              key -> (string)

              value -> (string)

          useStageCache -> (boolean)
              A  Boolean  flag  to indicate whether the canary deployment uses
              the stage cache or not.

       Shorthand Syntax:

          percentTraffic=double,deploymentId=string,stageVariableOverrides={KeyName1=string,KeyName2=string},useStageCache=boolean

       JSON Syntax:

          {
            "percentTraffic": double,
            "deploymentId": "string",
            "stageVariableOverrides": {"string": "string"
              ...},
            "useStageCache": true|false
          }

       --tracing-enabled | --no-tracing-enabled (boolean)
          Specifies whether active tracing  with  X-ray  is  enabled  for  the
          Stage .

       --tags (map)
          The   key-value   map   of  strings.  The  valid  character  set  is
          [a-zA-Z+-=._:/]. The tag key can be up to 128  characters  and  must
          not start with aws: . The tag value can be up to 256 characters.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a stage in an API which will contain an existing deployment

       Command:

          aws apigateway create-stage --rest-api-id 1234123412 --stage-name 'dev' --description 'Development stage' --deployment-id a1b2c3

       To  create  a stage in an API which will contain an existing deployment
       and custom Stage Variables

       Command:

          aws apigateway create-stage --rest-api-id 1234123412 --stage-name 'dev' --description 'Development stage' --deployment-id a1b2c3 --variables key='value',otherKey='otherValue'

OUTPUT
       deploymentId -> (string)
          The identifier of the  Deployment that the stage points to.

       clientCertificateId -> (string)
          The identifier of a client certificate for an API stage.

       stageName -> (string)
          The name of the stage is the  first  path  segment  in  the  Uniform
          Resource  Identifier (URI) of a call to API Gateway. Stage names can
          only contain alphanumeric characters, hyphens, and underscores. Max-
          imum length is 128 characters.

       description -> (string)
          The stage's description.

       cacheClusterEnabled -> (boolean)
          Specifies whether a cache cluster is enabled for the stage.

       cacheClusterSize -> (string)
          The size of the cache cluster for the stage, if enabled.

       cacheClusterStatus -> (string)
          The status of the cache cluster for the stage, if enabled.

       methodSettings -> (map)
          A  map  that defines the method settings for a  Stage resource. Keys
          (designated as /{method_setting_key below) are method paths  defined
          as  {resource_path}/{http_method} for an individual method override,
          or /\*/\* for overriding all methods in the stage.

          key -> (string)

          value -> (structure)
              Specifies the method setting properties.

              metricsEnabled -> (boolean)
                 Specifies whether Amazon CloudWatch metrics are  enabled  for
                 this method. The PATCH path for this setting is /{method_set-
                 ting_key}/metrics/enabled , and the value is a Boolean.

              loggingLevel -> (string)
                 Specifies the logging level for this  method,  which  affects
                 the  log  entries pushed to Amazon CloudWatch Logs. The PATCH
                 path   for   this   setting   is   /{method_setting_key}/log-
                 ging/loglevel  ,  and  the available levels are OFF , ERROR ,
                 and INFO . Choose ERROR to write only error-level entries  to
                 CloudWatch  Logs,  or choose INFO to include all ERROR events
                 as well as extra informational events.

              dataTraceEnabled -> (boolean)
                 Specifies whether full requests and responses are logged  for
                 this  method,  which affects the log entries pushed to Amazon
                 CloudWatch Logs. This can be useful to troubleshoot APIs, but
                 can  result  in logging sensitive data. We recommend that you
                 don't enable this option for production APIs. The PATCH  path
                 for this setting is /{method_setting_key}/logging/dataTrace ,
                 and the value is a Boolean.

              throttlingBurstLimit -> (integer)
                 Specifies the throttling burst limit. The PATCH path for this
                 setting  is /{method_setting_key}/throttling/burstLimit , and
                 the value is an integer.

              throttlingRateLimit -> (double)
                 Specifies the throttling rate limit. The PATCH path for  this
                 setting  is  /{method_setting_key}/throttling/rateLimit , and
                 the value is a double.

              cachingEnabled -> (boolean)
                 Specifies whether responses should be cached and returned for
                 requests.  A  cache  cluster must be enabled on the stage for
                 responses to be cached. The PATCH path for  this  setting  is
                 /{method_setting_key}/caching/enabled  ,  and  the value is a
                 Boolean.

              cacheTtlInSeconds -> (integer)
                 Specifies the time to live  (TTL),  in  seconds,  for  cached
                 responses.  The  higher the TTL, the longer the response will
                 be cached. The PATCH path for this setting  is  /{method_set-
                 ting_key}/caching/ttlInSeconds , and the value is an integer.

              cacheDataEncrypted -> (boolean)
                 Specifies whether the cached  responses  are  encrypted.  The
                 PATCH    path    for    this    setting    is   /{method_set-
                 ting_key}/caching/dataEncrypted , and the value is a Boolean.

              requireAuthorizationForCacheControl -> (boolean)
                 Specifies  whether  authorization  is  required  for  a cache
                 invalidation request. The PATCH  path  for  this  setting  is
                 /{method_setting_key}/caching/requireAuthorizationFor-
                 CacheControl , and the value is a Boolean.

              unauthorizedCacheControlHeaderStrategy -> (string)
                 Specifies how  to  handle  unauthorized  requests  for  cache
                 invalidation.   The   PATCH   path   for   this   setting  is
                 /{method_setting_key}/caching/unauthorizedCacheControlHeader-
                 Strategy  , and the available values are FAIL_WITH_403 , SUC-
                 CEED_WITH_RESPONSE_HEADER , SUCCEED_WITHOUT_RESPONSE_HEADER .

       variables -> (map)
          A  map that defines the stage variables for a  Stage resource. Vari-
          able names can have alphanumeric and underscore characters, and  the
          values must match [A-Za-z0-9-._~:/?#&=,]+ .

          key -> (string)

          value -> (string)

       documentationVersion -> (string)
          The version of the associated API documentation.

       accessLogSettings -> (structure)
          Settings for logging access in this stage.

          format -> (string)
              A single line format of the access logs of data, as specified by
              selected $context variables . The format must include  at  least
              $context.requestId .

          destinationArn -> (string)
              The  Amazon Resource Name (ARN) of the CloudWatch Logs log group
              or Kinesis Data Firehose delivery stream to receive access logs.
              If  you  specify  a  Kinesis  Data Firehose delivery stream, the
              stream name must begin with amazon-apigateway- .

       canarySettings -> (structure)
          Settings for the canary deployment in this stage.

          percentTraffic -> (double)
              The percent (0-100) of traffic diverted to a canary  deployment.

          deploymentId -> (string)
              The ID of the canary deployment.

          stageVariableOverrides -> (map)
              Stage  variables  overridden  for  a  canary release deployment,
              including new stage variables introduced in  the  canary.  These
              stage  variables  are  represented  as  a  string-to-string  map
              between stage variable names and their values.

              key -> (string)

              value -> (string)

          useStageCache -> (boolean)
              A Boolean flag to indicate whether the  canary  deployment  uses
              the stage cache or not.

       tracingEnabled -> (boolean)
          Specifies  whether  active  tracing  with  X-ray  is enabled for the
          Stage .

       webAclArn -> (string)
          The ARN of the WebAcl associated with the  Stage .

       tags -> (map)
          The collection of tags. Each tag element is associated with a  given
          resource.

          key -> (string)

          value -> (string)

       createdDate -> (timestamp)
          The timestamp when the stage was created.

       lastUpdatedDate -> (timestamp)
          The timestamp when the stage last updated.



                                                                CREATE-STAGE()
