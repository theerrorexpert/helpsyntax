GET-RESOURCE()                                                  GET-RESOURCE()



NAME
       get-resource -

DESCRIPTION
       Lists information about a resource.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-resource
          --rest-api-id <value>
          --resource-id <value>
          [--embed <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --rest-api-id (string)
          [Required] The string identifier of the associated  RestApi .

       --resource-id (string)
          [Required] The identifier for the  Resource resource.

       --embed (list)
          A  query  parameter  to retrieve the specified resources embedded in
          the returned  Resource representation in the  response.  This  embed
          parameter value is a list of comma-separated strings. Currently, the
          request supports only retrieval of the  embedded   Method  resources
          this way. The query parameter value must be a single-valued list and
          contain    the    "methods"     string.     For     example,     GET
          /restapis/{restapi_id}/resources/{resource_id}?embed=methods .

          (string)

       Syntax:

          "string" "string" ...

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To get information about a resource

       Command:

          aws apigateway get-resource --rest-api-id 1234123412 --resource-id zwo0y3

       Output:

          {
              "path": "/path",
              "pathPart": "path",
              "id": "zwo0y3",
              "parentId": "uyokt6ij2g"
          }

OUTPUT
       id -> (string)
          The resource's identifier.

       parentId -> (string)
          The parent resource's identifier.

       pathPart -> (string)
          The last path segment for this resource.

       path -> (string)
          The full path for this resource.

       resourceMethods -> (map)
          Gets an API resource's method of a given HTTP verb.

          The  resource  methods are a map of methods indexed by methods' HTTP
          verbs enabled on the resource. This method map is  included  in  the
          200          OK          response         of         the         GET
          /restapis/{restapi_id}/resources/{resource_id}        or         GET
          /restapis/{restapi_id}/resources/{resource_id}?embed=methods
          request.
              Example: Get the GET method  of  an  API  resource  Request  GET
              /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET   HTTP/1.1
              Content-Type: application/json  Host:  apigateway.us-east-1.ama-
              zonaws.com     X-Amz-Date:    20170223T031827Z    Authorization:
              AWS4-HMAC-SHA256                                         Creden-
              tial={access_key_ID}/20170223/us-east-1/apigateway/aws4_request,
              SignedHeaders=content-type;host;x-amz-date,               Signa-
              ture={sig4_hash}   Response  { "_links": { "curies": [ { "href":
              "https://docs.aws.amazon.com/apigateway/latest/developer-
              guide/restapi-integration-{rel}.html",   "name":  "integration",
              "templated": true }, { "href": "https://docs.aws.amazon.com/api-
              gateway/latest/developerguide/restapi-integra-
              tion-response-{rel}.html", "name": "integrationresponse",  "tem-
              plated": true }, { "href": "https://docs.aws.amazon.com/apigate-
              way/latest/developerguide/restapi-method-{rel}.html",    "name":
              "method",  "templated": true }, { "href": "https://docs.aws.ama-
              zon.com/apigateway/latest/developer-
              guide/restapi-method-response-{rel}.html",    "name":   "method-
              response",  "templated":   true   }   ],   "self":   {   "href":
              "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name":
              "GET",  "title":   "GET"   },   "integration:put":   {   "href":
              "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integra-
              tion"  },   "method:delete":   {   "href":   "/restapis/fugvjdx-
              tri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": {
              "href":         "/restapis/fugvjdxtri/resources/3kzxbg5sa2/meth-
              ods/GET/integration"    },    "method:responses":    {   "href":
              "/restapis/fugvjdxtri/resources/3kzxbg5sa2/meth-
              ods/GET/responses/200",   "name":   "200",   "title":  "200"  },
              "method:update":       {       "href":       "/restapis/fugvjdx-
              tri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": {
              "href":         "/restapis/fugvjdxtri/resources/3kzxbg5sa2/meth-
              ods/GET/responses/{status_code}",   "templated":   true   }   },
              "apiKeyRequired":  false,  "authorizationType":  "NONE",  "http-
              Method": "GET", "_embedded": { "method:integration": { "_links":
              {       "self":       {       "href":        "/restapis/fugvjdx-
              tri/resources/3kzxbg5sa2/methods/GET/integration"  },  "integra-
              tion:delete":        {        "href":        "/restapis/fugvjdx-
              tri/resources/3kzxbg5sa2/methods/GET/integration"  },  "integra-
              tion:responses":       {       "href":       "/restapis/fugvjdx-
              tri/resources/3kzxbg5sa2/methods/GET/integration/responses/200",
              "name": "200", "title": "200" }, "integration:update": { "href":
              "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integra-
              tion"     },      "integrationresponse:put":      {      "href":
              "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integra-
              tion/responses/{status_code}", "templated": true } }, "cacheKey-
              Parameters":  [], "cacheNamespace": "3kzxbg5sa2", "credentials":
              "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod":
              "POST",  "passthroughBehavior": "WHEN_NO_MATCH", "requestParame-
              ters": {  "integration.request.header.Content-Type":  "'applica-
              tion/x-amz-json-1.1'"   },   "requestTemplates":   {   "applica-
              tion/json": "{\n}" }, "type":  "AWS",  "uri":  "arn:aws:apigate-
              way:us-east-1:kinesis:action/ListStreams", "_embedded": { "inte-
              gration:responses":   {   "_links":   {   "self":   {    "href":
              "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integra-
              tion/responses/200", "name": "200", "title": "200" },  "integra-
              tionresponse:delete":      {     "href":     "/restapis/fugvjdx-
              tri/resources/3kzxbg5sa2/methods/GET/integration/responses/200"
              },  "integrationresponse:update":  { "href": "/restapis/fugvjdx-
              tri/resources/3kzxbg5sa2/methods/GET/integration/responses/200"
              }   },   "responseParameters":   {  "method.response.header.Con-
              tent-Type":  "'application/xml'"   },   "responseTemplates":   {
              "application/json":               "$util.urlDecode(\"%3Ckinesis-
              Streams%3E#foreach($stream       in       $input.path('$.Stream-
              Names'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kine-
              sisStreams%3E\")\n"   },   "statusCode":   "200"    }    }    },
              "method:responses":    {   "_links":   {   "self":   {   "href":
              "/restapis/fugvjdxtri/resources/3kzxbg5sa2/meth-
              ods/GET/responses/200", "name": "200", "title": "200" }, "metho-
              dresponse:delete":      {      "href":       "/restapis/fugvjdx-
              tri/resources/3kzxbg5sa2/methods/GET/responses/200"  }, "method-
              response:update":      {       "href":       "/restapis/fugvjdx-
              tri/resources/3kzxbg5sa2/methods/GET/responses/200"     }     },
              "responseModels": { "application/json": "Empty" },  "responsePa-
              rameters":  {  "method.response.header.Content-Type":  false  },
              "statusCode": "200" } } }

          If the OPTIONS is enabled on the resource, you can follow the  exam-
          ple  here  to get that method. Just replace the GET of the last path
          segment in the request URL with OPTIONS .

          key -> (string)

          value -> (structure)
              Represents a client-facing interface by which the  client  calls
              the API to access back-end resources. A Method resource is inte-
              grated with an  Integration resource. Both consist of a  request
              and  one  or more responses. The method request takes the client
              input that is passed to the back  end  through  the  integration
              request.  A method response returns the output from the back end
              to the client through an integration response. A method  request
              is embodied in a Method resource, whereas an integration request
              is embodied in an  Integration resource. On the  other  hand,  a
              method  response  is  represented by a  MethodResponse resource,
              whereas an integration response is represented by  an   Integra-
              tionResponse resource.
                 Example:  Retrive  the  GET  method  on  a specified resource
                 Request

              The following example request retrieves  the  information  about
              the  GET  method  on  an  API  resource  (3kzxbg5sa2 ) of an API
              (fugvjdxtri ).
                 GET     /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET
                 HTTP/1.1   Content-Type:   application/json   Host:  apigate-
                 way.us-east-1.amazonaws.com   X-Amz-Date:    20160603T210259Z
                 Authorization:            AWS4-HMAC-SHA256            Creden-
                 tial={access_key_ID}/20160603/us-east-1/apigate-
                 way/aws4_request, SignedHeaders=content-type;host;x-amz-date,
                 Signature={sig4_hash}  Response

              The successful response returns a 200 OK status code and a  pay-
              load similar to the following:
                 {  "_links":  {  "curies": [ { "href": "https://docs.aws.ama-
                 zon.com/apigateway/latest/developerguide/restapi-integra-
                 tion-{rel}.html", "name": "integration", "templated": true },
                 {    "href":     "https://docs.aws.amazon.com/apigateway/lat-
                 est/developerguide/restapi-integration-response-{rel}.html",
                 "name": "integrationresponse", "templated": true }, { "href":
                 "https://docs.aws.amazon.com/apigateway/latest/developer-
                 guide/restapi-method-{rel}.html",  "name":  "method",   "tem-
                 plated":  true }, { "href": "https://docs.aws.amazon.com/api-
                 gateway/latest/developer-
                 guide/restapi-method-response-{rel}.html",  "name":  "method-
                 response",  "templated":  true  }  ],   "self":   {   "href":
                 "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET",
                 "name": "GET", "title": "GET" }, "integration:put": { "href":
                 "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/inte-
                 gration" }, "method:delete":  {  "href":  "/restapis/fugvjdx-
                 tri/resources/3kzxbg5sa2/methods/GET"   },   "method:integra-
                 tion":         {         "href":          "/restapis/fugvjdx-
                 tri/resources/3kzxbg5sa2/methods/GET/integration"          },
                 "method:responses":     {     "href":     "/restapis/fugvjdx-
                 tri/resources/3kzxbg5sa2/methods/GET/responses/200",  "name":
                 "200",  "title":  "200"   },   "method:update":   {   "href":
                 "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET"    },
                 "methodresponse:put":    {    "href":     "/restapis/fugvjdx-
                 tri/resources/3kzxbg5sa2/methods/GET/responses/{sta-
                 tus_code}", "templated": true }  },  "apiKeyRequired":  true,
                 "authorizationType":  "NONE",  "httpMethod":  "GET", "_embed-
                 ded": { "method:integration": { "_links": { "self": { "href":
                 "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/inte-
                 gration"     },     "integration:delete":      {      "href":
                 "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/inte-
                 gration"    },     "integration:responses":     {     "href":
                 "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/inte-
                 gration/responses/200",  "name":  "200",  "title":  "200"  },
                 "integration:update":     {    "href":    "/restapis/fugvjdx-
                 tri/resources/3kzxbg5sa2/methods/GET/integration"  },  "inte-
                 grationresponse:put":     {    "href":    "/restapis/fugvjdx-
                 tri/resources/3kzxbg5sa2/methods/GET/integra-
                 tion/responses/{status_code}",   "templated":   true   }   },
                 "cacheKeyParameters":  [],  "cacheNamespace":   "3kzxbg5sa2",
                 "credentials":  "arn:aws:iam::123456789012:role/apigAwsProxy-
                 Role",    "httpMethod":    "POST",     "passthroughBehavior":
                 "WHEN_NO_MATCH",     "requestParameters":     {     "integra-
                 tion.request.header.Content-Type":                 "'applica-
                 tion/x-amz-json-1.1'"   },  "requestTemplates":  {  "applica-
                 tion/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigate-
                 way:us-east-1:kinesis:action/ListStreams",   "_embedded":   {
                 "integration:responses": {  "_links":  {  "self":  {  "href":
                 "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/inte-
                 gration/responses/200",  "name":  "200",  "title":  "200"  },
                 "integrationresponse:delete":  {  "href": "/restapis/fugvjdx-
                 tri/resources/3kzxbg5sa2/methods/GET/integra-
                 tion/responses/200"    },   "integrationresponse:update":   {
                 "href":      "/restapis/fugvjdxtri/resources/3kzxbg5sa2/meth-
                 ods/GET/integration/responses/200" } }, "responseParameters":
                 { "method.response.header.Content-Type":  "'application/xml'"
                 },  "responseTemplates":  { "application/json": "$util.urlDe-
                 code(\"%3CkinesisStreams%3E%23fore-
                 ach(%24stream%20in%20%24input.path(%27%24.Stream-
                 Names%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2Fki-
                 nesisStreams%3E\")"   },   "statusCode":   "200"   }   }   },
                 "method:responses":  {  "_links":   {   "self":   {   "href":
                 "/restapis/fugvjdxtri/resources/3kzxbg5sa2/meth-
                 ods/GET/responses/200",  "name":  "200",  "title":  "200"  },
                 "methodresponse:delete":    {   "href":   "/restapis/fugvjdx-
                 tri/resources/3kzxbg5sa2/methods/GET/responses/200"        },
                 "methodresponse:update":    {   "href":   "/restapis/fugvjdx-
                 tri/resources/3kzxbg5sa2/methods/GET/responses/200"   }    },
                 "responseModels":  {  "application/json": "Empty" }, "respon-
                 seParameters": { "method.response.header.Content-Type": false
                 }, "statusCode": "200" } } }

              In  the  example  above,  the  response  template for the 200 OK
              response maps the JSON output from the ListStreams action in the
              back  end  to an XML output. The mapping template is URL-encoded
              as                                  %3CkinesisStreams%3E%23fore-
              ach(%24stream%20in%20%24input.path(%27%24.Stream-
              Names%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2Fki-
              nesisStreams%3E   and   the   output   is   decoded   using  the
              $util.urlDecode() helper function.
                 MethodResponse  ,   Integration  ,    IntegrationResponse   ,
                 Resource , Set up an API's method

              httpMethod -> (string)
                 The method's HTTP verb.

              authorizationType -> (string)
                 The  method's  authorization  type. Valid values are NONE for
                 open access, AWS_IAM for using AWS  IAM  permissions,  CUSTOM
                 for  using  a  custom  authorizer,  or COGNITO_USER_POOLS for
                 using a Cognito user pool.

              authorizerId -> (string)
                 The identifier of an  Authorizer to use on this  method.  The
                 authorizationType must be CUSTOM .

              apiKeyRequired -> (boolean)
                 A boolean flag specifying whether a valid  ApiKey is required
                 to invoke this method.

              requestValidatorId -> (string)
                 The identifier of a  RequestValidator for request validation.

              operationName -> (string)
                 A  human-friendly  operation  identifier  for the method. For
                 example, you can assign the operationName of ListPets for the
                 GET /pets method in the PetStore example.

              requestParameters -> (map)
                 A  key-value map defining required or optional method request
                 parameters that can be accepted by API Gateway. A  key  is  a
                 method   request  parameter  name  matching  the  pattern  of
                 method.request.{location}.{name} , where location is  querys-
                 tring  ,  path  ,  or  header  and name is a valid and unique
                 parameter name. The  value  associated  with  the  key  is  a
                 Boolean  flag  indicating  whether  the parameter is required
                 (true ) or optional (false ). The  method  request  parameter
                 names defined here are available in  Integration to be mapped
                 to integration request parameters or templates.

                 key -> (string)

                 value -> (boolean)

              requestModels -> (map)
                 A key-value  map  specifying  data  schemas,  represented  by
                 Model  resources,  (as  the mapped value) of the request pay-
                 loads of given content types (as the mapping key).

                 key -> (string)

                 value -> (string)

              methodResponses -> (map)
                 Gets a method response associated with a  given  HTTP  status
                 code.

                 The  collection  of  method  responses  are encapsulated in a
                 key-value map, where the key is a response's HTTP status code
                 and  the  value  is a  MethodResponse resource that specifies
                 the response returned to the caller from the back end through
                 the integration response.
                     Example: Get a 200 OK response of a GET method Request

                     GET           /restapis/uojnr9hd57/resources/0cjtch/meth-
                     ods/GET/responses/200  HTTP/1.1  Content-Type:   applica-
                     tion/json  Host:  apigateway.us-east-1.amazonaws.com Con-
                     tent-Length: 117 X-Amz-Date: 20160613T215008Z  Authoriza-
                     tion:               AWS4-HMAC-SHA256              Creden-
                     tial={access_key_ID}/20160613/us-east-1/apigate-
                     way/aws4_request,                      SignedHeaders=con-
                     tent-type;host;x-amz-date,          Signature={sig4_hash}
                     Response

                 The  successful  response  returns a 200 OK status code and a
                 payload similar to the following:
                     { "_links": { "curies": { "href":  "https://docs.aws.ama-
                     zon.com/apigateway/latest/developer-
                     guide/restapi-method-response-{rel}.html",        "name":
                     "methodresponse",  "templated": true }, "self": { "href":
                     "/restapis/uojnr9hd57/resources/0cjtch/meth-
                     ods/GET/responses/200",   "title":   "200"   },  "method-
                     response:delete":                {                "href":
                     "/restapis/uojnr9hd57/resources/0cjtch/meth-
                     ods/GET/responses/200"  },   "methodresponse:update":   {
                     "href":      "/restapis/uojnr9hd57/resources/0cjtch/meth-
                     ods/GET/responses/200" } }, "responseModels": { "applica-
                     tion/json":    "Empty"    },    "responseParameters":   {
                     "method.response.header.operator":                 false,
                     "method.response.header.operand_2":                false,
                     "method.response.header.operand_1":  false  },   "status-
                     Code": "200" }
                        AWS CLI

                 key -> (string)

                 value -> (structure)
                     Represents  a method response of a given HTTP status code
                     returned to the client. The  method  response  is  passed
                     from  the  back  end  through  the associated integration
                     response that can be transformed  using  a  mapping  tem-
                     plate.
                        Example: A MethodResponse instance of an API Request

                     The example request retrieves a MethodResponse of the 200
                     status code.
                        GET    /restapis/fugvjdxtri/resources/3kzxbg5sa2/meth-
                        ods/GET/responses/200  HTTP/1.1 Content-Type: applica-
                        tion/json   Host:   apigateway.us-east-1.amazonaws.com
                        X-Amz-Date:       20160603T222952Z      Authorization:
                        AWS4-HMAC-SHA256                               Creden-
                        tial={access_key_ID}/20160603/us-east-1/apigate-
                        way/aws4_request,                   SignedHeaders=con-
                        tent-type;host;x-amz-date,       Signature={sig4_hash}
                        Response

                     The successful response returns 200 OK status and a  pay-
                     load as follows:
                        {      "_links":     {     "curies":     {     "href":
                        "https://docs.aws.amazon.com/apigateway/latest/devel-
                        operguide/restapi-method-response-{rel}.html", "name":
                        "methodresponse",  "templated":  true  },  "self":   {
                        "href":                            "/restapis/fugvjdx-
                        tri/resources/3kzxbg5sa2/methods/GET/responses/200",
                        "title":  "200"  }, "methodresponse:delete": { "href":
                        "/restapis/fugvjdxtri/resources/3kzxbg5sa2/meth-
                        ods/GET/responses/200"  },  "methodresponse:update": {
                        "href":                            "/restapis/fugvjdx-
                        tri/resources/3kzxbg5sa2/methods/GET/responses/200"  }
                        }, "responseModels": { "application/json": "Empty"  },
                        "responseParameters":  {  "method.response.header.Con-
                        tent-Type": false }, "statusCode": "200" }
                            Method  ,   IntegrationResponse   ,    Integration
                            Creating an API

                     statusCode -> (string)
                        The method response's status code.

                     responseParameters -> (map)
                        A   key-value  map  specifying  required  or  optional
                        response parameters that API Gateway can send back  to
                        the caller. A key defines a method response header and
                        the value  specifies  whether  the  associated  method
                        response  header is required or not. The expression of
                        the     key      must      match      the      pattern
                        method.response.header.{name}  , where name is a valid
                        and unique header name.  API  Gateway  passes  certain
                        integration response data to the method response head-
                        ers specified here according to the mapping  you  pre-
                        scribe  in  the API's  IntegrationResponse . The inte-
                        gration response data that can be  mapped  include  an
                        integration  response  header  expressed  in  integra-
                        tion.response.header.{name} , a static value  enclosed
                        within  a  pair  of  single  quotes  (e.g.,  'applica-
                        tion/json' ), or a JSON expression from  the  back-end
                        response    payload    in   the   form   of   integra-
                        tion.response.body.{JSON-expression}      ,      where
                        JSON-expression is a valid JSON expression without the
                        $ prefix.)

                        key -> (string)

                        value -> (boolean)

                     responseModels -> (map)
                        Specifies the  Model resources used for the response's
                        content-type.  Response  models  are  represented as a
                        key/value map, with a content-type as the  key  and  a
                        Model name as the value.

                        key -> (string)

                        value -> (string)

              methodIntegration -> (structure)
                 Gets  the  method's  integration  responsible for passing the
                 client-submitted request to the back end and performing  nec-
                 essary transformations to make the request compliant with the
                 back end.
                     Example:  Request

                     GET           /restapis/uojnr9hd57/resources/0cjtch/meth-
                     ods/GET/integration   HTTP/1.1   Content-Type:   applica-
                     tion/json Host:  apigateway.us-east-1.amazonaws.com  Con-
                     tent-Length:  117 X-Amz-Date: 20160613T213210Z Authoriza-
                     tion:              AWS4-HMAC-SHA256               Creden-
                     tial={access_key_ID}/20160613/us-east-1/apigate-
                     way/aws4_request,                      SignedHeaders=con-
                     tent-type;host;x-amz-date,          Signature={sig4_hash}
                     Response

                 The successful response returns a 200 OK status  code  and  a
                 payload similar to the following:
                     {     "_links":     {     "curies":     [    {    "href":
                     "https://docs.aws.amazon.com/apigateway/latest/developer-
                     guide/restapi-integration-{rel}.html",  "name": "integra-
                     tion",     "templated":     true     },     {     "href":
                     "https://docs.aws.amazon.com/apigateway/latest/developer-
                     guide/restapi-integration-response-{rel}.html",   "name":
                     "integrationresponse",  "templated":  true } ], "self": {
                     "href":      "/restapis/uojnr9hd57/resources/0cjtch/meth-
                     ods/GET/integration"  },  "integration:delete": { "href":
                     "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/inte-
                     gration"    },    "integration:responses":    {   "href":
                     "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/inte-
                     gration/responses/200",  "name": "200", "title": "200" },
                     "integration:update":              {              "href":
                     "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/inte-
                     gration"   },   "integrationresponse:put":   {    "href":
                     "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/inte-
                     gration/responses/{status_code}", "templated": true }  },
                     "cacheKeyParameters":   [],  "cacheNamespace":  "0cjtch",
                     "credentials":       "arn:aws:iam::123456789012:role/api-
                     gAwsProxyRole",  "httpMethod": "POST", "passthroughBehav-
                     ior": "WHEN_NO_MATCH",  "requestTemplates":  {  "applica-
                     tion/json":  "{\n \"a\": \"$input.params('operand1')\",\n
                     \"b\":    \"$input.params('operand2')\",    \n    \"op\":
                     \"$input.params('operator')\"   \n}"  },  "type":  "AWS",
                     "uri":                                  "arn:aws:apigate-
                     way:us-west-2:lambda:path//2015-03-31/func-
                     tions/arn:aws:lambda:us-west-2:123456789012:func-
                     tion:Calc/invocations",    "_embedded":    {    "integra-
                     tion:responses":  {  "_links":  {   "self":   {   "href":
                     "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/inte-
                     gration/responses/200", "name": "200", "title": "200"  },
                     "integrationresponse:delete":          {          "href":
                     "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/inte-
                     gration/responses/200" }, "integrationresponse:update": {
                     "href":      "/restapis/uojnr9hd57/resources/0cjtch/meth-
                     ods/GET/integration/responses/200"  } }, "responseParame-
                     ters":  {  "method.response.header.operator":   "integra-
                     tion.response.body.op",     "method.response.header.oper-
                     and_2":                    "integration.response.body.b",
                     "method.response.header.operand_1":             "integra-
                     tion.response.body.a" }, "responseTemplates": { "applica-
                     tion/json":     "#set($res    =    $input.path('$'))\n{\n
                     \"result\":  \"$res.a,  $res.b,  $res.op  =>  $res.c\",\n
                     \"a\"  :  \"$res.a\",\n  \"b\"  :  \"$res.b\",\n \"op\" :
                     \"$res.op\",\n \"c\" : \"$res.c\"\n}"  },  "selectionPat-
                     tern": "", "statusCode": "200" } } }
                        AWS CLI

                 type -> (string)
                     Specifies an API method integration type. The valid value
                     is one of the following:

                     o AWS : for integrating the API method  request  with  an
                       AWS   service   action,   including  the  Lambda  func-
                       tion-invoking action. With the Lambda function-invoking
                       action,  this is referred to as the Lambda custom inte-
                       gration. With any other AWS  service  action,  this  is
                       known as AWS integration.

                     o AWS_PROXY : for integrating the API method request with
                       the Lambda function-invoking  action  with  the  client
                       request  passed through as-is. This integration is also
                       referred to as the Lambda proxy integration.

                     o HTTP : for integrating the API method request  with  an
                       HTTP endpoint, including a private HTTP endpoint within
                       a VPC. This integration is also referred to as the HTTP
                       custom integration.

                     o HTTP_PROXY  :  for  integrating  the API method request
                       with an HTTP endpoint, including a  private  HTTP  end-
                       point  within  a  VPC,  with  the client request passed
                       through as-is. This is also referred  to  as  the  HTTP
                       proxy integration.

                     o MOCK  : for integrating the API method request with API
                       Gateway as a "loop-back" endpoint without invoking  any
                       backend.

                     For  the  HTTP and HTTP proxy integrations, each integra-
                     tion can specify a protocol (http/https ), port and path.
                     Standard 80 and 443 ports are supported as well as custom
                     ports above 1024. An HTTP or HTTP proxy integration  with
                     a  connectionType of VPC_LINK is referred to as a private
                     integration and uses a  VpcLink to connect API Gateway to
                     a network load balancer of a VPC.

                 httpMethod -> (string)
                     Specifies the integration's HTTP method type.

                 uri -> (string)
                     Specifies  Uniform Resource Identifier (URI) of the inte-
                     gration endpoint.

                     o For HTTP or HTTP_PROXY integrations, the URI must be  a
                       fully  formed,  encoded  HTTP(S)  URL  according to the
                       RFC-3986 specification , for either  standard  integra-
                       tion, where connectionType is not VPC_LINK , or private
                       integration, where connectionType is VPC_LINK .  For  a
                       private HTTP integration, the URI is not used for rout-
                       ing.

                     o For AWS or AWS_PROXY integrations, the URI  is  of  the
                       form        arn:aws:apigateway:{region}:{subdomain.ser-
                       vice|service}:path|action/{service_api}     .     Here,
                       {Region}  is the API Gateway region (e.g., us-east-1 );
                       {service} is the name of  the  integrated  AWS  service
                       (e.g.,  s3 ); and {subdomain} is a designated subdomain
                       supported by certain AWS  service  for  fast  host-name
                       lookup.   action   can  be  used  for  an  AWS  service
                       action-based          API,           using           an
                       Action={name}&{p1}={v1}&p2={v2}...  query  string.  The
                       ensuing {service_api}  refers  to  a  supported  action
                       {name}  plus  any  required  input parameters. Alterna-
                       tively, path can be used for an AWS service  path-based
                       API.  The  ensuing service_api refers to the path to an
                       AWS service resource, including the region of the inte-
                       grated  AWS  service,  if  applicable. For example, for
                       integration   with   the   S3   API    of    `GetObject
                       <https://docs.aws.amazon.com/AmazonS3/latest/API/RESTO-
                       bjectGET.html>`__ , the uri can be either  arn:aws:api-
                       gateway:us-west-2:s3:action/GetOb-
                       ject&Bucket={bucket}&Key={key}   or    arn:aws:apigate-
                       way:us-west-2:s3:path/{bucket}/{key}

                 connectionType -> (string)
                     The  type  of  the  network connection to the integration
                     endpoint. The valid value  is  INTERNET  for  connections
                     through the public routable internet or VPC_LINK for pri-
                     vate connections between API Gateway and a  network  load
                     balancer in a VPC. The default value is INTERNET .

                 connectionId -> (string)
                     The                        (`id                        <-
                     https://docs.aws.amazon.com/apigateway/api-refer-
                     ence/resource/vpc-link/#id>`__ ) of the  VpcLink used for
                     the integration when  connectionType=VPC_LINK  and  unde-
                     fined, otherwise.

                 credentials -> (string)
                     Specifies  the  credentials required for the integration,
                     if any. For AWS integrations, three  options  are  avail-
                     able.  To  specify an IAM Role for API Gateway to assume,
                     use the role's Amazon Resource  Name  (ARN).  To  require
                     that  the  caller's  identity  be passed through from the
                     request, specify the string arn:aws:iam::\*:user/\* .  To
                     use resource-based permissions on supported AWS services,
                     specify null.

                 requestParameters -> (map)
                     A key-value map specifying request  parameters  that  are
                     passed  from  the method request to the back end. The key
                     is an integration request parameter name and the  associ-
                     ated  value is a method request parameter value or static
                     value that must be  enclosed  within  single  quotes  and
                     pre-encoded  as  required  by  the  back  end. The method
                     request  parameter  value  must  match  the  pattern   of
                     method.request.{location}.{name}   ,  where  location  is
                     querystring , path , or header and name must be  a  valid
                     and unique method request parameter name.

                     key -> (string)

                     value -> (string)

                 requestTemplates -> (map)
                     Represents  a  map of Velocity templates that are applied
                     on the request payload based on the  value  of  the  Con-
                     tent-Type  header  sent  by  the client. The content type
                     value is the key in this map,  and  the  template  (as  a
                     String) is the value.

                     key -> (string)

                     value -> (string)

                 passthroughBehavior -> (string)
                     Specifies how the method request body of an unmapped con-
                     tent type will be passed through the integration  request
                     to the back end without transformation. A content type is
                     unmapped if no mapping template is defined in  the  inte-
                     gration  or  the  content  type does not match any of the
                     mapped content types, as specified in requestTemplates  .
                     The valid value is one of the following:

                     o WHEN_NO_MATCH  : passes the method request body through
                       the integration request to the back end without  trans-
                       formation when the method request content type does not
                       match any content type associated with the mapping tem-
                       plates defined in the integration request.

                     o WHEN_NO_TEMPLATES  :  passes  the  method  request body
                       through the integration request to the back end without
                       transformation  when  no mapping template is defined in
                       the integration request. If a template is defined  when
                       this  option  is  selected,  the  method  request of an
                       unmapped content-type will be rejected with an HTTP 415
                       Unsupported Media Type response.

                     o NEVER  :  rejects  the  method request with an HTTP 415
                       Unsupported Media Type response when either the  method
                       request  content  type  does not match any content type
                       associated with the mapping templates  defined  in  the
                       integration  request  or no mapping template is defined
                       in the integration request.

                 contentHandling -> (string)
                     Specifies how to handle request payload content type con-
                     versions. Supported values are CONVERT_TO_BINARY and CON-
                     VERT_TO_TEXT , with the following behaviors:

                     o CONVERT_TO_BINARY : Converts a request payload  from  a
                       Base64-encoded string to the corresponding binary blob.

                     o CONVERT_TO_TEXT : Converts a  request  payload  from  a
                       binary blob to a Base64-encoded string.

                     If this property is not defined, the request payload will
                     be passed through from the method request to  integration
                     request   without   modification,   provided   that   the
                     passthroughBehavior  is  configured  to  support  payload
                     pass-through.

                 timeoutInMillis -> (integer)
                     Custom  timeout  between  50 and 29,000 milliseconds. The
                     default value is 29,000 milliseconds or 29 seconds.

                 cacheNamespace -> (string)
                     Specifies  a  group  of  related  cached  parameters.  By
                     default,   API  Gateway  uses  the  resource  ID  as  the
                     cacheNamespace . You can specify the same  cacheNamespace
                     across  resources  to  return  the  same  cached data for
                     requests to different resources.

                 cacheKeyParameters -> (list)
                     A list of request parameters  whose  values  API  Gateway
                     caches. To be valid values for cacheKeyParameters , these
                     parameters must also be specified for  Method  requestPa-
                     rameters .

                     (string)

                 integrationResponses -> (map)
                     Specifies the integration's responses.
                        Example: Get integration responses of a method Request

                        GET    /restapis/fugvjdxtri/resources/3kzxbg5sa2/meth-
                        ods/GET/integration/responses/200     HTTP/1.1    Con-
                        tent-Type:     application/json     Host:     apigate-
                        way.us-east-1.amazonaws.com                X-Amz-Date:
                        20160607T191449Z Authorization: AWS4-HMAC-SHA256  Cre-
                        dential={access_key_ID}/20160607/us-east-1/apigate-
                        way/aws4_request,                   SignedHeaders=con-
                        tent-type;host;x-amz-date,       Signature={sig4_hash}
                        Response

                     The successful response returns 200 OK status and a  pay-
                     load as follows:
                        {      "_links":     {     "curies":     {     "href":
                        "https://docs.aws.amazon.com/apigateway/latest/devel-
                        operguide/restapi-integration-response-{rel}.html",
                        "name": "integrationresponse",  "templated":  true  },
                        "self":       {       "href":      "/restapis/fugvjdx-
                        tri/resources/3kzxbg5sa2/methods/GET/integra-
                        tion/responses/200", "title": "200" }, "integrationre-
                        sponse:delete":    {    "href":    "/restapis/fugvjdx-
                        tri/resources/3kzxbg5sa2/methods/GET/integra-
                        tion/responses/200" }, "integrationresponse:update": {
                        "href":                            "/restapis/fugvjdx-
                        tri/resources/3kzxbg5sa2/methods/GET/integra-
                        tion/responses/200"   }   },  "responseParameters":  {
                        "method.response.header.Content-Type":      "'applica-
                        tion/xml'"   },   "responseTemplates":   {   "applica-
                        tion/json":             "$util.urlDecode(\"%3Ckinesis-
                        Streams%3E#foreach($stream  in  $input.path('$.Stream-
                        Names'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kine-
                        sisStreams%3E\")\n" }, "statusCode": "200" }
                            Creating an API

                     key -> (string)

                     value -> (structure)
                        Represents  an  integration  response. The status code
                        must map to an existing  MethodResponse , and  parame-
                        ters  and  templates  can  be  used  to  transform the
                        back-end response.
                            Creating an API

                        statusCode -> (string)
                            Specifies the status code that is used to map  the
                            integration   response  to  an  existing   Method-
                            Response .

                        selectionPattern -> (string)
                            Specifies the regular expression  (regex)  pattern
                            used  to  choose  an integration response based on
                            the response from the back end.  For  example,  if
                            the success response returns nothing and the error
                            response returns some string, you could use the .+
                            regex  to match error response. However, make sure
                            that the error response does not contain any  new-
                            line  (\n  )  character in such cases. If the back
                            end is an AWS  Lambda  function,  the  AWS  Lambda
                            function  error  header  is matched. For all other
                            HTTP and AWS back ends, the HTTP  status  code  is
                            matched.

                        responseParameters -> (map)
                            A  key-value  map  specifying  response parameters
                            that are passed to the method  response  from  the
                            back  end.  The  key  is  a method response header
                            parameter name and the mapped value is an integra-
                            tion   response   header  value,  a  static  value
                            enclosed within a pair of single quotes, or a JSON
                            expression from the integration response body. The
                            mapping   key   must   match   the   pattern    of
                            method.response.header.{name}  ,  where  name is a
                            valid  and  unique   header   name.   The   mapped
                            non-static  value  must match the pattern of inte-
                            gration.response.header.{name}     or     integra-
                            tion.response.body.{JSON-expression}  , where name
                            is a valid and unique  response  header  name  and
                            JSON-expression is a valid JSON expression without
                            the $ prefix.

                            key -> (string)

                            value -> (string)

                        responseTemplates -> (map)
                            Specifies the  templates  used  to  transform  the
                            integration  response body. Response templates are
                            represented  as  a  key/value  map,  with  a  con-
                            tent-type  as the key and a template as the value.

                            key -> (string)

                            value -> (string)

                        contentHandling -> (string)
                            Specifies how to handle response  payload  content
                            type   conversions.   Supported  values  are  CON-
                            VERT_TO_BINARY and CONVERT_TO_TEXT , with the fol-
                            lowing behaviors:

                            o CONVERT_TO_BINARY  : Converts a response payload
                              from a Base64-encoded string to the  correspond-
                              ing binary blob.

                            o CONVERT_TO_TEXT  :  Converts  a response payload
                              from a binary blob to a Base64-encoded string.

                            If this property is not defined, the response pay-
                            load  will  be passed through from the integration
                            response to the method response without  modifica-
                            tion.

                 tlsConfig -> (structure)
                     Specifies the TLS configuration for an integration.

                     insecureSkipVerification -> (boolean)
                        Specifies  whether  or not API Gateway skips verifica-
                        tion that the certificate for an integration  endpoint
                        is  issued by a supported certificate authority . This
                        isnt recommended, but it enables you to  use  certifi-
                        cates  that are signed by private certificate authori-
                        ties,  or  certificates  that  are   self-signed.   If
                        enabled,  API Gateway still performs basic certificate
                        validation, which includes checking the  certificate's
                        expiration date, hostname, and presence of a root cer-
                        tificate  authority.  Supported  only  for  HTTP   and
                        HTTP_PROXY integrations.

              authorizationScopes -> (list)
                 A  list of authorization scopes configured on the method. The
                 scopes are  used  with  a  COGNITO_USER_POOLS  authorizer  to
                 authorize  the  method invocation. The authorization works by
                 matching the method scopes against the scopes parsed from the
                 access  token  in the incoming request. The method invocation
                 is authorized if any method scopes matches a claimed scope in
                 the  access  token.  Otherwise,  the invocation is not autho-
                 rized. When the method scope is configured, the  client  must
                 provide  an  access  token  instead  of an identity token for
                 authorization purposes.

                 (string)



                                                                GET-RESOURCE()
