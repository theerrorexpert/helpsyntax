UPDATE-METHOD-RESPONSE()                              UPDATE-METHOD-RESPONSE()



NAME
       update-method-response -

DESCRIPTION
       Updates an existing  MethodResponse resource.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            update-method-response
          --rest-api-id <value>
          --resource-id <value>
          --http-method <value>
          --status-code <value>
          [--patch-operations <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --rest-api-id (string)
          [Required] The string identifier of the associated  RestApi .

       --resource-id (string)
          [Required]   The    Resource   identifier  for  the   MethodResponse
          resource.

       --http-method (string)
          [Required] The HTTP verb of the  Method resource.

       --status-code (string)
          [Required] The status code for the  MethodResponse resource.

       --patch-operations (list)
          A list of update operations to be applied to the specified  resource
          and in the order specified in this list.

          (structure)
              A  single  patch  operation  to apply to the specified resource.
              Please refer to http://tools.ietf.org/html/rfc6902#section-4 for
              an explanation of how each operation is used.

              op -> (string)
                 An  update operation to be performed with this PATCH request.
                 The valid value can be add , remove , replace or copy  .  Not
                 all valid operations are supported for a given resource. Sup-
                 port of the operations depends on specific  operational  con-
                 texts.  Attempts  to  apply  an  unsupported  operation  on a
                 resource will return an error message.

              path -> (string)
                 The op operation's target, as identified by  a  JSON  Pointer
                 value   that   references  a  location  within  the  targeted
                 resource. For example, if the target resource has an  update-
                 able  property  of {"name":"value"} , the path for this prop-
                 erty is /name . If the name property value is a  JSON  object
                 (e.g.,  {"name":  {"child/name":  "child-value"}} ), the path
                 for the child/name property will be /name/child~1name  .  Any
                 slash ("/") character appearing in path names must be escaped
                 with "~1", as shown in the example above. Each  op  operation
                 can have only one path associated with it.

              value -> (string)
                 The  new target value of the update operation. It is applica-
                 ble for the add or replace operation. When using AWS  CLI  to
                 update  a  property  of a JSON value, enclose the JSON object
                 with a pair of single quotes in a Linux shell,  e.g.,  '{"a":
                 ...}'. In a Windows shell, see Using JSON for Parameters .

              from -> (string)
                 The  copy  update  operation's  source  as  identified  by  a
                 JSON-Pointer value referencing the location within  the  tar-
                 geted  resource  to copy the value from. For example, to pro-
                 mote a canary deployment, you copy the canary  deployment  ID
                 to the affiliated deployment ID by calling a PATCH request on
                 a  Stage  resource  with  "op":"copy"  ,  "from":"/canarySet-
                 tings/deploymentId" and "path":"/deploymentId" .

       Shorthand Syntax:

          op=string,path=string,value=string,from=string ...

       JSON Syntax:

          [
            {
              "op": "add"|"remove"|"replace"|"move"|"copy"|"test",
              "path": "string",
              "value": "string",
              "from": "string"
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a new method response header for the 200 response in a method
       and define it as not required (default)

       Command:

          aws apigateway update-method-response --rest-api-id 1234123412 --resource-id a1b2c3 --http-method GET --status-code 200 --patch-operations op="add",path="/responseParameters/method.response.header.custom-header",value="false"

       To delete a response model for the 200 response in a method

       Command:

          aws apigateway update-method-response --rest-api-id 1234123412 --resource-id a1b2c3 --http-method GET --status-code 200 --patch-operations op="remove",path="/responseModels/application~1json"

OUTPUT
       statusCode -> (string)
          The method response's status code.

       responseParameters -> (map)
          A key-value map specifying required or optional response  parameters
          that API Gateway can send back to the caller. A key defines a method
          response header and  the  value  specifies  whether  the  associated
          method response header is required or not. The expression of the key
          must match the pattern method.response.header.{name} , where name is
          a  valid and unique header name. API Gateway passes certain integra-
          tion response data to the method  response  headers  specified  here
          according  to the mapping you prescribe in the API's  IntegrationRe-
          sponse . The integration response data that can be mapped include an
          integration     response     header     expressed     in    integra-
          tion.response.header.{name} , a static value enclosed within a  pair
          of  single  quotes (e.g., 'application/json' ), or a JSON expression
          from  the  back-end  response  payload  in  the  form  of   integra-
          tion.response.body.{JSON-expression}  ,  where  JSON-expression is a
          valid JSON expression without the $ prefix.)

          key -> (string)

          value -> (boolean)

       responseModels -> (map)
          Specifies the  Model resources used for the response's content-type.
          Response  models  are  represented  as  a key/value map, with a con-
          tent-type as the key and a  Model name as the value.

          key -> (string)

          value -> (string)



                                                      UPDATE-METHOD-RESPONSE()
