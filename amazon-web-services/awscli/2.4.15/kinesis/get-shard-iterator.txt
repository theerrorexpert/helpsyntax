GET-SHARD-ITERATOR()                                      GET-SHARD-ITERATOR()



NAME
       get-shard-iterator -

DESCRIPTION
       Gets  an Amazon Kinesis shard iterator. A shard iterator expires 5 min-
       utes after it is returned to the requester.

       A shard iterator specifies the shard position from which to start read-
       ing  data  records  sequentially.  The  position is specified using the
       sequence number of a data record in a shard. A sequence number  is  the
       identifier  associated with every record ingested in the stream, and is
       assigned when a record is put into the stream. Each stream has  one  or
       more shards.

       You  must specify the shard iterator type. For example, you can set the
       ShardIteratorType parameter to read exactly from the  position  denoted
       by  a  specific  sequence  number by using the AT_SEQUENCE_NUMBER shard
       iterator type. Alternatively, the parameter can read  right  after  the
       sequence number by using the AFTER_SEQUENCE_NUMBER shard iterator type,
       using sequence numbers  returned  by  earlier  calls  to   PutRecord  ,
       PutRecords ,  GetRecords , or  DescribeStream . In the request, you can
       specify the shard iterator type AT_TIMESTAMP to read  records  from  an
       arbitrary  point  in time, TRIM_HORIZON to cause ShardIterator to point
       to the last untrimmed record in the shard in  the  system  (the  oldest
       data  record  in the shard), or LATEST so that you always read the most
       recent data in the shard.

       When you read repeatedly from a stream, use a  GetShardIterator request
       to  get  the  first  shard  iterator  for use in your first  GetRecords
       request and for subsequent reads use the shard iterator returned by the
       GetRecords  request  in  NextShardIterator  .  A  new shard iterator is
       returned by every  GetRecords request in NextShardIterator , which  you
       use in the ShardIterator parameter of the next  GetRecords request.

       If  a  GetShardIterator request is made too often, you receive a Provi-
       sionedThroughputExceededException . For more information about through-
       put  limits, see  GetRecords , and Streams Limits in the Amazon Kinesis
       Data Streams Developer Guide .

       If the shard is closed,  GetShardIterator returns a valid iterator  for
       the  last  sequence  number  of  the  shard. A shard can be closed as a
       result of using  SplitShard or  MergeShards .
          GetShardIterator has a limit of five  transactions  per  second  per
          account per open shard.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-shard-iterator
          --stream-name <value>
          --shard-id <value>
          --shard-iterator-type <value>
          [--starting-sequence-number <value>]
          [--timestamp <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --stream-name (string)
          The name of the Amazon Kinesis data stream.

       --shard-id (string)
          The  shard  ID of the Kinesis Data Streams shard to get the iterator
          for.

       --shard-iterator-type (string)
          Determines how the shard iterator is  used  to  start  reading  data
          records from the shard.

          The following are the valid Amazon Kinesis shard iterator types:

          o AT_SEQUENCE_NUMBER  - Start reading from the position denoted by a
            specific sequence number, provided in  the  value  StartingSequen-
            ceNumber .

          o AFTER_SEQUENCE_NUMBER  -  Start  reading  right after the position
            denoted by a specific  sequence  number,  provided  in  the  value
            StartingSequenceNumber .

          o AT_TIMESTAMP  -  Start reading from the position denoted by a spe-
            cific time stamp, provided in the value Timestamp .

          o TRIM_HORIZON - Start reading at the last untrimmed record  in  the
            shard in the system, which is the oldest data record in the shard.

          o LATEST - Start reading just after the most recent  record  in  the
            shard,  so that you always read the most recent data in the shard.

          Possible values:

          o AT_SEQUENCE_NUMBER

          o AFTER_SEQUENCE_NUMBER

          o TRIM_HORIZON

          o LATEST

          o AT_TIMESTAMP

       --starting-sequence-number (string)
          The sequence number of the data record in the shard  from  which  to
          start  reading. Used with shard iterator type AT_SEQUENCE_NUMBER and
          AFTER_SEQUENCE_NUMBER.

       --timestamp (timestamp)
          The time stamp of the data record from which to start reading.  Used
          with  shard  iterator  type  AT_TIMESTAMP.  A time stamp is the Unix
          epoch  date   with   precision   in   milliseconds.   For   example,
          2016-04-04T19:58:46.480-00:00  or  1459799926.480 . If a record with
          this exact time stamp does not exist, the iterator returned  is  for
          the next (later) record. If the time stamp is older than the current
          trim horizon, the iterator returned is for the oldest untrimmed data
          record (TRIM_HORIZON).

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To obtain a shard iterator

       The  following  get-shard-iterator  example uses the AT_SEQUENCE_NUMBER
       shard iterator type and generates a shard  iterator  to  start  reading
       data  records  exactly  from  the  position  denoted  by  the specified
       sequence number.

          aws kinesis get-shard-iterator \
              --stream-name samplestream \
              --shard-id shardId-000000000001 \
              --shard-iterator-type LATEST

       Output:

          {
              "ShardIterator": "AAAAAAAAAAFEvJjIYI+3jw/4aqgH9FifJ+n48XWTh/IFIsbILP6o5eDueD39NXNBfpZ10WL5K6ADXk8w+5H+Qhd9cFA9k268CPXCz/kebq1TGYI7Vy+lUkA9BuN3xvATxMBGxRY3zYK05gqgvaIRn94O8SqeEqwhigwZxNWxID3Ej7YYYcxQi8Q/fIrCjGAy/n2r5Z9G864YpWDfN9upNNQAR/iiOWKs"
          }

       For more information, see Developing Consumers Using the  Kinesis  Data
       Streams  API  with  the  AWS  SDK  for  Java in the Amazon Kinesis Data
       Streams Developer Guide.

OUTPUT
       ShardIterator -> (string)
          The position in the shard from which to start reading  data  records
          sequentially.  A  shard  iterator  specifies this position using the
          sequence number of a data record in a shard.



                                                          GET-SHARD-ITERATOR()
