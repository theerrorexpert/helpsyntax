PUT-RECORD()                                                      PUT-RECORD()



NAME
       put-record -

DESCRIPTION
       Writes  a  single  data record into an Amazon Kinesis data stream. Call
       PutRecord to send data into the stream for real-time ingestion and sub-
       sequent processing, one record at a time. Each shard can support writes
       up to 1,000 records per second, up to a maximum data write total  of  1
       MiB per second.

       You  must  specify  the  name  of the stream that captures, stores, and
       transports the data; a partition key; and the data blob itself.

       The data blob can be any type of data; for example, a  segment  from  a
       log  file,  geographic/location  data, website clickstream data, and so
       on.

       The partition key is used by Kinesis Data Streams  to  distribute  data
       across  shards.  Kinesis  Data Streams segregates the data records that
       belong to a stream into multiple shards, using the partition key  asso-
       ciated  with  each  data record to determine the shard to which a given
       data record belongs.

       Partition keys are Unicode strings, with a maximum length limit of  256
       characters  for each key. An MD5 hash function is used to map partition
       keys to 128-bit integer values and to map associated  data  records  to
       shards  using the hash key ranges of the shards. You can override hash-
       ing the partition key to determine the shard by explicitly specifying a
       hash  value  using the ExplicitHashKey parameter. For more information,
       see Adding Data to a Stream in the Amazon Kinesis Data  Streams  Devel-
       oper Guide .
          PutRecord  returns  the shard ID of where the data record was placed
          and the sequence number that was assigned to the data record.

       Sequence numbers increase over time and are specific to a shard  within
       a  stream, not across all shards within a stream. To guarantee strictly
       increasing ordering, write serially to a shard and use the SequenceNum-
       berForOrdering  parameter.  For  more information, see Adding Data to a
       Stream in the Amazon Kinesis Data Streams Developer Guide .

       WARNING:
          After you write a record to a stream, you cannot modify that  record
          or its order within the stream.

       If a PutRecord request cannot be processed because of insufficient pro-
       visioned throughput on the shard involved  in  the  request,  PutRecord
       throws ProvisionedThroughputExceededException .

       By default, data records are accessible for 24 hours from the time that
       they are added to a stream. You can use   IncreaseStreamRetentionPeriod
       or  DecreaseStreamRetentionPeriod to modify this retention period.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            put-record
          --stream-name <value>
          --data <value>
          --partition-key <value>
          [--explicit-hash-key <value>]
          [--sequence-number-for-ordering <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --stream-name (string)
          The name of the stream to put the data record into.

       --data (blob)
          The  data  blob to put into the record, which is base64-encoded when
          the blob is serialized. When  the  data  blob  (the  payload  before
          base64-encoding)  is added to the partition key size, the total size
          must not exceed the maximum record size (1 MiB).

       --partition-key (string)
          Determines which shard in the stream the data record is assigned to.
          Partition  keys  are  Unicode strings with a maximum length limit of
          256 characters for each key. Amazon Kinesis Data  Streams  uses  the
          partition  key  as  input to a hash function that maps the partition
          key and associated data to a specific shard.  Specifically,  an  MD5
          hash  function is used to map partition keys to 128-bit integer val-
          ues and to map associated data records to shards.  As  a  result  of
          this hashing mechanism, all data records with the same partition key
          map to the same shard within the stream.

       --explicit-hash-key (string)
          The hash value used to  explicitly  determine  the  shard  the  data
          record is assigned to by overriding the partition key hash.

       --sequence-number-for-ordering (string)
          Guarantees  strictly  increasing sequence numbers, for puts from the
          same client and to the same partition key. Usage:  set  the  Sequen-
          ceNumberForOrdering of record n to the sequence number of record n-1
          (as returned in the result when putting record n-1 ). If this param-
          eter is not set, records are coarsely ordered based on arrival time.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To write a record into a data stream

       The following put-record example writes a single data record  into  the
       specified data stream using the specified partition key.

          aws kinesis put-record \
              --stream-name samplestream \
              --data sampledatarecord \
              --partition-key samplepartitionkey

       Output:

          {
              "ShardId": "shardId-000000000009",
              "SequenceNumber": "49600902273357540915989931256901506243878407835297513618",
              "EncryptionType": "KMS"
          }

       For more information, see Developing Producers Using the Amazon Kinesis
       Data Streams API with the AWS SDK for Java in the Amazon  Kinesis  Data
       Streams Developer Guide.

OUTPUT
       ShardId -> (string)
          The shard ID of the shard where the data record was placed.

       SequenceNumber -> (string)
          The  sequence  number  identifier  that was assigned to the put data
          record. The sequence number for the  record  is  unique  across  all
          records  in  the stream. A sequence number is the identifier associ-
          ated with every record put into the stream.

       EncryptionType -> (string)
          The encryption type to use on the record. This parameter can be  one
          of the following values:

          o NONE : Do not encrypt the records in the stream.

          o KMS  :  Use  server-side  encryption  on the records in the stream
            using a customer-managed Amazon Web Services KMS key.



                                                                  PUT-RECORD()
