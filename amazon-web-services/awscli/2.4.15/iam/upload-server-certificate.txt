UPLOAD-SERVER-CERTIFICATE()                        UPLOAD-SERVER-CERTIFICATE()



NAME
       upload-server-certificate -

DESCRIPTION
       Uploads  a  server  certificate  entity  for  the  Amazon  Web Services
       account. The server certificate entity includes a public  key  certifi-
       cate,  a  private  key, and an optional certificate chain, which should
       all be PEM-encoded.

       We recommend that you use Certificate Manager to provision, manage, and
       deploy  your  server  certificates. With ACM you can request a certifi-
       cate, deploy it to Amazon Web Services resources, and  let  ACM  handle
       certificate  renewals  for  you. Certificates provided by ACM are free.
       For more information about using ACM, see the Certificate Manager  User
       Guide .

       For  more  information  about  working  with  server  certificates, see
       Working with server certificates in the IAM User  Guide  .  This  topic
       includes a list of Amazon Web Services services that can use the server
       certificates that you manage with IAM.

       For information about the number of server certificates you can upload,
       see IAM and STS quotas in the IAM User Guide .

       NOTE:
          Because the body of the public key certificate, private key, and the
          certificate chain can be large, you should use POST rather than  GET
          when calling UploadServerCertificate . For information about setting
          up signatures and authorization through the API, see Signing  Amazon
          Web  Services API requests in the Amazon Web Services General Refer-
          ence . For general information about using the Query API  with  IAM,
          see  Calling  the  API by making HTTP query requests in the IAM User
          Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            upload-server-certificate
          [--path <value>]
          --server-certificate-name <value>
          --certificate-body <value>
          --private-key <value>
          [--certificate-chain <value>]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --path (string)
          The path for the server  certificate.  For  more  information  about
          paths, see IAM identifiers in the IAM User Guide .

          This  parameter is optional. If it is not included, it defaults to a
          slash (/). This parameter allows (through  its  regex  pattern  )  a
          string  of  characters  consisting  of either a forward slash (/) by
          itself or a string that must begin and end with forward slashes.  In
          addition,  it  can  contain any ASCII character from the ! (\u0021 )
          through the DEL character  (\u007F  ),  including  most  punctuation
          characters, digits, and upper and lowercased letters.

          NOTE:
              If  you  are uploading a server certificate specifically for use
              with Amazon CloudFront distributions, you must  specify  a  path
              using  the  path parameter. The path must begin with /cloudfront
              and  must  include  a  trailing  slash  (for  example,   /cloud-
              front/test/ ).

       --server-certificate-name (string)
          The name for the server certificate. Do not include the path in this
          value. The name of the certificate cannot contain any spaces.

          This parameter allows (through its regex pattern ) a string of char-
          acters  consisting  of  upper  and lowercase alphanumeric characters
          with no spaces. You can also include any of  the  following  charac-
          ters: _+=,.@-

       --certificate-body (string)
          The contents of the public key certificate in PEM-encoded format.

          The  regex  pattern  used  to validate this parameter is a string of
          characters consisting of the following:

          o Any printable ASCII character ranging  from  the  space  character
            (\u0020 ) through the end of the ASCII character range

          o The printable characters in the Basic Latin and Latin-1 Supplement
            character set (through \u00FF )

          o The special characters tab (\u0009 ), line  feed  (\u000A  ),  and
            carriage return (\u000D )

       --private-key (string)
          The contents of the private key in PEM-encoded format.

          The  regex  pattern  used  to validate this parameter is a string of
          characters consisting of the following:

          o Any printable ASCII character ranging  from  the  space  character
            (\u0020 ) through the end of the ASCII character range

          o The printable characters in the Basic Latin and Latin-1 Supplement
            character set (through \u00FF )

          o The special characters tab (\u0009 ), line  feed  (\u000A  ),  and
            carriage return (\u000D )

       --certificate-chain (string)
          The  contents of the certificate chain. This is typically a concate-
          nation of the PEM-encoded public key certificates of the chain.

          The regex pattern used to validate this parameter  is  a  string  of
          characters consisting of the following:

          o Any  printable  ASCII  character  ranging from the space character
            (\u0020 ) through the end of the ASCII character range

          o The printable characters in the Basic Latin and Latin-1 Supplement
            character set (through \u00FF )

          o The  special  characters  tab  (\u0009 ), line feed (\u000A ), and
            carriage return (\u000D )

       --tags (list)
          A list of tags that you want to attach to the new  IAM  server  cer-
          tificate resource. Each tag consists of a key name and an associated
          value. For more information about tagging, see Tagging IAM resources
          in the IAM User Guide .

          NOTE:
              If  any  one of the tags is invalid or if you exceed the allowed
              maximum number of tags, then the entire request  fails  and  the
              resource is not created.

          (structure)
              A  structure  that represents user-provided metadata that can be
              associated with an IAM resource. For more information about tag-
              ging, see Tagging IAM resources in the IAM User Guide .

              Key -> (string)
                 The  key  name  that  can  be used to look up or retrieve the
                 associated value. For example, Department or Cost Center  are
                 common choices.

              Value -> (string)
                 The  value associated with this tag. For example, tags with a
                 key name of  Department  could  have  values  such  as  Human
                 Resources  ,  Accounting , and Support . Tags with a key name
                 of Cost Center might have values that consist of  the  number
                 associated  with  the different cost centers in your company.
                 Typically, many resources have tags with the  same  key  name
                 but with different values.

                 NOTE:
                     Amazon  Web Services always interprets the tag Value as a
                     single string. If you need to store  an  array,  you  can
                     store  comma-separated values in the string. However, you
                     must interpret the value in your code.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To upload a server certificate to your AWS account

       The following upload-server-certificate command uploads a  server  cer-
       tificate  to  your  AWS account. In this example, the certificate is in
       the file public_key_cert_file.pem, the associated private key is in the
       file  my_private_key.pem, and the the certificate chain provided by the
       certificate authority  (CA)  is  in  the  my_certificate_chain_file.pem
       file.  When  the file has finished uploading, it is available under the
       name myServerCertificate. Parameters that begin with file:// tells  the
       command  to read the contents of the file and use that as the parameter
       value instead of the file name itself.

          aws iam upload-server-certificate --server-certificate-name myServerCertificate --certificate-body file://public_key_cert_file.pem --private-key file://my_private_key.pem --certificate-chain file://my_certificate_chain_file.pem

       Output:

          {
              "ServerCertificateMetadata": {
                  "Path": "/",
                  "ServerCertificateName": "myServerCertificate",
                  "ServerCertificateId": "ASCAEXAMPLE123EXAMPLE",
                  "Arn": "arn:aws:iam::1234567989012:server-certificate/myServerCertificate",
                  "UploadDate": "2019-04-22T21:13:44+00:00",
                  "Expiration": "2019-10-15T22:23:16+00:00"
              }
          }

       For more information, see Creating, Uploading, and Deleting Server Cer-
       tificates in the Using IAM guide.

OUTPUT
       ServerCertificateMetadata -> (structure)
          The  meta information of the uploaded server certificate without its
          certificate body, certificate chain, and private key.

          Path -> (string)
              The path to the server certificate. For more  information  about
              paths, see IAM identifiers in the IAM User Guide .

          ServerCertificateName -> (string)
              The name that identifies the server certificate.

          ServerCertificateId -> (string)
              The stable and unique string identifying the server certificate.
              For more information about IDs, see IAM identifiers in  the  IAM
              User Guide .

          Arn -> (string)
              The  Amazon  Resource  Name (ARN) specifying the server certifi-
              cate. For more information about ARNs and how  to  use  them  in
              policies, see IAM identifiers in the IAM User Guide .

          UploadDate -> (timestamp)
              The date when the server certificate was uploaded.

          Expiration -> (timestamp)
              The date on which the certificate is set to expire.

       Tags -> (list)
          A  list of tags that are attached to the new IAM server certificate.
          The returned list of tags is sorted by tag key. For more information
          about tagging, see Tagging IAM resources in the IAM User Guide .

          (structure)
              A  structure  that represents user-provided metadata that can be
              associated with an IAM resource. For more information about tag-
              ging, see Tagging IAM resources in the IAM User Guide .

              Key -> (string)
                 The  key  name  that  can  be used to look up or retrieve the
                 associated value. For example, Department or Cost Center  are
                 common choices.

              Value -> (string)
                 The  value associated with this tag. For example, tags with a
                 key name of  Department  could  have  values  such  as  Human
                 Resources  ,  Accounting , and Support . Tags with a key name
                 of Cost Center might have values that consist of  the  number
                 associated  with  the different cost centers in your company.
                 Typically, many resources have tags with the  same  key  name
                 but with different values.

                 NOTE:
                     Amazon  Web Services always interprets the tag Value as a
                     single string. If you need to store  an  array,  you  can
                     store  comma-separated values in the string. However, you
                     must interpret the value in your code.



                                                   UPLOAD-SERVER-CERTIFICATE()
