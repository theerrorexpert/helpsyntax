CREATE-ACCESS-KEY()                                        CREATE-ACCESS-KEY()



NAME
       create-access-key -

DESCRIPTION
       Creates  a  new Amazon Web Services secret access key and corresponding
       Amazon Web Services access key ID for the specified user.  The  default
       status for new keys is Active .

       If you do not specify a user name, IAM determines the user name implic-
       itly based on the  Amazon  Web  Services  access  key  ID  signing  the
       request. This operation works for access keys under the Amazon Web Ser-
       vices account. Consequently, you can use this operation to manage  Ama-
       zon  Web  Services  account root user credentials. This is true even if
       the Amazon Web Services account has no associated users.

       For information about quotas on the number of keys you can create,  see
       IAM and STS quotas in the IAM User Guide .

       WARNING:
          To  ensure  the  security  of  your Amazon Web Services account, the
          secret access key is accessible only during key and  user  creation.
          You  must  save the key (for example, in a text file) if you want to
          be able to access it again. If a secret key is lost, you can  delete
          the access keys for the associated user and then create new keys.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-access-key
          [--user-name <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --user-name (string)
          The name of the IAM user that the new key will belong to.

          This parameter allows (through its regex pattern ) a string of char-
          acters consisting of upper  and  lowercase  alphanumeric  characters
          with  no  spaces.  You can also include any of the following charac-
          ters: _+=,.@-

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create an access key for an IAM user

       The following create-access-key command creates an access  key  (access
       key ID and secret access key) for the IAM user named Bob:

          aws iam create-access-key --user-name Bob

       Output:

          {
              "AccessKey": {
                  "UserName": "Bob",
                  "Status": "Active",
                  "CreateDate": "2015-03-09T18:39:23.411Z",
                  "SecretAccessKey": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY",
                  "AccessKeyId": "AKIAIOSFODNN7EXAMPLE"
              }
          }

       Store  the  secret  access  key in a secure location. If it is lost, it
       cannot be recovered, and you must create a new access key.

       For more information, see Managing Access Keys for  IAM  Users  in  the
       Using IAM guide.

OUTPUT
       AccessKey -> (structure)
          A structure with details about the access key.

          UserName -> (string)
              The name of the IAM user that the access key is associated with.

          AccessKeyId -> (string)
              The ID for this access key.

          Status -> (string)
              The status of the access key. Active means that the key is valid
              for API calls, while Inactive means it is not.

          SecretAccessKey -> (string)
              The secret key used to sign requests.

          CreateDate -> (timestamp)
              The date when the access key was created.



                                                           CREATE-ACCESS-KEY()
