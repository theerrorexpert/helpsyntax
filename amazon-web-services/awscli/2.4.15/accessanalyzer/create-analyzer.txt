CREATE-ANALYZER()                                            CREATE-ANALYZER()



NAME
       create-analyzer -

DESCRIPTION
       Creates an analyzer for your account.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-analyzer
          --analyzer-name <value>
          [--archive-rules <value>]
          [--client-token <value>]
          [--tags <value>]
          --type <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --analyzer-name (string)
          The name of the analyzer to create.

       --archive-rules (list)
          Specifies  the  archive rules to add for the analyzer. Archive rules
          automatically archive findings that meet the criteria you define for
          the rule.

          (structure)
              An criterion statement in an archive rule. Each archive rule may
              have multiple criteria.

              filter -> (map)
                 The condition and values for a criterion.

                 key -> (string)

                 value -> (structure)
                     The criteria to use in the filter that  defines  the  ar-
                     chive rule.

                     contains -> (list)
                        A  "contains" operator to match for the filter used to
                        create the rule.

                        (string)

                     eq -> (list)
                        An "equals" operator to match for the filter  used  to
                        create the rule.

                        (string)

                     exists -> (boolean)
                        An  "exists"  operator to match for the filter used to
                        create the rule.

                     neq -> (list)
                        A "not equals" operator to match for the  filter  used
                        to create the rule.

                        (string)

              ruleName -> (string)
                 The name of the rule.

       Shorthand Syntax:

          filter={KeyName1={contains=[string,string],eq=[string,string],exists=boolean,neq=[string,string]},KeyName2={contains=[string,string],eq=[string,string],exists=boolean,neq=[string,string]}},ruleName=string ...

       JSON Syntax:

          [
            {
              "filter": {"string": {
                    "contains": ["string", ...],
                    "eq": ["string", ...],
                    "exists": true|false,
                    "neq": ["string", ...]
                  }
                ...},
              "ruleName": "string"
            }
            ...
          ]

       --client-token (string)
          A client token.

       --tags (map)
          The tags to apply to the analyzer.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --type (string)
          The  type  of analyzer to create. Only ACCOUNT and ORGANIZATION ana-
          lyzers are supported. You can create only one analyzer  per  account
          per  Region.  You  can create up to 5 analyzers per organization per
          Region.

          Possible values:

          o ACCOUNT

          o ORGANIZATION

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       arn -> (string)
          The ARN of the analyzer that was created by the request.



                                                             CREATE-ANALYZER()
