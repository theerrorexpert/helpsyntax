SEND-MESSAGE-BATCH()                                      SEND-MESSAGE-BATCH()



NAME
       send-message-batch -

DESCRIPTION
       Delivers  up  to  ten  messages to the specified queue. This is a batch
       version of ``  SendMessage .`` For  a  FIFO  queue,  multiple  messages
       within a single batch are enqueued in the order they are sent.

       The  result  of  sending  each  message is reported individually in the
       response. Because the batch request can result in a combination of suc-
       cessful  and  unsuccessful  actions,  you should check for batch errors
       even when the call returns an HTTP status code of 200 .

       The maximum allowed individual message size and the maximum total  pay-
       load size (the sum of the individual lengths of all of the batched mes-
       sages) are both 256 KB (262,144 bytes).

       WARNING:
          A message can include only XML, JSON, and unformatted text. The fol-
          lowing Unicode characters are allowed:
              #x9 | #xA | #xD | #x20 to #xD7FF | #xE000 to #xFFFD | #x10000 to
              #x10FFFF

          Any characters not included in this list will be rejected. For  more
          information, see the W3C specification for characters .

       If  you  don't  specify the DelaySeconds parameter for an entry, Amazon
       SQS uses the default value for the queue.

       Some actions take lists of parameters. These lists are specified  using
       the  param.n  notation.  Values  of n are integers starting from 1. For
       example, a parameter list with two elements looks like this:
          &AttributeName.1=first

          &AttributeName.2=second

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            send-message-batch
          --queue-url <value>
          --entries <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --queue-url (string)
          The URL of the Amazon SQS queue to which batched messages are  sent.

          Queue URLs and names are case-sensitive.

       --entries (list)
          A list of ``  SendMessageBatchRequestEntry `` items.

          (structure)
              Contains  the  details of a single Amazon SQS message along with
              an Id .

              Id -> (string)
                 An identifier for a message in this batch used to communicate
                 the result.

                 NOTE:
                     The  Id  s  of a batch request need to be unique within a
                     request.

                     This identifier can have up to 80 characters. The follow-
                     ing  characters  are  accepted:  alphanumeric characters,
                     hyphens(-), and underscores (_).

              MessageBody -> (string)
                 The body of the message.

              DelaySeconds -> (integer)
                 The length of time, in seconds, for which a specific  message
                 is delayed. Valid values: 0 to 900. Maximum: 15 minutes. Mes-
                 sages with a positive DelaySeconds value become available for
                 processing  after  the delay period is finished. If you don't
                 specify a value, the default value for the queue is  applied.

                 NOTE:
                     When  you  set FifoQueue , you can't set DelaySeconds per
                     message. You can set  this  parameter  only  on  a  queue
                     level.

              MessageAttributes -> (map)
                 Each  message attribute consists of a Name , Type , and Value
                 . For more information, see Amazon SQS message attributes  in
                 the Amazon SQS Developer Guide .

                 Name -> (string)

                 Value -> (structure)
                     The  user-specified  message  attribute value. For string
                     data types, the Value attribute has the same restrictions
                     on the content as the message body. For more information,
                     see ``  SendMessage .``
                        Name , type , value and the message body must  not  be
                        empty  or  null.  All  parts of the message attribute,
                        including Name , Type , and Value , are  part  of  the
                        message size restriction (256 KB or 262,144 bytes).

                     StringValue -> (string)
                        Strings  are Unicode with UTF-8 binary encoding. For a
                        list of code values, see ASCII Printable Characters  .

                     BinaryValue -> (blob)
                        Binary type attributes can store any binary data, such
                        as compressed data, encrypted data, or images.

                     StringListValues -> (list)
                        Not implemented. Reserved for future use.

                        (string)

                     BinaryListValues -> (list)
                        Not implemented. Reserved for future use.

                        (blob)

                     DataType -> (string)
                        Amazon SQS supports the following logical data  types:
                        String  ,  Number  ,  and Binary . For the Number data
                        type, you must use StringValue .

                        You can also append custom labels. For  more  informa-
                        tion,  see Amazon SQS Message Attributes in the Amazon
                        SQS Developer Guide .

              MessageSystemAttributes -> (map)
                 The message system attribute  to  send  Each  message  system
                 attribute consists of a Name , Type , and Value .

                 WARNING:

                     o Currently,  the only supported message system attribute
                       is AWSTraceHeader . Its type must  be  String  and  its
                       value  must be a correctly formatted X-Ray trace header
                       string.

                     o The size of a message system  attribute  doesn't  count
                       towards the total size of a message.

                 Name -> (string)

                 Value -> (structure)
                     The  user-specified  message  system attribute value. For
                     string data types,  the  Value  attribute  has  the  same
                     restrictions on the content as the message body. For more
                     information, see ``  SendMessage .``
                        Name , type , value and the message body must  not  be
                        empty or null.

                     StringValue -> (string)
                        Strings  are Unicode with UTF-8 binary encoding. For a
                        list of code values, see ASCII Printable Characters  .

                     BinaryValue -> (blob)
                        Binary type attributes can store any binary data, such
                        as compressed data, encrypted data, or images.

                     StringListValues -> (list)
                        Not implemented. Reserved for future use.

                        (string)

                     BinaryListValues -> (list)
                        Not implemented. Reserved for future use.

                        (blob)

                     DataType -> (string)
                        Amazon SQS supports the following logical data  types:
                        String  ,  Number  ,  and Binary . For the Number data
                        type, you must use StringValue .

                        You can also append custom labels. For  more  informa-
                        tion,  see Amazon SQS Message Attributes in the Amazon
                        SQS Developer Guide .

              MessageDeduplicationId -> (string)
                 This parameter  applies  only  to  FIFO  (first-in-first-out)
                 queues.

                 The  token  used  for  deduplication  of  messages  within  a
                 5-minute minimum deduplication interval. If a message with  a
                 particular  MessageDeduplicationId is sent successfully, sub-
                 sequent messages with  the  same  MessageDeduplicationId  are
                 accepted successfully but aren't delivered. For more informa-
                 tion, see Exactly-once processing in the Amazon SQS Developer
                 Guide .

                 o Every message must have a unique MessageDeduplicationId ,

                   o You may provide a MessageDeduplicationId explicitly.

                   o If  you  aren't  able to provide a MessageDeduplicationId
                     and you enable ContentBasedDeduplication for your  queue,
                     Amazon  SQS uses a SHA-256 hash to generate the MessageD-
                     eduplicationId using the body of the message (but not the
                     attributes of the message).

                   o If  you  don't  provide  a MessageDeduplicationId and the
                     queue doesn't  have  ContentBasedDeduplication  set,  the
                     action fails with an error.

                   o If the queue has ContentBasedDeduplication set, your Mes-
                     sageDeduplicationId overrides the generated one.

                 o When ContentBasedDeduplication is in effect, messages  with
                   identical  content  sent  within the deduplication interval
                   are treated as duplicates and only one copy of the  message
                   is delivered.

                 o If  you  send  one  message  with ContentBasedDeduplication
                   enabled and then another message with  a  MessageDeduplica-
                   tionId  that is the same as the one generated for the first
                   MessageDeduplicationId , the two messages  are  treated  as
                   duplicates and only one copy of the message is delivered.

                 NOTE:
                     The  MessageDeduplicationId  is available to the consumer
                     of the message (this can be  useful  for  troubleshooting
                     delivery issues).

                     If a message is sent successfully but the acknowledgement
                     is lost and the message is resent with the same MessageD-
                     eduplicationId  after  the deduplication interval, Amazon
                     SQS can't detect duplicate messages.

                     Amazon SQS continues to keep track of the  message  dedu-
                     plication  ID  even  after  the  message  is received and
                     deleted.

                 The length of MessageDeduplicationId is 128 characters.  Mes-
                 sageDeduplicationId  can contain alphanumeric characters (a-z
                 ,      A-Z      ,      0-9      )       and       punctuation
                 (!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ ).

                 For  best  practices  of  using  MessageDeduplicationId , see
                 Using the MessageDeduplicationId Property in the  Amazon  SQS
                 Developer Guide .

              MessageGroupId -> (string)
                 This  parameter  applies  only  to  FIFO (first-in-first-out)
                 queues.

                 The tag that specifies that a message belongs to  a  specific
                 message group. Messages that belong to the same message group
                 are processed in a FIFO manner (however, messages in  differ-
                 ent  message  groups  might  be  processed  out of order). To
                 interleave multiple ordered streams within  a  single  queue,
                 use MessageGroupId values (for example, session data for mul-
                 tiple  users).  In  this  scenario,  multiple  consumers  can
                 process  the queue, but the session data of each user is pro-
                 cessed in a FIFO fashion.

                 o You must associate a non-empty MessageGroupId with  a  mes-
                   sage.  If  you  don't provide a MessageGroupId , the action
                   fails.

                 o ReceiveMessage might return messages with multiple Message-
                   GroupId  values. For each MessageGroupId , the messages are
                   sorted by time sent. The caller can't  specify  a  Message-
                   GroupId .

                 The length of MessageGroupId is 128 characters. Valid values:
                 alphanumeric        characters        and         punctuation
                 (!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~) .

                 For  best  practices  of using MessageGroupId , see Using the
                 MessageGroupId Property in the Amazon SQS Developer Guide .

                 WARNING:
                     MessageGroupId is required for FIFO queues. You can't use
                     it for Standard queues.

       Shorthand Syntax:

          Id=string,MessageBody=string,DelaySeconds=integer,MessageAttributes={KeyName1={StringValue=string,BinaryValue=blob,StringListValues=[string,string],BinaryListValues=[blob,blob],DataType=string},KeyName2={StringValue=string,BinaryValue=blob,StringListValues=[string,string],BinaryListValues=[blob,blob],DataType=string}},MessageSystemAttributes={KeyName1={StringValue=string,BinaryValue=blob,StringListValues=[string,string],BinaryListValues=[blob,blob],DataType=string},KeyName2={StringValue=string,BinaryValue=blob,StringListValues=[string,string],BinaryListValues=[blob,blob],DataType=string}},MessageDeduplicationId=string,MessageGroupId=string ...

       JSON Syntax:

          [
            {
              "Id": "string",
              "MessageBody": "string",
              "DelaySeconds": integer,
              "MessageAttributes": {"string": {
                    "StringValue": "string",
                    "BinaryValue": blob,
                    "StringListValues": ["string", ...],
                    "BinaryListValues": [blob, ...],
                    "DataType": "string"
                  }
                ...},
              "MessageSystemAttributes": {"AWSTraceHeader": {
                    "StringValue": "string",
                    "BinaryValue": blob,
                    "StringListValues": ["string", ...],
                    "BinaryListValues": [blob, ...],
                    "DataType": "string"
                  }
                ...},
              "MessageDeduplicationId": "string",
              "MessageGroupId": "string"
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To send multiple messages as a batch

       This  example sends 2 messages with the specified message bodies, delay
       periods, and message attributes, to the specified queue.

       Command:

          aws sqs send-message-batch --queue-url https://sqs.us-east-1.amazonaws.com/80398EXAMPLE/MyQueue --entries file://send-message-batch.json

       Input file (send-message-batch.json):

          [
            {
              "Id": "FuelReport-0001-2015-09-16T140731Z",
                  "MessageBody": "Fuel report for account 0001 on 2015-09-16 at 02:07:31 PM.",
                  "DelaySeconds": 10,
                  "MessageAttributes": {
                    "SellerName": {
                      "DataType": "String",
                          "StringValue": "Example Store"
                },
                    "City": {
                  "DataType": "String",
                  "StringValue": "Any City"
                },
                    "Region": {
                      "DataType": "String",
                          "StringValue": "WA"
                },
                    "PostalCode": {
                      "DataType": "String",
                          "StringValue": "99065"
                    },
                    "PricePerGallon": {
                      "DataType": "Number",
                          "StringValue": "1.99"
                }
                  }
            },
            {
              "Id": "FuelReport-0002-2015-09-16T140930Z",
                  "MessageBody": "Fuel report for account 0002 on 2015-09-16 at 02:09:30 PM.",
                  "DelaySeconds": 10,
                  "MessageAttributes": {
                    "SellerName": {
                      "DataType": "String",
                          "StringValue": "Example Fuels"
                },
                    "City": {
                  "DataType": "String",
                  "StringValue": "North Town"
                },
                    "Region": {
                      "DataType": "String",
                          "StringValue": "WA"
                },
                    "PostalCode": {
                      "DataType": "String",
                          "StringValue": "99123"
                    },
                    "PricePerGallon": {
                      "DataType": "Number",
                          "StringValue": "1.87"
                }
                  }
            }
          ]

       Output:

          {
            "Successful": [
              {
                "MD5OfMessageBody": "203c4a38...7943237e",
                "MD5OfMessageAttributes": "10809b55...baf283ef",
                "Id": "FuelReport-0001-2015-09-16T140731Z",
                "MessageId": "d175070c-d6b8-4101-861d-adeb3EXAMPLE"
              },
              {
                "MD5OfMessageBody": "2cf0159a...c1980595",
                "MD5OfMessageAttributes": "55623928...ae354a25",
                "Id": "FuelReport-0002-2015-09-16T140930Z",
                "MessageId": "f9b7d55d-0570-413e-b9c5-a9264EXAMPLE"
              }
            ]
          }

OUTPUT
       Successful -> (list)
          A list of ``  SendMessageBatchResultEntry `` items.

          (structure)
              Encloses a MessageId for a successfully-enqueued message in a ``
              SendMessageBatch .``

              Id -> (string)
                 An identifier for the message in this batch.

              MessageId -> (string)
                 An identifier for the message.

              MD5OfMessageBody -> (string)
                 An MD5 digest of the non-URL-encoded message body string. You
                 can use this attribute to verify that Amazon SQS received the
                 message  correctly. Amazon SQS URL-decodes the message before
                 creating the MD5  digest.  For  information  about  MD5,  see
                 RFC1321 .

              MD5OfMessageAttributes -> (string)
                 An  MD5  digest  of  the  non-URL-encoded  message  attribute
                 string. You can use this attribute to verify that Amazon  SQS
                 received  the  message  correctly. Amazon SQS URL-decodes the
                 message before creating the MD5 digest. For information about
                 MD5, see RFC1321 .

              MD5OfMessageSystemAttributes -> (string)
                 An MD5 digest of the non-URL-encoded message system attribute
                 string. You can use this attribute to verify that Amazon  SQS
                 received  the  message  correctly. Amazon SQS URL-decodes the
                 message before creating the MD5 digest. For information about
                 MD5, see RFC1321 .

              SequenceNumber -> (string)
                 This  parameter  applies  only  to  FIFO (first-in-first-out)
                 queues.

                 The large, non-consecutive number that Amazon SQS assigns  to
                 each message.

                 The  length  of SequenceNumber is 128 bits. As SequenceNumber
                 continues to increase for a particular MessageGroupId .

       Failed -> (list)
          A list of ``  BatchResultErrorEntry  ``  items  with  error  details
          about each message that can't be enqueued.

          (structure)
              Gives  a detailed description of the result of an action on each
              entry in the request.

              Id -> (string)
                 The Id of an entry in a batch request.

              SenderFault -> (boolean)
                 Specifies whether the error happened due to the caller of the
                 batch API action.

              Code -> (string)
                 An  error  code  representing  why  the action failed on this
                 entry.

              Message -> (string)
                 A message explaining why the action failed on this entry.



                                                          SEND-MESSAGE-BATCH()
