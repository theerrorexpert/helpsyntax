CREATE-VIRTUAL-NODE()                                    CREATE-VIRTUAL-NODE()



NAME
       create-virtual-node -

DESCRIPTION
       Creates a virtual node within a service mesh.

       A  virtual  node  acts as a logical pointer to a particular task group,
       such as an Amazon ECS service or a Kubernetes deployment. When you cre-
       ate  a  virtual node, you can specify the service discovery information
       for your task group, and whether the proxy running in a task group will
       communicate with other proxies using Transport Layer Security (TLS).

       You  define  a  listener for any inbound traffic that your virtual node
       expects. Any virtual service that your virtual node expects to communi-
       cate to is specified as a backend .

       The  response  metadata for your new virtual node contains the arn that
       is associated with the virtual node. Set this value to  the  full  ARN;
       for example, arn:aws:appmesh:us-west-2:123456789012:myMesh/default/vir-
       tualNode/myApp ) as the APPMESH_RESOURCE_ARN environment  variable  for
       your  task group's Envoy proxy container in your task definition or pod
       spec. This is then mapped to the node.id and node.cluster Envoy parame-
       ters.

       NOTE:
          By  default, App Mesh uses the name of the resource you specified in
          APPMESH_RESOURCE_ARN when Envoy is referring to  itself  in  metrics
          and   traces.   You  can  override  this  behavior  by  setting  the
          APPMESH_RESOURCE_CLUSTER environment variable with your own name.

       For more information about virtual nodes, see Virtual nodes . You  must
       be  using  1.15.0  or later of the Envoy image when setting these vari-
       ables. For more information aboutApp Mesh Envoy  variables,  see  Envoy
       image in the AWS App Mesh User Guide.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-virtual-node
          [--client-token <value>]
          --mesh-name <value>
          [--mesh-owner <value>]
          --spec <value>
          [--tags <value>]
          --virtual-node-name <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --client-token (string)
          Unique,  case-sensitive  identifier  that  you provide to ensure the
          idempotency of the request. Up to 36 letters, numbers, hyphens,  and
          underscores are allowed.

       --mesh-name (string)
          The name of the service mesh to create the virtual node in.

       --mesh-owner (string)
          The  AWS IAM account ID of the service mesh owner. If the account ID
          is not your own, then the account that you specify  must  share  the
          mesh  with  your  account  before you can create the resource in the
          service mesh. For more information about mesh sharing,  see  Working
          with shared meshes .

       --spec (structure)
          The virtual node specification to apply.

          backendDefaults -> (structure)
              A  reference to an object that represents the defaults for back-
              ends.

              clientPolicy -> (structure)
                 A reference to an object that represents a client policy.

                 tls -> (structure)
                     A reference to an  object  that  represents  a  Transport
                     Layer Security (TLS) client policy.

                     certificate -> (structure)
                        A  reference  to  an object that represents a client's
                        TLS certificate.

                        file -> (structure)
                            An object that represents a  local  file  certifi-
                            cate.  The certificate must meet specific require-
                            ments  and  you  must  have  proxy   authorization
                            enabled. For more information, see Transport Layer
                            Security (TLS) .

                            certificateChain -> (string)
                               The certificate chain for the certificate.

                            privateKey -> (string)
                               The private key for a certificate stored on the
                               file  system of the virtual node that the proxy
                               is running on.

                        sds -> (structure)
                            A  reference  to  an  object  that  represents   a
                            client's TLS Secret Discovery Service certificate.

                            secretName -> (string)
                               A reference to an object  that  represents  the
                               name  of  the  secret requested from the Secret
                               Discovery Service provider representing  Trans-
                               port Layer Security (TLS) materials like a cer-
                               tificate or certificate chain.

                     enforce -> (boolean)
                        Whether the policy is enforced. The default is True  ,
                        if a value isn't specified.

                     ports -> (list)
                        One or more ports that the policy is enforced for.

                        (integer)

                     validation -> (structure)
                        A reference to an object that represents a TLS valida-
                        tion context.

                        subjectAlternativeNames -> (structure)
                            A reference to an object that represents the  SANs
                            for  a  Transport  Layer Security (TLS) validation
                            context.

                            match -> (structure)
                               An object  that  represents  the  criteria  for
                               determining a SANs match.

                               exact -> (list)
                                   The  values  sent  must match the specified
                                   values exactly.

                                   (string)

                        trust -> (structure)
                            A reference to where to retrieve the  trust  chain
                            when  validating  a peers Transport Layer Security
                            (TLS) certificate.

                            acm -> (structure)
                               A reference to  an  object  that  represents  a
                               Transport  Layer Security (TLS) validation con-
                               text trust for an Certificate Manager  certifi-
                               cate.

                               certificateAuthorityArns -> (list)
                                   One   or  more  ACM  Amazon  Resource  Name
                                   (ARN)s.

                                   (string)

                            file -> (structure)
                               An object that  represents  a  Transport  Layer
                               Security  (TLS)  validation context trust for a
                               local file.

                               certificateChain -> (string)
                                   The certificate trust chain for a  certifi-
                                   cate  stored on the file system of the vir-
                                   tual node that the proxy is running on.

                            sds -> (structure)
                               A reference to  an  object  that  represents  a
                               Transport Layer Security (TLS) Secret Discovery
                               Service validation context trust.

                               secretName -> (string)
                                   A reference to an  object  that  represents
                                   the  name  of  the  secret  for a Transport
                                   Layer Security (TLS) Secret Discovery  Ser-
                                   vice validation context trust.

          backends -> (list)
              The  backends that the virtual node is expected to send outbound
              traffic to.

              (structure)
                 An object that represents the backends that a virtual node is
                 expected to send outbound traffic to.

                 virtualService -> (structure)
                     Specifies a virtual service to use as a backend.

                     clientPolicy -> (structure)
                        A  reference  to  an object that represents the client
                        policy for a backend.

                        tls -> (structure)
                            A reference to an object that represents a  Trans-
                            port Layer Security (TLS) client policy.

                            certificate -> (structure)
                               A  reference  to  an  object  that represents a
                               client's TLS certificate.

                               file -> (structure)
                                   An object that represents a local file cer-
                                   tificate.  The  certificate  must meet spe-
                                   cific requirements and you must have  proxy
                                   authorization  enabled.  For  more informa-
                                   tion, see Transport Layer Security (TLS)  .

                                   certificateChain -> (string)
                                      The  certificate  chain for the certifi-
                                      cate.

                                   privateKey -> (string)
                                      The private key for a certificate stored
                                      on  the  file system of the virtual node
                                      that the proxy is running on.

                               sds -> (structure)
                                   A reference to an object that represents  a
                                   client's  TLS Secret Discovery Service cer-
                                   tificate.

                                   secretName -> (string)
                                      A reference to an object that represents
                                      the  name  of  the secret requested from
                                      the Secret  Discovery  Service  provider
                                      representing  Transport  Layer  Security
                                      (TLS) materials like  a  certificate  or
                                      certificate chain.

                            enforce -> (boolean)
                               Whether  the policy is enforced. The default is
                               True , if a value isn't specified.

                            ports -> (list)
                               One or more ports that the policy  is  enforced
                               for.

                               (integer)

                            validation -> (structure)
                               A  reference to an object that represents a TLS
                               validation context.

                               subjectAlternativeNames -> (structure)
                                   A reference to an  object  that  represents
                                   the  SANs  for  a  Transport Layer Security
                                   (TLS) validation context.

                                   match -> (structure)
                                      An object that represents  the  criteria
                                      for determining a SANs match.

                                      exact -> (list)
                                          The values sent must match the spec-
                                          ified values exactly.

                                          (string)

                               trust -> (structure)
                                   A reference to where to retrieve the  trust
                                   chain  when  validating  a  peers Transport
                                   Layer Security (TLS) certificate.

                                   acm -> (structure)
                                      A reference to an object that represents
                                      a Transport Layer Security (TLS) valida-
                                      tion context trust  for  an  Certificate
                                      Manager certificate.

                                      certificateAuthorityArns -> (list)
                                          One or more ACM Amazon Resource Name
                                          (ARN)s.

                                          (string)

                                   file -> (structure)
                                      An object that  represents  a  Transport
                                      Layer  Security (TLS) validation context
                                      trust for a local file.

                                      certificateChain -> (string)
                                          The certificate trust  chain  for  a
                                          certificate  stored on the file sys-
                                          tem of the  virtual  node  that  the
                                          proxy is running on.

                                   sds -> (structure)
                                      A reference to an object that represents
                                      a Transport Layer Security (TLS)  Secret
                                      Discovery   Service  validation  context
                                      trust.

                                      secretName -> (string)
                                          A reference to an object that repre-
                                          sents  the  name of the secret for a
                                          Transport   Layer   Security   (TLS)
                                          Secret  Discovery Service validation
                                          context trust.

                     virtualServiceName -> (string)
                        The name of the virtual service that is  acting  as  a
                        virtual node backend.

          listeners -> (list)
              The  listener  that  the  virtual  node  is  expected to receive
              inbound traffic from. You can specify one listener.

              (structure)
                 An object that represents a listener for a virtual node.

                 connectionPool -> (structure)
                     The connection pool information for the listener.

                     grpc -> (structure)
                        An object that represents a type of connection pool.

                        maxRequests -> (integer)
                            Maximum number of inflight requests Envoy can con-
                            currently  support  across hosts in upstream clus-
                            ter.

                     http -> (structure)
                        An object that represents a type of connection pool.

                        maxConnections -> (integer)
                            Maximum number of outbound TCP  connections  Envoy
                            can  establish  concurrently  with  all  hosts  in
                            upstream cluster.

                        maxPendingRequests -> (integer)
                            Number of overflowing requests  after  max_connec-
                            tions Envoy will queue to upstream cluster.

                     http2 -> (structure)
                        An object that represents a type of connection pool.

                        maxRequests -> (integer)
                            Maximum number of inflight requests Envoy can con-
                            currently support across hosts in  upstream  clus-
                            ter.

                     tcp -> (structure)
                        An object that represents a type of connection pool.

                        maxConnections -> (integer)
                            Maximum  number  of outbound TCP connections Envoy
                            can  establish  concurrently  with  all  hosts  in
                            upstream cluster.

                 healthCheck -> (structure)
                     The health check information for the listener.

                     healthyThreshold -> (integer)
                        The  number  of  consecutive  successful health checks
                        that must occur before declaring listener healthy.

                     intervalMillis -> (long)
                        The time period in milliseconds  between  each  health
                        check execution.

                     path -> (string)
                        The  destination  path  for  the health check request.
                        This value is only used if the specified  protocol  is
                        HTTP  or HTTP/2. For any other protocol, this value is
                        ignored.

                     port -> (integer)
                        The destination port for  the  health  check  request.
                        This port must match the port defined in the  PortMap-
                        ping for the listener.

                     protocol -> (string)
                        The protocol for the  health  check  request.  If  you
                        specify  grpc  , then your service must conform to the
                        GRPC Health Checking Protocol .

                     timeoutMillis -> (long)
                        The amount of time to wait when receiving  a  response
                        from the health check, in milliseconds.

                     unhealthyThreshold -> (integer)
                        The  number  of  consecutive failed health checks that
                        must occur before declaring a virtual node  unhealthy.

                 outlierDetection -> (structure)
                     The outlier detection information for the listener.

                     baseEjectionDuration -> (structure)
                        The base amount of time for which a host is ejected.

                        unit -> (string)
                            A unit of time.

                        value -> (long)
                            A number of time units.

                     interval -> (structure)
                        The time interval between ejection sweep analysis.

                        unit -> (string)
                            A unit of time.

                        value -> (long)
                            A number of time units.

                     maxEjectionPercent -> (integer)
                        Maximum percentage of hosts in load balancing pool for
                        upstream service that can be ejected.  Will  eject  at
                        least one host regardless of the value.

                     maxServerErrors -> (long)
                        Number  of  consecutive  5xx errors required for ejec-
                        tion.

                 portMapping -> (structure)
                     The port mapping information for the listener.

                     port -> (integer)
                        The port used for the port mapping.

                     protocol -> (string)
                        The protocol used for the port  mapping.  Specify  one
                        protocol.

                 timeout -> (structure)
                     An  object  that represents timeouts for different proto-
                     cols.

                     grpc -> (structure)
                        An object that represents types of timeouts.

                        idle -> (structure)
                            An object that represents an idle timeout. An idle
                            timeout  bounds  the amount of time that a connec-
                            tion may be idle. The default value is none.

                            unit -> (string)
                               A unit of time.

                            value -> (long)
                               A number of time units.

                        perRequest -> (structure)
                            An object that represents a per  request  timeout.
                            The  default  value  is  15  seconds. If you set a
                            higher timeout, then make  sure  that  the  higher
                            value  is set for each App Mesh resource in a con-
                            versation. For example, if a virtual node  backend
                            uses a virtual router provider to route to another
                            virtual node, then the timeout should  be  greater
                            than  15  seconds  for  the source and destination
                            virtual node and the route.

                            unit -> (string)
                               A unit of time.

                            value -> (long)
                               A number of time units.

                     http -> (structure)
                        An object that represents types of timeouts.

                        idle -> (structure)
                            An object that represents an idle timeout. An idle
                            timeout  bounds  the amount of time that a connec-
                            tion may be idle. The default value is none.

                            unit -> (string)
                               A unit of time.

                            value -> (long)
                               A number of time units.

                        perRequest -> (structure)
                            An object that represents a per  request  timeout.
                            The  default  value  is  15  seconds. If you set a
                            higher timeout, then make  sure  that  the  higher
                            value  is set for each App Mesh resource in a con-
                            versation. For example, if a virtual node  backend
                            uses a virtual router provider to route to another
                            virtual node, then the timeout should  be  greater
                            than  15  seconds  for  the source and destination
                            virtual node and the route.

                            unit -> (string)
                               A unit of time.

                            value -> (long)
                               A number of time units.

                     http2 -> (structure)
                        An object that represents types of timeouts.

                        idle -> (structure)
                            An object that represents an idle timeout. An idle
                            timeout  bounds  the amount of time that a connec-
                            tion may be idle. The default value is none.

                            unit -> (string)
                               A unit of time.

                            value -> (long)
                               A number of time units.

                        perRequest -> (structure)
                            An object that represents a per  request  timeout.
                            The  default  value  is  15  seconds. If you set a
                            higher timeout, then make  sure  that  the  higher
                            value  is set for each App Mesh resource in a con-
                            versation. For example, if a virtual node  backend
                            uses a virtual router provider to route to another
                            virtual node, then the timeout should  be  greater
                            than  15  seconds  for  the source and destination
                            virtual node and the route.

                            unit -> (string)
                               A unit of time.

                            value -> (long)
                               A number of time units.

                     tcp -> (structure)
                        An object that represents types of timeouts.

                        idle -> (structure)
                            An object that represents an idle timeout. An idle
                            timeout  bounds  the amount of time that a connec-
                            tion may be idle. The default value is none.

                            unit -> (string)
                               A unit of time.

                            value -> (long)
                               A number of time units.

                 tls -> (structure)
                     A reference to an object that  represents  the  Transport
                     Layer Security (TLS) properties for a listener.

                     certificate -> (structure)
                        A  reference to an object that represents a listener's
                        Transport Layer Security (TLS) certificate.

                        acm -> (structure)
                            A reference to an object that  represents  an  AWS
                            Certicate Manager (ACM) certificate.

                            certificateArn -> (string)
                               The Amazon Resource Name (ARN) for the certifi-
                               cate.  The  certificate  must   meet   specific
                               requirements and you must have proxy authoriza-
                               tion  enabled.  For   more   information,   see
                               Transport Layer Security (TLS) .

                        file -> (structure)
                            A  reference  to an object that represents a local
                            file certificate.

                            certificateChain -> (string)
                               The certificate chain for the certificate.

                            privateKey -> (string)
                               The private key for a certificate stored on the
                               file  system of the virtual node that the proxy
                               is running on.

                        sds -> (structure)
                            A reference to an object that  represents  a  lis-
                            tener's Secret Discovery Service certificate.

                            secretName -> (string)
                               A  reference  to  an object that represents the
                               name of the secret requested  from  the  Secret
                               Discovery  Service provider representing Trans-
                               port Layer Security (TLS) materials like a cer-
                               tificate or certificate chain.

                     mode -> (string)
                        Specify one of the following modes.

                        o STRICT   Listener  only accepts connections with TLS
                          enabled.

                        o PERMISSIVE  Listener  accepts  connections  with  or
                          without TLS enabled.

                        o DISABLED   Listener only accepts connections without
                          TLS.

                     validation -> (structure)
                        A reference to an object that represents a  listener's
                        Transport Layer Security (TLS) validation context.

                        subjectAlternativeNames -> (structure)
                            A  reference to an object that represents the SANs
                            for a listener's Transport  Layer  Security  (TLS)
                            validation context.

                            match -> (structure)
                               An  object  that  represents  the  criteria for
                               determining a SANs match.

                               exact -> (list)
                                   The values sent must  match  the  specified
                                   values exactly.

                                   (string)

                        trust -> (structure)
                            A  reference  to where to retrieve the trust chain
                            when validating a peers Transport  Layer  Security
                            (TLS) certificate.

                            file -> (structure)
                               An  object  that  represents  a Transport Layer
                               Security (TLS) validation context trust  for  a
                               local file.

                               certificateChain -> (string)
                                   The  certificate trust chain for a certifi-
                                   cate stored on the file system of the  vir-
                                   tual node that the proxy is running on.

                            sds -> (structure)
                               A reference to an object that represents a lis-
                               tener's Transport Layer Security  (TLS)  Secret
                               Discovery Service validation context trust.

                               secretName -> (string)
                                   A  reference  to  an object that represents
                                   the name of  the  secret  for  a  Transport
                                   Layer  Security (TLS) Secret Discovery Ser-
                                   vice validation context trust.

          logging -> (structure)
              The inbound and outbound access logging information for the vir-
              tual node.

              accessLog -> (structure)
                 The access log configuration for a virtual node.

                 file -> (structure)
                     The file object to send virtual node access logs to.

                     path -> (string)
                        The  file  path  to  write access logs to. You can use
                        /dev/stdout to send access logs to  standard  out  and
                        configure  your  Envoy  container to use a log driver,
                        such as awslogs , to export the access logs to  a  log
                        storage  service  such  as Amazon CloudWatch Logs. You
                        can also specify a path in the Envoy container's  file
                        system to write the files to disk.

                        NOTE:
                            The  Envoy  process must have write permissions to
                            the path that you specify here.  Otherwise,  Envoy
                            fails to bootstrap properly.

          serviceDiscovery -> (structure)
              The  service discovery information for the virtual node. If your
              virtual node does not expect ingress traffic, you can omit  this
              parameter.  If  you  specify  a listener , then you must specify
              service discovery information.

              awsCloudMap -> (structure)
                 Specifies any Cloud Map information for the virtual node.

                 attributes -> (list)
                     A string map that contains attributes  with  values  that
                     you  can  use to filter instances by any custom attribute
                     that you specified when you registered the instance. Only
                     instances that match all of the specified key/value pairs
                     will be returned.

                     (structure)
                        An object that  represents  the  Cloud  Map  attribute
                        information for your virtual node.

                        NOTE:
                            AWS  Cloud  Map is not available in the eu-south-1
                            Region.

                        key -> (string)
                            The  name  of  an  Cloud  Map   service   instance
                            attribute key. Any Cloud Map service instance that
                            contains the specified key and value is  returned.

                        value -> (string)
                            The   value  of  an  Cloud  Map  service  instance
                            attribute key. Any Cloud Map service instance that
                            contains  the specified key and value is returned.

                 namespaceName -> (string)
                     The name of the Cloud Map namespace to use.

                 serviceName -> (string)
                     The name of the Cloud Map service to use.

              dns -> (structure)
                 Specifies the DNS information for the virtual node.

                 hostname -> (string)
                     Specifies the DNS service discovery hostname for the vir-
                     tual node.

                 responseType -> (string)
                     Specifies the DNS response type for the virtual node.

       JSON Syntax:

          {
            "backendDefaults": {
              "clientPolicy": {
                "tls": {
                  "certificate": {
                    "file": {
                      "certificateChain": "string",
                      "privateKey": "string"
                    },
                    "sds": {
                      "secretName": "string"
                    }
                  },
                  "enforce": true|false,
                  "ports": [integer, ...],
                  "validation": {
                    "subjectAlternativeNames": {
                      "match": {
                        "exact": ["string", ...]
                      }
                    },
                    "trust": {
                      "acm": {
                        "certificateAuthorityArns": ["string", ...]
                      },
                      "file": {
                        "certificateChain": "string"
                      },
                      "sds": {
                        "secretName": "string"
                      }
                    }
                  }
                }
              }
            },
            "backends": [
              {
                "virtualService": {
                  "clientPolicy": {
                    "tls": {
                      "certificate": {
                        "file": {
                          "certificateChain": "string",
                          "privateKey": "string"
                        },
                        "sds": {
                          "secretName": "string"
                        }
                      },
                      "enforce": true|false,
                      "ports": [integer, ...],
                      "validation": {
                        "subjectAlternativeNames": {
                          "match": {
                            "exact": ["string", ...]
                          }
                        },
                        "trust": {
                          "acm": {
                            "certificateAuthorityArns": ["string", ...]
                          },
                          "file": {
                            "certificateChain": "string"
                          },
                          "sds": {
                            "secretName": "string"
                          }
                        }
                      }
                    }
                  },
                  "virtualServiceName": "string"
                }
              }
              ...
            ],
            "listeners": [
              {
                "connectionPool": {
                  "grpc": {
                    "maxRequests": integer
                  },
                  "http": {
                    "maxConnections": integer,
                    "maxPendingRequests": integer
                  },
                  "http2": {
                    "maxRequests": integer
                  },
                  "tcp": {
                    "maxConnections": integer
                  }
                },
                "healthCheck": {
                  "healthyThreshold": integer,
                  "intervalMillis": long,
                  "path": "string",
                  "port": integer,
                  "protocol": "http"|"tcp"|"http2"|"grpc",
                  "timeoutMillis": long,
                  "unhealthyThreshold": integer
                },
                "outlierDetection": {
                  "baseEjectionDuration": {
                    "unit": "s"|"ms",
                    "value": long
                  },
                  "interval": {
                    "unit": "s"|"ms",
                    "value": long
                  },
                  "maxEjectionPercent": integer,
                  "maxServerErrors": long
                },
                "portMapping": {
                  "port": integer,
                  "protocol": "http"|"tcp"|"http2"|"grpc"
                },
                "timeout": {
                  "grpc": {
                    "idle": {
                      "unit": "s"|"ms",
                      "value": long
                    },
                    "perRequest": {
                      "unit": "s"|"ms",
                      "value": long
                    }
                  },
                  "http": {
                    "idle": {
                      "unit": "s"|"ms",
                      "value": long
                    },
                    "perRequest": {
                      "unit": "s"|"ms",
                      "value": long
                    }
                  },
                  "http2": {
                    "idle": {
                      "unit": "s"|"ms",
                      "value": long
                    },
                    "perRequest": {
                      "unit": "s"|"ms",
                      "value": long
                    }
                  },
                  "tcp": {
                    "idle": {
                      "unit": "s"|"ms",
                      "value": long
                    }
                  }
                },
                "tls": {
                  "certificate": {
                    "acm": {
                      "certificateArn": "string"
                    },
                    "file": {
                      "certificateChain": "string",
                      "privateKey": "string"
                    },
                    "sds": {
                      "secretName": "string"
                    }
                  },
                  "mode": "STRICT"|"PERMISSIVE"|"DISABLED",
                  "validation": {
                    "subjectAlternativeNames": {
                      "match": {
                        "exact": ["string", ...]
                      }
                    },
                    "trust": {
                      "file": {
                        "certificateChain": "string"
                      },
                      "sds": {
                        "secretName": "string"
                      }
                    }
                  }
                }
              }
              ...
            ],
            "logging": {
              "accessLog": {
                "file": {
                  "path": "string"
                }
              }
            },
            "serviceDiscovery": {
              "awsCloudMap": {
                "attributes": [
                  {
                    "key": "string",
                    "value": "string"
                  }
                  ...
                ],
                "namespaceName": "string",
                "serviceName": "string"
              },
              "dns": {
                "hostname": "string",
                "responseType": "LOADBALANCER"|"ENDPOINTS"
              }
            }
          }

       --tags (list)
          Optional  metadata  that you can apply to the virtual node to assist
          with categorization and organization. Each tag consists of a key and
          an  optional  value,  both  of which you define. Tag keys can have a
          maximum character length of 128 characters, and tag values can  have
          a maximum length of 256 characters.

          (structure)
              Optional  metadata  that  you apply to a resource to assist with
              categorization and organization. Each tag consists of a key  and
              an optional value, both of which you define. Tag keys can have a
              maximum character length of 128 characters, and tag  values  can
              have a maximum length of 256 characters.

              key -> (string)
                 One  part  of a key-value pair that make up a tag. A key is a
                 general label that acts like a category for more specific tag
                 values.

              value -> (string)
                 The  optional  part of a key-value pair that make up a tag. A
                 value acts as a descriptor within a tag category (key).

       Shorthand Syntax:

          key=string,value=string ...

       JSON Syntax:

          [
            {
              "key": "string",
              "value": "string"
            }
            ...
          ]

       --virtual-node-name (string)
          The name to use for the virtual node.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To create a new virtual node that uses DNS for discovery

       The following create-virtual-node example uses a  JSON  input  file  to
       create a virtual node that uses DNS for service discovery.

          aws appmesh create-virtual-node \
              --cli-input-json file://create-virtual-node-dns.json

       Contents of create-virtual-node-dns.json:

          {
              "meshName": "app1",
              "spec": {
                  "listeners": [
                      {
                          "portMapping": {
                              "port": 80,
                              "protocol": "http"
                          }
                      }
                  ],
                  "serviceDiscovery": {
                      "dns": {
                          "hostname": "serviceBv1.svc.cluster.local"
                      }
                  }
              },
              "virtualNodeName": "vnServiceBv1"
          }

       Output:

          {
              "virtualNode": {
                  "meshName": "app1",
                  "metadata": {
                      "arn": "arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualNode/vnServiceBv1",
                      "createdAt": 1563810019.874,
                      "lastUpdatedAt": 1563810019.874,
                      "uid": "a1b2c3d4-5678-90ab-cdef-11111EXAMPLE",
                      "version": 1
                  },
                  "spec": {
                      "listeners": [
                          {
                              "portMapping": {
                                  "port": 80,
                                  "protocol": "http"
                              }
                          }
                      ],
                      "serviceDiscovery": {
                          "dns": {
                              "hostname": "serviceBv1.svc.cluster.local"
                          }
                      }
                  },
                  "status": {
                      "status": "ACTIVE"
                  },
                  "virtualNodeName": "vnServiceBv1"
              }
          }

       Example  2:  To  create  a new virtual node that uses AWS Cloud Map for
       discovery

       The following create-virtual-node example uses a  JSON  input  file  to
       create a virtual node that uses AWS Cloud Map for service discovery.

          aws appmesh create-virtual-node \
              --cli-input-json file://create-virtual-node-cloud-map.json

       Contents of create-virtual-node-cloud-map.json:

          {
              "meshName": "app1",
              "spec": {
                  "backends": [
                      {
                          "virtualService": {
                              "virtualServiceName": "serviceA.svc.cluster.local"
                          }
                      }
                  ],
                  "listeners": [
                      {
                          "portMapping": {
                              "port": 80,
                              "protocol": "http"
                          }
                      }
                  ],
                  "serviceDiscovery": {
                      "awsCloudMap": {
                          "attributes": [
                              {
                                  "key": "Environment",
                                  "value": "Testing"
                              }
                          ],
                          "namespaceName": "namespace1",
                          "serviceName": "serviceA"
                      }
                  }
              },
              "virtualNodeName": "vnServiceA"
          }

       Output:

          {
              "virtualNode": {
                  "meshName": "app1",
                  "metadata": {
                      "arn": "arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualNode/vnServiceA",
                      "createdAt": 1563810859.465,
                      "lastUpdatedAt": 1563810859.465,
                      "uid": "a1b2c3d4-5678-90ab-cdef-11111EXAMPLE",
                      "version": 1
                  },
                  "spec": {
                      "backends": [
                          {
                              "virtualService": {
                                  "virtualServiceName": "serviceA.svc.cluster.local"
                              }
                          }
                      ],
                      "listeners": [
                          {
                              "portMapping": {
                                  "port": 80,
                                  "protocol": "http"
                              }
                          }
                      ],
                      "serviceDiscovery": {
                          "awsCloudMap": {
                              "attributes": [
                                  {
                                      "key": "Environment",
                                      "value": "Testing"
                                  }
                              ],
                              "namespaceName": "namespace1",
                              "serviceName": "serviceA"
                          }
                      }
                  },
                  "status": {
                      "status": "ACTIVE"
                  },
                  "virtualNodeName": "vnServiceA"
              }
          }

       For more information, see Virtual Nodes in the AWS App Mesh User Guide.

OUTPUT
       virtualNode -> (structure)
          The full description of your virtual node following the create call.

          meshName -> (string)
              The name of the service mesh that the virtual node resides in.

          metadata -> (structure)
              The associated metadata for the virtual node.

              arn -> (string)
                 The full Amazon Resource Name (ARN) for the resource.

              createdAt -> (timestamp)
                 The Unix epoch timestamp in seconds for when the resource was
                 created.

              lastUpdatedAt -> (timestamp)
                 The Unix epoch timestamp in seconds for when the resource was
                 last updated.

              meshOwner -> (string)
                 The  AWS  IAM  account  ID  of the service mesh owner. If the
                 account ID is not your own, then it's the ID of  the  account
                 that  shared the mesh with your account. For more information
                 about mesh sharing, see Working with shared meshes .

              resourceOwner -> (string)
                 The AWS IAM account ID of the resource owner. If the  account
                 ID  is not your own, then it's the ID of the mesh owner or of
                 another account that the mesh is shared with. For more infor-
                 mation about mesh sharing, see Working with shared meshes .

              uid -> (string)
                 The unique identifier for the resource.

              version -> (long)
                 The version of the resource. Resources are created at version
                 1, and this version is incremented  each  time  that  they're
                 updated.

          spec -> (structure)
              The specifications of the virtual node.

              backendDefaults -> (structure)
                 A  reference  to  an  object that represents the defaults for
                 backends.

                 clientPolicy -> (structure)
                     A reference to an object that represents a client policy.

                     tls -> (structure)
                        A  reference  to an object that represents a Transport
                        Layer Security (TLS) client policy.

                        certificate -> (structure)
                            A  reference  to  an  object  that  represents   a
                            client's TLS certificate.

                            file -> (structure)
                               An object that represents a local file certifi-
                               cate.  The  certificate  must   meet   specific
                               requirements and you must have proxy authoriza-
                               tion  enabled.  For   more   information,   see
                               Transport Layer Security (TLS) .

                               certificateChain -> (string)
                                   The  certificate chain for the certificate.

                               privateKey -> (string)
                                   The private key for a certificate stored on
                                   the  file  system  of the virtual node that
                                   the proxy is running on.

                            sds -> (structure)
                               A reference to  an  object  that  represents  a
                               client's  TLS Secret Discovery Service certifi-
                               cate.

                               secretName -> (string)
                                   A reference to an  object  that  represents
                                   the  name  of the secret requested from the
                                   Secret Discovery  Service  provider  repre-
                                   senting   Transport  Layer  Security  (TLS)
                                   materials like a certificate or certificate
                                   chain.

                        enforce -> (boolean)
                            Whether  the  policy  is  enforced. The default is
                            True , if a value isn't specified.

                        ports -> (list)
                            One or more ports that the policy is enforced for.

                            (integer)

                        validation -> (structure)
                            A  reference  to  an  object that represents a TLS
                            validation context.

                            subjectAlternativeNames -> (structure)
                               A reference to an object  that  represents  the
                               SANs for a Transport Layer Security (TLS) vali-
                               dation context.

                               match -> (structure)
                                   An object that represents the criteria  for
                                   determining a SANs match.

                                   exact -> (list)
                                      The values sent must match the specified
                                      values exactly.

                                      (string)

                            trust -> (structure)
                               A reference to  where  to  retrieve  the  trust
                               chain  when  validating a peers Transport Layer
                               Security (TLS) certificate.

                               acm -> (structure)
                                   A reference to an object that represents  a
                                   Transport  Layer  Security (TLS) validation
                                   context trust for  an  Certificate  Manager
                                   certificate.

                                   certificateAuthorityArns -> (list)
                                      One  or  more  ACM  Amazon Resource Name
                                      (ARN)s.

                                      (string)

                               file -> (structure)
                                   An object that represents a Transport Layer
                                   Security (TLS) validation context trust for
                                   a local file.

                                   certificateChain -> (string)
                                      The certificate trust chain for  a  cer-
                                      tificate  stored  on  the file system of
                                      the virtual node that the proxy is  run-
                                      ning on.

                               sds -> (structure)
                                   A  reference to an object that represents a
                                   Transport Layer Security (TLS) Secret  Dis-
                                   covery Service validation context trust.

                                   secretName -> (string)
                                      A reference to an object that represents
                                      the name of the secret for  a  Transport
                                      Layer  Security  (TLS)  Secret Discovery
                                      Service validation context trust.

              backends -> (list)
                 The backends that the virtual node is expected to  send  out-
                 bound traffic to.

                 (structure)
                     An  object  that  represents  the backends that a virtual
                     node is expected to send outbound traffic to.

                     virtualService -> (structure)
                        Specifies a virtual service to use as a backend.

                        clientPolicy -> (structure)
                            A reference  to  an  object  that  represents  the
                            client policy for a backend.

                            tls -> (structure)
                               A  reference  to  an  object  that represents a
                               Transport Layer Security (TLS) client policy.

                               certificate -> (structure)
                                   A reference to an object that represents  a
                                   client's TLS certificate.

                                   file -> (structure)
                                      An  object  that represents a local file
                                      certificate. The certificate  must  meet
                                      specific  requirements and you must have
                                      proxy authorization  enabled.  For  more
                                      information,  see  Transport Layer Secu-
                                      rity (TLS) .

                                      certificateChain -> (string)
                                          The certificate chain for  the  cer-
                                          tificate.

                                      privateKey -> (string)
                                          The  private  key  for a certificate
                                          stored on the  file  system  of  the
                                          virtual  node that the proxy is run-
                                          ning on.

                                   sds -> (structure)
                                      A reference to an object that represents
                                      a  client's TLS Secret Discovery Service
                                      certificate.

                                      secretName -> (string)
                                          A reference to an object that repre-
                                          sents   the   name   of  the  secret
                                          requested from the Secret  Discovery
                                          Service provider representing Trans-
                                          port Layer Security (TLS)  materials
                                          like  a  certificate  or certificate
                                          chain.

                               enforce -> (boolean)
                                   Whether the policy is enforced. The default
                                   is True , if a value isn't specified.

                               ports -> (list)
                                   One  or  more  ports  that  the  policy  is
                                   enforced for.

                                   (integer)

                               validation -> (structure)
                                   A reference to an object that represents  a
                                   TLS validation context.

                                   subjectAlternativeNames -> (structure)
                                      A reference to an object that represents
                                      the SANs for a Transport Layer  Security
                                      (TLS) validation context.

                                      match -> (structure)
                                          An object that represents the crite-
                                          ria for determining a SANs match.

                                          exact -> (list)
                                             The values sent  must  match  the
                                             specified values exactly.

                                             (string)

                                   trust -> (structure)
                                      A  reference  to  where  to retrieve the
                                      trust  chain  when  validating  a  peers
                                      Transport  Layer Security (TLS) certifi-
                                      cate.

                                      acm -> (structure)
                                          A reference to an object that repre-
                                          sents  a  Transport  Layer  Security
                                          (TLS) validation context  trust  for
                                          an  Certificate Manager certificate.

                                          certificateAuthorityArns -> (list)
                                             One or more ACM  Amazon  Resource
                                             Name (ARN)s.

                                             (string)

                                      file -> (structure)
                                          An  object  that represents a Trans-
                                          port Layer Security (TLS) validation
                                          context trust for a local file.

                                          certificateChain -> (string)
                                             The certificate trust chain for a
                                             certificate stored  on  the  file
                                             system  of  the virtual node that
                                             the proxy is running on.

                                      sds -> (structure)
                                          A reference to an object that repre-
                                          sents  a  Transport  Layer  Security
                                          (TLS) Secret Discovery Service vali-
                                          dation context trust.

                                          secretName -> (string)
                                             A  reference  to  an  object that
                                             represents the name of the secret
                                             for  a  Transport  Layer Security
                                             (TLS)  Secret  Discovery  Service
                                             validation context trust.

                        virtualServiceName -> (string)
                            The  name of the virtual service that is acting as
                            a virtual node backend.

              listeners -> (list)
                 The listener that the virtual node  is  expected  to  receive
                 inbound traffic from. You can specify one listener.

                 (structure)
                     An  object that represents a listener for a virtual node.

                     connectionPool -> (structure)
                        The connection pool information for the listener.

                        grpc -> (structure)
                            An object that represents  a  type  of  connection
                            pool.

                            maxRequests -> (integer)
                               Maximum  number  of inflight requests Envoy can
                               concurrently support across hosts  in  upstream
                               cluster.

                        http -> (structure)
                            An  object  that  represents  a type of connection
                            pool.

                            maxConnections -> (integer)
                               Maximum  number  of  outbound  TCP  connections
                               Envoy can establish concurrently with all hosts
                               in upstream cluster.

                            maxPendingRequests -> (integer)
                               Number of overflowing requests  after  max_con-
                               nections  Envoy will queue to upstream cluster.

                        http2 -> (structure)
                            An object that represents  a  type  of  connection
                            pool.

                            maxRequests -> (integer)
                               Maximum  number  of inflight requests Envoy can
                               concurrently support across hosts  in  upstream
                               cluster.

                        tcp -> (structure)
                            An  object  that  represents  a type of connection
                            pool.

                            maxConnections -> (integer)
                               Maximum  number  of  outbound  TCP  connections
                               Envoy can establish concurrently with all hosts
                               in upstream cluster.

                     healthCheck -> (structure)
                        The health check information for the listener.

                        healthyThreshold -> (integer)
                            The number of consecutive successful health checks
                            that must occur before declaring listener healthy.

                        intervalMillis -> (long)
                            The  time  period  in  milliseconds  between  each
                            health check execution.

                        path -> (string)
                            The destination path for the health check request.
                            This value is only used if the specified  protocol
                            is  HTTP  or  HTTP/2. For any other protocol, this
                            value is ignored.

                        port -> (integer)
                            The destination port for the health check request.
                            This  port  must  match  the  port  defined in the
                            PortMapping for the listener.

                        protocol -> (string)
                            The protocol for the health check request. If  you
                            specify  grpc  , then your service must conform to
                            the GRPC Health Checking Protocol .

                        timeoutMillis -> (long)
                            The amount  of  time  to  wait  when  receiving  a
                            response from the health check, in milliseconds.

                        unhealthyThreshold -> (integer)
                            The  number  of  consecutive  failed health checks
                            that must occur before declaring  a  virtual  node
                            unhealthy.

                     outlierDetection -> (structure)
                        The outlier detection information for the listener.

                        baseEjectionDuration -> (structure)
                            The  base  amount  of  time  for  which  a host is
                            ejected.

                            unit -> (string)
                               A unit of time.

                            value -> (long)
                               A number of time units.

                        interval -> (structure)
                            The time interval between ejection sweep analysis.

                            unit -> (string)
                               A unit of time.

                            value -> (long)
                               A number of time units.

                        maxEjectionPercent -> (integer)
                            Maximum percentage of hosts in load balancing pool
                            for upstream service that  can  be  ejected.  Will
                            eject at least one host regardless of the value.

                        maxServerErrors -> (long)
                            Number  of  consecutive  5xx  errors  required for
                            ejection.

                     portMapping -> (structure)
                        The port mapping information for the listener.

                        port -> (integer)
                            The port used for the port mapping.

                        protocol -> (string)
                            The protocol used for the  port  mapping.  Specify
                            one protocol.

                     timeout -> (structure)
                        An  object that represents timeouts for different pro-
                        tocols.

                        grpc -> (structure)
                            An object that represents types of timeouts.

                            idle -> (structure)
                               An object that represents an idle  timeout.  An
                               idle  timeout  bounds the amount of time that a
                               connection may be idle. The  default  value  is
                               none.

                               unit -> (string)
                                   A unit of time.

                               value -> (long)
                                   A number of time units.

                            perRequest -> (structure)
                               An  object  that represents a per request time-
                               out. The default value is 15  seconds.  If  you
                               set  a  higher timeout, then make sure that the
                               higher value is set for each App Mesh  resource
                               in  a  conversation.  For example, if a virtual
                               node backend uses a virtual router provider  to
                               route to another virtual node, then the timeout
                               should be  greater  than  15  seconds  for  the
                               source  and  destination  virtual  node and the
                               route.

                               unit -> (string)
                                   A unit of time.

                               value -> (long)
                                   A number of time units.

                        http -> (structure)
                            An object that represents types of timeouts.

                            idle -> (structure)
                               An object that represents an idle  timeout.  An
                               idle  timeout  bounds the amount of time that a
                               connection may be idle. The  default  value  is
                               none.

                               unit -> (string)
                                   A unit of time.

                               value -> (long)
                                   A number of time units.

                            perRequest -> (structure)
                               An  object  that represents a per request time-
                               out. The default value is 15  seconds.  If  you
                               set  a  higher timeout, then make sure that the
                               higher value is set for each App Mesh  resource
                               in  a  conversation.  For example, if a virtual
                               node backend uses a virtual router provider  to
                               route to another virtual node, then the timeout
                               should be  greater  than  15  seconds  for  the
                               source  and  destination  virtual  node and the
                               route.

                               unit -> (string)
                                   A unit of time.

                               value -> (long)
                                   A number of time units.

                        http2 -> (structure)
                            An object that represents types of timeouts.

                            idle -> (structure)
                               An object that represents an idle  timeout.  An
                               idle  timeout  bounds the amount of time that a
                               connection may be idle. The  default  value  is
                               none.

                               unit -> (string)
                                   A unit of time.

                               value -> (long)
                                   A number of time units.

                            perRequest -> (structure)
                               An  object  that represents a per request time-
                               out. The default value is 15  seconds.  If  you
                               set  a  higher timeout, then make sure that the
                               higher value is set for each App Mesh  resource
                               in  a  conversation.  For example, if a virtual
                               node backend uses a virtual router provider  to
                               route to another virtual node, then the timeout
                               should be  greater  than  15  seconds  for  the
                               source  and  destination  virtual  node and the
                               route.

                               unit -> (string)
                                   A unit of time.

                               value -> (long)
                                   A number of time units.

                        tcp -> (structure)
                            An object that represents types of timeouts.

                            idle -> (structure)
                               An object that represents an idle  timeout.  An
                               idle  timeout  bounds the amount of time that a
                               connection may be idle. The  default  value  is
                               none.

                               unit -> (string)
                                   A unit of time.

                               value -> (long)
                                   A number of time units.

                     tls -> (structure)
                        A reference to an object that represents the Transport
                        Layer Security (TLS) properties for a listener.

                        certificate -> (structure)
                            A reference to an object that  represents  a  lis-
                            tener's  Transport  Layer  Security (TLS) certifi-
                            cate.

                            acm -> (structure)
                               A reference to an object that represents an AWS
                               Certicate Manager (ACM) certificate.

                               certificateArn -> (string)
                                   The Amazon Resource Name (ARN) for the cer-
                                   tificate. The certificate  must  meet  spe-
                                   cific  requirements and you must have proxy
                                   authorization enabled.  For  more  informa-
                                   tion,  see Transport Layer Security (TLS) .

                            file -> (structure)
                               A reference to  an  object  that  represents  a
                               local file certificate.

                               certificateChain -> (string)
                                   The  certificate chain for the certificate.

                               privateKey -> (string)
                                   The private key for a certificate stored on
                                   the  file  system  of the virtual node that
                                   the proxy is running on.

                            sds -> (structure)
                               A reference to an object that represents a lis-
                               tener's Secret Discovery Service certificate.

                               secretName -> (string)
                                   A  reference  to  an object that represents
                                   the name of the secret requested  from  the
                                   Secret  Discovery  Service  provider repre-
                                   senting  Transport  Layer  Security   (TLS)
                                   materials like a certificate or certificate
                                   chain.

                        mode -> (string)
                            Specify one of the following modes.

                            o STRICT  Listener only accepts  connections  with
                              TLS enabled.

                            o PERMISSIVE  Listener accepts connections with or
                              without TLS enabled.

                            o DISABLED   Listener  only  accepts   connections
                              without TLS.

                        validation -> (structure)
                            A  reference  to  an object that represents a lis-
                            tener's Transport Layer Security (TLS)  validation
                            context.

                            subjectAlternativeNames -> (structure)
                               A  reference  to  an object that represents the
                               SANs for a listener's Transport Layer  Security
                               (TLS) validation context.

                               match -> (structure)
                                   An  object that represents the criteria for
                                   determining a SANs match.

                                   exact -> (list)
                                      The values sent must match the specified
                                      values exactly.

                                      (string)

                            trust -> (structure)
                               A  reference  to  where  to  retrieve the trust
                               chain when validating a peers  Transport  Layer
                               Security (TLS) certificate.

                               file -> (structure)
                                   An object that represents a Transport Layer
                                   Security (TLS) validation context trust for
                                   a local file.

                                   certificateChain -> (string)
                                      The  certificate  trust chain for a cer-
                                      tificate stored on the  file  system  of
                                      the  virtual node that the proxy is run-
                                      ning on.

                               sds -> (structure)
                                   A reference to an object that represents  a
                                   listener's  Transport  Layer Security (TLS)
                                   Secret Discovery Service validation context
                                   trust.

                                   secretName -> (string)
                                      A reference to an object that represents
                                      the name of the secret for  a  Transport
                                      Layer  Security  (TLS)  Secret Discovery
                                      Service validation context trust.

              logging -> (structure)
                 The inbound and outbound access logging information  for  the
                 virtual node.

                 accessLog -> (structure)
                     The access log configuration for a virtual node.

                     file -> (structure)
                        The file object to send virtual node access logs to.

                        path -> (string)
                            The file path to write access logs to. You can use
                            /dev/stdout to send access logs  to  standard  out
                            and  configure  your  Envoy container to use a log
                            driver, such as awslogs ,  to  export  the  access
                            logs  to  a  log  storage  service  such as Amazon
                            CloudWatch Logs. You can also specify  a  path  in
                            the  Envoy  container's  file  system to write the
                            files to disk.

                            NOTE:
                               The Envoy process must have  write  permissions
                               to  the  path that you specify here. Otherwise,
                               Envoy fails to bootstrap properly.

              serviceDiscovery -> (structure)
                 The service discovery information for the  virtual  node.  If
                 your  virtual  node  does not expect ingress traffic, you can
                 omit this parameter. If you specify a  listener  ,  then  you
                 must specify service discovery information.

                 awsCloudMap -> (structure)
                     Specifies any Cloud Map information for the virtual node.

                     attributes -> (list)
                        A string map that contains attributes with values that
                        you   can  use  to  filter  instances  by  any  custom
                        attribute that you specified when you  registered  the
                        instance.  Only instances that match all of the speci-
                        fied key/value pairs will be returned.

                        (structure)
                            An object that represents the Cloud Map  attribute
                            information for your virtual node.

                            NOTE:
                               AWS   Cloud   Map   is  not  available  in  the
                               eu-south-1 Region.

                            key -> (string)
                               The name  of  an  Cloud  Map  service  instance
                               attribute  key.  Any Cloud Map service instance
                               that contains the specified key  and  value  is
                               returned.

                            value -> (string)
                               The  value  of  an  Cloud  Map service instance
                               attribute key. Any Cloud Map  service  instance
                               that  contains  the  specified key and value is
                               returned.

                     namespaceName -> (string)
                        The name of the Cloud Map namespace to use.

                     serviceName -> (string)
                        The name of the Cloud Map service to use.

                 dns -> (structure)
                     Specifies the DNS information for the virtual node.

                     hostname -> (string)
                        Specifies the DNS service discovery hostname  for  the
                        virtual node.

                     responseType -> (string)
                        Specifies  the DNS response type for the virtual node.

          status -> (structure)
              The current status for the virtual node.

              status -> (string)
                 The current status of the virtual node.

          virtualNodeName -> (string)
              The name of the virtual node.



                                                         CREATE-VIRTUAL-NODE()
