CREATE-MESH()                                                    CREATE-MESH()



NAME
       create-mesh -

DESCRIPTION
       Creates a service mesh.

       A  service  mesh is a logical boundary for network traffic between ser-
       vices that are represented by resources within the mesh. After you cre-
       ate  your service mesh, you can create virtual services, virtual nodes,
       virtual routers, and routes to distribute traffic between the  applica-
       tions in your mesh.

       For more information about service meshes, see Service meshes .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-mesh
          [--client-token <value>]
          --mesh-name <value>
          [--spec <value>]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --client-token (string)
          Unique,  case-sensitive  identifier  that  you provide to ensure the
          idempotency of the request. Up to 36 letters, numbers, hyphens,  and
          underscores are allowed.

       --mesh-name (string)
          The name to use for the service mesh.

       --spec (structure)
          The service mesh specification to apply.

          egressFilter -> (structure)
              The egress filter rules for the service mesh.

              type -> (string)
                 The  egress  filter  type. By default, the type is DROP_ALL ,
                 which allows egress only from virtual nodes to other  defined
                 resources  in  the service mesh (and any traffic to *.amazon-
                 aws.com for Amazon Web Services API calls). You can  set  the
                 egress  filter  type to ALLOW_ALL to allow egress to any end-
                 point inside or outside of the service mesh.

       Shorthand Syntax:

          egressFilter={type=string}

       JSON Syntax:

          {
            "egressFilter": {
              "type": "ALLOW_ALL"|"DROP_ALL"
            }
          }

       --tags (list)
          Optional metadata that you can apply to the service mesh  to  assist
          with categorization and organization. Each tag consists of a key and
          an optional value, both of which you define. Tag  keys  can  have  a
          maximum  character length of 128 characters, and tag values can have
          a maximum length of 256 characters.

          (structure)
              Optional metadata that you apply to a resource  to  assist  with
              categorization  and organization. Each tag consists of a key and
              an optional value, both of which you define. Tag keys can have a
              maximum  character  length of 128 characters, and tag values can
              have a maximum length of 256 characters.

              key -> (string)
                 One part of a key-value pair that make up a tag. A key  is  a
                 general label that acts like a category for more specific tag
                 values.

              value -> (string)
                 The optional part of a key-value pair that make up a  tag.  A
                 value acts as a descriptor within a tag category (key).

       Shorthand Syntax:

          key=string,value=string ...

       JSON Syntax:

          [
            {
              "key": "string",
              "value": "string"
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To create a new service mesh

       The following create-mesh example creates a service mesh.

          aws appmesh create-mesh \
              --mesh-name app1

       Output:

          {
              "mesh":{
                  "meshName":"app1",
                  "metadata":{
                      "arn":"arn:aws:appmesh:us-east-1:123456789012:mesh/app1",
                      "createdAt":1563809909.282,
                      "lastUpdatedAt":1563809909.282,
                      "uid":"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE",
                      "version":1
                  },
                  "spec":{},
                  "status":{
                      "status":"ACTIVE"
                  }
              }
          }

       Example 2: To create a new service mesh with multiple tags

       The  following create-mesh example creates a service mesh with multiple
       tags.

          aws appmesh create-mesh \
              --mesh-name app2 \
              --tags key=key1,value=value1 key=key2,value=value2 key=key3,value=value3

       Output:

          {
              "mesh":{
                  "meshName":"app2",
                  "metadata":{
                      "arn":"arn:aws:appmesh:us-east-1:123456789012:mesh/app2",
                      "createdAt":1563822121.877,
                      "lastUpdatedAt":1563822121.877,
                      "uid":"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE",
                      "version":1
                  },
                  "spec":{},
                  "status":{
                      "status":"ACTIVE"
                  }
              }
          }

       For more information, see Service Meshes  in  the  AWS  App  Mesh  User
       Guide.

OUTPUT
       mesh -> (structure)
          The full description of your service mesh following the create call.

          meshName -> (string)
              The name of the service mesh.

          metadata -> (structure)
              The associated metadata for the service mesh.

              arn -> (string)
                 The full Amazon Resource Name (ARN) for the resource.

              createdAt -> (timestamp)
                 The Unix epoch timestamp in seconds for when the resource was
                 created.

              lastUpdatedAt -> (timestamp)
                 The Unix epoch timestamp in seconds for when the resource was
                 last updated.

              meshOwner -> (string)
                 The AWS IAM account ID of the  service  mesh  owner.  If  the
                 account  ID  is not your own, then it's the ID of the account
                 that shared the mesh with your account. For more  information
                 about mesh sharing, see Working with shared meshes .

              resourceOwner -> (string)
                 The  AWS IAM account ID of the resource owner. If the account
                 ID is not your own, then it's the ID of the mesh owner or  of
                 another account that the mesh is shared with. For more infor-
                 mation about mesh sharing, see Working with shared meshes .

              uid -> (string)
                 The unique identifier for the resource.

              version -> (long)
                 The version of the resource. Resources are created at version
                 1,  and  this  version  is incremented each time that they're
                 updated.

          spec -> (structure)
              The associated specification for the service mesh.

              egressFilter -> (structure)
                 The egress filter rules for the service mesh.

                 type -> (string)
                     The egress filter type. By default, the type is  DROP_ALL
                     ,  which  allows  egress only from virtual nodes to other
                     defined resources in the service mesh (and any traffic to
                     *.amazonaws.com  for  Amazon Web Services API calls). You
                     can set the egress filter  type  to  ALLOW_ALL  to  allow
                     egress  to  any endpoint inside or outside of the service
                     mesh.

          status -> (structure)
              The status of the service mesh.

              status -> (string)
                 The current mesh status.



                                                                 CREATE-MESH()
