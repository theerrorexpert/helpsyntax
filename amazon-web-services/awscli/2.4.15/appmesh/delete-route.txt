DELETE-ROUTE()                                                  DELETE-ROUTE()



NAME
       delete-route -

DESCRIPTION
       Deletes an existing route.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            delete-route
          --mesh-name <value>
          [--mesh-owner <value>]
          --route-name <value>
          --virtual-router-name <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --mesh-name (string)
          The name of the service mesh to delete the route in.

       --mesh-owner (string)
          The  AWS IAM account ID of the service mesh owner. If the account ID
          is not your own, then it's the ID of the  account  that  shared  the
          mesh with your account. For more information about mesh sharing, see
          Working with shared meshes .

       --route-name (string)
          The name of the route to delete.

       --virtual-router-name (string)
          The name of the virtual router to delete the route in.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To delete a route

       The following delete-route example deletes the specified route.

          aws appmesh delete-route \
              --mesh-name app1 \
              --virtual-router-name vrServiceB \
              --route-name toVnServiceB-weighted

       Output:

          {
              "route": {
                  "meshName": "app1",
                  "metadata": {
                      "arn": "arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualRouter/vrServiceB/route/toVnServiceB-weighted",
                      "createdAt": 1563811384.015,
                      "lastUpdatedAt": 1563823915.936,
                      "uid": "a1b2c3d4-5678-90ab-cdef-11111EXAMPLE",
                      "version": 3
                  },
                  "routeName": "toVnServiceB-weighted",
                  "spec": {
                      "httpRoute": {
                          "action": {
                              "weightedTargets": [
                                  {
                                      "virtualNode": "vnServiceBv1",
                                      "weight": 80
                                  },
                                  {
                                      "virtualNode": "vnServiceBv2",
                                      "weight": 20
                                  }
                              ]
                          },
                          "match": {
                              "prefix": "/"
                          }
                      }
                  },
                  "status": {
                      "status": "DELETED"
                  },
                  "virtualRouterName": "vrServiceB"
              }
          }

       For more information, see Routes in the AWS App Mesh User Guide.

OUTPUT
       route -> (structure)
          The route that was deleted.

          meshName -> (string)
              The name of the service mesh that the route resides in.

          metadata -> (structure)
              The associated metadata for the route.

              arn -> (string)
                 The full Amazon Resource Name (ARN) for the resource.

              createdAt -> (timestamp)
                 The Unix epoch timestamp in seconds for when the resource was
                 created.

              lastUpdatedAt -> (timestamp)
                 The Unix epoch timestamp in seconds for when the resource was
                 last updated.

              meshOwner -> (string)
                 The AWS IAM account ID of the  service  mesh  owner.  If  the
                 account  ID  is not your own, then it's the ID of the account
                 that shared the mesh with your account. For more  information
                 about mesh sharing, see Working with shared meshes .

              resourceOwner -> (string)
                 The  AWS IAM account ID of the resource owner. If the account
                 ID is not your own, then it's the ID of the mesh owner or  of
                 another account that the mesh is shared with. For more infor-
                 mation about mesh sharing, see Working with shared meshes .

              uid -> (string)
                 The unique identifier for the resource.

              version -> (long)
                 The version of the resource. Resources are created at version
                 1,  and  this  version  is incremented each time that they're
                 updated.

          routeName -> (string)
              The name of the route.

          spec -> (structure)
              The specifications of the route.

              grpcRoute -> (structure)
                 An object that represents the specification of a gRPC  route.

                 action -> (structure)
                     An  object  that represents the action to take if a match
                     is determined.

                     weightedTargets -> (list)
                        An object that represents the targets that traffic  is
                        routed to when a request matches the route.

                        (structure)
                            An  object  that represents a target and its rela-
                            tive weight. Traffic is distributed across targets
                            according to their relative weight. For example, a
                            weighted target  with  a  relative  weight  of  50
                            receives  five times as much traffic as one with a
                            relative weight of 10. The total  weight  for  all
                            targets  combined  must  be  less than or equal to
                            100.

                            virtualNode -> (string)
                               The virtual node to associate with the weighted
                               target.

                            weight -> (integer)
                               The relative weight of the weighted target.

                 match -> (structure)
                     An  object that represents the criteria for determining a
                     request match.

                     metadata -> (list)
                        An object that represents the data to match  from  the
                        request.

                        (structure)
                            An  object  that represents the match metadata for
                            the route.

                            invert -> (boolean)
                               Specify True to match anything except the match
                               criteria. The default value is False .

                            match -> (structure)
                               An  object  that  represents  the data to match
                               from the request.

                               exact -> (string)
                                   The value sent by the client must match the
                                   specified value exactly.

                               prefix -> (string)
                                   The  value  sent  by  the client must begin
                                   with the specified characters.

                               range -> (structure)
                                   An object that represents the range of val-
                                   ues to match on.

                                   end -> (long)
                                      The end of the range.

                                   start -> (long)
                                      The start of the range.

                               regex -> (string)
                                   The  value  sent by the client must include
                                   the specified characters.

                               suffix -> (string)
                                   The value sent by the client must end  with
                                   the specified characters.

                            name -> (string)
                               The name of the route.

                     methodName -> (string)
                        The  method  name  to  match  from the request. If you
                        specify a name, you must also specify a serviceName  .

                     serviceName -> (string)
                        The  fully  qualified  domain  name for the service to
                        match from the request.

                 retryPolicy -> (structure)
                     An object that represents a retry policy.

                     grpcRetryEvents -> (list)
                        Specify at least one of the valid values.

                        (string)

                     httpRetryEvents -> (list)
                        Specify at least one of the following values.

                        o server-error  HTTP status codes 500, 501, 502,  503,
                          504, 505, 506, 507, 508, 510, and 511

                        o gateway-error  HTTP status codes 502, 503, and 504

                        o client-error  HTTP status code 409

                        o stream-error  Retry on refused stream

                        (string)

                     maxRetries -> (long)
                        The maximum number of retry attempts.

                     perRetryTimeout -> (structure)
                        The timeout for each retry attempt.

                        unit -> (string)
                            A unit of time.

                        value -> (long)
                            A number of time units.

                     tcpRetryEvents -> (list)
                        Specify  a  valid  value.  The event occurs before any
                        processing of a request has started and is encountered
                        when   the  upstream  is  temporarily  or  permanently
                        unavailable.

                        (string)

                 timeout -> (structure)
                     An object that represents types of timeouts.

                     idle -> (structure)
                        An object that represents an  idle  timeout.  An  idle
                        timeout  bounds  the  amount of time that a connection
                        may be idle. The default value is none.

                        unit -> (string)
                            A unit of time.

                        value -> (long)
                            A number of time units.

                     perRequest -> (structure)
                        An object that represents a per request  timeout.  The
                        default value is 15 seconds. If you set a higher time-
                        out, then make sure that the higher value is  set  for
                        each App Mesh resource in a conversation. For example,
                        if a  virtual  node  backend  uses  a  virtual  router
                        provider  to  route  to another virtual node, then the
                        timeout should be greater  than  15  seconds  for  the
                        source and destination virtual node and the route.

                        unit -> (string)
                            A unit of time.

                        value -> (long)
                            A number of time units.

              http2Route -> (structure)
                 An  object  that  represents  the  specification of an HTTP/2
                 route.

                 action -> (structure)
                     An object that represents the action to take if  a  match
                     is determined.

                     weightedTargets -> (list)
                        An  object that represents the targets that traffic is
                        routed to when a request matches the route.

                        (structure)
                            An object that represents a target and  its  rela-
                            tive weight. Traffic is distributed across targets
                            according to their relative weight. For example, a
                            weighted  target  with  a  relative  weight  of 50
                            receives five times as much traffic as one with  a
                            relative  weight  of  10. The total weight for all
                            targets combined must be less  than  or  equal  to
                            100.

                            virtualNode -> (string)
                               The virtual node to associate with the weighted
                               target.

                            weight -> (integer)
                               The relative weight of the weighted target.

                 match -> (structure)
                     An object that represents the criteria for determining  a
                     request match.

                     headers -> (list)
                        The client request headers to match on.

                        (structure)
                            An  object  that represents the HTTP header in the
                            request.

                            invert -> (boolean)
                               Specify True to match anything except the match
                               criteria. The default value is False .

                            match -> (structure)
                               The HeaderMatchMethod object.

                               exact -> (string)
                                   The value sent by the client must match the
                                   specified value exactly.

                               prefix -> (string)
                                   The value sent by  the  client  must  begin
                                   with the specified characters.

                               range -> (structure)
                                   An object that represents the range of val-
                                   ues to match on.

                                   end -> (long)
                                      The end of the range.

                                   start -> (long)
                                      The start of the range.

                               regex -> (string)
                                   The value sent by the client  must  include
                                   the specified characters.

                               suffix -> (string)
                                   The  value sent by the client must end with
                                   the specified characters.

                            name -> (string)
                               A name  for  the  HTTP  header  in  the  client
                               request that will be matched on.

                     method -> (string)
                        The  client  request  method to match on. Specify only
                        one.

                     path -> (structure)
                        The client request path to match on.

                        exact -> (string)
                            The exact path to match on.

                        regex -> (string)
                            The regex used to match the path.

                     prefix -> (string)
                        Specifies the path to match requests with. This param-
                        eter  must  always  start  with  /  ,  which by itself
                        matches all requests to the virtual service name.  You
                        can also match for path-based routing of requests. For
                        example, if  your  virtual  service  name  is  my-ser-
                        vice.local and you want the route to match requests to
                        my-service.local/metrics , your prefix should be /met-
                        rics .

                     queryParameters -> (list)
                        The client request query parameters to match on.

                        (structure)
                            An  object  that represents the query parameter in
                            the request.

                            match -> (structure)
                               The query parameter to match on.

                               exact -> (string)
                                   The exact query parameter to match on.

                            name -> (string)
                               A name for the query  parameter  that  will  be
                               matched on.

                     scheme -> (string)
                        The  client  request  scheme to match on. Specify only
                        one. Applicable only for HTTP2 routes.

                 retryPolicy -> (structure)
                     An object that represents a retry policy.

                     httpRetryEvents -> (list)
                        Specify at least one of the following values.

                        o server-error  HTTP status codes 500, 501, 502,  503,
                          504, 505, 506, 507, 508, 510, and 511

                        o gateway-error  HTTP status codes 502, 503, and 504

                        o client-error  HTTP status code 409

                        o stream-error  Retry on refused stream

                        (string)

                     maxRetries -> (long)
                        The maximum number of retry attempts.

                     perRetryTimeout -> (structure)
                        The timeout for each retry attempt.

                        unit -> (string)
                            A unit of time.

                        value -> (long)
                            A number of time units.

                     tcpRetryEvents -> (list)
                        Specify  a  valid  value.  The event occurs before any
                        processing of a request has started and is encountered
                        when   the  upstream  is  temporarily  or  permanently
                        unavailable.

                        (string)

                 timeout -> (structure)
                     An object that represents types of timeouts.

                     idle -> (structure)
                        An object that represents an  idle  timeout.  An  idle
                        timeout  bounds  the  amount of time that a connection
                        may be idle. The default value is none.

                        unit -> (string)
                            A unit of time.

                        value -> (long)
                            A number of time units.

                     perRequest -> (structure)
                        An object that represents a per request  timeout.  The
                        default value is 15 seconds. If you set a higher time-
                        out, then make sure that the higher value is  set  for
                        each App Mesh resource in a conversation. For example,
                        if a  virtual  node  backend  uses  a  virtual  router
                        provider  to  route  to another virtual node, then the
                        timeout should be greater  than  15  seconds  for  the
                        source and destination virtual node and the route.

                        unit -> (string)
                            A unit of time.

                        value -> (long)
                            A number of time units.

              httpRoute -> (structure)
                 An object that represents the specification of an HTTP route.

                 action -> (structure)
                     An object that represents the action to take if  a  match
                     is determined.

                     weightedTargets -> (list)
                        An  object that represents the targets that traffic is
                        routed to when a request matches the route.

                        (structure)
                            An object that represents a target and  its  rela-
                            tive weight. Traffic is distributed across targets
                            according to their relative weight. For example, a
                            weighted  target  with  a  relative  weight  of 50
                            receives five times as much traffic as one with  a
                            relative  weight  of  10. The total weight for all
                            targets combined must be less  than  or  equal  to
                            100.

                            virtualNode -> (string)
                               The virtual node to associate with the weighted
                               target.

                            weight -> (integer)
                               The relative weight of the weighted target.

                 match -> (structure)
                     An object that represents the criteria for determining  a
                     request match.

                     headers -> (list)
                        The client request headers to match on.

                        (structure)
                            An  object  that represents the HTTP header in the
                            request.

                            invert -> (boolean)
                               Specify True to match anything except the match
                               criteria. The default value is False .

                            match -> (structure)
                               The HeaderMatchMethod object.

                               exact -> (string)
                                   The value sent by the client must match the
                                   specified value exactly.

                               prefix -> (string)
                                   The value sent by  the  client  must  begin
                                   with the specified characters.

                               range -> (structure)
                                   An object that represents the range of val-
                                   ues to match on.

                                   end -> (long)
                                      The end of the range.

                                   start -> (long)
                                      The start of the range.

                               regex -> (string)
                                   The value sent by the client  must  include
                                   the specified characters.

                               suffix -> (string)
                                   The  value sent by the client must end with
                                   the specified characters.

                            name -> (string)
                               A name  for  the  HTTP  header  in  the  client
                               request that will be matched on.

                     method -> (string)
                        The  client  request  method to match on. Specify only
                        one.

                     path -> (structure)
                        The client request path to match on.

                        exact -> (string)
                            The exact path to match on.

                        regex -> (string)
                            The regex used to match the path.

                     prefix -> (string)
                        Specifies the path to match requests with. This param-
                        eter  must  always  start  with  /  ,  which by itself
                        matches all requests to the virtual service name.  You
                        can also match for path-based routing of requests. For
                        example, if  your  virtual  service  name  is  my-ser-
                        vice.local and you want the route to match requests to
                        my-service.local/metrics , your prefix should be /met-
                        rics .

                     queryParameters -> (list)
                        The client request query parameters to match on.

                        (structure)
                            An  object  that represents the query parameter in
                            the request.

                            match -> (structure)
                               The query parameter to match on.

                               exact -> (string)
                                   The exact query parameter to match on.

                            name -> (string)
                               A name for the query  parameter  that  will  be
                               matched on.

                     scheme -> (string)
                        The  client  request  scheme to match on. Specify only
                        one. Applicable only for HTTP2 routes.

                 retryPolicy -> (structure)
                     An object that represents a retry policy.

                     httpRetryEvents -> (list)
                        Specify at least one of the following values.

                        o server-error  HTTP status codes 500, 501, 502,  503,
                          504, 505, 506, 507, 508, 510, and 511

                        o gateway-error  HTTP status codes 502, 503, and 504

                        o client-error  HTTP status code 409

                        o stream-error  Retry on refused stream

                        (string)

                     maxRetries -> (long)
                        The maximum number of retry attempts.

                     perRetryTimeout -> (structure)
                        The timeout for each retry attempt.

                        unit -> (string)
                            A unit of time.

                        value -> (long)
                            A number of time units.

                     tcpRetryEvents -> (list)
                        Specify  a  valid  value.  The event occurs before any
                        processing of a request has started and is encountered
                        when   the  upstream  is  temporarily  or  permanently
                        unavailable.

                        (string)

                 timeout -> (structure)
                     An object that represents types of timeouts.

                     idle -> (structure)
                        An object that represents an  idle  timeout.  An  idle
                        timeout  bounds  the  amount of time that a connection
                        may be idle. The default value is none.

                        unit -> (string)
                            A unit of time.

                        value -> (long)
                            A number of time units.

                     perRequest -> (structure)
                        An object that represents a per request  timeout.  The
                        default value is 15 seconds. If you set a higher time-
                        out, then make sure that the higher value is  set  for
                        each App Mesh resource in a conversation. For example,
                        if a  virtual  node  backend  uses  a  virtual  router
                        provider  to  route  to another virtual node, then the
                        timeout should be greater  than  15  seconds  for  the
                        source and destination virtual node and the route.

                        unit -> (string)
                            A unit of time.

                        value -> (long)
                            A number of time units.

              priority -> (integer)
                 The  priority  for the route. Routes are matched based on the
                 specified value, where 0 is the highest priority.

              tcpRoute -> (structure)
                 An object that represents the specification of a TCP route.

                 action -> (structure)
                     The action to take if a match is determined.

                     weightedTargets -> (list)
                        An object that represents the targets that traffic  is
                        routed to when a request matches the route.

                        (structure)
                            An  object  that represents a target and its rela-
                            tive weight. Traffic is distributed across targets
                            according to their relative weight. For example, a
                            weighted target  with  a  relative  weight  of  50
                            receives  five times as much traffic as one with a
                            relative weight of 10. The total  weight  for  all
                            targets  combined  must  be  less than or equal to
                            100.

                            virtualNode -> (string)
                               The virtual node to associate with the weighted
                               target.

                            weight -> (integer)
                               The relative weight of the weighted target.

                 timeout -> (structure)
                     An object that represents types of timeouts.

                     idle -> (structure)
                        An  object  that  represents  an idle timeout. An idle
                        timeout bounds the amount of time  that  a  connection
                        may be idle. The default value is none.

                        unit -> (string)
                            A unit of time.

                        value -> (long)
                            A number of time units.

          status -> (structure)
              The status of the route.

              status -> (string)
                 The current status for the route.

          virtualRouterName -> (string)
              The virtual router that the route is associated with.



                                                                DELETE-ROUTE()
