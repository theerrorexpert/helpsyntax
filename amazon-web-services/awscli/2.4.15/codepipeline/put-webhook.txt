PUT-WEBHOOK()                                                    PUT-WEBHOOK()



NAME
       put-webhook -

DESCRIPTION
       Defines  a  webhook and returns a unique webhook URL generated by Code-
       Pipeline. This URL can  be  supplied  to  third  party  source  hosting
       providers  to  call every time there's a code change. When CodePipeline
       receives a POST request on this URL, the pipeline defined in  the  web-
       hook  is  started as long as the POST request satisfied the authentica-
       tion and filtering requirements supplied  when  defining  the  webhook.
       RegisterWebhookWithThirdParty  and DeregisterWebhookWithThirdParty APIs
       can be used to automatically configure supported third parties to  call
       the generated webhook URL.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            put-webhook
          --webhook <value>
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --webhook (structure)
          The  detail provided in an input file to create the webhook, such as
          the webhook name, the pipeline name, and the action name.  Give  the
          webhook a unique name that helps you identify it. You might name the
          webhook after the pipeline and action it targets  so  that  you  can
          easily recognize what it's used for later.

          name -> (string)
              The name of the webhook.

          targetPipeline -> (string)
              The name of the pipeline you want to connect to the webhook.

          targetAction -> (string)
              The  name of the action in a pipeline you want to connect to the
              webhook. The action must be from the source (first) stage of the
              pipeline.

          filters -> (list)
              A  list  of  rules  applied to the body/payload sent in the POST
              request to a webhook URL. All defined rules must  pass  for  the
              request to be accepted and the pipeline started.

              (structure)
                 The  event  criteria that specify when a webhook notification
                 is sent to your URL.

                 jsonPath -> (string)
                     A JsonPath expression that is applied to the body/payload
                     of  the  webhook.  The  value  selected  by  the JsonPath
                     expression  must  match  the  value  specified   in   the
                     MatchEquals field. Otherwise, the request is ignored. For
                     more information, see  Java  JsonPath  implementation  in
                     GitHub.

                 matchEquals -> (string)
                     The  value selected by the JsonPath expression must match
                     what is supplied in the MatchEquals field. Otherwise, the
                     request  is  ignored.  Properties  from the target action
                     configuration can be included  as  placeholders  in  this
                     value  by  surrounding  the action configuration key with
                     curly brackets. For example, if the value  supplied  here
                     is  "refs/heads/{Branch}"  and  the  target action has an
                     action configuration  property  called  "Branch"  with  a
                     value  of "master", the MatchEquals value is evaluated as
                     "refs/heads/master". For a list of  action  configuration
                     properties for built-in action types, see Pipeline Struc-
                     ture Reference Action Requirements .

          authentication -> (string)
              Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.

              o For information about the authentication scheme implemented by
                GITHUB_HMAC,  see  Securing your webhooks on the GitHub Devel-
                oper website.

              o IP rejects webhooks trigger  requests  unless  they  originate
                from  an IP address in the IP range whitelisted in the authen-
                tication configuration.

              o UNAUTHENTICATED accepts all webhook trigger  requests  regard-
                less of origin.

          authenticationConfiguration -> (structure)
              Properties that configure the authentication applied to incoming
              webhook trigger requests. The required properties depend on  the
              authentication type. For GITHUB_HMAC, only the SecretToken prop-
              erty must be set. For IP, only the AllowedIPRange property  must
              be set to a valid CIDR range. For UNAUTHENTICATED, no properties
              can be set.

              AllowedIPRange -> (string)
                 The property used to configure acceptance of webhooks  in  an
                 IP  address  range.  For IP, only the AllowedIPRange property
                 must be set. This property must be set to a valid CIDR range.

              SecretToken -> (string)
                 The  property  used  to  configure GitHub authentication. For
                 GITHUB_HMAC, only the SecretToken property must be set.

       Shorthand Syntax:

          name=string,targetPipeline=string,targetAction=string,filters=[{jsonPath=string,matchEquals=string},{jsonPath=string,matchEquals=string}],authentication=string,authenticationConfiguration={AllowedIPRange=string,SecretToken=string}

       JSON Syntax:

          {
            "name": "string",
            "targetPipeline": "string",
            "targetAction": "string",
            "filters": [
              {
                "jsonPath": "string",
                "matchEquals": "string"
              }
              ...
            ],
            "authentication": "GITHUB_HMAC"|"IP"|"UNAUTHENTICATED",
            "authenticationConfiguration": {
              "AllowedIPRange": "string",
              "SecretToken": "string"
            }
          }

       --tags (list)
          The tags for the webhook.

          (structure)
              A tag is a key-value pair that is used to manage the resource.

              key -> (string)
                 The tag's key.

              value -> (string)
                 The tag's value.

       Shorthand Syntax:

          key=string,value=string ...

       JSON Syntax:

          [
            {
              "key": "string",
              "value": "string"
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a webhook

       The following put-webhook example creates a webhook for a  GitHub  ver-
       sion  1  source  action. After you create the webhook, you must use the
       register-webhook-with-third-party command to register it.

          aws codepipeline put-webhook \
              --cli-input-json file://webhook_json.json \
              --region "eu-central-1"

       Contents of webhook_json.json:

          {
              "webhook": {
                  "name": "my-webhook",
                  "targetPipeline": "pipeline_name",
                  "targetAction": "source_action_name",
                  "filters": [
                      {
                          "jsonPath": "$.ref",
                          "matchEquals": "refs/heads/{Branch}"
                      }
                  ],
                  "authentication": "GITHUB_HMAC",
                  "authenticationConfiguration": {
                      "SecretToken": "secret"
                  }
              }
          }

       Output:

          {
              "webhook": {
                  "url": "https://webhooks.domain.com/trigger111111111EXAMPLE11111111111111111",
                  "definition": {
                      "authenticationConfiguration": {
                          "SecretToken": "secret"
                      },
                      "name": "my-webhook",
                      "authentication": "GITHUB_HMAC",
                      "targetPipeline": "pipeline_name",
                      "targetAction": "Source",
                      "filters": [
                          {
                              "jsonPath": "$.ref",
                              "matchEquals": "refs/heads/{Branch}"
                          }
                      ]
                  },
                  "arn": "arn:aws:codepipeline:eu-central-1:123456789012:webhook:my-webhook"
              },
              "tags": [
                  {
                      "key": "Project",
                      "value": "ProjectA"
                  }
              ]
          }

       For more information, see Create a webhook for a GitHub source  in  the
       AWS CodePipeline User Guide.

OUTPUT
       webhook -> (structure)
          The  detail  returned from creating the webhook, such as the webhook
          name, webhook URL, and webhook ARN.

          definition -> (structure)
              The detail returned  for  each  webhook,  such  as  the  webhook
              authentication type and filter rules.

              name -> (string)
                 The name of the webhook.

              targetPipeline -> (string)
                 The  name of the pipeline you want to connect to the webhook.

              targetAction -> (string)
                 The name of the action in a pipeline you want to  connect  to
                 the webhook. The action must be from the source (first) stage
                 of the pipeline.

              filters -> (list)
                 A list of rules applied to the body/payload sent in the  POST
                 request to a webhook URL. All defined rules must pass for the
                 request to be accepted and the pipeline started.

                 (structure)
                     The event criteria that specify when a webhook  notifica-
                     tion is sent to your URL.

                     jsonPath -> (string)
                        A JsonPath expression that is applied to the body/pay-
                        load of the webhook. The value selected by  the  Json-
                        Path  expression must match the value specified in the
                        MatchEquals field. Otherwise, the request is  ignored.
                        For more information, see Java JsonPath implementation
                        in GitHub.

                     matchEquals -> (string)
                        The value selected by  the  JsonPath  expression  must
                        match  what is supplied in the MatchEquals field. Oth-
                        erwise, the request is ignored.  Properties  from  the
                        target  action configuration can be included as place-
                        holders in this value by surrounding the  action  con-
                        figuration  key  with  curly brackets. For example, if
                        the value supplied here is  "refs/heads/{Branch}"  and
                        the target action has an action configuration property
                        called  "Branch"  with  a  value  of   "master",   the
                        MatchEquals value is evaluated as "refs/heads/master".
                        For a list  of  action  configuration  properties  for
                        built-in  action  types, see Pipeline Structure Refer-
                        ence Action Requirements .

              authentication -> (string)
                 Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.

                 o For information about the authentication scheme implemented
                   by  GITHUB_HMAC,  see  Securing your webhooks on the GitHub
                   Developer website.

                 o IP rejects webhooks trigger requests unless they  originate
                   from  an  IP  address  in  the  IP range whitelisted in the
                   authentication configuration.

                 o UNAUTHENTICATED  accepts  all  webhook   trigger   requests
                   regardless of origin.

              authenticationConfiguration -> (structure)
                 Properties  that  configure  the  authentication  applied  to
                 incoming webhook trigger requests.  The  required  properties
                 depend  on the authentication type. For GITHUB_HMAC, only the
                 SecretToken  property  must  be  set.  For   IP,   only   the
                 AllowedIPRange  property  must  be set to a valid CIDR range.
                 For UNAUTHENTICATED, no properties can be set.

                 AllowedIPRange -> (string)
                     The property used to configure acceptance of webhooks  in
                     an  IP  address  range.  For  IP, only the AllowedIPRange
                     property must be set. This property  must  be  set  to  a
                     valid CIDR range.

                 SecretToken -> (string)
                     The property used to configure GitHub authentication. For
                     GITHUB_HMAC, only the SecretToken property must be set.

          url -> (string)
              A unique URL generated by CodePipeline. When a POST  request  is
              made to this URL, the defined pipeline is started as long as the
              body of the post request satisfies  the  defined  authentication
              and  filtering  conditions.  Deleting  and re-creating a webhook
              makes the old URL invalid and generates a new one.

          errorMessage -> (string)
              The text of the error message about the webhook.

          errorCode -> (string)
              The number code of the error.

          lastTriggered -> (timestamp)
              The date and time a webhook was last successfully triggered,  in
              timestamp format.

          arn -> (string)
              The Amazon Resource Name (ARN) of the webhook.

          tags -> (list)
              Specifies the tags applied to the webhook.

              (structure)
                 A  tag  is  a  key-value  pair  that  is  used  to manage the
                 resource.

                 key -> (string)
                     The tag's key.

                 value -> (string)
                     The tag's value.



                                                                 PUT-WEBHOOK()
