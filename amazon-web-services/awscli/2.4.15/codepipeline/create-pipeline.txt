CREATE-PIPELINE()                                            CREATE-PIPELINE()



NAME
       create-pipeline -

DESCRIPTION
       Creates a pipeline.

       NOTE:
          In  the pipeline structure, you must include either artifactStore or
          artifactStores in your pipeline, but you cannot  use  both.  If  you
          create  a  cross-region  action in your pipeline, you must use arti-
          factStores .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-pipeline
          --pipeline <value>
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --pipeline (structure)
          Represents the structure of actions and stages to  be  performed  in
          the pipeline.

          name -> (string)
              The name of the pipeline.

          roleArn -> (string)
              The  Amazon  Resource  Name (ARN) for AWS CodePipeline to use to
              either perform actions with no actionRoleArn  ,  or  to  use  to
              assume roles for actions with an actionRoleArn .

          artifactStore -> (structure)
              Represents  information  about the S3 bucket where artifacts are
              stored for the pipeline.

              NOTE:
                 You must include either artifactStore  or  artifactStores  in
                 your  pipeline,  but  you  cannot  use  both. If you create a
                 cross-region action in your pipeline, you must use  artifact-
                 Stores .

              type -> (string)
                 The type of the artifact store, such as S3.

              location -> (string)
                 The  S3 bucket used for storing the artifacts for a pipeline.
                 You can specify the name of an S3 bucket but not a folder  in
                 the  bucket.  A  folder  to contain the pipeline artifacts is
                 created for you based on the name of the  pipeline.  You  can
                 use  any  S3 bucket in the same AWS Region as the pipeline to
                 store your pipeline artifacts.

              encryptionKey -> (structure)
                 The encryption key used to encrypt the data in  the  artifact
                 store,  such  as an AWS Key Management Service (AWS KMS) key.
                 If this is undefined, the default key for Amazon S3 is  used.

                 id -> (string)
                     The  ID used to identify the key. For an AWS KMS key, you
                     can use the key ID, the key ARN, or the alias ARN.

                     NOTE:
                        Aliases are recognized only in the account  that  cre-
                        ated  the customer master key (CMK). For cross-account
                        actions, you can only use the key ID  or  key  ARN  to
                        identify the key.

                 type -> (string)
                     The type of encryption key, such as an AWS Key Management
                     Service (AWS KMS) key. When creating or updating a  pipe-
                     line, the value must be set to 'KMS'.

          artifactStores -> (map)
              A  mapping  of artifactStore objects and their corresponding AWS
              Regions. There must be an artifact store for the pipeline Region
              and for each cross-region action in the pipeline.

              NOTE:
                 You  must  include  either artifactStore or artifactStores in
                 your pipeline, but you cannot  use  both.  If  you  create  a
                 cross-region  action in your pipeline, you must use artifact-
                 Stores .

              key -> (string)

              value -> (structure)
                 The S3 bucket where artifacts for the pipeline are stored.

                 NOTE:
                     You must include either artifactStore  or  artifactStores
                     in  your pipeline, but you cannot use both. If you create
                     a cross-region action in  your  pipeline,  you  must  use
                     artifactStores .

                 type -> (string)
                     The type of the artifact store, such as S3.

                 location -> (string)
                     The  S3 bucket used for storing the artifacts for a pipe-
                     line. You can specify the name of an S3 bucket but not  a
                     folder  in  the  bucket. A folder to contain the pipeline
                     artifacts is created for you based on  the  name  of  the
                     pipeline.  You  can  use  any  S3  bucket in the same AWS
                     Region as the pipeline to store your pipeline  artifacts.

                 encryptionKey -> (structure)
                     The  encryption key used to encrypt the data in the arti-
                     fact store, such as an AWS Key  Management  Service  (AWS
                     KMS)  key. If this is undefined, the default key for Ama-
                     zon S3 is used.

                     id -> (string)
                        The ID used to identify the key. For an AWS  KMS  key,
                        you can use the key ID, the key ARN, or the alias ARN.

                        NOTE:
                            Aliases are recognized only in  the  account  that
                            created   the   customer  master  key  (CMK).  For
                            cross-account actions, you can only use the key ID
                            or key ARN to identify the key.

                     type -> (string)
                        The type of encryption key, such as an AWS Key Manage-
                        ment Service (AWS KMS) key. When creating or  updating
                        a pipeline, the value must be set to 'KMS'.

          stages -> (list)
              The stage in which to perform the action.

              (structure)
                 Represents information about a stage and its definition.

                 name -> (string)
                     The name of the stage.

                 blockers -> (list)
                     Reserved for future use.

                     (structure)
                        Reserved for future use.

                        name -> (string)
                            Reserved for future use.

                        type -> (string)
                            Reserved for future use.

                 actions -> (list)
                     The actions included in a stage.

                     (structure)
                        Represents information about an action declaration.

                        name -> (string)
                            The action declaration's name.

                        actionTypeId -> (structure)
                            Specifies  the action type and the provider of the
                            action.

                            category -> (string)
                               A category defines what kind of action  can  be
                               taken in the stage, and constrains the provider
                               type for the action. Valid categories are  lim-
                               ited to one of the following values.

                               o Source

                               o Build

                               o Test

                               o Deploy

                               o Invoke

                               o Approval

                            owner -> (string)
                               The  creator  of the action being called. There
                               are three valid values for the Owner  field  in
                               the  action  category section within your pipe-
                               line structure: AWS , ThirdParty , and Custom .
                               For  more  information,  see Valid Action Types
                               and Providers in CodePipeline .

                            provider -> (string)
                               The provider of the service being called by the
                               action.  Valid  providers are determined by the
                               action category. For example, an action in  the
                               Deploy  category  type might have a provider of
                               AWS CodeDeploy, which  would  be  specified  as
                               CodeDeploy.  For  more  information,  see Valid
                               Action Types and Providers in CodePipeline .

                            version -> (string)
                               A string that describes the action version.

                        runOrder -> (integer)
                            The order in which actions are run.

                        configuration -> (map)
                            The action's configuration.  These  are  key-value
                            pairs that specify input values for an action. For
                            more information, see  Action  Structure  Require-
                            ments in CodePipeline . For the list of configura-
                            tion properties for the AWS CloudFormation  action
                            type in CodePipeline, see Configuration Properties
                            Reference in the AWS CloudFormation User  Guide  .
                            For  template  snippets  with  examples, see Using
                            Parameter  Override  Functions  with  CodePipeline
                            Pipelines in the AWS CloudFormation User Guide .

                            The  values  can  be represented in either JSON or
                            YAML format. For example, the  JSON  configuration
                            item format is as follows:
                               JSON:

                               "Configuration" : { Key : Value },

                            key -> (string)

                            value -> (string)

                        outputArtifacts -> (list)
                            The  name or ID of the result of the action decla-
                            ration, such as a test or build artifact.

                            (structure)
                               Represents information about the output  of  an
                               action.

                               name -> (string)
                                   The name of the output of an artifact, such
                                   as "My App".

                                   The  input  artifact  of  an  action   must
                                   exactly  match the output artifact declared
                                   in a preceding action, but the input  arti-
                                   fact does not have to be the next action in
                                   strict sequence from the action  that  pro-
                                   vided  the output artifact. Actions in par-
                                   allel can declare  different  output  arti-
                                   facts,  which  are in turn consumed by dif-
                                   ferent following actions.

                                   Output artifact names must be unique within
                                   a pipeline.

                        inputArtifacts -> (list)
                            The  name  or  ID  of the artifact consumed by the
                            action, such as a test or build artifact.

                            (structure)
                               Represents information about an artifact to  be
                               worked on, such as a test or build artifact.

                               name -> (string)
                                   The  name  of  the artifact to be worked on
                                   (for example, "My App").

                                   The  input  artifact  of  an  action   must
                                   exactly  match the output artifact declared
                                   in a preceding action, but the input  arti-
                                   fact does not have to be the next action in
                                   strict sequence from the action  that  pro-
                                   vided  the output artifact. Actions in par-
                                   allel can declare  different  output  arti-
                                   facts,  which  are in turn consumed by dif-
                                   ferent following actions.

                        roleArn -> (string)
                            The ARN of the IAM service role that performs  the
                            declared  action.  This  is  assumed  through  the
                            roleArn for the pipeline.

                        region -> (string)
                            The  action  declaration's  AWS  Region,  such  as
                            us-east-1.

                        namespace -> (string)
                            The variable namespace associated with the action.
                            All variables produced as output  by  this  action
                            fall under this namespace.

          version -> (integer)
              The  version number of the pipeline. A new pipeline always has a
              version number of 1. This number is incremented when a  pipeline
              is updated.

       JSON Syntax:

          {
            "name": "string",
            "roleArn": "string",
            "artifactStore": {
              "type": "S3",
              "location": "string",
              "encryptionKey": {
                "id": "string",
                "type": "KMS"
              }
            },
            "artifactStores": {"string": {
                  "type": "S3",
                  "location": "string",
                  "encryptionKey": {
                    "id": "string",
                    "type": "KMS"
                  }
                }
              ...},
            "stages": [
              {
                "name": "string",
                "blockers": [
                  {
                    "name": "string",
                    "type": "Schedule"
                  }
                  ...
                ],
                "actions": [
                  {
                    "name": "string",
                    "actionTypeId": {
                      "category": "Source"|"Build"|"Deploy"|"Test"|"Invoke"|"Approval",
                      "owner": "AWS"|"ThirdParty"|"Custom",
                      "provider": "string",
                      "version": "string"
                    },
                    "runOrder": integer,
                    "configuration": {"string": "string"
                      ...},
                    "outputArtifacts": [
                      {
                        "name": "string"
                      }
                      ...
                    ],
                    "inputArtifacts": [
                      {
                        "name": "string"
                      }
                      ...
                    ],
                    "roleArn": "string",
                    "region": "string",
                    "namespace": "string"
                  }
                  ...
                ]
              }
              ...
            ],
            "version": integer
          }

       --tags (list)
          The tags for the pipeline.

          (structure)
              A tag is a key-value pair that is used to manage the resource.

              key -> (string)
                 The tag's key.

              value -> (string)
                 The tag's value.

       Shorthand Syntax:

          key=string,value=string ...

       JSON Syntax:

          [
            {
              "key": "string",
              "value": "string"
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a pipeline

       This   example   creates  a  pipeline  in  AWS  CodePipeline  using  an
       already-created JSON file (here named MySecondPipeline.json) that  con-
       tains  the  structure  of  the pipeline. For more information about the
       requirements for creating a pipeline, including the  structure  of  the
       file, see the AWS CodePipeline User Guide.

       Command:

          aws codepipeline create-pipeline --cli-input-json file://MySecondPipeline.json

       JSON file sample contents:

          {
           "pipeline": {
            "roleArn": "arn:aws:iam::111111111111:role/AWS-CodePipeline-Service",
            "stages": [
              {
                "name": "Source",
                "actions": [
                  {
                    "inputArtifacts": [],
                    "name": "Source",
                    "actionTypeId": {
                      "category": "Source",
                      "owner": "AWS",
                      "version": "1",
                      "provider": "S3"
                    },
                    "outputArtifacts": [
                      {
                        "name": "MyApp"
                      }
                    ],
                    "configuration": {
                      "S3Bucket": "awscodepipeline-demo-bucket",
                      "S3ObjectKey": "aws-codepipeline-s3-aws-codedeploy_linux.zip"
                    },
                    "runOrder": 1
                  }
                ]
              },
              {
                "name": "Beta",
                "actions": [
                  {
                    "inputArtifacts": [
                      {
                        "name": "MyApp"
                      }
                    ],
                    "name": "CodePipelineDemoFleet",
                    "actionTypeId": {
                      "category": "Deploy",
                      "owner": "AWS",
                      "version": "1",
                      "provider": "CodeDeploy"
                    },
                    "outputArtifacts": [],
                    "configuration": {
                      "ApplicationName": "CodePipelineDemoApplication",
                      "DeploymentGroupName": "CodePipelineDemoFleet"
                    },
                    "runOrder": 1
                  }
                ]
              }
            ],
            "artifactStore": {
              "type": "S3",
              "location": "codepipeline-us-east-1-11EXAMPLE11"
            },
            "name": "MySecondPipeline",
            "version": 1
           }
          }

       Output:

          This command returns the structure of the pipeline.

OUTPUT
       pipeline -> (structure)
          Represents  the  structure  of actions and stages to be performed in
          the pipeline.

          name -> (string)
              The name of the pipeline.

          roleArn -> (string)
              The Amazon Resource Name (ARN) for AWS CodePipeline  to  use  to
              either  perform  actions  with  no  actionRoleArn , or to use to
              assume roles for actions with an actionRoleArn .

          artifactStore -> (structure)
              Represents information about the S3 bucket where  artifacts  are
              stored for the pipeline.

              NOTE:
                 You  must  include  either artifactStore or artifactStores in
                 your pipeline, but you cannot  use  both.  If  you  create  a
                 cross-region  action in your pipeline, you must use artifact-
                 Stores .

              type -> (string)
                 The type of the artifact store, such as S3.

              location -> (string)
                 The S3 bucket used for storing the artifacts for a  pipeline.
                 You  can specify the name of an S3 bucket but not a folder in
                 the bucket. A folder to contain  the  pipeline  artifacts  is
                 created  for  you  based on the name of the pipeline. You can
                 use any S3 bucket in the same AWS Region as the  pipeline  to
                 store your pipeline artifacts.

              encryptionKey -> (structure)
                 The  encryption  key used to encrypt the data in the artifact
                 store, such as an AWS Key Management Service (AWS  KMS)  key.
                 If  this is undefined, the default key for Amazon S3 is used.

                 id -> (string)
                     The ID used to identify the key. For an AWS KMS key,  you
                     can use the key ID, the key ARN, or the alias ARN.

                     NOTE:
                        Aliases  are  recognized only in the account that cre-
                        ated the customer master key (CMK). For  cross-account
                        actions,  you  can  only  use the key ID or key ARN to
                        identify the key.

                 type -> (string)
                     The type of encryption key, such as an AWS Key Management
                     Service  (AWS KMS) key. When creating or updating a pipe-
                     line, the value must be set to 'KMS'.

          artifactStores -> (map)
              A mapping of artifactStore objects and their  corresponding  AWS
              Regions. There must be an artifact store for the pipeline Region
              and for each cross-region action in the pipeline.

              NOTE:
                 You must include either artifactStore  or  artifactStores  in
                 your  pipeline,  but  you  cannot  use  both. If you create a
                 cross-region action in your pipeline, you must use  artifact-
                 Stores .

              key -> (string)

              value -> (structure)
                 The S3 bucket where artifacts for the pipeline are stored.

                 NOTE:
                     You  must  include either artifactStore or artifactStores
                     in your pipeline, but you cannot use both. If you  create
                     a  cross-region  action  in  your  pipeline, you must use
                     artifactStores .

                 type -> (string)
                     The type of the artifact store, such as S3.

                 location -> (string)
                     The S3 bucket used for storing the artifacts for a  pipe-
                     line.  You can specify the name of an S3 bucket but not a
                     folder in the bucket. A folder to  contain  the  pipeline
                     artifacts  is  created  for  you based on the name of the
                     pipeline. You can use any  S3  bucket  in  the  same  AWS
                     Region  as the pipeline to store your pipeline artifacts.

                 encryptionKey -> (structure)
                     The encryption key used to encrypt the data in the  arti-
                     fact  store,  such  as an AWS Key Management Service (AWS
                     KMS) key. If this is undefined, the default key for  Ama-
                     zon S3 is used.

                     id -> (string)
                        The  ID  used to identify the key. For an AWS KMS key,
                        you can use the key ID, the key ARN, or the alias ARN.

                        NOTE:
                            Aliases  are  recognized  only in the account that
                            created  the  customer  master  key   (CMK).   For
                            cross-account actions, you can only use the key ID
                            or key ARN to identify the key.

                     type -> (string)
                        The type of encryption key, such as an AWS Key Manage-
                        ment  Service (AWS KMS) key. When creating or updating
                        a pipeline, the value must be set to 'KMS'.

          stages -> (list)
              The stage in which to perform the action.

              (structure)
                 Represents information about a stage and its definition.

                 name -> (string)
                     The name of the stage.

                 blockers -> (list)
                     Reserved for future use.

                     (structure)
                        Reserved for future use.

                        name -> (string)
                            Reserved for future use.

                        type -> (string)
                            Reserved for future use.

                 actions -> (list)
                     The actions included in a stage.

                     (structure)
                        Represents information about an action declaration.

                        name -> (string)
                            The action declaration's name.

                        actionTypeId -> (structure)
                            Specifies the action type and the provider of  the
                            action.

                            category -> (string)
                               A  category  defines what kind of action can be
                               taken in the stage, and constrains the provider
                               type  for the action. Valid categories are lim-
                               ited to one of the following values.

                               o Source

                               o Build

                               o Test

                               o Deploy

                               o Invoke

                               o Approval

                            owner -> (string)
                               The creator of the action being  called.  There
                               are  three  valid values for the Owner field in
                               the action category section within  your  pipe-
                               line structure: AWS , ThirdParty , and Custom .
                               For more information, see  Valid  Action  Types
                               and Providers in CodePipeline .

                            provider -> (string)
                               The provider of the service being called by the
                               action. Valid providers are determined  by  the
                               action  category. For example, an action in the
                               Deploy category type might have a  provider  of
                               AWS  CodeDeploy,  which  would  be specified as
                               CodeDeploy. For  more  information,  see  Valid
                               Action Types and Providers in CodePipeline .

                            version -> (string)
                               A string that describes the action version.

                        runOrder -> (integer)
                            The order in which actions are run.

                        configuration -> (map)
                            The  action's  configuration.  These are key-value
                            pairs that specify input values for an action. For
                            more  information,  see  Action Structure Require-
                            ments in CodePipeline . For the list of configura-
                            tion  properties for the AWS CloudFormation action
                            type in CodePipeline, see Configuration Properties
                            Reference  in  the AWS CloudFormation User Guide .
                            For template snippets  with  examples,  see  Using
                            Parameter  Override  Functions  with  CodePipeline
                            Pipelines in the AWS CloudFormation User Guide .

                            The values can be represented in  either  JSON  or
                            YAML  format.  For example, the JSON configuration
                            item format is as follows:
                               JSON:

                               "Configuration" : { Key : Value },

                            key -> (string)

                            value -> (string)

                        outputArtifacts -> (list)
                            The name or ID of the result of the action  decla-
                            ration, such as a test or build artifact.

                            (structure)
                               Represents  information  about the output of an
                               action.

                               name -> (string)
                                   The name of the output of an artifact, such
                                   as "My App".

                                   The   input  artifact  of  an  action  must
                                   exactly match the output artifact  declared
                                   in  a preceding action, but the input arti-
                                   fact does not have to be the next action in
                                   strict  sequence  from the action that pro-
                                   vided the output artifact. Actions in  par-
                                   allel  can  declare  different output arti-
                                   facts, which are in turn consumed  by  dif-
                                   ferent following actions.

                                   Output artifact names must be unique within
                                   a pipeline.

                        inputArtifacts -> (list)
                            The name or ID of the  artifact  consumed  by  the
                            action, such as a test or build artifact.

                            (structure)
                               Represents  information about an artifact to be
                               worked on, such as a test or build artifact.

                               name -> (string)
                                   The name of the artifact to  be  worked  on
                                   (for example, "My App").

                                   The   input  artifact  of  an  action  must
                                   exactly match the output artifact  declared
                                   in  a preceding action, but the input arti-
                                   fact does not have to be the next action in
                                   strict  sequence  from the action that pro-
                                   vided the output artifact. Actions in  par-
                                   allel  can  declare  different output arti-
                                   facts, which are in turn consumed  by  dif-
                                   ferent following actions.

                        roleArn -> (string)
                            The  ARN of the IAM service role that performs the
                            declared  action.  This  is  assumed  through  the
                            roleArn for the pipeline.

                        region -> (string)
                            The  action  declaration's  AWS  Region,  such  as
                            us-east-1.

                        namespace -> (string)
                            The variable namespace associated with the action.
                            All  variables  produced  as output by this action
                            fall under this namespace.

          version -> (integer)
              The version number of the pipeline. A new pipeline always has  a
              version  number of 1. This number is incremented when a pipeline
              is updated.

       tags -> (list)
          Specifies the tags applied to the pipeline.

          (structure)
              A tag is a key-value pair that is used to manage the resource.

              key -> (string)
                 The tag's key.

              value -> (string)
                 The tag's value.



                                                             CREATE-PIPELINE()
