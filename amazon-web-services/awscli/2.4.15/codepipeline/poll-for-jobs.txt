POLL-FOR-JOBS()                                                POLL-FOR-JOBS()



NAME
       poll-for-jobs -

DESCRIPTION
       Returns  information  about  any  jobs  for AWS CodePipeline to act on.
       PollForJobs is valid only for action types with "Custom" in  the  owner
       field.  If  the action type contains "AWS" or "ThirdParty" in the owner
       field, the PollForJobs action returns an error.

       WARNING:
          When this API is called, AWS CodePipeline returns temporary  creden-
          tials for the S3 bucket used to store artifacts for the pipeline, if
          the action requires access to that S3 bucket  for  input  or  output
          artifacts.  This  API also returns any secret values defined for the
          action.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            poll-for-jobs
          --action-type-id <value>
          [--max-batch-size <value>]
          [--query-param <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --action-type-id (structure)
          Represents information about an action type.

          category -> (string)
              A category defines what kind of  action  can  be  taken  in  the
              stage,  and  constrains  the provider type for the action. Valid
              categories are limited to one of the following values.

              o Source

              o Build

              o Test

              o Deploy

              o Invoke

              o Approval

          owner -> (string)
              The creator of the action being called. There  are  three  valid
              values for the Owner field in the action category section within
              your pipeline structure: AWS , ThirdParty ,  and  Custom  .  For
              more  information, see Valid Action Types and Providers in Code-
              Pipeline .

          provider -> (string)
              The provider of the service being called by  the  action.  Valid
              providers are determined by the action category. For example, an
              action in the Deploy category type might have a provider of  AWS
              CodeDeploy,  which  would  be  specified as CodeDeploy. For more
              information, see Valid  Action  Types  and  Providers  in  Code-
              Pipeline .

          version -> (string)
              A string that describes the action version.

       Shorthand Syntax:

          category=string,owner=string,provider=string,version=string

       JSON Syntax:

          {
            "category": "Source"|"Build"|"Deploy"|"Test"|"Invoke"|"Approval",
            "owner": "AWS"|"ThirdParty"|"Custom",
            "provider": "string",
            "version": "string"
          }

       --max-batch-size (integer)
          The maximum number of jobs to return in a poll for jobs call.

       --query-param (map)
          A  map  of  property  names  and  values. For an action type with no
          queryable properties, this value must be null or an empty  map.  For
          an action type with a queryable property, you must supply that prop-
          erty as a key in the  map.  Only  jobs  whose  action  configuration
          matches the mapped value are returned.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To view any available jobs

       This example returns information about any jobs for a job worker to act
       upon. This example uses a pre-defined JSON file (MyActionTypeInfo.json)
       to  supply  information  about the action type for which the job worker
       processes jobs. This command is only used for custom actions. When this
       command  is  called, AWS CodePipeline returns temporary credentials for
       the Amazon S3 bucket used to store artifacts  for  the  pipeline.  This
       command  will  also return any secret values defined for the action, if
       any are defined.

       Command:

          aws codepipeline poll-for-jobs --cli-input-json file://MyActionTypeInfo.json

       JSON file sample contents:

          {
            "actionTypeId": {
              "category": "Test",
              "owner": "Custom",
              "provider": "MyJenkinsProviderName",
              "version": "1"
            },
            "maxBatchSize": 5,
            "queryParam": {
                "ProjectName": "MyJenkinsTestProject"
            }
          }

       Output:

          {
           "jobs": [
            {
              "accountId": "111111111111",
              "data": {
                "actionConfiguration": {
                  "__type": "ActionConfiguration",
                  "configuration": {
                    "ProjectName": "MyJenkinsExampleTestProject"
                  }
                },
                "actionTypeId": {
                  "__type": "ActionTypeId",
                  "category": "Test",
                  "owner": "Custom",
                  "provider": "MyJenkinsProviderName",
                  "version": "1"
                },
                "artifactCredentials": {
                  "__type": "AWSSessionCredentials",
                  "accessKeyId": "AKIAIOSFODNN7EXAMPLE",
                  "secretAccessKey": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY",
                  "sessionToken": "fICCQD6m7oRw0uXOjANBgkqhkiG9w0BAQUFADCBiDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6b24xFDASBgNVBAsTC0lBTSBDb25zb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAdBgkqhkiG9w0BCQEWEG5vb25lQGFtYXpvbi5jb20wHhcNMTEwNDI1MjA0NTIxWhcNMTIwNDI0MjA0NTIxWjCBiDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6b24xFDASBgNVBAsTC0lBTSBDb25zb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAdBgkqhkiG9w0BCQEWEG5vb25lQGFtYXpvbi5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMaK0dn+a4GmWIWJ21uUSfwfEvySWtC2XADZ4nB+BLYgVIk60CpiwsZ3G93vUEIO3IyNoH/f0wYK8m9TrDHudUZg3qX4waLG5M43q7Wgc/MbQITxOUSQv7c7ugFFDzQGBzZswY6786m86gpEIbb3OhjZnzcvQAaRHhdlQWIMm2nrAgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAtCu4nUhVVxYUntneD9+h8Mg9q6q+auNKyExzyLwaxlAoo7TJHidbtS4J5iNmZgXL0FkbFFBjvSfpJIlJ00zbhNYS5f6GuoEDmFJl0ZxBHjJnyp378OD8uTs7fLvjx79LjSTbNYiytVbZPQUQ5Yaxu2jXnimvw3rrszlaEXAMPLE="
                },
                "inputArtifacts": [
                  {
                    "__type": "Artifact",
                    "location": {
                      "s3Location": {
                        "bucketName": "codepipeline-us-east-1-11EXAMPLE11",
                        "objectKey": "MySecondPipeline/MyAppBuild/EXAMPLE"
                      },
                      "type": "S3"
                    },
                    "name": "MyAppBuild"
                  }
                ],
                "outputArtifacts": [],
                "pipelineContext": {
                  "__type": "PipelineContext",
                  "action": {
                    "name": "MyJenkinsTest-Action"
                  },
                  "pipelineName": "MySecondPipeline",
                  "stage": {
                    "name": "Testing"
                  }
                }
              },
              "id": "ef66c259-64f9-EXAMPLE",
              "nonce": "3"
            }
           ]
          }

OUTPUT
       jobs -> (list)
          Information about the jobs to take action on.

          (structure)
              Represents information about a job.

              id -> (string)
                 The unique system-generated ID of the job.

              data -> (structure)
                 Other data about a job.

                 actionTypeId -> (structure)
                     Represents information about an action type.

                     category -> (string)
                        A category defines what kind of action can be taken in
                        the  stage,  and  constrains the provider type for the
                        action. Valid categories are limited  to  one  of  the
                        following values.

                        o Source

                        o Build

                        o Test

                        o Deploy

                        o Invoke

                        o Approval

                     owner -> (string)
                        The  creator  of  the  action  being called. There are
                        three valid values for the Owner field in  the  action
                        category section within your pipeline structure: AWS ,
                        ThirdParty , and Custom . For  more  information,  see
                        Valid Action Types and Providers in CodePipeline .

                     provider -> (string)
                        The  provider  of  the  service  being  called  by the
                        action. Valid providers are determined by  the  action
                        category.  For  example, an action in the Deploy cate-
                        gory type might have a  provider  of  AWS  CodeDeploy,
                        which  would  be  specified  as  CodeDeploy.  For more
                        information, see Valid Action Types and  Providers  in
                        CodePipeline .

                     version -> (string)
                        A string that describes the action version.

                 actionConfiguration -> (structure)
                     Represents information about an action configuration.

                     configuration -> (map)
                        The configuration data for the action.

                        key -> (string)

                        value -> (string)

                 pipelineContext -> (structure)
                     Represents  information about a pipeline to a job worker.

                     NOTE:
                        Includes pipelineArn and pipelineExecutionId for  cus-
                        tom jobs.

                     pipelineName -> (string)
                        The  name  of  the  pipeline. This is a user-specified
                        value. Pipeline names must be unique across all  pipe-
                        line names under an Amazon Web Services account.

                     stage -> (structure)
                        The stage of the pipeline.

                        name -> (string)
                            The name of the stage.

                     action -> (structure)
                        The  context of an action to a job worker in the stage
                        of a pipeline.

                        name -> (string)
                            The name of the action in the context of a job.

                        actionExecutionId -> (string)
                            The system-generated unique ID that corresponds to
                            an action's execution.

                     pipelineArn -> (string)
                        The Amazon Resource Name (ARN) of the pipeline.

                     pipelineExecutionId -> (string)
                        The execution ID of the pipeline.

                 inputArtifacts -> (list)
                     The artifact supplied to the job.

                     (structure)
                        Represents  information  about  an  artifact  that  is
                        worked on by actions in the pipeline.

                        name -> (string)
                            The artifact's name.

                        revision -> (string)
                            The artifact's revision ID. Depending on the  type
                            of object, this could be a commit ID (GitHub) or a
                            revision ID (Amazon S3).

                        location -> (structure)
                            The location of an artifact.

                            type -> (string)
                               The type of artifact in the location.

                            s3Location -> (structure)
                               The S3 bucket that contains the artifact.

                               bucketName -> (string)
                                   The name of the S3 bucket.

                               objectKey -> (string)
                                   The key of the object  in  the  S3  bucket,
                                   which uniquely identifies the object in the
                                   bucket.

                 outputArtifacts -> (list)
                     The output of the job.

                     (structure)
                        Represents  information  about  an  artifact  that  is
                        worked on by actions in the pipeline.

                        name -> (string)
                            The artifact's name.

                        revision -> (string)
                            The  artifact's revision ID. Depending on the type
                            of object, this could be a commit ID (GitHub) or a
                            revision ID (Amazon S3).

                        location -> (structure)
                            The location of an artifact.

                            type -> (string)
                               The type of artifact in the location.

                            s3Location -> (structure)
                               The S3 bucket that contains the artifact.

                               bucketName -> (string)
                                   The name of the S3 bucket.

                               objectKey -> (string)
                                   The  key  of  the  object in the S3 bucket,
                                   which uniquely identifies the object in the
                                   bucket.

                 artifactCredentials -> (structure)
                     Represents  an AWS session credentials object. These cre-
                     dentials are temporary credentials that are issued by AWS
                     Secure  Token  Service  (STS). They can be used to access
                     input and output artifacts in the S3 bucket used to store
                     artifacts for the pipeline in AWS CodePipeline.

                     accessKeyId -> (string)
                        The access key for the session.

                     secretAccessKey -> (string)
                        The secret access key for the session.

                     sessionToken -> (string)
                        The token for the session.

                 continuationToken -> (string)
                     A  system-generated  token,  such  as  a  AWS  CodeDeploy
                     deployment ID, required by a  job  to  continue  the  job
                     asynchronously.

                 encryptionKey -> (structure)
                     Represents information about the key used to encrypt data
                     in the artifact store, such as an AWS Key Management Ser-
                     vice (AWS KMS) key.

                     id -> (string)
                        The  ID  used to identify the key. For an AWS KMS key,
                        you can use the key ID, the key ARN, or the alias ARN.

                        NOTE:
                            Aliases  are  recognized  only in the account that
                            created  the  customer  master  key   (CMK).   For
                            cross-account actions, you can only use the key ID
                            or key ARN to identify the key.

                     type -> (string)
                        The type of encryption key, such as an AWS Key Manage-
                        ment  Service (AWS KMS) key. When creating or updating
                        a pipeline, the value must be set to 'KMS'.

              nonce -> (string)
                 A system-generated random number that AWS  CodePipeline  uses
                 to  ensure  that  the  job is being worked on by only one job
                 worker. Use this number in an  AcknowledgeJob request.

              accountId -> (string)
                 The ID of the AWS account to use when performing the job.



                                                               POLL-FOR-JOBS()
