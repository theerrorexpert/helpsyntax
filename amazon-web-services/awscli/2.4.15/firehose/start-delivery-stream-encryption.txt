START-DELIVERY-STREAM-ENCRYPTION()          START-DELIVERY-STREAM-ENCRYPTION()



NAME
       start-delivery-stream-encryption -

DESCRIPTION
       Enables server-side encryption (SSE) for the delivery stream.

       This operation is asynchronous. It returns immediately. When you invoke
       it, Kinesis Data Firehose first  sets  the  encryption  status  of  the
       stream  to  ENABLING , and then to ENABLED . The encryption status of a
       delivery stream is the Status property in  DeliveryStreamEncryptionCon-
       figuration  .  If the operation fails, the encryption status changes to
       ENABLING_FAILED . You can continue to  read  and  write  data  to  your
       delivery  stream while the encryption status is ENABLING , but the data
       is not encrypted. It can take up to 5 seconds after the encryption sta-
       tus  changes  to  ENABLED  before  all  records written to the delivery
       stream are encrypted. To find out  whether  a  record  or  a  batch  of
       records  was  encrypted,  check  the  response  elements  PutRecordOut-
       put$Encrypted and  PutRecordBatchOutput$Encrypted , respectively.

       To check the encryption status of a delivery stream,  use   DescribeDe-
       liveryStream .

       Even  if encryption is currently enabled for a delivery stream, you can
       still invoke this operation on it to change the ARN of the CMK or  both
       its  type and ARN. If you invoke this method to change the CMK, and the
       old CMK is of type CUSTOMER_MANAGED_CMK , Kinesis Data Firehose  sched-
       ules  the grant it had on the old CMK for retirement. If the new CMK is
       of type CUSTOMER_MANAGED_CMK , Kinesis Data Firehose  creates  a  grant
       that  enables  it to use the new CMK to encrypt and decrypt data and to
       manage the grant.

       If a delivery stream already has encryption enabled and then you invoke
       this  operation  to  change the ARN of the CMK or both its type and ARN
       and you get ENABLING_FAILED , this  only  means  that  the  attempt  to
       change  the  CMK  failed. In this case, encryption remains enabled with
       the old CMK.

       If the encryption status of your delivery stream is  ENABLING_FAILED  ,
       you  can  invoke this operation again with a valid CMK. The CMK must be
       enabled and the key policy mustn't explicitly deny the  permission  for
       Kinesis Data Firehose to invoke KMS encrypt and decrypt operations.

       You can enable SSE for a delivery stream only if it's a delivery stream
       that uses DirectPut as its source.

       The  StartDeliveryStreamEncryption   and   StopDeliveryStreamEncryption
       operations have a combined limit of 25 calls per delivery stream per 24
       hours. For example, you reach the limit if you call StartDeliveryStrea-
       mEncryption  13 times and StopDeliveryStreamEncryption 12 times for the
       same delivery stream in a 24-hour period.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            start-delivery-stream-encryption
          --delivery-stream-name <value>
          [--delivery-stream-encryption-configuration-input <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --delivery-stream-name (string)
          The name of the  delivery  stream  for  which  you  want  to  enable
          server-side encryption (SSE).

       --delivery-stream-encryption-configuration-input (structure)
          Used  to  specify the type and Amazon Resource Name (ARN) of the KMS
          key needed for Server-Side Encryption (SSE).

          KeyARN -> (string)
              If you set KeyType to CUSTOMER_MANAGED_CMK ,  you  must  specify
              the Amazon Resource Name (ARN) of the CMK. If you set KeyType to
              AWS_OWNED_CMK , Kinesis Data  Firehose  uses  a  service-account
              CMK.

          KeyType -> (string)
              Indicates  the  type  of  customer  master  key (CMK) to use for
              encryption. The default setting  is  AWS_OWNED_CMK  .  For  more
              information  about  CMKs, see Customer Master Keys (CMKs) . When
              you invoke  CreateDeliveryStream or   StartDeliveryStreamEncryp-
              tion  with  KeyType  set  to  CUSTOMER_MANAGED_CMK, Kinesis Data
              Firehose invokes the Amazon KMS operation CreateGrant to  create
              a grant that allows the Kinesis Data Firehose service to use the
              customer managed CMK to perform encryption and decryption. Kine-
              sis Data Firehose manages that grant.

              When you invoke  StartDeliveryStreamEncryption to change the CMK
              for a delivery stream that is encrypted with a customer  managed
              CMK, Kinesis Data Firehose schedules the grant it had on the old
              CMK for retirement.

              You can use a CMK of type CUSTOMER_MANAGED_CMK to encrypt up  to
              500 delivery streams. If a  CreateDeliveryStream or  StartDeliv-
              eryStreamEncryption operation exceeds this limit,  Kinesis  Data
              Firehose throws a LimitExceededException .

              WARNING:
                 To  encrypt your delivery stream, use symmetric CMKs. Kinesis
                 Data Firehose doesn't support asymmetric CMKs.  For  informa-
                 tion about symmetric and asymmetric CMKs, see About Symmetric
                 and Asymmetric CMKs in the AWS Key Management Service  devel-
                 oper guide.

       Shorthand Syntax:

          KeyARN=string,KeyType=string

       JSON Syntax:

          {
            "KeyARN": "string",
            "KeyType": "AWS_OWNED_CMK"|"CUSTOMER_MANAGED_CMK"
          }

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       None



                                            START-DELIVERY-STREAM-ENCRYPTION()
