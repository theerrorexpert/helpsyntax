DESCRIBE-FRAMEWORK()                                      DESCRIBE-FRAMEWORK()



NAME
       describe-framework -

DESCRIPTION
       Returns the framework details for the specified FrameworkName .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            describe-framework
          --framework-name <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --framework-name (string)
          The unique name of a framework.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       FrameworkName -> (string)
          The unique name of a framework.

       FrameworkArn -> (string)
          An  Amazon  Resource Name (ARN) that uniquely identifies a resource.
          The format of the ARN depends on the resource type.

       FrameworkDescription -> (string)
          An optional description of the framework.

       FrameworkControls -> (list)
          A list of the controls that make up the framework. Each  control  in
          the list has a name, input parameters, and scope.

          (structure)
              Contains  detailed  information  about  all of the controls of a
              framework. Each framework must contain at least one control.

              ControlName -> (string)
                 The name of a control. This name is between 1 and 256 charac-
                 ters.

              ControlInputParameters -> (list)
                 A list of ParameterName and ParameterValue pairs.

                 (structure)
                     A  list  of  parameters for a control. A control can have
                     zero, one, or more than one parameter. An  example  of  a
                     control with two parameters is: "backup plan frequency is
                     at least daily and the retention period  is  at  least  1
                     year ". The first parameter is daily . The second parame-
                     ter is 1 year .

                     ParameterName -> (string)
                        The name of a parameter, for  example,  BackupPlanFre-
                        quency .

                     ParameterValue -> (string)
                        The value of parameter, for example, hourly .

              ControlScope -> (structure)
                 The  scope  of  a control. The control scope defines what the
                 control will evaluate. Three examples of control scopes  are:
                 a specific backup plan, all backup plans with a specific tag,
                 or all backup plans. For more information, see ControlScope .

                 ComplianceResourceIds -> (list)
                     The  ID of the only Amazon Web Services resource that you
                     want your control scope to contain.

                     (string)

                 ComplianceResourceTypes -> (list)
                     Describes whether the control scope includes one or  more
                     types of resources, such as EFS or RDS .

                     (string)

                 Tags -> (map)
                     The  tag  key-value pair applied to those Amazon Web Ser-
                     vices resources that you want to  trigger  an  evaluation
                     for  a  rule. A maximum of one key-value pair can be pro-
                     vided. The tag value is optional, but  it  cannot  be  an
                     empty   string.   The  structure  to  assign  a  tag  is:
                     [{"Key":"string","Value":"string"}] .

                     key -> (string)

                     value -> (string)

       CreationTime -> (timestamp)
          The date and time that a framework is created, in  Unix  format  and
          Coordinated Universal Time (UTC). The value of CreationTime is accu-
          rate to milliseconds. For example, the value  1516925490.087  repre-
          sents Friday, January 26, 2018 12:11:30.087 AM.

       DeploymentStatus -> (string)
          The deployment status of a framework. The statuses are:
              CREATE_IN_PROGRESS  |  UPDATE_IN_PROGRESS | DELETE_IN_PROGRESS |
              COMPLETED | FAILED

       FrameworkStatus -> (string)
          A framework consists of one or more controls. Each control governs a
          resource, such as backup plans, backup selections, backup vaults, or
          recovery points. You can also turn Config recording on  or  off  for
          each resource. The statuses are:

          o ACTIVE  when  recording is turned on for all resources governed by
            the framework.

          o PARTIALLY_ACTIVE when recording is turned off  for  at  least  one
            resource governed by the framework.

          o INACTIVE  when  recording is turned off for all resources governed
            by the framework.

          o UNAVAILABLE when Backup is unable to validate recording status  at
            this time.

       IdempotencyToken -> (string)
          A  customer-chosen  string  that  you can use to distinguish between
          otherwise identical calls to DescribeFrameworkOutput  .  Retrying  a
          successful request with the same idempotency token results in a suc-
          cess message with no action taken.



                                                          DESCRIBE-FRAMEWORK()
