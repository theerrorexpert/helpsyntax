IMPORT-TERMINOLOGY()                                      IMPORT-TERMINOLOGY()



NAME
       import-terminology -

DESCRIPTION
       Creates  or  updates  a custom terminology, depending on whether or not
       one already exists for the given terminology name. Importing  a  termi-
       nology  with the same name as an existing one will merge the terminolo-
       gies based on the chosen merge strategy. Currently, the only  supported
       merge strategy is OVERWRITE, and so the imported terminology will over-
       write an existing terminology of the same name.

       If you import a terminology that overwrites an existing  one,  the  new
       terminology  take  up to 10 minutes to fully propagate and be available
       for use in a translation due to cache policies with the DataPlane  ser-
       vice that performs the translations.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            import-terminology
          --name <value>
          --merge-strategy <value>
          [--description <value>]
          [--terminology-data <value>]
          [--encryption-key <value>]
          --data-file <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --name (string)
          The name of the custom terminology being imported.

       --merge-strategy (string)
          The  merge  strategy  of the custom terminology being imported. Cur-
          rently, only the OVERWRITE merge  strategy  is  supported.  In  this
          case,  the imported terminology will overwrite an existing terminol-
          ogy of the same name.

          Possible values:

          o OVERWRITE

       --description (string)
          The description of the custom terminology being imported.

       --terminology-data (structure)
          The terminology data for the custom terminology being imported.

          Format -> (string)
              The data format of the custom terminology.

          Directionality -> (string)
              The  directionality  of  your  terminology  resource   indicates
              whether it has one source language (uni-directional) or multiple
              (multi-directional).
                 UNI

              The terminology resource has one source language  (for  example,
              the  first column in a CSV file), and all of its other languages
              are target languages.
                 MULTI

              Any language in the terminology resource can be the source  lan-
              guage or a target language. A single multi-directional terminol-
              ogy resource can be used for jobs that translate different  lan-
              guage  pairs.  For example, if the terminology contains terms in
              English and Spanish, then it can be used for jobs that translate
              English to Spanish and jobs that translate Spanish to English.

              When you create a custom terminology resource without specifying
              the directionality, it behaves as  uni-directional  terminology,
              although this parameter will have a null value.

       Shorthand Syntax:

          Format=string,Directionality=string

       JSON Syntax:

          {
            "Format": "CSV"|"TMX"|"TSV",
            "Directionality": "UNI"|"MULTI"
          }

       --encryption-key (structure)
          The encryption key for the custom terminology being imported.

          Type -> (string)
              The  type  of encryption key used by Amazon Translate to encrypt
              this object.

          Id -> (string)
              The Amazon Resource Name (ARN) of the encryption key being  used
              to encrypt this object.

       Shorthand Syntax:

          Type=string,Id=string

       JSON Syntax:

          {
            "Type": "KMS",
            "Id": "string"
          }

       --data-file (blob)
          The  path  to  the  file  of  the  code  you are uploading. Example:
          fileb://data.csv

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To import a custom terminology from a file

       The following import-terminology example  creates a terminology  called
       MyTestTerminology from the test-terminology.csv file:

          aws translate import-terminology \
              --name MyTestTerminology \
              --description "Creating a test terminology in AWS Translate" \
              --merge-strategy OVERWRITE \
              --data-file fileb://test-terminology.csv \
              --terminology-data Format=CSV

       Contents of test-terminology.csv:
          en,fr,es,zh  Hello  world!,Bonjour  tout  le monde!,Hola Mundo!,????
          Amazon,Amazon,Amazon,Amazon

       Output:

          {
              "TerminologyProperties": {
                  "SourceLanguageCode": "en",
                  "Name": "MyTestTerminology",
                  "TargetLanguageCodes": [
                      "fr",
                      "es",
                      "zh"
                  ],
                  "SizeBytes": 97,
                  "LastUpdatedAt": 1571089500.851,
                  "CreatedAt": 1571089500.851,
                  "TermCount": 6,
                  "Arn": "arn:aws:translate:us-west-2:123456789012:terminology/MyTestTerminology/LATEST",
                  "Description": "Creating a test terminology in AWS Translate"
              }
          }

OUTPUT
       TerminologyProperties -> (structure)
          The properties of the custom terminology being imported.

          Name -> (string)
              The name of the custom terminology.

          Description -> (string)
              The description of the custom terminology properties.

          Arn -> (string)
              The Amazon Resource Name (ARN) of the custom terminology.

          SourceLanguageCode -> (string)
              The language code for the source text of the translation request
              for which the custom terminology is being used.

          TargetLanguageCodes -> (list)
              The  language  codes for the target languages available with the
              custom terminology resource. All possible target  languages  are
              returned in array.

              (string)

          EncryptionKey -> (structure)
              The encryption key for the custom terminology.

              Type -> (string)
                 The  type  of  encryption  key  used  by  Amazon Translate to
                 encrypt this object.

              Id -> (string)
                 The Amazon Resource Name (ARN) of the  encryption  key  being
                 used to encrypt this object.

          SizeBytes -> (integer)
              The size of the file used when importing a custom terminology.

          TermCount -> (integer)
              The number of terms included in the custom terminology.

          CreatedAt -> (timestamp)
              The  time  at which the custom terminology was created, based on
              the timestamp.

          LastUpdatedAt -> (timestamp)
              The time at which the custom terminology was last update,  based
              on the timestamp.

          Directionality -> (string)
              The   directionality  of  your  terminology  resource  indicates
              whether it has one source language (uni-directional) or multiple
              (multi-directional).
                 UNI

              The terminology resource has one source language (the first col-
              umn in a CSV file), and all of its other  languages  are  target
              languages.
                 MULTI

              Any  language in the terminology resource can be the source lan-
              guage.

          Message -> (string)
              Additional information from Amazon Translate about the terminol-
              ogy resource.

          SkippedTermCount -> (integer)
              The  number  of  terms  in  the input file that Amazon Translate
              skipped when you created or updated the terminology resource.

          Format -> (string)
              The format of the custom terminology input file.

       AuxiliaryDataLocation -> (structure)
          The Amazon S3 location of a file that provides any errors  or  warn-
          ings  that  were  produced by your input file. This file was created
          when Amazon Translate attempted to create  a  terminology  resource.
          The  location is returned as a presigned URL to that has a 30 minute
          expiration.

          RepositoryType -> (string)
              The repository type for the custom terminology data.

          Location -> (string)
              The Amazon S3 location of the  most  recent  custom  terminology
              input file that was successfully imported into Amazon Translate.
              The location is returned as a presigned URL that has a 30 minute
              expiration.

              WARNING:
                 Amazon Translate doesn't scan all input files for the risk of
                 CSV injection attacks.

                 CSV injection occurs when a .csv or .tsv file is  altered  so
                 that a record contains malicious code. The record begins with
                 a special character, such as =, +, -, or @. When the file  is
                 opened  in a spreadsheet program, the program might interpret
                 the record as a formula and run the code within it.

                 Before you download an input file from Amazon S3, ensure that
                 you recognize the file and trust its creator.



                                                          IMPORT-TERMINOLOGY()
