LIST-STUDIO-COMPONENTS()                              LIST-STUDIO-COMPONENTS()



NAME
       list-studio-components -

DESCRIPTION
       Lists the StudioComponents in a studio.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       list-studio-components is a paginated operation. Multiple API calls may
       be issued in order to retrieve the entire data set of results. You  can
       disable pagination by providing the --no-paginate argument.  When using
       --output text and the --query argument on  a  paginated  response,  the
       --query  argument  must  extract data from the results of the following
       query expressions: studioComponents

SYNOPSIS
            list-studio-components
          [--states <value>]
          --studio-id <value>
          [--types <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --states (list)
          Filters the request to studio components that  are  in  one  of  the
          given states.

          (string)
              The current state of the studio component resource.

              While a studio component is being created, modified, or deleted,
              its state will equal "CREATE_IN_PROGRESS", "UPDATE_IN_PROGRESS",
              or "DELETE_IN_PROGRESS"

              These are called 'transition states'.

              No modifications may be made to the studio component while it is
              in a transition state.

              If creation of the resource fails, the state will change to CRE-
              ATE_FAILED.  The resource StatusCode and StatusMessage will pro-
              vide more information of why creation failed.  The  resource  in
              this state will automatically be deleted from your account after
              a period of time.

              If updating  the  resource  fails,  the  state  will  change  to
              UPDATE_FAILED.  The  resource  StatusCode and StatusMessage will
              provide more information of why the update failed. The  resource
              will  be returned to the state it was in when the update request
              was invoked.

              If deleting  the  resource  fails,  the  state  will  change  to
              DELETE_FAILED.  The  resource  StatusCode and StatusMessage will
              provide more information of why the update failed. The  resource
              will  be returned to the state it was in when the update request
              was invoked. After the resource is deleted successfully, it will
              change to the "DELETED" state. The resource will no longer count
              against service quotas and cannot be  used  or  acted  upon  any
              futher.  It  will be removed from your account after a period of
              time.

       Syntax:

          "string" "string" ...

          Where valid values are:
            CREATE_IN_PROGRESS
            READY
            UPDATE_IN_PROGRESS
            DELETE_IN_PROGRESS
            DELETED
            DELETE_FAILED
            CREATE_FAILED
            UPDATE_FAILED

       --studio-id (string)
          The studio ID.

       --types (list)
          Filters the request to studio components that  are  of  one  of  the
          given types.

          (string)

       Syntax:

          "string" "string" ...

          Where valid values are:
            ACTIVE_DIRECTORY
            SHARED_FILE_SYSTEM
            COMPUTE_FARM
            LICENSE_SERVICE
            CUSTOM

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size  results  in  more  calls to the AWS service,
          retrieving fewer items in each call. This can help prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       nextToken -> (string)
          The token for the next set of results, or null if there are no  more
          results.

       studioComponents -> (list)
          A collection of studio components.

          (structure)
              A studio component represents a network resource to be used by a
              studio's users and workflows. A typical studio  contains  studio
              components for each of the following: render farm, Active Direc-
              tory, licensing, and file system.

              Access to a studio component is managed by  specifying  security
              groups for the resource, as well as its endpoint.

              A studio component also has a set of initialization scripts that
              are returned by GetLaunchProfileInitialization . These  initial-
              ization  scripts run on streaming sessions when they start. They
              provide users with flexibility in  controlling  how  the  studio
              resources are configured on a streaming session.

              arn -> (string)
                 The ARN of the resource.

              configuration -> (structure)
                 The configuration of the studio component, based on component
                 type.

                 activeDirectoryConfiguration -> (structure)
                     The  configuration  for  a  Microsoft  Active   Directory
                     (Microsoft AD) studio resource.

                     computerAttributes -> (list)
                        A collection of custom attributes for an Active Direc-
                        tory computer.

                        (structure)
                            An LDAP attribute of an Active Directory  computer
                            account, in the form of a name:value pair.

                            name -> (string)
                               The name for the LDAP attribute.

                            value -> (string)
                               The value for the LDAP attribute.

                     directoryId -> (string)
                        The   directory   ID  of  the  Directory  Service  for
                        Microsoft Active Directory to access using this studio
                        component.

                     organizationalUnitDistinguishedName -> (string)
                        The  distinguished  name  (DN) and organizational unit
                        (OU) of an Active Directory computer.

                 computeFarmConfiguration -> (structure)
                     The configuration for a render farm  that  is  associated
                     with a studio resource.

                     activeDirectoryUser -> (string)
                        The  name  of an Active Directory user that is used on
                        ComputeFarm worker instances.

                     endpoint -> (string)
                        The endpoint of the ComputeFarm that  is  accessed  by
                        the studio component resource.

                 licenseServiceConfiguration -> (structure)
                     The  configuration  for a license service that is associ-
                     ated with a studio resource.

                     endpoint -> (string)
                        The endpoint of the license service that  is  accessed
                        by the studio component resource.

                 sharedFileSystemConfiguration -> (structure)
                     The  configuration  for a shared file storage system that
                     is associated with a studio resource.

                     endpoint -> (string)
                        The  endpoint  of  the  shared  file  system  that  is
                        accessed by the studio component resource.

                     fileSystemId -> (string)
                        The unique identifier for a file system.

                     linuxMountPoint -> (string)
                        The mount location for a shared file system on a Linux
                        virtual workstation.

                     shareName -> (string)
                        The name of the file share.

                     windowsMountDrive -> (string)
                        The mount location for a shared file system on a  Win-
                        dows virtual workstation.

              createdAt -> (timestamp)
                 The Unix epoch timestamp in seconds for when the resource was
                 created.

              createdBy -> (string)
                 The user ID of the user that created the studio component.

              description -> (string)
                 A  human-readable  description  for  the   studio   component
                 resource.

              ec2SecurityGroupIds -> (list)
                 The  EC2  security  groups  that control access to the studio
                 component.

                 (string)

              initializationScripts -> (list)
                 Initialization scripts for studio components.

                 (structure)
                     Initialization scripts for studio components.

                     launchProfileProtocolVersion -> (string)
                        The version number of the protocol that is used by the
                        launch    profile.   The   only   valid   version   is
                        "2021-03-31".

                     platform -> (string)
                        The platform of the initialization script, either WIN-
                        DOWS or LINUX.

                     runContext -> (string)
                        The  method  to  use  when  running the initialization
                        script.

                     script -> (string)
                        The initialization script.

              name -> (string)
                 A friendly name for the studio component resource.

              scriptParameters -> (list)
                 Parameters for the studio component scripts.

                 (structure)
                     A parameter for a studio component script, in the form of
                     a key:value pair.

                     key -> (string)
                        A script parameter key.

                     value -> (string)
                        A script parameter value.

              state -> (string)
                 The current state.

              statusCode -> (string)
                 The status code.

              statusMessage -> (string)
                 The status message for the studio component.

              studioComponentId -> (string)
                 The unique identifier for a studio component resource.

              subtype -> (string)
                 The specific subtype of a studio component.

              tags -> (map)
                 A  collection of labels, in the form of key:value pairs, that
                 apply to this resource.

                 key -> (string)

                 value -> (string)

              type -> (string)
                 The type of the studio component.

              updatedAt -> (timestamp)
                 The Unix epoch timestamp in seconds for when the resource was
                 updated.

              updatedBy -> (string)
                 The  user  ID  of  the  user  that  most recently updated the
                 resource.



                                                      LIST-STUDIO-COMPONENTS()
