START-INSTANCE-REFRESH()                              START-INSTANCE-REFRESH()



NAME
       start-instance-refresh -

DESCRIPTION
       Starts a new instance refresh operation. An instance refresh performs a
       rolling replacement of all or some instances in an Auto Scaling  group.
       Each  instance is terminated first and then replaced, which temporarily
       reduces the capacity available within your Auto Scaling group.

       This operation is part of the instance refresh feature  in  Amazon  EC2
       Auto  Scaling,  which  helps  you update instances in your Auto Scaling
       group. This feature is helpful, for example, when you have a new AMI or
       a  new  user data script. You just need to create a new launch template
       that specifies the new AMI or user data script. Then start an  instance
       refresh  to  immediately begin the process of updating instances in the
       group.

       If the call succeeds, it creates a new instance refresh request with  a
       unique  ID that you can use to track its progress. To query its status,
       call the   DescribeInstanceRefreshes  API.  To  describe  the  instance
       refreshes  that  have  already run, call the  DescribeInstanceRefreshes
       API. To cancel an instance refresh operation in progress, use the  Can-
       celInstanceRefresh API.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            start-instance-refresh
          --auto-scaling-group-name <value>
          [--strategy <value>]
          [--desired-configuration <value>]
          [--preferences <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --auto-scaling-group-name (string)
          The name of the Auto Scaling group.

       --strategy (string)
          The  strategy  to use for the instance refresh. The only valid value
          is Rolling .

          A rolling update  helps  you  update  your  instances  gradually.  A
          rolling  update can fail due to failed health checks or if instances
          are on standby or are protected from scale in. If the rolling update
          process  fails,  any instances that are replaced are not rolled back
          to their previous configuration.

          Possible values:

          o Rolling

       --desired-configuration (structure)
          The desired configuration. For example,  the  desired  configuration
          can  specify  a  new launch template or a new version of the current
          launch template.

          Once the instance refresh succeeds, Amazon EC2 Auto Scaling  updates
          the  settings  of  the Auto Scaling group to reflect the new desired
          configuration.

          NOTE:
              When you specify a new launch template or a new version  of  the
              current launch template for your desired configuration, consider
              enabling the  SkipMatching  property  in  preferences.  If  it's
              enabled,  Amazon EC2 Auto Scaling skips replacing instances that
              already use the specified launch template and version. This  can
              help  you reduce the number of replacements that are required to
              apply updates.

          LaunchTemplate -> (structure)
              Describes the launch template and the version of the launch tem-
              plate  that  Amazon  EC2  Auto Scaling uses to launch Amazon EC2
              instances. For more  information  about  launch  templates,  see
              Launch templates in the Amazon EC2 Auto Scaling User Guide .

              LaunchTemplateId -> (string)
                 The  ID  of  the launch template. To get the template ID, use
                 the Amazon EC2  DescribeLaunchTemplates  API  operation.  New
                 launch   templates  can  be  created  using  the  Amazon  EC2
                 CreateLaunchTemplate API.

                 Conditional: You must specify either a LaunchTemplateId or  a
                 LaunchTemplateName .

              LaunchTemplateName -> (string)
                 The  name  of  the launch template. To get the template name,
                 use the Amazon EC2 DescribeLaunchTemplates API operation. New
                 launch   templates  can  be  created  using  the  Amazon  EC2
                 CreateLaunchTemplate API.

                 Conditional: You must specify either a LaunchTemplateId or  a
                 LaunchTemplateName .

              Version -> (string)
                 The  version  number, $Latest , or $Default . To get the ver-
                 sion       number,       use       the       Amazon       EC2
                 DescribeLaunchTemplateVersions API operation. New launch tem-
                 plate  versions  can  be  created  using   the   Amazon   EC2
                 CreateLaunchTemplateVersion  API.  If  the value is $Latest ,
                 Amazon EC2 Auto Scaling selects the  latest  version  of  the
                 launch  template  when  launching  instances. If the value is
                 $Default , Amazon EC2 Auto Scaling selects the  default  ver-
                 sion  of  the  launch  template when launching instances. The
                 default value is $Default .

          MixedInstancesPolicy -> (structure)
              Describes a mixed instances policy.  A  mixed  instances  policy
              contains  the  instance  types  that Amazon EC2 Auto Scaling can
              launch and other information that Amazon EC2  Auto  Scaling  can
              use  to  launch instances and help optimize your costs. For more
              information, see Auto  Scaling  groups  with  multiple  instance
              types  and  purchase options in the Amazon EC2 Auto Scaling User
              Guide .

              LaunchTemplate -> (structure)
                 Specifies the launch template to use and the  instance  types
                 (overrides)  that are used to launch EC2 instances to fulfill
                 On-Demand and Spot capacities. Required when creating a mixed
                 instances policy.

                 LaunchTemplateSpecification -> (structure)
                     The launch template to use.

                     LaunchTemplateId -> (string)
                        The ID of the launch template. To get the template ID,
                        use the Amazon EC2 DescribeLaunchTemplates API  opera-
                        tion.  New  launch  templates can be created using the
                        Amazon EC2 CreateLaunchTemplate API.

                        Conditional: You  must  specify  either  a  LaunchTem-
                        plateId or a LaunchTemplateName .

                     LaunchTemplateName -> (string)
                        The  name  of the launch template. To get the template
                        name, use the Amazon EC2  DescribeLaunchTemplates  API
                        operation.  New  launch templates can be created using
                        the Amazon EC2 CreateLaunchTemplate API.

                        Conditional: You  must  specify  either  a  LaunchTem-
                        plateId or a LaunchTemplateName .

                     Version -> (string)
                        The version number, $Latest , or $Default . To get the
                        version     number,     use     the     Amazon     EC2
                        DescribeLaunchTemplateVersions   API   operation.  New
                        launch template versions can be created using the Ama-
                        zon  EC2 CreateLaunchTemplateVersion API. If the value
                        is $Latest , Amazon EC2 Auto Scaling selects the  lat-
                        est  version  of  the  launch  template when launching
                        instances. If the value is $Default , Amazon EC2  Auto
                        Scaling selects the default version of the launch tem-
                        plate when launching instances. The default  value  is
                        $Default .

                 Overrides -> (list)
                     Any properties that you specify override the same proper-
                     ties in the launch template. If not provided, Amazon  EC2
                     Auto  Scaling  uses  the  instance  type or instance type
                     requirements specified in the  launch  template  when  it
                     launches an instance.

                     The  overrides  can  include  either one or more instance
                     types or a set of instance requirements, but not both.

                     (structure)
                        Describes an override for a launch template. For  more
                        information,  see  Configuring overrides in the Amazon
                        EC2 Auto Scaling User Guide .

                        InstanceType -> (string)
                            The instance type, such as m3.xlarge  .  You  must
                            use  an  instance  type  that is supported in your
                            requested Region and Availability Zones. For  more
                            information,  see  Instance  types  in  the Amazon
                            Elastic Compute Cloud User Guide .

                        WeightedCapacity -> (string)
                            The number  of  capacity  units  provided  by  the
                            instance  type  specified in InstanceType in terms
                            of virtual CPUs, memory, storage,  throughput,  or
                            other  relative performance characteristic. When a
                            Spot or On-Demand Instance is launched, the capac-
                            ity  units count toward the desired capacity. Ama-
                            zon EC2 Auto Scaling launches instances until  the
                            desired  capacity  is  totally  fulfilled, even if
                            this results in an overage. For example, if  there
                            are  two  units remaining to fulfill capacity, and
                            Amazon  EC2  Auto  Scaling  can  only  launch   an
                            instance  with  a  WeightedCapacity of five units,
                            the instance is launched, and the desired capacity
                            is  exceeded by three units. For more information,
                            see Instance weighting for Amazon EC2 Auto Scaling
                            in  the Amazon EC2 Auto Scaling User Guide . Value
                            must be in the range of 1999.

                        LaunchTemplateSpecification -> (structure)
                            Provides the  launch  template  to  be  used  when
                            launching the instance type specified in Instance-
                            Type . For  example,  some  instance  types  might
                            require a launch template with a different AMI. If
                            not provided, Amazon EC2  Auto  Scaling  uses  the
                            launch  template  that's  defined  for  your mixed
                            instances  policy.  For  more   information,   see
                            Specifying  a  different  launch  template  for an
                            instance type in the Amazon EC2 Auto Scaling  User
                            Guide .

                            LaunchTemplateId -> (string)
                               The  ID of the launch template. To get the tem-
                               plate    ID,     use     the     Amazon     EC2
                               DescribeLaunchTemplates   API   operation.  New
                               launch templates can be created using the  Ama-
                               zon EC2 CreateLaunchTemplate API.

                               Conditional:   You   must   specify   either  a
                               LaunchTemplateId or a LaunchTemplateName .

                            LaunchTemplateName -> (string)
                               The name of the launch  template.  To  get  the
                               template    name,    use    the    Amazon   EC2
                               DescribeLaunchTemplates  API   operation.   New
                               launch  templates can be created using the Ama-
                               zon EC2 CreateLaunchTemplate API.

                               Conditional:  You   must   specify   either   a
                               LaunchTemplateId or a LaunchTemplateName .

                            Version -> (string)
                               The  version number, $Latest , or $Default . To
                               get the version  number,  use  the  Amazon  EC2
                               DescribeLaunchTemplateVersions  API  operation.
                               New launch template  versions  can  be  created
                               using          the          Amazon          EC2
                               CreateLaunchTemplateVersion API. If  the  value
                               is  $Latest  ,  Amazon EC2 Auto Scaling selects
                               the latest version of the launch template  when
                               launching instances. If the value is $Default ,
                               Amazon EC2 Auto  Scaling  selects  the  default
                               version  of  the launch template when launching
                               instances. The default value is $Default .

                        InstanceRequirements -> (structure)
                            The  instance  requirements.  When   you   specify
                            instance  requirements,  Amazon  EC2  Auto Scaling
                            finds instance types that  satisfy  your  require-
                            ments, and then uses your On-Demand and Spot allo-
                            cation strategies to launch instances  from  these
                            instance  types, in the same way as when you spec-
                            ify a list of specific instance types.

                            VCpuCount -> (structure)
                               The minimum and maximum number of vCPUs for  an
                               instance type.

                               Min -> (integer)
                                   The minimum number of vCPUs.

                               Max -> (integer)
                                   The maximum number of vCPUs.

                            MemoryMiB -> (structure)
                               The  minimum  and  maximum instance memory size
                               for an instance type, in MiB.

                               Min -> (integer)
                                   The memory minimum in MiB.

                               Max -> (integer)
                                   The memory maximum in MiB.

                            CpuManufacturers -> (list)
                               Lists  which  specific  CPU  manufacturers   to
                               include.

                               o For  instance  types with Intel CPUs, specify
                                 intel .

                               o For instance types with AMD CPUs, specify amd
                                 .

                               o For  instance  types with Amazon Web Services
                                 CPUs, specify amazon-web-services .

                               NOTE:
                                   Don't confuse the CPU hardware manufacturer
                                   with   the   CPU   hardware   architecture.
                                   Instances will be launched with a  compati-
                                   ble  CPU  architecture  based on the Amazon
                                   Machine Image (AMI)  that  you  specify  in
                                   your launch template.

                               Default: Any manufacturer

                               (string)

                            MemoryGiBPerVCpu -> (structure)
                               The  minimum  and  maximum amount of memory per
                               vCPU for an instance type, in GiB.

                               Default: No minimum or maximum

                               Min -> (double)
                                   The memory minimum in GiB.

                               Max -> (double)
                                   The memory maximum in GiB.

                            ExcludedInstanceTypes -> (list)
                               Lists which instance types to exclude. You  can
                               use strings with one or more wild cards, repre-
                               sented by an asterisk (* ). The  following  are
                               examples: c5* , m5a.* , r* , *3* .

                               For  example,  if  you  specify  c5*  , you are
                               excluding the entire C5 instance family,  which
                               includes all C5a and C5n instance types. If you
                               specify m5a.* , you are excluding all  the  M5a
                               instance types, but not the M5n instance types.

                               Default: No excluded instance types

                               (string)

                            InstanceGenerations -> (list)
                               Indicates whether current or  previous  genera-
                               tion instance types are included.

                               o For  current generation instance types, spec-
                                 ify current . The current generation includes
                                 EC2  instance types currently recommended for
                                 use. This typically includes the  latest  two
                                 to three generations in each instance family.
                                 For more information, see Instance  types  in
                                 the Amazon EC2 User Guide for Linux Instances
                                 .

                               o For previous generation instance types, spec-
                                 ify previous .

                               Default: Any current or previous generation

                               (string)

                            SpotMaxPricePercentageOverLowestPrice -> (integer)
                               The  price  protection   threshold   for   Spot
                               Instances.  This is the maximum youll pay for a
                               Spot Instance, expressed as a percentage higher
                               than the cheapest M, C, or R instance type with
                               your specified attributes. When Amazon EC2 Auto
                               Scaling   selects   instance  types  with  your
                               attributes,  we  will  exclude  instance  types
                               whose  price is higher than your threshold. The
                               parameter accepts an integer, which Amazon  EC2
                               Auto  Scaling  interprets  as  a percentage. To
                               turn  off  price  protection,  specify  a  high
                               value, such as 999999 .

                               Default: 100

                            OnDemandMaxPricePercentageOverLowestPrice       ->
                            (integer)
                               The price protection  threshold  for  On-Demand
                               Instances. This is the maximum youll pay for an
                               On-Demand Instance, expressed as  a  percentage
                               higher  than  the  cheapest M, C, or R instance
                               type with your specified attributes. When  Ama-
                               zon  EC2  Auto  Scaling  selects instance types
                               with your attributes, we will exclude  instance
                               types  whose  price is higher than your thresh-
                               old. The parameter accepts  an  integer,  which
                               Amazon  EC2  Auto  Scaling interprets as a per-
                               centage. To turn off price protection,  specify
                               a high value, such as 999999 .

                               Default: 20

                            BareMetal -> (string)
                               Indicates whether bare metal instance types are
                               included, excluded, or required.

                               Default: excluded

                            BurstablePerformance -> (string)
                               Indicates   whether    burstable    performance
                               instance   types  are  included,  excluded,  or
                               required. For more information,  see  Burstable
                               performance  instances  in  the Amazon EC2 User
                               Guide for Linux Instances .

                               Default: excluded

                            RequireHibernateSupport -> (boolean)
                               Indicates whether instance types  must  provide
                               On-Demand Instance hibernation support.

                               Default: false

                            NetworkInterfaceCount -> (structure)
                               The  minimum  and  maximum  number  of  network
                               interfaces for an instance type.

                               Default: No minimum or maximum

                               Min -> (integer)
                                   The minimum number of network interfaces.

                               Max -> (integer)
                                   The maximum number of network interfaces.

                            LocalStorage -> (string)
                               Indicates whether instance types with  instance
                               store   volumes   are  included,  excluded,  or
                               required. For more information, see Amazon  EC2
                               instance store in the Amazon EC2 User Guide for
                               Linux Instances .

                               Default: included

                            LocalStorageTypes -> (list)
                               Indicates the type of  local  storage  that  is
                               required.

                               o For instance types with hard disk drive (HDD)
                                 storage, specify hdd .

                               o For instance types  with  solid  state  drive
                                 (SSD) storage, specify sdd .

                               Default: Any local storage type

                               (string)

                            TotalLocalStorageGB -> (structure)
                               The  minimum  and  maximum  total local storage
                               size for an instance type, in GB.

                               Default: No minimum or maximum

                               Min -> (double)
                                   The storage minimum in GB.

                               Max -> (double)
                                   The storage maximum in GB.

                            BaselineEbsBandwidthMbps -> (structure)
                               The minimum and maximum baseline bandwidth per-
                               formance  for  an  instance  type, in Mbps. For
                               more  information,  see   Amazon   EBSoptimized
                               instances  in  the  Amazon  EC2  User Guide for
                               Linux Instances .

                               Default: No minimum or maximum

                               Min -> (integer)
                                   The minimum value in Mbps.

                               Max -> (integer)
                                   The maximum value in Mbps.

                            AcceleratorTypes -> (list)
                               Lists the accelerator types that must be on  an
                               instance type.

                               o For  instance  types  with  GPU accelerators,
                                 specify gpu .

                               o For instance types  with  FPGA  accelerators,
                                 specify fpga .

                               o For  instance  types with inference accelera-
                                 tors, specify inference .

                               Default: Any accelerator type

                               (string)

                            AcceleratorCount -> (structure)
                               The minimum and maximum number of  accelerators
                               (GPUs, FPGAs, or Amazon Web Services Inferentia
                               chips) for an instance type.

                               To exclude accelerator-enabled instance  types,
                               set Max to 0 .

                               Default: No minimum or maximum

                               Min -> (integer)
                                   The minimum value.

                               Max -> (integer)
                                   The maximum value.

                            AcceleratorManufacturers -> (list)
                               Indicates  whether  instance  types  must  have
                               accelerators by specific manufacturers.

                               o For instance types with NVIDIA devices, spec-
                                 ify nvidia .

                               o For  instance types with AMD devices, specify
                                 amd .

                               o For instance types with Amazon  Web  Services
                                 devices, specify amazon-web-services .

                               o For instance types with Xilinx devices, spec-
                                 ify xilinx .

                               Default: Any manufacturer

                               (string)

                            AcceleratorNames -> (list)
                               Lists the  accelerators  that  must  be  on  an
                               instance type.

                               o For  instance  types  with  NVIDIA A100 GPUs,
                                 specify a100 .

                               o For instance types  with  NVIDIA  V100  GPUs,
                                 specify v100 .

                               o For  instance  types  with  NVIDIA  K80 GPUs,
                                 specify k80 .

                               o For instance types with NVIDIA T4 GPUs, spec-
                                 ify t4 .

                               o For  instance  types  with  NVIDIA  M60 GPUs,
                                 specify m60 .

                               o For instance types with AMD Radeon  Pro  V520
                                 GPUs, specify radeon-pro-v520 .

                               o For  instance  types  with Xilinx VU9P FPGAs,
                                 specify vu9p .

                               Default: Any accelerator

                               (string)

                            AcceleratorTotalMemoryMiB -> (structure)
                               The minimum and maximum total memory  size  for
                               the accelerators on an instance type, in MiB.

                               Default: No minimum or maximum

                               Min -> (integer)
                                   The memory minimum in MiB.

                               Max -> (integer)
                                   The memory maximum in MiB.

              InstancesDistribution -> (structure)
                 Specifies the instances distribution.

                 OnDemandAllocationStrategy -> (string)
                     The order of the launch template overrides to use in ful-
                     filling On-Demand capacity.

                     If you specify lowest-price ,  Amazon  EC2  Auto  Scaling
                     uses  price  to determine the order, launching the lowest
                     price first.

                     If you specify prioritized , Amazon EC2 Auto Scaling uses
                     the  priority  that  you assigned to each launch template
                     override, launching the highest priority  first.  If  all
                     your  On-Demand  capacity  cannot be fulfilled using your
                     highest priority instance, then Amazon EC2  Auto  Scaling
                     launches the remaining capacity using the second priority
                     instance type, and so on.

                     Default: lowest-price for Auto Scaling groups that  spec-
                     ify   InstanceRequirements  in  the overrides and priori-
                     tized for Auto Scaling groups that don't.

                 OnDemandBaseCapacity -> (integer)
                     The minimum amount of the Auto Scaling  group's  capacity
                     that  must be fulfilled by On-Demand Instances. This base
                     portion is launched first as your group scales.

                     If you specify weights for  the  instance  types  in  the
                     overrides, the base capacity is measured in the same unit
                     of measurement as the  instance  types.  If  you  specify
                     InstanceRequirements  in the overrides, the base capacity
                     is measured in the  same  unit  of  measurement  as  your
                     group's desired capacity.

                     Default: 0

                 OnDemandPercentageAboveBaseCapacity -> (integer)
                     Controls  the percentages of On-Demand Instances and Spot
                     Instances for your additional capacity  beyond  OnDemand-
                     BaseCapacity  .  Expressed  as  a number (for example, 20
                     specifies 20% On-Demand Instances, 80%  Spot  Instances).
                     If set to 100, only On-Demand Instances are used.

                     Default: 100

                 SpotAllocationStrategy -> (string)
                     Indicates  how to allocate instances across Spot Instance
                     pools.

                     If the allocation strategy is  lowest-price  ,  the  Auto
                     Scaling  group  launches  instances  using the Spot pools
                     with  the  lowest  price,  and  evenly   allocates   your
                     instances  across the number of Spot pools that you spec-
                     ify.

                     If the allocation strategy is capacity-optimized  (recom-
                     mended),  the Auto Scaling group launches instances using
                     Spot pools that are optimally chosen based on the  avail-
                     able  Spot  capacity.  Alternatively,  you can use capac-
                     ity-optimized-prioritized and set the order  of  instance
                     types in the list of launch template overrides from high-
                     est to lowest priority (from first to last in the  list).
                     Amazon  EC2 Auto Scaling honors the instance type priori-
                     ties on a best-effort basis but  optimizes  for  capacity
                     first.

                     Default: lowest-price

                 SpotInstancePools -> (integer)
                     The  number  of Spot Instance pools across which to allo-
                     cate your Spot Instances. The Spot pools  are  determined
                     from the different instance types in the overrides. Valid
                     only when the Spot allocation strategy is lowest-price  .
                     Value must be in the range of 120.

                     Default: 2

                 SpotMaxPrice -> (string)
                     The  maximum  price per unit hour that you are willing to
                     pay for a Spot Instance. If you keep  the  value  at  its
                     default  (unspecified),  Amazon EC2 Auto Scaling uses the
                     On-Demand price as the maximum Spot price.  To  remove  a
                     value  that  you previously set, include the property but
                     specify an empty string ("") for the value.

       JSON Syntax:

          {
            "LaunchTemplate": {
              "LaunchTemplateId": "string",
              "LaunchTemplateName": "string",
              "Version": "string"
            },
            "MixedInstancesPolicy": {
              "LaunchTemplate": {
                "LaunchTemplateSpecification": {
                  "LaunchTemplateId": "string",
                  "LaunchTemplateName": "string",
                  "Version": "string"
                },
                "Overrides": [
                  {
                    "InstanceType": "string",
                    "WeightedCapacity": "string",
                    "LaunchTemplateSpecification": {
                      "LaunchTemplateId": "string",
                      "LaunchTemplateName": "string",
                      "Version": "string"
                    },
                    "InstanceRequirements": {
                      "VCpuCount": {
                        "Min": integer,
                        "Max": integer
                      },
                      "MemoryMiB": {
                        "Min": integer,
                        "Max": integer
                      },
                      "CpuManufacturers": ["intel"|"amd"|"amazon-web-services", ...],
                      "MemoryGiBPerVCpu": {
                        "Min": double,
                        "Max": double
                      },
                      "ExcludedInstanceTypes": ["string", ...],
                      "InstanceGenerations": ["current"|"previous", ...],
                      "SpotMaxPricePercentageOverLowestPrice": integer,
                      "OnDemandMaxPricePercentageOverLowestPrice": integer,
                      "BareMetal": "included"|"excluded"|"required",
                      "BurstablePerformance": "included"|"excluded"|"required",
                      "RequireHibernateSupport": true|false,
                      "NetworkInterfaceCount": {
                        "Min": integer,
                        "Max": integer
                      },
                      "LocalStorage": "included"|"excluded"|"required",
                      "LocalStorageTypes": ["hdd"|"ssd", ...],
                      "TotalLocalStorageGB": {
                        "Min": double,
                        "Max": double
                      },
                      "BaselineEbsBandwidthMbps": {
                        "Min": integer,
                        "Max": integer
                      },
                      "AcceleratorTypes": ["gpu"|"fpga"|"inference", ...],
                      "AcceleratorCount": {
                        "Min": integer,
                        "Max": integer
                      },
                      "AcceleratorManufacturers": ["nvidia"|"amd"|"amazon-web-services"|"xilinx", ...],
                      "AcceleratorNames": ["a100"|"v100"|"k80"|"t4"|"m60"|"radeon-pro-v520"|"vu9p", ...],
                      "AcceleratorTotalMemoryMiB": {
                        "Min": integer,
                        "Max": integer
                      }
                    }
                  }
                  ...
                ]
              },
              "InstancesDistribution": {
                "OnDemandAllocationStrategy": "string",
                "OnDemandBaseCapacity": integer,
                "OnDemandPercentageAboveBaseCapacity": integer,
                "SpotAllocationStrategy": "string",
                "SpotInstancePools": integer,
                "SpotMaxPrice": "string"
              }
            }
          }

       --preferences (structure)
          Set of preferences associated with the instance refresh request.  If
          not provided, the default values are used.

          MinHealthyPercentage -> (integer)
              The  amount  of  capacity  in  the  Auto Scaling group that must
              remain healthy during an instance refresh to allow the operation
              to  continue.  The  value  is  expressed  as a percentage of the
              desired capacity of the Auto Scaling group (rounded  up  to  the
              nearest integer). The default is 90 .

              Setting the minimum healthy percentage to 100 percent limits the
              rate of replacement to one instance at a time. In contrast, set-
              ting  it  to 0 percent has the effect of replacing all instances
              at the same time.

          InstanceWarmup -> (integer)
              The number of seconds until a newly launched instance is config-
              ured and ready to use. During this time, Amazon EC2 Auto Scaling
              does not immediately  move  on  to  the  next  replacement.  The
              default  is  to  use the value for the health check grace period
              defined for the group.

          CheckpointPercentages -> (list)
              Threshold values for each checkpoint in  ascending  order.  Each
              number  must  be  unique.  To  replace all instances in the Auto
              Scaling group, the last number in the array must be 100 .

              For usage  examples,  see  Adding  checkpoints  to  an  instance
              refresh in the Amazon EC2 Auto Scaling User Guide .

              (integer)

          CheckpointDelay -> (integer)
              The  amount  of  time,  in  seconds,  to wait after a checkpoint
              before continuing. This property is optional, but if you specify
              a value for it, you must also specify a value for CheckpointPer-
              centages . If you specify a value for CheckpointPercentages  and
              not  for  CheckpointDelay , the CheckpointDelay defaults to 3600
              (1 hour).

          SkipMatching -> (boolean)
              A boolean value that indicates whether skip matching is enabled.
              If  true, then Amazon EC2 Auto Scaling skips replacing instances
              that match the desired configuration. If no  desired  configura-
              tion  is  specified, then it skips replacing instances that have
              the same configuration that is already set  on  the  group.  The
              default is false .

       Shorthand Syntax:

          MinHealthyPercentage=integer,InstanceWarmup=integer,CheckpointPercentages=integer,integer,CheckpointDelay=integer,SkipMatching=boolean

       JSON Syntax:

          {
            "MinHealthyPercentage": integer,
            "InstanceWarmup": integer,
            "CheckpointPercentages": [integer, ...],
            "CheckpointDelay": integer,
            "SkipMatching": true|false
          }

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To start an instance refresh with command line parameters

       The following start-instance-refresh example starts an instance refresh
       using command line arguments. The optional preferences parameter speci-
       fies  an InstanceWarmup of 400 seconds and a MinHealthyPercentage of 50
       percent.

          aws autoscaling start-instance-refresh \
              --auto-scaling-group-name my-asg \
              --preferences '{"InstanceWarmup": 400, "MinHealthyPercentage": 50}'

       Output:

          {
              "InstanceRefreshId": "08b91cf7-8fa6-48af-b6a6-d227f40f1b9b"
          }

       For more information, see Replacing Auto Scaling instances based on  an
       instance refresh in the Amazon EC2 Auto Scaling User Guide.

       Example 2: To start an instance refresh using a JSON file

       The following start-instance-refresh example starts an instance refresh
       using a JSON file. You can specify the Auto Scaling  group  and  define
       your preferences in a JSON file, as shown in the following example.

          aws autoscaling start-instance-refresh \
              --cli-input-json file://config.json

       Contents of config.json:

          {
              "AutoScalingGroupName": "my-asg",
              "Preferences": {
                  "InstanceWarmup": 400,
                  "MinHealthyPercentage": 50
              }
          }

       Output:

          {
              "InstanceRefreshId": "08b91cf7-8fa6-48af-b6a6-d227f40f1b9b"
          }

       For  more information, see Replacing Auto Scaling instances based on an
       instance refresh in the Amazon EC2 Auto Scaling User Guide.

OUTPUT
       InstanceRefreshId -> (string)
          A unique ID for tracking the progress of the request.



                                                      START-INSTANCE-REFRESH()
