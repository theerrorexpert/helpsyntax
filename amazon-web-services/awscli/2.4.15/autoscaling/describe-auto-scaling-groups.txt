DESCRIBE-AUTO-SCALING-GROUPS()                  DESCRIBE-AUTO-SCALING-GROUPS()



NAME
       describe-auto-scaling-groups -

DESCRIPTION
       Gets  information  about  the  Auto  Scaling  groups in the account and
       Region.

       If you specify Auto Scaling group names, the output  includes  informa-
       tion  for  only  the specified Auto Scaling groups. If you specify fil-
       ters, the output includes  information  for  only  those  Auto  Scaling
       groups that meet the filter criteria. If you do not specify group names
       or filters, the  output  includes  information  for  all  Auto  Scaling
       groups.

       This operation also returns information about instances in Auto Scaling
       groups. To retrieve information about the instances in a warm pool, you
       must call the  DescribeWarmPool API.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       describe-auto-scaling-groups  is  a  paginated  operation. Multiple API
       calls may be issued in  order  to  retrieve  the  entire  data  set  of
       results.  You  can  disable  pagination  by providing the --no-paginate
       argument.  When using --output text and the --query argument on a pagi-
       nated response, the --query argument must extract data from the results
       of the following query expressions: AutoScalingGroups

SYNOPSIS
            describe-auto-scaling-groups
          [--auto-scaling-group-names <value>]
          [--filters <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --auto-scaling-group-names (list)
          The names of the Auto Scaling groups. By default, you can only spec-
          ify up to 50 names. You can optionally increase this limit using the
          MaxRecords parameter.

          If you omit this parameter, all Auto Scaling groups are described.

          (string)

       Syntax:

          "string" "string" ...

       --filters (list)
          One or more filters to limit the results based on specific tags.

          (structure)
              Describes a filter that is used to return a more  specific  list
              of results from a describe operation.

              If  you  specify multiple filters, the filters are automatically
              logically joined with an AND , and the request returns only  the
              results that match all of the specified filters.

              For  more  information,  see  Tagging  Auto  Scaling  groups and
              instances in the Amazon EC2 Auto Scaling User Guide .

              Name -> (string)
                 The name of the filter.

                 The valid values for  Name  depend  on  which  API  operation
                 you're  using  with the filter ( DescribeAutoScalingGroups or
                 DescribeTags ).
                     DescribeAutoScalingGroups

                 Valid values for Name include the following:

                 o tag-key - Accepts tag keys. The results only include infor-
                   mation  about the Auto Scaling groups associated with these
                   tag keys.

                 o tag-value - Accepts tag values. The  results  only  include
                   information  about  the Auto Scaling groups associated with
                   these tag values.

                 o tag:<key> - Accepts the key/value combination of  the  tag.
                   Use the tag key in the filter name and the tag value as the
                   filter value. The results only  include  information  about
                   the  Auto  Scaling  groups  associated  with  the specified
                   key/value combination.
                     DescribeTags

                 Valid values for Name include the following:

                 o auto-scaling-group - Accepts  the  names  of  Auto  Scaling
                   groups. The results only include information about the tags
                   associated with these Auto Scaling groups.

                 o key - Accepts tag keys. The results only  include  informa-
                   tion about the tags associated with these tag keys.

                 o value - Accepts tag values. The results only include infor-
                   mation about the tags associated with these tag values.

                 o propagate-at-launch - Accepts a Boolean value, which speci-
                   fies  whether  tags  propagate  to instances at launch. The
                   results only include information about the tags  associated
                   with the specified Boolean value.

              Values -> (list)
                 One  or more filter values. Filter values are case-sensitive.

                 If you specify multiple values for a filter, the  values  are
                 automatically  logically  joined with an OR , and the request
                 returns all results that match any of the  specified  values.
                 For  example,  specify  "tag:environment" for the filter name
                 and "production,development" for the filter  values  to  find
                 Auto  Scaling groups with the tag "environment=production" or
                 "environment=development".

                 (string)

       Shorthand Syntax:

          Name=string,Values=string,string ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Values": ["string", ...]
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --starting-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The size of each page to get in the AWS service call. This does  not
          affect the number of items returned in the command's output. Setting
          a smaller page size results  in  more  calls  to  the  AWS  service,
          retrieving  fewer  items in each call. This can help prevent the AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To describe the specified Auto Scaling group

       This example describes the specified Auto Scaling group.

          aws autoscaling describe-auto-scaling-groups \
              --auto-scaling-group-name my-asg

       Output:

          {
              "AutoScalingGroups": [
                  {
                      "AutoScalingGroupName": "my-asg",
                      "AutoScalingGroupARN": "arn:aws:autoscaling:us-west-2:123456789012:autoScalingGroup:930d940e-891e-4781-a11a-7b0acd480f03:autoScalingGroupName/my-asg",
                      "LaunchTemplate": {
                          "LaunchTemplateName": "my-launch-template",
                          "Version": "1",
                          "LaunchTemplateId": "lt-1234567890abcde12"
                      },
                      "MinSize": 0,
                      "MaxSize": 1,
                      "DesiredCapacity": 1,
                      "DefaultCooldown": 300,
                      "AvailabilityZones": [
                          "us-west-2a",
                          "us-west-2b",
                          "us-west-2c"
                      ],
                      "LoadBalancerNames": [],
                      "TargetGroupARNs": [],
                      "HealthCheckType": "EC2",
                      "HealthCheckGracePeriod": 0,
                      "Instances": [
                          {
                              "InstanceId": "i-06905f55584de02da",
                              "InstanceType": "t2.micro",
                              "AvailabilityZone": "us-west-2a",
                              "HealthStatus": "Healthy",
                              "LifecycleState": "InService",
                              "ProtectedFromScaleIn": false,
                              "LaunchTemplate": {
                                  "LaunchTemplateName": "my-launch-template",
                                  "Version": "1",
                                  "LaunchTemplateId": "lt-1234567890abcde12"
                              }
                          }
                      ],
                      "CreatedTime": "2020-10-28T02:39:22.152Z",
                      "VPCZoneIdentifier": "subnet-5ea0c127,subnet-6194ea3b,subnet-c934b782",
                      "SuspendedProcesses": [],
                      "EnabledMetrics": [],
                      "Tags": [],
                      "TerminationPolicies": [
                          "Default"
                      ],
                      "NewInstancesProtectedFromScaleIn": false,
                      "ServiceLinkedRoleARN":"arn"
                  }
              ]
          }

       Example 2: To describe the first 100 specified Auto Scaling group

       This example describes the specified Auto Scaling groups. It allows you
       to specify up to 100 group names.

          aws autoscaling describe-auto-scaling-groups \
              --max-items 100 \
              --auto-scaling-group-name "group1" "group2" "group3" "group4"

       See example 1 for sample output.

       Example 3: To describe an Auto Scaling group in the specified region

       This example describes the Auto Scaling groups in the specified region,
       up to a maximum of 75 groups.

          aws autoscaling describe-auto-scaling-groups \
              --max-items 75 \
              --region us-east-1

       See example 1 for sample output.

       Example 4: To describe the specified number of Auto Scaling group

       To return a specific number of Auto Scaling groups, use the --max-items
       option.

          aws autoscaling describe-auto-scaling-groups \
              --max-items 1

       See example 1 for sample output.

       If the output includes a NextToken field, there are more groups. To get
       the  additional  groups,  use the value of this field with the --start-
       ing-token option in a subsequent call as follows.

          aws autoscaling describe-auto-scaling-groups --starting-token Z3M3LMPEXAMPLE

       See example 1 for sample output.

OUTPUT
       AutoScalingGroups -> (list)
          The groups.

          (structure)
              Describes an Auto Scaling group.

              AutoScalingGroupName -> (string)
                 The name of the Auto Scaling group.

              AutoScalingGroupARN -> (string)
                 The Amazon Resource Name (ARN) of the Auto Scaling group.

              LaunchConfigurationName -> (string)
                 The name of the associated launch configuration.

              LaunchTemplate -> (structure)
                 The launch template for the group.

                 LaunchTemplateId -> (string)
                     The ID of the launch template. To get  the  template  ID,
                     use the Amazon EC2 DescribeLaunchTemplates API operation.
                     New launch templates can be created using the Amazon  EC2
                     CreateLaunchTemplate API.

                     Conditional:  You  must specify either a LaunchTemplateId
                     or a LaunchTemplateName .

                 LaunchTemplateName -> (string)
                     The name of the launch  template.  To  get  the  template
                     name,  use  the  Amazon  EC2  DescribeLaunchTemplates API
                     operation. New launch templates can be created using  the
                     Amazon EC2 CreateLaunchTemplate API.

                     Conditional:  You  must specify either a LaunchTemplateId
                     or a LaunchTemplateName .

                 Version -> (string)
                     The version number, $Latest , or $Default .  To  get  the
                     version      number,      use      the     Amazon     EC2
                     DescribeLaunchTemplateVersions API operation. New  launch
                     template  versions  can  be  created using the Amazon EC2
                     CreateLaunchTemplateVersion API. If the value is  $Latest
                     ,  Amazon  EC2 Auto Scaling selects the latest version of
                     the launch template  when  launching  instances.  If  the
                     value  is  $Default , Amazon EC2 Auto Scaling selects the
                     default version of the  launch  template  when  launching
                     instances. The default value is $Default .

              MixedInstancesPolicy -> (structure)
                 The mixed instances policy for the group.

                 LaunchTemplate -> (structure)
                     Specifies  the  launch  template  to use and the instance
                     types (overrides) that are used to launch  EC2  instances
                     to  fulfill  On-Demand and Spot capacities. Required when
                     creating a mixed instances policy.

                     LaunchTemplateSpecification -> (structure)
                        The launch template to use.

                        LaunchTemplateId -> (string)
                            The ID of the launch template. To get the template
                            ID, use the Amazon EC2 DescribeLaunchTemplates API
                            operation. New launch  templates  can  be  created
                            using the Amazon EC2 CreateLaunchTemplate API.

                            Conditional:  You must specify either a LaunchTem-
                            plateId or a LaunchTemplateName .

                        LaunchTemplateName -> (string)
                            The name of the launch template. To get  the  tem-
                            plate     name,     use     the     Amazon     EC2
                            DescribeLaunchTemplates API operation. New  launch
                            templates  can  be  created  using  the Amazon EC2
                            CreateLaunchTemplate API.

                            Conditional: You must specify either a  LaunchTem-
                            plateId or a LaunchTemplateName .

                        Version -> (string)
                            The version number, $Latest , or $Default . To get
                            the   version   number,   use   the   Amazon   EC2
                            DescribeLaunchTemplateVersions  API operation. New
                            launch template versions can be created using  the
                            Amazon EC2 CreateLaunchTemplateVersion API. If the
                            value is $Latest , Amazon EC2 Auto Scaling selects
                            the  latest  version  of  the launch template when
                            launching instances. If the value  is  $Default  ,
                            Amazon  EC2  Auto Scaling selects the default ver-
                            sion  of  the  launch  template   when   launching
                            instances. The default value is $Default .

                     Overrides -> (list)
                        Any  properties  that  you  specify  override the same
                        properties in the launch template.  If  not  provided,
                        Amazon  EC2  Auto  Scaling  uses  the instance type or
                        instance type requirements  specified  in  the  launch
                        template when it launches an instance.

                        The  overrides can include either one or more instance
                        types or a set of instance requirements, but not both.

                        (structure)
                            Describes  an  override for a launch template. For
                            more information, see Configuring overrides in the
                            Amazon EC2 Auto Scaling User Guide .

                            InstanceType -> (string)
                               The instance type, such as m3.xlarge . You must
                               use an instance type that is supported in  your
                               requested  Region  and  Availability Zones. For
                               more information, see  Instance  types  in  the
                               Amazon Elastic Compute Cloud User Guide .

                            WeightedCapacity -> (string)
                               The  number  of  capacity units provided by the
                               instance  type  specified  in  InstanceType  in
                               terms   of   virtual   CPUs,  memory,  storage,
                               throughput, or other relative performance char-
                               acteristic.  When  a Spot or On-Demand Instance
                               is launched, the capacity  units  count  toward
                               the  desired  capacity. Amazon EC2 Auto Scaling
                               launches instances until the  desired  capacity
                               is  totally  fulfilled, even if this results in
                               an overage. For example, if there are two units
                               remaining  to  fulfill capacity, and Amazon EC2
                               Auto Scaling can only launch an instance with a
                               WeightedCapacity of five units, the instance is
                               launched, and the desired capacity is  exceeded
                               by  three  units.  For  more  information,  see
                               Instance weighting for Amazon EC2 Auto  Scaling
                               in  the  Amazon  EC2  Auto Scaling User Guide .
                               Value must be in the range of 1999.

                            LaunchTemplateSpecification -> (structure)
                               Provides the launch template to  be  used  when
                               launching   the   instance  type  specified  in
                               InstanceType . For example, some instance types
                               might  require a launch template with a differ-
                               ent AMI. If not provided, Amazon EC2 Auto Scal-
                               ing uses the launch template that's defined for
                               your mixed instances policy. For more  informa-
                               tion,  see  Specifying  a different launch tem-
                               plate for an instance type in  the  Amazon  EC2
                               Auto Scaling User Guide .

                               LaunchTemplateId -> (string)
                                   The  ID  of the launch template. To get the
                                   template   ID,   use   the    Amazon    EC2
                                   DescribeLaunchTemplates  API operation. New
                                   launch templates can be created  using  the
                                   Amazon EC2 CreateLaunchTemplate API.

                                   Conditional:  You  must  specify  either  a
                                   LaunchTemplateId or a LaunchTemplateName  .

                               LaunchTemplateName -> (string)
                                   The name of the launch template. To get the
                                   template   name,   use   the   Amazon   EC2
                                   DescribeLaunchTemplates  API operation. New
                                   launch templates can be created  using  the
                                   Amazon EC2 CreateLaunchTemplate API.

                                   Conditional:  You  must  specify  either  a
                                   LaunchTemplateId or a LaunchTemplateName  .

                               Version -> (string)
                                   The version number, $Latest , or $Default .
                                   To get the version number, use  the  Amazon
                                   EC2    DescribeLaunchTemplateVersions   API
                                   operation. New launch template versions can
                                   be    created    using   the   Amazon   EC2
                                   CreateLaunchTemplateVersion  API.  If   the
                                   value  is $Latest , Amazon EC2 Auto Scaling
                                   selects the latest version  of  the  launch
                                   template  when  launching instances. If the
                                   value is $Default , Amazon EC2 Auto Scaling
                                   selects  the  default version of the launch
                                   template  when  launching  instances.   The
                                   default value is $Default .

                            InstanceRequirements -> (structure)
                               The  instance  requirements.  When  you specify
                               instance requirements, Amazon EC2 Auto  Scaling
                               finds instance types that satisfy your require-
                               ments, and then uses your  On-Demand  and  Spot
                               allocation  strategies to launch instances from
                               these instance types, in the same way  as  when
                               you  specify a list of specific instance types.

                               VCpuCount -> (structure)
                                   The minimum and maximum number of vCPUs for
                                   an instance type.

                                   Min -> (integer)
                                      The minimum number of vCPUs.

                                   Max -> (integer)
                                      The maximum number of vCPUs.

                               MemoryMiB -> (structure)
                                   The  minimum  and  maximum  instance memory
                                   size for an instance type, in MiB.

                                   Min -> (integer)
                                      The memory minimum in MiB.

                                   Max -> (integer)
                                      The memory maximum in MiB.

                               CpuManufacturers -> (list)
                                   Lists which specific CPU  manufacturers  to
                                   include.

                                   o For instance types with Intel CPUs, spec-
                                     ify intel .

                                   o For instance types with AMD CPUs, specify
                                     amd .

                                   o For  instance  types with Amazon Web Ser-
                                     vices CPUs, specify amazon-web-services .

                                   NOTE:
                                      Don't  confuse the CPU hardware manufac-
                                      turer with the  CPU  hardware  architec-
                                      ture.  Instances will be launched with a
                                      compatible CPU architecture based on the
                                      Amazon  Machine  Image  (AMI)  that  you
                                      specify in your launch template.

                                   Default: Any manufacturer

                                   (string)

                               MemoryGiBPerVCpu -> (structure)
                                   The minimum and maximum  amount  of  memory
                                   per vCPU for an instance type, in GiB.

                                   Default: No minimum or maximum

                                   Min -> (double)
                                      The memory minimum in GiB.

                                   Max -> (double)
                                      The memory maximum in GiB.

                               ExcludedInstanceTypes -> (list)
                                   Lists  which instance types to exclude. You
                                   can use  strings  with  one  or  more  wild
                                   cards, represented by an asterisk (* ). The
                                   following are examples: c5* , m5a.* , r*  ,
                                   *3* .

                                   For  example,  if you specify c5* , you are
                                   excluding the entire  C5  instance  family,
                                   which  includes  all  C5a  and C5n instance
                                   types. If  you  specify  m5a.*  ,  you  are
                                   excluding  all  the M5a instance types, but
                                   not the M5n instance types.

                                   Default: No excluded instance types

                                   (string)

                               InstanceGenerations -> (list)
                                   Indicates whether current or previous  gen-
                                   eration instance types are included.

                                   o For  current  generation  instance types,
                                     specify current . The current  generation
                                     includes  EC2  instance  types  currently
                                     recommended  for  use.   This   typically
                                     includes  the latest two to three genera-
                                     tions in each instance family.  For  more
                                     information,  see  Instance  types in the
                                     Amazon EC2 User Guide for Linux Instances
                                     .

                                   o For  previous  generation instance types,
                                     specify previous .

                                   Default: Any current or previous generation

                                   (string)

                               SpotMaxPricePercentageOverLowestPrice -> (inte-
                               ger)
                                   The price  protection  threshold  for  Spot
                                   Instances.  This  is  the maximum youll pay
                                   for a Spot Instance, expressed  as  a  per-
                                   centage higher than the cheapest M, C, or R
                                   instance   type   with    your    specified
                                   attributes.  When  Amazon  EC2 Auto Scaling
                                   selects   instance    types    with    your
                                   attributes,  we will exclude instance types
                                   whose price is higher than your  threshold.
                                   The  parameter  accepts  an  integer, which
                                   Amazon EC2 Auto  Scaling  interprets  as  a
                                   percentage.  To  turn off price protection,
                                   specify a high value, such as 999999 .

                                   Default: 100

                               OnDemandMaxPricePercentageOverLowestPrice    ->
                               (integer)
                                   The    price   protection   threshold   for
                                   On-Demand Instances. This  is  the  maximum
                                   youll   pay   for  an  On-Demand  Instance,
                                   expressed as a percentage higher  than  the
                                   cheapest M, C, or R instance type with your
                                   specified attributes. When Amazon EC2  Auto
                                   Scaling  selects  instance  types with your
                                   attributes, we will exclude instance  types
                                   whose  price is higher than your threshold.
                                   The parameter  accepts  an  integer,  which
                                   Amazon  EC2  Auto  Scaling  interprets as a
                                   percentage. To turn off  price  protection,
                                   specify a high value, such as 999999 .

                                   Default: 20

                               BareMetal -> (string)
                                   Indicates whether bare metal instance types
                                   are included, excluded, or required.

                                   Default: excluded

                               BurstablePerformance -> (string)
                                   Indicates  whether  burstable   performance
                                   instance  types  are included, excluded, or
                                   required.   For   more   information,   see
                                   Burstable performance instances in the Ama-
                                   zon EC2 User Guide for Linux Instances .

                                   Default: excluded

                               RequireHibernateSupport -> (boolean)
                                   Indicates whether instance types must  pro-
                                   vide  On-Demand  Instance  hibernation sup-
                                   port.

                                   Default: false

                               NetworkInterfaceCount -> (structure)
                                   The minimum and maximum number  of  network
                                   interfaces for an instance type.

                                   Default: No minimum or maximum

                                   Min -> (integer)
                                      The  minimum  number  of  network inter-
                                      faces.

                                   Max -> (integer)
                                      The maximum  number  of  network  inter-
                                      faces.

                               LocalStorage -> (string)
                                   Indicates   whether   instance  types  with
                                   instance  store   volumes   are   included,
                                   excluded,  or  required.  For more informa-
                                   tion, see Amazon EC2 instance store in  the
                                   Amazon EC2 User Guide for Linux Instances .

                                   Default: included

                               LocalStorageTypes -> (list)
                                   Indicates the type of local storage that is
                                   required.

                                   o For  instance  types with hard disk drive
                                     (HDD) storage, specify hdd .

                                   o For instance types with solid state drive
                                     (SSD) storage, specify sdd .

                                   Default: Any local storage type

                                   (string)

                               TotalLocalStorageGB -> (structure)
                                   The minimum and maximum total local storage
                                   size for an instance type, in GB.

                                   Default: No minimum or maximum

                                   Min -> (double)
                                      The storage minimum in GB.

                                   Max -> (double)
                                      The storage maximum in GB.

                               BaselineEbsBandwidthMbps -> (structure)
                                   The minimum and maximum baseline  bandwidth
                                   performance  for an instance type, in Mbps.
                                   For more information, see  Amazon  EBSopti-
                                   mized  instances  in  the  Amazon  EC2 User
                                   Guide for Linux Instances .

                                   Default: No minimum or maximum

                                   Min -> (integer)
                                      The minimum value in Mbps.

                                   Max -> (integer)
                                      The maximum value in Mbps.

                               AcceleratorTypes -> (list)
                                   Lists the accelerator types that must be on
                                   an instance type.

                                   o For instance types with GPU accelerators,
                                     specify gpu .

                                   o For instance types  with  FPGA  accelera-
                                     tors, specify fpga .

                                   o For  instance types with inference accel-
                                     erators, specify inference .

                                   Default: Any accelerator type

                                   (string)

                               AcceleratorCount -> (structure)
                                   The minimum and maximum number of accelera-
                                   tors  (GPUs,  FPGAs, or Amazon Web Services
                                   Inferentia chips) for an instance type.

                                   To  exclude  accelerator-enabled   instance
                                   types, set Max to 0 .

                                   Default: No minimum or maximum

                                   Min -> (integer)
                                      The minimum value.

                                   Max -> (integer)
                                      The maximum value.

                               AcceleratorManufacturers -> (list)
                                   Indicates  whether instance types must have
                                   accelerators by specific manufacturers.

                                   o For instance types with  NVIDIA  devices,
                                     specify nvidia .

                                   o For  instance  types  with  AMD  devices,
                                     specify amd .

                                   o For instance types with Amazon  Web  Ser-
                                     vices  devices,  specify  amazon-web-ser-
                                     vices .

                                   o For instance types with  Xilinx  devices,
                                     specify xilinx .

                                   Default: Any manufacturer

                                   (string)

                               AcceleratorNames -> (list)
                                   Lists  the  accelerators that must be on an
                                   instance type.

                                   o For instance types with NVIDIA A100 GPUs,
                                     specify a100 .

                                   o For instance types with NVIDIA V100 GPUs,
                                     specify v100 .

                                   o For instance types with NVIDIA K80  GPUs,
                                     specify k80 .

                                   o For  instance  types with NVIDIA T4 GPUs,
                                     specify t4 .

                                   o For instance types with NVIDIA M60  GPUs,
                                     specify m60 .

                                   o For  instance  types  with AMD Radeon Pro
                                     V520 GPUs, specify radeon-pro-v520 .

                                   o For  instance  types  with  Xilinx   VU9P
                                     FPGAs, specify vu9p .

                                   Default: Any accelerator

                                   (string)

                               AcceleratorTotalMemoryMiB -> (structure)
                                   The  minimum  and maximum total memory size
                                   for the accelerators on an  instance  type,
                                   in MiB.

                                   Default: No minimum or maximum

                                   Min -> (integer)
                                      The memory minimum in MiB.

                                   Max -> (integer)
                                      The memory maximum in MiB.

                 InstancesDistribution -> (structure)
                     Specifies the instances distribution.

                     OnDemandAllocationStrategy -> (string)
                        The  order  of the launch template overrides to use in
                        fulfilling On-Demand capacity.

                        If you specify lowest-price , Amazon EC2 Auto  Scaling
                        uses  price to determine the order, launching the low-
                        est price first.

                        If you specify prioritized , Amazon EC2  Auto  Scaling
                        uses  the  priority  that  you assigned to each launch
                        template  override,  launching  the  highest  priority
                        first.  If  all your On-Demand capacity cannot be ful-
                        filled using your highest priority instance, then Ama-
                        zon  EC2  Auto Scaling launches the remaining capacity
                        using the second priority instance type, and so on.

                        Default: lowest-price for  Auto  Scaling  groups  that
                        specify   InstanceRequirements  in  the  overrides and
                        prioritized for Auto Scaling groups that don't.

                     OnDemandBaseCapacity -> (integer)
                        The minimum amount of the Auto Scaling group's  capac-
                        ity  that  must  be  fulfilled by On-Demand Instances.
                        This base portion is  launched  first  as  your  group
                        scales.

                        If  you  specify weights for the instance types in the
                        overrides, the base capacity is measured in  the  same
                        unit  of  measurement  as  the  instance types. If you
                        specify  InstanceRequirements in  the  overrides,  the
                        base capacity is measured in the same unit of measure-
                        ment as your group's desired capacity.

                        Default: 0

                     OnDemandPercentageAboveBaseCapacity -> (integer)
                        Controls the percentages of  On-Demand  Instances  and
                        Spot  Instances  for  your  additional capacity beyond
                        OnDemandBaseCapacity .  Expressed  as  a  number  (for
                        example,  20  specifies  20%  On-Demand Instances, 80%
                        Spot  Instances).  If  set  to  100,  only   On-Demand
                        Instances are used.

                        Default: 100

                     SpotAllocationStrategy -> (string)
                        Indicates   how  to  allocate  instances  across  Spot
                        Instance pools.

                        If the allocation strategy is lowest-price , the  Auto
                        Scaling  group launches instances using the Spot pools
                        with the  lowest  price,  and  evenly  allocates  your
                        instances  across  the  number  of Spot pools that you
                        specify.

                        If the allocation strategy is capacity-optimized (rec-
                        ommended),  the  Auto Scaling group launches instances
                        using Spot pools that are optimally  chosen  based  on
                        the  available  Spot  capacity. Alternatively, you can
                        use capacity-optimized-prioritized and set  the  order
                        of instance types in the list of launch template over-
                        rides from highest to lowest priority (from  first  to
                        last  in the list). Amazon EC2 Auto Scaling honors the
                        instance type priorities on a  best-effort  basis  but
                        optimizes for capacity first.

                        Default: lowest-price

                     SpotInstancePools -> (integer)
                        The  number  of  Spot  Instance  pools across which to
                        allocate your  Spot  Instances.  The  Spot  pools  are
                        determined  from  the  different instance types in the
                        overrides. Valid only when the Spot allocation  strat-
                        egy  is  lowest-price  . Value must be in the range of
                        120.

                        Default: 2

                     SpotMaxPrice -> (string)
                        The maximum price per unit hour that you  are  willing
                        to  pay  for a Spot Instance. If you keep the value at
                        its default (unspecified),  Amazon  EC2  Auto  Scaling
                        uses the On-Demand price as the maximum Spot price. To
                        remove a value that you previously  set,  include  the
                        property  but  specify  an  empty  string ("") for the
                        value.

              MinSize -> (integer)
                 The minimum size of the group.

              MaxSize -> (integer)
                 The maximum size of the group.

              DesiredCapacity -> (integer)
                 The desired size of the group.

              PredictedCapacity -> (integer)
                 The predicted capacity of the group when it has a  predictive
                 scaling policy.

              DefaultCooldown -> (integer)
                 The duration of the default cooldown period, in seconds.

              AvailabilityZones -> (list)
                 One or more Availability Zones for the group.

                 (string)

              LoadBalancerNames -> (list)
                 One or more load balancers associated with the group.

                 (string)

              TargetGroupARNs -> (list)
                 The Amazon Resource Names (ARN) of the target groups for your
                 load balancer.

                 (string)

              HealthCheckType -> (string)
                 The service to use for the health checks.  The  valid  values
                 are  EC2  and ELB . If you configure an Auto Scaling group to
                 use ELB health checks, it considers the instance unhealthy if
                 it  fails  either  the EC2 status checks or the load balancer
                 health checks.

              HealthCheckGracePeriod -> (integer)
                 The amount of time, in seconds, that Amazon EC2 Auto  Scaling
                 waits  before  checking  the health status of an EC2 instance
                 that has come into service and marking it unhealthy due to  a
                 failed health check.

              Instances -> (list)
                 The EC2 instances associated with the group.

                 (structure)
                     Describes an EC2 instance.

                     InstanceId -> (string)
                        The ID of the instance.

                     InstanceType -> (string)
                        The instance type of the EC2 instance.

                     AvailabilityZone -> (string)
                        The  Availability  Zone  in which the instance is run-
                        ning.

                     LifecycleState -> (string)
                        A description of  the  current  lifecycle  state.  The
                        Quarantined  state  is not used. For information about
                        lifecycle states, see Instance lifecycle in the Amazon
                        EC2 Auto Scaling User Guide .

                     HealthStatus -> (string)
                        The  last  reported  health  status  of  the instance.
                        "Healthy" means  that  the  instance  is  healthy  and
                        should  remain  in service. "Unhealthy" means that the
                        instance is unhealthy and that Amazon EC2 Auto Scaling
                        should terminate and replace it.

                     LaunchConfigurationName -> (string)
                        The launch configuration associated with the instance.

                     LaunchTemplate -> (structure)
                        The launch template for the instance.

                        LaunchTemplateId -> (string)
                            The ID of the launch template. To get the template
                            ID, use the Amazon EC2 DescribeLaunchTemplates API
                            operation. New launch  templates  can  be  created
                            using the Amazon EC2 CreateLaunchTemplate API.

                            Conditional:  You must specify either a LaunchTem-
                            plateId or a LaunchTemplateName .

                        LaunchTemplateName -> (string)
                            The name of the launch template. To get  the  tem-
                            plate     name,     use     the     Amazon     EC2
                            DescribeLaunchTemplates API operation. New  launch
                            templates  can  be  created  using  the Amazon EC2
                            CreateLaunchTemplate API.

                            Conditional: You must specify either a  LaunchTem-
                            plateId or a LaunchTemplateName .

                        Version -> (string)
                            The version number, $Latest , or $Default . To get
                            the   version   number,   use   the   Amazon   EC2
                            DescribeLaunchTemplateVersions  API operation. New
                            launch template versions can be created using  the
                            Amazon EC2 CreateLaunchTemplateVersion API. If the
                            value is $Latest , Amazon EC2 Auto Scaling selects
                            the  latest  version  of  the launch template when
                            launching instances. If the value  is  $Default  ,
                            Amazon  EC2  Auto Scaling selects the default ver-
                            sion  of  the  launch  template   when   launching
                            instances. The default value is $Default .

                     ProtectedFromScaleIn -> (boolean)
                        Indicates  whether the instance is protected from ter-
                        mination by Amazon EC2 Auto Scaling when scaling in.

                     WeightedCapacity -> (string)
                        The  number  of  capacity  units  contributed  by  the
                        instance based on its instance type.

                        Valid Range: Minimum value of 1. Maximum value of 999.

              CreatedTime -> (timestamp)
                 The date and time the group was created.

              SuspendedProcesses -> (list)
                 The suspended processes associated with the group.

                 (structure)
                     Describes an auto scaling  process  that  has  been  sus-
                     pended.

                     For more information, see Scaling processes in the Amazon
                     EC2 Auto Scaling User Guide .

                     ProcessName -> (string)
                        The name of the suspended process.

                     SuspensionReason -> (string)
                        The reason that the process was suspended.

              PlacementGroup -> (string)
                 The name of the placement group into  which  to  launch  your
                 instances, if any.

              VPCZoneIdentifier -> (string)
                 One or more subnet IDs, if applicable, separated by commas.

              EnabledMetrics -> (list)
                 The metrics enabled for the group.

                 (structure)
                     Describes an enabled metric.

                     Metric -> (string)
                        One of the following metrics:

                        o GroupMinSize

                        o GroupMaxSize

                        o GroupDesiredCapacity

                        o GroupInServiceInstances

                        o GroupPendingInstances

                        o GroupStandbyInstances

                        o GroupTerminatingInstances

                        o GroupTotalInstances

                        o GroupInServiceCapacity

                        o GroupPendingCapacity

                        o GroupStandbyCapacity

                        o GroupTerminatingCapacity

                        o GroupTotalCapacity

                        o WarmPoolDesiredCapacity

                        o WarmPoolWarmedCapacity

                        o WarmPoolPendingCapacity

                        o WarmPoolTerminatingCapacity

                        o WarmPoolTotalCapacity

                        o GroupAndWarmPoolDesiredCapacity

                        o GroupAndWarmPoolTotalCapacity

                     Granularity -> (string)
                        The granularity of the metric. The only valid value is
                        1Minute .

              Status -> (string)
                 The current state of the group when  the   DeleteAutoScaling-
                 Group operation is in progress.

              Tags -> (list)
                 The tags for the group.

                 (structure)
                     Describes a tag for an Auto Scaling group.

                     ResourceId -> (string)
                        The name of the group.

                     ResourceType -> (string)
                        The  type  of  resource.  The  only supported value is
                        auto-scaling-group .

                     Key -> (string)
                        The tag key.

                     Value -> (string)
                        The tag value.

                     PropagateAtLaunch -> (boolean)
                        Determines whether the tag is added to  new  instances
                        as they are launched in the group.

              TerminationPolicies -> (list)
                 The termination policies for the group.

                 (string)

              NewInstancesProtectedFromScaleIn -> (boolean)
                 Indicates whether newly launched instances are protected from
                 termination by Amazon EC2 Auto Scaling when scaling in.

              ServiceLinkedRoleARN -> (string)
                 The Amazon Resource Name (ARN)  of  the  service-linked  role
                 that  the  Auto  Scaling  group uses to call other Amazon Web
                 Services on your behalf.

              MaxInstanceLifetime -> (integer)
                 The maximum amount of time, in seconds, that an instance  can
                 be in service.

                 Valid Range: Minimum value of 0.

              CapacityRebalance -> (boolean)
                 Indicates whether Capacity Rebalancing is enabled.

              WarmPoolConfiguration -> (structure)
                 The warm pool for the group.

                 MaxGroupPreparedCapacity -> (integer)
                     The maximum number of instances that are allowed to be in
                     the warm pool or in any state except Terminated  for  the
                     Auto Scaling group.

                 MinSize -> (integer)
                     The  minimum  number of instances to maintain in the warm
                     pool.

                 PoolState -> (string)
                     The instance state to transition to after  the  lifecycle
                     actions are complete.

                 Status -> (string)
                     The status of a warm pool that is marked for deletion.

              WarmPoolSize -> (integer)
                 The current size of the warm pool.

              Context -> (string)
                 Reserved.

              DesiredCapacityType -> (string)
                 The  unit  of measurement for the value specified for desired
                 capacity. Amazon EC2 Auto Scaling  supports  DesiredCapacity-
                 Type  for  attribute-based  instance type selection only. For
                 more information, see Creating an Auto  Scaling  group  using
                 attribute-based  instance  type  selection  in the Amazon EC2
                 Auto Scaling User Guide .

                 By default, Amazon EC2 Auto Scaling specifies units  ,  which
                 translates into number of instances.

                 Valid values: units | vcpu | memory-mib

       NextToken -> (string)
          A  string  that indicates that the response contains more items than
          can be returned in a single response. To receive  additional  items,
          specify this string for the NextToken value when requesting the next
          set of items. This value is null when there are  no  more  items  to
          return.



                                                DESCRIBE-AUTO-SCALING-GROUPS()
