UPDATE-AUTO-SCALING-GROUP()                        UPDATE-AUTO-SCALING-GROUP()



NAME
       update-auto-scaling-group -

DESCRIPTION
          We  strongly  recommend that all Auto Scaling groups use launch tem-
          plates to ensure full functionality for Amazon EC2 Auto Scaling  and
          Amazon EC2.

       Updates the configuration for the specified Auto Scaling group.

       To  update an Auto Scaling group, specify the name of the group and the
       parameter that you want to change. Any parameters that you don't  spec-
       ify  are  not  changed  by  this  update request. The new settings take
       effect on any scaling activities after this call returns.

       If you associate a new launch configuration or template  with  an  Auto
       Scaling  group,  all  new instances will get the updated configuration.
       Existing instances continue to run with  the  configuration  that  they
       were  originally  launched  with.  When you update a group to specify a
       mixed instances policy instead of a launch configuration  or  template,
       existing  instances may be replaced to match the new purchasing options
       that you specified in the policy. For example, if the  group  currently
       has 100% On-Demand capacity and the policy specifies 50% Spot capacity,
       this means that half of your instances will be gradually terminated and
       relaunched as Spot Instances. When replacing instances, Amazon EC2 Auto
       Scaling launches new instances before terminating the old ones, so that
       updating your group does not compromise the performance or availability
       of your application.

       Note the following about changing DesiredCapacity , MaxSize ,  or  Min-
       Size :

       o If  a  scale-in  activity occurs as a result of a new DesiredCapacity
         value that is lower than the current size  of  the  group,  the  Auto
         Scaling   group  uses  its  termination  policy  to  determine  which
         instances to terminate.

       o If you specify a new value for MinSize without specifying a value for
         DesiredCapacity , and the new MinSize is larger than the current size
         of the group, this sets the group's DesiredCapacity to the  new  Min-
         Size value.

       o If you specify a new value for MaxSize without specifying a value for
         DesiredCapacity , and the new MaxSize is  smaller  than  the  current
         size  of  the group, this sets the group's DesiredCapacity to the new
         MaxSize value.

       To see which parameters have been set, call  the   DescribeAutoScaling-
       Groups  API.  To  view  the scaling policies for an Auto Scaling group,
       call the  DescribePolicies API. If the group has scaling policies,  you
       can update them by calling the  PutScalingPolicy API.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            update-auto-scaling-group
          --auto-scaling-group-name <value>
          [--launch-configuration-name <value>]
          [--launch-template <value>]
          [--mixed-instances-policy <value>]
          [--min-size <value>]
          [--max-size <value>]
          [--desired-capacity <value>]
          [--default-cooldown <value>]
          [--availability-zones <value>]
          [--health-check-type <value>]
          [--health-check-grace-period <value>]
          [--placement-group <value>]
          [--vpc-zone-identifier <value>]
          [--termination-policies <value>]
          [--new-instances-protected-from-scale-in | --no-new-instances-protected-from-scale-in]
          [--service-linked-role-arn <value>]
          [--max-instance-lifetime <value>]
          [--capacity-rebalance | --no-capacity-rebalance]
          [--context <value>]
          [--desired-capacity-type <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --auto-scaling-group-name (string)
          The name of the Auto Scaling group.

       --launch-configuration-name (string)
          The  name of the launch configuration. If you specify LaunchConfigu-
          rationName in your update request, you can't specify  LaunchTemplate
          or MixedInstancesPolicy .

       --launch-template (structure)
          The  launch  template  and version to use to specify the updates. If
          you specify LaunchTemplate in your update request, you can't specify
          LaunchConfigurationName or MixedInstancesPolicy .

          LaunchTemplateId -> (string)
              The  ID  of the launch template. To get the template ID, use the
              Amazon EC2 DescribeLaunchTemplates  API  operation.  New  launch
              templates    can    be    created    using    the   Amazon   EC2
              CreateLaunchTemplate API.

              Conditional: You must specify either  a  LaunchTemplateId  or  a
              LaunchTemplateName .

          LaunchTemplateName -> (string)
              The  name  of the launch template. To get the template name, use
              the Amazon EC2 DescribeLaunchTemplates API operation. New launch
              templates    can    be    created    using    the   Amazon   EC2
              CreateLaunchTemplate API.

              Conditional: You must specify either  a  LaunchTemplateId  or  a
              LaunchTemplateName .

          Version -> (string)
              The  version  number, $Latest , or $Default . To get the version
              number, use the Amazon  EC2  DescribeLaunchTemplateVersions  API
              operation. New launch template versions can be created using the
              Amazon EC2 CreateLaunchTemplateVersion  API.  If  the  value  is
              $Latest  , Amazon EC2 Auto Scaling selects the latest version of
              the launch template when launching instances. If  the  value  is
              $Default  ,  Amazon EC2 Auto Scaling selects the default version
              of the launch template when  launching  instances.  The  default
              value is $Default .

       Shorthand Syntax:

          LaunchTemplateId=string,LaunchTemplateName=string,Version=string

       JSON Syntax:

          {
            "LaunchTemplateId": "string",
            "LaunchTemplateName": "string",
            "Version": "string"
          }

       --mixed-instances-policy (structure)
          An embedded object that specifies a mixed instances policy. For more
          information, see Auto Scaling groups with  multiple  instance  types
          and purchase options in the Amazon EC2 Auto Scaling User Guide .

          LaunchTemplate -> (structure)
              Specifies  the  launch  template  to  use and the instance types
              (overrides) that are used to launch  EC2  instances  to  fulfill
              On-Demand  and  Spot  capacities. Required when creating a mixed
              instances policy.

              LaunchTemplateSpecification -> (structure)
                 The launch template to use.

                 LaunchTemplateId -> (string)
                     The ID of the launch template. To get  the  template  ID,
                     use the Amazon EC2 DescribeLaunchTemplates API operation.
                     New launch templates can be created using the Amazon  EC2
                     CreateLaunchTemplate API.

                     Conditional:  You  must specify either a LaunchTemplateId
                     or a LaunchTemplateName .

                 LaunchTemplateName -> (string)
                     The name of the launch  template.  To  get  the  template
                     name,  use  the  Amazon  EC2  DescribeLaunchTemplates API
                     operation. New launch templates can be created using  the
                     Amazon EC2 CreateLaunchTemplate API.

                     Conditional:  You  must specify either a LaunchTemplateId
                     or a LaunchTemplateName .

                 Version -> (string)
                     The version number, $Latest , or $Default .  To  get  the
                     version      number,      use      the     Amazon     EC2
                     DescribeLaunchTemplateVersions API operation. New  launch
                     template  versions  can  be  created using the Amazon EC2
                     CreateLaunchTemplateVersion API. If the value is  $Latest
                     ,  Amazon  EC2 Auto Scaling selects the latest version of
                     the launch template  when  launching  instances.  If  the
                     value  is  $Default , Amazon EC2 Auto Scaling selects the
                     default version of the  launch  template  when  launching
                     instances. The default value is $Default .

              Overrides -> (list)
                 Any  properties that you specify override the same properties
                 in the launch template. If  not  provided,  Amazon  EC2  Auto
                 Scaling  uses the instance type or instance type requirements
                 specified  in  the  launch  template  when  it  launches   an
                 instance.

                 The  overrides  can include either one or more instance types
                 or a set of instance requirements, but not both.

                 (structure)
                     Describes an override for a  launch  template.  For  more
                     information,  see Configuring overrides in the Amazon EC2
                     Auto Scaling User Guide .

                     InstanceType -> (string)
                        The instance type, such as m3.xlarge . You must use an
                        instance  type  that  is  supported  in your requested
                        Region and Availability Zones. For  more  information,
                        see Instance types in the Amazon Elastic Compute Cloud
                        User Guide .

                     WeightedCapacity -> (string)
                        The number of capacity units provided by the  instance
                        type  specified  in  InstanceType  in terms of virtual
                        CPUs, memory, storage, throughput, or  other  relative
                        performance  characteristic.  When a Spot or On-Demand
                        Instance is launched, the capacity units count  toward
                        the desired capacity. Amazon EC2 Auto Scaling launches
                        instances until the desired capacity is  totally  ful-
                        filled,  even if this results in an overage. For exam-
                        ple, if there  are  two  units  remaining  to  fulfill
                        capacity,  and Amazon EC2 Auto Scaling can only launch
                        an instance with a WeightedCapacity of five units, the
                        instance  is  launched,  and  the  desired capacity is
                        exceeded by three units.  For  more  information,  see
                        Instance  weighting for Amazon EC2 Auto Scaling in the
                        Amazon EC2 Auto Scaling User Guide . Value must be  in
                        the range of 1999.

                     LaunchTemplateSpecification -> (structure)
                        Provides the launch template to be used when launching
                        the instance type  specified  in  InstanceType  .  For
                        example,  some  instance  types might require a launch
                        template with a different AMI. If not provided, Amazon
                        EC2  Auto  Scaling  uses  the  launch  template that's
                        defined for your  mixed  instances  policy.  For  more
                        information,  see  Specifying  a different launch tem-
                        plate for an instance type  in  the  Amazon  EC2  Auto
                        Scaling User Guide .

                        LaunchTemplateId -> (string)
                            The ID of the launch template. To get the template
                            ID, use the Amazon EC2 DescribeLaunchTemplates API
                            operation.  New  launch  templates  can be created
                            using the Amazon EC2 CreateLaunchTemplate API.

                            Conditional: You must specify either a  LaunchTem-
                            plateId or a LaunchTemplateName .

                        LaunchTemplateName -> (string)
                            The  name  of the launch template. To get the tem-
                            plate     name,     use     the     Amazon     EC2
                            DescribeLaunchTemplates  API operation. New launch
                            templates can be  created  using  the  Amazon  EC2
                            CreateLaunchTemplate API.

                            Conditional:  You must specify either a LaunchTem-
                            plateId or a LaunchTemplateName .

                        Version -> (string)
                            The version number, $Latest , or $Default . To get
                            the   version   number,   use   the   Amazon   EC2
                            DescribeLaunchTemplateVersions API operation.  New
                            launch  template versions can be created using the
                            Amazon EC2 CreateLaunchTemplateVersion API. If the
                            value is $Latest , Amazon EC2 Auto Scaling selects
                            the latest version of  the  launch  template  when
                            launching  instances.  If  the value is $Default ,
                            Amazon EC2 Auto Scaling selects the  default  ver-
                            sion   of   the  launch  template  when  launching
                            instances. The default value is $Default .

                     InstanceRequirements -> (structure)
                        The instance requirements. When you  specify  instance
                        requirements,  Amazon  EC2 Auto Scaling finds instance
                        types that satisfy your requirements,  and  then  uses
                        your  On-Demand  and  Spot  allocation  strategies  to
                        launch instances from these  instance  types,  in  the
                        same  way  as  when  you  specify  a  list of specific
                        instance types.

                        VCpuCount -> (structure)
                            The minimum and maximum number  of  vCPUs  for  an
                            instance type.

                            Min -> (integer)
                               The minimum number of vCPUs.

                            Max -> (integer)
                               The maximum number of vCPUs.

                        MemoryMiB -> (structure)
                            The  minimum  and maximum instance memory size for
                            an instance type, in MiB.

                            Min -> (integer)
                               The memory minimum in MiB.

                            Max -> (integer)
                               The memory maximum in MiB.

                        CpuManufacturers -> (list)
                            Lists which specific CPU manufacturers to include.

                            o For  instance  types  with  Intel  CPUs, specify
                              intel .

                            o For instance types with AMD CPUs, specify amd  .

                            o For  instance  types  with  Amazon  Web Services
                              CPUs, specify amazon-web-services .

                            NOTE:
                               Don't confuse  the  CPU  hardware  manufacturer
                               with  the  CPU hardware architecture. Instances
                               will be launched with a compatible  CPU  archi-
                               tecture based on the Amazon Machine Image (AMI)
                               that you specify in your launch template.

                            Default: Any manufacturer

                            (string)

                        MemoryGiBPerVCpu -> (structure)
                            The minimum and maximum amount of memory per  vCPU
                            for an instance type, in GiB.

                            Default: No minimum or maximum

                            Min -> (double)
                               The memory minimum in GiB.

                            Max -> (double)
                               The memory maximum in GiB.

                        ExcludedInstanceTypes -> (list)
                            Lists which instance types to exclude. You can use
                            strings with one or more wild  cards,  represented
                            by  an  asterisk (* ). The following are examples:
                            c5* , m5a.* , r* , *3* .

                            For example, if you specify c5* , you are  exclud-
                            ing  the entire C5 instance family, which includes
                            all C5a and C5n instance  types.  If  you  specify
                            m5a.*  ,  you  are  excluding all the M5a instance
                            types, but not the M5n instance types.

                            Default: No excluded instance types

                            (string)

                        InstanceGenerations -> (list)
                            Indicates whether current or  previous  generation
                            instance types are included.

                            o For  current  generation instance types, specify
                              current . The current  generation  includes  EC2
                              instance  types  currently  recommended for use.
                              This typically includes the latest two to  three
                              generations  in  each  instance family. For more
                              information, see Instance types  in  the  Amazon
                              EC2 User Guide for Linux Instances .

                            o For  previous generation instance types, specify
                              previous .

                            Default: Any current or previous generation

                            (string)

                        SpotMaxPricePercentageOverLowestPrice -> (integer)
                            The price protection threshold for Spot Instances.
                            This is the maximum youll pay for a Spot Instance,
                            expressed as a percentage higher than the cheapest
                            M,  C,  or  R  instance  type  with your specified
                            attributes. When Amazon EC2 Auto  Scaling  selects
                            instance  types  with  your  attributes,  we  will
                            exclude instance types whose price is higher  than
                            your  threshold. The parameter accepts an integer,
                            which Amazon EC2 Auto Scaling interprets as a per-
                            centage.  To  turn off price protection, specify a
                            high value, such as 999999 .

                            Default: 100

                        OnDemandMaxPricePercentageOverLowestPrice -> (integer)
                            The   price  protection  threshold  for  On-Demand
                            Instances. This is the maximum youll  pay  for  an
                            On-Demand  Instance,  expressed  as  a  percentage
                            higher than the cheapest M, C, or R instance  type
                            with  your  specified  attributes. When Amazon EC2
                            Auto Scaling  selects  instance  types  with  your
                            attributes,  we  will exclude instance types whose
                            price is higher than your threshold. The parameter
                            accepts  an integer, which Amazon EC2 Auto Scaling
                            interprets as a percentage. To turn off price pro-
                            tection, specify a high value, such as 999999 .

                            Default: 20

                        BareMetal -> (string)
                            Indicates  whether  bare  metal instance types are
                            included, excluded, or required.

                            Default: excluded

                        BurstablePerformance -> (string)
                            Indicates whether burstable  performance  instance
                            types  are  included,  excluded,  or required. For
                            more  information,   see   Burstable   performance
                            instances  in  the Amazon EC2 User Guide for Linux
                            Instances .

                            Default: excluded

                        RequireHibernateSupport -> (boolean)
                            Indicates  whether  instance  types  must  provide
                            On-Demand Instance hibernation support.

                            Default: false

                        NetworkInterfaceCount -> (structure)
                            The  minimum  and maximum number of network inter-
                            faces for an instance type.

                            Default: No minimum or maximum

                            Min -> (integer)
                               The minimum number of network interfaces.

                            Max -> (integer)
                               The maximum number of network interfaces.

                        LocalStorage -> (string)
                            Indicates whether  instance  types  with  instance
                            store volumes are included, excluded, or required.
                            For more  information,  see  Amazon  EC2  instance
                            store  in  the  Amazon  EC2  User  Guide for Linux
                            Instances .

                            Default: included

                        LocalStorageTypes -> (list)
                            Indicates  the  type  of  local  storage  that  is
                            required.

                            o For  instance  types  with hard disk drive (HDD)
                              storage, specify hdd .

                            o For instance types with solid state drive  (SSD)
                              storage, specify sdd .

                            Default: Any local storage type

                            (string)

                        TotalLocalStorageGB -> (structure)
                            The  minimum  and maximum total local storage size
                            for an instance type, in GB.

                            Default: No minimum or maximum

                            Min -> (double)
                               The storage minimum in GB.

                            Max -> (double)
                               The storage maximum in GB.

                        BaselineEbsBandwidthMbps -> (structure)
                            The minimum and maximum baseline bandwidth perfor-
                            mance  for  an  instance  type,  in Mbps. For more
                            information, see Amazon EBSoptimized instances  in
                            the Amazon EC2 User Guide for Linux Instances .

                            Default: No minimum or maximum

                            Min -> (integer)
                               The minimum value in Mbps.

                            Max -> (integer)
                               The maximum value in Mbps.

                        AcceleratorTypes -> (list)
                            Lists  the  accelerator  types  that must be on an
                            instance type.

                            o For instance types with GPU accelerators,  spec-
                              ify gpu .

                            o For instance types with FPGA accelerators, spec-
                              ify fpga .

                            o For instance types with inference  accelerators,
                              specify inference .

                            Default: Any accelerator type

                            (string)

                        AcceleratorCount -> (structure)
                            The  minimum  and  maximum  number of accelerators
                            (GPUs, FPGAs, or Amazon  Web  Services  Inferentia
                            chips) for an instance type.

                            To exclude accelerator-enabled instance types, set
                            Max to 0 .

                            Default: No minimum or maximum

                            Min -> (integer)
                               The minimum value.

                            Max -> (integer)
                               The maximum value.

                        AcceleratorManufacturers -> (list)
                            Indicates whether instance types must have  accel-
                            erators by specific manufacturers.

                            o For  instance types with NVIDIA devices, specify
                              nvidia .

                            o For instance types with AMD devices, specify amd
                              .

                            o For  instance  types  with  Amazon  Web Services
                              devices, specify amazon-web-services .

                            o For instance types with Xilinx devices,  specify
                              xilinx .

                            Default: Any manufacturer

                            (string)

                        AcceleratorNames -> (list)
                            Lists the accelerators that must be on an instance
                            type.

                            o For instance types with NVIDIA A100 GPUs,  spec-
                              ify a100 .

                            o For  instance types with NVIDIA V100 GPUs, spec-
                              ify v100 .

                            o For instance types with NVIDIA K80 GPUs, specify
                              k80 .

                            o For  instance types with NVIDIA T4 GPUs, specify
                              t4 .

                            o For instance types with NVIDIA M60 GPUs, specify
                              m60 .

                            o For  instance  types  with  AMD  Radeon Pro V520
                              GPUs, specify radeon-pro-v520 .

                            o For instance types with Xilinx VU9P FPGAs, spec-
                              ify vu9p .

                            Default: Any accelerator

                            (string)

                        AcceleratorTotalMemoryMiB -> (structure)
                            The  minimum and maximum total memory size for the
                            accelerators on an instance type, in MiB.

                            Default: No minimum or maximum

                            Min -> (integer)
                               The memory minimum in MiB.

                            Max -> (integer)
                               The memory maximum in MiB.

          InstancesDistribution -> (structure)
              Specifies the instances distribution.

              OnDemandAllocationStrategy -> (string)
                 The order of the launch template overrides to use in fulfill-
                 ing On-Demand capacity.

                 If  you  specify  lowest-price , Amazon EC2 Auto Scaling uses
                 price to determine the  order,  launching  the  lowest  price
                 first.

                 If you specify prioritized , Amazon EC2 Auto Scaling uses the
                 priority that you assigned to each launch template  override,
                 launching  the  highest priority first. If all your On-Demand
                 capacity cannot be  fulfilled  using  your  highest  priority
                 instance, then Amazon EC2 Auto Scaling launches the remaining
                 capacity using the second priority instance type, and so  on.

                 Default:  lowest-price  for  Auto Scaling groups that specify
                 InstanceRequirements in the  overrides  and  prioritized  for
                 Auto Scaling groups that don't.

              OnDemandBaseCapacity -> (integer)
                 The  minimum amount of the Auto Scaling group's capacity that
                 must be fulfilled by On-Demand Instances. This  base  portion
                 is launched first as your group scales.

                 If  you  specify  weights for the instance types in the over-
                 rides, the base capacity is measured in the same unit of mea-
                 surement    as   the   instance   types.   If   you   specify
                 InstanceRequirements in the overrides, the base  capacity  is
                 measured  in  the  same  unit  of measurement as your group's
                 desired capacity.

                 Default: 0

              OnDemandPercentageAboveBaseCapacity -> (integer)
                 Controls the percentages  of  On-Demand  Instances  and  Spot
                 Instances for your additional capacity beyond OnDemandBaseCa-
                 pacity . Expressed as a number (for example, 20 specifies 20%
                 On-Demand Instances, 80% Spot Instances). If set to 100, only
                 On-Demand Instances are used.

                 Default: 100

              SpotAllocationStrategy -> (string)
                 Indicates how to  allocate  instances  across  Spot  Instance
                 pools.

                 If the allocation strategy is lowest-price , the Auto Scaling
                 group launches instances using the Spot pools with the lowest
                 price,  and evenly allocates your instances across the number
                 of Spot pools that you specify.

                 If the  allocation  strategy  is  capacity-optimized  (recom-
                 mended), the Auto Scaling group launches instances using Spot
                 pools that are optimally chosen based on the  available  Spot
                 capacity.  Alternatively, you can use capacity-optimized-pri-
                 oritized and set the order of instance types in the  list  of
                 launch  template  overrides  from  highest to lowest priority
                 (from first to last in the list).  Amazon  EC2  Auto  Scaling
                 honors  the  instance  type priorities on a best-effort basis
                 but optimizes for capacity first.

                 Default: lowest-price

              SpotInstancePools -> (integer)
                 The number of Spot Instance pools across  which  to  allocate
                 your  Spot  Instances. The Spot pools are determined from the
                 different instance types in the overrides.  Valid  only  when
                 the  Spot allocation strategy is lowest-price . Value must be
                 in the range of 120.

                 Default: 2

              SpotMaxPrice -> (string)
                 The maximum price per unit hour that you are willing  to  pay
                 for  a  Spot  Instance.  If you keep the value at its default
                 (unspecified), Amazon EC2 Auto  Scaling  uses  the  On-Demand
                 price  as  the maximum Spot price. To remove a value that you
                 previously set, include the property  but  specify  an  empty
                 string ("") for the value.

       JSON Syntax:

          {
            "LaunchTemplate": {
              "LaunchTemplateSpecification": {
                "LaunchTemplateId": "string",
                "LaunchTemplateName": "string",
                "Version": "string"
              },
              "Overrides": [
                {
                  "InstanceType": "string",
                  "WeightedCapacity": "string",
                  "LaunchTemplateSpecification": {
                    "LaunchTemplateId": "string",
                    "LaunchTemplateName": "string",
                    "Version": "string"
                  },
                  "InstanceRequirements": {
                    "VCpuCount": {
                      "Min": integer,
                      "Max": integer
                    },
                    "MemoryMiB": {
                      "Min": integer,
                      "Max": integer
                    },
                    "CpuManufacturers": ["intel"|"amd"|"amazon-web-services", ...],
                    "MemoryGiBPerVCpu": {
                      "Min": double,
                      "Max": double
                    },
                    "ExcludedInstanceTypes": ["string", ...],
                    "InstanceGenerations": ["current"|"previous", ...],
                    "SpotMaxPricePercentageOverLowestPrice": integer,
                    "OnDemandMaxPricePercentageOverLowestPrice": integer,
                    "BareMetal": "included"|"excluded"|"required",
                    "BurstablePerformance": "included"|"excluded"|"required",
                    "RequireHibernateSupport": true|false,
                    "NetworkInterfaceCount": {
                      "Min": integer,
                      "Max": integer
                    },
                    "LocalStorage": "included"|"excluded"|"required",
                    "LocalStorageTypes": ["hdd"|"ssd", ...],
                    "TotalLocalStorageGB": {
                      "Min": double,
                      "Max": double
                    },
                    "BaselineEbsBandwidthMbps": {
                      "Min": integer,
                      "Max": integer
                    },
                    "AcceleratorTypes": ["gpu"|"fpga"|"inference", ...],
                    "AcceleratorCount": {
                      "Min": integer,
                      "Max": integer
                    },
                    "AcceleratorManufacturers": ["nvidia"|"amd"|"amazon-web-services"|"xilinx", ...],
                    "AcceleratorNames": ["a100"|"v100"|"k80"|"t4"|"m60"|"radeon-pro-v520"|"vu9p", ...],
                    "AcceleratorTotalMemoryMiB": {
                      "Min": integer,
                      "Max": integer
                    }
                  }
                }
                ...
              ]
            },
            "InstancesDistribution": {
              "OnDemandAllocationStrategy": "string",
              "OnDemandBaseCapacity": integer,
              "OnDemandPercentageAboveBaseCapacity": integer,
              "SpotAllocationStrategy": "string",
              "SpotInstancePools": integer,
              "SpotMaxPrice": "string"
            }
          }

       --min-size (integer)
          The minimum size of the Auto Scaling group.

       --max-size (integer)
          The maximum size of the Auto Scaling group.

          NOTE:
              With a mixed instances policy that uses instance weighting, Ama-
              zon EC2 Auto Scaling may need to go above MaxSize to  meet  your
              capacity  requirements.  In  this event, Amazon EC2 Auto Scaling
              will never go above MaxSize by more than your  largest  instance
              weight  (weights  that  define how many units each instance con-
              tributes to the desired capacity of the group).

       --desired-capacity (integer)
          The desired capacity is the initial capacity  of  the  Auto  Scaling
          group after this operation completes and the capacity it attempts to
          maintain. This number must be greater than or equal to  the  minimum
          size  of the group and less than or equal to the maximum size of the
          group.

       --default-cooldown (integer)
          The amount of time, in seconds, after a scaling  activity  completes
          before  another scaling activity can start. The default value is 300
          . This setting applies when using simple scaling policies,  but  not
          when  using  other  scaling  policies or scheduled scaling. For more
          information, see Scaling cooldowns for Amazon EC2  Auto  Scaling  in
          the Amazon EC2 Auto Scaling User Guide .

       --availability-zones (list)
          One or more Availability Zones for the group.

          (string)

       Syntax:

          "string" "string" ...

       --health-check-type (string)
          The  service  to use for the health checks. The valid values are EC2
          and ELB . If you configure an Auto Scaling group to use  ELB  health
          checks,  it  considers the instance unhealthy if it fails either the
          EC2 status checks or the load balancer health checks.

       --health-check-grace-period (integer)
          The amount of time, in seconds, that Amazon EC2 Auto  Scaling  waits
          before  checking  the health status of an EC2 instance that has come
          into service and marking it unhealthy due to a failed health  check.
          The  default  value  is  0  . For more information, see Health check
          grace period in the Amazon EC2 Auto Scaling User Guide .

          Conditional: Required if you are adding an ELB health check.

       --placement-group (string)
          The name of an existing placement group into which  to  launch  your
          instances,  if  any.  A  placement  group  is  a logical grouping of
          instances within a single Availability Zone. You cannot specify mul-
          tiple  Availability  Zones  and a placement group. For more informa-
          tion, see Placement Groups in the Amazon EC2 User  Guide  for  Linux
          Instances .

       --vpc-zone-identifier (string)
          A  comma-separated  list  of  subnet IDs for a virtual private cloud
          (VPC). If you specify VPCZoneIdentifier with AvailabilityZones , the
          subnets  that  you  specify  for this parameter must reside in those
          Availability Zones.

       --termination-policies (list)
          A policy or a list of policies that are used to select the instances
          to  terminate.  The policies are executed in the order that you list
          them. For more  information,  see  Controlling  which  Auto  Scaling
          instances  terminate  during scale in in the Amazon EC2 Auto Scaling
          User Guide .

          (string)

       Syntax:

          "string" "string" ...

       --new-instances-protected-from-scale-in    |    --no-new-instances-pro-
       tected-from-scale-in (boolean)
          Indicates whether newly launched instances are protected from termi-
          nation by Amazon EC2 Auto Scaling when scaling in. For more informa-
          tion  about  preventing  instances from terminating on scale in, see
          Using instance scale-in protection in the Amazon  EC2  Auto  Scaling
          User Guide .

       --service-linked-role-arn (string)
          The  Amazon  Resource Name (ARN) of the service-linked role that the
          Auto Scaling group uses to call other Amazon Web  Services  on  your
          behalf. For more information, see Service-linked roles in the Amazon
          EC2 Auto Scaling User Guide .

       --max-instance-lifetime (integer)
          The maximum amount of time, in seconds, that an instance can  be  in
          service. The default is null. If specified, the value must be either
          0 or a number equal to or greater than 86,400 seconds  (1  day).  To
          clear  a  previously  set  value, specify a new value of 0. For more
          information, see Replacing Auto Scaling instances based  on  maximum
          instance lifetime in the Amazon EC2 Auto Scaling User Guide .

       --capacity-rebalance | --no-capacity-rebalance (boolean)
          Enables  or disables Capacity Rebalancing. For more information, see
          Amazon EC2 Auto Scaling Capacity Rebalancing in the Amazon EC2  Auto
          Scaling User Guide .

       --context (string)
          Reserved.

       --desired-capacity-type (string)
          The  unit  of measurement for the value specified for desired capac-
          ity.  Amazon  EC2  Auto  Scaling  supports  DesiredCapacityType  for
          attribute-based  instance type selection only. For more information,
          see Creating an Auto Scaling group  using  attribute-based  instance
          type selection in the Amazon EC2 Auto Scaling User Guide .

          By  default,  Amazon EC2 Auto Scaling specifies units , which trans-
          lates into number of instances.

          Valid values: units | vcpu | memory-mib

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To update the size limits of an Auto Scaling group

       This example updates the specified Auto Scaling group  with  a  minimum
       size of 2 and a maximum size of 10.

          aws autoscaling update-auto-scaling-group \
              --auto-scaling-group-name my-asg \
              --min-size 2 \
              --max-size 10

       This command produces no output.

       For more information, see Setting capacity limits for your Auto Scaling
       group in the Amazon EC2 Auto Scaling User Guide.

       Example 2: To add Elastic Load  Balancing  health  checks  and  specify
       which Availability Zones and subnets to use

       This  example  updates  the specified Auto Scaling group to add Elastic
       Load Balancing health checks. This command also updates  the  value  of
       --vpc-zone-identifier  with a list of subnet IDs in multiple Availabil-
       ity Zones.

          aws autoscaling update-auto-scaling-group \
              --auto-scaling-group-name my-asg \
              --health-check-type ELB \
              --health-check-grace-period 600 \
              --vpc-zone-identifier "subnet-5ea0c127,subnet-6194ea3b,subnet-c934b782"

       This command produces no output.

       For more information, see Elastic Load Balancing and  Amazon  EC2  Auto
       Scaling in the Amazon EC2 Auto Scaling User Guide.

       Example 3: To update the placement group and termination policy

       This example updates the placement group and termination policy to use.

          aws autoscaling update-auto-scaling-group \
              --auto-scaling-group-name my-asg \
              --placement-group my-placement-group \
              --termination-policies "OldestInstance"

       This command produces no output.

       For more information, see Auto Scaling groups in the  Amazon  EC2  Auto
       Scaling User Guide.

       Example 4: To use the latest version of the launch template

       This example updates the specified Auto Scaling group to use the latest
       version of the specified launch template.

          aws autoscaling update-auto-scaling-group \
              --auto-scaling-group-name my-asg \
              --launch-template LaunchTemplateId=lt-1234567890abcde12,Version='$Latest'

       This command produces no output.

       For more information, see Launch templates in the Amazon EC2 Auto Scal-
       ing User Guide.

       Example 5: To use a specific version of the launch template

       This example updates the specified Auto Scaling group to use a specific
       version of a launch template instead of the latest or default  version.

          aws autoscaling update-auto-scaling-group \
              --auto-scaling-group-name my-asg \
              --launch-template LaunchTemplateName=my-template-for-auto-scaling,Version='2'

       This command produces no output.

       For more information, see Launch templates in the Amazon EC2 Auto Scal-
       ing User Guide.

       Example 6: To define a  mixed  instances  policy  and  enable  capacity
       rebalancing

       This  example  updates  the specified Auto Scaling group to use a mixed
       instances policy and enables capacity rebalancing. This structure  lets
       you specify groups with Spot and On-Demand capacities and use different
       launch templates for different architectures.

          aws autoscaling update-auto-scaling-group \
              --cli-input-json file://~/config.json

       Contents of config.json:

          {
              "AutoScalingGroupName": "my-asg",
              "CapacityRebalance": true,
              "MixedInstancesPolicy": {
                  "LaunchTemplate": {
                      "LaunchTemplateSpecification": {
                          "LaunchTemplateName": "my-launch-template-for-x86",
                          "Version": "$Latest"
                      },
                      "Overrides": [
                          {
                              "InstanceType": "c6g.large",
                              "LaunchTemplateSpecification": {
                                  "LaunchTemplateName": "my-launch-template-for-arm",
                                  "Version": "$Latest"
                              }
                          },
                          {
                              "InstanceType": "c5.large"
                          },
                          {
                              "InstanceType": "c5a.large"
                          }
                      ]
                  },
                  "InstancesDistribution": {
                      "OnDemandPercentageAboveBaseCapacity": 50,
                      "SpotAllocationStrategy": "capacity-optimized"
                  }
              }
          }

       This command produces no output.

       For more information, see Auto Scaling groups  with  multiple  instance
       types and purchase options in the Amazon EC2 Auto Scaling User Guide.

OUTPUT
       None



                                                   UPDATE-AUTO-SCALING-GROUP()
