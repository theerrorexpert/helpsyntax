DESCRIBE-PROVISIONING-PARAMETERS()          DESCRIBE-PROVISIONING-PARAMETERS()



NAME
       describe-provisioning-parameters -

DESCRIPTION
       Gets  information  about  the  configuration  required to provision the
       specified product using the specified provisioning artifact.

       If the output contains a TagOption key with an empty  list  of  values,
       there  is  a  TagOption conflict for that key. The end user cannot take
       action to fix the conflict, and launch is not  blocked.  In  subsequent
       calls  to   ProvisionProduct , do not include conflicted TagOption keys
       as tags, or this causes the error "Parameter validation failed: Missing
       required  parameter  in  Tags[N  ]:Value ". Tag the provisioned product
       with the value sc-tagoption-conflict-portfolioId-productId .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            describe-provisioning-parameters
          [--accept-language <value>]
          [--product-id <value>]
          [--product-name <value>]
          [--provisioning-artifact-id <value>]
          [--provisioning-artifact-name <value>]
          [--path-id <value>]
          [--path-name <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --accept-language (string)
          The language code.

          o en - English (default)

          o jp - Japanese

          o zh - Chinese

       --product-id (string)
          The product identifier. You must provide the product name or ID, but
          not both.

       --product-name (string)
          The  name  of  the product. You must provide the name or ID, but not
          both.

       --provisioning-artifact-id (string)
          The identifier of the provisioning artifact. You  must  provide  the
          name or ID, but not both.

       --provisioning-artifact-name (string)
          The  name of the provisioning artifact. You must provide the name or
          ID, but not both.

       --path-id (string)
          The path identifier of the product. This value is  optional  if  the
          product  has  a  default  path, and required if the product has more
          than one path. To list the paths for a product, use  ListLaunchPaths
          . You must provide the name or ID, but not both.

       --path-name (string)
          The name of the path. You must provide the name or ID, but not both.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       ProvisioningArtifactParameters -> (list)
          Information about the parameters used to provision the product.

          (structure)
              Information about a parameter used to provision a product.

              ParameterKey -> (string)
                 The parameter key.

              DefaultValue -> (string)
                 The default value.

              ParameterType -> (string)
                 The parameter type.

              IsNoEcho -> (boolean)
                 If this value is true, the value for this parameter is obfus-
                 cated from view when the parameter is retrieved. This parame-
                 ter is used to hide sensitive information.

              Description -> (string)
                 The description of the parameter.

              ParameterConstraints -> (structure)
                 Constraints that the administrator has put on a parameter.

                 AllowedValues -> (list)
                     The values that the administrator  has  allowed  for  the
                     parameter.

                     (string)

                 AllowedPattern -> (string)
                     A  regular  expression  that represents the patterns that
                     allow for String types. The pattern must match the entire
                     parameter value provided.

                 ConstraintDescription -> (string)
                     A  string  that explains a constraint when the constraint
                     is violated. For example, without a  constraint  descrip-
                     tion,   a  parameter  that  has  an  allowed  pattern  of
                     [A-Za-z0-9]+ displays the following  error  message  when
                     the user specifies an invalid value:
                        Malformed  input-Parameter MyParameter must match pat-
                        tern [A-Za-z0-9]+

                     By adding a constraint description,  such  as  must  only
                     contain  letters  (uppercase  and lowercase) and numbers,
                     you can display the following customized error message:
                        Malformed input-Parameter MyParameter must  only  con-
                        tain uppercase and lowercase letters and numbers.

                 MaxLength -> (string)
                     An  integer  value  that determines the largest number of
                     characters you want to allow for String types.

                 MinLength -> (string)
                     An integer value that determines the smallest  number  of
                     characters you want to allow for String types.

                 MaxValue -> (string)
                     A numeric value that determines the largest numeric value
                     you want to allow for Number types.

                 MinValue -> (string)
                     A numeric value  that  determines  the  smallest  numeric
                     value you want to allow for Number types.

       ConstraintSummaries -> (list)
          Information about the constraints used to provision the product.

          (structure)
              Summary information about a constraint.

              Type -> (string)
                 The type of constraint.

                 o LAUNCH

                 o NOTIFICATION

                 o STACKSET

                 o TEMPLATE

              Description -> (string)
                 The description of the constraint.

       UsageInstructions -> (list)
          Any  additional metadata specifically related to the provisioning of
          the product. For example, see the Version field of  the  CloudForma-
          tion template.

          (structure)
              Additional information provided by the administrator.

              Type -> (string)
                 The usage instruction type for the value.

              Value -> (string)
                 The usage instruction value for this type.

       TagOptions -> (list)
          Information about the TagOptions associated with the resource.

          (structure)
              Summary information about a TagOption.

              Key -> (string)
                 The TagOption key.

              Values -> (list)
                 The TagOption value.

                 (string)

       ProvisioningArtifactPreferences -> (structure)
          An  object  that  contains  information  about  preferences, such as
          regions and accounts, for the provisioning artifact.

          StackSetAccounts -> (list)
              One or more AWS accounts where stack instances are deployed from
              the stack set. These accounts can be scoped in ProvisioningPref-
              erences$StackSetAccounts      and      UpdateProvisioningPrefer-
              ences$StackSetAccounts .

              Applicable only to a CFN_STACKSET provisioned product type.

              (string)

          StackSetRegions -> (list)
              One  or more AWS Regions where stack instances are deployed from
              the stack set. These regions can be scoped in  ProvisioningPref-
              erences$StackSetRegions and UpdateProvisioningPreferences$Stack-
              SetRegions .

              Applicable only to a CFN_STACKSET provisioned product type.

              (string)

       ProvisioningArtifactOutputs -> (list)
          The output of the provisioning artifact.

          (structure)
              Provisioning artifact output.

              Key -> (string)
                 The provisioning artifact output key.

              Description -> (string)
                 Description of the provisioning artifact output key.



                                            DESCRIBE-PROVISIONING-PARAMETERS()
