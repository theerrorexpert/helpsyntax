UPDATE-SECRET()                                                UPDATE-SECRET()



NAME
       update-secret -

DESCRIPTION
       Modifies  the  details  of  a secret, including metadata and the secret
       value. To change the secret value, you can also use  PutSecretValue .

       To change the rotation configuration of  a  secret,  use   RotateSecret
       instead.

       We recommend you avoid calling UpdateSecret at a sustained rate of more
       than once every 10 minutes. When you call UpdateSecret  to  update  the
       secret  value,  Secrets  Manager  creates  a new version of the secret.
       Secrets Manager removes outdated versions when there are more than 100,
       but  it does not remove versions created less than 24 hours ago. If you
       update the secret value more than once every  10  minutes,  you  create
       more  versions  than  Secrets  Manager  removes, and you will reach the
       quota for secret versions.

       If you include SecretString or SecretBinary to create a new secret ver-
       sion,  Secrets Manager automatically attaches the staging label AWSCUR-
       RENT to the new version.

       If you call this operation with a VersionId that  matches  an  existing
       version's  ClientRequestToken  , the operation results in an error. You
       can't modify an existing version, you can only create a new version. To
       remove  a  version,  remove  all staging labels from it. See  UpdateSe-
       cretVersionStage .

       If you don't specify an KMS encryption key, Secrets  Manager  uses  the
       Amazon  Web  Services  managed  key  aws/secretsmanager  .  If this key
       doesn't already exist in your account, then Secrets Manager creates  it
       for  you  automatically. All users and roles in the Amazon Web Services
       account automatically have access to use aws/secretsmanager .  Creating
       aws/secretsmanager  can  result  in  a  one-time  significant  delay in
       returning the result.

       If the secret is in a different Amazon Web Services  account  from  the
       credentials  calling  the API, then you can't use aws/secretsmanager to
       encrypt the secret, and you must create and use a customer managed key.

       To  run this command, you must have secretsmanager:UpdateSecret permis-
       sions. If you use a customer managed key, you must also have kms:Gener-
       ateDataKey and kms:Decrypt permissions .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            update-secret
          --secret-id <value>
          [--client-request-token <value>]
          [--description <value>]
          [--kms-key-id <value>]
          [--secret-binary <value>]
          [--secret-string <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --secret-id (string)
          The ARN or name of the secret.

          For an ARN, we recommend that you specify a complete ARN rather than
          a partial ARN.

       --client-request-token (string)
          If you include SecretString or SecretBinary , then  Secrets  Manager
          creates  a  new version for the secret, and this parameter specifies
          the unique identifier for the new version.

          NOTE:
              If you use the Amazon Web Services CLI or one of the Amazon  Web
              Services  SDKs  to  call this operation, then you can leave this
              parameter empty. The CLI or SDK generates a random UUID for  you
              and  includes it as the value for this parameter in the request.
              If you don't use the SDK and instead generate a raw HTTP request
              to  the Secrets Manager service endpoint, then you must generate
              a ClientRequestToken yourself for the new  version  and  include
              the value in the request.

          This value becomes the VersionId of the new version.

       --description (string)
          The description of the secret.

       --kms-key-id (string)
          The  ARN,  key ID, or alias of the KMS key that Secrets Manager uses
          to encrypt new secret versions as well as any existing versions  the
          staging  labels  AWSCURRENT , AWSPENDING , or AWSPREVIOUS . For more
          information about versions and staging labels, see Concepts: Version
          .

          WARNING:
              You   can   only   use  the  Amazon  Web  Services  managed  key
              aws/secretsmanager if you call this operation using  credentials
              from  the same Amazon Web Services account that owns the secret.
              If the secret is in a different account, then  you  must  use  a
              customer managed key and provide the ARN of that KMS key in this
              field. The user making the call must have  permissions  to  both
              the secret and the KMS key in their respective accounts.

       --secret-binary (blob)
          The  binary  data  to  encrypt  and  store in the new version of the
          secret. We recommend that you store your binary data in a  file  and
          then pass the contents of the file as a parameter.

          Either SecretBinary or SecretString must have a value, but not both.

          You can't access this parameter in the Secrets Manager console.

       --secret-string (string)
          The text data to encrypt and store in the new version of the secret.
          We  recommend  you  use a JSON structure of key/value pairs for your
          secret value.

          Either SecretBinary or SecretString must have a value, but not both.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To update the description of a secret

       The  following  update-secret  example  updates  the  description  of a
       secret.

          aws secretsmanager update-secret \
              --secret-id MyTestSecret \
              --description "This is a new description for the secret."

       Output:

          {
              "ARN": "arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestSecret-a1b2c3",
              "Name": "MyTestSecret"
          }

       For more information, see Modify a secret in the Secrets  Manager  User
       Guide.

       Example 2: To update the encryption key associated with a secret

       The following update-secret example updates the KMS key used to encrypt
       the secret value. The KMS key must be in the same region as the secret.

          aws secretsmanager update-secret \
              --secret-id MyTestSecret \
              --kms-key-id arn:aws:kms:us-west-2:123456789012:key/EXAMPLE1-90ab-cdef-fedc-ba987EXAMPLE

       Output:

          {
              "ARN": "arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestSecret-a1b2c3",
              "Name": "MyTestSecret"
          }

       For  more  information, see Modify a secret in the Secrets Manager User
       Guide.

OUTPUT
       ARN -> (string)
          The ARN of the secret that was updated.

       Name -> (string)
          The name of the secret that was updated.

       VersionId -> (string)
          If Secrets Manager created a new version of the secret  during  this
          operation,  then VersionId contains the unique identifier of the new
          version.



                                                               UPDATE-SECRET()
