CREATE-SECRET()                                                CREATE-SECRET()



NAME
       create-secret -

DESCRIPTION
       Creates  a new secret. A secret is a set of credentials, such as a user
       name and password, that you store in an encrypted form in Secrets  Man-
       ager.  The  secret also includes the connection information to access a
       database or other service, which Secrets  Manager  doesn't  encrypt.  A
       secret  in  Secrets  Manager consists of both the protected secret data
       and the important information needed to manage the secret.

       For information about creating a secret in the console,  see  Create  a
       secret .

       To create a secret, you can provide the secret value to be encrypted in
       either the SecretString parameter or the  SecretBinary  parameter,  but
       not both. If you include SecretString or SecretBinary then Secrets Man-
       ager creates an initial secret version and automatically  attaches  the
       staging label AWSCURRENT to it.

       If  you  don't  specify an KMS encryption key, Secrets Manager uses the
       Amazon Web Services  managed  key  aws/secretsmanager  .  If  this  key
       doesn't  already exist in your account, then Secrets Manager creates it
       for you automatically. All users and roles in the Amazon  Web  Services
       account  automatically have access to use aws/secretsmanager . Creating
       aws/secretsmanager can  result  in  a  one-time  significant  delay  in
       returning the result.

       If  the  secret  is in a different Amazon Web Services account from the
       credentials calling the API, then you can't use  aws/secretsmanager  to
       encrypt  the secret, and you must create and use a customer managed KMS
       key.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-secret
          --name <value>
          [--client-request-token <value>]
          [--description <value>]
          [--kms-key-id <value>]
          [--secret-binary <value>]
          [--secret-string <value>]
          [--tags <value>]
          [--add-replica-regions <value>]
          [--force-overwrite-replica-secret | --no-force-overwrite-replica-secret]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --name (string)
          The name of the new secret.

          The secret name can contain ASCII letters, numbers, and the  follow-
          ing characters: /_+=.@-

          Do  not  end  your secret name with a hyphen followed by six charac-
          ters. If you do so, you risk confusion and unexpected  results  when
          searching for a secret by partial ARN. Secrets Manager automatically
          adds a hyphen and six random characters after the secret name at the
          end of the ARN.

       --client-request-token (string)
          If  you  include SecretString or SecretBinary , then Secrets Manager
          creates an initial version for the secret, and this parameter speci-
          fies the unique identifier for the new version.

          NOTE:
              If  you use the Amazon Web Services CLI or one of the Amazon Web
              Services SDKs to call this operation, then you  can  leave  this
              parameter  empty. The CLI or SDK generates a random UUID for you
              and includes it as the value for this parameter in the  request.
              If you don't use the SDK and instead generate a raw HTTP request
              to the Secrets Manager service endpoint, then you must  generate
              a  ClientRequestToken  yourself  for the new version and include
              the value in the request.

          This value helps ensure idempotency. Secrets Manager uses this value
          to  prevent  the  accidental creation of duplicate versions if there
          are failures and retries during a rotation. We  recommend  that  you
          generate  a  UUID-type  value  to ensure uniqueness of your versions
          within the specified secret.

          o If the ClientRequestToken value isn't already  associated  with  a
            version of the secret then a new version of the secret is created.

          o If a version with  this  value  already  exists  and  the  version
            SecretString  and SecretBinary values are the same as those in the
            request, then the request is ignored.

          o If a version with this value already  exists  and  that  version's
            SecretString  and  SecretBinary values are different from those in
            the request, then the request fails because you cannot  modify  an
            existing  version.  Instead,  use   PutSecretValue to create a new
            version.

          This value becomes the VersionId of the new version.

       --description (string)
          The description of the secret.

       --kms-key-id (string)
          The ARN, key ID, or alias of the KMS key that Secrets  Manager  uses
          to encrypt the secret value in the secret.

          To  use  a  KMS  key  in a different account, use the key ARN or the
          alias ARN.

          If you don't specify this value, then Secrets Manager uses  the  key
          aws/secretsmanager  .  If  that  key doesn't yet exist, then Secrets
          Manager creates it for you automatically the first time it  encrypts
          the secret value.

          If the secret is in a different Amazon Web Services account from the
          credentials calling the API, then you can't  use  aws/secretsmanager
          to  encrypt  the secret, and you must create and use a customer man-
          aged KMS key.

       --secret-binary (blob)
          The binary data to encrypt and store  in  the  new  version  of  the
          secret.  We  recommend that you store your binary data in a file and
          then pass the contents of the file as a parameter.

          Either SecretString or SecretBinary must have a value, but not both.

          This parameter is not available in the Secrets Manager console.

       --secret-string (string)
          The  text  data  to  encrypt  and  store  in this new version of the
          secret. We recommend you use a JSON structure of key/value pairs for
          your secret value.

          Either SecretString or SecretBinary must have a value, but not both.

          If you create a secret by using the  Secrets  Manager  console  then
          Secrets  Manager  puts the protected secret text in only the Secret-
          String parameter. The Secrets Manager console stores the information
          as  a JSON structure of key/value pairs that a Lambda rotation func-
          tion can parse.

       --tags (list)
          A list of tags to attach to the secret. Each tag is a key and  value
          pair of strings in a JSON text string, for example:
              [{"Key":"CostCenter","Value":"12345"},{"Key":"environ-
              ment","Value":"production"}]

          Secrets Manager tag key names are case sensitive. A tag with the key
          "ABC" is a different tag from one with key "abc".

          If  you  check tags in permissions policies as part of your security
          strategy, then adding or removing a tag can change  permissions.  If
          the  completion  of  this  operation would result in you losing your
          permissions for this secret, then Secrets Manager blocks the  opera-
          tion  and  returns an Access Denied error. For more information, see
          Control access to secrets using tags and Limit access to  identities
          with tags that match secrets' tags .

          For information about how to format a JSON parameter for the various
          command line tool environments, see Using JSON for Parameters  .  If
          your  command-line  tool  or SDK requires quotation marks around the
          parameter, you should use single quotes to avoid confusion with  the
          double quotes required in the JSON text.

          The following restrictions apply to tags:

          o Maximum number of tags per secret: 50

          o Maximum key length: 127 Unicode characters in UTF-8

          o Maximum value length: 255 Unicode characters in UTF-8

          o Tag keys and values are case sensitive.

          o Do  not  use  the  aws: prefix in your tag names or values because
            Amazon Web Services reserves it for Amazon Web Services  use.  You
            can't  edit  or  delete tag names or values with this prefix. Tags
            with this prefix do not count against your tags per secret  limit.

          o If  you  use  your  tagging  schema  across  multiple services and
            resources, other services might have restrictions on allowed char-
            acters. Generally allowed characters: letters, spaces, and numbers
            representable in UTF-8, plus the following special characters: + -
            = . _ : / @.

          (structure)
              A structure that contains information about a tag.

              Key -> (string)
                 The key identifier, or name, of the tag.

              Value -> (string)
                 The string value associated with the key of the tag.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --add-replica-regions (list)
          A list of Regions and KMS keys to replicate secrets.

          (structure)
              A  custom  type  that  specifies a Region and the KmsKeyId for a
              replica secret.

              Region -> (string)
                 A Region code. For a list of Region codes, see Name and  code
                 of Regions .

              KmsKeyId -> (string)
                 The  ARN,  key  ID,  or  alias  of the KMS key to encrypt the
                 secret. If you don't include this field, Secrets Manager uses
                 aws/secretsmanager .

       Shorthand Syntax:

          Region=string,KmsKeyId=string ...

       JSON Syntax:

          [
            {
              "Region": "string",
              "KmsKeyId": "string"
            }
            ...
          ]

       --force-overwrite-replica-secret  | --no-force-overwrite-replica-secret
       (boolean)
          Specifies whether to overwrite a secret with the same  name  in  the
          destination Region.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To create a secret

       The following create-secret example creates a secret with two key-value
       pairs.

          aws secretsmanager create-secret \
              --name MyTestSecret \
              --description "My test secret created with the CLI." \
              --secret-string "{\"user\":\"diegor\",\"password\":\"i29wwX!%9wFV\"}"

       Output:

          {
            "ARN": "arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestSecret-a1b2c3",
            "Name": "MyTestSecret",
            "VersionId": "EXAMPLE1-90ab-cdef-fedc-ba987EXAMPLE"
          }

       For more information, see Create a secret in the Secrets  Manager  User
       Guide.

       Example 2: To create a secret from credentials in a JSON file

       The  following  create-secret example creates a secret from credentials
       in a file. For more information, see Loading AWS CLI parameters from  a
       file in the AWS CLI User Guide.

          aws secretsmanager create-secret \
              --name MyTestSecret \
              --secret-string file://mycreds.json

       Contents of mycreds.json:

          {
            "engine": "mysql",
            "username": "saanvis",
            "password": "i29wwX!%9wFV",
            "host": "my-database-endpoint.us-west-2.rds.amazonaws.com",
            "dbname": "myDatabase",
            "port": "3306"
          }

       Output:

          {
            "ARN": "arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestSecret-a1b2c3",
            "Name": "MyTestSecret",
            "VersionId": "a1b2c3d4-5678-90ab-cdef-EXAMPLE11111"
          }

       For  more  information, see Create a secret in the Secrets Manager User
       Guide.

OUTPUT
       ARN -> (string)
          The ARN of the new secret. The ARN includes the name of  the  secret
          followed by six random characters. This ensures that if you create a
          new secret with the same name as a deleted secret, then  users  with
          access  to the old secret don't get access to the new secret because
          the ARNs are different.

       Name -> (string)
          The name of the new secret.

       VersionId -> (string)
          The unique identifier associated with the version of the new secret.

       ReplicationStatus -> (list)
          A list of the replicas of this secret and their status:

          o Failed , which indicates that the replica was not created.

          o InProgress  ,  which  indicates  that  Secrets  Manager  is in the
            process of creating the replica.

          o InSync , which indicates that the replica was created.

          (structure)
              A replication object  consisting  of  a  RegionReplicationStatus
              object  and includes a Region, KMSKeyId, status, and status mes-
              sage.

              Region -> (string)
                 The Region where replication occurs.

              KmsKeyId -> (string)
                 Can be an ARN , Key ID , or Alias .

              Status -> (string)
                 The status can be InProgress , Failed , or InSync .

              StatusMessage -> (string)
                 Status message such as "Secret with this name already  exists
                 in this region ".

              LastAccessedDate -> (timestamp)
                 The date that you last accessed the secret in the Region.



                                                               CREATE-SECRET()
