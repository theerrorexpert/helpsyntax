PUT-SECRET-VALUE()                                          PUT-SECRET-VALUE()



NAME
       put-secret-value -

DESCRIPTION
       Creates a new version with a new encrypted secret value and attaches it
       to the secret. The version can contain a new SecretString  value  or  a
       new SecretBinary value.

       We  recommend  you  avoid calling PutSecretValue at a sustained rate of
       more than once every 10 minutes. When  you  update  the  secret  value,
       Secrets  Manager  creates  a new version of the secret. Secrets Manager
       removes outdated versions when there are more than 100, but it does not
       remove  versions created less than 24 hours ago. If you call PutSecret-
       Value more than once every 10 minutes, you create  more  versions  than
       Secrets  Manager  removes, and you will reach the quota for secret ver-
       sions.

       You can specify the staging labels to attach to the new version in Ver-
       sionStages  . If you don't include VersionStages , then Secrets Manager
       automatically moves the staging label AWSCURRENT to  this  version.  If
       this  operation  creates the first version for the secret, then Secrets
       Manager automatically attaches the staging label AWSCURRENT to it .

       If this operation moves the staging label AWSCURRENT from another  ver-
       sion to this version, then Secrets Manager also automatically moves the
       staging label AWSPREVIOUS to the version that  AWSCURRENT  was  removed
       from.

       This  operation  is  idempotent. If a version with a VersionId with the
       same value as the ClientRequestToken parameter already exists, and  you
       specify  the same secret data, the operation succeeds but does nothing.
       However, if the secret data is  different,  then  the  operation  fails
       because  you  can't modify an existing version; you can only create new
       ones.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            put-secret-value
          --secret-id <value>
          [--client-request-token <value>]
          [--secret-binary <value>]
          [--secret-string <value>]
          [--version-stages <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --secret-id (string)
          The ARN or name of the secret to add a new version to.

          For an ARN, we recommend that you specify a complete ARN rather than
          a partial ARN.

          If the secret doesn't already exist, use CreateSecret instead.

       --client-request-token (string)
          A unique identifier for the new version of the secret.

          NOTE:
              If  you use the Amazon Web Services CLI or one of the Amazon Web
              Services SDKs to call this operation, then you  can  leave  this
              parameter  empty because they generate a random UUID for you. If
              you don't use the SDK and instead generate a raw HTTP request to
              the  Secrets  Manager service endpoint, then you must generate a
              ClientRequestToken yourself for new versions  and  include  that
              value in the request.

          This value helps ensure idempotency. Secrets Manager uses this value
          to prevent the accidental creation of duplicate  versions  if  there
          are  failures  and  retries during the Lambda rotation function pro-
          cessing. We recommend that you generate a UUID-type value to  ensure
          uniqueness within the specified secret.

          o If  the  ClientRequestToken  value isn't already associated with a
            version of the secret then a new version of the secret is created.

          o If  a  version  with  this value already exists and that version's
            SecretString or SecretBinary values are the same as those  in  the
            request  then the request is ignored. The operation is idempotent.

          o If a version with this value already exists and the version of the
            SecretString  and  SecretBinary values are different from those in
            the request, then the request fails because  you  can't  modify  a
            secret  version.  You  can  only  create new versions to store new
            secret values.

          This value becomes the VersionId of the new version.

       --secret-binary (blob)
          The binary data to encrypt and store  in  the  new  version  of  the
          secret.  To  use this parameter in the command-line tools, we recom-
          mend that you store your binary data in a file  and  then  pass  the
          contents of the file as a parameter.

          You must include SecretBinary or SecretString , but not both.

          You can't access this value from the Secrets Manager console.

       --secret-string (string)
          The text to encrypt and store in the new version of the secret.

          You must include SecretBinary or SecretString , but not both.

          We  recommend  you create the secret string as JSON key/value pairs,
          as shown in the example.

       --version-stages (list)
          A list of staging labels to attach to this version  of  the  secret.
          Secrets  Manager  uses  staging labels to track versions of a secret
          through the rotation process.

          If you specify a staging label that's already associated with a dif-
          ferent  version of the same secret, then Secrets Manager removes the
          label from the other version and attaches it to this version. If you
          specify  AWSCURRENT , and it is already attached to another version,
          then Secrets Manager also moves the staging label AWSPREVIOUS to the
          version that AWSCURRENT was removed from.

          If  you don't include VersionStages , then Secrets Manager automati-
          cally moves the staging label AWSCURRENT to this version.

          (string)

       Syntax:

          "string" "string" ...

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To store a new secret value in a secret

       The following put-secret-value example  creates  a  new  version  of  a
       secret with two key-value pairs.

          aws secretsmanager put-secret-value \
              --secret-id MyTestSecret \
              --secret-string "{\"user\":\"diegor\",\"password\":\"VCsdUbPX!bcu]N\"KEnm||:3Bp3$IBOS\"}"

       Output:

          {
              "ARN": "arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestSecret-1a2b3c",
              "Name": "MyTestSecret",
              "VersionId": "a1b2c3d4-5678-90ab-cdef-EXAMPLE11111",
              "VersionStages": [
                  "AWSCURRENT"
              ]
          }

       For  more  information, see Modify a secret in the Secrets Manager User
       Guide.

       Example 2: To store a new secret value from credentials in a JSON file

       The following put-secret-value example  creates  a  new  version  of  a
       secret  from  credentials  in a file. For more information, see Loading
       AWS CLI parameters from a file in the AWS CLI User Guide.

          aws secretsmanager put-secret-value \
              --secret-id MyTestSecret \
              --secret-string file://mycreds.json

       Contents of mycreds.json:

          {
            "engine": "mysql",
            "username": "saanvis",
            "password": "i29wwX!%9wFV",
            "host": "my-database-endpoint.us-west-2.rds.amazonaws.com",
            "dbname": "myDatabase",
            "port": "3306"
          }

       Output:

          {
              "ARN": "arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestSecret-a1b2c3",
              "Name": "MyTestSecret",
              "VersionId": "a1b2c3d4-5678-90ab-cdef-EXAMPLE11111",
              "VersionStages": [
                  "AWSCURRENT"
              ]
          }

       For more information, see Modify a secret in the Secrets  Manager  User
       Guide.

OUTPUT
       ARN -> (string)
          The ARN of the secret.

       Name -> (string)
          The name of the secret.

       VersionId -> (string)
          The unique identifier of the version of the secret.

       VersionStages -> (list)
          The  list of staging labels that are currently attached to this ver-
          sion of the secret. Secrets Manager uses staging labels to  track  a
          version as it progresses through the secret rotation process.

          (string)



                                                            PUT-SECRET-VALUE()
