DESCRIBE-TASKS()                                              DESCRIBE-TASKS()



NAME
       describe-tasks -

DESCRIPTION
       Describes a specified task or tasks.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            describe-tasks
          [--cluster <value>]
          --tasks <value>
          [--include <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --cluster (string)
          The  short  name  or  full Amazon Resource Name (ARN) of the cluster
          that hosts the task or tasks to describe. If you do  not  specify  a
          cluster,  the default cluster is assumed. This parameter is required
          if the task or tasks you are describing were launched in any cluster
          other than the default cluster.

       --tasks (list)
          A list of up to 100 task IDs or full ARN entries.

          (string)

       Syntax:

          "string" "string" ...

       --include (list)
          Specifies whether you want to see the resource tags for the task. If
          TAGS is specified, the tags are included in the  response.  If  this
          field is omitted, tags aren't included in the response.

          (string)

       Syntax:

          "string" "string" ...

          Where valid values are:
            TAGS

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To describe a task

       The  following  describe-tasks example retrieves the details of a task.
       You can specify the task by using either the ID  or  full  ARN  of  the
       task.

          aws ecs describe-tasks \
              --cluster MyCluster \
              --tasks arn:aws:ecs:us-west-2:123456789012:task/MyCluster/1234567890123456789

       Output:

          {
              "tasks": [
                  {
                      "taskArn": "arn:aws:ecs:us-west-2:123456789012:task/MyCluster/1234567890123456789",
                      "clusterArn": "arn:aws:ecs:us-west-2:123456789012:cluster/MyCluster",
                      "taskDefinitionArn": "arn:aws:ecs:us-west-2:123456789012:task-definition/sample-fargate:2",
                      "overrides": {
                          "containerOverrides": [
                              {
                                  "name": "fargate-app"
                              }
                          ]
                      },
                      "lastStatus": "RUNNING",
                      "desiredStatus": "RUNNING",
                      "cpu": "256",
                      "memory": "512",
                      "containers": [
                          {
                              "containerArn": "arn:aws:ecs:us-west-2:123456789012:container/a1b2c3d4-5678-90ab-cdef-11111EXAMPLE",
                              "taskArn": "arn:aws:ecs:us-west-2:123456789012:task/MyCluster/1234567890123456789",
                              "name": "fargate-app",
                              "lastStatus": "RUNNING",
                              "networkBindings": [],
                              "networkInterfaces": [
                                  {
                                      "attachmentId": "a1b2c3d4-5678-90ab-cdef-22222EXAMPLE",
                                      "privateIpv4Address": "10.0.0.4"
                                  }
                              ],
                              "healthStatus": "UNKNOWN",
                              "cpu": "0"
                          }
                      ],
                      "startedBy": "ecs-svc/1234567890123456789",
                      "version": 3,
                      "connectivity": "CONNECTED",
                      "connectivityAt": 1557134016.971,
                      "pullStartedAt": 1557134025.379,
                      "pullStoppedAt": 1557134033.379,
                      "createdAt": 1557134011.644,
                      "startedAt": 1557134035.379,
                      "group": "service:fargate-service",
                      "launchType": "FARGATE",
                      "platformVersion": "1.3.0",
                      "attachments": [
                          {
                              "id": "a1b2c3d4-5678-90ab-cdef-33333EXAMPLE",
                              "type": "ElasticNetworkInterface",
                              "status": "ATTACHED",
                              "details": [
                                  {
                                      "name": "subnetId",
                                      "value": "subnet-12344321"
                                  },
                                  {
                                      "name": "networkInterfaceId",
                                      "value": "eni-12344321"
                                  },
                                  {
                                      "name": "macAddress",
                                      "value": "0a:90:09:84:f9:14"
                                  },
                                  {
                                      "name": "privateIPv4Address",
                                      "value": "10.0.0.4"
                                  }
                              ]
                          }
                      ],
                      "healthStatus": "UNKNOWN",
                      "tags": []
                  }
              ],
              "failures": []
          }

       For more information, see Amazon ECS Task Definitions in the Amazon ECS
       Developer Guide.

OUTPUT
       tasks -> (list)
          The list of tasks.

          (structure)
              Details on a task in a cluster.

              attachments -> (list)
                 The Elastic Network Adapter that's associated with  the  task
                 if the task uses the awsvpc network mode.

                 (structure)
                     An  object  representing  a  container  instance  or task
                     attachment.

                     id -> (string)
                        The unique identifier for the attachment.

                     type -> (string)
                        The type of the attachment, such as  ElasticNetworkIn-
                        terface .

                     status -> (string)
                        The status of the attachment. Valid values are PRECRE-
                        ATED , CREATED , ATTACHING , ATTACHED  ,  DETACHING  ,
                        DETACHED , DELETED , and FAILED .

                     details -> (list)
                        Details  of the attachment. For elastic network inter-
                        faces, this includes the network interface ID, the MAC
                        address,  the subnet ID, and the private IPv4 address.

                        (structure)
                            A key-value pair object.

                            name -> (string)
                               The name of the key-value pair. For environment
                               variables,  this is the name of the environment
                               variable.

                            value -> (string)
                               The value of the key-value pair.  For  environ-
                               ment  variables, this is the value of the envi-
                               ronment variable.

              attributes -> (list)
                 The attributes of the task

                 (structure)
                     An attribute is a name-value pair that's associated  with
                     an Amazon ECS object. Attributes enable you to extend the
                     Amazon ECS data model by adding custom metadata  to  your
                     resources.  For  more  information, see Attributes in the
                     Amazon Elastic Container Service Developer Guide .

                     name -> (string)
                        The name of  the  attribute.  The  name  must  contain
                        between  1  and  128  characters. The name may contain
                        letters (uppercase and  lowercase),  numbers,  hyphens
                        (-),   underscores  (_),  forward  slashes  (/),  back
                        slashes (), or periods (.).

                     value -> (string)
                        The value of the attribute.  The  value  must  contain
                        between  1  and 128 characters. It can contain letters
                        (uppercase  and  lowercase),  numbers,  hyphens   (-),
                        underscores  (_),  periods  (.), at signs (@), forward
                        slashes (/), back slashes (), colons (:),  or  spaces.
                        The value can't can't start or end with a space.

                     targetType -> (string)
                        The  type  of the target to attach the attribute with.
                        This parameter is required if you use the  short  form
                        ID for a resource instead of the full ARN.

                     targetId -> (string)
                        The  ID  of the target. You can specify the short form
                        ID for a resource or the  full  Amazon  Resource  Name
                        (ARN).

              availabilityZone -> (string)
                 The Availability Zone for the task.

              capacityProviderName -> (string)
                 The capacity provider that's associated with the task.

              clusterArn -> (string)
                 The ARN of the cluster that hosts the task.

              connectivity -> (string)
                 The connectivity status of a task.

              connectivityAt -> (timestamp)
                 The  Unix timestamp for the time when the task last went into
                 CONNECTED status.

              containerInstanceArn -> (string)
                 The ARN of the container instances that host the task.

              containers -> (list)
                 The containers that's associated with the task.

                 (structure)
                     A Docker container that's part of a task.

                     containerArn -> (string)
                        The Amazon Resource Name (ARN) of the container.

                     taskArn -> (string)
                        The ARN of the task.

                     name -> (string)
                        The name of the container.

                     image -> (string)
                        The image used for the container.

                     imageDigest -> (string)
                        The container image manifest digest.

                        NOTE:
                            The imageDigest is only returned if the  container
                            is  using an image hosted in Amazon ECR, otherwise
                            it is omitted.

                     runtimeId -> (string)
                        The ID of the Docker container.

                     lastStatus -> (string)
                        The last known status of the container.

                     exitCode -> (integer)
                        The exit code returned from the container.

                     reason -> (string)
                        A short (255 max characters) human-readable string  to
                        provide  additional details about a running or stopped
                        container.

                     networkBindings -> (list)
                        The network bindings associated with the container.

                        (structure)
                            Details on the network  bindings  between  a  con-
                            tainer  and  its  host container instance. After a
                            task reaches the RUNNING status, manual and  auto-
                            matic host and container port assignments are vis-
                            ible in the networkBindings  section  of   Descri-
                            beTasks API responses.

                            bindIP -> (string)
                               The  IP  address that the container is bound to
                               on the container instance.

                            containerPort -> (integer)
                               The port number on the  container  that's  used
                               with the network binding.

                            hostPort -> (integer)
                               The  port  number  on the host that's used with
                               the network binding.

                            protocol -> (string)
                               The protocol used for the network binding.

                     networkInterfaces -> (list)
                        The network interfaces associated with the  container.

                        (structure)
                            An  object representing the elastic network inter-
                            face for tasks that use the awsvpc network mode.

                            attachmentId -> (string)
                               The attachment ID for the network interface.

                            privateIpv4Address -> (string)
                               The private IPv4 address for the network inter-
                               face.

                            ipv6Address -> (string)
                               The private IPv6 address for the network inter-
                               face.

                     healthStatus -> (string)
                        The health status of the container. If  health  checks
                        aren't configured for this container in its task defi-
                        nition, then it reports the health status as UNKNOWN .

                     managedAgents -> (list)
                        The  details  of any Amazon ECS managed agents associ-
                        ated with the container.

                        (structure)
                            Details about the managed  agent  status  for  the
                            container.

                            lastStartedAt -> (timestamp)
                               The  Unix  timestamp for the time when the man-
                               aged agent was last started.

                            name -> (string)
                               The name of the managed agent. When the execute
                               command  feature  is enabled, the managed agent
                               name is ExecuteCommandAgent .

                            reason -> (string)
                               The reason for why the managed agent is in  the
                               state it is in.

                            lastStatus -> (string)
                               The last known status of the managed agent.

                     cpu -> (string)
                        The  number  of  CPU  units set for the container. The
                        value is 0 if no value was specified in the  container
                        definition when the task definition was registered.

                     memory -> (string)
                        The  hard  limit  (in  MiB) of memory set for the con-
                        tainer.

                     memoryReservation -> (string)
                        The soft limit (in MiB) of memory  set  for  the  con-
                        tainer.

                     gpuIds -> (list)
                        The IDs of each GPU assigned to the container.

                        (string)

              cpu -> (string)
                 The  number  of  CPU units used by the task as expressed in a
                 task definition. It can be expressed as an integer using  CPU
                 units  (for  example,  1024  ). It can also be expressed as a
                 string using vCPUs (for example, 1 vCPU or 1 vcpu  ).  String
                 values  are  converted  to  an integer that indicates the CPU
                 units when the task definition is registered.

                 If you use the EC2 launch type, this field is optional.  Sup-
                 ported  values  are  between  128 CPU units (0.125 vCPUs) and
                 10240 CPU units (10 vCPUs).

                 If you use the Fargate launch type, this field  is  required.
                 You must use one of the following values. These values deter-
                 mine the range of supported values for the memory parameter:

                 The CPU units cannot be less than 1 vCPU when you use Windows
                 containers on Fargate.

                 o 256  (.25  vCPU)  -  Available memory values: 512 (0.5 GB),
                   1024 (1 GB), 2048 (2 GB)

                 o 512 (.5 vCPU) - Available memory values: 1024 (1 GB),  2048
                   (2 GB), 3072 (3 GB), 4096 (4 GB)

                 o 1024  (1 vCPU) - Available memory values: 2048 (2 GB), 3072
                   (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB),
                   8192 (8 GB)

                 o 2048  (2  vCPU)  - Available memory values: Between 4096 (4
                   GB) and 16384 (16 GB) in increments of 1024 (1 GB)

                 o 4096 (4 vCPU) - Available memory values:  Between  8192  (8
                   GB) and 30720 (30 GB) in increments of 1024 (1 GB)

              createdAt -> (timestamp)
                 The  Unix  timestamp  for the time when the task was created.
                 More specifically, it's for the time when  the  task  entered
                 the PENDING state.

              desiredStatus -> (string)
                 The  desired  status  of  the task. For more information, see
                 Task Lifecycle .

              enableExecuteCommand -> (boolean)
                 Determines whether execute command functionality  is  enabled
                 for  this  task.  If  true , execute command functionality is
                 enabled on all the containers in the task.

              executionStoppedAt -> (timestamp)
                 The Unix timestamp for  the  time  when  the  task  execution
                 stopped.

              group -> (string)
                 The name of the task group that's associated with the task.

              healthStatus -> (string)
                 The health status for the task. It's determined by the health
                 of the essential containers in the  task.  If  all  essential
                 containers  in  the  task are reporting as HEALTHY , the task
                 status also reports as HEALTHY . If any essential  containers
                 in  the task are reporting as UNHEALTHY or UNKNOWN , the task
                 status also reports as UNHEALTHY or UNKNOWN .

                 NOTE:
                     The Amazon ECS container agent doesn't monitor or  report
                     on  Docker health checks that are embedded in a container
                     image and not specified in the container definition.  For
                     example,  this includes those specified in a parent image
                     or from the image's Dockerfile. Health  check  parameters
                     that are specified in a container definition override any
                     Docker health checks that  are  found  in  the  container
                     image.

              inferenceAccelerators -> (list)
                 The  Elastic Inference accelerator that's associated with the
                 task.

                 (structure)
                     Details on an Elastic  Inference  accelerator.  For  more
                     information, see Working with Amazon Elastic Inference on
                     Amazon ECS in the Amazon Elastic Container Service Devel-
                     oper Guide .

                     deviceName -> (string)
                        The  Elastic  Inference  accelerator  device name. The
                        deviceName must also be referenced in a container def-
                        inition as a  ResourceRequirement .

                     deviceType -> (string)
                        The Elastic Inference accelerator type to use.

              lastStatus -> (string)
                 The last known status for the task. For more information, see
                 Task Lifecycle .

              launchType -> (string)
                 The infrastructure where your task runs on. For more informa-
                 tion,  see Amazon ECS launch types in the Amazon Elastic Con-
                 tainer Service Developer Guide .

              memory -> (string)
                 The amount of memory (in MiB) that the task uses as expressed
                 in a task definition. It can be expressed as an integer using
                 MiB (for example, 1024 ). If it's expressed as a string using
                 GB  (for example, 1GB or 1 GB ), it's converted to an integer
                 indicating the MiB when the task definition is registered.

                 If you use the EC2 launch type, this field is optional.

                 If you use the Fargate launch type, this field  is  required.
                 You  must use one of the following values. The value that you
                 choose determines the range of supported values for  the  cpu
                 parameter.

                 o 512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available cpu val-
                   ues: 256 (.25 vCPU)

                 o 1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Avail-
                   able cpu values: 512 (.5 vCPU)

                 o 2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6
                   GB), 7168 (7 GB), 8192 (8 GB) - Available cpu values:  1024
                   (1 vCPU)

                 o Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024
                   (1 GB) - Available cpu values: 2048 (2 vCPU)

                 o Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024
                   (1 GB) - Available cpu values: 4096 (4 vCPU)

              overrides -> (structure)
                 One or more container overrides.

                 containerOverrides -> (list)
                     One  or more container overrides that are sent to a task.

                     (structure)
                        The overrides that are sent to a container.  An  empty
                        container  override can be passed in. An example of an
                        empty container override is {"containerOverrides": [ ]
                        }  .  If  a non-empty container override is specified,
                        the name parameter must be included.

                        name -> (string)
                            The name of the container that receives the  over-
                            ride.  This  parameter is required if any override
                            is specified.

                        command -> (list)
                            The command to send to the  container  that  over-
                            rides the default command from the Docker image or
                            the task definition. You must also specify a  con-
                            tainer name.

                            (string)

                        environment -> (list)
                            The  environment  variables  to  send  to the con-
                            tainer. You can  add  new  environment  variables,
                            which are added to the container at launch, or you
                            can override the  existing  environment  variables
                            from  the Docker image or the task definition. You
                            must also specify a container name.

                            (structure)
                               A key-value pair object.

                               name -> (string)
                                   The name of the key-value pair.  For  envi-
                                   ronment  variables, this is the name of the
                                   environment variable.

                               value -> (string)
                                   The value of the key-value pair. For  envi-
                                   ronment variables, this is the value of the
                                   environment variable.

                        environmentFiles -> (list)
                            A list of files containing the  environment  vari-
                            ables to pass to a container, instead of the value
                            from the container definition.

                            (structure)
                               A list  of  files  containing  the  environment
                               variables to pass to a container. You can spec-
                               ify up to ten environment files. The file  must
                               have  a  .env  file  extension. Each line in an
                               environment file should contain an  environment
                               variable in VARIABLE=VALUE format. Lines begin-
                               ning with # are treated  as  comments  and  are
                               ignored.  For  more information about the envi-
                               ronment  variable  file  syntax,  see   Declare
                               default environment variables in file .

                               If  there  are  environment variables specified
                               using the environment parameter in a  container
                               definition, they take precedence over the vari-
                               ables contained within an environment file.  If
                               multiple  environment  files are specified that
                               contain the same  variable,  they're  processed
                               from  the  top  down. We recommend that you use
                               unique variable names.  For  more  information,
                               see  Specifying  environment  variables  in the
                               Amazon  Elastic  Container  Service   Developer
                               Guide .

                               This  parameter  is  only  supported  for tasks
                               hosted on Fargate using the following  platform
                               versions:

                               o Linux platform version 1.4.0 or later.

                               o Windows platform version 1.0.0 or later.

                               value -> (string)
                                   The  Amazon Resource Name (ARN) of the Ama-
                                   zon S3 object  containing  the  environment
                                   variable file.

                               type -> (string)
                                   The  file  type  to use. The only supported
                                   value is s3 .

                        cpu -> (integer)
                            The number of cpu  units  reserved  for  the  con-
                            tainer, instead of the default value from the task
                            definition. You  must  also  specify  a  container
                            name.

                        memory -> (integer)
                            The  hard  limit  (in MiB) of memory to present to
                            the container, instead of the default  value  from
                            the task definition. If your container attempts to
                            exceed the memory specified here, the container is
                            killed. You must also specify a container name.

                        memoryReservation -> (integer)
                            The  soft  limit (in MiB) of memory to reserve for
                            the container, instead of the default  value  from
                            the  task definition. You must also specify a con-
                            tainer name.

                        resourceRequirements -> (list)
                            The type and amount of a resource to assign  to  a
                            container,  instead  of the default value from the
                            task definition. The only supported resource is  a
                            GPU.

                            (structure)
                               The  type and amount of a resource to assign to
                               a container. The supported resource  types  are
                               GPUs  and  Elastic  Inference accelerators. For
                               more information, see Working with GPUs on Ama-
                               zon  ECS  or Working with Amazon Elastic Infer-
                               ence on Amazon ECS in the Amazon  Elastic  Con-
                               tainer Service Developer Guide

                               value -> (string)
                                   The  value for the specified resource type.

                                   If the GPU type is used, the value  is  the
                                   number of physical GPUs the Amazon ECS con-
                                   tainer agent reserves  for  the  container.
                                   The  number of GPUs that's reserved for all
                                   containers in a task can't exceed the  num-
                                   ber  of  available  GPUs  on  the container
                                   instance that the task is launched on.

                                   If the InferenceAccelerator type  is  used,
                                   the  value  matches  the  deviceName for an
                                   InferenceAccelerator specified  in  a  task
                                   definition.

                               type -> (string)
                                   The  type  of  resource to assign to a con-
                                   tainer. The supported  values  are  GPU  or
                                   InferenceAccelerator .

                 cpu -> (string)
                     The cpu override for the task.

                 inferenceAcceleratorOverrides -> (list)
                     The  Elastic Inference accelerator override for the task.

                     (structure)
                        Details on an Elastic Inference accelerator task over-
                        ride.  This  parameter is used to override the Elastic
                        Inference accelerator specified in  the  task  defini-
                        tion.  For  more  information, see Working with Amazon
                        Elastic Inference on Amazon ECS in the Amazon  Elastic
                        Container Service Developer Guide .

                        deviceName -> (string)
                            The  Elastic  Inference accelerator device name to
                            override for the task. This parameter must match a
                            deviceName specified in the task definition.

                        deviceType -> (string)
                            The Elastic Inference accelerator type to use.

                 executionRoleArn -> (string)
                     The  Amazon Resource Name (ARN) of the task execution IAM
                     role override for the task.  For  more  information,  see
                     Amazon  ECS task execution IAM role in the Amazon Elastic
                     Container Service Developer Guide .

                 memory -> (string)
                     The memory override for the task.

                 taskRoleArn -> (string)
                     The Amazon Resource Name (ARN) of the IAM role that  con-
                     tainers  in  this task can assume. All containers in this
                     task are granted the permissions that  are  specified  in
                     this  role.  For more information, see IAM Role for Tasks
                     in the Amazon Elastic Container Service Developer Guide .

                 ephemeralStorage -> (structure)
                     The ephemeral storage setting override for the task.

                     NOTE:
                        This  parameter  is only supported for tasks hosted on
                        Fargate that use the following platform versions:

                        o Linux platform version 1.4.0 or later.

                        o Windows platform version 1.0.0 or later.

                     sizeInGiB -> (integer)
                        The total amount, in GiB, of ephemeral storage to  set
                        for  the  task.  The minimum supported value is 21 GiB
                        and the maximum supported value is 200 GiB.

              platformVersion -> (string)
                 The platform version where your task runs on. A platform ver-
                 sion  is only specified for tasks that use the Fargate launch
                 type. If you didn't specify one, the LATEST platform  version
                 is  used. For more information, see Fargate Platform Versions
                 in the Amazon Elastic Container Service Developer Guide .

              platformFamily -> (string)
                 The operating system that your tasks are running on. A  plat-
                 form  family is specified only for tasks that use the Fargate
                 launch type.

                 All tasks that run as part of this service must use the  same
                 platformFamily value as the service (for example, LINUX. ).

              pullStartedAt -> (timestamp)
                 The Unix timestamp for the time when the container image pull
                 began.

              pullStoppedAt -> (timestamp)
                 The Unix timestamp for the time when the container image pull
                 completed.

              startedAt -> (timestamp)
                 The  Unix  timestamp for the time when the task started. More
                 specifically, it's for the time when  the  task  transitioned
                 from the PENDING state to the RUNNING state.

              startedBy -> (string)
                 The  tag  specified  when a task is started. If an Amazon ECS
                 service started the task, the  startedBy  parameter  contains
                 the deployment ID of that service.

              stopCode -> (string)
                 The  stop code indicating why a task was stopped. The stoppe-
                 dReason might contain additional details.

              stoppedAt -> (timestamp)
                 The Unix timestamp for the time when the  task  was  stopped.
                 More  specifically,  it's  for the time when the task transi-
                 tioned from the RUNNING state to the STOPPED state.

              stoppedReason -> (string)
                 The reason that the task was stopped.

              stoppingAt -> (timestamp)
                 The Unix timestamp for the time when  the  task  stops.  More
                 specifically,  it's  for  the  time when the task transitions
                 from the RUNNING state to STOPPED .

              tags -> (list)
                 The metadata that you apply to the task to help  you  catego-
                 rize and organize the task. Each tag consists of a key and an
                 optional value. You define both the key and value.

                 The following basic restrictions apply to tags:

                 o Maximum number of tags per resource - 50

                 o For each resource, each tag key must be  unique,  and  each
                   tag key can have only one value.

                 o Maximum key length - 128 Unicode characters in UTF-8

                 o Maximum value length - 256 Unicode characters in UTF-8

                 o If your tagging schema is used across multiple services and
                   resources, remember that other services may  have  restric-
                   tions  on  allowed characters. Generally allowed characters
                   are: letters, numbers, and spaces representable  in  UTF-8,
                   and the following characters: + - = . _ : / @.

                 o Tag keys and values are case-sensitive.

                 o Do not use aws: , AWS: , or any upper or lowercase combina-
                   tion of such as a prefix for either keys or values as it is
                   reserved  for  Amazon  Web Services use. You cannot edit or
                   delete tag keys or values with this prefix. Tags with  this
                   prefix do not count against your tags per resource limit.

                 (structure)
                     The  metadata  that  you  apply to a resource to help you
                     categorize and organize them. Each tag consists of a  key
                     and an optional value. You define them.

                     The following basic restrictions apply to tags:

                     o Maximum number of tags per resource - 50

                     o For  each  resource,  each  tag key must be unique, and
                       each tag key can have only one value.

                     o Maximum key length - 128 Unicode characters in UTF-8

                     o Maximum value length - 256 Unicode characters in UTF-8

                     o If your tagging schema is used across multiple services
                       and  resources,  remember  that other services may have
                       restrictions on allowed characters.  Generally  allowed
                       characters  are:  letters,  numbers,  and spaces repre-
                       sentable in UTF-8, and the following characters: + -  =
                       . _ : / @.

                     o Tag keys and values are case-sensitive.

                     o Do not use aws: , AWS: , or any upper or lowercase com-
                       bination of such as a prefix for either keys or  values
                       as it is reserved for Amazon Web Services use. You can-
                       not edit or delete tag keys or values with this prefix.
                       Tags  with  this  prefix do not count against your tags
                       per resource limit.

                     key -> (string)
                        One part of a key-value pair that make up a tag. A key
                        is  a general label that acts like a category for more
                        specific tag values.

                     value -> (string)
                        The optional part of a key-value pair that make  up  a
                        tag.  A  value acts as a descriptor within a tag cate-
                        gory (key).

              taskArn -> (string)
                 The Amazon Resource Name (ARN) of the task.

              taskDefinitionArn -> (string)
                 The ARN of the task definition that creates the task.

              version -> (long)
                 The version counter for the task. Every time a  task  experi-
                 ences  a  change  that starts a CloudWatch event, the version
                 counter is incremented. If you replicate your Amazon ECS task
                 state  with CloudWatch Events, you can compare the version of
                 a task reported by the Amazon ECS API actions with  the  ver-
                 sion  reported  in CloudWatch Events for the task (inside the
                 detail object) to verify  that  the  version  in  your  event
                 stream is current.

              ephemeralStorage -> (structure)
                 The ephemeral storage settings for the task.

                 sizeInGiB -> (integer)
                     The total amount, in GiB, of ephemeral storage to set for
                     the task. The minimum supported value is 21 GiB  and  the
                     maximum supported value is 200 GiB.

       failures -> (list)
          Any failures associated with the call.

          (structure)
              A  failed resource. For a list of common causes, see API failure
              reasons in the Amazon Elastic Container Service Developer  Guide
              .

              arn -> (string)
                 The Amazon Resource Name (ARN) of the failed resource.

              reason -> (string)
                 The reason for the failure.

              detail -> (string)
                 The details of the failure.



                                                              DESCRIBE-TASKS()
