SUBMIT-TASK-STATE-CHANGE()                          SUBMIT-TASK-STATE-CHANGE()



NAME
       submit-task-state-change -

DESCRIPTION
       NOTE:
          This  action  is  only  used  by the Amazon ECS agent, and it is not
          intended for use outside of the agent.

       Sent to acknowledge that a task changed states.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            submit-task-state-change
          [--cluster <value>]
          [--task <value>]
          [--status <value>]
          [--reason <value>]
          [--containers <value>]
          [--attachments <value>]
          [--managed-agents <value>]
          [--pull-started-at <value>]
          [--pull-stopped-at <value>]
          [--execution-stopped-at <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --cluster (string)
          The short name or full Amazon Resource Name  (ARN)  of  the  cluster
          that hosts the task.

       --task (string)
          The task ID or full ARN of the task in the state change request.

       --status (string)
          The status of the state change request.

       --reason (string)
          The reason for the state change request.

       --containers (list)
          Any containers that's associated with the state change request.

          (structure)
              An object that represents a change in state for a container.

              containerName -> (string)
                 The name of the container.

              imageDigest -> (string)
                 The container image SHA 256 digest.

              runtimeId -> (string)
                 The ID of the Docker container.

              exitCode -> (integer)
                 The  exit  code  for  the container, if the state change is a
                 result of the container exiting.

              networkBindings -> (list)
                 Any network bindings that are associated with the  container.

                 (structure)
                     Details  on  the network bindings between a container and
                     its host container instance. After  a  task  reaches  the
                     RUNNING  status,  manual and automatic host and container
                     port assignments are visible in the networkBindings  sec-
                     tion of  DescribeTasks API responses.

                     bindIP -> (string)
                        The  IP  address that the container is bound to on the
                        container instance.

                     containerPort -> (integer)
                        The port number on the container that's used with  the
                        network binding.

                     hostPort -> (integer)
                        The  port number on the host that's used with the net-
                        work binding.

                     protocol -> (string)
                        The protocol used for the network binding.

              reason -> (string)
                 The reason for the state change.

              status -> (string)
                 The status of the container.

       Shorthand Syntax:

          containerName=string,imageDigest=string,runtimeId=string,exitCode=integer,networkBindings=[{bindIP=string,containerPort=integer,hostPort=integer,protocol=string},{bindIP=string,containerPort=integer,hostPort=integer,protocol=string}],reason=string,status=string ...

       JSON Syntax:

          [
            {
              "containerName": "string",
              "imageDigest": "string",
              "runtimeId": "string",
              "exitCode": integer,
              "networkBindings": [
                {
                  "bindIP": "string",
                  "containerPort": integer,
                  "hostPort": integer,
                  "protocol": "tcp"|"udp"
                }
                ...
              ],
              "reason": "string",
              "status": "string"
            }
            ...
          ]

       --attachments (list)
          Any attachments associated with the state change request.

          (structure)
              An object representing a change in state for a task  attachment.

              attachmentArn -> (string)
                 The Amazon Resource Name (ARN) of the attachment.

              status -> (string)
                 The status of the attachment.

       Shorthand Syntax:

          attachmentArn=string,status=string ...

       JSON Syntax:

          [
            {
              "attachmentArn": "string",
              "status": "string"
            }
            ...
          ]

       --managed-agents (list)
          The details for the managed agent that's associated with the task.

          (structure)
              An object representing a change in state for a managed agent.

              containerName -> (string)
                 The  name of the container that's associated with the managed
                 agent.

              managedAgentName -> (string)
                 The name of the managed agent.

              status -> (string)
                 The status of the managed agent.

              reason -> (string)
                 The reason for the status of the managed agent.

       Shorthand Syntax:

          containerName=string,managedAgentName=string,status=string,reason=string ...

       JSON Syntax:

          [
            {
              "containerName": "string",
              "managedAgentName": "ExecuteCommandAgent",
              "status": "string",
              "reason": "string"
            }
            ...
          ]

       --pull-started-at (timestamp)
          The Unix timestamp for  the  time  when  the  container  image  pull
          started.

       --pull-stopped-at (timestamp)
          The  Unix  timestamp for the time when the container image pull com-
          pleted.

       --execution-stopped-at (timestamp)
          The Unix timestamp for the time when the task execution stopped.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       acknowledgment -> (string)
          Acknowledgement of the state change.



                                                    SUBMIT-TASK-STATE-CHANGE()
