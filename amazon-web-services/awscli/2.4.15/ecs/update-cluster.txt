UPDATE-CLUSTER()                                              UPDATE-CLUSTER()



NAME
       update-cluster -

DESCRIPTION
       Updates the cluster.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            update-cluster
          --cluster <value>
          [--settings <value>]
          [--configuration <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --cluster (string)
          The name of the cluster to modify the settings for.

       --settings (list)
          The cluster settings for your cluster.

          (structure)
              The  settings  to use when creating a cluster. This parameter is
              used to enable CloudWatch Container Insights for a cluster.

              name -> (string)
                 The name of the cluster setting. The only supported value  is
                 containerInsights .

              value -> (string)
                 The  value to set for the cluster setting. The supported val-
                 ues are enabled and  disabled  .  If  enabled  is  specified,
                 CloudWatch  Container  Insights will be enabled for the clus-
                 ter, otherwise it will be disabled  unless  the  containerIn-
                 sights  account  setting  is  enabled.  If a cluster value is
                 specified, it will override the containerInsights  value  set
                 with  PutAccountSetting or  PutAccountSettingDefault .

       Shorthand Syntax:

          name=string,value=string ...

       JSON Syntax:

          [
            {
              "name": "containerInsights",
              "value": "string"
            }
            ...
          ]

       --configuration (structure)
          The execute command configuration for the cluster.

          executeCommandConfiguration -> (structure)
              The details of the execute command configuration.

              kmsKeyId -> (string)
                 Specify  an Key Management Service key ID to encrypt the data
                 between the local client and the container.

              logging -> (string)
                 The log setting to use for redirecting logs for your  execute
                 command results. The following log settings are available.

                 o NONE : The execute command session is not logged.

                 o DEFAULT  : The awslogs configuration in the task definition
                   is used. If no logging parameter is specified, it  defaults
                   to  this  value.  If no awslogs log driver is configured in
                   the task definition, the output won't be logged.

                 o OVERRIDE : Specify the logging details as a part of logCon-
                   figuration  .  If the OVERRIDE logging option is specified,
                   the logConfiguration is required.

              logConfiguration -> (structure)
                 The log configuration for the results of the execute  command
                 actions. The logs can be sent to CloudWatch Logs or an Amazon
                 S3 bucket. When logging=OVERRIDE is specified, a  logConfigu-
                 ration must be provided.

                 cloudWatchLogGroupName -> (string)
                     The name of the CloudWatch log group to send logs to.

                     NOTE:
                        The CloudWatch log group must already be created.

                 cloudWatchEncryptionEnabled -> (boolean)
                     Determines whether to enable encryption on the CloudWatch
                     logs. If not specified, encryption will be disabled.

                 s3BucketName -> (string)
                     The name of the S3 bucket to send logs to.

                     NOTE:
                        The S3 bucket must already be created.

                 s3EncryptionEnabled -> (boolean)
                     Determines whether to use encryption on the S3  logs.  If
                     not specified, encryption is not used.

                 s3KeyPrefix -> (string)
                     An optional folder in the S3 bucket to place logs in.

       Shorthand Syntax:

          executeCommandConfiguration={kmsKeyId=string,logging=string,logConfiguration={cloudWatchLogGroupName=string,cloudWatchEncryptionEnabled=boolean,s3BucketName=string,s3EncryptionEnabled=boolean,s3KeyPrefix=string}}

       JSON Syntax:

          {
            "executeCommandConfiguration": {
              "kmsKeyId": "string",
              "logging": "NONE"|"DEFAULT"|"OVERRIDE",
              "logConfiguration": {
                "cloudWatchLogGroupName": "string",
                "cloudWatchEncryptionEnabled": true|false,
                "s3BucketName": "string",
                "s3EncryptionEnabled": true|false,
                "s3KeyPrefix": "string"
              }
            }
          }

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       cluster -> (structure)
          Details about the cluster.

          clusterArn -> (string)
              The  Amazon Resource Name (ARN) that identifies the cluster. The
              ARN contains the arn:aws:ecs namespace, followed by  the  Region
              of  the cluster, the Amazon Web Services account ID of the clus-
              ter owner, the cluster namespace, and then the cluster name. For
              example, arn:aws:ecs:region:012345678910:cluster/test .

          clusterName -> (string)
              A user-generated string that you use to identify your cluster.

          configuration -> (structure)
              The execute command configuration for the cluster.

              executeCommandConfiguration -> (structure)
                 The details of the execute command configuration.

                 kmsKeyId -> (string)
                     Specify  an  Key Management Service key ID to encrypt the
                     data between the local client and the container.

                 logging -> (string)
                     The log setting to use for redirecting logs for your exe-
                     cute  command  results.  The  following  log settings are
                     available.

                     o NONE : The execute command session is not logged.

                     o DEFAULT : The awslogs configuration in the task defini-
                       tion  is used. If no logging parameter is specified, it
                       defaults to this value. If no  awslogs  log  driver  is
                       configured  in the task definition, the output won't be
                       logged.

                     o OVERRIDE : Specify the logging details  as  a  part  of
                       logConfiguration  .  If  the OVERRIDE logging option is
                       specified, the logConfiguration is required.

                 logConfiguration -> (structure)
                     The log configuration for the results of the execute com-
                     mand  actions. The logs can be sent to CloudWatch Logs or
                     an Amazon S3 bucket. When logging=OVERRIDE is  specified,
                     a logConfiguration must be provided.

                     cloudWatchLogGroupName -> (string)
                        The  name of the CloudWatch log group to send logs to.

                        NOTE:
                            The CloudWatch log group must already be  created.

                     cloudWatchEncryptionEnabled -> (boolean)
                        Determines  whether to enable encryption on the Cloud-
                        Watch logs. If not specified, encryption will be  dis-
                        abled.

                     s3BucketName -> (string)
                        The name of the S3 bucket to send logs to.

                        NOTE:
                            The S3 bucket must already be created.

                     s3EncryptionEnabled -> (boolean)
                        Determines  whether  to use encryption on the S3 logs.
                        If not specified, encryption is not used.

                     s3KeyPrefix -> (string)
                        An optional folder in the S3 bucket to place logs  in.

          status -> (string)
              The status of the cluster. The following are the possible states
              that are returned.
                 ACTIVE

              The cluster is ready to accept tasks and if applicable  you  can
              register container instances with the cluster.
                 PROVISIONING

              The  cluster  has capacity providers that are associated with it
              and the resources needed for the  capacity  provider  are  being
              created.
                 DEPROVISIONING

              The  cluster  has capacity providers that are associated with it
              and the resources needed for the  capacity  provider  are  being
              deleted.
                 FAILED

              The  cluster  has capacity providers that are associated with it
              and the resources needed for the capacity provider  have  failed
              to create.
                 INACTIVE

              The  cluster  has been deleted. Clusters with an INACTIVE status
              may remain discoverable in your account for a  period  of  time.
              However,  this  behavior  is subject to change in the future. We
              don't recommend that you rely on INACTIVE clusters persisting.

          registeredContainerInstancesCount -> (integer)
              The number of container instances registered into  the  cluster.
              This  includes  container  instances in both ACTIVE and DRAINING
              status.

          runningTasksCount -> (integer)
              The number of tasks in the  cluster  that  are  in  the  RUNNING
              state.

          pendingTasksCount -> (integer)
              The  number  of  tasks  in  the  cluster that are in the PENDING
              state.

          activeServicesCount -> (integer)
              The number of services that are running on  the  cluster  in  an
              ACTIVE state. You can view these services with  ListServices .

          statistics -> (list)
              Additional information about your clusters that are separated by
              launch type. They include the following:

              o runningEC2TasksCount

              o RunningFargateTasksCount

              o pendingEC2TasksCount

              o pendingFargateTasksCount

              o activeEC2ServiceCount

              o activeFargateServiceCount

              o drainingEC2ServiceCount

              o drainingFargateServiceCount

              (structure)
                 A key-value pair object.

                 name -> (string)
                     The name of the key-value  pair.  For  environment  vari-
                     ables, this is the name of the environment variable.

                 value -> (string)
                     The  value  of  the key-value pair. For environment vari-
                     ables, this is the value of the environment variable.

          tags -> (list)
              The metadata that you apply to the cluster to help  you  catego-
              rize  and  organize  them.  Each  tag  consists  of a key and an
              optional value. You define both.

              The following basic restrictions apply to tags:

              o Maximum number of tags per resource - 50

              o For each resource, each tag key must be unique, and  each  tag
                key can have only one value.

              o Maximum key length - 128 Unicode characters in UTF-8

              o Maximum value length - 256 Unicode characters in UTF-8

              o If  your  tagging  schema is used across multiple services and
                resources, remember that other services may have  restrictions
                on  allowed characters. Generally allowed characters are: let-
                ters, numbers, and spaces representable in UTF-8, and the fol-
                lowing characters: + - = . _ : / @.

              o Tag keys and values are case-sensitive.

              o Do not use aws: , AWS: , or any upper or lowercase combination
                of such as a prefix  for  either  keys  or  values  as  it  is
                reserved  for  Amazon  Web  Services  use.  You cannot edit or
                delete tag keys or values with this  prefix.  Tags  with  this
                prefix do not count against your tags per resource limit.

              (structure)
                 The metadata that you apply to a resource to help you catego-
                 rize and organize them. Each tag consists of  a  key  and  an
                 optional value. You define them.

                 The following basic restrictions apply to tags:

                 o Maximum number of tags per resource - 50

                 o For  each  resource,  each tag key must be unique, and each
                   tag key can have only one value.

                 o Maximum key length - 128 Unicode characters in UTF-8

                 o Maximum value length - 256 Unicode characters in UTF-8

                 o If your tagging schema is used across multiple services and
                   resources,  remember  that other services may have restric-
                   tions on allowed characters. Generally  allowed  characters
                   are:  letters,  numbers, and spaces representable in UTF-8,
                   and the following characters: + - = . _ : / @.

                 o Tag keys and values are case-sensitive.

                 o Do not use aws: , AWS: , or any upper or lowercase combina-
                   tion of such as a prefix for either keys or values as it is
                   reserved for Amazon Web Services use. You  cannot  edit  or
                   delete  tag keys or values with this prefix. Tags with this
                   prefix do not count against your tags per resource limit.

                 key -> (string)
                     One part of a key-value pair that make up a tag. A key is
                     a  general  label that acts like a category for more spe-
                     cific tag values.

                 value -> (string)
                     The optional part of a key-value pair that make up a tag.
                     A value acts as a descriptor within a tag category (key).

          settings -> (list)
              The settings for the cluster. This parameter  indicates  whether
              CloudWatch Container Insights is enabled or disabled for a clus-
              ter.

              (structure)
                 The settings to use when creating a cluster.  This  parameter
                 is  used  to enable CloudWatch Container Insights for a clus-
                 ter.

                 name -> (string)
                     The name of the cluster setting. The only supported value
                     is containerInsights .

                 value -> (string)
                     The  value  to set for the cluster setting. The supported
                     values are enabled and disabled . If  enabled  is  speci-
                     fied,  CloudWatch  Container Insights will be enabled for
                     the cluster, otherwise it will  be  disabled  unless  the
                     containerInsights  account setting is enabled. If a clus-
                     ter value is specified, it will override the containerIn-
                     sights  value  set  with   PutAccountSetting  or   PutAc-
                     countSettingDefault .

          capacityProviders -> (list)
              The capacity providers associated with the cluster.

              (string)

          defaultCapacityProviderStrategy -> (list)
              The default capacity provider strategy  for  the  cluster.  When
              services  or tasks are run in the cluster with no launch type or
              capacity  provider  strategy  specified,  the  default  capacity
              provider strategy is used.

              (structure)
                 The  details  of  a  capacity  provider  strategy. A capacity
                 provider strategy can be set when using the  RunTask or  Cre-
                 ateCluster  APIs or as the default capacity provider strategy
                 for a cluster with the  CreateCluster API.

                 Only capacity providers that are already  associated  with  a
                 cluster  and have an ACTIVE or UPDATING status can be used in
                 a  capacity   provider   strategy.   The    PutClusterCapaci-
                 tyProviders API is used to associate a capacity provider with
                 a cluster.

                 If specifying a capacity provider that uses an  Auto  Scaling
                 group,  the  capacity  provider  must already be created. New
                 Auto Scaling group capacity providers can be created with the
                 CreateCapacityProvider API operation.

                 To  use  a Fargate capacity provider, specify either the FAR-
                 GATE or FARGATE_SPOT capacity providers. The Fargate capacity
                 providers  are  available to all accounts and only need to be
                 associated with a cluster to be used in a  capacity  provider
                 strategy.

                 A  capacity  provider  strategy  may  contain  a maximum of 6
                 capacity providers.

                 capacityProvider -> (string)
                     The short name of the capacity provider.

                 weight -> (integer)
                     The weight value designates the  relative  percentage  of
                     the  total  number  of tasks launched that should use the
                     specified capacity provider. The weight  value  is  taken
                     into  consideration  after the base value, if defined, is
                     satisfied.

                     If no weight value is specified, the default value  of  0
                     is  used.  When multiple capacity providers are specified
                     within a capacity provider strategy, at least one of  the
                     capacity  providers must have a weight value greater than
                     zero and any capacity providers with a weight of 0  can't
                     be  used to place tasks. If you specify multiple capacity
                     providers in a strategy that all have a weight of 0 , any
                     RunTask  or  CreateService  actions  using  the  capacity
                     provider strategy will fail.

                     An example scenario  for  using  weights  is  defining  a
                     strategy  that  contains  two capacity providers and both
                     have a weight of 1 , then when the base is satisfied, the
                     tasks  will  be  split  evenly  across  the  two capacity
                     providers. Using that same logic, if you specify a weight
                     of  1 for capacityProviderA and a weight of 4 for capaci-
                     tyProviderB , then for every one task  that's  run  using
                     capacityProviderA   ,   four   tasks  would  use  capaci-
                     tyProviderB .

                 base -> (integer)
                     The base value designates how many tasks, at  a  minimum,
                     to  run  on  the  specified  capacity  provider. Only one
                     capacity provider in a  capacity  provider  strategy  can
                     have  a  base  defined.  If  no  value  is specified, the
                     default value of 0 is used.

          attachments -> (list)
              The resources attached to  a  cluster.  When  using  a  capacity
              provider with a cluster, the Auto Scaling plan that's created is
              returned as a cluster attachment.

              (structure)
                 An object representing a container instance or  task  attach-
                 ment.

                 id -> (string)
                     The unique identifier for the attachment.

                 type -> (string)
                     The  type of the attachment, such as ElasticNetworkInter-
                     face .

                 status -> (string)
                     The status of the attachment. Valid values are PRECREATED
                     , CREATED , ATTACHING , ATTACHED , DETACHING , DETACHED ,
                     DELETED , and FAILED .

                 details -> (list)
                     Details of the attachment.  For  elastic  network  inter-
                     faces,  this  includes  the network interface ID, the MAC
                     address, the subnet ID, and the private IPv4 address.

                     (structure)
                        A key-value pair object.

                        name -> (string)
                            The name of the key-value  pair.  For  environment
                            variables,  this  is  the  name of the environment
                            variable.

                        value -> (string)
                            The value of the key-value pair.  For  environment
                            variables,  this  is  the value of the environment
                            variable.

          attachmentsStatus -> (string)
              The status of the capacity providers associated with  the  clus-
              ter. The following are the states that are returned.
                 UPDATE_IN_PROGRESS

              The  available  capacity providers for the cluster are updating.
              This occurs when the Auto Scaling plan is provisioning or depro-
              visioning.
                 UPDATE_COMPLETE

              The capacity providers have successfully updated.
                 UPDATE_FAILED

              The capacity provider updates failed.



                                                              UPDATE-CLUSTER()
