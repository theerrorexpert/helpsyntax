DESCRIBE-CAPACITY-PROVIDERS()                    DESCRIBE-CAPACITY-PROVIDERS()



NAME
       describe-capacity-providers -

DESCRIPTION
       Describes one or more of your capacity providers.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            describe-capacity-providers
          [--capacity-providers <value>]
          [--include <value>]
          [--max-results <value>]
          [--next-token <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --capacity-providers (list)
          The  short  name  or  full Amazon Resource Name (ARN) of one or more
          capacity providers. Up to 100 capacity providers can be described in
          an action.

          (string)

       Syntax:

          "string" "string" ...

       --include (list)
          Specifies  whether  or not you want to see the resource tags for the
          capacity provider. If TAGS is specified, the tags  are  included  in
          the  response. If this field is omitted, tags aren't included in the
          response.

          (string)

       Syntax:

          "string" "string" ...

          Where valid values are:
            TAGS

       --max-results (integer)
          The  maximum  number  of  account  setting   results   returned   by
          DescribeCapacityProviders  in  paginated output. When this parameter
          is used, DescribeCapacityProviders only returns  maxResults  results
          in  a  single  page  along  with  a  nextToken response element. The
          remaining results of the initial request  can  be  seen  by  sending
          another  DescribeCapacityProviders request with the returned nextTo-
          ken value. This value can be between 1 and 10. If this parameter  is
          not  used,  then  DescribeCapacityProviders returns up to 10 results
          and a nextToken value if applicable.

       --next-token (string)
          The nextToken value returned from a previous  paginated  DescribeCa-
          pacityProviders  request  where  maxResults was used and the results
          exceeded the value of that parameter. Pagination continues from  the
          end of the previous results that returned the nextToken value.

          NOTE:
              This  token  should  be  treated as an opaque identifier that is
              only used to retrieve the next items in a list and not for other
              programmatic purposes.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To describe all capacity providers

       The  following  describe-capacity-providers  example  retrieves details
       about all capacity providers.

          aws ecs describe-capacity-providers

       Output:

          {
              "capacityProviders": [
                  {
                      "capacityProviderArn": "arn:aws:ecs:us-west-2:123456789012:capacity-provider/MyCapacityProvider",
                      "name": "MyCapacityProvider",
                      "status": "ACTIVE",
                      "autoScalingGroupProvider": {
                          "autoScalingGroupArn": "arn:aws:autoscaling:us-west-2:123456789012:autoScalingGroup:a1b2c3d4-5678-90ab-cdef-EXAMPLE11111:autoScalingGroupName/MyAutoScalingGroup",
                          "managedScaling": {
                              "status": "ENABLED",
                              "targetCapacity": 100,
                              "minimumScalingStepSize": 1,
                              "maximumScalingStepSize": 1000
                          },
                          "managedTerminationProtection": "ENABLED"
                      },
                      "tags": []
                  },
                  {
                      "capacityProviderArn": "arn:aws:ecs:us-west-2:123456789012:capacity-provider/FARGATE",
                      "name": "FARGATE",
                      "status": "ACTIVE",
                      "tags": []
                  },
                  {
                      "capacityProviderArn": "arn:aws:ecs:us-west-2:123456789012:capacity-provider/FARGATE_SPOT",
                      "name": "FARGATE_SPOT",
                      "status": "ACTIVE",
                      "tags": []
                  }
              ]
          }

       For more information, see Cluster capacity providers in the Amazon  ECS
       Developer Guide.

       Example 2: To describe a specific capacity providers

       The  following  describe-capacity-providers  example  retrieves details
       about a specific capacity provider. Using the --include TAGS  parameter
       will  add the tags associated with the capacity provider to the output.

          aws ecs describe-capacity-providers \
              --capacity-providers MyCapacityProvider \
              --include TAGS

       Output:

          {
              "capacityProviders": [
                  {
                      "capacityProviderArn": "arn:aws:ecs:us-west-2:123456789012:capacity-provider/MyCapacityProvider",
                      "name": "MyCapacityProvider",
                      "status": "ACTIVE",
                      "autoScalingGroupProvider": {
                          "autoScalingGroupArn": "arn:aws:autoscaling:us-west-2:123456789012:autoScalingGroup:a1b2c3d4-5678-90ab-cdef-EXAMPLE11111:autoScalingGroupName/MyAutoScalingGroup",
                          "managedScaling": {
                              "status": "ENABLED",
                              "targetCapacity": 100,
                              "minimumScalingStepSize": 1,
                              "maximumScalingStepSize": 1000
                          },
                          "managedTerminationProtection": "ENABLED"
                      },
                      "tags": [
                          {
                              "key": "environment",
                              "value": "production"
                          }
                      ]
                  }
              ]
          }

       For more information, see Cluster capacity providers in the Amazon  ECS
       Developer Guide.

OUTPUT
       capacityProviders -> (list)
          The list of capacity providers.

          (structure)
              The details for a capacity provider.

              capacityProviderArn -> (string)
                 The  Amazon  Resource Name (ARN) that identifies the capacity
                 provider.

              name -> (string)
                 The name of the capacity provider.

              status -> (string)
                 The current status of the capacity  provider.  Only  capacity
                 providers in an ACTIVE state can be used in a cluster. When a
                 capacity provider is successfully deleted, it has an INACTIVE
                 status.

              autoScalingGroupProvider -> (structure)
                 The Auto Scaling group settings for the capacity provider.

                 autoScalingGroupArn -> (string)
                     The  Amazon  Resource Name (ARN) that identifies the Auto
                     Scaling group.

                 managedScaling -> (structure)
                     The managed scaling settings for the Auto  Scaling  group
                     capacity provider.

                     status -> (string)
                        Determines  whether  to enable managed scaling for the
                        capacity provider.

                     targetCapacity -> (integer)
                        The target capacity value for the  capacity  provider.
                        The  specified  value  must be greater than 0 and less
                        than or equal to 100 . A value of 100 results  in  the
                        Amazon  EC2 instances in your Auto Scaling group being
                        completely used.

                     minimumScalingStepSize -> (integer)
                        The minimum number of container instances that  Amazon
                        ECS  scales  in  or  scales  out  at one time. If this
                        parameter is omitted, the default value of 1 is  used.

                     maximumScalingStepSize -> (integer)
                        The  maximum number of container instances that Amazon
                        ECS scales in or scales  out  at  one  time.  If  this
                        parameter  is  omitted,  the default value of 10000 is
                        used.

                     instanceWarmupPeriod -> (integer)
                        The period of time, in seconds, after a newly launched
                        Amazon  EC2 instance can contribute to CloudWatch met-
                        rics for Auto Scaling  group.  If  this  parameter  is
                        omitted, the default value of 300 seconds is used.

                 managedTerminationProtection -> (string)
                     The managed termination protection setting to use for the
                     Auto Scaling group  capacity  provider.  This  determines
                     whether  the  Auto  Scaling group has managed termination
                     protection. The default is disabled.

                     WARNING:
                        When using  managed  termination  protection,  managed
                        scaling  must  also be used otherwise managed termina-
                        tion protection doesn't work.

                     When managed termination protection  is  enabled,  Amazon
                     ECS  prevents the Amazon EC2 instances in an Auto Scaling
                     group that contain tasks from being terminated  during  a
                     scale-in action. The Auto Scaling group and each instance
                     in the Auto Scaling group must have  instance  protection
                     from  scale-in actions enabled as well. For more informa-
                     tion, see Instance Protection in the  Auto  Scaling  User
                     Guide .

                     When  managed  termination  protection  is disabled, your
                     Amazon EC2 instances aren't  protected  from  termination
                     when the Auto Scaling group scales in.

              updateStatus -> (string)
                 The update status of the capacity provider. The following are
                 the possible states that is returned.
                     DELETE_IN_PROGRESS

                 The capacity provider is in the process of being deleted.
                     DELETE_COMPLETE

                 The capacity provider was successfully  deleted  and  has  an
                 INACTIVE status.
                     DELETE_FAILED

                 The  capacity  provider  can't  be deleted. The update status
                 reason provides further details about why the delete  failed.

              updateStatusReason -> (string)
                 The update status reason. This provides further details about
                 the update status for the capacity provider.

              tags -> (list)
                 The metadata that you apply to the capacity provider to  help
                 you  categorize  and  organize it. Each tag consists of a key
                 and an optional value. You define both.

                 The following basic restrictions apply to tags:

                 o Maximum number of tags per resource - 50

                 o For each resource, each tag key must be  unique,  and  each
                   tag key can have only one value.

                 o Maximum key length - 128 Unicode characters in UTF-8

                 o Maximum value length - 256 Unicode characters in UTF-8

                 o If your tagging schema is used across multiple services and
                   resources, remember that other services may  have  restric-
                   tions  on  allowed characters. Generally allowed characters
                   are: letters, numbers, and spaces representable  in  UTF-8,
                   and the following characters: + - = . _ : / @.

                 o Tag keys and values are case-sensitive.

                 o Do not use aws: , AWS: , or any upper or lowercase combina-
                   tion of such as a prefix for either keys or values as it is
                   reserved  for  Amazon  Web Services use. You cannot edit or
                   delete tag keys or values with this prefix. Tags with  this
                   prefix do not count against your tags per resource limit.

                 (structure)
                     The  metadata  that  you  apply to a resource to help you
                     categorize and organize them. Each tag consists of a  key
                     and an optional value. You define them.

                     The following basic restrictions apply to tags:

                     o Maximum number of tags per resource - 50

                     o For  each  resource,  each  tag key must be unique, and
                       each tag key can have only one value.

                     o Maximum key length - 128 Unicode characters in UTF-8

                     o Maximum value length - 256 Unicode characters in UTF-8

                     o If your tagging schema is used across multiple services
                       and  resources,  remember  that other services may have
                       restrictions on allowed characters.  Generally  allowed
                       characters  are:  letters,  numbers,  and spaces repre-
                       sentable in UTF-8, and the following characters: + -  =
                       . _ : / @.

                     o Tag keys and values are case-sensitive.

                     o Do not use aws: , AWS: , or any upper or lowercase com-
                       bination of such as a prefix for either keys or  values
                       as it is reserved for Amazon Web Services use. You can-
                       not edit or delete tag keys or values with this prefix.
                       Tags  with  this  prefix do not count against your tags
                       per resource limit.

                     key -> (string)
                        One part of a key-value pair that make up a tag. A key
                        is  a general label that acts like a category for more
                        specific tag values.

                     value -> (string)
                        The optional part of a key-value pair that make  up  a
                        tag.  A  value acts as a descriptor within a tag cate-
                        gory (key).

       failures -> (list)
          Any failures associated with the call.

          (structure)
              A failed resource. For a list of common causes, see API  failure
              reasons  in the Amazon Elastic Container Service Developer Guide
              .

              arn -> (string)
                 The Amazon Resource Name (ARN) of the failed resource.

              reason -> (string)
                 The reason for the failure.

              detail -> (string)
                 The details of the failure.

       nextToken -> (string)
          The nextToken value to include in a future DescribeCapacityProviders
          request.  When  the  results  of a DescribeCapacityProviders request
          exceed maxResults , this value can be used to retrieve the next page
          of  results.  This  value  is null when there are no more results to
          return.



                                                 DESCRIBE-CAPACITY-PROVIDERS()
