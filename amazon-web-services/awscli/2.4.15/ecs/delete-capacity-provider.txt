DELETE-CAPACITY-PROVIDER()                          DELETE-CAPACITY-PROVIDER()



NAME
       delete-capacity-provider -

DESCRIPTION
       Deletes the specified capacity provider.

       NOTE:
          The  FARGATE  and  FARGATE_SPOT  capacity providers are reserved and
          can't be deleted. You can disassociate them  from  a  cluster  using
          either the  PutClusterCapacityProviders API or by deleting the clus-
          ter.

       Prior to a capacity provider being deleted, the capacity provider  must
       be  removed  from the capacity provider strategy from all services. The
       UpdateService API can be used to remove a capacity provider from a ser-
       vice's  capacity provider strategy. When updating a service, the force-
       NewDeployment option can be used to ensure that  any  tasks  using  the
       Amazon  EC2  instance  capacity  provided  by the capacity provider are
       transitioned to use the capacity from the remaining capacity providers.
       Only  capacity  providers  that aren't associated with a cluster can be
       deleted. To remove a capacity provider from a cluster, you  can  either
       use  PutClusterCapacityProviders or delete the cluster.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            delete-capacity-provider
          --capacity-provider <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --capacity-provider (string)
          The  short  name  or full Amazon Resource Name (ARN) of the capacity
          provider to delete.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To delete a capacity provider using the Amazon Resource Name
       (ARN)

       The  following  delete-capacity-provider  example  deletes  a  capacity
       provider by specifying the Amazon Resource Name (ARN) of  the  capacity
       provider.  The ARN as well as the status of the capacity provider dele-
       tion can be retrieved using the describe-capacity-providers command.

          aws ecs delete-capacity-provider \
              --capacity-provider arn:aws:ecs:us-west-2:123456789012:capacity-provider/ExampleCapacityProvider

       Output:

          {
              "capacityProvider": {
                  "capacityProviderArn": "arn:aws:ecs:us-west-2:123456789012:capacity-provider/ExampleCapacityProvider",
                  "name": "ExampleCapacityProvider",
                  "status": "ACTIVE",
                  "autoScalingGroupProvider": {
                      "autoScalingGroupArn": "arn:aws:autoscaling:us-west-2:123456789012:autoScalingGroup:a1b2c3d4-5678-90ab-cdef-EXAMPLE11111:autoScalingGroupName/MyAutoScalingGroup",
                      "managedScaling": {
                          "status": "ENABLED",
                          "targetCapacity": 100,
                          "minimumScalingStepSize": 1,
                          "maximumScalingStepSize": 10000
                      },
                      "managedTerminationProtection": "DISABLED"
                  },
                  "updateStatus": "DELETE_IN_PROGRESS",
                  "tags": []
              }
          }

       For more information, see Cluster capacity providers in the Amazon  ECS
       Developer Guide.

       Example 2: To delete a capacity provider using the name

       The  following  delete-capacity-provider  example  deletes  a  capacity
       provider by specifying the short name of  the  capacity  provider.  The
       short  name as well as the status of the capacity provider deletion can
       be retrieved using the describe-capacity-providers command.

          aws ecs delete-capacity-provider \
              --capacity-provider ExampleCapacityProvider

       Output:

          {
              "capacityProvider": {
                  "capacityProviderArn": "arn:aws:ecs:us-west-2:123456789012:capacity-provider/ExampleCapacityProvider",
                  "name": "ExampleCapacityProvider",
                  "status": "ACTIVE",
                  "autoScalingGroupProvider": {
                      "autoScalingGroupArn": "arn:aws:autoscaling:us-west-2:123456789012:autoScalingGroup:a1b2c3d4-5678-90ab-cdef-EXAMPLE11111:autoScalingGroupName/MyAutoScalingGroup",
                      "managedScaling": {
                          "status": "ENABLED",
                          "targetCapacity": 100,
                          "minimumScalingStepSize": 1,
                          "maximumScalingStepSize": 10000
                      },
                      "managedTerminationProtection": "DISABLED"
                  },
                  "updateStatus": "DELETE_IN_PROGRESS",
                  "tags": []
              }
          }

       For more information, see Cluster capacity providers in the Amazon  ECS
       Developer Guide.

OUTPUT
       capacityProvider -> (structure)
          The details of the capacity provider.

          capacityProviderArn -> (string)
              The  Amazon  Resource  Name  (ARN)  that identifies the capacity
              provider.

          name -> (string)
              The name of the capacity provider.

          status -> (string)
              The current status  of  the  capacity  provider.  Only  capacity
              providers  in  an  ACTIVE state can be used in a cluster. When a
              capacity provider is successfully deleted, it  has  an  INACTIVE
              status.

          autoScalingGroupProvider -> (structure)
              The Auto Scaling group settings for the capacity provider.

              autoScalingGroupArn -> (string)
                 The Amazon Resource Name (ARN) that identifies the Auto Scal-
                 ing group.

              managedScaling -> (structure)
                 The managed scaling  settings  for  the  Auto  Scaling  group
                 capacity provider.

                 status -> (string)
                     Determines  whether  to  enable  managed  scaling for the
                     capacity provider.

                 targetCapacity -> (integer)
                     The target capacity value for the capacity provider.  The
                     specified  value  must be greater than 0 and less than or
                     equal to 100 . A value of 100 results in the  Amazon  EC2
                     instances  in  your  Auto  Scaling group being completely
                     used.

                 minimumScalingStepSize -> (integer)
                     The minimum number of container instances that Amazon ECS
                     scales in or scales out at one time. If this parameter is
                     omitted, the default value of 1 is used.

                 maximumScalingStepSize -> (integer)
                     The maximum number of container instances that Amazon ECS
                     scales in or scales out at one time. If this parameter is
                     omitted, the default value of 10000 is used.

                 instanceWarmupPeriod -> (integer)
                     The period of time, in seconds, after  a  newly  launched
                     Amazon  EC2 instance can contribute to CloudWatch metrics
                     for Auto Scaling group. If this parameter is omitted, the
                     default value of 300 seconds is used.

              managedTerminationProtection -> (string)
                 The  managed  termination  protection  setting to use for the
                 Auto Scaling group capacity provider. This determines whether
                 the  Auto  Scaling  group has managed termination protection.
                 The default is disabled.

                 WARNING:
                     When using managed termination protection, managed  scal-
                     ing  must also be used otherwise managed termination pro-
                     tection doesn't work.

                 When managed termination protection is  enabled,  Amazon  ECS
                 prevents  the  Amazon  EC2 instances in an Auto Scaling group
                 that contain tasks from being terminated  during  a  scale-in
                 action.  The Auto Scaling group and each instance in the Auto
                 Scaling group must have  instance  protection  from  scale-in
                 actions  enabled  as well. For more information, see Instance
                 Protection in the Auto Scaling User Guide .

                 When managed termination protection is disabled, your  Amazon
                 EC2 instances aren't protected from termination when the Auto
                 Scaling group scales in.

          updateStatus -> (string)
              The update status of the capacity provider.  The  following  are
              the possible states that is returned.
                 DELETE_IN_PROGRESS

              The capacity provider is in the process of being deleted.
                 DELETE_COMPLETE

              The  capacity provider was successfully deleted and has an INAC-
              TIVE status.
                 DELETE_FAILED

              The capacity provider can't be deleted. The update status reason
              provides further details about why the delete failed.

          updateStatusReason -> (string)
              The  update  status  reason. This provides further details about
              the update status for the capacity provider.

          tags -> (list)
              The metadata that you apply to the capacity provider to help you
              categorize  and  organize  it. Each tag consists of a key and an
              optional value. You define both.

              The following basic restrictions apply to tags:

              o Maximum number of tags per resource - 50

              o For each resource, each tag key must be unique, and  each  tag
                key can have only one value.

              o Maximum key length - 128 Unicode characters in UTF-8

              o Maximum value length - 256 Unicode characters in UTF-8

              o If  your  tagging  schema is used across multiple services and
                resources, remember that other services may have  restrictions
                on  allowed characters. Generally allowed characters are: let-
                ters, numbers, and spaces representable in UTF-8, and the fol-
                lowing characters: + - = . _ : / @.

              o Tag keys and values are case-sensitive.

              o Do not use aws: , AWS: , or any upper or lowercase combination
                of such as a prefix  for  either  keys  or  values  as  it  is
                reserved  for  Amazon  Web  Services  use.  You cannot edit or
                delete tag keys or values with this  prefix.  Tags  with  this
                prefix do not count against your tags per resource limit.

              (structure)
                 The metadata that you apply to a resource to help you catego-
                 rize and organize them. Each tag consists of  a  key  and  an
                 optional value. You define them.

                 The following basic restrictions apply to tags:

                 o Maximum number of tags per resource - 50

                 o For  each  resource,  each tag key must be unique, and each
                   tag key can have only one value.

                 o Maximum key length - 128 Unicode characters in UTF-8

                 o Maximum value length - 256 Unicode characters in UTF-8

                 o If your tagging schema is used across multiple services and
                   resources,  remember  that other services may have restric-
                   tions on allowed characters. Generally  allowed  characters
                   are:  letters,  numbers, and spaces representable in UTF-8,
                   and the following characters: + - = . _ : / @.

                 o Tag keys and values are case-sensitive.

                 o Do not use aws: , AWS: , or any upper or lowercase combina-
                   tion of such as a prefix for either keys or values as it is
                   reserved for Amazon Web Services use. You  cannot  edit  or
                   delete  tag keys or values with this prefix. Tags with this
                   prefix do not count against your tags per resource limit.

                 key -> (string)
                     One part of a key-value pair that make up a tag. A key is
                     a  general  label that acts like a category for more spe-
                     cific tag values.

                 value -> (string)
                     The optional part of a key-value pair that make up a tag.
                     A value acts as a descriptor within a tag category (key).



                                                    DELETE-CAPACITY-PROVIDER()
