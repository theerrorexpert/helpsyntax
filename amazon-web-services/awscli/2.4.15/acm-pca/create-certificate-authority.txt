CREATE-CERTIFICATE-AUTHORITY()                  CREATE-CERTIFICATE-AUTHORITY()



NAME
       create-certificate-authority -

DESCRIPTION
       Creates  a  root or subordinate private certificate authority (CA). You
       must specify the CA configuration, an optional configuration for Online
       Certificate Status Protocol (OCSP) and/or a certificate revocation list
       (CRL), the CA type, and an optional idempotency token to avoid acciden-
       tal  creation  of multiple CAs. The CA configuration specifies the name
       of the algorithm and key size to be used to create the CA private  key,
       the  type  of  signing  algorithm  that  the CA uses, and X.500 subject
       information. The OCSP configuration can optionally specify a custom URL
       for the OCSP responder. The CRL configuration specifies the CRL expira-
       tion period in days (the validity period of the  CRL),  the  Amazon  S3
       bucket  that  will contain the CRL, and a CNAME alias for the S3 bucket
       that is included in certificates issued by the CA. If successful,  this
       action returns the Amazon Resource Name (ARN) of the CA.

       ACM  Private  CA  assets  that are stored in Amazon S3 can be protected
       with encryption. For more information, see Encrypting Your CRLs .

       NOTE:
          Both PCA and the IAM principal must have permission to write to  the
          S3  bucket  that  you  specify. If the IAM principal making the call
          does not have permission to write to the bucket, then  an  exception
          is thrown. For more information, see Configure Access to ACM Private
          CA .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-certificate-authority
          --certificate-authority-configuration <value>
          [--revocation-configuration <value>]
          --certificate-authority-type <value>
          [--idempotency-token <value>]
          [--key-storage-security-standard <value>]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --certificate-authority-configuration (structure)
          Name and bit size of the private key  algorithm,  the  name  of  the
          signing algorithm, and X.500 certificate subject information.

          KeyAlgorithm -> (string)
              Type  of  the public key algorithm and size, in bits, of the key
              pair that your CA creates when it issues a certificate. When you
              create  a subordinate CA, you must use a key algorithm supported
              by the parent CA.

          SigningAlgorithm -> (string)
              Name of the algorithm your private CA uses to  sign  certificate
              requests.

              This  parameter should not be confused with the SigningAlgorithm
              parameter used to sign certificates when they are issued.

          Subject -> (structure)
              Structure that contains X.500 distinguished name information for
              your private CA.

              Country -> (string)
                 Two-digit  code  that specifies the country in which the cer-
                 tificate subject located.

              Organization -> (string)
                 Legal name of the organization  with  which  the  certificate
                 subject is affiliated.

              OrganizationalUnit -> (string)
                 A  subdivision  or unit of the organization (such as sales or
                 finance) with which the certificate subject is affiliated.

              DistinguishedNameQualifier -> (string)
                 Disambiguating information for the certificate subject.

              State -> (string)
                 State in which the subject of the certificate is located.

              CommonName -> (string)
                 For CA and end-entity certificates in a private PKI, the com-
                 mon name (CN) can be any string within the length limit.

                 Note:  In publicly trusted certificates, the common name must
                 be a fully qualified domain name (FQDN) associated  with  the
                 certificate subject.

              SerialNumber -> (string)
                 The certificate serial number.

              Locality -> (string)
                 The  locality  (such as a city or town) in which the certifi-
                 cate subject is located.

              Title -> (string)
                 A title such as Mr. or Ms., which is pre-pended to  the  name
                 to refer formally to the certificate subject.

              Surname -> (string)
                 Family  name.  In the US and the UK, for example, the surname
                 of an individual is ordered last. In Asian cultures the  sur-
                 name is typically ordered first.

              GivenName -> (string)
                 First name.

              Initials -> (string)
                 Concatenation that typically contains the first letter of the
                 GivenName , the first  letter  of  the  middle  name  if  one
                 exists, and the first letter of the Surname .

              Pseudonym -> (string)
                 Typically  a  shortened  version  of a longer GivenName . For
                 example, Jonathan is often shortened to  John.  Elizabeth  is
                 often shortened to Beth, Liz, or Eliza.

              GenerationQualifier -> (string)
                 Typically  a qualifier appended to the name of an individual.
                 Examples include Jr. for junior, Sr. for senior, and III  for
                 third.

          CsrExtensions -> (structure)
              Specifies  information  to  be added to the extension section of
              the certificate signing request (CSR).

              KeyUsage -> (structure)
                 Indicates the purpose of the certificate and of the key  con-
                 tained in the certificate.

                 DigitalSignature -> (boolean)
                     Key can be used for digital signing.

                 NonRepudiation -> (boolean)
                     Key can be used for non-repudiation.

                 KeyEncipherment -> (boolean)
                     Key can be used to encipher data.

                 DataEncipherment -> (boolean)
                     Key can be used to decipher data.

                 KeyAgreement -> (boolean)
                     Key can be used in a key-agreement protocol.

                 KeyCertSign -> (boolean)
                     Key can be used to sign certificates.

                 CRLSign -> (boolean)
                     Key can be used to sign CRLs.

                 EncipherOnly -> (boolean)
                     Key can be used only to encipher data.

                 DecipherOnly -> (boolean)
                     Key can be used only to decipher data.

              SubjectInformationAccess -> (list)
                 For  CA  certificates, provides a path to additional informa-
                 tion pertaining to the CA, such as revocation and policy. For
                 more information, see Subject Information Access in RFC 5280.

                 (structure)
                     Provides access information used by the  authorityInfoAc-
                     cess  and  subjectInfoAccess  extensions described in RFC
                     5280 .

                     AccessMethod -> (structure)
                        The type and format of AccessDescription  information.

                        CustomObjectIdentifier -> (string)
                            An  object identifier (OID) specifying the Access-
                            Method . The OID must satisfy the regular  expres-
                            sion shown below. For more information, see NIST's
                            definition of Object Identifier (OID) .

                        AccessMethodType -> (string)
                            Specifies the AccessMethod .

                     AccessLocation -> (structure)
                        The location of AccessDescription information.

                        OtherName -> (structure)
                            Represents GeneralName using an OtherName  object.

                            TypeId -> (string)
                               Specifies an OID.

                            Value -> (string)
                               Specifies an OID value.

                        Rfc822Name -> (string)
                            Represents   GeneralName   as  an  RFC  822  email
                            address.

                        DnsName -> (string)
                            Represents GeneralName as a DNS name.

                        DirectoryName -> (structure)
                            Contains information about  the  certificate  sub-
                            ject. The Subject field in the certificate identi-
                            fies the entity that owns or controls  the  public
                            key  in the certificate. The entity can be a user,
                            computer, device, or  service.  The  Subject  must
                            contain  an X.500 distinguished name (DN). A DN is
                            a sequence of relative distinguished names (RDNs).
                            The  RDNs  are separated by commas in the certifi-
                            cate.

                            Country -> (string)
                               Two-digit code that specifies  the  country  in
                               which the certificate subject located.

                            Organization -> (string)
                               Legal  name  of the organization with which the
                               certificate subject is affiliated.

                            OrganizationalUnit -> (string)
                               A subdivision or unit of the organization (such
                               as sales or finance) with which the certificate
                               subject is affiliated.

                            DistinguishedNameQualifier -> (string)
                               Disambiguating information for the  certificate
                               subject.

                            State -> (string)
                               State  in  which the subject of the certificate
                               is located.

                            CommonName -> (string)
                               For CA and end-entity certificates in a private
                               PKI,  the  common  name  (CN) can be any string
                               within the length limit.

                               Note: In  publicly  trusted  certificates,  the
                               common  name  must  be a fully qualified domain
                               name (FQDN)  associated  with  the  certificate
                               subject.

                            SerialNumber -> (string)
                               The certificate serial number.

                            Locality -> (string)
                               The  locality (such as a city or town) in which
                               the certificate subject is located.

                            Title -> (string)
                               A title such as Mr. or Ms., which is pre-pended
                               to  the  name to refer formally to the certifi-
                               cate subject.

                            Surname -> (string)
                               Family name. In the US and the UK, for example,
                               the  surname  of an individual is ordered last.
                               In Asian  cultures  the  surname  is  typically
                               ordered first.

                            GivenName -> (string)
                               First name.

                            Initials -> (string)
                               Concatenation that typically contains the first
                               letter of the GivenName , the first  letter  of
                               the  middle  name  if one exists, and the first
                               letter of the Surname .

                            Pseudonym -> (string)
                               Typically  a  shortened  version  of  a  longer
                               GivenName  .  For  example,  Jonathan  is often
                               shortened to John. Elizabeth is often shortened
                               to Beth, Liz, or Eliza.

                            GenerationQualifier -> (string)
                               Typically  a  qualifier appended to the name of
                               an individual. Examples include Jr. for junior,
                               Sr. for senior, and III for third.

                        EdiPartyName -> (structure)
                            Represents  GeneralName as an EdiPartyName object.

                            PartyName -> (string)
                               Specifies the party name.

                            NameAssigner -> (string)
                               Specifies the name assigner.

                        UniformResourceIdentifier -> (string)
                            Represents GeneralName as a URI.

                        IpAddress -> (string)
                            Represents GeneralName as an IPv4 or IPv6 address.

                        RegisteredId -> (string)
                            Represents  GeneralName  as  an  object identifier
                            (OID).

       JSON Syntax:

          {
            "KeyAlgorithm": "RSA_2048"|"RSA_4096"|"EC_prime256v1"|"EC_secp384r1",
            "SigningAlgorithm": "SHA256WITHECDSA"|"SHA384WITHECDSA"|"SHA512WITHECDSA"|"SHA256WITHRSA"|"SHA384WITHRSA"|"SHA512WITHRSA",
            "Subject": {
              "Country": "string",
              "Organization": "string",
              "OrganizationalUnit": "string",
              "DistinguishedNameQualifier": "string",
              "State": "string",
              "CommonName": "string",
              "SerialNumber": "string",
              "Locality": "string",
              "Title": "string",
              "Surname": "string",
              "GivenName": "string",
              "Initials": "string",
              "Pseudonym": "string",
              "GenerationQualifier": "string"
            },
            "CsrExtensions": {
              "KeyUsage": {
                "DigitalSignature": true|false,
                "NonRepudiation": true|false,
                "KeyEncipherment": true|false,
                "DataEncipherment": true|false,
                "KeyAgreement": true|false,
                "KeyCertSign": true|false,
                "CRLSign": true|false,
                "EncipherOnly": true|false,
                "DecipherOnly": true|false
              },
              "SubjectInformationAccess": [
                {
                  "AccessMethod": {
                    "CustomObjectIdentifier": "string",
                    "AccessMethodType": "CA_REPOSITORY"|"RESOURCE_PKI_MANIFEST"|"RESOURCE_PKI_NOTIFY"
                  },
                  "AccessLocation": {
                    "OtherName": {
                      "TypeId": "string",
                      "Value": "string"
                    },
                    "Rfc822Name": "string",
                    "DnsName": "string",
                    "DirectoryName": {
                      "Country": "string",
                      "Organization": "string",
                      "OrganizationalUnit": "string",
                      "DistinguishedNameQualifier": "string",
                      "State": "string",
                      "CommonName": "string",
                      "SerialNumber": "string",
                      "Locality": "string",
                      "Title": "string",
                      "Surname": "string",
                      "GivenName": "string",
                      "Initials": "string",
                      "Pseudonym": "string",
                      "GenerationQualifier": "string"
                    },
                    "EdiPartyName": {
                      "PartyName": "string",
                      "NameAssigner": "string"
                    },
                    "UniformResourceIdentifier": "string",
                    "IpAddress": "string",
                    "RegisteredId": "string"
                  }
                }
                ...
              ]
            }
          }

       --revocation-configuration (structure)
          Contains information to enable Online  Certificate  Status  Protocol
          (OCSP)  support,  to  enable a certificate revocation list (CRL), to
          enable both, or to enable neither. The default is for both  certifi-
          cate validation mechanisms to be disabled. For more information, see
          the OcspConfiguration and CrlConfiguration types.

          CrlConfiguration -> (structure)
              Configuration of the certificate revocation list (CRL), if  any,
              maintained  by  your  private  CA.  A  CRL  is typically updated
              approximately 30 minutes after a certificate is revoked. If  for
              any  reason  a  CRL  update  fails, ACM Private CA makes further
              attempts every 15 minutes.

              Enabled -> (boolean)
                 Boolean value that specifies whether  certificate  revocation
                 lists  (CRLs)  are  enabled. You can use this value to enable
                 certificate revocation  for  a  new  CA  when  you  call  the
                 CreateCertificateAuthority  action or for an existing CA when
                 you call the UpdateCertificateAuthority action.

              ExpirationInDays -> (integer)
                 Validity period of the CRL in days.

              CustomCname -> (string)
                 Name inserted into the certificate  CRL  Distribution  Points
                 extension  that  enables the use of an alias for the CRL dis-
                 tribution point. Use this value if you don't want the name of
                 your S3 bucket to be public.

              S3BucketName -> (string)
                 Name  of  the  S3 bucket that contains the CRL. If you do not
                 provide a value for the CustomCname  argument,  the  name  of
                 your  S3  bucket  is  placed into the CRL Distribution Points
                 extension of the issued certificate. You can change the  name
                 of  your  bucket  by  calling  the UpdateCertificateAuthority
                 operation. You must specify a bucket policy that  allows  ACM
                 Private CA to write the CRL to your bucket.

              S3ObjectAcl -> (string)
                 Determines  whether the CRL will be publicly readable or pri-
                 vately held in the CRL Amazon S3 bucket. If you  choose  PUB-
                 LIC_READ,  the  CRL will be accessible over the public inter-
                 net. If you choose BUCKET_OWNER_FULL_CONTROL, only the  owner
                 of the CRL S3 bucket can access the CRL, and your PKI clients
                 may need an alternative method of access.

                 If no value is specified, the default is PUBLIC_READ .
                     Note: This default can cause CA creation to fail in  some
                     circumstances.  If you have have enabled the Block Public
                     Access (BPA) feature in your S3 account,  then  you  must
                     specify     the    value    of    this    parameter    as
                     BUCKET_OWNER_FULL_CONTROL , and not doing so  results  in
                     an  error.  If  you have disabled BPA in S3, then you can
                     specify either BUCKET_OWNER_FULL_CONTROL  or  PUBLIC_READ
                     as the value.

                 For  more  information,  see Blocking public access to the S3
                 bucket .

          OcspConfiguration -> (structure)
              Configuration of Online Certificate Status Protocol (OCSP)  sup-
              port,  if  any, maintained by your private CA. When you revoke a
              certificate, OCSP responses may take up to 60 minutes to reflect
              the new status.

              Enabled -> (boolean)
                 Flag  enabling  use of the Online Certificate Status Protocol
                 (OCSP) for validating certificate revocation status.

              OcspCustomCname -> (string)
                 By default, ACM Private CA injects an AWS  domain  into  cer-
                 tificates  being  validated  by the Online Certificate Status
                 Protocol (OCSP). A customer can alternatively use this object
                 to define a CNAME specifying a customized OCSP domain.

                 Note: The value of the CNAME must not include a protocol pre-
                 fix such as "http://" or "https://".

                 For more information, see Customizing Online Certificate Sta-
                 tus  Protocol  (OCSP)  in the AWS Certificate Manager Private
                 Certificate Authority (PCA) User Guide .

       Shorthand Syntax:

          CrlConfiguration={Enabled=boolean,ExpirationInDays=integer,CustomCname=string,S3BucketName=string,S3ObjectAcl=string},OcspConfiguration={Enabled=boolean,OcspCustomCname=string}

       JSON Syntax:

          {
            "CrlConfiguration": {
              "Enabled": true|false,
              "ExpirationInDays": integer,
              "CustomCname": "string",
              "S3BucketName": "string",
              "S3ObjectAcl": "PUBLIC_READ"|"BUCKET_OWNER_FULL_CONTROL"
            },
            "OcspConfiguration": {
              "Enabled": true|false,
              "OcspCustomCname": "string"
            }
          }

       --certificate-authority-type (string)
          The type of the certificate authority.

          Possible values:

          o ROOT

          o SUBORDINATE

       --idempotency-token (string)
          Custom string that can be used to distinguish between calls  to  the
          CreateCertificateAuthority action. Idempotency tokens for CreateCer-
          tificateAuthority time out after five  minutes.  Therefore,  if  you
          call CreateCertificateAuthority multiple times with the same idempo-
          tency token within five minutes, ACM Private CA recognizes that  you
          are  requesting  only certificate authority and will issue only one.
          If you change the idempotency token for each  call,  PCA  recognizes
          that you are requesting multiple certificate authorities.

       --key-storage-security-standard (string)
          Specifies  a  cryptographic  key management compliance standard used
          for handling CA keys.

          Default: FIPS_140_2_LEVEL_3_OR_HIGHER

          Note:  FIPS_140_2_LEVEL_3_OR_HIGHER  is  not  supported  in   Region
          ap-northeast-3.  When  creating a CA in the ap-northeast-3, you must
          provide FIPS_140_2_LEVEL_2_OR_HIGHER as the  argument  for  KeyStor-
          ageSecurityStandard  .  Failure to do this results in an InvalidArg-
          sException with the message, "A certificate authority cannot be cre-
          ated in this region with the specified security standard."

          Possible values:

          o FIPS_140_2_LEVEL_2_OR_HIGHER

          o FIPS_140_2_LEVEL_3_OR_HIGHER

       --tags (list)
          Key-value pairs that will be attached to the new private CA. You can
          associate up to 50 tags with a private  CA.  For  information  using
          tags  with  IAM  to manage permissions, see Controlling Access Using
          IAM Tags .

          (structure)
              Tags are labels that you can use to identify and  organize  your
              private  CAs.  Each tag consists of a key and an optional value.
              You can associate up to 50 tags with a private CA. To add one or
              more  tags  to  a  private  CA, call the TagCertificateAuthority
              action. To remove  a  tag,  call  the  UntagCertificateAuthority
              action.

              Key -> (string)
                 Key (name) of the tag.

              Value -> (string)
                 Value of the tag.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a private certificate authority

       The  following  create-certificate-authority  command creates a private
       certificate authority in your AWS account.

          aws acm-pca create-certificate-authority --certificate-authority-configuration file://C:\ca_config.txt --revocation-configuration file://C:\revoke_config.txt --certificate-authority-type "SUBORDINATE" --idempotency-token 98256344

OUTPUT
       CertificateAuthorityArn -> (string)
          If successful, the Amazon Resource Name  (ARN)  of  the  certificate
          authority (CA). This is of the form:

              ``
              arn:aws:acm-pca:region       :account       :certificate-author-
              ity/12345678-1234-1234-1234-123456789012 `` .



                                                CREATE-CERTIFICATE-AUTHORITY()
