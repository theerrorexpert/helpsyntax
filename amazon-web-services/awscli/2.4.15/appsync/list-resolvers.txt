LIST-RESOLVERS()                                              LIST-RESOLVERS()



NAME
       list-resolvers -

DESCRIPTION
       Lists the resolvers for a given API and type.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       list-resolvers  is  a  paginated  operation.  Multiple API calls may be
       issued in order to retrieve the entire data set  of  results.  You  can
       disable pagination by providing the --no-paginate argument.  When using
       --output text and the --query argument on  a  paginated  response,  the
       --query  argument  must  extract data from the results of the following
       query expressions: resolvers

SYNOPSIS
            list-resolvers
          --api-id <value>
          --type-name <value>
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --api-id (string)
          The API ID.

       --type-name (string)
          The type name.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --starting-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The size of each page to get in the AWS service call. This does  not
          affect the number of items returned in the command's output. Setting
          a smaller page size results  in  more  calls  to  the  AWS  service,
          retrieving  fewer  items in each call. This can help prevent the AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       resolvers -> (list)
          The Resolver objects.

          (structure)
              Describes a resolver.

              typeName -> (string)
                 The resolver type name.

              fieldName -> (string)
                 The resolver field name.

              dataSourceName -> (string)
                 The resolver data source name.

              resolverArn -> (string)
                 The resolver Amazon Resource Name (ARN).

              requestMappingTemplate -> (string)
                 The request mapping template.

              responseMappingTemplate -> (string)
                 The response mapping template.

              kind -> (string)
                 The resolver type.

                 o UNIT : A UNIT resolver type. A UNIT resolver is the default
                   resolver type. You can use a UNIT resolver to run a GraphQL
                   query against a single data source.

                 o PIPELINE : A PIPELINE resolver type. You can use a PIPELINE
                   resolver to invoke a series of Function objects in a serial
                   manner.  You  can  use a pipeline resolver to run a GraphQL
                   query against multiple data sources.

              pipelineConfig -> (structure)
                 The PipelineConfig .

                 functions -> (list)
                     A list of Function objects.

                     (string)

              syncConfig -> (structure)
                 The SyncConfig for a resolver attached to  a  versioned  data
                 source.

                 conflictHandler -> (string)
                     The  Conflict Resolution strategy to perform in the event
                     of a conflict.

                     o OPTIMISTIC_CONCURRENCY : Resolve conflicts by rejecting
                       mutations  when versions don't match the latest version
                       at the server.

                     o AUTOMERGE : Resolve conflicts with the  Automerge  con-
                       flict resolution strategy.

                     o LAMBDA : Resolve conflicts with an Lambda function sup-
                       plied in the LambdaConflictHandlerConfig .

                 conflictDetection -> (string)
                     The Conflict Detection strategy to use.

                     o VERSION : Detect conflicts based on object versions for
                       this resolver.

                     o NONE  :  Do  not  detect  conflicts  when invoking this
                       resolver.

                 lambdaConflictHandlerConfig -> (structure)
                     The LambdaConflictHandlerConfig when  configuring  LAMBDA
                     as the Conflict Handler.

                     lambdaConflictHandlerArn -> (string)
                        The Amazon Resource Name (ARN) for the Lambda function
                        to use as the Conflict Handler.

              cachingConfig -> (structure)
                 The caching configuration for the resolver.

                 ttl -> (long)
                     The TTL in seconds for a resolver that has caching  acti-
                     vated.

                     Valid values are 13,600 seconds.

                 cachingKeys -> (list)
                     The  caching  keys  for a resolver that has caching acti-
                     vated.

                     Valid values are entries from  the  $context.arguments  ,
                     $context.source , and $context.identity maps.

                     (string)

              maxBatchSize -> (integer)
                 The maximum batching size for a resolver.

       nextToken -> (string)
          An  identifier  to  pass  in  the  next request to this operation to
          return the next set of items in the list.



                                                              LIST-RESOLVERS()
