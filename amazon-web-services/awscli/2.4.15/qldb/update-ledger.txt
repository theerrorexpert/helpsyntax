UPDATE-LEDGER()                                                UPDATE-LEDGER()



NAME
       update-ledger -

DESCRIPTION
       Updates properties on a ledger.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            update-ledger
          --name <value>
          [--deletion-protection | --no-deletion-protection]
          [--kms-key <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --name (string)
          The name of the ledger.

       --deletion-protection | --no-deletion-protection (boolean)
          The  flag  that prevents a ledger from being deleted by any user. If
          not provided on ledger creation, this feature is enabled (true )  by
          default.

          If  deletion protection is enabled, you must first disable it before
          you can delete the  ledger.  You  can  disable  it  by  calling  the
          UpdateLedger operation to set the flag to false .

       --kms-key (string)
          The  key  in  Key  Management Service (KMS) to use for encryption of
          data at rest in the ledger. For more information, see Encryption  at
          rest in the Amazon QLDB Developer Guide .

          Use one of the following options to specify this parameter:

          o AWS_OWNED_KMS_KEY  :  Use  an KMS key that is owned and managed by
            Amazon Web Services on your behalf.

          o Undefined : Make no changes to the KMS key of the ledger.

          o A valid symmetric customer managed KMS key : Use the specified KMS
            key  in your account that you create, own, and manage. Amazon QLDB
            does not support asymmetric keys. For more information, see  Using
            symmetric and asymmetric keys in the Key Management Service Devel-
            oper Guide .

          To specify a customer managed KMS key, you can use its key ID,  Ama-
          zon  Resource  Name  (ARN),  alias name, or alias ARN. When using an
          alias name, prefix it with "alias/" . To specify a key in a  differ-
          ent  Amazon  Web Services account, you must use the key ARN or alias
          ARN.

          For example:

          o Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab

          o Key                                                           ARN:
            arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab

          o Alias name: alias/ExampleAlias

          o Alias ARN: arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias

          For more information, see Key identifiers (KeyId) in the Key Manage-
          ment Service Developer Guide .

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To update the deletion protection property of a ledger

       The  following  update-ledger  example  updates the specified ledger to
       disable the deletion protection feature.

          aws qldb update-ledger \
              --name myExampleLedger \
              --no-deletion-protection

       Output:

          {
              "CreationDateTime": 1568839243.951,
              "Arn": "arn:aws:qldb:us-west-2:123456789012:ledger/myExampleLedger",
              "DeletionProtection": false,
              "Name": "myExampleLedger",
              "State": "ACTIVE"
          }

       Example 2: To update the AWS KMS key of a ledger to a customer  managed
       key

       The following update-ledger example updates the specified ledger to use
       a customer managed KMS key for encryption at rest.

          aws qldb update-ledger \
              --name myExampleLedger \
              --kms-key arn:aws:kms:us-west-2:123456789012:key/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111

       Output:

          {
              "CreationDateTime": 1568839243.951,
              "Arn": "arn:aws:qldb:us-west-2:123456789012:ledger/myExampleLedger",
              "DeletionProtection": false,
              "Name": "myExampleLedger",
              "State": "ACTIVE",
              "EncryptionDescription": {
                  "KmsKeyArn": "arn:aws:kms:us-west-2:123456789012:key/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111",
                  "EncryptionStatus": "UPDATING"
              }
          }

       Example 3: To update the AWS KMS key of a ledger to an AWS owned key

       The following update-ledger example updates the specified ledger to use
       an AWS owned KMS key for encryption at rest.

          aws qldb update-ledger \
              --name myExampleLedger \
              --kms-key AWS_OWNED_KMS_KEY

       Output:

          {
              "CreationDateTime": 1568839243.951,
              "Arn": "arn:aws:qldb:us-west-2:123456789012:ledger/myExampleLedger",
              "DeletionProtection": false,
              "Name": "myExampleLedger",
              "State": "ACTIVE",
              "EncryptionDescription": {
                  "KmsKeyArn": "AWS_OWNED_KMS_KEY",
                  "EncryptionStatus": "UPDATING"
              }
          }

       For  more  information, see Basic Operations for Amazon QLDB Ledgers in
       the Amazon QLDB Developer Guide.

OUTPUT
       Name -> (string)
          The name of the ledger.

       Arn -> (string)
          The Amazon Resource Name (ARN) for the ledger.

       State -> (string)
          The current status of the ledger.

       CreationDateTime -> (timestamp)
          The date and time, in epoch time format, when the  ledger  was  cre-
          ated.  (Epoch  time  format  is  the number of seconds elapsed since
          12:00:00 AM January 1, 1970 UTC.)

       DeletionProtection -> (boolean)
          The flag that prevents a ledger from being deleted by any  user.  If
          not  provided on ledger creation, this feature is enabled (true ) by
          default.

          If deletion protection is enabled, you must first disable it  before
          you  can  delete  the  ledger.  You  can  disable  it by calling the
          UpdateLedger operation to set the flag to false .

       EncryptionDescription -> (structure)
          Information about the encryption of data at rest in the ledger. This
          includes  the  current  status, the KMS key, and when the key became
          inaccessible (in the case of an error).

          KmsKeyArn -> (string)
              The Amazon Resource Name (ARN) of the customer managed  KMS  key
              that  the  ledger uses for encryption at rest. If this parameter
              is undefined, the ledger uses an Amazon Web Services  owned  KMS
              key for encryption.

          EncryptionStatus -> (string)
              The current state of encryption at rest for the ledger. This can
              be one of the following values:

              o ENABLED : Encryption is fully enabled using the specified key.

              o UPDATING : The ledger is actively processing the specified key
                change. Key changes in QLDB are asynchronous.  The  ledger  is
                fully  accessible without any performance impact while the key
                change is being processed. The amount  of  time  it  takes  to
                update a key varies depending on the ledger size.

              o KMS_KEY_INACCESSIBLE  : The specified customer managed KMS key
                is not accessible, and the ledger is impaired. Either the  key
                was  disabled  or  deleted,  or  the  grants  on  the key were
                revoked. When a ledger is impaired, it is not  accessible  and
                does not accept any read or write requests. An impaired ledger
                automatically returns to an active state after you restore the
                grants  on  the  key,  or re-enable the key that was disabled.
                However, deleting a customer managed KMS key is  irreversible.
                After  a  key is deleted, you can no longer access the ledgers
                that are protected with that key, and the data  becomes  unre-
                coverable permanently.

          InaccessibleKmsKeyDateTime -> (timestamp)
              The  date and time, in epoch time format, when the KMS key first
              became inaccessible, in the case of an error. (Epoch time format
              is  the  number  of  seconds that have elapsed since 12:00:00 AM
              January 1, 1970 UTC.)

              This parameter is undefined if the KMS key is accessible.



                                                               UPDATE-LEDGER()
