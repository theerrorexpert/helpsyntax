UPDATE-RULE-GROUP()                                        UPDATE-RULE-GROUP()



NAME
       update-rule-group -

DESCRIPTION
       Updates the specified  RuleGroup .

       NOTE:
          This  operation  completely replaces the mutable specifications that
          you already have for the rule group with the ones that  you  provide
          to  this  call.  To  modify  the  rule group, retrieve it by calling
          GetRuleGroup , update the settings as needed, and then  provide  the
          complete rule group specification to this call.

       A  rule  group defines a collection of rules to inspect and control web
       requests that you can use in a  WebACL . When you create a rule  group,
       you define an immutable capacity limit. If you update a rule group, you
       must stay within the capacity. This allows others  to  reuse  the  rule
       group with confidence in its capacity requirements.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            update-rule-group
          --name <value>
          --scope <value>
          --id <value>
          [--description <value>]
          [--rules <value>]
          --visibility-config <value>
          --lock-token <value>
          [--custom-response-bodies <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --name (string)
          The  name  of  the  rule group. You cannot change the name of a rule
          group after you create it.

       --scope (string)
          Specifies whether this is for an Amazon CloudFront  distribution  or
          for  a regional application. A regional application can be an Appli-
          cation Load Balancer (ALB), an Amazon API Gateway REST  API,  or  an
          AppSync GraphQL API.

          To  work  with  CloudFront, you must also specify the Region US East
          (N. Virginia) as follows:

          o CLI - Specify the  Region  when  you  use  the  CloudFront  scope:
            --scope=CLOUDFRONT --region=us-east-1 .

          o API and SDKs - For all calls, use the Region endpoint us-east-1.

          Possible values:

          o CLOUDFRONT

          o REGIONAL

       --id (string)
          A  unique  identifier for the rule group. This ID is returned in the
          responses to create and list commands. You provide it to  operations
          like update and delete.

       --description (string)
          A description of the rule group that helps with identification.

       --rules (list)
          The  Rule statements used to identify the web requests that you want
          to allow, block, or count. Each rule includes one  top-level  state-
          ment that WAF uses to identify matching web requests, and parameters
          that govern how WAF handles them.

          (structure)
              A single rule, which you can use in a  WebACL or   RuleGroup  to
              identify  web  requests that you want to allow, block, or count.
              Each rule includes one top-level  Statement  that  WAF  uses  to
              identify  matching  web requests, and parameters that govern how
              WAF handles them.

              Name -> (string)
                 The name of the rule. You can't change the  name  of  a  Rule
                 after you create it.

              Priority -> (integer)
                 If  you define more than one Rule in a WebACL , WAF evaluates
                 each request against the Rules in order based on the value of
                 Priority . WAF processes rules with lower priority first. The
                 priorities don't need to be consecutive, but they must all be
                 different.

              Statement -> (structure)
                 The  WAF  processing  statement  for  the  rule,  for example
                 ByteMatchStatement or  SizeConstraintStatement .

                 ByteMatchStatement -> (structure)
                     A rule statement that defines a string match  search  for
                     WAF  to  apply  to web requests. The byte match statement
                     provides  the  bytes  to  search  for,  the  location  in
                     requests that you want WAF to search, and other settings.
                     The bytes to search for are typically a string that  cor-
                     responds  with  ASCII  characters. In the WAF console and
                     the developer guide, this is refered to as a string match
                     statement.

                     SearchString -> (blob)
                        A  string  value  that you want WAF to search for. WAF
                        searches only in the part of  web  requests  that  you
                        designate  for inspection in  FieldToMatch . The maxi-
                        mum length of the value is 50 bytes.

                        Valid values depend on the component that you  specify
                        for inspection in FieldToMatch :

                        o Method : The HTTP method that you want WAF to search
                          for. This indicates the type of operation  specified
                          in the request.

                        o UriPath  : The value that you want WAF to search for
                          in the URI path, for example, /images/daily-ad.jpg .

                        If SearchString includes alphabetic characters A-Z and
                        a-z, note that the value is case sensitive.
                            If you're using the WAF API

                        Specify a base64-encoded version  of  the  value.  The
                        maximum  length  of the value before you base64-encode
                        it is 50 bytes.

                        For example, suppose the value of Type is  HEADER  and
                        the  value  of  Data  is  User-Agent  . If you want to
                        search the User-Agent header for the  value  BadBot  ,
                        you  base64-encode  BadBot  using MIME base64-encoding
                        and include the resulting value,  QmFkQm90  ,  in  the
                        value of SearchString .
                            If  you're  using the CLI or one of the Amazon Web
                            Services SDKs

                        The value that you want WAF to  search  for.  The  SDK
                        automatically base64 encodes the value.

                     FieldToMatch -> (structure)
                        The  part  of  a  web  request  that  you  want WAF to
                        inspect. For more information, see  FieldToMatch .

                        SingleHeader -> (structure)
                            Inspect a single header. Provide the name  of  the
                            header to inspect, for example, User-Agent or Ref-
                            erer . This setting isn't case sensitive.

                            Example JSON: "SingleHeader": { "Name": "haystack"
                            }

                            Name -> (string)
                               The name of the query header to inspect.

                        SingleQueryArgument -> (structure)
                            Inspect  a single query argument. Provide the name
                            of the query argument to inspect, such as UserName
                            or  SalesRegion . The name can be up to 30 charac-
                            ters long and isn't case sensitive.

                            This is used only to indicate the web request com-
                            ponent  for  WAF  to inspect, in the  FieldToMatch
                            specification.

                            Example  JSON:  "SingleQueryArgument":  {  "Name":
                            "myArgument" }

                            Name -> (string)
                               The name of the query argument to inspect.

                        AllQueryArguments -> (structure)
                            Inspect all query arguments.

                        UriPath -> (structure)
                            Inspect  the request URI path. This is the part of
                            a web request  that  identifies  a  resource,  for
                            example, /images/daily-ad.jpg .

                        QueryString -> (structure)
                            Inspect  the  query  string. This is the part of a
                            URL that appears after a ? character, if any.

                        Body -> (structure)
                            Inspect  the  request  body  as  plain  text.  The
                            request body immediately follows the request head-
                            ers. This is the part of a request  that  contains
                            any  additional data that you want to send to your
                            web server as the HTTP request body, such as  data
                            from a form.

                            Note  that only the first 8 KB (8192 bytes) of the
                            request body are forwarded to WAF  for  inspection
                            by  the underlying host service. If you don't need
                            to inspect more than 8 KB, you can guarantee  that
                            you don't allow additional bytes in by combining a
                            statement  that  inspects  the  body  of  the  web
                            request, such as  ByteMatchStatement or  RegexPat-
                            ternSetReferenceStatement  ,  with   a    SizeCon-
                            straintStatement  that enforces an 8 KB size limit
                            on the body of the request.  WAF  doesn't  support
                            inspecting  the  entire  contents  of web requests
                            whose bodies exceed the 8 KB limit.

                        Method -> (structure)
                            Inspect the HTTP method. The method indicates  the
                            type  of  operation that the request is asking the
                            origin to perform.

                        JsonBody -> (structure)
                            Inspect the request body as JSON. The request body
                            immediately  follows  the request headers. This is
                            the part of a request that contains any additional
                            data  that  you want to send to your web server as
                            the HTTP request body, such as data from a form.

                            Note that only the first 8 KB (8192 bytes) of  the
                            request  body  are forwarded to WAF for inspection
                            by the underlying host service. If you don't  need
                            to  inspect more than 8 KB, you can guarantee that
                            you don't allow additional bytes in by combining a
                            statement  that  inspects  the  body  of  the  web
                            request, such as  ByteMatchStatement or  RegexPat-
                            ternSetReferenceStatement   ,   with  a   SizeCon-
                            straintStatement that enforces an 8 KB size  limit
                            on  the  body  of the request. WAF doesn't support
                            inspecting the entire  contents  of  web  requests
                            whose bodies exceed the 8 KB limit.

                            MatchPattern -> (structure)
                               The  patterns to look for in the JSON body. WAF
                               inspects the results of these  pattern  matches
                               against the rule inspection criteria.

                               All -> (structure)
                                   Match  all of the elements. See also Match-
                                   Scope in  JsonBody .

                                   You must specify either this setting or the
                                   IncludedPaths setting, but not both.

                               IncludedPaths -> (list)
                                   Match only the specified include paths. See
                                   also MatchScope in  JsonBody .

                                   Provide  the  include  paths   using   JSON
                                   Pointer  syntax.  For  example,  "Included-
                                   Paths": ["/dogs/0/name", "/dogs/1/name"]  .
                                   For  information about this syntax, see the
                                   Internet Engineering Task Force (IETF) doc-
                                   umentation   JavaScript   Object   Notation
                                   (JSON) Pointer .

                                   You must specify either this setting or the
                                   All setting, but not both.

                                   NOTE:
                                      Don't  use  this  option  to include all
                                      paths. Instead, use the All setting.

                                   (string)

                            MatchScope -> (string)
                               The parts of the JSON to  match  against  using
                               the  MatchPattern  .  If  you specify All , WAF
                               matches against keys and values.

                            InvalidFallbackBehavior -> (string)
                               What WAF should do if it  fails  to  completely
                               parse  the  JSON body. The options are the fol-
                               lowing:

                               o EVALUATE_AS_STRING  -  Inspect  the  body  as
                                 plain  text. WAF applies the text transforma-
                                 tions  and  inspection  criteria   that   you
                                 defined  for  the JSON inspection to the body
                                 text string.

                               o MATCH - Treat the web request as matching the
                                 rule  statement.  WAF applies the rule action
                                 to the request.

                               o NO_MATCH -  Treat  the  web  request  as  not
                                 matching the rule statement.

                               If  you  don't provide this setting, WAF parses
                               and evaluates the content only up to the  first
                               parsing failure that it encounters.

                               WAF  does  its  best  to  parse the entire JSON
                               body, but might be forced to stop  for  reasons
                               such  as  invalid  characters,  duplicate keys,
                               truncation, and any  content  whose  root  node
                               isn't an object or an array.

                               WAF  parses  the JSON in the following examples
                               as two valid key, value pairs:

                               o Missing                                comma:
                                 {"key1":"value1""key2":"value2"}

                               o Missing                                colon:
                                 {"key1":"value1","key2""value2"}

                               o Extra                                 colons:
                                 {"key1"::"value1","key2""value2"}

                     TextTransformations -> (list)
                        Text  transformations  eliminate  some  of the unusual
                        formatting that attackers use in web  requests  in  an
                        effort to bypass detection. If you specify one or more
                        transformations in a rule statement, WAF performs  all
                        transformations  on  the content of the request compo-
                        nent identified by FieldToMatch ,  starting  from  the
                        lowest priority setting, before inspecting the content
                        for a match.

                        (structure)
                            Text transformations eliminate some of the unusual
                            formatting  that  attackers use in web requests in
                            an effort to bypass detection.

                            Priority -> (integer)
                               Sets the relative processing order for multiple
                               transformations  that  are  defined  for a rule
                               statement. WAF processes  all  transformations,
                               from   lowest   priority   to  highest,  before
                               inspecting the transformed content. The priori-
                               ties  don't  need  to  be consecutive, but they
                               must all be different.

                            Type -> (string)
                               You can specify  the  following  transformation
                               types:
                                   BASE64_DECODE  -  Decode  a Base64 -encoded
                                   string.

                                   BASE64_DECODE_EXT   -   Decode   a   Base64
                                   -encoded string, but use a forgiving imple-
                                   mentation  that  ignores  characters   that
                                   aren't valid.

                                   CMD_LINE  -  Command-line  transformations.
                                   These are helpful in reducing effectiveness
                                   of attackers who inject an operating system
                                   command-line command and use  unusual  for-
                                   matting to disguise some or all of the com-
                                   mand.

                               o Delete the following characters: \ " ' ^

                               o Delete spaces before  the  following  charac-
                                 ters: / (

                               o Replace   the  following  characters  with  a
                                 space: , ;

                               o Replace multiple spaces with one space

                               o Convert uppercase letters (A-Z) to  lowercase
                                 (a-z)
                                   COMPRESS_WHITE_SPACE  - Replace these char-
                                   acters with a space character (decimal 32):

                               o \f , formfeed, decimal 12

                               o \t , tab, decimal 9

                               o \n , newline, decimal 10

                               o \r , carriage return, decimal 13

                               o \v , vertical tab, decimal 11

                               o Non-breaking space, decimal 160
                                   COMPRESS_WHITE_SPACE also replaces multiple
                                   spaces with one space.

                                   CSS_DECODE - Decode  characters  that  were
                                   encoded  using  CSS  2.x  escape rules syn-
                                   data.html#characters . This  function  uses
                                   up to two bytes in the decoding process, so
                                   it can help  to  uncover  ASCII  characters
                                   that  were  encoded using CSS encoding that
                                   wouldnt typically  be  encoded.  It's  also
                                   useful  in  countering  evasion, which is a
                                   combination of a backslash and non-hexadec-
                                   imal  characters.  For example, ja\vascript
                                   for javascript.

                                   ESCAPE_SEQ_DECODE -  Decode  the  following
                                   ANSI  C escape sequences: \a , \b , \f , \n
                                   , \r , \t , \v , \\ , \? , \' , \"  ,  \xHH
                                   (hexadecimal),   \0OOO  (octal).  Encodings
                                   that aren't valid remain in the output.

                                   HEX_DECODE - Decode a string of hexadecimal
                                   characters into a binary.

                                   HTML_ENTITY_DECODE  -  Replace HTML-encoded
                                   characters   with   unencoded   characters.
                                   HTML_ENTITY_DECODE  performs  these  opera-
                                   tions:

                               o Replaces (ampersand)quot; with "

                               o Replaces (ampersand)nbsp; with a non-breaking
                                 space, decimal 160

                               o Replaces  (ampersand)lt;  with  a "less than"
                                 symbol

                               o Replaces (ampersand)gt; with >

                               o Replaces characters that are  represented  in
                                 hexadecimal format, (ampersand)#xhhhh; , with
                                 the corresponding characters

                               o Replaces characters that are  represented  in
                                 decimal  format, (ampersand)#nnnn; , with the
                                 corresponding characters
                                   JS_DECODE  -   Decode   JavaScript   escape
                                   sequences.  If  a \  u  HHHH code is in the
                                   full-width ASCII code range of FF01-FF5E  ,
                                   then  the higher byte is used to detect and
                                   adjust the lower byte.  If  not,  only  the
                                   lower  byte  is used and the higher byte is
                                   zeroed, causing a possible loss of informa-
                                   tion.

                                   LOWERCASE - Convert uppercase letters (A-Z)
                                   to lowercase (a-z).

                                   MD5 - Calculate an MD5 hash from  the  data
                                   in the input. The computed hash is in a raw
                                   binary form.

                                   NONE - Specify NONE if you don't  want  any
                                   text transformations.

                                   NORMALIZE_PATH  -  Remove multiple slashes,
                                   directory  self-references,  and  directory
                                   back-references  that are not at the begin-
                                   ning of the input from an input string.

                                   NORMALIZE_PATH_WIN - This is  the  same  as
                                   NORMALIZE_PATH  ,  but first converts back-
                                   slash characters to forward slashes.

                                   REMOVE_NULLS - Remove all NULL  bytes  from
                                   the input.

                                   REPLACE_COMMENTS  - Replace each occurrence
                                   of a C-style comment (/* ... */  )  with  a
                                   single  space.  Multiple consecutive occur-
                                   rences  are  not  compressed.  Unterminated
                                   comments  are  also  replaced  with a space
                                   (ASCII 0x20). However, a standalone  termi-
                                   nation  of  a  comment  (*/  ) is not acted
                                   upon.

                                   REPLACE_NULLS - Replace NULL bytes  in  the
                                   input  with space characters (ASCII 0x20 ).

                                   SQL_HEX_DECODE - Decode SQL hex data. Exam-
                                   ple  (0x414243 ) will be decoded to (ABC ).

                                   URL_DECODE - Decode a URL-encoded value.

                                   URL_DECODE_UNI - Like URL_DECODE , but with
                                   support for Microsoft-specific %u encoding.
                                   If the code is in the full-width ASCII code
                                   range  of  FF01-FF5E  ,  the higher byte is
                                   used to detect and adjust the  lower  byte.
                                   Otherwise,  only the lower byte is used and
                                   the higher byte is zeroed.

                                   UTF8_TO_UNICODE - Convert all UTF-8 charac-
                                   ter  sequences to Unicode. This helps input
                                   normalization, and  minimizing  false-posi-
                                   tives  and  false-negatives for non-English
                                   languages.

                     PositionalConstraint -> (string)
                        The area within the portion of a web request that  you
                        want  WAF  to  search  for SearchString . Valid values
                        include the following:
                            CONTAINS

                        The specified part of the web request must include the
                        value  of SearchString , but the location doesn't mat-
                        ter.
                            CONTAINS_WORD

                        The specified part of the web request must include the
                        value  of SearchString , and SearchString must contain
                        only alphanumeric characters or underscore (A-Z,  a-z,
                        0-9,  or _). In addition, SearchString must be a word,
                        which means that both of the following are true:

                        o SearchString is at the beginning  of  the  specified
                          part  of the web request or is preceded by a charac-
                          ter other than an alphanumeric character  or  under-
                          score  (_).  Examples  include the value of a header
                          and ;BadBot .

                        o SearchString is at the end of the specified part  of
                          the  web request or is followed by a character other
                          than an alphanumeric character  or  underscore  (_),
                          for example, BadBot; and -BadBot; .
                            EXACTLY

                        The  value  of  the  specified part of the web request
                        must exactly match the value of SearchString .
                            STARTS_WITH

                        The value of SearchString must appear at the beginning
                        of the specified part of the web request.
                            ENDS_WITH

                        The  value  of  SearchString must appear at the end of
                        the specified part of the web request.

                 SqliMatchStatement -> (structure)
                     Attackers sometimes insert malicious SQL  code  into  web
                     requests in an effort to extract data from your database.
                     To allow or block web requests  that  appear  to  contain
                     malicious  SQL  code,  create  one  or more SQL injection
                     match conditions. An SQL injection match condition  iden-
                     tifies  the  part of web requests, such as the URI or the
                     query string, that you want WAF to inspect. Later in  the
                     process,  when  you create a web ACL, you specify whether
                     to allow or block requests that appear to  contain  mali-
                     cious SQL code.

                     FieldToMatch -> (structure)
                        The  part  of  a  web  request  that  you  want WAF to
                        inspect. For more information, see  FieldToMatch .

                        SingleHeader -> (structure)
                            Inspect a single header. Provide the name  of  the
                            header to inspect, for example, User-Agent or Ref-
                            erer . This setting isn't case sensitive.

                            Example JSON: "SingleHeader": { "Name": "haystack"
                            }

                            Name -> (string)
                               The name of the query header to inspect.

                        SingleQueryArgument -> (structure)
                            Inspect  a single query argument. Provide the name
                            of the query argument to inspect, such as UserName
                            or  SalesRegion . The name can be up to 30 charac-
                            ters long and isn't case sensitive.

                            This is used only to indicate the web request com-
                            ponent  for  WAF  to inspect, in the  FieldToMatch
                            specification.

                            Example  JSON:  "SingleQueryArgument":  {  "Name":
                            "myArgument" }

                            Name -> (string)
                               The name of the query argument to inspect.

                        AllQueryArguments -> (structure)
                            Inspect all query arguments.

                        UriPath -> (structure)
                            Inspect  the request URI path. This is the part of
                            a web request  that  identifies  a  resource,  for
                            example, /images/daily-ad.jpg .

                        QueryString -> (structure)
                            Inspect  the  query  string. This is the part of a
                            URL that appears after a ? character, if any.

                        Body -> (structure)
                            Inspect  the  request  body  as  plain  text.  The
                            request body immediately follows the request head-
                            ers. This is the part of a request  that  contains
                            any  additional data that you want to send to your
                            web server as the HTTP request body, such as  data
                            from a form.

                            Note  that only the first 8 KB (8192 bytes) of the
                            request body are forwarded to WAF  for  inspection
                            by  the underlying host service. If you don't need
                            to inspect more than 8 KB, you can guarantee  that
                            you don't allow additional bytes in by combining a
                            statement  that  inspects  the  body  of  the  web
                            request, such as  ByteMatchStatement or  RegexPat-
                            ternSetReferenceStatement  ,  with   a    SizeCon-
                            straintStatement  that enforces an 8 KB size limit
                            on the body of the request.  WAF  doesn't  support
                            inspecting  the  entire  contents  of web requests
                            whose bodies exceed the 8 KB limit.

                        Method -> (structure)
                            Inspect the HTTP method. The method indicates  the
                            type  of  operation that the request is asking the
                            origin to perform.

                        JsonBody -> (structure)
                            Inspect the request body as JSON. The request body
                            immediately  follows  the request headers. This is
                            the part of a request that contains any additional
                            data  that  you want to send to your web server as
                            the HTTP request body, such as data from a form.

                            Note that only the first 8 KB (8192 bytes) of  the
                            request  body  are forwarded to WAF for inspection
                            by the underlying host service. If you don't  need
                            to  inspect more than 8 KB, you can guarantee that
                            you don't allow additional bytes in by combining a
                            statement  that  inspects  the  body  of  the  web
                            request, such as  ByteMatchStatement or  RegexPat-
                            ternSetReferenceStatement   ,   with  a   SizeCon-
                            straintStatement that enforces an 8 KB size  limit
                            on  the  body  of the request. WAF doesn't support
                            inspecting the entire  contents  of  web  requests
                            whose bodies exceed the 8 KB limit.

                            MatchPattern -> (structure)
                               The  patterns to look for in the JSON body. WAF
                               inspects the results of these  pattern  matches
                               against the rule inspection criteria.

                               All -> (structure)
                                   Match  all of the elements. See also Match-
                                   Scope in  JsonBody .

                                   You must specify either this setting or the
                                   IncludedPaths setting, but not both.

                               IncludedPaths -> (list)
                                   Match only the specified include paths. See
                                   also MatchScope in  JsonBody .

                                   Provide  the  include  paths   using   JSON
                                   Pointer  syntax.  For  example,  "Included-
                                   Paths": ["/dogs/0/name", "/dogs/1/name"]  .
                                   For  information about this syntax, see the
                                   Internet Engineering Task Force (IETF) doc-
                                   umentation   JavaScript   Object   Notation
                                   (JSON) Pointer .

                                   You must specify either this setting or the
                                   All setting, but not both.

                                   NOTE:
                                      Don't  use  this  option  to include all
                                      paths. Instead, use the All setting.

                                   (string)

                            MatchScope -> (string)
                               The parts of the JSON to  match  against  using
                               the  MatchPattern  .  If  you specify All , WAF
                               matches against keys and values.

                            InvalidFallbackBehavior -> (string)
                               What WAF should do if it  fails  to  completely
                               parse  the  JSON body. The options are the fol-
                               lowing:

                               o EVALUATE_AS_STRING  -  Inspect  the  body  as
                                 plain  text. WAF applies the text transforma-
                                 tions  and  inspection  criteria   that   you
                                 defined  for  the JSON inspection to the body
                                 text string.

                               o MATCH - Treat the web request as matching the
                                 rule  statement.  WAF applies the rule action
                                 to the request.

                               o NO_MATCH -  Treat  the  web  request  as  not
                                 matching the rule statement.

                               If  you  don't provide this setting, WAF parses
                               and evaluates the content only up to the  first
                               parsing failure that it encounters.

                               WAF  does  its  best  to  parse the entire JSON
                               body, but might be forced to stop  for  reasons
                               such  as  invalid  characters,  duplicate keys,
                               truncation, and any  content  whose  root  node
                               isn't an object or an array.

                               WAF  parses  the JSON in the following examples
                               as two valid key, value pairs:

                               o Missing                                comma:
                                 {"key1":"value1""key2":"value2"}

                               o Missing                                colon:
                                 {"key1":"value1","key2""value2"}

                               o Extra                                 colons:
                                 {"key1"::"value1","key2""value2"}

                     TextTransformations -> (list)
                        Text  transformations  eliminate  some  of the unusual
                        formatting that attackers use in web  requests  in  an
                        effort to bypass detection. If you specify one or more
                        transformations in a rule statement, WAF performs  all
                        transformations  on  the content of the request compo-
                        nent identified by FieldToMatch ,  starting  from  the
                        lowest priority setting, before inspecting the content
                        for a match.

                        (structure)
                            Text transformations eliminate some of the unusual
                            formatting  that  attackers use in web requests in
                            an effort to bypass detection.

                            Priority -> (integer)
                               Sets the relative processing order for multiple
                               transformations  that  are  defined  for a rule
                               statement. WAF processes  all  transformations,
                               from   lowest   priority   to  highest,  before
                               inspecting the transformed content. The priori-
                               ties  don't  need  to  be consecutive, but they
                               must all be different.

                            Type -> (string)
                               You can specify  the  following  transformation
                               types:
                                   BASE64_DECODE  -  Decode  a Base64 -encoded
                                   string.

                                   BASE64_DECODE_EXT   -   Decode   a   Base64
                                   -encoded string, but use a forgiving imple-
                                   mentation  that  ignores  characters   that
                                   aren't valid.

                                   CMD_LINE  -  Command-line  transformations.
                                   These are helpful in reducing effectiveness
                                   of attackers who inject an operating system
                                   command-line command and use  unusual  for-
                                   matting to disguise some or all of the com-
                                   mand.

                               o Delete the following characters: \ " ' ^

                               o Delete spaces before  the  following  charac-
                                 ters: / (

                               o Replace   the  following  characters  with  a
                                 space: , ;

                               o Replace multiple spaces with one space

                               o Convert uppercase letters (A-Z) to  lowercase
                                 (a-z)
                                   COMPRESS_WHITE_SPACE  - Replace these char-
                                   acters with a space character (decimal 32):

                               o \f , formfeed, decimal 12

                               o \t , tab, decimal 9

                               o \n , newline, decimal 10

                               o \r , carriage return, decimal 13

                               o \v , vertical tab, decimal 11

                               o Non-breaking space, decimal 160
                                   COMPRESS_WHITE_SPACE also replaces multiple
                                   spaces with one space.

                                   CSS_DECODE - Decode  characters  that  were
                                   encoded  using  CSS  2.x  escape rules syn-
                                   data.html#characters . This  function  uses
                                   up to two bytes in the decoding process, so
                                   it can help  to  uncover  ASCII  characters
                                   that  were  encoded using CSS encoding that
                                   wouldnt typically  be  encoded.  It's  also
                                   useful  in  countering  evasion, which is a
                                   combination of a backslash and non-hexadec-
                                   imal  characters.  For example, ja\vascript
                                   for javascript.

                                   ESCAPE_SEQ_DECODE -  Decode  the  following
                                   ANSI  C escape sequences: \a , \b , \f , \n
                                   , \r , \t , \v , \\ , \? , \' , \"  ,  \xHH
                                   (hexadecimal),   \0OOO  (octal).  Encodings
                                   that aren't valid remain in the output.

                                   HEX_DECODE - Decode a string of hexadecimal
                                   characters into a binary.

                                   HTML_ENTITY_DECODE  -  Replace HTML-encoded
                                   characters   with   unencoded   characters.
                                   HTML_ENTITY_DECODE  performs  these  opera-
                                   tions:

                               o Replaces (ampersand)quot; with "

                               o Replaces (ampersand)nbsp; with a non-breaking
                                 space, decimal 160

                               o Replaces  (ampersand)lt;  with  a "less than"
                                 symbol

                               o Replaces (ampersand)gt; with >

                               o Replaces characters that are  represented  in
                                 hexadecimal format, (ampersand)#xhhhh; , with
                                 the corresponding characters

                               o Replaces characters that are  represented  in
                                 decimal  format, (ampersand)#nnnn; , with the
                                 corresponding characters
                                   JS_DECODE  -   Decode   JavaScript   escape
                                   sequences.  If  a \  u  HHHH code is in the
                                   full-width ASCII code range of FF01-FF5E  ,
                                   then  the higher byte is used to detect and
                                   adjust the lower byte.  If  not,  only  the
                                   lower  byte  is used and the higher byte is
                                   zeroed, causing a possible loss of informa-
                                   tion.

                                   LOWERCASE - Convert uppercase letters (A-Z)
                                   to lowercase (a-z).

                                   MD5 - Calculate an MD5 hash from  the  data
                                   in the input. The computed hash is in a raw
                                   binary form.

                                   NONE - Specify NONE if you don't  want  any
                                   text transformations.

                                   NORMALIZE_PATH  -  Remove multiple slashes,
                                   directory  self-references,  and  directory
                                   back-references  that are not at the begin-
                                   ning of the input from an input string.

                                   NORMALIZE_PATH_WIN - This is  the  same  as
                                   NORMALIZE_PATH  ,  but first converts back-
                                   slash characters to forward slashes.

                                   REMOVE_NULLS - Remove all NULL  bytes  from
                                   the input.

                                   REPLACE_COMMENTS  - Replace each occurrence
                                   of a C-style comment (/* ... */  )  with  a
                                   single  space.  Multiple consecutive occur-
                                   rences  are  not  compressed.  Unterminated
                                   comments  are  also  replaced  with a space
                                   (ASCII 0x20). However, a standalone  termi-
                                   nation  of  a  comment  (*/  ) is not acted
                                   upon.

                                   REPLACE_NULLS - Replace NULL bytes  in  the
                                   input  with space characters (ASCII 0x20 ).

                                   SQL_HEX_DECODE - Decode SQL hex data. Exam-
                                   ple  (0x414243 ) will be decoded to (ABC ).

                                   URL_DECODE - Decode a URL-encoded value.

                                   URL_DECODE_UNI - Like URL_DECODE , but with
                                   support for Microsoft-specific %u encoding.
                                   If the code is in the full-width ASCII code
                                   range  of  FF01-FF5E  ,  the higher byte is
                                   used to detect and adjust the  lower  byte.
                                   Otherwise,  only the lower byte is used and
                                   the higher byte is zeroed.

                                   UTF8_TO_UNICODE - Convert all UTF-8 charac-
                                   ter  sequences to Unicode. This helps input
                                   normalization, and  minimizing  false-posi-
                                   tives  and  false-negatives for non-English
                                   languages.

                 XssMatchStatement -> (structure)
                     A rule statement  that  defines  a  cross-site  scripting
                     (XSS)  match search for WAF to apply to web requests. XSS
                     attacks are those where the attacker uses vulnerabilities
                     in  a  benign  website  as  a vehicle to inject malicious
                     client-site scripts into other legitimate  web  browsers.
                     The XSS match statement provides the location in requests
                     that you want WAF to search and text  transformations  to
                     use  on the search area before WAF searches for character
                     sequences that are likely to be malicious strings.

                     FieldToMatch -> (structure)
                        The part of  a  web  request  that  you  want  WAF  to
                        inspect. For more information, see  FieldToMatch .

                        SingleHeader -> (structure)
                            Inspect  a  single header. Provide the name of the
                            header to inspect, for example, User-Agent or Ref-
                            erer . This setting isn't case sensitive.

                            Example JSON: "SingleHeader": { "Name": "haystack"
                            }

                            Name -> (string)
                               The name of the query header to inspect.

                        SingleQueryArgument -> (structure)
                            Inspect a single query argument. Provide the  name
                            of the query argument to inspect, such as UserName
                            or SalesRegion . The name can be up to 30  charac-
                            ters long and isn't case sensitive.

                            This is used only to indicate the web request com-
                            ponent for WAF to inspect,  in  the   FieldToMatch
                            specification.

                            Example  JSON:  "SingleQueryArgument":  {  "Name":
                            "myArgument" }

                            Name -> (string)
                               The name of the query argument to inspect.

                        AllQueryArguments -> (structure)
                            Inspect all query arguments.

                        UriPath -> (structure)
                            Inspect the request URI path. This is the part  of
                            a  web  request  that  identifies  a resource, for
                            example, /images/daily-ad.jpg .

                        QueryString -> (structure)
                            Inspect the query string. This is the  part  of  a
                            URL that appears after a ? character, if any.

                        Body -> (structure)
                            Inspect  the  request  body  as  plain  text.  The
                            request body immediately follows the request head-
                            ers.  This  is the part of a request that contains
                            any additional data that you want to send to  your
                            web  server as the HTTP request body, such as data
                            from a form.

                            Note that only the first 8 KB (8192 bytes) of  the
                            request  body  are forwarded to WAF for inspection
                            by the underlying host service. If you don't  need
                            to  inspect more than 8 KB, you can guarantee that
                            you don't allow additional bytes in by combining a
                            statement  that  inspects  the  body  of  the  web
                            request, such as  ByteMatchStatement or  RegexPat-
                            ternSetReferenceStatement   ,   with  a   SizeCon-
                            straintStatement that enforces an 8 KB size  limit
                            on  the  body  of the request. WAF doesn't support
                            inspecting the entire  contents  of  web  requests
                            whose bodies exceed the 8 KB limit.

                        Method -> (structure)
                            Inspect  the HTTP method. The method indicates the
                            type of operation that the request is  asking  the
                            origin to perform.

                        JsonBody -> (structure)
                            Inspect the request body as JSON. The request body
                            immediately follows the request headers.  This  is
                            the part of a request that contains any additional
                            data that you want to send to your web  server  as
                            the HTTP request body, such as data from a form.

                            Note  that only the first 8 KB (8192 bytes) of the
                            request body are forwarded to WAF  for  inspection
                            by  the underlying host service. If you don't need
                            to inspect more than 8 KB, you can guarantee  that
                            you don't allow additional bytes in by combining a
                            statement  that  inspects  the  body  of  the  web
                            request, such as  ByteMatchStatement or  RegexPat-
                            ternSetReferenceStatement  ,  with   a    SizeCon-
                            straintStatement  that enforces an 8 KB size limit
                            on the body of the request.  WAF  doesn't  support
                            inspecting  the  entire  contents  of web requests
                            whose bodies exceed the 8 KB limit.

                            MatchPattern -> (structure)
                               The patterns to look for in the JSON body.  WAF
                               inspects  the  results of these pattern matches
                               against the rule inspection criteria.

                               All -> (structure)
                                   Match all of the elements. See also  Match-
                                   Scope in  JsonBody .

                                   You must specify either this setting or the
                                   IncludedPaths setting, but not both.

                               IncludedPaths -> (list)
                                   Match only the specified include paths. See
                                   also MatchScope in  JsonBody .

                                   Provide   the   include  paths  using  JSON
                                   Pointer  syntax.  For  example,  "Included-
                                   Paths":  ["/dogs/0/name", "/dogs/1/name"] .
                                   For information about this syntax, see  the
                                   Internet Engineering Task Force (IETF) doc-
                                   umentation   JavaScript   Object   Notation
                                   (JSON) Pointer .

                                   You must specify either this setting or the
                                   All setting, but not both.

                                   NOTE:
                                      Don't use this  option  to  include  all
                                      paths. Instead, use the All setting.

                                   (string)

                            MatchScope -> (string)
                               The  parts  of  the JSON to match against using
                               the MatchPattern . If you  specify  All  ,  WAF
                               matches against keys and values.

                            InvalidFallbackBehavior -> (string)
                               What  WAF  should  do if it fails to completely
                               parse the JSON body. The options are  the  fol-
                               lowing:

                               o EVALUATE_AS_STRING  -  Inspect  the  body  as
                                 plain text. WAF applies the text  transforma-
                                 tions   and   inspection  criteria  that  you
                                 defined for the JSON inspection to  the  body
                                 text string.

                               o MATCH - Treat the web request as matching the
                                 rule statement. WAF applies the  rule  action
                                 to the request.

                               o NO_MATCH  -  Treat  the  web  request  as not
                                 matching the rule statement.

                               If you don't provide this setting,  WAF  parses
                               and  evaluates the content only up to the first
                               parsing failure that it encounters.

                               WAF does its best  to  parse  the  entire  JSON
                               body,  but  might be forced to stop for reasons
                               such as  invalid  characters,  duplicate  keys,
                               truncation,  and  any  content  whose root node
                               isn't an object or an array.

                               WAF parses the JSON in the  following  examples
                               as two valid key, value pairs:

                               o Missing                                comma:
                                 {"key1":"value1""key2":"value2"}

                               o Missing                                colon:
                                 {"key1":"value1","key2""value2"}

                               o Extra                                 colons:
                                 {"key1"::"value1","key2""value2"}

                     TextTransformations -> (list)
                        Text transformations eliminate  some  of  the  unusual
                        formatting  that  attackers  use in web requests in an
                        effort to bypass detection. If you specify one or more
                        transformations  in a rule statement, WAF performs all
                        transformations on the content of the  request  compo-
                        nent  identified  by  FieldToMatch , starting from the
                        lowest priority setting, before inspecting the content
                        for a match.

                        (structure)
                            Text transformations eliminate some of the unusual
                            formatting that attackers use in web  requests  in
                            an effort to bypass detection.

                            Priority -> (integer)
                               Sets the relative processing order for multiple
                               transformations that are  defined  for  a  rule
                               statement.  WAF  processes all transformations,
                               from  lowest  priority   to   highest,   before
                               inspecting the transformed content. The priori-
                               ties don't need to  be  consecutive,  but  they
                               must all be different.

                            Type -> (string)
                               You  can  specify  the following transformation
                               types:
                                   BASE64_DECODE - Decode  a  Base64  -encoded
                                   string.

                                   BASE64_DECODE_EXT   -   Decode   a   Base64
                                   -encoded string, but use a forgiving imple-
                                   mentation   that  ignores  characters  that
                                   aren't valid.

                                   CMD_LINE  -  Command-line  transformations.
                                   These are helpful in reducing effectiveness
                                   of attackers who inject an operating system
                                   command-line  command  and use unusual for-
                                   matting to disguise some or all of the com-
                                   mand.

                               o Delete the following characters: \ " ' ^

                               o Delete  spaces  before  the following charac-
                                 ters: / (

                               o Replace  the  following  characters  with   a
                                 space: , ;

                               o Replace multiple spaces with one space

                               o Convert  uppercase letters (A-Z) to lowercase
                                 (a-z)
                                   COMPRESS_WHITE_SPACE - Replace these  char-
                                   acters with a space character (decimal 32):

                               o \f , formfeed, decimal 12

                               o \t , tab, decimal 9

                               o \n , newline, decimal 10

                               o \r , carriage return, decimal 13

                               o \v , vertical tab, decimal 11

                               o Non-breaking space, decimal 160
                                   COMPRESS_WHITE_SPACE also replaces multiple
                                   spaces with one space.

                                   CSS_DECODE  -  Decode  characters that were
                                   encoded using CSS  2.x  escape  rules  syn-
                                   data.html#characters  .  This function uses
                                   up to two bytes in the decoding process, so
                                   it  can  help  to  uncover ASCII characters
                                   that were encoded using CSS  encoding  that
                                   wouldnt  typically  be  encoded.  It's also
                                   useful in countering evasion,  which  is  a
                                   combination of a backslash and non-hexadec-
                                   imal characters. For  example,  ja\vascript
                                   for javascript.

                                   ESCAPE_SEQ_DECODE  -  Decode  the following
                                   ANSI C escape sequences: \a , \b , \f ,  \n
                                   ,  \r  , \t , \v , \\ , \? , \' , \" , \xHH
                                   (hexadecimal),  \0OOO  (octal).   Encodings
                                   that aren't valid remain in the output.

                                   HEX_DECODE - Decode a string of hexadecimal
                                   characters into a binary.

                                   HTML_ENTITY_DECODE -  Replace  HTML-encoded
                                   characters   with   unencoded   characters.
                                   HTML_ENTITY_DECODE  performs  these  opera-
                                   tions:

                               o Replaces (ampersand)quot; with "

                               o Replaces (ampersand)nbsp; with a non-breaking
                                 space, decimal 160

                               o Replaces (ampersand)lt; with  a  "less  than"
                                 symbol

                               o Replaces (ampersand)gt; with >

                               o Replaces  characters  that are represented in
                                 hexadecimal format, (ampersand)#xhhhh; , with
                                 the corresponding characters

                               o Replaces  characters  that are represented in
                                 decimal format, (ampersand)#nnnn; , with  the
                                 corresponding characters
                                   JS_DECODE   -   Decode   JavaScript  escape
                                   sequences. If a \  u  HHHH code is  in  the
                                   full-width  ASCII code range of FF01-FF5E ,
                                   then the higher byte is used to detect  and
                                   adjust  the  lower  byte.  If not, only the
                                   lower byte is used and the higher  byte  is
                                   zeroed, causing a possible loss of informa-
                                   tion.

                                   LOWERCASE - Convert uppercase letters (A-Z)
                                   to lowercase (a-z).

                                   MD5  -  Calculate an MD5 hash from the data
                                   in the input. The computed hash is in a raw
                                   binary form.

                                   NONE  -  Specify NONE if you don't want any
                                   text transformations.

                                   NORMALIZE_PATH - Remove  multiple  slashes,
                                   directory  self-references,  and  directory
                                   back-references that are not at the  begin-
                                   ning of the input from an input string.

                                   NORMALIZE_PATH_WIN  -  This  is the same as
                                   NORMALIZE_PATH , but first  converts  back-
                                   slash characters to forward slashes.

                                   REMOVE_NULLS  -  Remove all NULL bytes from
                                   the input.

                                   REPLACE_COMMENTS - Replace each  occurrence
                                   of  a  C-style  comment (/* ... */ ) with a
                                   single space. Multiple  consecutive  occur-
                                   rences  are  not  compressed.  Unterminated
                                   comments are also  replaced  with  a  space
                                   (ASCII  0x20). However, a standalone termi-
                                   nation of a comment  (*/  )  is  not  acted
                                   upon.

                                   REPLACE_NULLS  -  Replace NULL bytes in the
                                   input with space characters (ASCII 0x20  ).

                                   SQL_HEX_DECODE - Decode SQL hex data. Exam-
                                   ple (0x414243 ) will be decoded to (ABC  ).

                                   URL_DECODE - Decode a URL-encoded value.

                                   URL_DECODE_UNI - Like URL_DECODE , but with
                                   support for Microsoft-specific %u encoding.
                                   If the code is in the full-width ASCII code
                                   range of FF01-FF5E ,  the  higher  byte  is
                                   used  to  detect and adjust the lower byte.
                                   Otherwise, only the lower byte is used  and
                                   the higher byte is zeroed.

                                   UTF8_TO_UNICODE - Convert all UTF-8 charac-
                                   ter sequences to Unicode. This helps  input
                                   normalization,  and  minimizing false-posi-
                                   tives and false-negatives  for  non-English
                                   languages.

                 SizeConstraintStatement -> (structure)
                     A  rule statement that compares a number of bytes against
                     the size of a request component, using a comparison oper-
                     ator,  such  as  greater  than  (>) or less than (<). For
                     example, you can use a size constraint statement to  look
                     for query strings that are longer than 100 bytes.

                     If  you  configure  WAF  to inspect the request body, WAF
                     inspects only the first 8192 bytes (8 KB). If the request
                     body  for your web requests never exceeds 8192 bytes, you
                     can create a size constraint condition and block requests
                     that have a request body greater than 8192 bytes.

                     If you choose URI for the value of Part of the request to
                     filter on, the slash (/) in the URI counts as one charac-
                     ter.  For  example,  the URI /logo.jpg is nine characters
                     long.

                     FieldToMatch -> (structure)
                        The part of  a  web  request  that  you  want  WAF  to
                        inspect. For more information, see  FieldToMatch .

                        SingleHeader -> (structure)
                            Inspect  a  single header. Provide the name of the
                            header to inspect, for example, User-Agent or Ref-
                            erer . This setting isn't case sensitive.

                            Example JSON: "SingleHeader": { "Name": "haystack"
                            }

                            Name -> (string)
                               The name of the query header to inspect.

                        SingleQueryArgument -> (structure)
                            Inspect a single query argument. Provide the  name
                            of the query argument to inspect, such as UserName
                            or SalesRegion . The name can be up to 30  charac-
                            ters long and isn't case sensitive.

                            This is used only to indicate the web request com-
                            ponent for WAF to inspect,  in  the   FieldToMatch
                            specification.

                            Example  JSON:  "SingleQueryArgument":  {  "Name":
                            "myArgument" }

                            Name -> (string)
                               The name of the query argument to inspect.

                        AllQueryArguments -> (structure)
                            Inspect all query arguments.

                        UriPath -> (structure)
                            Inspect the request URI path. This is the part  of
                            a  web  request  that  identifies  a resource, for
                            example, /images/daily-ad.jpg .

                        QueryString -> (structure)
                            Inspect the query string. This is the  part  of  a
                            URL that appears after a ? character, if any.

                        Body -> (structure)
                            Inspect  the  request  body  as  plain  text.  The
                            request body immediately follows the request head-
                            ers.  This  is the part of a request that contains
                            any additional data that you want to send to  your
                            web  server as the HTTP request body, such as data
                            from a form.

                            Note that only the first 8 KB (8192 bytes) of  the
                            request  body  are forwarded to WAF for inspection
                            by the underlying host service. If you don't  need
                            to  inspect more than 8 KB, you can guarantee that
                            you don't allow additional bytes in by combining a
                            statement  that  inspects  the  body  of  the  web
                            request, such as  ByteMatchStatement or  RegexPat-
                            ternSetReferenceStatement   ,   with  a   SizeCon-
                            straintStatement that enforces an 8 KB size  limit
                            on  the  body  of the request. WAF doesn't support
                            inspecting the entire  contents  of  web  requests
                            whose bodies exceed the 8 KB limit.

                        Method -> (structure)
                            Inspect  the HTTP method. The method indicates the
                            type of operation that the request is  asking  the
                            origin to perform.

                        JsonBody -> (structure)
                            Inspect the request body as JSON. The request body
                            immediately follows the request headers.  This  is
                            the part of a request that contains any additional
                            data that you want to send to your web  server  as
                            the HTTP request body, such as data from a form.

                            Note  that only the first 8 KB (8192 bytes) of the
                            request body are forwarded to WAF  for  inspection
                            by  the underlying host service. If you don't need
                            to inspect more than 8 KB, you can guarantee  that
                            you don't allow additional bytes in by combining a
                            statement  that  inspects  the  body  of  the  web
                            request, such as  ByteMatchStatement or  RegexPat-
                            ternSetReferenceStatement  ,  with   a    SizeCon-
                            straintStatement  that enforces an 8 KB size limit
                            on the body of the request.  WAF  doesn't  support
                            inspecting  the  entire  contents  of web requests
                            whose bodies exceed the 8 KB limit.

                            MatchPattern -> (structure)
                               The patterns to look for in the JSON body.  WAF
                               inspects  the  results of these pattern matches
                               against the rule inspection criteria.

                               All -> (structure)
                                   Match all of the elements. See also  Match-
                                   Scope in  JsonBody .

                                   You must specify either this setting or the
                                   IncludedPaths setting, but not both.

                               IncludedPaths -> (list)
                                   Match only the specified include paths. See
                                   also MatchScope in  JsonBody .

                                   Provide   the   include  paths  using  JSON
                                   Pointer  syntax.  For  example,  "Included-
                                   Paths":  ["/dogs/0/name", "/dogs/1/name"] .
                                   For information about this syntax, see  the
                                   Internet Engineering Task Force (IETF) doc-
                                   umentation   JavaScript   Object   Notation
                                   (JSON) Pointer .

                                   You must specify either this setting or the
                                   All setting, but not both.

                                   NOTE:
                                      Don't use this  option  to  include  all
                                      paths. Instead, use the All setting.

                                   (string)

                            MatchScope -> (string)
                               The  parts  of  the JSON to match against using
                               the MatchPattern . If you  specify  All  ,  WAF
                               matches against keys and values.

                            InvalidFallbackBehavior -> (string)
                               What  WAF  should  do if it fails to completely
                               parse the JSON body. The options are  the  fol-
                               lowing:

                               o EVALUATE_AS_STRING  -  Inspect  the  body  as
                                 plain text. WAF applies the text  transforma-
                                 tions   and   inspection  criteria  that  you
                                 defined for the JSON inspection to  the  body
                                 text string.

                               o MATCH - Treat the web request as matching the
                                 rule statement. WAF applies the  rule  action
                                 to the request.

                               o NO_MATCH  -  Treat  the  web  request  as not
                                 matching the rule statement.

                               If you don't provide this setting,  WAF  parses
                               and  evaluates the content only up to the first
                               parsing failure that it encounters.

                               WAF does its best  to  parse  the  entire  JSON
                               body,  but  might be forced to stop for reasons
                               such as  invalid  characters,  duplicate  keys,
                               truncation,  and  any  content  whose root node
                               isn't an object or an array.

                               WAF parses the JSON in the  following  examples
                               as two valid key, value pairs:

                               o Missing                                comma:
                                 {"key1":"value1""key2":"value2"}

                               o Missing                                colon:
                                 {"key1":"value1","key2""value2"}

                               o Extra                                 colons:
                                 {"key1"::"value1","key2""value2"}

                     ComparisonOperator -> (string)
                        The operator to use to compare the request part to the
                        size setting.

                     Size -> (long)
                        The  size,  in  byte,  to compare to the request part,
                        after any transformations.

                     TextTransformations -> (list)
                        Text transformations eliminate  some  of  the  unusual
                        formatting  that  attackers  use in web requests in an
                        effort to bypass detection. If you specify one or more
                        transformations  in a rule statement, WAF performs all
                        transformations on the content of the  request  compo-
                        nent  identified  by  FieldToMatch , starting from the
                        lowest priority setting, before inspecting the content
                        for a match.

                        (structure)
                            Text transformations eliminate some of the unusual
                            formatting that attackers use in web  requests  in
                            an effort to bypass detection.

                            Priority -> (integer)
                               Sets the relative processing order for multiple
                               transformations that are  defined  for  a  rule
                               statement.  WAF  processes all transformations,
                               from  lowest  priority   to   highest,   before
                               inspecting the transformed content. The priori-
                               ties don't need to  be  consecutive,  but  they
                               must all be different.

                            Type -> (string)
                               You  can  specify  the following transformation
                               types:
                                   BASE64_DECODE - Decode  a  Base64  -encoded
                                   string.

                                   BASE64_DECODE_EXT   -   Decode   a   Base64
                                   -encoded string, but use a forgiving imple-
                                   mentation   that  ignores  characters  that
                                   aren't valid.

                                   CMD_LINE  -  Command-line  transformations.
                                   These are helpful in reducing effectiveness
                                   of attackers who inject an operating system
                                   command-line  command  and use unusual for-
                                   matting to disguise some or all of the com-
                                   mand.

                               o Delete the following characters: \ " ' ^

                               o Delete  spaces  before  the following charac-
                                 ters: / (

                               o Replace  the  following  characters  with   a
                                 space: , ;

                               o Replace multiple spaces with one space

                               o Convert  uppercase letters (A-Z) to lowercase
                                 (a-z)
                                   COMPRESS_WHITE_SPACE - Replace these  char-
                                   acters with a space character (decimal 32):

                               o \f , formfeed, decimal 12

                               o \t , tab, decimal 9

                               o \n , newline, decimal 10

                               o \r , carriage return, decimal 13

                               o \v , vertical tab, decimal 11

                               o Non-breaking space, decimal 160
                                   COMPRESS_WHITE_SPACE also replaces multiple
                                   spaces with one space.

                                   CSS_DECODE  -  Decode  characters that were
                                   encoded using CSS  2.x  escape  rules  syn-
                                   data.html#characters  .  This function uses
                                   up to two bytes in the decoding process, so
                                   it  can  help  to  uncover ASCII characters
                                   that were encoded using CSS  encoding  that
                                   wouldnt  typically  be  encoded.  It's also
                                   useful in countering evasion,  which  is  a
                                   combination of a backslash and non-hexadec-
                                   imal characters. For  example,  ja\vascript
                                   for javascript.

                                   ESCAPE_SEQ_DECODE  -  Decode  the following
                                   ANSI C escape sequences: \a , \b , \f ,  \n
                                   ,  \r  , \t , \v , \\ , \? , \' , \" , \xHH
                                   (hexadecimal),  \0OOO  (octal).   Encodings
                                   that aren't valid remain in the output.

                                   HEX_DECODE - Decode a string of hexadecimal
                                   characters into a binary.

                                   HTML_ENTITY_DECODE -  Replace  HTML-encoded
                                   characters   with   unencoded   characters.
                                   HTML_ENTITY_DECODE  performs  these  opera-
                                   tions:

                               o Replaces (ampersand)quot; with "

                               o Replaces (ampersand)nbsp; with a non-breaking
                                 space, decimal 160

                               o Replaces (ampersand)lt; with  a  "less  than"
                                 symbol

                               o Replaces (ampersand)gt; with >

                               o Replaces  characters  that are represented in
                                 hexadecimal format, (ampersand)#xhhhh; , with
                                 the corresponding characters

                               o Replaces  characters  that are represented in
                                 decimal format, (ampersand)#nnnn; , with  the
                                 corresponding characters
                                   JS_DECODE   -   Decode   JavaScript  escape
                                   sequences. If a \  u  HHHH code is  in  the
                                   full-width  ASCII code range of FF01-FF5E ,
                                   then the higher byte is used to detect  and
                                   adjust  the  lower  byte.  If not, only the
                                   lower byte is used and the higher  byte  is
                                   zeroed, causing a possible loss of informa-
                                   tion.

                                   LOWERCASE - Convert uppercase letters (A-Z)
                                   to lowercase (a-z).

                                   MD5  -  Calculate an MD5 hash from the data
                                   in the input. The computed hash is in a raw
                                   binary form.

                                   NONE  -  Specify NONE if you don't want any
                                   text transformations.

                                   NORMALIZE_PATH - Remove  multiple  slashes,
                                   directory  self-references,  and  directory
                                   back-references that are not at the  begin-
                                   ning of the input from an input string.

                                   NORMALIZE_PATH_WIN  -  This  is the same as
                                   NORMALIZE_PATH , but first  converts  back-
                                   slash characters to forward slashes.

                                   REMOVE_NULLS  -  Remove all NULL bytes from
                                   the input.

                                   REPLACE_COMMENTS - Replace each  occurrence
                                   of  a  C-style  comment (/* ... */ ) with a
                                   single space. Multiple  consecutive  occur-
                                   rences  are  not  compressed.  Unterminated
                                   comments are also  replaced  with  a  space
                                   (ASCII  0x20). However, a standalone termi-
                                   nation of a comment  (*/  )  is  not  acted
                                   upon.

                                   REPLACE_NULLS  -  Replace NULL bytes in the
                                   input with space characters (ASCII 0x20  ).

                                   SQL_HEX_DECODE - Decode SQL hex data. Exam-
                                   ple (0x414243 ) will be decoded to (ABC  ).

                                   URL_DECODE - Decode a URL-encoded value.

                                   URL_DECODE_UNI - Like URL_DECODE , but with
                                   support for Microsoft-specific %u encoding.
                                   If the code is in the full-width ASCII code
                                   range of FF01-FF5E ,  the  higher  byte  is
                                   used  to  detect and adjust the lower byte.
                                   Otherwise, only the lower byte is used  and
                                   the higher byte is zeroed.

                                   UTF8_TO_UNICODE - Convert all UTF-8 charac-
                                   ter sequences to Unicode. This helps  input
                                   normalization,  and  minimizing false-posi-
                                   tives and false-negatives  for  non-English
                                   languages.

                 GeoMatchStatement -> (structure)
                     A  rule  statement used to identify web requests based on
                     country of origin.

                     CountryCodes -> (list)
                        An array of two-character country codes, for  example,
                        [ "US", "CN" ] , from the alpha-2 country ISO codes of
                        the ISO 3166 international standard.

                        (string)

                     ForwardedIPConfig -> (structure)
                        The configuration for inspecting IP  addresses  in  an
                        HTTP  header that you specify, instead of using the IP
                        address that's reported by  the  web  request  origin.
                        Commonly,  this  is  the X-Forwarded-For (XFF) header,
                        but you can specify any header name.

                        NOTE:
                            If the  specified  header  isn't  present  in  the
                            request,  WAF  doesn't  apply  the rule to the web
                            request at all.

                        HeaderName -> (string)
                            The name of the HTTP header  to  use  for  the  IP
                            address.  For  example, to use the X-Forwarded-For
                            (XFF) header, set this to X-Forwarded-For .

                            NOTE:
                               If the specified header isn't  present  in  the
                               request,  WAF doesn't apply the rule to the web
                               request at all.

                        FallbackBehavior -> (string)
                            The match status to assign to the web  request  if
                            the request doesn't have a valid IP address in the
                            specified position.

                            NOTE:
                               If the specified header isn't  present  in  the
                               request,  WAF doesn't apply the rule to the web
                               request at all.

                            You can specify the following fallback behaviors:

                            o MATCH - Treat the web request  as  matching  the
                              rule  statement.  WAF applies the rule action to
                              the request.

                            o NO_MATCH - Treat the web request as not matching
                              the rule statement.

                 RuleGroupReferenceStatement -> (structure)
                     A  rule  statement used to run the rules that are defined
                     in a  RuleGroup . To use this, create a rule  group  with
                     your  rules,  then  provide  the ARN of the rule group in
                     this statement.

                     You cannot nest a RuleGroupReferenceStatement , for exam-
                     ple  for  use  inside a NotStatement or OrStatement . You
                     can only use a rule group reference statement at the  top
                     level inside a web ACL.

                     ARN -> (string)
                        The Amazon Resource Name (ARN) of the entity.

                     ExcludedRules -> (list)
                        The  rules  in the referenced rule group whose actions
                        are set to Count . When you exclude a rule, WAF evalu-
                        ates it exactly as it would if the rule action setting
                        were Count . This is a useful option for  testing  the
                        rules  in a rule group without modifying how they han-
                        dle your web traffic.

                        (structure)
                            Specifies a single rule  in  a  rule  group  whose
                            action  you  want  to override to Count . When you
                            exclude a rule, WAF evaluates  it  exactly  as  it
                            would if the rule action setting were Count . This
                            is a useful option for testing the rules in a rule
                            group  without  modifying how they handle your web
                            traffic.

                            Name -> (string)
                               The name of the rule whose action you  want  to
                               override to Count .

                 IPSetReferenceStatement -> (structure)
                     A  rule statement used to detect web requests coming from
                     particular IP addresses or address ranges. To  use  this,
                     create an  IPSet that specifies the addresses you want to
                     detect, then use the ARN of that set in  this  statement.
                     To create an IP set, see  CreateIPSet .

                     Each IP set rule statement references an IP set. You cre-
                     ate and maintain the set independent of your rules.  This
                     allows  you to use the single set in multiple rules. When
                     you update the referenced set, WAF automatically  updates
                     all rules that reference it.

                     ARN -> (string)
                        The Amazon Resource Name (ARN) of the  IPSet that this
                        statement references.

                     IPSetForwardedIPConfig -> (structure)
                        The configuration for inspecting IP  addresses  in  an
                        HTTP  header that you specify, instead of using the IP
                        address that's reported by  the  web  request  origin.
                        Commonly,  this  is  the X-Forwarded-For (XFF) header,
                        but you can specify any header name.

                        NOTE:
                            If the  specified  header  isn't  present  in  the
                            request,  WAF  doesn't  apply  the rule to the web
                            request at all.

                        HeaderName -> (string)
                            The name of the HTTP header  to  use  for  the  IP
                            address.  For  example, to use the X-Forwarded-For
                            (XFF) header, set this to X-Forwarded-For .

                            NOTE:
                               If the specified header isn't  present  in  the
                               request,  WAF doesn't apply the rule to the web
                               request at all.

                        FallbackBehavior -> (string)
                            The match status to assign to the web  request  if
                            the request doesn't have a valid IP address in the
                            specified position.

                            NOTE:
                               If the specified header isn't  present  in  the
                               request,  WAF doesn't apply the rule to the web
                               request at all.

                            You can specify the following fallback behaviors:

                            o MATCH - Treat the web request  as  matching  the
                              rule  statement.  WAF applies the rule action to
                              the request.

                            o NO_MATCH - Treat the web request as not matching
                              the rule statement.

                        Position -> (string)
                            The  position  in  the header to search for the IP
                            address. The header can contain  IP  addresses  of
                            the original client and also of proxies. For exam-
                            ple,  the  header   value   could   be   10.1.1.1,
                            127.0.0.0,  10.10.10.10 where the first IP address
                            identifies the original client and the rest  iden-
                            tify proxies that the request went through.

                            The options for this setting are the following:

                            o FIRST - Inspect the first IP address in the list
                              of IP addresses in the header. This  is  usually
                              the client's original IP.

                            o LAST  -  Inspect the last IP address in the list
                              of IP addresses in the header.

                            o ANY - Inspect all IP addresses in the header for
                              a  match. If the header contains more than 10 IP
                              addresses, WAF inspects the last 10.

                 RegexPatternSetReferenceStatement -> (structure)
                     A rule statement used to search  web  request  components
                     for matches with regular expressions. To use this, create
                     a  RegexPatternSet that specifies  the  expressions  that
                     you  want to detect, then use the ARN of that set in this
                     statement. A web request matches  the  pattern  set  rule
                     statement  if  the  request  component matches any of the
                     patterns in the set. To create a regex pattern  set,  see
                     CreateRegexPatternSet .

                     Each  regex pattern set rule statement references a regex
                     pattern set. You create and maintain the set  independent
                     of  your  rules. This allows you to use the single set in
                     multiple rules. When you update the referenced  set,  WAF
                     automatically updates all rules that reference it.

                     ARN -> (string)
                        The Amazon Resource Name (ARN) of the  RegexPatternSet
                        that this statement references.

                     FieldToMatch -> (structure)
                        The part of  a  web  request  that  you  want  WAF  to
                        inspect. For more information, see  FieldToMatch .

                        SingleHeader -> (structure)
                            Inspect  a  single header. Provide the name of the
                            header to inspect, for example, User-Agent or Ref-
                            erer . This setting isn't case sensitive.

                            Example JSON: "SingleHeader": { "Name": "haystack"
                            }

                            Name -> (string)
                               The name of the query header to inspect.

                        SingleQueryArgument -> (structure)
                            Inspect a single query argument. Provide the  name
                            of the query argument to inspect, such as UserName
                            or SalesRegion . The name can be up to 30  charac-
                            ters long and isn't case sensitive.

                            This is used only to indicate the web request com-
                            ponent for WAF to inspect,  in  the   FieldToMatch
                            specification.

                            Example  JSON:  "SingleQueryArgument":  {  "Name":
                            "myArgument" }

                            Name -> (string)
                               The name of the query argument to inspect.

                        AllQueryArguments -> (structure)
                            Inspect all query arguments.

                        UriPath -> (structure)
                            Inspect the request URI path. This is the part  of
                            a  web  request  that  identifies  a resource, for
                            example, /images/daily-ad.jpg .

                        QueryString -> (structure)
                            Inspect the query string. This is the  part  of  a
                            URL that appears after a ? character, if any.

                        Body -> (structure)
                            Inspect  the  request  body  as  plain  text.  The
                            request body immediately follows the request head-
                            ers.  This  is the part of a request that contains
                            any additional data that you want to send to  your
                            web  server as the HTTP request body, such as data
                            from a form.

                            Note that only the first 8 KB (8192 bytes) of  the
                            request  body  are forwarded to WAF for inspection
                            by the underlying host service. If you don't  need
                            to  inspect more than 8 KB, you can guarantee that
                            you don't allow additional bytes in by combining a
                            statement  that  inspects  the  body  of  the  web
                            request, such as  ByteMatchStatement or  RegexPat-
                            ternSetReferenceStatement   ,   with  a   SizeCon-
                            straintStatement that enforces an 8 KB size  limit
                            on  the  body  of the request. WAF doesn't support
                            inspecting the entire  contents  of  web  requests
                            whose bodies exceed the 8 KB limit.

                        Method -> (structure)
                            Inspect  the HTTP method. The method indicates the
                            type of operation that the request is  asking  the
                            origin to perform.

                        JsonBody -> (structure)
                            Inspect the request body as JSON. The request body
                            immediately follows the request headers.  This  is
                            the part of a request that contains any additional
                            data that you want to send to your web  server  as
                            the HTTP request body, such as data from a form.

                            Note  that only the first 8 KB (8192 bytes) of the
                            request body are forwarded to WAF  for  inspection
                            by  the underlying host service. If you don't need
                            to inspect more than 8 KB, you can guarantee  that
                            you don't allow additional bytes in by combining a
                            statement  that  inspects  the  body  of  the  web
                            request, such as  ByteMatchStatement or  RegexPat-
                            ternSetReferenceStatement  ,  with   a    SizeCon-
                            straintStatement  that enforces an 8 KB size limit
                            on the body of the request.  WAF  doesn't  support
                            inspecting  the  entire  contents  of web requests
                            whose bodies exceed the 8 KB limit.

                            MatchPattern -> (structure)
                               The patterns to look for in the JSON body.  WAF
                               inspects  the  results of these pattern matches
                               against the rule inspection criteria.

                               All -> (structure)
                                   Match all of the elements. See also  Match-
                                   Scope in  JsonBody .

                                   You must specify either this setting or the
                                   IncludedPaths setting, but not both.

                               IncludedPaths -> (list)
                                   Match only the specified include paths. See
                                   also MatchScope in  JsonBody .

                                   Provide   the   include  paths  using  JSON
                                   Pointer  syntax.  For  example,  "Included-
                                   Paths":  ["/dogs/0/name", "/dogs/1/name"] .
                                   For information about this syntax, see  the
                                   Internet Engineering Task Force (IETF) doc-
                                   umentation   JavaScript   Object   Notation
                                   (JSON) Pointer .

                                   You must specify either this setting or the
                                   All setting, but not both.

                                   NOTE:
                                      Don't use this  option  to  include  all
                                      paths. Instead, use the All setting.

                                   (string)

                            MatchScope -> (string)
                               The  parts  of  the JSON to match against using
                               the MatchPattern . If you  specify  All  ,  WAF
                               matches against keys and values.

                            InvalidFallbackBehavior -> (string)
                               What  WAF  should  do if it fails to completely
                               parse the JSON body. The options are  the  fol-
                               lowing:

                               o EVALUATE_AS_STRING  -  Inspect  the  body  as
                                 plain text. WAF applies the text  transforma-
                                 tions   and   inspection  criteria  that  you
                                 defined for the JSON inspection to  the  body
                                 text string.

                               o MATCH - Treat the web request as matching the
                                 rule statement. WAF applies the  rule  action
                                 to the request.

                               o NO_MATCH  -  Treat  the  web  request  as not
                                 matching the rule statement.

                               If you don't provide this setting,  WAF  parses
                               and  evaluates the content only up to the first
                               parsing failure that it encounters.

                               WAF does its best  to  parse  the  entire  JSON
                               body,  but  might be forced to stop for reasons
                               such as  invalid  characters,  duplicate  keys,
                               truncation,  and  any  content  whose root node
                               isn't an object or an array.

                               WAF parses the JSON in the  following  examples
                               as two valid key, value pairs:

                               o Missing                                comma:
                                 {"key1":"value1""key2":"value2"}

                               o Missing                                colon:
                                 {"key1":"value1","key2""value2"}

                               o Extra                                 colons:
                                 {"key1"::"value1","key2""value2"}

                     TextTransformations -> (list)
                        Text transformations eliminate  some  of  the  unusual
                        formatting  that  attackers  use in web requests in an
                        effort to bypass detection. If you specify one or more
                        transformations  in a rule statement, WAF performs all
                        transformations on the content of the  request  compo-
                        nent  identified  by  FieldToMatch , starting from the
                        lowest priority setting, before inspecting the content
                        for a match.

                        (structure)
                            Text transformations eliminate some of the unusual
                            formatting that attackers use in web  requests  in
                            an effort to bypass detection.

                            Priority -> (integer)
                               Sets the relative processing order for multiple
                               transformations that are  defined  for  a  rule
                               statement.  WAF  processes all transformations,
                               from  lowest  priority   to   highest,   before
                               inspecting the transformed content. The priori-
                               ties don't need to  be  consecutive,  but  they
                               must all be different.

                            Type -> (string)
                               You  can  specify  the following transformation
                               types:
                                   BASE64_DECODE - Decode  a  Base64  -encoded
                                   string.

                                   BASE64_DECODE_EXT   -   Decode   a   Base64
                                   -encoded string, but use a forgiving imple-
                                   mentation   that  ignores  characters  that
                                   aren't valid.

                                   CMD_LINE  -  Command-line  transformations.
                                   These are helpful in reducing effectiveness
                                   of attackers who inject an operating system
                                   command-line  command  and use unusual for-
                                   matting to disguise some or all of the com-
                                   mand.

                               o Delete the following characters: \ " ' ^

                               o Delete  spaces  before  the following charac-
                                 ters: / (

                               o Replace  the  following  characters  with   a
                                 space: , ;

                               o Replace multiple spaces with one space

                               o Convert  uppercase letters (A-Z) to lowercase
                                 (a-z)
                                   COMPRESS_WHITE_SPACE - Replace these  char-
                                   acters with a space character (decimal 32):

                               o \f , formfeed, decimal 12

                               o \t , tab, decimal 9

                               o \n , newline, decimal 10

                               o \r , carriage return, decimal 13

                               o \v , vertical tab, decimal 11

                               o Non-breaking space, decimal 160
                                   COMPRESS_WHITE_SPACE also replaces multiple
                                   spaces with one space.

                                   CSS_DECODE  -  Decode  characters that were
                                   encoded using CSS  2.x  escape  rules  syn-
                                   data.html#characters  .  This function uses
                                   up to two bytes in the decoding process, so
                                   it  can  help  to  uncover ASCII characters
                                   that were encoded using CSS  encoding  that
                                   wouldnt  typically  be  encoded.  It's also
                                   useful in countering evasion,  which  is  a
                                   combination of a backslash and non-hexadec-
                                   imal characters. For  example,  ja\vascript
                                   for javascript.

                                   ESCAPE_SEQ_DECODE  -  Decode  the following
                                   ANSI C escape sequences: \a , \b , \f ,  \n
                                   ,  \r  , \t , \v , \\ , \? , \' , \" , \xHH
                                   (hexadecimal),  \0OOO  (octal).   Encodings
                                   that aren't valid remain in the output.

                                   HEX_DECODE - Decode a string of hexadecimal
                                   characters into a binary.

                                   HTML_ENTITY_DECODE -  Replace  HTML-encoded
                                   characters   with   unencoded   characters.
                                   HTML_ENTITY_DECODE  performs  these  opera-
                                   tions:

                               o Replaces (ampersand)quot; with "

                               o Replaces (ampersand)nbsp; with a non-breaking
                                 space, decimal 160

                               o Replaces (ampersand)lt; with  a  "less  than"
                                 symbol

                               o Replaces (ampersand)gt; with >

                               o Replaces  characters  that are represented in
                                 hexadecimal format, (ampersand)#xhhhh; , with
                                 the corresponding characters

                               o Replaces  characters  that are represented in
                                 decimal format, (ampersand)#nnnn; , with  the
                                 corresponding characters
                                   JS_DECODE   -   Decode   JavaScript  escape
                                   sequences. If a \  u  HHHH code is  in  the
                                   full-width  ASCII code range of FF01-FF5E ,
                                   then the higher byte is used to detect  and
                                   adjust  the  lower  byte.  If not, only the
                                   lower byte is used and the higher  byte  is
                                   zeroed, causing a possible loss of informa-
                                   tion.

                                   LOWERCASE - Convert uppercase letters (A-Z)
                                   to lowercase (a-z).

                                   MD5  -  Calculate an MD5 hash from the data
                                   in the input. The computed hash is in a raw
                                   binary form.

                                   NONE  -  Specify NONE if you don't want any
                                   text transformations.

                                   NORMALIZE_PATH - Remove  multiple  slashes,
                                   directory  self-references,  and  directory
                                   back-references that are not at the  begin-
                                   ning of the input from an input string.

                                   NORMALIZE_PATH_WIN  -  This  is the same as
                                   NORMALIZE_PATH , but first  converts  back-
                                   slash characters to forward slashes.

                                   REMOVE_NULLS  -  Remove all NULL bytes from
                                   the input.

                                   REPLACE_COMMENTS - Replace each  occurrence
                                   of  a  C-style  comment (/* ... */ ) with a
                                   single space. Multiple  consecutive  occur-
                                   rences  are  not  compressed.  Unterminated
                                   comments are also  replaced  with  a  space
                                   (ASCII  0x20). However, a standalone termi-
                                   nation of a comment  (*/  )  is  not  acted
                                   upon.

                                   REPLACE_NULLS  -  Replace NULL bytes in the
                                   input with space characters (ASCII 0x20  ).

                                   SQL_HEX_DECODE - Decode SQL hex data. Exam-
                                   ple (0x414243 ) will be decoded to (ABC  ).

                                   URL_DECODE - Decode a URL-encoded value.

                                   URL_DECODE_UNI - Like URL_DECODE , but with
                                   support for Microsoft-specific %u encoding.
                                   If the code is in the full-width ASCII code
                                   range of FF01-FF5E ,  the  higher  byte  is
                                   used  to  detect and adjust the lower byte.
                                   Otherwise, only the lower byte is used  and
                                   the higher byte is zeroed.

                                   UTF8_TO_UNICODE - Convert all UTF-8 charac-
                                   ter sequences to Unicode. This helps  input
                                   normalization,  and  minimizing false-posi-
                                   tives and false-negatives  for  non-English
                                   languages.

                 RateBasedStatement -> (structure)
                     A  rate-based  rule  tracks the rate of requests for each
                     originating IP address, and triggers the rule action when
                     the  rate  exceeds a limit that you specify on the number
                     of requests in any 5-minute time span. You can  use  this
                     to  put  a temporary block on requests from an IP address
                     that is sending excessive requests.

                     WAF tracks and manages web requests separately  for  each
                     instance  of a rate-based rule that you use. For example,
                     if you provide the same rate-based rule settings  in  two
                     web  ACLs,  each  of the two rule statements represents a
                     separate instance of the rate-based rule and gets its own
                     tracking   and   management  by  WAF.  If  you  define  a
                     rate-based rule inside a rule group, and  then  use  that
                     rule  group  in multiple places, each use creates a sepa-
                     rate instance of the rate-based rule that  gets  its  own
                     tracking and management by WAF.

                     When  the  rule  action  triggers,  WAF blocks additional
                     requests from the IP address until the request rate falls
                     below the limit.

                     You  can  optionally  nest  another  statement inside the
                     rate-based statement, to narrow the scope of the rule  so
                     that it only counts requests that match the nested state-
                     ment. For example, based on recent requests that you have
                     seen from an attacker, you might create a rate-based rule
                     with a nested AND rule statement that contains  the  fol-
                     lowing nested statements:

                     o An IP match statement with an IP set that specified the
                       address 192.0.2.44.

                     o A  string  match  statement  that   searches   in   the
                       User-Agent header for the string BadBot.

                     In  this  rate-based  rule, you also define a rate limit.
                     For this example, the rate limit is 1,000. Requests  that
                     meet  both  of  the  conditions  in  the  statements  are
                     counted. If the count exceeds  1,000  requests  per  five
                     minutes,  the  rule action triggers. Requests that do not
                     meet both conditions are not  counted  towards  the  rate
                     limit and are not affected by this rule.

                     You  cannot  nest  a  RateBasedStatement  inside  another
                     statement, for example inside a NotStatement or  OrState-
                     ment  .  You can define a RateBasedStatement inside a web
                     ACL and inside a rule group.

                     Limit -> (long)
                        The limit on requests per 5-minute period for a single
                        originating  IP  address.  If the statement includes a
                        ScopeDownStatement , this limit is applied only to the
                        requests that match the statement.

                     AggregateKeyType -> (string)
                        Setting  that  indicates  how to aggregate the request
                        counts. The options are the following:

                        o IP - Aggregate the request counts on the IP  address
                          from the web request origin.

                        o FORWARDED_IP  -  Aggregate the request counts on the
                          first IP address in an HTTP header. If you use this,
                          configure  the  ForwardedIPConfig  ,  to specify the
                          header to use.

                     ScopeDownStatement -> (structure)
                        An optional nested statement that narrows the scope of
                        the  web requests that are evaluated by the rate-based
                        statement. Requests are only tracked by the rate-based
                        statement  if they match the scope-down statement. You
                        can use any  nestable   Statement  in  the  scope-down
                        statement,  and  you can nest statements at any level,
                        the same as you can for a rule statement.

                        ByteMatchStatement -> (structure)
                            A rule  statement  that  defines  a  string  match
                            search  for WAF to apply to web requests. The byte
                            match statement provides the bytes to search  for,
                            the  location  in  requests  that  you want WAF to
                            search, and other settings. The  bytes  to  search
                            for  are  typically a string that corresponds with
                            ASCII characters.  In  the  WAF  console  and  the
                            developer  guide,  this  is refered to as a string
                            match statement.

                            SearchString -> (blob)
                               A string value that you want WAF to search for.
                               WAF  searches  only in the part of web requests
                               that you designate for  inspection  in   Field-
                               ToMatch . The maximum length of the value is 50
                               bytes.

                               Valid values depend on the component  that  you
                               specify for inspection in FieldToMatch :

                               o Method : The HTTP method that you want WAF to
                                 search for. This indicates the type of opera-
                                 tion specified in the request.

                               o UriPath  :  The  value  that  you want WAF to
                                 search for in  the  URI  path,  for  example,
                                 /images/daily-ad.jpg .

                               If  SearchString includes alphabetic characters
                               A-Z and a-z, note that the value is case sensi-
                               tive.
                                   If you're using the WAF API

                               Specify  a base64-encoded version of the value.
                               The maximum length  of  the  value  before  you
                               base64-encode it is 50 bytes.

                               For  example,  suppose  the  value  of  Type is
                               HEADER and the value of Data is User-Agent . If
                               you  want  to  search the User-Agent header for
                               the value BadBot  ,  you  base64-encode  BadBot
                               using  MIME  base64-encoding  and  include  the
                               resulting value, QmFkQm90 ,  in  the  value  of
                               SearchString .
                                   If  you're using the CLI or one of the Ama-
                                   zon Web Services SDKs

                               The value that you want WAF to search for.  The
                               SDK automatically base64 encodes the value.

                            FieldToMatch -> (structure)
                               The  part of a web request that you want WAF to
                               inspect.  For  more  information,  see   Field-
                               ToMatch .

                               SingleHeader -> (structure)
                                   Inspect  a  single header. Provide the name
                                   of the  header  to  inspect,  for  example,
                                   User-Agent  or Referer . This setting isn't
                                   case sensitive.

                                   Example  JSON:  "SingleHeader":  {  "Name":
                                   "haystack" }

                                   Name -> (string)
                                      The name of the query header to inspect.

                               SingleQueryArgument -> (structure)
                                   Inspect a single  query  argument.  Provide
                                   the  name of the query argument to inspect,
                                   such as UserName or SalesRegion . The  name
                                   can  be  up to 30 characters long and isn't
                                   case sensitive.

                                   This is  used  only  to  indicate  the  web
                                   request  component  for  WAF to inspect, in
                                   the  FieldToMatch specification.

                                   Example  JSON:   "SingleQueryArgument":   {
                                   "Name": "myArgument" }

                                   Name -> (string)
                                      The   name  of  the  query  argument  to
                                      inspect.

                               AllQueryArguments -> (structure)
                                   Inspect all query arguments.

                               UriPath -> (structure)
                                   Inspect the request URI path. This  is  the
                                   part  of  a  web  request that identifies a
                                   resource, for example, /images/daily-ad.jpg
                                   .

                               QueryString -> (structure)
                                   Inspect  the query string. This is the part
                                   of a URL that appears after a ?  character,
                                   if any.

                               Body -> (structure)
                                   Inspect the request body as plain text. The
                                   request  body   immediately   follows   the
                                   request  headers.  This  is  the  part of a
                                   request that contains any  additional  data
                                   that you want to send to your web server as
                                   the HTTP request body, such as data from  a
                                   form.

                                   Note  that only the first 8 KB (8192 bytes)
                                   of the request body are  forwarded  to  WAF
                                   for  inspection by the underlying host ser-
                                   vice. If you don't  need  to  inspect  more
                                   than 8 KB, you can guarantee that you don't
                                   allow additional bytes in  by  combining  a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement  , with a
                                   SizeConstraintStatement that enforces an  8
                                   KB  size  limit on the body of the request.
                                   WAF doesn't support inspecting  the  entire
                                   contents   of  web  requests  whose  bodies
                                   exceed the 8 KB limit.

                               Method -> (structure)
                                   Inspect the HTTP method. The  method  indi-
                                   cates   the  type  of  operation  that  the
                                   request is asking the origin to perform.

                               JsonBody -> (structure)
                                   Inspect  the  request  body  as  JSON.  The
                                   request   body   immediately   follows  the
                                   request headers. This  is  the  part  of  a
                                   request  that  contains any additional data
                                   that you want to send to your web server as
                                   the  HTTP request body, such as data from a
                                   form.

                                   Note that only the first 8 KB (8192  bytes)
                                   of  the  request  body are forwarded to WAF
                                   for inspection by the underlying host  ser-
                                   vice.  If  you  don't  need to inspect more
                                   than 8 KB, you can guarantee that you don't
                                   allow  additional  bytes  in by combining a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement , with  a
                                   SizeConstraintStatement  that enforces an 8
                                   KB size limit on the body of  the  request.
                                   WAF  doesn't  support inspecting the entire
                                   contents  of  web  requests  whose   bodies
                                   exceed the 8 KB limit.

                                   MatchPattern -> (structure)
                                      The  patterns  to  look  for in the JSON
                                      body. WAF inspects the results of  these
                                      pattern matches against the rule inspec-
                                      tion criteria.

                                      All -> (structure)
                                          Match all of the elements. See  also
                                          MatchScope in  JsonBody .

                                          You must specify either this setting
                                          or the  IncludedPaths  setting,  but
                                          not both.

                                      IncludedPaths -> (list)
                                          Match  only  the  specified  include
                                          paths. See also MatchScope in  Json-
                                          Body .

                                          Provide the include paths using JSON
                                          Pointer   syntax.    For    example,
                                          "IncludedPaths":    ["/dogs/0/name",
                                          "/dogs/1/name"]  .  For  information
                                          about  this syntax, see the Internet
                                          Engineering Task Force (IETF)  docu-
                                          mentation JavaScript Object Notation
                                          (JSON) Pointer .

                                          You must specify either this setting
                                          or the All setting, but not both.

                                          NOTE:
                                             Don't  use this option to include
                                             all paths. Instead, use  the  All
                                             setting.

                                          (string)

                                   MatchScope -> (string)
                                      The  parts  of the JSON to match against
                                      using the MatchPattern . If you  specify
                                      All  , WAF matches against keys and val-
                                      ues.

                                   InvalidFallbackBehavior -> (string)
                                      What WAF should do if it fails  to  com-
                                      pletely parse the JSON body. The options
                                      are the following:

                                      o EVALUATE_AS_STRING - Inspect the  body
                                        as  plain  text.  WAF applies the text
                                        transformations and inspection  crite-
                                        ria  that  you  defined  for  the JSON
                                        inspection to the body text string.

                                      o MATCH  -  Treat  the  web  request  as
                                        matching   the   rule  statement.  WAF
                                        applies  the  rule   action   to   the
                                        request.

                                      o NO_MATCH  -  Treat  the web request as
                                        not matching the rule statement.

                                      If you don't provide this  setting,  WAF
                                      parses and evaluates the content only up
                                      to the first  parsing  failure  that  it
                                      encounters.

                                      WAF  does  its  best to parse the entire
                                      JSON body, but might be forced  to  stop
                                      for  reasons such as invalid characters,
                                      duplicate keys, truncation, and any con-
                                      tent  whose root node isn't an object or
                                      an array.

                                      WAF parses the  JSON  in  the  following
                                      examples as two valid key, value pairs:

                                      o Missing                         comma:
                                        {"key1":"value1""key2":"value2"}

                                      o Missing                         colon:
                                        {"key1":"value1","key2""value2"}

                                      o Extra                          colons:
                                        {"key1"::"value1","key2""value2"}

                            TextTransformations -> (list)
                               Text  transformations  eliminate  some  of  the
                               unusual  formatting  that  attackers use in web
                               requests in an effort to bypass  detection.  If
                               you  specify  one  or more transformations in a
                               rule statement, WAF  performs  all  transforma-
                               tions  on  the content of the request component
                               identified by FieldToMatch , starting from  the
                               lowest  priority setting, before inspecting the
                               content for a match.

                               (structure)
                                   Text transformations eliminate some of  the
                                   unusual  formatting  that  attackers use in
                                   web requests in an effort to bypass  detec-
                                   tion.

                                   Priority -> (integer)
                                      Sets  the  relative processing order for
                                      multiple   transformations   that    are
                                      defined  for  a rule statement. WAF pro-
                                      cesses all transformations, from  lowest
                                      priority  to  highest, before inspecting
                                      the transformed content. The  priorities
                                      don't  need  to be consecutive, but they
                                      must all be different.

                                   Type -> (string)
                                      You can specify the following  transfor-
                                      mation types:
                                          BASE64_DECODE   -  Decode  a  Base64
                                          -encoded string.

                                          BASE64_DECODE_EXT - Decode a  Base64
                                          -encoded string, but use a forgiving
                                          implementation that ignores  charac-
                                          ters that aren't valid.

                                          CMD_LINE  - Command-line transforma-
                                          tions. These are helpful in reducing
                                          effectiveness   of   attackers   who
                                          inject  an  operating  system   com-
                                          mand-line  command  and  use unusual
                                          formatting to disguise some  or  all
                                          of the command.

                                      o Delete the following characters: \ " '
                                        ^

                                      o Delete  spaces  before  the  following
                                        characters: / (

                                      o Replace  the following characters with
                                        a space: , ;

                                      o Replace multiple spaces with one space

                                      o Convert  uppercase  letters  (A-Z)  to
                                        lowercase (a-z)
                                          COMPRESS_WHITE_SPACE - Replace these
                                          characters  with  a  space character
                                          (decimal 32):

                                      o \f , formfeed, decimal 12

                                      o \t , tab, decimal 9

                                      o \n , newline, decimal 10

                                      o \r , carriage return, decimal 13

                                      o \v , vertical tab, decimal 11

                                      o Non-breaking space, decimal 160
                                          COMPRESS_WHITE_SPACE  also  replaces
                                          multiple spaces with one space.

                                          CSS_DECODE  - Decode characters that
                                          were encoded using  CSS  2.x  escape
                                          rules syndata.html#characters . This
                                          function uses up to two bytes in the
                                          decoding  process, so it can help to
                                          uncover ASCII characters  that  were
                                          encoded   using  CSS  encoding  that
                                          wouldnt typically be  encoded.  It's
                                          also  useful  in countering evasion,
                                          which is a combination  of  a  back-
                                          slash  and  non-hexadecimal  charac-
                                          ters. For example,  ja\vascript  for
                                          javascript.

                                          ESCAPE_SEQ_DECODE  - Decode the fol-
                                          lowing ANSI C escape sequences: \a ,
                                          \b  ,  \f , \n , \r , \t , \v , \\ ,
                                          \? , \' , \" ,  \xHH  (hexadecimal),
                                          \0OOO (octal). Encodings that aren't
                                          valid remain in the output.

                                          HEX_DECODE  -  Decode  a  string  of
                                          hexadecimal    characters   into   a
                                          binary.

                                          HTML_ENTITY_DECODE     -     Replace
                                          HTML-encoded  characters  with unen-
                                          coded characters. HTML_ENTITY_DECODE
                                          performs these operations:

                                      o Replaces (ampersand)quot; with "

                                      o Replaces   (ampersand)nbsp;   with   a
                                        non-breaking space, decimal 160

                                      o Replaces (ampersand)lt; with  a  "less
                                        than" symbol

                                      o Replaces (ampersand)gt; with >

                                      o Replaces  characters  that  are repre-
                                        sented in hexadecimal format,  (amper-
                                        sand)#xhhhh;  , with the corresponding
                                        characters

                                      o Replaces characters  that  are  repre-
                                        sented   in  decimal  format,  (amper-
                                        sand)#nnnn; , with  the  corresponding
                                        characters
                                          JS_DECODE - Decode JavaScript escape
                                          sequences. If a \  u  HHHH  code  is
                                          in  the  full-width ASCII code range
                                          of FF01-FF5E , then the higher  byte
                                          is  used  to  detect  and adjust the
                                          lower byte. If not, only  the  lower
                                          byte  is used and the higher byte is
                                          zeroed, causing a possible  loss  of
                                          information.

                                          LOWERCASE  -  Convert uppercase let-
                                          ters (A-Z) to lowercase (a-z).

                                          MD5 - Calculate an MD5 hash from the
                                          data in the input. The computed hash
                                          is in a raw binary form.

                                          NONE - Specify  NONE  if  you  don't
                                          want any text transformations.

                                          NORMALIZE_PATH   -  Remove  multiple
                                          slashes, directory  self-references,
                                          and  directory  back-references that
                                          are not  at  the  beginning  of  the
                                          input from an input string.

                                          NORMALIZE_PATH_WIN  -  This  is  the
                                          same as NORMALIZE_PATH ,  but  first
                                          converts   backslash  characters  to
                                          forward slashes.

                                          REMOVE_NULLS - Remove all NULL bytes
                                          from the input.

                                          REPLACE_COMMENTS   -   Replace  each
                                          occurrence of a C-style comment  (/*
                                          ... */ ) with a single space. Multi-
                                          ple consecutive occurrences are  not
                                          compressed.   Unterminated  comments
                                          are  also  replaced  with  a   space
                                          (ASCII  0x20). However, a standalone
                                          termination of a comment  (*/  )  is
                                          not acted upon.

                                          REPLACE_NULLS  -  Replace NULL bytes
                                          in the input with  space  characters
                                          (ASCII 0x20 ).

                                          SQL_HEX_DECODE   -  Decode  SQL  hex
                                          data. Example (0x414243  )  will  be
                                          decoded to (ABC ).

                                          URL_DECODE  -  Decode  a URL-encoded
                                          value.

                                          URL_DECODE_UNI - Like  URL_DECODE  ,
                                          but  with support for Microsoft-spe-
                                          cific %u encoding. If the code is in
                                          the  full-width  ASCII code range of
                                          FF01-FF5E , the higher byte is  used
                                          to detect and adjust the lower byte.
                                          Otherwise, only the  lower  byte  is
                                          used  and the higher byte is zeroed.

                                          UTF8_TO_UNICODE - Convert all  UTF-8
                                          character sequences to Unicode. This
                                          helps input normalization, and mini-
                                          mizing      false-positives      and
                                          false-negatives for non-English lan-
                                          guages.

                            PositionalConstraint -> (string)
                               The  area  within  the portion of a web request
                               that you want WAF to search for SearchString  .
                               Valid values include the following:
                                   CONTAINS

                               The  specified  part  of  the  web request must
                               include the value of  SearchString  ,  but  the
                               location doesn't matter.
                                   CONTAINS_WORD

                               The  specified  part  of  the  web request must
                               include the value of SearchString , and Search-
                               String  must  contain only alphanumeric charac-
                               ters or underscore (A-Z, a-z, 0-9,  or  _).  In
                               addition,  SearchString  must  be a word, which
                               means that both of the following are true:

                               o SearchString is at the beginning of the spec-
                                 ified  part of the web request or is preceded
                                 by a character  other  than  an  alphanumeric
                                 character or underscore (_). Examples include
                                 the value of a header and ;BadBot .

                               o SearchString is at the end of  the  specified
                                 part  of  the web request or is followed by a
                                 character other than an alphanumeric  charac-
                                 ter  or  underscore (_), for example, BadBot;
                                 and -BadBot; .
                                   EXACTLY

                               The value of the  specified  part  of  the  web
                               request must exactly match the value of Search-
                               String .
                                   STARTS_WITH

                               The value of SearchString must  appear  at  the
                               beginning  of  the  specified  part  of the web
                               request.
                                   ENDS_WITH

                               The value of SearchString must  appear  at  the
                               end of the specified part of the web request.

                        SqliMatchStatement -> (structure)
                            Attackers sometimes insert malicious SQL code into
                            web requests in an effort  to  extract  data  from
                            your database. To allow or block web requests that
                            appear to contain malicious SQL code,  create  one
                            or  more  SQL  injection  match conditions. An SQL
                            injection match condition identifies the  part  of
                            web requests, such as the URI or the query string,
                            that  you  want  WAF  to  inspect.  Later  in  the
                            process,  when  you  create a web ACL, you specify
                            whether to allow or block requests that appear  to
                            contain malicious SQL code.

                            FieldToMatch -> (structure)
                               The  part of a web request that you want WAF to
                               inspect.  For  more  information,  see   Field-
                               ToMatch .

                               SingleHeader -> (structure)
                                   Inspect  a  single header. Provide the name
                                   of the  header  to  inspect,  for  example,
                                   User-Agent  or Referer . This setting isn't
                                   case sensitive.

                                   Example  JSON:  "SingleHeader":  {  "Name":
                                   "haystack" }

                                   Name -> (string)
                                      The name of the query header to inspect.

                               SingleQueryArgument -> (structure)
                                   Inspect a single  query  argument.  Provide
                                   the  name of the query argument to inspect,
                                   such as UserName or SalesRegion . The  name
                                   can  be  up to 30 characters long and isn't
                                   case sensitive.

                                   This is  used  only  to  indicate  the  web
                                   request  component  for  WAF to inspect, in
                                   the  FieldToMatch specification.

                                   Example  JSON:   "SingleQueryArgument":   {
                                   "Name": "myArgument" }

                                   Name -> (string)
                                      The   name  of  the  query  argument  to
                                      inspect.

                               AllQueryArguments -> (structure)
                                   Inspect all query arguments.

                               UriPath -> (structure)
                                   Inspect the request URI path. This  is  the
                                   part  of  a  web  request that identifies a
                                   resource, for example, /images/daily-ad.jpg
                                   .

                               QueryString -> (structure)
                                   Inspect  the query string. This is the part
                                   of a URL that appears after a ?  character,
                                   if any.

                               Body -> (structure)
                                   Inspect the request body as plain text. The
                                   request  body   immediately   follows   the
                                   request  headers.  This  is  the  part of a
                                   request that contains any  additional  data
                                   that you want to send to your web server as
                                   the HTTP request body, such as data from  a
                                   form.

                                   Note  that only the first 8 KB (8192 bytes)
                                   of the request body are  forwarded  to  WAF
                                   for  inspection by the underlying host ser-
                                   vice. If you don't  need  to  inspect  more
                                   than 8 KB, you can guarantee that you don't
                                   allow additional bytes in  by  combining  a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement  , with a
                                   SizeConstraintStatement that enforces an  8
                                   KB  size  limit on the body of the request.
                                   WAF doesn't support inspecting  the  entire
                                   contents   of  web  requests  whose  bodies
                                   exceed the 8 KB limit.

                               Method -> (structure)
                                   Inspect the HTTP method. The  method  indi-
                                   cates   the  type  of  operation  that  the
                                   request is asking the origin to perform.

                               JsonBody -> (structure)
                                   Inspect  the  request  body  as  JSON.  The
                                   request   body   immediately   follows  the
                                   request headers. This  is  the  part  of  a
                                   request  that  contains any additional data
                                   that you want to send to your web server as
                                   the  HTTP request body, such as data from a
                                   form.

                                   Note that only the first 8 KB (8192  bytes)
                                   of  the  request  body are forwarded to WAF
                                   for inspection by the underlying host  ser-
                                   vice.  If  you  don't  need to inspect more
                                   than 8 KB, you can guarantee that you don't
                                   allow  additional  bytes  in by combining a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement , with  a
                                   SizeConstraintStatement  that enforces an 8
                                   KB size limit on the body of  the  request.
                                   WAF  doesn't  support inspecting the entire
                                   contents  of  web  requests  whose   bodies
                                   exceed the 8 KB limit.

                                   MatchPattern -> (structure)
                                      The  patterns  to  look  for in the JSON
                                      body. WAF inspects the results of  these
                                      pattern matches against the rule inspec-
                                      tion criteria.

                                      All -> (structure)
                                          Match all of the elements. See  also
                                          MatchScope in  JsonBody .

                                          You must specify either this setting
                                          or the  IncludedPaths  setting,  but
                                          not both.

                                      IncludedPaths -> (list)
                                          Match  only  the  specified  include
                                          paths. See also MatchScope in  Json-
                                          Body .

                                          Provide the include paths using JSON
                                          Pointer   syntax.    For    example,
                                          "IncludedPaths":    ["/dogs/0/name",
                                          "/dogs/1/name"]  .  For  information
                                          about  this syntax, see the Internet
                                          Engineering Task Force (IETF)  docu-
                                          mentation JavaScript Object Notation
                                          (JSON) Pointer .

                                          You must specify either this setting
                                          or the All setting, but not both.

                                          NOTE:
                                             Don't  use this option to include
                                             all paths. Instead, use  the  All
                                             setting.

                                          (string)

                                   MatchScope -> (string)
                                      The  parts  of the JSON to match against
                                      using the MatchPattern . If you  specify
                                      All  , WAF matches against keys and val-
                                      ues.

                                   InvalidFallbackBehavior -> (string)
                                      What WAF should do if it fails  to  com-
                                      pletely parse the JSON body. The options
                                      are the following:

                                      o EVALUATE_AS_STRING - Inspect the  body
                                        as  plain  text.  WAF applies the text
                                        transformations and inspection  crite-
                                        ria  that  you  defined  for  the JSON
                                        inspection to the body text string.

                                      o MATCH  -  Treat  the  web  request  as
                                        matching   the   rule  statement.  WAF
                                        applies  the  rule   action   to   the
                                        request.

                                      o NO_MATCH  -  Treat  the web request as
                                        not matching the rule statement.

                                      If you don't provide this  setting,  WAF
                                      parses and evaluates the content only up
                                      to the first  parsing  failure  that  it
                                      encounters.

                                      WAF  does  its  best to parse the entire
                                      JSON body, but might be forced  to  stop
                                      for  reasons such as invalid characters,
                                      duplicate keys, truncation, and any con-
                                      tent  whose root node isn't an object or
                                      an array.

                                      WAF parses the  JSON  in  the  following
                                      examples as two valid key, value pairs:

                                      o Missing                         comma:
                                        {"key1":"value1""key2":"value2"}

                                      o Missing                         colon:
                                        {"key1":"value1","key2""value2"}

                                      o Extra                          colons:
                                        {"key1"::"value1","key2""value2"}

                            TextTransformations -> (list)
                               Text  transformations  eliminate  some  of  the
                               unusual  formatting  that  attackers use in web
                               requests in an effort to bypass  detection.  If
                               you  specify  one  or more transformations in a
                               rule statement, WAF  performs  all  transforma-
                               tions  on  the content of the request component
                               identified by FieldToMatch , starting from  the
                               lowest  priority setting, before inspecting the
                               content for a match.

                               (structure)
                                   Text transformations eliminate some of  the
                                   unusual  formatting  that  attackers use in
                                   web requests in an effort to bypass  detec-
                                   tion.

                                   Priority -> (integer)
                                      Sets  the  relative processing order for
                                      multiple   transformations   that    are
                                      defined  for  a rule statement. WAF pro-
                                      cesses all transformations, from  lowest
                                      priority  to  highest, before inspecting
                                      the transformed content. The  priorities
                                      don't  need  to be consecutive, but they
                                      must all be different.

                                   Type -> (string)
                                      You can specify the following  transfor-
                                      mation types:
                                          BASE64_DECODE   -  Decode  a  Base64
                                          -encoded string.

                                          BASE64_DECODE_EXT - Decode a  Base64
                                          -encoded string, but use a forgiving
                                          implementation that ignores  charac-
                                          ters that aren't valid.

                                          CMD_LINE  - Command-line transforma-
                                          tions. These are helpful in reducing
                                          effectiveness   of   attackers   who
                                          inject  an  operating  system   com-
                                          mand-line  command  and  use unusual
                                          formatting to disguise some  or  all
                                          of the command.

                                      o Delete the following characters: \ " '
                                        ^

                                      o Delete  spaces  before  the  following
                                        characters: / (

                                      o Replace  the following characters with
                                        a space: , ;

                                      o Replace multiple spaces with one space

                                      o Convert  uppercase  letters  (A-Z)  to
                                        lowercase (a-z)
                                          COMPRESS_WHITE_SPACE - Replace these
                                          characters  with  a  space character
                                          (decimal 32):

                                      o \f , formfeed, decimal 12

                                      o \t , tab, decimal 9

                                      o \n , newline, decimal 10

                                      o \r , carriage return, decimal 13

                                      o \v , vertical tab, decimal 11

                                      o Non-breaking space, decimal 160
                                          COMPRESS_WHITE_SPACE  also  replaces
                                          multiple spaces with one space.

                                          CSS_DECODE  - Decode characters that
                                          were encoded using  CSS  2.x  escape
                                          rules syndata.html#characters . This
                                          function uses up to two bytes in the
                                          decoding  process, so it can help to
                                          uncover ASCII characters  that  were
                                          encoded   using  CSS  encoding  that
                                          wouldnt typically be  encoded.  It's
                                          also  useful  in countering evasion,
                                          which is a combination  of  a  back-
                                          slash  and  non-hexadecimal  charac-
                                          ters. For example,  ja\vascript  for
                                          javascript.

                                          ESCAPE_SEQ_DECODE  - Decode the fol-
                                          lowing ANSI C escape sequences: \a ,
                                          \b  ,  \f , \n , \r , \t , \v , \\ ,
                                          \? , \' , \" ,  \xHH  (hexadecimal),
                                          \0OOO (octal). Encodings that aren't
                                          valid remain in the output.

                                          HEX_DECODE  -  Decode  a  string  of
                                          hexadecimal    characters   into   a
                                          binary.

                                          HTML_ENTITY_DECODE     -     Replace
                                          HTML-encoded  characters  with unen-
                                          coded characters. HTML_ENTITY_DECODE
                                          performs these operations:

                                      o Replaces (ampersand)quot; with "

                                      o Replaces   (ampersand)nbsp;   with   a
                                        non-breaking space, decimal 160

                                      o Replaces (ampersand)lt; with  a  "less
                                        than" symbol

                                      o Replaces (ampersand)gt; with >

                                      o Replaces  characters  that  are repre-
                                        sented in hexadecimal format,  (amper-
                                        sand)#xhhhh;  , with the corresponding
                                        characters

                                      o Replaces characters  that  are  repre-
                                        sented   in  decimal  format,  (amper-
                                        sand)#nnnn; , with  the  corresponding
                                        characters
                                          JS_DECODE - Decode JavaScript escape
                                          sequences. If a \  u  HHHH  code  is
                                          in  the  full-width ASCII code range
                                          of FF01-FF5E , then the higher  byte
                                          is  used  to  detect  and adjust the
                                          lower byte. If not, only  the  lower
                                          byte  is used and the higher byte is
                                          zeroed, causing a possible  loss  of
                                          information.

                                          LOWERCASE  -  Convert uppercase let-
                                          ters (A-Z) to lowercase (a-z).

                                          MD5 - Calculate an MD5 hash from the
                                          data in the input. The computed hash
                                          is in a raw binary form.

                                          NONE - Specify  NONE  if  you  don't
                                          want any text transformations.

                                          NORMALIZE_PATH   -  Remove  multiple
                                          slashes, directory  self-references,
                                          and  directory  back-references that
                                          are not  at  the  beginning  of  the
                                          input from an input string.

                                          NORMALIZE_PATH_WIN  -  This  is  the
                                          same as NORMALIZE_PATH ,  but  first
                                          converts   backslash  characters  to
                                          forward slashes.

                                          REMOVE_NULLS - Remove all NULL bytes
                                          from the input.

                                          REPLACE_COMMENTS   -   Replace  each
                                          occurrence of a C-style comment  (/*
                                          ... */ ) with a single space. Multi-
                                          ple consecutive occurrences are  not
                                          compressed.   Unterminated  comments
                                          are  also  replaced  with  a   space
                                          (ASCII  0x20). However, a standalone
                                          termination of a comment  (*/  )  is
                                          not acted upon.

                                          REPLACE_NULLS  -  Replace NULL bytes
                                          in the input with  space  characters
                                          (ASCII 0x20 ).

                                          SQL_HEX_DECODE   -  Decode  SQL  hex
                                          data. Example (0x414243  )  will  be
                                          decoded to (ABC ).

                                          URL_DECODE  -  Decode  a URL-encoded
                                          value.

                                          URL_DECODE_UNI - Like  URL_DECODE  ,
                                          but  with support for Microsoft-spe-
                                          cific %u encoding. If the code is in
                                          the  full-width  ASCII code range of
                                          FF01-FF5E , the higher byte is  used
                                          to detect and adjust the lower byte.
                                          Otherwise, only the  lower  byte  is
                                          used  and the higher byte is zeroed.

                                          UTF8_TO_UNICODE - Convert all  UTF-8
                                          character sequences to Unicode. This
                                          helps input normalization, and mini-
                                          mizing      false-positives      and
                                          false-negatives for non-English lan-
                                          guages.

                        XssMatchStatement -> (structure)
                            A rule statement that defines a cross-site script-
                            ing (XSS) match search for WAF  to  apply  to  web
                            requests. XSS attacks are those where the attacker
                            uses vulnerabilities in  a  benign  website  as  a
                            vehicle  to  inject  malicious client-site scripts
                            into other legitimate web browsers. The XSS  match
                            statement  provides  the location in requests that
                            you want WAF to search and text transformations to
                            use  on  the  search  area before WAF searches for
                            character sequences that are likely  to  be  mali-
                            cious strings.

                            FieldToMatch -> (structure)
                               The  part of a web request that you want WAF to
                               inspect.  For  more  information,  see   Field-
                               ToMatch .

                               SingleHeader -> (structure)
                                   Inspect  a  single header. Provide the name
                                   of the  header  to  inspect,  for  example,
                                   User-Agent  or Referer . This setting isn't
                                   case sensitive.

                                   Example  JSON:  "SingleHeader":  {  "Name":
                                   "haystack" }

                                   Name -> (string)
                                      The name of the query header to inspect.

                               SingleQueryArgument -> (structure)
                                   Inspect a single  query  argument.  Provide
                                   the  name of the query argument to inspect,
                                   such as UserName or SalesRegion . The  name
                                   can  be  up to 30 characters long and isn't
                                   case sensitive.

                                   This is  used  only  to  indicate  the  web
                                   request  component  for  WAF to inspect, in
                                   the  FieldToMatch specification.

                                   Example  JSON:   "SingleQueryArgument":   {
                                   "Name": "myArgument" }

                                   Name -> (string)
                                      The   name  of  the  query  argument  to
                                      inspect.

                               AllQueryArguments -> (structure)
                                   Inspect all query arguments.

                               UriPath -> (structure)
                                   Inspect the request URI path. This  is  the
                                   part  of  a  web  request that identifies a
                                   resource, for example, /images/daily-ad.jpg
                                   .

                               QueryString -> (structure)
                                   Inspect  the query string. This is the part
                                   of a URL that appears after a ?  character,
                                   if any.

                               Body -> (structure)
                                   Inspect the request body as plain text. The
                                   request  body   immediately   follows   the
                                   request  headers.  This  is  the  part of a
                                   request that contains any  additional  data
                                   that you want to send to your web server as
                                   the HTTP request body, such as data from  a
                                   form.

                                   Note  that only the first 8 KB (8192 bytes)
                                   of the request body are  forwarded  to  WAF
                                   for  inspection by the underlying host ser-
                                   vice. If you don't  need  to  inspect  more
                                   than 8 KB, you can guarantee that you don't
                                   allow additional bytes in  by  combining  a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement  , with a
                                   SizeConstraintStatement that enforces an  8
                                   KB  size  limit on the body of the request.
                                   WAF doesn't support inspecting  the  entire
                                   contents   of  web  requests  whose  bodies
                                   exceed the 8 KB limit.

                               Method -> (structure)
                                   Inspect the HTTP method. The  method  indi-
                                   cates   the  type  of  operation  that  the
                                   request is asking the origin to perform.

                               JsonBody -> (structure)
                                   Inspect  the  request  body  as  JSON.  The
                                   request   body   immediately   follows  the
                                   request headers. This  is  the  part  of  a
                                   request  that  contains any additional data
                                   that you want to send to your web server as
                                   the  HTTP request body, such as data from a
                                   form.

                                   Note that only the first 8 KB (8192  bytes)
                                   of  the  request  body are forwarded to WAF
                                   for inspection by the underlying host  ser-
                                   vice.  If  you  don't  need to inspect more
                                   than 8 KB, you can guarantee that you don't
                                   allow  additional  bytes  in by combining a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement , with  a
                                   SizeConstraintStatement  that enforces an 8
                                   KB size limit on the body of  the  request.
                                   WAF  doesn't  support inspecting the entire
                                   contents  of  web  requests  whose   bodies
                                   exceed the 8 KB limit.

                                   MatchPattern -> (structure)
                                      The  patterns  to  look  for in the JSON
                                      body. WAF inspects the results of  these
                                      pattern matches against the rule inspec-
                                      tion criteria.

                                      All -> (structure)
                                          Match all of the elements. See  also
                                          MatchScope in  JsonBody .

                                          You must specify either this setting
                                          or the  IncludedPaths  setting,  but
                                          not both.

                                      IncludedPaths -> (list)
                                          Match  only  the  specified  include
                                          paths. See also MatchScope in  Json-
                                          Body .

                                          Provide the include paths using JSON
                                          Pointer   syntax.    For    example,
                                          "IncludedPaths":    ["/dogs/0/name",
                                          "/dogs/1/name"]  .  For  information
                                          about  this syntax, see the Internet
                                          Engineering Task Force (IETF)  docu-
                                          mentation JavaScript Object Notation
                                          (JSON) Pointer .

                                          You must specify either this setting
                                          or the All setting, but not both.

                                          NOTE:
                                             Don't  use this option to include
                                             all paths. Instead, use  the  All
                                             setting.

                                          (string)

                                   MatchScope -> (string)
                                      The  parts  of the JSON to match against
                                      using the MatchPattern . If you  specify
                                      All  , WAF matches against keys and val-
                                      ues.

                                   InvalidFallbackBehavior -> (string)
                                      What WAF should do if it fails  to  com-
                                      pletely parse the JSON body. The options
                                      are the following:

                                      o EVALUATE_AS_STRING - Inspect the  body
                                        as  plain  text.  WAF applies the text
                                        transformations and inspection  crite-
                                        ria  that  you  defined  for  the JSON
                                        inspection to the body text string.

                                      o MATCH  -  Treat  the  web  request  as
                                        matching   the   rule  statement.  WAF
                                        applies  the  rule   action   to   the
                                        request.

                                      o NO_MATCH  -  Treat  the web request as
                                        not matching the rule statement.

                                      If you don't provide this  setting,  WAF
                                      parses and evaluates the content only up
                                      to the first  parsing  failure  that  it
                                      encounters.

                                      WAF  does  its  best to parse the entire
                                      JSON body, but might be forced  to  stop
                                      for  reasons such as invalid characters,
                                      duplicate keys, truncation, and any con-
                                      tent  whose root node isn't an object or
                                      an array.

                                      WAF parses the  JSON  in  the  following
                                      examples as two valid key, value pairs:

                                      o Missing                         comma:
                                        {"key1":"value1""key2":"value2"}

                                      o Missing                         colon:
                                        {"key1":"value1","key2""value2"}

                                      o Extra                          colons:
                                        {"key1"::"value1","key2""value2"}

                            TextTransformations -> (list)
                               Text  transformations  eliminate  some  of  the
                               unusual  formatting  that  attackers use in web
                               requests in an effort to bypass  detection.  If
                               you  specify  one  or more transformations in a
                               rule statement, WAF  performs  all  transforma-
                               tions  on  the content of the request component
                               identified by FieldToMatch , starting from  the
                               lowest  priority setting, before inspecting the
                               content for a match.

                               (structure)
                                   Text transformations eliminate some of  the
                                   unusual  formatting  that  attackers use in
                                   web requests in an effort to bypass  detec-
                                   tion.

                                   Priority -> (integer)
                                      Sets  the  relative processing order for
                                      multiple   transformations   that    are
                                      defined  for  a rule statement. WAF pro-
                                      cesses all transformations, from  lowest
                                      priority  to  highest, before inspecting
                                      the transformed content. The  priorities
                                      don't  need  to be consecutive, but they
                                      must all be different.

                                   Type -> (string)
                                      You can specify the following  transfor-
                                      mation types:
                                          BASE64_DECODE   -  Decode  a  Base64
                                          -encoded string.

                                          BASE64_DECODE_EXT - Decode a  Base64
                                          -encoded string, but use a forgiving
                                          implementation that ignores  charac-
                                          ters that aren't valid.

                                          CMD_LINE  - Command-line transforma-
                                          tions. These are helpful in reducing
                                          effectiveness   of   attackers   who
                                          inject  an  operating  system   com-
                                          mand-line  command  and  use unusual
                                          formatting to disguise some  or  all
                                          of the command.

                                      o Delete the following characters: \ " '
                                        ^

                                      o Delete  spaces  before  the  following
                                        characters: / (

                                      o Replace  the following characters with
                                        a space: , ;

                                      o Replace multiple spaces with one space

                                      o Convert  uppercase  letters  (A-Z)  to
                                        lowercase (a-z)
                                          COMPRESS_WHITE_SPACE - Replace these
                                          characters  with  a  space character
                                          (decimal 32):

                                      o \f , formfeed, decimal 12

                                      o \t , tab, decimal 9

                                      o \n , newline, decimal 10

                                      o \r , carriage return, decimal 13

                                      o \v , vertical tab, decimal 11

                                      o Non-breaking space, decimal 160
                                          COMPRESS_WHITE_SPACE  also  replaces
                                          multiple spaces with one space.

                                          CSS_DECODE  - Decode characters that
                                          were encoded using  CSS  2.x  escape
                                          rules syndata.html#characters . This
                                          function uses up to two bytes in the
                                          decoding  process, so it can help to
                                          uncover ASCII characters  that  were
                                          encoded   using  CSS  encoding  that
                                          wouldnt typically be  encoded.  It's
                                          also  useful  in countering evasion,
                                          which is a combination  of  a  back-
                                          slash  and  non-hexadecimal  charac-
                                          ters. For example,  ja\vascript  for
                                          javascript.

                                          ESCAPE_SEQ_DECODE  - Decode the fol-
                                          lowing ANSI C escape sequences: \a ,
                                          \b  ,  \f , \n , \r , \t , \v , \\ ,
                                          \? , \' , \" ,  \xHH  (hexadecimal),
                                          \0OOO (octal). Encodings that aren't
                                          valid remain in the output.

                                          HEX_DECODE  -  Decode  a  string  of
                                          hexadecimal    characters   into   a
                                          binary.

                                          HTML_ENTITY_DECODE     -     Replace
                                          HTML-encoded  characters  with unen-
                                          coded characters. HTML_ENTITY_DECODE
                                          performs these operations:

                                      o Replaces (ampersand)quot; with "

                                      o Replaces   (ampersand)nbsp;   with   a
                                        non-breaking space, decimal 160

                                      o Replaces (ampersand)lt; with  a  "less
                                        than" symbol

                                      o Replaces (ampersand)gt; with >

                                      o Replaces  characters  that  are repre-
                                        sented in hexadecimal format,  (amper-
                                        sand)#xhhhh;  , with the corresponding
                                        characters

                                      o Replaces characters  that  are  repre-
                                        sented   in  decimal  format,  (amper-
                                        sand)#nnnn; , with  the  corresponding
                                        characters
                                          JS_DECODE - Decode JavaScript escape
                                          sequences. If a \  u  HHHH  code  is
                                          in  the  full-width ASCII code range
                                          of FF01-FF5E , then the higher  byte
                                          is  used  to  detect  and adjust the
                                          lower byte. If not, only  the  lower
                                          byte  is used and the higher byte is
                                          zeroed, causing a possible  loss  of
                                          information.

                                          LOWERCASE  -  Convert uppercase let-
                                          ters (A-Z) to lowercase (a-z).

                                          MD5 - Calculate an MD5 hash from the
                                          data in the input. The computed hash
                                          is in a raw binary form.

                                          NONE - Specify  NONE  if  you  don't
                                          want any text transformations.

                                          NORMALIZE_PATH   -  Remove  multiple
                                          slashes, directory  self-references,
                                          and  directory  back-references that
                                          are not  at  the  beginning  of  the
                                          input from an input string.

                                          NORMALIZE_PATH_WIN  -  This  is  the
                                          same as NORMALIZE_PATH ,  but  first
                                          converts   backslash  characters  to
                                          forward slashes.

                                          REMOVE_NULLS - Remove all NULL bytes
                                          from the input.

                                          REPLACE_COMMENTS   -   Replace  each
                                          occurrence of a C-style comment  (/*
                                          ... */ ) with a single space. Multi-
                                          ple consecutive occurrences are  not
                                          compressed.   Unterminated  comments
                                          are  also  replaced  with  a   space
                                          (ASCII  0x20). However, a standalone
                                          termination of a comment  (*/  )  is
                                          not acted upon.

                                          REPLACE_NULLS  -  Replace NULL bytes
                                          in the input with  space  characters
                                          (ASCII 0x20 ).

                                          SQL_HEX_DECODE   -  Decode  SQL  hex
                                          data. Example (0x414243  )  will  be
                                          decoded to (ABC ).

                                          URL_DECODE  -  Decode  a URL-encoded
                                          value.

                                          URL_DECODE_UNI - Like  URL_DECODE  ,
                                          but  with support for Microsoft-spe-
                                          cific %u encoding. If the code is in
                                          the  full-width  ASCII code range of
                                          FF01-FF5E , the higher byte is  used
                                          to detect and adjust the lower byte.
                                          Otherwise, only the  lower  byte  is
                                          used  and the higher byte is zeroed.

                                          UTF8_TO_UNICODE - Convert all  UTF-8
                                          character sequences to Unicode. This
                                          helps input normalization, and mini-
                                          mizing      false-positives      and
                                          false-negatives for non-English lan-
                                          guages.

                        SizeConstraintStatement -> (structure)
                            A  rule  statement that compares a number of bytes
                            against the size of a request component,  using  a
                            comparison  operator,  such as greater than (>) or
                            less than (<). For example, you  can  use  a  size
                            constraint  statement  to  look  for query strings
                            that are longer than 100 bytes.

                            If you configure WAF to inspect the request  body,
                            WAF  inspects only the first 8192 bytes (8 KB). If
                            the request  body  for  your  web  requests  never
                            exceeds  8192  bytes,  you  can create a size con-
                            straint condition and block requests that  have  a
                            request body greater than 8192 bytes.

                            If  you  choose  URI  for the value of Part of the
                            request to filter on, the slash  (/)  in  the  URI
                            counts  as  one  character.  For  example, the URI
                            /logo.jpg is nine characters long.

                            FieldToMatch -> (structure)
                               The part of a web request that you want WAF  to
                               inspect.  For  more  information,  see   Field-
                               ToMatch .

                               SingleHeader -> (structure)
                                   Inspect a single header. Provide  the  name
                                   of  the  header  to  inspect,  for example,
                                   User-Agent or Referer . This setting  isn't
                                   case sensitive.

                                   Example  JSON:  "SingleHeader":  {  "Name":
                                   "haystack" }

                                   Name -> (string)
                                      The name of the query header to inspect.

                               SingleQueryArgument -> (structure)
                                   Inspect  a  single  query argument. Provide
                                   the name of the query argument to  inspect,
                                   such  as UserName or SalesRegion . The name
                                   can be up to 30 characters long  and  isn't
                                   case sensitive.

                                   This  is  used  only  to  indicate  the web
                                   request component for WAF  to  inspect,  in
                                   the  FieldToMatch specification.

                                   Example   JSON:   "SingleQueryArgument":  {
                                   "Name": "myArgument" }

                                   Name -> (string)
                                      The  name  of  the  query  argument   to
                                      inspect.

                               AllQueryArguments -> (structure)
                                   Inspect all query arguments.

                               UriPath -> (structure)
                                   Inspect  the  request URI path. This is the
                                   part of a web  request  that  identifies  a
                                   resource, for example, /images/daily-ad.jpg
                                   .

                               QueryString -> (structure)
                                   Inspect the query string. This is the  part
                                   of  a URL that appears after a ? character,
                                   if any.

                               Body -> (structure)
                                   Inspect the request body as plain text. The
                                   request   body   immediately   follows  the
                                   request headers. This  is  the  part  of  a
                                   request  that  contains any additional data
                                   that you want to send to your web server as
                                   the  HTTP request body, such as data from a
                                   form.

                                   Note that only the first 8 KB (8192  bytes)
                                   of  the  request  body are forwarded to WAF
                                   for inspection by the underlying host  ser-
                                   vice.  If  you  don't  need to inspect more
                                   than 8 KB, you can guarantee that you don't
                                   allow  additional  bytes  in by combining a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement , with  a
                                   SizeConstraintStatement  that enforces an 8
                                   KB size limit on the body of  the  request.
                                   WAF  doesn't  support inspecting the entire
                                   contents  of  web  requests  whose   bodies
                                   exceed the 8 KB limit.

                               Method -> (structure)
                                   Inspect  the  HTTP method. The method indi-
                                   cates  the  type  of  operation  that   the
                                   request is asking the origin to perform.

                               JsonBody -> (structure)
                                   Inspect  the  request  body  as  JSON.  The
                                   request  body   immediately   follows   the
                                   request  headers.  This  is  the  part of a
                                   request that contains any  additional  data
                                   that you want to send to your web server as
                                   the HTTP request body, such as data from  a
                                   form.

                                   Note  that only the first 8 KB (8192 bytes)
                                   of the request body are  forwarded  to  WAF
                                   for  inspection by the underlying host ser-
                                   vice. If you don't  need  to  inspect  more
                                   than 8 KB, you can guarantee that you don't
                                   allow additional bytes in  by  combining  a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement  , with a
                                   SizeConstraintStatement that enforces an  8
                                   KB  size  limit on the body of the request.
                                   WAF doesn't support inspecting  the  entire
                                   contents   of  web  requests  whose  bodies
                                   exceed the 8 KB limit.

                                   MatchPattern -> (structure)
                                      The patterns to look  for  in  the  JSON
                                      body.  WAF inspects the results of these
                                      pattern matches against the rule inspec-
                                      tion criteria.

                                      All -> (structure)
                                          Match  all of the elements. See also
                                          MatchScope in  JsonBody .

                                          You must specify either this setting
                                          or  the  IncludedPaths  setting, but
                                          not both.

                                      IncludedPaths -> (list)
                                          Match  only  the  specified  include
                                          paths. See also MatchScope in  Json-
                                          Body .

                                          Provide the include paths using JSON
                                          Pointer    syntax.    For   example,
                                          "IncludedPaths":    ["/dogs/0/name",
                                          "/dogs/1/name"]  .  For  information
                                          about this syntax, see the  Internet
                                          Engineering  Task Force (IETF) docu-
                                          mentation JavaScript Object Notation
                                          (JSON) Pointer .

                                          You must specify either this setting
                                          or the All setting, but not both.

                                          NOTE:
                                             Don't use this option to  include
                                             all  paths.  Instead, use the All
                                             setting.

                                          (string)

                                   MatchScope -> (string)
                                      The parts of the JSON to  match  against
                                      using  the MatchPattern . If you specify
                                      All , WAF matches against keys and  val-
                                      ues.

                                   InvalidFallbackBehavior -> (string)
                                      What  WAF  should do if it fails to com-
                                      pletely parse the JSON body. The options
                                      are the following:

                                      o EVALUATE_AS_STRING  - Inspect the body
                                        as plain text. WAF  applies  the  text
                                        transformations  and inspection crite-
                                        ria that  you  defined  for  the  JSON
                                        inspection to the body text string.

                                      o MATCH  -  Treat  the  web  request  as
                                        matching  the  rule   statement.   WAF
                                        applies   the   rule   action  to  the
                                        request.

                                      o NO_MATCH - Treat the  web  request  as
                                        not matching the rule statement.

                                      If  you  don't provide this setting, WAF
                                      parses and evaluates the content only up
                                      to  the  first  parsing  failure that it
                                      encounters.

                                      WAF does its best to  parse  the  entire
                                      JSON  body,  but might be forced to stop
                                      for reasons such as invalid  characters,
                                      duplicate keys, truncation, and any con-
                                      tent whose root node isn't an object  or
                                      an array.

                                      WAF  parses  the  JSON  in the following
                                      examples as two valid key, value pairs:

                                      o Missing                         comma:
                                        {"key1":"value1""key2":"value2"}

                                      o Missing                         colon:
                                        {"key1":"value1","key2""value2"}

                                      o Extra                          colons:
                                        {"key1"::"value1","key2""value2"}

                            ComparisonOperator -> (string)
                               The operator to use to compare the request part
                               to the size setting.

                            Size -> (long)
                               The size, in byte, to compare  to  the  request
                               part, after any transformations.

                            TextTransformations -> (list)
                               Text  transformations  eliminate  some  of  the
                               unusual formatting that attackers  use  in  web
                               requests  in  an effort to bypass detection. If
                               you specify one or more  transformations  in  a
                               rule  statement,  WAF  performs all transforma-
                               tions on the content of the  request  component
                               identified  by FieldToMatch , starting from the
                               lowest priority setting, before inspecting  the
                               content for a match.

                               (structure)
                                   Text  transformations eliminate some of the
                                   unusual formatting that  attackers  use  in
                                   web  requests in an effort to bypass detec-
                                   tion.

                                   Priority -> (integer)
                                      Sets the relative processing  order  for
                                      multiple    transformations   that   are
                                      defined for a rule statement.  WAF  pro-
                                      cesses  all transformations, from lowest
                                      priority to highest,  before  inspecting
                                      the  transformed content. The priorities
                                      don't need to be consecutive,  but  they
                                      must all be different.

                                   Type -> (string)
                                      You  can specify the following transfor-
                                      mation types:
                                          BASE64_DECODE  -  Decode  a   Base64
                                          -encoded string.

                                          BASE64_DECODE_EXT  - Decode a Base64
                                          -encoded string, but use a forgiving
                                          implementation  that ignores charac-
                                          ters that aren't valid.

                                          CMD_LINE - Command-line  transforma-
                                          tions. These are helpful in reducing
                                          effectiveness   of   attackers   who
                                          inject   an  operating  system  com-
                                          mand-line command  and  use  unusual
                                          formatting  to  disguise some or all
                                          of the command.

                                      o Delete the following characters: \ " '
                                        ^

                                      o Delete  spaces  before  the  following
                                        characters: / (

                                      o Replace the following characters  with
                                        a space: , ;

                                      o Replace multiple spaces with one space

                                      o Convert  uppercase  letters  (A-Z)  to
                                        lowercase (a-z)
                                          COMPRESS_WHITE_SPACE - Replace these
                                          characters with  a  space  character
                                          (decimal 32):

                                      o \f , formfeed, decimal 12

                                      o \t , tab, decimal 9

                                      o \n , newline, decimal 10

                                      o \r , carriage return, decimal 13

                                      o \v , vertical tab, decimal 11

                                      o Non-breaking space, decimal 160
                                          COMPRESS_WHITE_SPACE  also  replaces
                                          multiple spaces with one space.

                                          CSS_DECODE - Decode characters  that
                                          were  encoded  using  CSS 2.x escape
                                          rules syndata.html#characters . This
                                          function uses up to two bytes in the
                                          decoding process, so it can help  to
                                          uncover  ASCII  characters that were
                                          encoded  using  CSS  encoding   that
                                          wouldnt  typically  be encoded. It's
                                          also useful in  countering  evasion,
                                          which  is  a  combination of a back-
                                          slash  and  non-hexadecimal  charac-
                                          ters.  For  example, ja\vascript for
                                          javascript.

                                          ESCAPE_SEQ_DECODE - Decode the  fol-
                                          lowing ANSI C escape sequences: \a ,
                                          \b , \f , \n , \r , \t , \v ,  \\  ,
                                          \?  ,  \' , \" , \xHH (hexadecimal),
                                          \0OOO (octal). Encodings that aren't
                                          valid remain in the output.

                                          HEX_DECODE  -  Decode  a  string  of
                                          hexadecimal   characters   into    a
                                          binary.

                                          HTML_ENTITY_DECODE     -     Replace
                                          HTML-encoded characters  with  unen-
                                          coded characters. HTML_ENTITY_DECODE
                                          performs these operations:

                                      o Replaces (ampersand)quot; with "

                                      o Replaces   (ampersand)nbsp;   with   a
                                        non-breaking space, decimal 160

                                      o Replaces  (ampersand)lt;  with a "less
                                        than" symbol

                                      o Replaces (ampersand)gt; with >

                                      o Replaces characters  that  are  repre-
                                        sented  in hexadecimal format, (amper-
                                        sand)#xhhhh; , with the  corresponding
                                        characters

                                      o Replaces  characters  that  are repre-
                                        sented  in  decimal  format,   (amper-
                                        sand)#nnnn;  ,  with the corresponding
                                        characters
                                          JS_DECODE - Decode JavaScript escape
                                          sequences.  If  a \  u  HHHH code is
                                          in the full-width ASCII  code  range
                                          of  FF01-FF5E , then the higher byte
                                          is used to  detect  and  adjust  the
                                          lower  byte.  If not, only the lower
                                          byte is used and the higher byte  is
                                          zeroed,  causing  a possible loss of
                                          information.

                                          LOWERCASE - Convert  uppercase  let-
                                          ters (A-Z) to lowercase (a-z).

                                          MD5 - Calculate an MD5 hash from the
                                          data in the input. The computed hash
                                          is in a raw binary form.

                                          NONE  -  Specify  NONE  if you don't
                                          want any text transformations.

                                          NORMALIZE_PATH  -  Remove   multiple
                                          slashes,  directory self-references,
                                          and directory  back-references  that
                                          are  not  at  the  beginning  of the
                                          input from an input string.

                                          NORMALIZE_PATH_WIN  -  This  is  the
                                          same  as  NORMALIZE_PATH , but first
                                          converts  backslash  characters   to
                                          forward slashes.

                                          REMOVE_NULLS - Remove all NULL bytes
                                          from the input.

                                          REPLACE_COMMENTS  -   Replace   each
                                          occurrence  of a C-style comment (/*
                                          ... */ ) with a single space. Multi-
                                          ple  consecutive occurrences are not
                                          compressed.  Unterminated   comments
                                          are   also  replaced  with  a  space
                                          (ASCII 0x20). However, a  standalone
                                          termination  of  a  comment (*/ ) is
                                          not acted upon.

                                          REPLACE_NULLS - Replace  NULL  bytes
                                          in  the  input with space characters
                                          (ASCII 0x20 ).

                                          SQL_HEX_DECODE  -  Decode  SQL   hex
                                          data.  Example  (0x414243  ) will be
                                          decoded to (ABC ).

                                          URL_DECODE -  Decode  a  URL-encoded
                                          value.

                                          URL_DECODE_UNI  -  Like URL_DECODE ,
                                          but with support for  Microsoft-spe-
                                          cific %u encoding. If the code is in
                                          the full-width ASCII code  range  of
                                          FF01-FF5E  , the higher byte is used
                                          to detect and adjust the lower byte.
                                          Otherwise,  only  the  lower byte is
                                          used and the higher byte is  zeroed.

                                          UTF8_TO_UNICODE  - Convert all UTF-8
                                          character sequences to Unicode. This
                                          helps input normalization, and mini-
                                          mizing      false-positives      and
                                          false-negatives for non-English lan-
                                          guages.

                        GeoMatchStatement -> (structure)
                            A rule statement used  to  identify  web  requests
                            based on country of origin.

                            CountryCodes -> (list)
                               An  array  of  two-character country codes, for
                               example, [ "US", "CN"  ]  ,  from  the  alpha-2
                               country ISO codes of the ISO 3166 international
                               standard.

                               (string)

                            ForwardedIPConfig -> (structure)
                               The configuration for inspecting  IP  addresses
                               in  an HTTP header that you specify, instead of
                               using the IP address that's reported by the web
                               request  origin.  Commonly,  this is the X-For-
                               warded-For (XFF) header, but  you  can  specify
                               any header name.

                               NOTE:
                                   If  the  specified  header isn't present in
                                   the request, WAF doesn't apply the rule  to
                                   the web request at all.

                               HeaderName -> (string)
                                   The  name of the HTTP header to use for the
                                   IP address. For example, to use the  X-For-
                                   warded-For (XFF) header, set this to X-For-
                                   warded-For .

                                   NOTE:
                                      If the specified header isn't present in
                                      the  request, WAF doesn't apply the rule
                                      to the web request at all.

                               FallbackBehavior -> (string)
                                   The match  status  to  assign  to  the  web
                                   request if the request doesn't have a valid
                                   IP address in the specified position.

                                   NOTE:
                                      If the specified header isn't present in
                                      the  request, WAF doesn't apply the rule
                                      to the web request at all.

                                   You  can  specify  the  following  fallback
                                   behaviors:

                                   o MATCH - Treat the web request as matching
                                     the rule statement. WAF applies the  rule
                                     action to the request.

                                   o NO_MATCH  -  Treat the web request as not
                                     matching the rule statement.

                        RuleGroupReferenceStatement -> (structure)
                            A rule statement used to run the  rules  that  are
                            defined  in  a   RuleGroup . To use this, create a
                            rule group with your rules, then provide  the  ARN
                            of the rule group in this statement.

                            You  cannot  nest  a RuleGroupReferenceStatement ,
                            for example  for  use  inside  a  NotStatement  or
                            OrStatement . You can only use a rule group refer-
                            ence statement at the top level inside a web  ACL.

                            ARN -> (string)
                               The Amazon Resource Name (ARN) of the entity.

                            ExcludedRules -> (list)
                               The  rules  in  the referenced rule group whose
                               actions are set to Count . When you  exclude  a
                               rule,  WAF  evaluates it exactly as it would if
                               the rule action setting were Count . This is  a
                               useful  option  for testing the rules in a rule
                               group without modifying how  they  handle  your
                               web traffic.

                               (structure)
                                   Specifies  a  single  rule  in a rule group
                                   whose action you want to override to  Count
                                   . When you exclude a rule, WAF evaluates it
                                   exactly as it would if the rule action set-
                                   ting  were  Count . This is a useful option
                                   for testing the rules in a rule group with-
                                   out  modifying  how  they  handle  your web
                                   traffic.

                                   Name -> (string)
                                      The name of the rule  whose  action  you
                                      want to override to Count .

                        IPSetReferenceStatement -> (structure)
                            A  rule statement used to detect web requests com-
                            ing  from  particular  IP  addresses  or   address
                            ranges.  To use this, create an  IPSet that speci-
                            fies the addresses you want to  detect,  then  use
                            the  ARN  of that set in this statement. To create
                            an IP set, see  CreateIPSet .

                            Each IP set rule statement references an  IP  set.
                            You  create  and  maintain  the set independent of
                            your rules. This allows you to use the single  set
                            in  multiple rules. When you update the referenced
                            set, WAF automatically updates all rules that ref-
                            erence it.

                            ARN -> (string)
                               The  Amazon  Resource  Name (ARN) of the  IPSet
                               that this statement references.

                            IPSetForwardedIPConfig -> (structure)
                               The configuration for inspecting  IP  addresses
                               in  an HTTP header that you specify, instead of
                               using the IP address that's reported by the web
                               request  origin.  Commonly,  this is the X-For-
                               warded-For (XFF) header, but  you  can  specify
                               any header name.

                               NOTE:
                                   If  the  specified  header isn't present in
                                   the request, WAF doesn't apply the rule  to
                                   the web request at all.

                               HeaderName -> (string)
                                   The  name of the HTTP header to use for the
                                   IP address. For example, to use the  X-For-
                                   warded-For (XFF) header, set this to X-For-
                                   warded-For .

                                   NOTE:
                                      If the specified header isn't present in
                                      the  request, WAF doesn't apply the rule
                                      to the web request at all.

                               FallbackBehavior -> (string)
                                   The match  status  to  assign  to  the  web
                                   request if the request doesn't have a valid
                                   IP address in the specified position.

                                   NOTE:
                                      If the specified header isn't present in
                                      the  request, WAF doesn't apply the rule
                                      to the web request at all.

                                   You  can  specify  the  following  fallback
                                   behaviors:

                                   o MATCH - Treat the web request as matching
                                     the rule statement. WAF applies the  rule
                                     action to the request.

                                   o NO_MATCH  -  Treat the web request as not
                                     matching the rule statement.

                               Position -> (string)
                                   The position in the header  to  search  for
                                   the  IP  address. The header can contain IP
                                   addresses of the original client  and  also
                                   of  proxies.  For example, the header value
                                   could be 10.1.1.1,  127.0.0.0,  10.10.10.10
                                   where  the  first IP address identifies the
                                   original client and the rest identify prox-
                                   ies that the request went through.

                                   The  options  for this setting are the fol-
                                   lowing:

                                   o FIRST - Inspect the first IP  address  in
                                     the  list  of IP addresses in the header.
                                     This is usually the client's original IP.

                                   o LAST - Inspect the last IP address in the
                                     list of IP addresses in the header.

                                   o ANY - Inspect all  IP  addresses  in  the
                                     header  for  a  match. If the header con-
                                     tains more  than  10  IP  addresses,  WAF
                                     inspects the last 10.

                        RegexPatternSetReferenceStatement -> (structure)
                            A rule statement used to search web request compo-
                            nents for matches with regular expressions. To use
                            this, create a  RegexPatternSet that specifies the
                            expressions that you want to detect, then use  the
                            ARN  of  that set in this statement. A web request
                            matches the pattern  set  rule  statement  if  the
                            request  component  matches any of the patterns in
                            the set. To create a regex pattern set, see   Cre-
                            ateRegexPatternSet .

                            Each regex pattern set rule statement references a
                            regex pattern set. You create and maintain the set
                            independent  of your rules. This allows you to use
                            the single set in multiple rules. When you  update
                            the  referenced set, WAF automatically updates all
                            rules that reference it.

                            ARN -> (string)
                               The Amazon Resource Name (ARN) of  the   Regex-
                               PatternSet that this statement references.

                            FieldToMatch -> (structure)
                               The  part of a web request that you want WAF to
                               inspect.  For  more  information,  see   Field-
                               ToMatch .

                               SingleHeader -> (structure)
                                   Inspect  a  single header. Provide the name
                                   of the  header  to  inspect,  for  example,
                                   User-Agent  or Referer . This setting isn't
                                   case sensitive.

                                   Example  JSON:  "SingleHeader":  {  "Name":
                                   "haystack" }

                                   Name -> (string)
                                      The name of the query header to inspect.

                               SingleQueryArgument -> (structure)
                                   Inspect a single  query  argument.  Provide
                                   the  name of the query argument to inspect,
                                   such as UserName or SalesRegion . The  name
                                   can  be  up to 30 characters long and isn't
                                   case sensitive.

                                   This is  used  only  to  indicate  the  web
                                   request  component  for  WAF to inspect, in
                                   the  FieldToMatch specification.

                                   Example  JSON:   "SingleQueryArgument":   {
                                   "Name": "myArgument" }

                                   Name -> (string)
                                      The   name  of  the  query  argument  to
                                      inspect.

                               AllQueryArguments -> (structure)
                                   Inspect all query arguments.

                               UriPath -> (structure)
                                   Inspect the request URI path. This  is  the
                                   part  of  a  web  request that identifies a
                                   resource, for example, /images/daily-ad.jpg
                                   .

                               QueryString -> (structure)
                                   Inspect  the query string. This is the part
                                   of a URL that appears after a ?  character,
                                   if any.

                               Body -> (structure)
                                   Inspect the request body as plain text. The
                                   request  body   immediately   follows   the
                                   request  headers.  This  is  the  part of a
                                   request that contains any  additional  data
                                   that you want to send to your web server as
                                   the HTTP request body, such as data from  a
                                   form.

                                   Note  that only the first 8 KB (8192 bytes)
                                   of the request body are  forwarded  to  WAF
                                   for  inspection by the underlying host ser-
                                   vice. If you don't  need  to  inspect  more
                                   than 8 KB, you can guarantee that you don't
                                   allow additional bytes in  by  combining  a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement  , with a
                                   SizeConstraintStatement that enforces an  8
                                   KB  size  limit on the body of the request.
                                   WAF doesn't support inspecting  the  entire
                                   contents   of  web  requests  whose  bodies
                                   exceed the 8 KB limit.

                               Method -> (structure)
                                   Inspect the HTTP method. The  method  indi-
                                   cates   the  type  of  operation  that  the
                                   request is asking the origin to perform.

                               JsonBody -> (structure)
                                   Inspect  the  request  body  as  JSON.  The
                                   request   body   immediately   follows  the
                                   request headers. This  is  the  part  of  a
                                   request  that  contains any additional data
                                   that you want to send to your web server as
                                   the  HTTP request body, such as data from a
                                   form.

                                   Note that only the first 8 KB (8192  bytes)
                                   of  the  request  body are forwarded to WAF
                                   for inspection by the underlying host  ser-
                                   vice.  If  you  don't  need to inspect more
                                   than 8 KB, you can guarantee that you don't
                                   allow  additional  bytes  in by combining a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement , with  a
                                   SizeConstraintStatement  that enforces an 8
                                   KB size limit on the body of  the  request.
                                   WAF  doesn't  support inspecting the entire
                                   contents  of  web  requests  whose   bodies
                                   exceed the 8 KB limit.

                                   MatchPattern -> (structure)
                                      The  patterns  to  look  for in the JSON
                                      body. WAF inspects the results of  these
                                      pattern matches against the rule inspec-
                                      tion criteria.

                                      All -> (structure)
                                          Match all of the elements. See  also
                                          MatchScope in  JsonBody .

                                          You must specify either this setting
                                          or the  IncludedPaths  setting,  but
                                          not both.

                                      IncludedPaths -> (list)
                                          Match  only  the  specified  include
                                          paths. See also MatchScope in  Json-
                                          Body .

                                          Provide the include paths using JSON
                                          Pointer   syntax.    For    example,
                                          "IncludedPaths":    ["/dogs/0/name",
                                          "/dogs/1/name"]  .  For  information
                                          about  this syntax, see the Internet
                                          Engineering Task Force (IETF)  docu-
                                          mentation JavaScript Object Notation
                                          (JSON) Pointer .

                                          You must specify either this setting
                                          or the All setting, but not both.

                                          NOTE:
                                             Don't  use this option to include
                                             all paths. Instead, use  the  All
                                             setting.

                                          (string)

                                   MatchScope -> (string)
                                      The  parts  of the JSON to match against
                                      using the MatchPattern . If you  specify
                                      All  , WAF matches against keys and val-
                                      ues.

                                   InvalidFallbackBehavior -> (string)
                                      What WAF should do if it fails  to  com-
                                      pletely parse the JSON body. The options
                                      are the following:

                                      o EVALUATE_AS_STRING - Inspect the  body
                                        as  plain  text.  WAF applies the text
                                        transformations and inspection  crite-
                                        ria  that  you  defined  for  the JSON
                                        inspection to the body text string.

                                      o MATCH  -  Treat  the  web  request  as
                                        matching   the   rule  statement.  WAF
                                        applies  the  rule   action   to   the
                                        request.

                                      o NO_MATCH  -  Treat  the web request as
                                        not matching the rule statement.

                                      If you don't provide this  setting,  WAF
                                      parses and evaluates the content only up
                                      to the first  parsing  failure  that  it
                                      encounters.

                                      WAF  does  its  best to parse the entire
                                      JSON body, but might be forced  to  stop
                                      for  reasons such as invalid characters,
                                      duplicate keys, truncation, and any con-
                                      tent  whose root node isn't an object or
                                      an array.

                                      WAF parses the  JSON  in  the  following
                                      examples as two valid key, value pairs:

                                      o Missing                         comma:
                                        {"key1":"value1""key2":"value2"}

                                      o Missing                         colon:
                                        {"key1":"value1","key2""value2"}

                                      o Extra                          colons:
                                        {"key1"::"value1","key2""value2"}

                            TextTransformations -> (list)
                               Text  transformations  eliminate  some  of  the
                               unusual  formatting  that  attackers use in web
                               requests in an effort to bypass  detection.  If
                               you  specify  one  or more transformations in a
                               rule statement, WAF  performs  all  transforma-
                               tions  on  the content of the request component
                               identified by FieldToMatch , starting from  the
                               lowest  priority setting, before inspecting the
                               content for a match.

                               (structure)
                                   Text transformations eliminate some of  the
                                   unusual  formatting  that  attackers use in
                                   web requests in an effort to bypass  detec-
                                   tion.

                                   Priority -> (integer)
                                      Sets  the  relative processing order for
                                      multiple   transformations   that    are
                                      defined  for  a rule statement. WAF pro-
                                      cesses all transformations, from  lowest
                                      priority  to  highest, before inspecting
                                      the transformed content. The  priorities
                                      don't  need  to be consecutive, but they
                                      must all be different.

                                   Type -> (string)
                                      You can specify the following  transfor-
                                      mation types:
                                          BASE64_DECODE   -  Decode  a  Base64
                                          -encoded string.

                                          BASE64_DECODE_EXT - Decode a  Base64
                                          -encoded string, but use a forgiving
                                          implementation that ignores  charac-
                                          ters that aren't valid.

                                          CMD_LINE  - Command-line transforma-
                                          tions. These are helpful in reducing
                                          effectiveness   of   attackers   who
                                          inject  an  operating  system   com-
                                          mand-line  command  and  use unusual
                                          formatting to disguise some  or  all
                                          of the command.

                                      o Delete the following characters: \ " '
                                        ^

                                      o Delete  spaces  before  the  following
                                        characters: / (

                                      o Replace  the following characters with
                                        a space: , ;

                                      o Replace multiple spaces with one space

                                      o Convert  uppercase  letters  (A-Z)  to
                                        lowercase (a-z)
                                          COMPRESS_WHITE_SPACE - Replace these
                                          characters  with  a  space character
                                          (decimal 32):

                                      o \f , formfeed, decimal 12

                                      o \t , tab, decimal 9

                                      o \n , newline, decimal 10

                                      o \r , carriage return, decimal 13

                                      o \v , vertical tab, decimal 11

                                      o Non-breaking space, decimal 160
                                          COMPRESS_WHITE_SPACE  also  replaces
                                          multiple spaces with one space.

                                          CSS_DECODE  - Decode characters that
                                          were encoded using  CSS  2.x  escape
                                          rules syndata.html#characters . This
                                          function uses up to two bytes in the
                                          decoding  process, so it can help to
                                          uncover ASCII characters  that  were
                                          encoded   using  CSS  encoding  that
                                          wouldnt typically be  encoded.  It's
                                          also  useful  in countering evasion,
                                          which is a combination  of  a  back-
                                          slash  and  non-hexadecimal  charac-
                                          ters. For example,  ja\vascript  for
                                          javascript.

                                          ESCAPE_SEQ_DECODE  - Decode the fol-
                                          lowing ANSI C escape sequences: \a ,
                                          \b  ,  \f , \n , \r , \t , \v , \\ ,
                                          \? , \' , \" ,  \xHH  (hexadecimal),
                                          \0OOO (octal). Encodings that aren't
                                          valid remain in the output.

                                          HEX_DECODE  -  Decode  a  string  of
                                          hexadecimal    characters   into   a
                                          binary.

                                          HTML_ENTITY_DECODE     -     Replace
                                          HTML-encoded  characters  with unen-
                                          coded characters. HTML_ENTITY_DECODE
                                          performs these operations:

                                      o Replaces (ampersand)quot; with "

                                      o Replaces   (ampersand)nbsp;   with   a
                                        non-breaking space, decimal 160

                                      o Replaces (ampersand)lt; with  a  "less
                                        than" symbol

                                      o Replaces (ampersand)gt; with >

                                      o Replaces  characters  that  are repre-
                                        sented in hexadecimal format,  (amper-
                                        sand)#xhhhh;  , with the corresponding
                                        characters

                                      o Replaces characters  that  are  repre-
                                        sented   in  decimal  format,  (amper-
                                        sand)#nnnn; , with  the  corresponding
                                        characters
                                          JS_DECODE - Decode JavaScript escape
                                          sequences. If a \  u  HHHH  code  is
                                          in  the  full-width ASCII code range
                                          of FF01-FF5E , then the higher  byte
                                          is  used  to  detect  and adjust the
                                          lower byte. If not, only  the  lower
                                          byte  is used and the higher byte is
                                          zeroed, causing a possible  loss  of
                                          information.

                                          LOWERCASE  -  Convert uppercase let-
                                          ters (A-Z) to lowercase (a-z).

                                          MD5 - Calculate an MD5 hash from the
                                          data in the input. The computed hash
                                          is in a raw binary form.

                                          NONE - Specify  NONE  if  you  don't
                                          want any text transformations.

                                          NORMALIZE_PATH   -  Remove  multiple
                                          slashes, directory  self-references,
                                          and  directory  back-references that
                                          are not  at  the  beginning  of  the
                                          input from an input string.

                                          NORMALIZE_PATH_WIN  -  This  is  the
                                          same as NORMALIZE_PATH ,  but  first
                                          converts   backslash  characters  to
                                          forward slashes.

                                          REMOVE_NULLS - Remove all NULL bytes
                                          from the input.

                                          REPLACE_COMMENTS   -   Replace  each
                                          occurrence of a C-style comment  (/*
                                          ... */ ) with a single space. Multi-
                                          ple consecutive occurrences are  not
                                          compressed.   Unterminated  comments
                                          are  also  replaced  with  a   space
                                          (ASCII  0x20). However, a standalone
                                          termination of a comment  (*/  )  is
                                          not acted upon.

                                          REPLACE_NULLS  -  Replace NULL bytes
                                          in the input with  space  characters
                                          (ASCII 0x20 ).

                                          SQL_HEX_DECODE   -  Decode  SQL  hex
                                          data. Example (0x414243  )  will  be
                                          decoded to (ABC ).

                                          URL_DECODE  -  Decode  a URL-encoded
                                          value.

                                          URL_DECODE_UNI - Like  URL_DECODE  ,
                                          but  with support for Microsoft-spe-
                                          cific %u encoding. If the code is in
                                          the  full-width  ASCII code range of
                                          FF01-FF5E , the higher byte is  used
                                          to detect and adjust the lower byte.
                                          Otherwise, only the  lower  byte  is
                                          used  and the higher byte is zeroed.

                                          UTF8_TO_UNICODE - Convert all  UTF-8
                                          character sequences to Unicode. This
                                          helps input normalization, and mini-
                                          mizing      false-positives      and
                                          false-negatives for non-English lan-
                                          guages.

                        RateBasedStatement -> (structure)
                            A  rate-based rule tracks the rate of requests for
                            each originating IP address, and triggers the rule
                            action  when  the  rate  exceeds  a limit that you
                            specify on the number of requests in any  5-minute
                            time  span.  You  can  use this to put a temporary
                            block on requests from an IP address that is send-
                            ing excessive requests.

                            WAF tracks and manages web requests separately for
                            each instance of a rate-based rule that  you  use.
                            For  example,  if  you provide the same rate-based
                            rule settings in two web ACLs,  each  of  the  two
                            rule  statements represents a separate instance of
                            the rate-based rule and gets its own tracking  and
                            management by WAF. If you define a rate-based rule
                            inside a rule group, and then use that rule  group
                            in  multiple  places,  each use creates a separate
                            instance of the rate-based rule that gets its  own
                            tracking and management by WAF.

                            When  the  rule  action triggers, WAF blocks addi-
                            tional requests from  the  IP  address  until  the
                            request rate falls below the limit.

                            You  can  optionally nest another statement inside
                            the rate-based statement, to narrow the  scope  of
                            the  rule  so  that  it  only counts requests that
                            match the nested statement. For example, based  on
                            recent   requests  that  you  have  seen  from  an
                            attacker, you might create a rate-based rule  with
                            a nested AND rule statement that contains the fol-
                            lowing nested statements:

                            o An IP match statement with an IP set that speci-
                              fied the address 192.0.2.44.

                            o A  string  match  statement that searches in the
                              User-Agent header for the string BadBot.

                            In this rate-based rule, you also  define  a  rate
                            limit.  For this example, the rate limit is 1,000.
                            Requests that meet both of the conditions  in  the
                            statements are counted. If the count exceeds 1,000
                            requests per five minutes, the rule  action  trig-
                            gers.  Requests  that  do not meet both conditions
                            are not counted towards the rate limit and are not
                            affected by this rule.

                            You   cannot   nest  a  RateBasedStatement  inside
                            another statement, for example inside a  NotState-
                            ment  or OrStatement . You can define a RateBased-
                            Statement inside a  web  ACL  and  inside  a  rule
                            group.

                            Limit -> (long)
                               The limit on requests per 5-minute period for a
                               single originating IP address. If the statement
                               includes  a  ScopeDownStatement , this limit is
                               applied only to the  requests  that  match  the
                               statement.

                            AggregateKeyType -> (string)
                               Setting  that  indicates  how  to aggregate the
                               request counts. The options are the following:

                               o IP - Aggregate the request counts on  the  IP
                                 address from the web request origin.

                               o FORWARDED_IP  -  Aggregate the request counts
                                 on the first IP address in an HTTP header. If
                                 you use this, configure the ForwardedIPConfig
                                 , to specify the header to use.

                            ( ... recursive ... )ForwardedIPConfig ->  (struc-
                            ture)
                               The  configuration  for inspecting IP addresses
                               in an HTTP header that you specify, instead  of
                               using the IP address that's reported by the web
                               request origin. Commonly, this  is  the  X-For-
                               warded-For  (XFF)  header,  but you can specify
                               any header name.

                               NOTE:
                                   If the specified header  isn't  present  in
                                   the  request, WAF doesn't apply the rule to
                                   the web request at all.

                               This is required if AggregateKeyType is set  to
                               FORWARDED_IP .

                               HeaderName -> (string)
                                   The  name of the HTTP header to use for the
                                   IP address. For example, to use the  X-For-
                                   warded-For (XFF) header, set this to X-For-
                                   warded-For .

                                   NOTE:
                                      If the specified header isn't present in
                                      the  request, WAF doesn't apply the rule
                                      to the web request at all.

                               FallbackBehavior -> (string)
                                   The match  status  to  assign  to  the  web
                                   request if the request doesn't have a valid
                                   IP address in the specified position.

                                   NOTE:
                                      If the specified header isn't present in
                                      the  request, WAF doesn't apply the rule
                                      to the web request at all.

                                   You  can  specify  the  following  fallback
                                   behaviors:

                                   o MATCH - Treat the web request as matching
                                     the rule statement. WAF applies the  rule
                                     action to the request.

                                   o NO_MATCH  -  Treat the web request as not
                                     matching the rule statement.

                        AndStatement -> (structure)
                            A logical rule statement  used  to  combine  other
                            rule  statements  with AND logic. You provide more
                            than one  Statement within the AndStatement .

                            Statements -> (list)
                               The statements to combine with AND  logic.  You
                               can use any statements that can be nested.

                               ( ... recursive ... )

                        OrStatement -> (structure)
                            A  logical  rule  statement  used to combine other
                            rule statements with OR logic.  You  provide  more
                            than one  Statement within the OrStatement .

                            Statements -> (list)
                               The  statements  to  combine with OR logic. You
                               can use any statements that can be nested.

                               ( ... recursive ... )

                        NotStatement -> (structure)
                            A  logical  rule  statement  used  to  negate  the
                            results of another rule statement. You provide one
                            Statement within the NotStatement .

                            ( ... recursive ... )

                        ManagedRuleGroupStatement -> (structure)
                            A rule statement used to run the  rules  that  are
                            defined in a managed rule group. To use this, pro-
                            vide the vendor name and  the  name  of  the  rule
                            group  in  this  statement.  You  can retrieve the
                            required names  by  calling   ListAvailableManage-
                            dRuleGroups .

                            You  cannot nest a ManagedRuleGroupStatement , for
                            example for use inside a NotStatement or  OrState-
                            ment  .  It  can only be referenced as a top-level
                            statement within a rule.

                            VendorName -> (string)
                               The name of the managed rule group vendor.  You
                               use  this,  along  with the rule group name, to
                               identify the rule group.

                            Name -> (string)
                               The name of the managed  rule  group.  You  use
                               this,  along  with the vendor name, to identify
                               the rule group.

                            Version -> (string)
                               The version of the managed rule group  to  use.
                               If  you  specify  this,  the version setting is
                               fixed until you change it. If you don't specify
                               this,  WAF  uses  the vendor's default version,
                               and then keeps  the  version  at  the  vendor's
                               default  when  the  vendor  updates the managed
                               rule group settings.

                            ExcludedRules -> (list)
                               The rules in the referenced  rule  group  whose
                               actions  are  set to Count . When you exclude a
                               rule, WAF evaluates it exactly as it  would  if
                               the  rule action setting were Count . This is a
                               useful option for testing the rules in  a  rule
                               group  without  modifying  how they handle your
                               web traffic.

                               (structure)
                                   Specifies a single rule  in  a  rule  group
                                   whose  action you want to override to Count
                                   . When you exclude a rule, WAF evaluates it
                                   exactly as it would if the rule action set-
                                   ting were Count . This is a  useful  option
                                   for testing the rules in a rule group with-
                                   out modifying  how  they  handle  your  web
                                   traffic.

                                   Name -> (string)
                                      The  name  of  the rule whose action you
                                      want to override to Count .

                            ( ... recursive ... )

                        LabelMatchStatement -> (structure)
                            A rule  statement  that  defines  a  string  match
                            search  against labels that have been added to the
                            web request by rules that have already run in  the
                            web ACL.

                            The  label  match  statement provides the label or
                            namespace string to search for. The  label  string
                            can represent a part or all of the fully qualified
                            label name that had been added to the web request.
                            Fully  qualified  labels  have  a prefix, optional
                            namespaces, and label name. The prefix  identifies
                            the rule group or web ACL context of the rule that
                            added the label. If you do not provide  the  fully
                            qualified  name  in  your  label match string, WAF
                            performs the search for labels that were added  in
                            the same context as the label match statement.

                            Scope -> (string)
                               Specify  whether  you  want  to match using the
                               label name or just the namespace.

                            Key -> (string)
                               The string to match against.  The  setting  you
                               provide  for  this  depends on the match state-
                               ment's Scope setting:

                               o If the Scope  indicates  LABEL  ,  then  this
                                 specification  must  include the name and can
                                 include any  number  of  preceding  namespace
                                 specifications and prefix up to providing the
                                 fully qualified label name.

                               o If the Scope indicates NAMESPACE , then  this
                                 specification  can include any number of con-
                                 tiguous namespace strings,  and  can  include
                                 the  entire  label  namespace prefix from the
                                 rule group or web ACL where the label  origi-
                                 nates.

                               Labels  are  case sensitive and components of a
                               label must be separated by colon,  for  example
                               NS1:NS2:name .

                        RegexMatchStatement -> (structure)
                            A rule statement used to search web request compo-
                            nents for a match against a single regular expres-
                            sion.

                            RegexString -> (string)
                               The string representing the regular expression.

                            FieldToMatch -> (structure)
                               The part of a web request that you want WAF  to
                               inspect.  For  more  information,  see   Field-
                               ToMatch .

                               SingleHeader -> (structure)
                                   Inspect a single header. Provide  the  name
                                   of  the  header  to  inspect,  for example,
                                   User-Agent or Referer . This setting  isn't
                                   case sensitive.

                                   Example  JSON:  "SingleHeader":  {  "Name":
                                   "haystack" }

                                   Name -> (string)
                                      The name of the query header to inspect.

                               SingleQueryArgument -> (structure)
                                   Inspect  a  single  query argument. Provide
                                   the name of the query argument to  inspect,
                                   such  as UserName or SalesRegion . The name
                                   can be up to 30 characters long  and  isn't
                                   case sensitive.

                                   This  is  used  only  to  indicate  the web
                                   request component for WAF  to  inspect,  in
                                   the  FieldToMatch specification.

                                   Example   JSON:   "SingleQueryArgument":  {
                                   "Name": "myArgument" }

                                   Name -> (string)
                                      The  name  of  the  query  argument   to
                                      inspect.

                               AllQueryArguments -> (structure)
                                   Inspect all query arguments.

                               UriPath -> (structure)
                                   Inspect  the  request URI path. This is the
                                   part of a web  request  that  identifies  a
                                   resource, for example, /images/daily-ad.jpg
                                   .

                               QueryString -> (structure)
                                   Inspect the query string. This is the  part
                                   of  a URL that appears after a ? character,
                                   if any.

                               Body -> (structure)
                                   Inspect the request body as plain text. The
                                   request   body   immediately   follows  the
                                   request headers. This  is  the  part  of  a
                                   request  that  contains any additional data
                                   that you want to send to your web server as
                                   the  HTTP request body, such as data from a
                                   form.

                                   Note that only the first 8 KB (8192  bytes)
                                   of  the  request  body are forwarded to WAF
                                   for inspection by the underlying host  ser-
                                   vice.  If  you  don't  need to inspect more
                                   than 8 KB, you can guarantee that you don't
                                   allow  additional  bytes  in by combining a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement , with  a
                                   SizeConstraintStatement  that enforces an 8
                                   KB size limit on the body of  the  request.
                                   WAF  doesn't  support inspecting the entire
                                   contents  of  web  requests  whose   bodies
                                   exceed the 8 KB limit.

                               Method -> (structure)
                                   Inspect  the  HTTP method. The method indi-
                                   cates  the  type  of  operation  that   the
                                   request is asking the origin to perform.

                               JsonBody -> (structure)
                                   Inspect  the  request  body  as  JSON.  The
                                   request  body   immediately   follows   the
                                   request  headers.  This  is  the  part of a
                                   request that contains any  additional  data
                                   that you want to send to your web server as
                                   the HTTP request body, such as data from  a
                                   form.

                                   Note  that only the first 8 KB (8192 bytes)
                                   of the request body are  forwarded  to  WAF
                                   for  inspection by the underlying host ser-
                                   vice. If you don't  need  to  inspect  more
                                   than 8 KB, you can guarantee that you don't
                                   allow additional bytes in  by  combining  a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement  , with a
                                   SizeConstraintStatement that enforces an  8
                                   KB  size  limit on the body of the request.
                                   WAF doesn't support inspecting  the  entire
                                   contents   of  web  requests  whose  bodies
                                   exceed the 8 KB limit.

                                   MatchPattern -> (structure)
                                      The patterns to look  for  in  the  JSON
                                      body.  WAF inspects the results of these
                                      pattern matches against the rule inspec-
                                      tion criteria.

                                      All -> (structure)
                                          Match  all of the elements. See also
                                          MatchScope in  JsonBody .

                                          You must specify either this setting
                                          or  the  IncludedPaths  setting, but
                                          not both.

                                      IncludedPaths -> (list)
                                          Match  only  the  specified  include
                                          paths. See also MatchScope in  Json-
                                          Body .

                                          Provide the include paths using JSON
                                          Pointer    syntax.    For   example,
                                          "IncludedPaths":    ["/dogs/0/name",
                                          "/dogs/1/name"]  .  For  information
                                          about this syntax, see the  Internet
                                          Engineering  Task Force (IETF) docu-
                                          mentation JavaScript Object Notation
                                          (JSON) Pointer .

                                          You must specify either this setting
                                          or the All setting, but not both.

                                          NOTE:
                                             Don't use this option to  include
                                             all  paths.  Instead, use the All
                                             setting.

                                          (string)

                                   MatchScope -> (string)
                                      The parts of the JSON to  match  against
                                      using  the MatchPattern . If you specify
                                      All , WAF matches against keys and  val-
                                      ues.

                                   InvalidFallbackBehavior -> (string)
                                      What  WAF  should do if it fails to com-
                                      pletely parse the JSON body. The options
                                      are the following:

                                      o EVALUATE_AS_STRING  - Inspect the body
                                        as plain text. WAF  applies  the  text
                                        transformations  and inspection crite-
                                        ria that  you  defined  for  the  JSON
                                        inspection to the body text string.

                                      o MATCH  -  Treat  the  web  request  as
                                        matching  the  rule   statement.   WAF
                                        applies   the   rule   action  to  the
                                        request.

                                      o NO_MATCH - Treat the  web  request  as
                                        not matching the rule statement.

                                      If  you  don't provide this setting, WAF
                                      parses and evaluates the content only up
                                      to  the  first  parsing  failure that it
                                      encounters.

                                      WAF does its best to  parse  the  entire
                                      JSON  body,  but might be forced to stop
                                      for reasons such as invalid  characters,
                                      duplicate keys, truncation, and any con-
                                      tent whose root node isn't an object  or
                                      an array.

                                      WAF  parses  the  JSON  in the following
                                      examples as two valid key, value pairs:

                                      o Missing                         comma:
                                        {"key1":"value1""key2":"value2"}

                                      o Missing                         colon:
                                        {"key1":"value1","key2""value2"}

                                      o Extra                          colons:
                                        {"key1"::"value1","key2""value2"}

                            TextTransformations -> (list)
                               Text  transformations  eliminate  some  of  the
                               unusual formatting that attackers  use  in  web
                               requests  in  an effort to bypass detection. If
                               you specify one or more  transformations  in  a
                               rule  statement,  WAF  performs all transforma-
                               tions on the content of the  request  component
                               identified  by FieldToMatch , starting from the
                               lowest priority setting, before inspecting  the
                               content for a match.

                               (structure)
                                   Text  transformations eliminate some of the
                                   unusual formatting that  attackers  use  in
                                   web  requests in an effort to bypass detec-
                                   tion.

                                   Priority -> (integer)
                                      Sets the relative processing  order  for
                                      multiple    transformations   that   are
                                      defined for a rule statement.  WAF  pro-
                                      cesses  all transformations, from lowest
                                      priority to highest,  before  inspecting
                                      the  transformed content. The priorities
                                      don't need to be consecutive,  but  they
                                      must all be different.

                                   Type -> (string)
                                      You  can specify the following transfor-
                                      mation types:
                                          BASE64_DECODE  -  Decode  a   Base64
                                          -encoded string.

                                          BASE64_DECODE_EXT  - Decode a Base64
                                          -encoded string, but use a forgiving
                                          implementation  that ignores charac-
                                          ters that aren't valid.

                                          CMD_LINE - Command-line  transforma-
                                          tions. These are helpful in reducing
                                          effectiveness   of   attackers   who
                                          inject   an  operating  system  com-
                                          mand-line command  and  use  unusual
                                          formatting  to  disguise some or all
                                          of the command.

                                      o Delete the following characters: \ " '
                                        ^

                                      o Delete  spaces  before  the  following
                                        characters: / (

                                      o Replace the following characters  with
                                        a space: , ;

                                      o Replace multiple spaces with one space

                                      o Convert  uppercase  letters  (A-Z)  to
                                        lowercase (a-z)
                                          COMPRESS_WHITE_SPACE - Replace these
                                          characters with  a  space  character
                                          (decimal 32):

                                      o \f , formfeed, decimal 12

                                      o \t , tab, decimal 9

                                      o \n , newline, decimal 10

                                      o \r , carriage return, decimal 13

                                      o \v , vertical tab, decimal 11

                                      o Non-breaking space, decimal 160
                                          COMPRESS_WHITE_SPACE  also  replaces
                                          multiple spaces with one space.

                                          CSS_DECODE - Decode characters  that
                                          were  encoded  using  CSS 2.x escape
                                          rules syndata.html#characters . This
                                          function uses up to two bytes in the
                                          decoding process, so it can help  to
                                          uncover  ASCII  characters that were
                                          encoded  using  CSS  encoding   that
                                          wouldnt  typically  be encoded. It's
                                          also useful in  countering  evasion,
                                          which  is  a  combination of a back-
                                          slash  and  non-hexadecimal  charac-
                                          ters.  For  example, ja\vascript for
                                          javascript.

                                          ESCAPE_SEQ_DECODE - Decode the  fol-
                                          lowing ANSI C escape sequences: \a ,
                                          \b , \f , \n , \r , \t , \v ,  \\  ,
                                          \?  ,  \' , \" , \xHH (hexadecimal),
                                          \0OOO (octal). Encodings that aren't
                                          valid remain in the output.

                                          HEX_DECODE  -  Decode  a  string  of
                                          hexadecimal   characters   into    a
                                          binary.

                                          HTML_ENTITY_DECODE     -     Replace
                                          HTML-encoded characters  with  unen-
                                          coded characters. HTML_ENTITY_DECODE
                                          performs these operations:

                                      o Replaces (ampersand)quot; with "

                                      o Replaces   (ampersand)nbsp;   with   a
                                        non-breaking space, decimal 160

                                      o Replaces  (ampersand)lt;  with a "less
                                        than" symbol

                                      o Replaces (ampersand)gt; with >

                                      o Replaces characters  that  are  repre-
                                        sented  in hexadecimal format, (amper-
                                        sand)#xhhhh; , with the  corresponding
                                        characters

                                      o Replaces  characters  that  are repre-
                                        sented  in  decimal  format,   (amper-
                                        sand)#nnnn;  ,  with the corresponding
                                        characters
                                          JS_DECODE - Decode JavaScript escape
                                          sequences.  If  a \  u  HHHH code is
                                          in the full-width ASCII  code  range
                                          of  FF01-FF5E , then the higher byte
                                          is used to  detect  and  adjust  the
                                          lower  byte.  If not, only the lower
                                          byte is used and the higher byte  is
                                          zeroed,  causing  a possible loss of
                                          information.

                                          LOWERCASE - Convert  uppercase  let-
                                          ters (A-Z) to lowercase (a-z).

                                          MD5 - Calculate an MD5 hash from the
                                          data in the input. The computed hash
                                          is in a raw binary form.

                                          NONE  -  Specify  NONE  if you don't
                                          want any text transformations.

                                          NORMALIZE_PATH  -  Remove   multiple
                                          slashes,  directory self-references,
                                          and directory  back-references  that
                                          are  not  at  the  beginning  of the
                                          input from an input string.

                                          NORMALIZE_PATH_WIN  -  This  is  the
                                          same  as  NORMALIZE_PATH , but first
                                          converts  backslash  characters   to
                                          forward slashes.

                                          REMOVE_NULLS - Remove all NULL bytes
                                          from the input.

                                          REPLACE_COMMENTS  -   Replace   each
                                          occurrence  of a C-style comment (/*
                                          ... */ ) with a single space. Multi-
                                          ple  consecutive occurrences are not
                                          compressed.  Unterminated   comments
                                          are   also  replaced  with  a  space
                                          (ASCII 0x20). However, a  standalone
                                          termination  of  a  comment (*/ ) is
                                          not acted upon.

                                          REPLACE_NULLS - Replace  NULL  bytes
                                          in  the  input with space characters
                                          (ASCII 0x20 ).

                                          SQL_HEX_DECODE  -  Decode  SQL   hex
                                          data.  Example  (0x414243  ) will be
                                          decoded to (ABC ).

                                          URL_DECODE -  Decode  a  URL-encoded
                                          value.

                                          URL_DECODE_UNI  -  Like URL_DECODE ,
                                          but with support for  Microsoft-spe-
                                          cific %u encoding. If the code is in
                                          the full-width ASCII code  range  of
                                          FF01-FF5E  , the higher byte is used
                                          to detect and adjust the lower byte.
                                          Otherwise,  only  the  lower byte is
                                          used and the higher byte is  zeroed.

                                          UTF8_TO_UNICODE  - Convert all UTF-8
                                          character sequences to Unicode. This
                                          helps input normalization, and mini-
                                          mizing      false-positives      and
                                          false-negatives for non-English lan-
                                          guages.

                     ForwardedIPConfig -> (structure)
                        The configuration for inspecting IP  addresses  in  an
                        HTTP  header that you specify, instead of using the IP
                        address that's reported by  the  web  request  origin.
                        Commonly,  this  is  the X-Forwarded-For (XFF) header,
                        but you can specify any header name.

                        NOTE:
                            If the  specified  header  isn't  present  in  the
                            request,  WAF  doesn't  apply  the rule to the web
                            request at all.

                        This is required if AggregateKeyType is  set  to  FOR-
                        WARDED_IP .

                        HeaderName -> (string)
                            The  name  of  the  HTTP  header to use for the IP
                            address. For example, to use  the  X-Forwarded-For
                            (XFF) header, set this to X-Forwarded-For .

                            NOTE:
                               If  the  specified  header isn't present in the
                               request, WAF doesn't apply the rule to the  web
                               request at all.

                        FallbackBehavior -> (string)
                            The  match  status to assign to the web request if
                            the request doesn't have a valid IP address in the
                            specified position.

                            NOTE:
                               If  the  specified  header isn't present in the
                               request, WAF doesn't apply the rule to the  web
                               request at all.

                            You can specify the following fallback behaviors:

                            o MATCH  -  Treat  the web request as matching the
                              rule statement. WAF applies the rule  action  to
                              the request.

                            o NO_MATCH - Treat the web request as not matching
                              the rule statement.

                 AndStatement -> (structure)
                     A logical rule  statement  used  to  combine  other  rule
                     statements  with  AND  logic.  You  provide more than one
                     Statement within the AndStatement .

                     Statements -> (list)
                        The statements to combine with AND logic. You can  use
                        any statements that can be nested.

                        (structure)
                            The  processing guidance for a  Rule , used by WAF
                            to determine whether a  web  request  matches  the
                            rule.

                            ByteMatchStatement -> (structure)
                               A  rule  statement  that defines a string match
                               search for WAF to apply to  web  requests.  The
                               byte  match  statement  provides  the  bytes to
                               search for, the location in requests  that  you
                               want  WAF  to  search,  and other settings. The
                               bytes to search for are typically a string that
                               corresponds  with  ASCII characters. In the WAF
                               console and the developer guide, this  is  ref-
                               ered to as a string match statement.

                               SearchString -> (blob)
                                   A  string value that you want WAF to search
                                   for. WAF searches only in the part  of  web
                                   requests  that you designate for inspection
                                   in  FieldToMatch . The  maximum  length  of
                                   the value is 50 bytes.

                                   Valid  values  depend on the component that
                                   you specify for inspection in  FieldToMatch
                                   :

                                   o Method  :  The  HTTP method that you want
                                     WAF to search  for.  This  indicates  the
                                     type   of   operation  specified  in  the
                                     request.

                                   o UriPath : The value that you want WAF  to
                                     search  for in the URI path, for example,
                                     /images/daily-ad.jpg .

                                   If SearchString includes alphabetic charac-
                                   ters  A-Z  and  a-z, note that the value is
                                   case sensitive.
                                      If you're using the WAF API

                                   Specify a  base64-encoded  version  of  the
                                   value.  The  maximum  length  of  the value
                                   before you base64-encode it is 50 bytes.

                                   For example, suppose the value of  Type  is
                                   HEADER  and the value of Data is User-Agent
                                   . If you  want  to  search  the  User-Agent
                                   header   for   the   value   BadBot  ,  you
                                   base64-encode     BadBot     using     MIME
                                   base64-encoding  and  include the resulting
                                   value, QmFkQm90 , in the value  of  Search-
                                   String .
                                      If  you're  using  the CLI or one of the
                                      Amazon Web Services SDKs

                                   The value that you want WAF to search  for.
                                   The  SDK  automatically  base64 encodes the
                                   value.

                               FieldToMatch -> (structure)
                                   The part of a web request that you want WAF
                                   to   inspect.  For  more  information,  see
                                   FieldToMatch .

                                   SingleHeader -> (structure)
                                      Inspect a  single  header.  Provide  the
                                      name of the header to inspect, for exam-
                                      ple, User-Agent or Referer .  This  set-
                                      ting isn't case sensitive.

                                      Example  JSON: "SingleHeader": { "Name":
                                      "haystack" }

                                      Name -> (string)
                                          The name  of  the  query  header  to
                                          inspect.

                                   SingleQueryArgument -> (structure)
                                      Inspect a single query argument. Provide
                                      the  name  of  the  query  argument   to
                                      inspect, such as UserName or SalesRegion
                                      . The name can be up  to  30  characters
                                      long and isn't case sensitive.

                                      This  is  used  only to indicate the web
                                      request component for WAF to inspect, in
                                      the  FieldToMatch specification.

                                      Example  JSON:  "SingleQueryArgument": {
                                      "Name": "myArgument" }

                                      Name -> (string)
                                          The name of the  query  argument  to
                                          inspect.

                                   AllQueryArguments -> (structure)
                                      Inspect all query arguments.

                                   UriPath -> (structure)
                                      Inspect  the  request  URI path. This is
                                      the part of a web request  that  identi-
                                      fies    a    resource,    for   example,
                                      /images/daily-ad.jpg .

                                   QueryString -> (structure)
                                      Inspect the query string.  This  is  the
                                      part  of  a  URL  that appears after a ?
                                      character, if any.

                                   Body -> (structure)
                                      Inspect the request body as plain  text.
                                      The request body immediately follows the
                                      request headers. This is the part  of  a
                                      request  that  contains  any  additional
                                      data that you want to send to  your  web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note that only  the  first  8  KB  (8192
                                      bytes) of the request body are forwarded
                                      to WAF for inspection by the  underlying
                                      host  service.  If  you  don't  need  to
                                      inspect more than 8 KB, you can  guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes in by combining a  statement  that
                                      inspects  the  body  of the web request,
                                      such as  ByteMatchStatement  or   Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8  KB  size  limit  on  the  body of the
                                      request. WAF doesn't support  inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                   Method -> (structure)
                                      Inspect  the  HTTP  method.  The  method
                                      indicates the type of operation that the
                                      request is asking the origin to perform.

                                   JsonBody -> (structure)
                                      Inspect  the  request  body as JSON. The
                                      request  body  immediately  follows  the
                                      request  headers.  This is the part of a
                                      request  that  contains  any  additional
                                      data  that  you want to send to your web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note  that  only  the  first  8 KB (8192
                                      bytes) of the request body are forwarded
                                      to  WAF for inspection by the underlying
                                      host  service.  If  you  don't  need  to
                                      inspect  more than 8 KB, you can guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes  in  by combining a statement that
                                      inspects the body of  the  web  request,
                                      such  as   ByteMatchStatement or  Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8 KB size  limit  on  the  body  of  the
                                      request.  WAF doesn't support inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                      MatchPattern -> (structure)
                                          The patterns to look for in the JSON
                                          body. WAF inspects  the  results  of
                                          these  pattern  matches  against the
                                          rule inspection criteria.

                                          All -> (structure)
                                             Match all of  the  elements.  See
                                             also MatchScope in  JsonBody .

                                             You must specify either this set-
                                             ting or  the  IncludedPaths  set-
                                             ting, but not both.

                                          IncludedPaths -> (list)
                                             Match  only the specified include
                                             paths.  See  also  MatchScope  in
                                             JsonBody .

                                             Provide  the  include paths using
                                             JSON Pointer syntax. For example,
                                             "IncludedPaths": ["/dogs/0/name",
                                             "/dogs/1/name"] . For information
                                             about this syntax, see the Inter-
                                             net Engineering Task Force (IETF)
                                             documentation  JavaScript  Object
                                             Notation (JSON) Pointer .

                                             You must specify either this set-
                                             ting  or the All setting, but not
                                             both.

                                             NOTE:
                                                 Don't  use  this  option   to
                                                 include  all  paths. Instead,
                                                 use the All setting.

                                             (string)

                                      MatchScope -> (string)
                                          The  parts  of  the  JSON  to  match
                                          against  using the MatchPattern . If
                                          you  specify  All  ,   WAF   matches
                                          against keys and values.

                                      InvalidFallbackBehavior -> (string)
                                          What  WAF  should  do if it fails to
                                          completely parse the JSON body.  The
                                          options are the following:

                                          o EVALUATE_AS_STRING  -  Inspect the
                                            body as plain  text.  WAF  applies
                                            the   text   transformations   and
                                            inspection   criteria   that   you
                                            defined for the JSON inspection to
                                            the body text string.

                                          o MATCH - Treat the web  request  as
                                            matching  the  rule statement. WAF
                                            applies the  rule  action  to  the
                                            request.

                                          o NO_MATCH  -  Treat the web request
                                            as not matching  the  rule  state-
                                            ment.

                                          If  you  don't provide this setting,
                                          WAF parses and evaluates the content
                                          only up to the first parsing failure
                                          that it encounters.

                                          WAF  does  its  best  to  parse  the
                                          entire   JSON  body,  but  might  be
                                          forced to stop for reasons  such  as
                                          invalid  characters, duplicate keys,
                                          truncation, and  any  content  whose
                                          root  node  isn't  an  object  or an
                                          array.

                                          WAF parses the JSON in the following
                                          examples  as  two  valid  key, value
                                          pairs:

                                          o Missing                     comma:
                                            {"key1":"value1""key2":"value2"}

                                          o Missing                     colon:
                                            {"key1":"value1","key2""value2"}

                                          o Extra                      colons:
                                            {"key1"::"value1","key2""value2"}

                               TextTransformations -> (list)
                                   Text  transformations eliminate some of the
                                   unusual formatting that  attackers  use  in
                                   web  requests in an effort to bypass detec-
                                   tion. If you specify one or more  transfor-
                                   mations  in  a rule statement, WAF performs
                                   all transformations on the content  of  the
                                   request   component  identified  by  Field-
                                   ToMatch , starting from the lowest priority
                                   setting,  before inspecting the content for
                                   a match.

                                   (structure)
                                      Text transformations eliminate  some  of
                                      the  unusual  formatting  that attackers
                                      use in web  requests  in  an  effort  to
                                      bypass detection.

                                      Priority -> (integer)
                                          Sets  the  relative processing order
                                          for  multiple  transformations  that
                                          are  defined  for  a rule statement.
                                          WAF processes  all  transformations,
                                          from  lowest  priority  to  highest,
                                          before  inspecting  the  transformed
                                          content.  The  priorities don't need
                                          to be consecutive, but they must all
                                          be different.

                                      Type -> (string)
                                          You can specify the following trans-
                                          formation types:
                                             BASE64_DECODE - Decode  a  Base64
                                             -encoded string.

                                             BASE64_DECODE_EXT   -   Decode  a
                                             Base64 -encoded string, but use a
                                             forgiving   implementation   that
                                             ignores  characters  that  aren't
                                             valid.

                                             CMD_LINE - Command-line transfor-
                                             mations.  These  are  helpful  in
                                             reducing effectiveness of attack-
                                             ers who inject an operating  sys-
                                             tem  command-line command and use
                                             unusual  formatting  to  disguise
                                             some or all of the command.

                                          o Delete the following characters: \
                                            " ' ^

                                          o Delete spaces before the following
                                            characters: / (

                                          o Replace  the  following characters
                                            with a space: , ;

                                          o Replace multiple spaces  with  one
                                            space

                                          o Convert uppercase letters (A-Z) to
                                            lowercase (a-z)
                                             COMPRESS_WHITE_SPACE  -   Replace
                                             these  characters  with  a  space
                                             character (decimal 32):

                                          o \f , formfeed, decimal 12

                                          o \t , tab, decimal 9

                                          o \n , newline, decimal 10

                                          o \r , carriage return, decimal 13

                                          o \v , vertical tab, decimal 11

                                          o Non-breaking space, decimal 160
                                             COMPRESS_WHITE_SPACE         also
                                             replaces multiple spaces with one
                                             space.

                                             CSS_DECODE  -  Decode  characters
                                             that  were  encoded using CSS 2.x
                                             escape rules syndata.html#charac-
                                             ters  .  This function uses up to
                                             two   bytes   in   the   decoding
                                             process,   so   it  can  help  to
                                             uncover  ASCII  characters   that
                                             were  encoded  using CSS encoding
                                             that   wouldnt    typically    be
                                             encoded.   It's  also  useful  in
                                             countering evasion,  which  is  a
                                             combination  of  a  backslash and
                                             non-hexadecimal  characters.  For
                                             example,      ja\vascript     for
                                             javascript.

                                             ESCAPE_SEQ_DECODE  -  Decode  the
                                             following     ANSI    C    escape
                                             sequences: \a , \b , \f , \n , \r
                                             ,  \t  , \v , \\ , \? , \' , \" ,
                                             \xHH     (hexadecimal),     \0OOO
                                             (octal).  Encodings  that  aren't
                                             valid remain in the output.

                                             HEX_DECODE - Decode a  string  of
                                             hexadecimal   characters  into  a
                                             binary.

                                             HTML_ENTITY_DECODE   -    Replace
                                             HTML-encoded    characters   with
                                             unencoded             characters.
                                             HTML_ENTITY_DECODE performs these
                                             operations:

                                          o Replaces (ampersand)quot; with "

                                          o Replaces (ampersand)nbsp;  with  a
                                            non-breaking space, decimal 160

                                          o Replaces   (ampersand)lt;  with  a
                                            "less than" symbol

                                          o Replaces (ampersand)gt; with >

                                          o Replaces characters that are  rep-
                                            resented  in  hexadecimal  format,
                                            (ampersand)#xhhhh; , with the cor-
                                            responding characters

                                          o Replaces  characters that are rep-
                                            resented   in   decimal    format,
                                            (ampersand)#nnnn;  , with the cor-
                                            responding characters
                                             JS_DECODE  -  Decode   JavaScript
                                             escape sequences. If a \  u  HHHH
                                             code is in the  full-width  ASCII
                                             code  range  of  FF01-FF5E , then
                                             the higher byte is used to detect
                                             and  adjust  the  lower  byte. If
                                             not, only the lower byte is  used
                                             and  the  higher  byte is zeroed,
                                             causing a possible loss of infor-
                                             mation.

                                             LOWERCASE   -  Convert  uppercase
                                             letters (A-Z) to lowercase (a-z).

                                             MD5  - Calculate an MD5 hash from
                                             the data in the input.  The  com-
                                             puted  hash  is  in  a raw binary
                                             form.

                                             NONE - Specify NONE if you  don't
                                             want any text transformations.

                                             NORMALIZE_PATH  - Remove multiple
                                             slashes,  directory   self-refer-
                                             ences,  and directory back-refer-
                                             ences that are not at the  begin-
                                             ning  of  the input from an input
                                             string.

                                             NORMALIZE_PATH_WIN - This is  the
                                             same   as  NORMALIZE_PATH  ,  but
                                             first converts backslash  charac-
                                             ters to forward slashes.

                                             REMOVE_NULLS  -  Remove  all NULL
                                             bytes from the input.

                                             REPLACE_COMMENTS -  Replace  each
                                             occurrence  of  a C-style comment
                                             (/* ... */ ) with a single space.
                                             Multiple  consecutive occurrences
                                             are not compressed.  Unterminated
                                             comments are also replaced with a
                                             space (ASCII  0x20).  However,  a
                                             standalone  termination of a com-
                                             ment (*/ ) is not acted upon.

                                             REPLACE_NULLS  -   Replace   NULL
                                             bytes  in  the  input  with space
                                             characters (ASCII 0x20 ).

                                             SQL_HEX_DECODE - Decode  SQL  hex
                                             data. Example (0x414243 ) will be
                                             decoded to (ABC ).

                                             URL_DECODE - Decode a URL-encoded
                                             value.

                                             URL_DECODE_UNI  - Like URL_DECODE
                                             ,   but    with    support    for
                                             Microsoft-specific  %u  encoding.
                                             If the code is in the  full-width
                                             ASCII  code  range of FF01-FF5E ,
                                             the higher byte is used to detect
                                             and adjust the lower byte. Other-
                                             wise, only the lower byte is used
                                             and the higher byte is zeroed.

                                             UTF8_TO_UNICODE   -  Convert  all
                                             UTF-8 character sequences to Uni-
                                             code. This helps input normaliza-
                                             tion, and minimizing  false-posi-
                                             tives   and  false-negatives  for
                                             non-English languages.

                               PositionalConstraint -> (string)
                                   The  area  within  the  portion  of  a  web
                                   request  that  you  want  WAF to search for
                                   SearchString .  Valid  values  include  the
                                   following:
                                      CONTAINS

                                   The  specified part of the web request must
                                   include the value of SearchString , but the
                                   location doesn't matter.
                                      CONTAINS_WORD

                                   The  specified part of the web request must
                                   include the value  of  SearchString  ,  and
                                   SearchString must contain only alphanumeric
                                   characters or underscore (A-Z, a-z, 0-9, or
                                   _).  In  addition,  SearchString  must be a
                                   word, which means that both of the  follow-
                                   ing are true:

                                   o SearchString  is  at the beginning of the
                                     specified part of the web request  or  is
                                     preceded  by  a  character  other than an
                                     alphanumeric character or underscore (_).
                                     Examples  include  the  value of a header
                                     and ;BadBot .

                                   o SearchString is at the end of the  speci-
                                     fied  part  of the web request or is fol-
                                     lowed  by  a  character  other  than   an
                                     alphanumeric character or underscore (_),
                                     for example, BadBot; and -BadBot; .
                                      EXACTLY

                                   The value of the specified part of the  web
                                   request  must  exactly  match  the value of
                                   SearchString .
                                      STARTS_WITH

                                   The value of SearchString  must  appear  at
                                   the  beginning of the specified part of the
                                   web request.
                                      ENDS_WITH

                                   The value of SearchString  must  appear  at
                                   the  end  of  the specified part of the web
                                   request.

                            SqliMatchStatement -> (structure)
                               Attackers sometimes insert malicious  SQL  code
                               into  web requests in an effort to extract data
                               from your  database.  To  allow  or  block  web
                               requests  that  appear to contain malicious SQL
                               code, create one or more  SQL  injection  match
                               conditions.  An  SQL  injection match condition
                               identifies the part of web  requests,  such  as
                               the  URI or the query string, that you want WAF
                               to inspect. Later in the process, when you cre-
                               ate  a web ACL, you specify whether to allow or
                               block requests that appear to contain malicious
                               SQL code.

                               FieldToMatch -> (structure)
                                   The part of a web request that you want WAF
                                   to  inspect.  For  more  information,   see
                                   FieldToMatch .

                                   SingleHeader -> (structure)
                                      Inspect  a  single  header.  Provide the
                                      name of the header to inspect, for exam-
                                      ple,  User-Agent  or Referer . This set-
                                      ting isn't case sensitive.

                                      Example JSON: "SingleHeader": {  "Name":
                                      "haystack" }

                                      Name -> (string)
                                          The  name  of  the  query  header to
                                          inspect.

                                   SingleQueryArgument -> (structure)
                                      Inspect a single query argument. Provide
                                      the   name  of  the  query  argument  to
                                      inspect, such as UserName or SalesRegion
                                      .  The  name  can be up to 30 characters
                                      long and isn't case sensitive.

                                      This is used only to  indicate  the  web
                                      request component for WAF to inspect, in
                                      the  FieldToMatch specification.

                                      Example JSON:  "SingleQueryArgument":  {
                                      "Name": "myArgument" }

                                      Name -> (string)
                                          The  name  of  the query argument to
                                          inspect.

                                   AllQueryArguments -> (structure)
                                      Inspect all query arguments.

                                   UriPath -> (structure)
                                      Inspect the request URI  path.  This  is
                                      the  part  of a web request that identi-
                                      fies   a    resource,    for    example,
                                      /images/daily-ad.jpg .

                                   QueryString -> (structure)
                                      Inspect  the  query  string. This is the
                                      part of a URL that  appears  after  a  ?
                                      character, if any.

                                   Body -> (structure)
                                      Inspect  the request body as plain text.
                                      The request body immediately follows the
                                      request  headers.  This is the part of a
                                      request  that  contains  any  additional
                                      data  that  you want to send to your web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note  that  only  the  first  8 KB (8192
                                      bytes) of the request body are forwarded
                                      to  WAF for inspection by the underlying
                                      host  service.  If  you  don't  need  to
                                      inspect  more than 8 KB, you can guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes  in  by combining a statement that
                                      inspects the body of  the  web  request,
                                      such  as   ByteMatchStatement or  Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8 KB size  limit  on  the  body  of  the
                                      request.  WAF doesn't support inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                   Method -> (structure)
                                      Inspect  the  HTTP  method.  The  method
                                      indicates the type of operation that the
                                      request is asking the origin to perform.

                                   JsonBody -> (structure)
                                      Inspect the request body  as  JSON.  The
                                      request  body  immediately  follows  the
                                      request headers. This is the part  of  a
                                      request  that  contains  any  additional
                                      data that you want to send to  your  web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note that only  the  first  8  KB  (8192
                                      bytes) of the request body are forwarded
                                      to WAF for inspection by the  underlying
                                      host  service.  If  you  don't  need  to
                                      inspect more than 8 KB, you can  guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes in by combining a  statement  that
                                      inspects  the  body  of the web request,
                                      such as  ByteMatchStatement  or   Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8  KB  size  limit  on  the  body of the
                                      request. WAF doesn't support  inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                      MatchPattern -> (structure)
                                          The patterns to look for in the JSON
                                          body.  WAF  inspects  the results of
                                          these pattern  matches  against  the
                                          rule inspection criteria.

                                          All -> (structure)
                                             Match  all  of  the elements. See
                                             also MatchScope in  JsonBody .

                                             You must specify either this set-
                                             ting  or  the  IncludedPaths set-
                                             ting, but not both.

                                          IncludedPaths -> (list)
                                             Match only the specified  include
                                             paths.  See  also  MatchScope  in
                                             JsonBody .

                                             Provide the include  paths  using
                                             JSON Pointer syntax. For example,
                                             "IncludedPaths": ["/dogs/0/name",
                                             "/dogs/1/name"] . For information
                                             about this syntax, see the Inter-
                                             net Engineering Task Force (IETF)
                                             documentation  JavaScript  Object
                                             Notation (JSON) Pointer .

                                             You must specify either this set-
                                             ting or the All setting, but  not
                                             both.

                                             NOTE:
                                                 Don't   use  this  option  to
                                                 include all  paths.  Instead,
                                                 use the All setting.

                                             (string)

                                      MatchScope -> (string)
                                          The  parts  of  the  JSON  to  match
                                          against using the MatchPattern .  If
                                          you   specify   All  ,  WAF  matches
                                          against keys and values.

                                      InvalidFallbackBehavior -> (string)
                                          What WAF should do if  it  fails  to
                                          completely  parse the JSON body. The
                                          options are the following:

                                          o EVALUATE_AS_STRING -  Inspect  the
                                            body  as  plain  text. WAF applies
                                            the   text   transformations   and
                                            inspection   criteria   that   you
                                            defined for the JSON inspection to
                                            the body text string.

                                          o MATCH  -  Treat the web request as
                                            matching the rule  statement.  WAF
                                            applies  the  rule  action  to the
                                            request.

                                          o NO_MATCH - Treat the  web  request
                                            as  not  matching  the rule state-
                                            ment.

                                          If you don't provide  this  setting,
                                          WAF parses and evaluates the content
                                          only up to the first parsing failure
                                          that it encounters.

                                          WAF  does  its  best  to  parse  the
                                          entire  JSON  body,  but  might   be
                                          forced  to  stop for reasons such as
                                          invalid characters, duplicate  keys,
                                          truncation,  and  any  content whose
                                          root node  isn't  an  object  or  an
                                          array.

                                          WAF parses the JSON in the following
                                          examples as  two  valid  key,  value
                                          pairs:

                                          o Missing                     comma:
                                            {"key1":"value1""key2":"value2"}

                                          o Missing                     colon:
                                            {"key1":"value1","key2""value2"}

                                          o Extra                      colons:
                                            {"key1"::"value1","key2""value2"}

                               TextTransformations -> (list)
                                   Text transformations eliminate some of  the
                                   unusual  formatting  that  attackers use in
                                   web requests in an effort to bypass  detec-
                                   tion.  If you specify one or more transfor-
                                   mations in a rule statement,  WAF  performs
                                   all  transformations  on the content of the
                                   request  component  identified  by   Field-
                                   ToMatch , starting from the lowest priority
                                   setting, before inspecting the content  for
                                   a match.

                                   (structure)
                                      Text  transformations  eliminate some of
                                      the unusual  formatting  that  attackers
                                      use  in  web  requests  in  an effort to
                                      bypass detection.

                                      Priority -> (integer)
                                          Sets the relative  processing  order
                                          for  multiple  transformations  that
                                          are defined for  a  rule  statement.
                                          WAF  processes  all transformations,
                                          from  lowest  priority  to  highest,
                                          before  inspecting  the  transformed
                                          content. The priorities  don't  need
                                          to be consecutive, but they must all
                                          be different.

                                      Type -> (string)
                                          You can specify the following trans-
                                          formation types:
                                             BASE64_DECODE  -  Decode a Base64
                                             -encoded string.

                                             BASE64_DECODE_EXT  -   Decode   a
                                             Base64 -encoded string, but use a
                                             forgiving   implementation   that
                                             ignores  characters  that  aren't
                                             valid.

                                             CMD_LINE - Command-line transfor-
                                             mations.  These  are  helpful  in
                                             reducing effectiveness of attack-
                                             ers  who inject an operating sys-
                                             tem command-line command and  use
                                             unusual  formatting  to  disguise
                                             some or all of the command.

                                          o Delete the following characters: \
                                            " ' ^

                                          o Delete spaces before the following
                                            characters: / (

                                          o Replace the  following  characters
                                            with a space: , ;

                                          o Replace  multiple  spaces with one
                                            space

                                          o Convert uppercase letters (A-Z) to
                                            lowercase (a-z)
                                             COMPRESS_WHITE_SPACE   -  Replace
                                             these  characters  with  a  space
                                             character (decimal 32):

                                          o \f , formfeed, decimal 12

                                          o \t , tab, decimal 9

                                          o \n , newline, decimal 10

                                          o \r , carriage return, decimal 13

                                          o \v , vertical tab, decimal 11

                                          o Non-breaking space, decimal 160
                                             COMPRESS_WHITE_SPACE         also
                                             replaces multiple spaces with one
                                             space.

                                             CSS_DECODE  -  Decode  characters
                                             that were encoded using  CSS  2.x
                                             escape rules syndata.html#charac-
                                             ters . This function uses  up  to
                                             two   bytes   in   the   decoding
                                             process,  so  it  can   help   to
                                             uncover   ASCII  characters  that
                                             were encoded using  CSS  encoding
                                             that    wouldnt    typically   be
                                             encoded.  It's  also  useful   in
                                             countering  evasion,  which  is a
                                             combination of  a  backslash  and
                                             non-hexadecimal  characters.  For
                                             example,     ja\vascript      for
                                             javascript.

                                             ESCAPE_SEQ_DECODE  -  Decode  the
                                             following    ANSI    C     escape
                                             sequences: \a , \b , \f , \n , \r
                                             , \t , \v , \\ , \? , \' ,  \"  ,
                                             \xHH     (hexadecimal),     \0OOO
                                             (octal).  Encodings  that  aren't
                                             valid remain in the output.

                                             HEX_DECODE  -  Decode a string of
                                             hexadecimal  characters  into   a
                                             binary.

                                             HTML_ENTITY_DECODE    -   Replace
                                             HTML-encoded   characters    with
                                             unencoded             characters.
                                             HTML_ENTITY_DECODE performs these
                                             operations:

                                          o Replaces (ampersand)quot; with "

                                          o Replaces  (ampersand)nbsp;  with a
                                            non-breaking space, decimal 160

                                          o Replaces  (ampersand)lt;  with   a
                                            "less than" symbol

                                          o Replaces (ampersand)gt; with >

                                          o Replaces  characters that are rep-
                                            resented  in  hexadecimal  format,
                                            (ampersand)#xhhhh; , with the cor-
                                            responding characters

                                          o Replaces characters that are  rep-
                                            resented    in   decimal   format,
                                            (ampersand)#nnnn; , with the  cor-
                                            responding characters
                                             JS_DECODE   -  Decode  JavaScript
                                             escape sequences. If a \  u  HHHH
                                             code  is  in the full-width ASCII
                                             code range of  FF01-FF5E  ,  then
                                             the higher byte is used to detect
                                             and adjust  the  lower  byte.  If
                                             not,  only the lower byte is used
                                             and the higher  byte  is  zeroed,
                                             causing a possible loss of infor-
                                             mation.

                                             LOWERCASE  -  Convert   uppercase
                                             letters (A-Z) to lowercase (a-z).

                                             MD5 - Calculate an MD5 hash  from
                                             the  data  in the input. The com-
                                             puted hash is  in  a  raw  binary
                                             form.

                                             NONE  - Specify NONE if you don't
                                             want any text transformations.

                                             NORMALIZE_PATH - Remove  multiple
                                             slashes,   directory  self-refer-
                                             ences, and directory  back-refer-
                                             ences  that are not at the begin-
                                             ning of the input from  an  input
                                             string.

                                             NORMALIZE_PATH_WIN  - This is the
                                             same  as  NORMALIZE_PATH  ,   but
                                             first  converts backslash charac-
                                             ters to forward slashes.

                                             REMOVE_NULLS -  Remove  all  NULL
                                             bytes from the input.

                                             REPLACE_COMMENTS  -  Replace each
                                             occurrence of a  C-style  comment
                                             (/* ... */ ) with a single space.
                                             Multiple consecutive  occurrences
                                             are  not compressed. Unterminated
                                             comments are also replaced with a
                                             space  (ASCII  0x20).  However, a
                                             standalone termination of a  com-
                                             ment (*/ ) is not acted upon.

                                             REPLACE_NULLS   -   Replace  NULL
                                             bytes in  the  input  with  space
                                             characters (ASCII 0x20 ).

                                             SQL_HEX_DECODE  -  Decode SQL hex
                                             data. Example (0x414243 ) will be
                                             decoded to (ABC ).

                                             URL_DECODE - Decode a URL-encoded
                                             value.

                                             URL_DECODE_UNI - Like  URL_DECODE
                                             ,    but    with    support   for
                                             Microsoft-specific  %u  encoding.
                                             If  the code is in the full-width
                                             ASCII code range of  FF01-FF5E  ,
                                             the higher byte is used to detect
                                             and adjust the lower byte. Other-
                                             wise, only the lower byte is used
                                             and the higher byte is zeroed.

                                             UTF8_TO_UNICODE  -  Convert   all
                                             UTF-8 character sequences to Uni-
                                             code. This helps input normaliza-
                                             tion,  and minimizing false-posi-
                                             tives  and  false-negatives   for
                                             non-English languages.

                            XssMatchStatement -> (structure)
                               A  rule  statement  that  defines  a cross-site
                               scripting (XSS) match search for WAF  to  apply
                               to  web  requests.  XSS attacks are those where
                               the attacker uses vulnerabilities in  a  benign
                               website   as  a  vehicle  to  inject  malicious
                               client-site scripts into other  legitimate  web
                               browsers.  The XSS match statement provides the
                               location in  requests  that  you  want  WAF  to
                               search  and  text transformations to use on the
                               search area before WAF searches  for  character
                               sequences  that  are  likely  to  be  malicious
                               strings.

                               FieldToMatch -> (structure)
                                   The part of a web request that you want WAF
                                   to   inspect.  For  more  information,  see
                                   FieldToMatch .

                                   SingleHeader -> (structure)
                                      Inspect a  single  header.  Provide  the
                                      name of the header to inspect, for exam-
                                      ple, User-Agent or Referer .  This  set-
                                      ting isn't case sensitive.

                                      Example  JSON: "SingleHeader": { "Name":
                                      "haystack" }

                                      Name -> (string)
                                          The name  of  the  query  header  to
                                          inspect.

                                   SingleQueryArgument -> (structure)
                                      Inspect a single query argument. Provide
                                      the  name  of  the  query  argument   to
                                      inspect, such as UserName or SalesRegion
                                      . The name can be up  to  30  characters
                                      long and isn't case sensitive.

                                      This  is  used  only to indicate the web
                                      request component for WAF to inspect, in
                                      the  FieldToMatch specification.

                                      Example  JSON:  "SingleQueryArgument": {
                                      "Name": "myArgument" }

                                      Name -> (string)
                                          The name of the  query  argument  to
                                          inspect.

                                   AllQueryArguments -> (structure)
                                      Inspect all query arguments.

                                   UriPath -> (structure)
                                      Inspect  the  request  URI path. This is
                                      the part of a web request  that  identi-
                                      fies    a    resource,    for   example,
                                      /images/daily-ad.jpg .

                                   QueryString -> (structure)
                                      Inspect the query string.  This  is  the
                                      part  of  a  URL  that appears after a ?
                                      character, if any.

                                   Body -> (structure)
                                      Inspect the request body as plain  text.
                                      The request body immediately follows the
                                      request headers. This is the part  of  a
                                      request  that  contains  any  additional
                                      data that you want to send to  your  web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note that only  the  first  8  KB  (8192
                                      bytes) of the request body are forwarded
                                      to WAF for inspection by the  underlying
                                      host  service.  If  you  don't  need  to
                                      inspect more than 8 KB, you can  guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes in by combining a  statement  that
                                      inspects  the  body  of the web request,
                                      such as  ByteMatchStatement  or   Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8  KB  size  limit  on  the  body of the
                                      request. WAF doesn't support  inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                   Method -> (structure)
                                      Inspect  the  HTTP  method.  The  method
                                      indicates the type of operation that the
                                      request is asking the origin to perform.

                                   JsonBody -> (structure)
                                      Inspect  the  request  body as JSON. The
                                      request  body  immediately  follows  the
                                      request  headers.  This is the part of a
                                      request  that  contains  any  additional
                                      data  that  you want to send to your web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note  that  only  the  first  8 KB (8192
                                      bytes) of the request body are forwarded
                                      to  WAF for inspection by the underlying
                                      host  service.  If  you  don't  need  to
                                      inspect  more than 8 KB, you can guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes  in  by combining a statement that
                                      inspects the body of  the  web  request,
                                      such  as   ByteMatchStatement or  Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8 KB size  limit  on  the  body  of  the
                                      request.  WAF doesn't support inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                      MatchPattern -> (structure)
                                          The patterns to look for in the JSON
                                          body. WAF inspects  the  results  of
                                          these  pattern  matches  against the
                                          rule inspection criteria.

                                          All -> (structure)
                                             Match all of  the  elements.  See
                                             also MatchScope in  JsonBody .

                                             You must specify either this set-
                                             ting or  the  IncludedPaths  set-
                                             ting, but not both.

                                          IncludedPaths -> (list)
                                             Match  only the specified include
                                             paths.  See  also  MatchScope  in
                                             JsonBody .

                                             Provide  the  include paths using
                                             JSON Pointer syntax. For example,
                                             "IncludedPaths": ["/dogs/0/name",
                                             "/dogs/1/name"] . For information
                                             about this syntax, see the Inter-
                                             net Engineering Task Force (IETF)
                                             documentation  JavaScript  Object
                                             Notation (JSON) Pointer .

                                             You must specify either this set-
                                             ting  or the All setting, but not
                                             both.

                                             NOTE:
                                                 Don't  use  this  option   to
                                                 include  all  paths. Instead,
                                                 use the All setting.

                                             (string)

                                      MatchScope -> (string)
                                          The  parts  of  the  JSON  to  match
                                          against  using the MatchPattern . If
                                          you  specify  All  ,   WAF   matches
                                          against keys and values.

                                      InvalidFallbackBehavior -> (string)
                                          What  WAF  should  do if it fails to
                                          completely parse the JSON body.  The
                                          options are the following:

                                          o EVALUATE_AS_STRING  -  Inspect the
                                            body as plain  text.  WAF  applies
                                            the   text   transformations   and
                                            inspection   criteria   that   you
                                            defined for the JSON inspection to
                                            the body text string.

                                          o MATCH - Treat the web  request  as
                                            matching  the  rule statement. WAF
                                            applies the  rule  action  to  the
                                            request.

                                          o NO_MATCH  -  Treat the web request
                                            as not matching  the  rule  state-
                                            ment.

                                          If  you  don't provide this setting,
                                          WAF parses and evaluates the content
                                          only up to the first parsing failure
                                          that it encounters.

                                          WAF  does  its  best  to  parse  the
                                          entire   JSON  body,  but  might  be
                                          forced to stop for reasons  such  as
                                          invalid  characters, duplicate keys,
                                          truncation, and  any  content  whose
                                          root  node  isn't  an  object  or an
                                          array.

                                          WAF parses the JSON in the following
                                          examples  as  two  valid  key, value
                                          pairs:

                                          o Missing                     comma:
                                            {"key1":"value1""key2":"value2"}

                                          o Missing                     colon:
                                            {"key1":"value1","key2""value2"}

                                          o Extra                      colons:
                                            {"key1"::"value1","key2""value2"}

                               TextTransformations -> (list)
                                   Text  transformations eliminate some of the
                                   unusual formatting that  attackers  use  in
                                   web  requests in an effort to bypass detec-
                                   tion. If you specify one or more  transfor-
                                   mations  in  a rule statement, WAF performs
                                   all transformations on the content  of  the
                                   request   component  identified  by  Field-
                                   ToMatch , starting from the lowest priority
                                   setting,  before inspecting the content for
                                   a match.

                                   (structure)
                                      Text transformations eliminate  some  of
                                      the  unusual  formatting  that attackers
                                      use in web  requests  in  an  effort  to
                                      bypass detection.

                                      Priority -> (integer)
                                          Sets  the  relative processing order
                                          for  multiple  transformations  that
                                          are  defined  for  a rule statement.
                                          WAF processes  all  transformations,
                                          from  lowest  priority  to  highest,
                                          before  inspecting  the  transformed
                                          content.  The  priorities don't need
                                          to be consecutive, but they must all
                                          be different.

                                      Type -> (string)
                                          You can specify the following trans-
                                          formation types:
                                             BASE64_DECODE - Decode  a  Base64
                                             -encoded string.

                                             BASE64_DECODE_EXT   -   Decode  a
                                             Base64 -encoded string, but use a
                                             forgiving   implementation   that
                                             ignores  characters  that  aren't
                                             valid.

                                             CMD_LINE - Command-line transfor-
                                             mations.  These  are  helpful  in
                                             reducing effectiveness of attack-
                                             ers who inject an operating  sys-
                                             tem  command-line command and use
                                             unusual  formatting  to  disguise
                                             some or all of the command.

                                          o Delete the following characters: \
                                            " ' ^

                                          o Delete spaces before the following
                                            characters: / (

                                          o Replace  the  following characters
                                            with a space: , ;

                                          o Replace multiple spaces  with  one
                                            space

                                          o Convert uppercase letters (A-Z) to
                                            lowercase (a-z)
                                             COMPRESS_WHITE_SPACE  -   Replace
                                             these  characters  with  a  space
                                             character (decimal 32):

                                          o \f , formfeed, decimal 12

                                          o \t , tab, decimal 9

                                          o \n , newline, decimal 10

                                          o \r , carriage return, decimal 13

                                          o \v , vertical tab, decimal 11

                                          o Non-breaking space, decimal 160
                                             COMPRESS_WHITE_SPACE         also
                                             replaces multiple spaces with one
                                             space.

                                             CSS_DECODE  -  Decode  characters
                                             that  were  encoded using CSS 2.x
                                             escape rules syndata.html#charac-
                                             ters  .  This function uses up to
                                             two   bytes   in   the   decoding
                                             process,   so   it  can  help  to
                                             uncover  ASCII  characters   that
                                             were  encoded  using CSS encoding
                                             that   wouldnt    typically    be
                                             encoded.   It's  also  useful  in
                                             countering evasion,  which  is  a
                                             combination  of  a  backslash and
                                             non-hexadecimal  characters.  For
                                             example,      ja\vascript     for
                                             javascript.

                                             ESCAPE_SEQ_DECODE  -  Decode  the
                                             following     ANSI    C    escape
                                             sequences: \a , \b , \f , \n , \r
                                             ,  \t  , \v , \\ , \? , \' , \" ,
                                             \xHH     (hexadecimal),     \0OOO
                                             (octal).  Encodings  that  aren't
                                             valid remain in the output.

                                             HEX_DECODE - Decode a  string  of
                                             hexadecimal   characters  into  a
                                             binary.

                                             HTML_ENTITY_DECODE   -    Replace
                                             HTML-encoded    characters   with
                                             unencoded             characters.
                                             HTML_ENTITY_DECODE performs these
                                             operations:

                                          o Replaces (ampersand)quot; with "

                                          o Replaces (ampersand)nbsp;  with  a
                                            non-breaking space, decimal 160

                                          o Replaces   (ampersand)lt;  with  a
                                            "less than" symbol

                                          o Replaces (ampersand)gt; with >

                                          o Replaces characters that are  rep-
                                            resented  in  hexadecimal  format,
                                            (ampersand)#xhhhh; , with the cor-
                                            responding characters

                                          o Replaces  characters that are rep-
                                            resented   in   decimal    format,
                                            (ampersand)#nnnn;  , with the cor-
                                            responding characters
                                             JS_DECODE  -  Decode   JavaScript
                                             escape sequences. If a \  u  HHHH
                                             code is in the  full-width  ASCII
                                             code  range  of  FF01-FF5E , then
                                             the higher byte is used to detect
                                             and  adjust  the  lower  byte. If
                                             not, only the lower byte is  used
                                             and  the  higher  byte is zeroed,
                                             causing a possible loss of infor-
                                             mation.

                                             LOWERCASE   -  Convert  uppercase
                                             letters (A-Z) to lowercase (a-z).

                                             MD5  - Calculate an MD5 hash from
                                             the data in the input.  The  com-
                                             puted  hash  is  in  a raw binary
                                             form.

                                             NONE - Specify NONE if you  don't
                                             want any text transformations.

                                             NORMALIZE_PATH  - Remove multiple
                                             slashes,  directory   self-refer-
                                             ences,  and directory back-refer-
                                             ences that are not at the  begin-
                                             ning  of  the input from an input
                                             string.

                                             NORMALIZE_PATH_WIN - This is  the
                                             same   as  NORMALIZE_PATH  ,  but
                                             first converts backslash  charac-
                                             ters to forward slashes.

                                             REMOVE_NULLS  -  Remove  all NULL
                                             bytes from the input.

                                             REPLACE_COMMENTS -  Replace  each
                                             occurrence  of  a C-style comment
                                             (/* ... */ ) with a single space.
                                             Multiple  consecutive occurrences
                                             are not compressed.  Unterminated
                                             comments are also replaced with a
                                             space (ASCII  0x20).  However,  a
                                             standalone  termination of a com-
                                             ment (*/ ) is not acted upon.

                                             REPLACE_NULLS  -   Replace   NULL
                                             bytes  in  the  input  with space
                                             characters (ASCII 0x20 ).

                                             SQL_HEX_DECODE - Decode  SQL  hex
                                             data. Example (0x414243 ) will be
                                             decoded to (ABC ).

                                             URL_DECODE - Decode a URL-encoded
                                             value.

                                             URL_DECODE_UNI  - Like URL_DECODE
                                             ,   but    with    support    for
                                             Microsoft-specific  %u  encoding.
                                             If the code is in the  full-width
                                             ASCII  code  range of FF01-FF5E ,
                                             the higher byte is used to detect
                                             and adjust the lower byte. Other-
                                             wise, only the lower byte is used
                                             and the higher byte is zeroed.

                                             UTF8_TO_UNICODE   -  Convert  all
                                             UTF-8 character sequences to Uni-
                                             code. This helps input normaliza-
                                             tion, and minimizing  false-posi-
                                             tives   and  false-negatives  for
                                             non-English languages.

                            SizeConstraintStatement -> (structure)
                               A rule statement  that  compares  a  number  of
                               bytes  against the size of a request component,
                               using a comparison operator,  such  as  greater
                               than (>) or less than (<). For example, you can
                               use a size constraint  statement  to  look  for
                               query strings that are longer than 100 bytes.

                               If  you  configure  WAF  to inspect the request
                               body, WAF inspects only the first 8192 bytes (8
                               KB).  If the request body for your web requests
                               never exceeds 8192 bytes, you can create a size
                               constraint  condition  and  block requests that
                               have a request body greater than 8192 bytes.

                               If you choose URI for the value of Part of  the
                               request  to filter on, the slash (/) in the URI
                               counts as one character. For example,  the  URI
                               /logo.jpg is nine characters long.

                               FieldToMatch -> (structure)
                                   The part of a web request that you want WAF
                                   to  inspect.  For  more  information,   see
                                   FieldToMatch .

                                   SingleHeader -> (structure)
                                      Inspect  a  single  header.  Provide the
                                      name of the header to inspect, for exam-
                                      ple,  User-Agent  or Referer . This set-
                                      ting isn't case sensitive.

                                      Example JSON: "SingleHeader": {  "Name":
                                      "haystack" }

                                      Name -> (string)
                                          The  name  of  the  query  header to
                                          inspect.

                                   SingleQueryArgument -> (structure)
                                      Inspect a single query argument. Provide
                                      the   name  of  the  query  argument  to
                                      inspect, such as UserName or SalesRegion
                                      .  The  name  can be up to 30 characters
                                      long and isn't case sensitive.

                                      This is used only to  indicate  the  web
                                      request component for WAF to inspect, in
                                      the  FieldToMatch specification.

                                      Example JSON:  "SingleQueryArgument":  {
                                      "Name": "myArgument" }

                                      Name -> (string)
                                          The  name  of  the query argument to
                                          inspect.

                                   AllQueryArguments -> (structure)
                                      Inspect all query arguments.

                                   UriPath -> (structure)
                                      Inspect the request URI  path.  This  is
                                      the  part  of a web request that identi-
                                      fies   a    resource,    for    example,
                                      /images/daily-ad.jpg .

                                   QueryString -> (structure)
                                      Inspect  the  query  string. This is the
                                      part of a URL that  appears  after  a  ?
                                      character, if any.

                                   Body -> (structure)
                                      Inspect  the request body as plain text.
                                      The request body immediately follows the
                                      request  headers.  This is the part of a
                                      request  that  contains  any  additional
                                      data  that  you want to send to your web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note  that  only  the  first  8 KB (8192
                                      bytes) of the request body are forwarded
                                      to  WAF for inspection by the underlying
                                      host  service.  If  you  don't  need  to
                                      inspect  more than 8 KB, you can guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes  in  by combining a statement that
                                      inspects the body of  the  web  request,
                                      such  as   ByteMatchStatement or  Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8 KB size  limit  on  the  body  of  the
                                      request.  WAF doesn't support inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                   Method -> (structure)
                                      Inspect  the  HTTP  method.  The  method
                                      indicates the type of operation that the
                                      request is asking the origin to perform.

                                   JsonBody -> (structure)
                                      Inspect the request body  as  JSON.  The
                                      request  body  immediately  follows  the
                                      request headers. This is the part  of  a
                                      request  that  contains  any  additional
                                      data that you want to send to  your  web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note that only  the  first  8  KB  (8192
                                      bytes) of the request body are forwarded
                                      to WAF for inspection by the  underlying
                                      host  service.  If  you  don't  need  to
                                      inspect more than 8 KB, you can  guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes in by combining a  statement  that
                                      inspects  the  body  of the web request,
                                      such as  ByteMatchStatement  or   Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8  KB  size  limit  on  the  body of the
                                      request. WAF doesn't support  inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                      MatchPattern -> (structure)
                                          The patterns to look for in the JSON
                                          body.  WAF  inspects  the results of
                                          these pattern  matches  against  the
                                          rule inspection criteria.

                                          All -> (structure)
                                             Match  all  of  the elements. See
                                             also MatchScope in  JsonBody .

                                             You must specify either this set-
                                             ting  or  the  IncludedPaths set-
                                             ting, but not both.

                                          IncludedPaths -> (list)
                                             Match only the specified  include
                                             paths.  See  also  MatchScope  in
                                             JsonBody .

                                             Provide the include  paths  using
                                             JSON Pointer syntax. For example,
                                             "IncludedPaths": ["/dogs/0/name",
                                             "/dogs/1/name"] . For information
                                             about this syntax, see the Inter-
                                             net Engineering Task Force (IETF)
                                             documentation  JavaScript  Object
                                             Notation (JSON) Pointer .

                                             You must specify either this set-
                                             ting or the All setting, but  not
                                             both.

                                             NOTE:
                                                 Don't   use  this  option  to
                                                 include all  paths.  Instead,
                                                 use the All setting.

                                             (string)

                                      MatchScope -> (string)
                                          The  parts  of  the  JSON  to  match
                                          against using the MatchPattern .  If
                                          you   specify   All  ,  WAF  matches
                                          against keys and values.

                                      InvalidFallbackBehavior -> (string)
                                          What WAF should do if  it  fails  to
                                          completely  parse the JSON body. The
                                          options are the following:

                                          o EVALUATE_AS_STRING -  Inspect  the
                                            body  as  plain  text. WAF applies
                                            the   text   transformations   and
                                            inspection   criteria   that   you
                                            defined for the JSON inspection to
                                            the body text string.

                                          o MATCH  -  Treat the web request as
                                            matching the rule  statement.  WAF
                                            applies  the  rule  action  to the
                                            request.

                                          o NO_MATCH - Treat the  web  request
                                            as  not  matching  the rule state-
                                            ment.

                                          If you don't provide  this  setting,
                                          WAF parses and evaluates the content
                                          only up to the first parsing failure
                                          that it encounters.

                                          WAF  does  its  best  to  parse  the
                                          entire  JSON  body,  but  might   be
                                          forced  to  stop for reasons such as
                                          invalid characters, duplicate  keys,
                                          truncation,  and  any  content whose
                                          root node  isn't  an  object  or  an
                                          array.

                                          WAF parses the JSON in the following
                                          examples as  two  valid  key,  value
                                          pairs:

                                          o Missing                     comma:
                                            {"key1":"value1""key2":"value2"}

                                          o Missing                     colon:
                                            {"key1":"value1","key2""value2"}

                                          o Extra                      colons:
                                            {"key1"::"value1","key2""value2"}

                               ComparisonOperator -> (string)
                                   The operator to use to compare the  request
                                   part to the size setting.

                               Size -> (long)
                                   The  size,  in  byte,  to  compare  to  the
                                   request part, after any transformations.

                               TextTransformations -> (list)
                                   Text transformations eliminate some of  the
                                   unusual  formatting  that  attackers use in
                                   web requests in an effort to bypass  detec-
                                   tion.  If you specify one or more transfor-
                                   mations in a rule statement,  WAF  performs
                                   all  transformations  on the content of the
                                   request  component  identified  by   Field-
                                   ToMatch , starting from the lowest priority
                                   setting, before inspecting the content  for
                                   a match.

                                   (structure)
                                      Text  transformations  eliminate some of
                                      the unusual  formatting  that  attackers
                                      use  in  web  requests  in  an effort to
                                      bypass detection.

                                      Priority -> (integer)
                                          Sets the relative  processing  order
                                          for  multiple  transformations  that
                                          are defined for  a  rule  statement.
                                          WAF  processes  all transformations,
                                          from  lowest  priority  to  highest,
                                          before  inspecting  the  transformed
                                          content. The priorities  don't  need
                                          to be consecutive, but they must all
                                          be different.

                                      Type -> (string)
                                          You can specify the following trans-
                                          formation types:
                                             BASE64_DECODE  -  Decode a Base64
                                             -encoded string.

                                             BASE64_DECODE_EXT  -   Decode   a
                                             Base64 -encoded string, but use a
                                             forgiving   implementation   that
                                             ignores  characters  that  aren't
                                             valid.

                                             CMD_LINE - Command-line transfor-
                                             mations.  These  are  helpful  in
                                             reducing effectiveness of attack-
                                             ers  who inject an operating sys-
                                             tem command-line command and  use
                                             unusual  formatting  to  disguise
                                             some or all of the command.

                                          o Delete the following characters: \
                                            " ' ^

                                          o Delete spaces before the following
                                            characters: / (

                                          o Replace the  following  characters
                                            with a space: , ;

                                          o Replace  multiple  spaces with one
                                            space

                                          o Convert uppercase letters (A-Z) to
                                            lowercase (a-z)
                                             COMPRESS_WHITE_SPACE   -  Replace
                                             these  characters  with  a  space
                                             character (decimal 32):

                                          o \f , formfeed, decimal 12

                                          o \t , tab, decimal 9

                                          o \n , newline, decimal 10

                                          o \r , carriage return, decimal 13

                                          o \v , vertical tab, decimal 11

                                          o Non-breaking space, decimal 160
                                             COMPRESS_WHITE_SPACE         also
                                             replaces multiple spaces with one
                                             space.

                                             CSS_DECODE  -  Decode  characters
                                             that were encoded using  CSS  2.x
                                             escape rules syndata.html#charac-
                                             ters . This function uses  up  to
                                             two   bytes   in   the   decoding
                                             process,  so  it  can   help   to
                                             uncover   ASCII  characters  that
                                             were encoded using  CSS  encoding
                                             that    wouldnt    typically   be
                                             encoded.  It's  also  useful   in
                                             countering  evasion,  which  is a
                                             combination of  a  backslash  and
                                             non-hexadecimal  characters.  For
                                             example,     ja\vascript      for
                                             javascript.

                                             ESCAPE_SEQ_DECODE  -  Decode  the
                                             following    ANSI    C     escape
                                             sequences: \a , \b , \f , \n , \r
                                             , \t , \v , \\ , \? , \' ,  \"  ,
                                             \xHH     (hexadecimal),     \0OOO
                                             (octal).  Encodings  that  aren't
                                             valid remain in the output.

                                             HEX_DECODE  -  Decode a string of
                                             hexadecimal  characters  into   a
                                             binary.

                                             HTML_ENTITY_DECODE    -   Replace
                                             HTML-encoded   characters    with
                                             unencoded             characters.
                                             HTML_ENTITY_DECODE performs these
                                             operations:

                                          o Replaces (ampersand)quot; with "

                                          o Replaces  (ampersand)nbsp;  with a
                                            non-breaking space, decimal 160

                                          o Replaces  (ampersand)lt;  with   a
                                            "less than" symbol

                                          o Replaces (ampersand)gt; with >

                                          o Replaces  characters that are rep-
                                            resented  in  hexadecimal  format,
                                            (ampersand)#xhhhh; , with the cor-
                                            responding characters

                                          o Replaces characters that are  rep-
                                            resented    in   decimal   format,
                                            (ampersand)#nnnn; , with the  cor-
                                            responding characters
                                             JS_DECODE   -  Decode  JavaScript
                                             escape sequences. If a \  u  HHHH
                                             code  is  in the full-width ASCII
                                             code range of  FF01-FF5E  ,  then
                                             the higher byte is used to detect
                                             and adjust  the  lower  byte.  If
                                             not,  only the lower byte is used
                                             and the higher  byte  is  zeroed,
                                             causing a possible loss of infor-
                                             mation.

                                             LOWERCASE  -  Convert   uppercase
                                             letters (A-Z) to lowercase (a-z).

                                             MD5 - Calculate an MD5 hash  from
                                             the  data  in the input. The com-
                                             puted hash is  in  a  raw  binary
                                             form.

                                             NONE  - Specify NONE if you don't
                                             want any text transformations.

                                             NORMALIZE_PATH - Remove  multiple
                                             slashes,   directory  self-refer-
                                             ences, and directory  back-refer-
                                             ences  that are not at the begin-
                                             ning of the input from  an  input
                                             string.

                                             NORMALIZE_PATH_WIN  - This is the
                                             same  as  NORMALIZE_PATH  ,   but
                                             first  converts backslash charac-
                                             ters to forward slashes.

                                             REMOVE_NULLS -  Remove  all  NULL
                                             bytes from the input.

                                             REPLACE_COMMENTS  -  Replace each
                                             occurrence of a  C-style  comment
                                             (/* ... */ ) with a single space.
                                             Multiple consecutive  occurrences
                                             are  not compressed. Unterminated
                                             comments are also replaced with a
                                             space  (ASCII  0x20).  However, a
                                             standalone termination of a  com-
                                             ment (*/ ) is not acted upon.

                                             REPLACE_NULLS   -   Replace  NULL
                                             bytes in  the  input  with  space
                                             characters (ASCII 0x20 ).

                                             SQL_HEX_DECODE  -  Decode SQL hex
                                             data. Example (0x414243 ) will be
                                             decoded to (ABC ).

                                             URL_DECODE - Decode a URL-encoded
                                             value.

                                             URL_DECODE_UNI - Like  URL_DECODE
                                             ,    but    with    support   for
                                             Microsoft-specific  %u  encoding.
                                             If  the code is in the full-width
                                             ASCII code range of  FF01-FF5E  ,
                                             the higher byte is used to detect
                                             and adjust the lower byte. Other-
                                             wise, only the lower byte is used
                                             and the higher byte is zeroed.

                                             UTF8_TO_UNICODE  -  Convert   all
                                             UTF-8 character sequences to Uni-
                                             code. This helps input normaliza-
                                             tion,  and minimizing false-posi-
                                             tives  and  false-negatives   for
                                             non-English languages.

                            GeoMatchStatement -> (structure)
                               A  rule statement used to identify web requests
                               based on country of origin.

                               CountryCodes -> (list)
                                   An array of  two-character  country  codes,
                                   for  example,  [  "US",  "CN"  ] , from the
                                   alpha-2 country ISO codes of the  ISO  3166
                                   international standard.

                                   (string)

                               ForwardedIPConfig -> (structure)
                                   The   configuration   for   inspecting   IP
                                   addresses in an HTTP header that you  spec-
                                   ify, instead of using the IP address that's
                                   reported by the web  request  origin.  Com-
                                   monly,  this  is  the X-Forwarded-For (XFF)
                                   header, but  you  can  specify  any  header
                                   name.

                                   NOTE:
                                      If the specified header isn't present in
                                      the request, WAF doesn't apply the  rule
                                      to the web request at all.

                                   HeaderName -> (string)
                                      The  name  of the HTTP header to use for
                                      the IP address. For example, to use  the
                                      X-Forwarded-For  (XFF)  header, set this
                                      to X-Forwarded-For .

                                      NOTE:
                                          If  the   specified   header   isn't
                                          present  in the request, WAF doesn't
                                          apply the rule to the web request at
                                          all.

                                   FallbackBehavior -> (string)
                                      The  match  status  to assign to the web
                                      request if the request  doesn't  have  a
                                      valid  IP address in the specified posi-
                                      tion.

                                      NOTE:
                                          If  the   specified   header   isn't
                                          present  in the request, WAF doesn't
                                          apply the rule to the web request at
                                          all.

                                      You  can  specify the following fallback
                                      behaviors:

                                      o MATCH  -  Treat  the  web  request  as
                                        matching   the   rule  statement.  WAF
                                        applies  the  rule   action   to   the
                                        request.

                                      o NO_MATCH  -  Treat  the web request as
                                        not matching the rule statement.

                            RuleGroupReferenceStatement -> (structure)
                               A rule statement used to run the rules that are
                               defined in a  RuleGroup . To use this, create a
                               rule group with your rules,  then  provide  the
                               ARN of the rule group in this statement.

                               You cannot nest a RuleGroupReferenceStatement ,
                               for example for use inside  a  NotStatement  or
                               OrStatement  .  You  can  only use a rule group
                               reference statement at the top level  inside  a
                               web ACL.

                               ARN -> (string)
                                   The  Amazon  Resource  Name  (ARN)  of  the
                                   entity.

                               ExcludedRules -> (list)
                                   The rules  in  the  referenced  rule  group
                                   whose  actions  are set to Count . When you
                                   exclude a rule, WAF evaluates it exactly as
                                   it  would  if  the rule action setting were
                                   Count . This is a useful option for testing
                                   the rules in a rule group without modifying
                                   how they handle your web traffic.

                                   (structure)
                                      Specifies a single rule in a rule  group
                                      whose  action  you  want  to override to
                                      Count . When you  exclude  a  rule,  WAF
                                      evaluates  it exactly as it would if the
                                      rule action setting were Count . This is
                                      a useful option for testing the rules in
                                      a rule group without modifying how  they
                                      handle your web traffic.

                                      Name -> (string)
                                          The  name  of  the rule whose action
                                          you want to override to Count .

                            IPSetReferenceStatement -> (structure)
                               A rule statement used to  detect  web  requests
                               coming  from particular IP addresses or address
                               ranges. To use  this,  create  an   IPSet  that
                               specifies  the  addresses  you  want to detect,
                               then use the ARN of that set in this statement.
                               To create an IP set, see  CreateIPSet .

                               Each  IP  set  rule  statement references an IP
                               set. You create and maintain the  set  indepen-
                               dent  of your rules. This allows you to use the
                               single set in multiple rules. When  you  update
                               the  referenced  set, WAF automatically updates
                               all rules that reference it.

                               ARN -> (string)
                                   The  Amazon  Resource  Name  (ARN)  of  the
                                   IPSet that this statement references.

                               IPSetForwardedIPConfig -> (structure)
                                   The   configuration   for   inspecting   IP
                                   addresses in an HTTP header that you  spec-
                                   ify, instead of using the IP address that's
                                   reported by the web  request  origin.  Com-
                                   monly,  this  is  the X-Forwarded-For (XFF)
                                   header, but  you  can  specify  any  header
                                   name.

                                   NOTE:
                                      If the specified header isn't present in
                                      the request, WAF doesn't apply the  rule
                                      to the web request at all.

                                   HeaderName -> (string)
                                      The  name  of the HTTP header to use for
                                      the IP address. For example, to use  the
                                      X-Forwarded-For  (XFF)  header, set this
                                      to X-Forwarded-For .

                                      NOTE:
                                          If  the   specified   header   isn't
                                          present  in the request, WAF doesn't
                                          apply the rule to the web request at
                                          all.

                                   FallbackBehavior -> (string)
                                      The  match  status  to assign to the web
                                      request if the request  doesn't  have  a
                                      valid  IP address in the specified posi-
                                      tion.

                                      NOTE:
                                          If  the   specified   header   isn't
                                          present  in the request, WAF doesn't
                                          apply the rule to the web request at
                                          all.

                                      You  can  specify the following fallback
                                      behaviors:

                                      o MATCH  -  Treat  the  web  request  as
                                        matching   the   rule  statement.  WAF
                                        applies  the  rule   action   to   the
                                        request.

                                      o NO_MATCH  -  Treat  the web request as
                                        not matching the rule statement.

                                   Position -> (string)
                                      The position in the header to search for
                                      the  IP  address. The header can contain
                                      IP addresses of the original client  and
                                      also of proxies. For example, the header
                                      value  could  be  10.1.1.1,   127.0.0.0,
                                      10.10.10.10  where  the first IP address
                                      identifies the original client  and  the
                                      rest  identify  proxies that the request
                                      went through.

                                      The options for  this  setting  are  the
                                      following:

                                      o FIRST  -  Inspect the first IP address
                                        in the list of  IP  addresses  in  the
                                        header.  This  is usually the client's
                                        original IP.

                                      o LAST - Inspect the last IP address  in
                                        the   list  of  IP  addresses  in  the
                                        header.

                                      o ANY - Inspect all IP addresses in  the
                                        header for a match. If the header con-
                                        tains more than 10 IP  addresses,  WAF
                                        inspects the last 10.

                            RegexPatternSetReferenceStatement -> (structure)
                               A  rule  statement  used  to search web request
                               components for  matches  with  regular  expres-
                               sions.  To  use this, create a  RegexPatternSet
                               that specifies the expressions that you want to
                               detect,  then  use  the ARN of that set in this
                               statement. A web request  matches  the  pattern
                               set  rule  statement  if  the request component
                               matches any of the patterns in the set. To cre-
                               ate  a  regex pattern set, see  CreateRegexPat-
                               ternSet .

                               Each regex pattern set  rule  statement  refer-
                               ences a regex pattern set. You create and main-
                               tain the set independent of  your  rules.  This
                               allows  you  to  use the single set in multiple
                               rules. When you update the referenced set,  WAF
                               automatically  updates all rules that reference
                               it.

                               ARN -> (string)
                                   The Amazon Resource Name (ARN) of the  Reg-
                                   exPatternSet  that  this  statement  refer-
                                   ences.

                               FieldToMatch -> (structure)
                                   The part of a web request that you want WAF
                                   to   inspect.  For  more  information,  see
                                   FieldToMatch .

                                   SingleHeader -> (structure)
                                      Inspect a  single  header.  Provide  the
                                      name of the header to inspect, for exam-
                                      ple, User-Agent or Referer .  This  set-
                                      ting isn't case sensitive.

                                      Example  JSON: "SingleHeader": { "Name":
                                      "haystack" }

                                      Name -> (string)
                                          The name  of  the  query  header  to
                                          inspect.

                                   SingleQueryArgument -> (structure)
                                      Inspect a single query argument. Provide
                                      the  name  of  the  query  argument   to
                                      inspect, such as UserName or SalesRegion
                                      . The name can be up  to  30  characters
                                      long and isn't case sensitive.

                                      This  is  used  only to indicate the web
                                      request component for WAF to inspect, in
                                      the  FieldToMatch specification.

                                      Example  JSON:  "SingleQueryArgument": {
                                      "Name": "myArgument" }

                                      Name -> (string)
                                          The name of the  query  argument  to
                                          inspect.

                                   AllQueryArguments -> (structure)
                                      Inspect all query arguments.

                                   UriPath -> (structure)
                                      Inspect  the  request  URI path. This is
                                      the part of a web request  that  identi-
                                      fies    a    resource,    for   example,
                                      /images/daily-ad.jpg .

                                   QueryString -> (structure)
                                      Inspect the query string.  This  is  the
                                      part  of  a  URL  that appears after a ?
                                      character, if any.

                                   Body -> (structure)
                                      Inspect the request body as plain  text.
                                      The request body immediately follows the
                                      request headers. This is the part  of  a
                                      request  that  contains  any  additional
                                      data that you want to send to  your  web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note that only  the  first  8  KB  (8192
                                      bytes) of the request body are forwarded
                                      to WAF for inspection by the  underlying
                                      host  service.  If  you  don't  need  to
                                      inspect more than 8 KB, you can  guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes in by combining a  statement  that
                                      inspects  the  body  of the web request,
                                      such as  ByteMatchStatement  or   Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8  KB  size  limit  on  the  body of the
                                      request. WAF doesn't support  inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                   Method -> (structure)
                                      Inspect  the  HTTP  method.  The  method
                                      indicates the type of operation that the
                                      request is asking the origin to perform.

                                   JsonBody -> (structure)
                                      Inspect  the  request  body as JSON. The
                                      request  body  immediately  follows  the
                                      request  headers.  This is the part of a
                                      request  that  contains  any  additional
                                      data  that  you want to send to your web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note  that  only  the  first  8 KB (8192
                                      bytes) of the request body are forwarded
                                      to  WAF for inspection by the underlying
                                      host  service.  If  you  don't  need  to
                                      inspect  more than 8 KB, you can guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes  in  by combining a statement that
                                      inspects the body of  the  web  request,
                                      such  as   ByteMatchStatement or  Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8 KB size  limit  on  the  body  of  the
                                      request.  WAF doesn't support inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                      MatchPattern -> (structure)
                                          The patterns to look for in the JSON
                                          body. WAF inspects  the  results  of
                                          these  pattern  matches  against the
                                          rule inspection criteria.

                                          All -> (structure)
                                             Match all of  the  elements.  See
                                             also MatchScope in  JsonBody .

                                             You must specify either this set-
                                             ting or  the  IncludedPaths  set-
                                             ting, but not both.

                                          IncludedPaths -> (list)
                                             Match  only the specified include
                                             paths.  See  also  MatchScope  in
                                             JsonBody .

                                             Provide  the  include paths using
                                             JSON Pointer syntax. For example,
                                             "IncludedPaths": ["/dogs/0/name",
                                             "/dogs/1/name"] . For information
                                             about this syntax, see the Inter-
                                             net Engineering Task Force (IETF)
                                             documentation  JavaScript  Object
                                             Notation (JSON) Pointer .

                                             You must specify either this set-
                                             ting  or the All setting, but not
                                             both.

                                             NOTE:
                                                 Don't  use  this  option   to
                                                 include  all  paths. Instead,
                                                 use the All setting.

                                             (string)

                                      MatchScope -> (string)
                                          The  parts  of  the  JSON  to  match
                                          against  using the MatchPattern . If
                                          you  specify  All  ,   WAF   matches
                                          against keys and values.

                                      InvalidFallbackBehavior -> (string)
                                          What  WAF  should  do if it fails to
                                          completely parse the JSON body.  The
                                          options are the following:

                                          o EVALUATE_AS_STRING  -  Inspect the
                                            body as plain  text.  WAF  applies
                                            the   text   transformations   and
                                            inspection   criteria   that   you
                                            defined for the JSON inspection to
                                            the body text string.

                                          o MATCH - Treat the web  request  as
                                            matching  the  rule statement. WAF
                                            applies the  rule  action  to  the
                                            request.

                                          o NO_MATCH  -  Treat the web request
                                            as not matching  the  rule  state-
                                            ment.

                                          If  you  don't provide this setting,
                                          WAF parses and evaluates the content
                                          only up to the first parsing failure
                                          that it encounters.

                                          WAF  does  its  best  to  parse  the
                                          entire   JSON  body,  but  might  be
                                          forced to stop for reasons  such  as
                                          invalid  characters, duplicate keys,
                                          truncation, and  any  content  whose
                                          root  node  isn't  an  object  or an
                                          array.

                                          WAF parses the JSON in the following
                                          examples  as  two  valid  key, value
                                          pairs:

                                          o Missing                     comma:
                                            {"key1":"value1""key2":"value2"}

                                          o Missing                     colon:
                                            {"key1":"value1","key2""value2"}

                                          o Extra                      colons:
                                            {"key1"::"value1","key2""value2"}

                               TextTransformations -> (list)
                                   Text  transformations eliminate some of the
                                   unusual formatting that  attackers  use  in
                                   web  requests in an effort to bypass detec-
                                   tion. If you specify one or more  transfor-
                                   mations  in  a rule statement, WAF performs
                                   all transformations on the content  of  the
                                   request   component  identified  by  Field-
                                   ToMatch , starting from the lowest priority
                                   setting,  before inspecting the content for
                                   a match.

                                   (structure)
                                      Text transformations eliminate  some  of
                                      the  unusual  formatting  that attackers
                                      use in web  requests  in  an  effort  to
                                      bypass detection.

                                      Priority -> (integer)
                                          Sets  the  relative processing order
                                          for  multiple  transformations  that
                                          are  defined  for  a rule statement.
                                          WAF processes  all  transformations,
                                          from  lowest  priority  to  highest,
                                          before  inspecting  the  transformed
                                          content.  The  priorities don't need
                                          to be consecutive, but they must all
                                          be different.

                                      Type -> (string)
                                          You can specify the following trans-
                                          formation types:
                                             BASE64_DECODE - Decode  a  Base64
                                             -encoded string.

                                             BASE64_DECODE_EXT   -   Decode  a
                                             Base64 -encoded string, but use a
                                             forgiving   implementation   that
                                             ignores  characters  that  aren't
                                             valid.

                                             CMD_LINE - Command-line transfor-
                                             mations.  These  are  helpful  in
                                             reducing effectiveness of attack-
                                             ers who inject an operating  sys-
                                             tem  command-line command and use
                                             unusual  formatting  to  disguise
                                             some or all of the command.

                                          o Delete the following characters: \
                                            " ' ^

                                          o Delete spaces before the following
                                            characters: / (

                                          o Replace  the  following characters
                                            with a space: , ;

                                          o Replace multiple spaces  with  one
                                            space

                                          o Convert uppercase letters (A-Z) to
                                            lowercase (a-z)
                                             COMPRESS_WHITE_SPACE  -   Replace
                                             these  characters  with  a  space
                                             character (decimal 32):

                                          o \f , formfeed, decimal 12

                                          o \t , tab, decimal 9

                                          o \n , newline, decimal 10

                                          o \r , carriage return, decimal 13

                                          o \v , vertical tab, decimal 11

                                          o Non-breaking space, decimal 160
                                             COMPRESS_WHITE_SPACE         also
                                             replaces multiple spaces with one
                                             space.

                                             CSS_DECODE  -  Decode  characters
                                             that  were  encoded using CSS 2.x
                                             escape rules syndata.html#charac-
                                             ters  .  This function uses up to
                                             two   bytes   in   the   decoding
                                             process,   so   it  can  help  to
                                             uncover  ASCII  characters   that
                                             were  encoded  using CSS encoding
                                             that   wouldnt    typically    be
                                             encoded.   It's  also  useful  in
                                             countering evasion,  which  is  a
                                             combination  of  a  backslash and
                                             non-hexadecimal  characters.  For
                                             example,      ja\vascript     for
                                             javascript.

                                             ESCAPE_SEQ_DECODE  -  Decode  the
                                             following     ANSI    C    escape
                                             sequences: \a , \b , \f , \n , \r
                                             ,  \t  , \v , \\ , \? , \' , \" ,
                                             \xHH     (hexadecimal),     \0OOO
                                             (octal).  Encodings  that  aren't
                                             valid remain in the output.

                                             HEX_DECODE - Decode a  string  of
                                             hexadecimal   characters  into  a
                                             binary.

                                             HTML_ENTITY_DECODE   -    Replace
                                             HTML-encoded    characters   with
                                             unencoded             characters.
                                             HTML_ENTITY_DECODE performs these
                                             operations:

                                          o Replaces (ampersand)quot; with "

                                          o Replaces (ampersand)nbsp;  with  a
                                            non-breaking space, decimal 160

                                          o Replaces   (ampersand)lt;  with  a
                                            "less than" symbol

                                          o Replaces (ampersand)gt; with >

                                          o Replaces characters that are  rep-
                                            resented  in  hexadecimal  format,
                                            (ampersand)#xhhhh; , with the cor-
                                            responding characters

                                          o Replaces  characters that are rep-
                                            resented   in   decimal    format,
                                            (ampersand)#nnnn;  , with the cor-
                                            responding characters
                                             JS_DECODE  -  Decode   JavaScript
                                             escape sequences. If a \  u  HHHH
                                             code is in the  full-width  ASCII
                                             code  range  of  FF01-FF5E , then
                                             the higher byte is used to detect
                                             and  adjust  the  lower  byte. If
                                             not, only the lower byte is  used
                                             and  the  higher  byte is zeroed,
                                             causing a possible loss of infor-
                                             mation.

                                             LOWERCASE   -  Convert  uppercase
                                             letters (A-Z) to lowercase (a-z).

                                             MD5  - Calculate an MD5 hash from
                                             the data in the input.  The  com-
                                             puted  hash  is  in  a raw binary
                                             form.

                                             NONE - Specify NONE if you  don't
                                             want any text transformations.

                                             NORMALIZE_PATH  - Remove multiple
                                             slashes,  directory   self-refer-
                                             ences,  and directory back-refer-
                                             ences that are not at the  begin-
                                             ning  of  the input from an input
                                             string.

                                             NORMALIZE_PATH_WIN - This is  the
                                             same   as  NORMALIZE_PATH  ,  but
                                             first converts backslash  charac-
                                             ters to forward slashes.

                                             REMOVE_NULLS  -  Remove  all NULL
                                             bytes from the input.

                                             REPLACE_COMMENTS -  Replace  each
                                             occurrence  of  a C-style comment
                                             (/* ... */ ) with a single space.
                                             Multiple  consecutive occurrences
                                             are not compressed.  Unterminated
                                             comments are also replaced with a
                                             space (ASCII  0x20).  However,  a
                                             standalone  termination of a com-
                                             ment (*/ ) is not acted upon.

                                             REPLACE_NULLS  -   Replace   NULL
                                             bytes  in  the  input  with space
                                             characters (ASCII 0x20 ).

                                             SQL_HEX_DECODE - Decode  SQL  hex
                                             data. Example (0x414243 ) will be
                                             decoded to (ABC ).

                                             URL_DECODE - Decode a URL-encoded
                                             value.

                                             URL_DECODE_UNI  - Like URL_DECODE
                                             ,   but    with    support    for
                                             Microsoft-specific  %u  encoding.
                                             If the code is in the  full-width
                                             ASCII  code  range of FF01-FF5E ,
                                             the higher byte is used to detect
                                             and adjust the lower byte. Other-
                                             wise, only the lower byte is used
                                             and the higher byte is zeroed.

                                             UTF8_TO_UNICODE   -  Convert  all
                                             UTF-8 character sequences to Uni-
                                             code. This helps input normaliza-
                                             tion, and minimizing  false-posi-
                                             tives   and  false-negatives  for
                                             non-English languages.

                            RateBasedStatement -> (structure)
                               A rate-based rule tracks the rate  of  requests
                               for  each  originating IP address, and triggers
                               the rule action when the rate exceeds  a  limit
                               that  you  specify on the number of requests in
                               any 5-minute time span. You can use this to put
                               a  temporary  block  on  requests  from  an  IP
                               address that is sending excessive requests.

                               WAF tracks and manages web requests  separately
                               for each instance of a rate-based rule that you
                               use. For  example,  if  you  provide  the  same
                               rate-based  rule settings in two web ACLs, each
                               of the two rule statements represents  a  sepa-
                               rate  instance  of the rate-based rule and gets
                               its own tracking and management by WAF. If  you
                               define  a  rate-based rule inside a rule group,
                               and  then  use  that  rule  group  in  multiple
                               places, each use creates a separate instance of
                               the rate-based rule that gets its own  tracking
                               and management by WAF.

                               When the rule action triggers, WAF blocks addi-
                               tional requests from the IP address  until  the
                               request rate falls below the limit.

                               You   can  optionally  nest  another  statement
                               inside the rate-based statement, to narrow  the
                               scope  of  the  rule  so  that  it  only counts
                               requests that match the nested  statement.  For
                               example, based on recent requests that you have
                               seen from  an  attacker,  you  might  create  a
                               rate-based  rule  with a nested AND rule state-
                               ment that contains the following nested  state-
                               ments:

                               o An  IP  match  statement  with an IP set that
                                 specified the address 192.0.2.44.

                               o A string match statement that searches in the
                                 User-Agent header for the string BadBot.

                               In this rate-based rule, you also define a rate
                               limit. For this  example,  the  rate  limit  is
                               1,000.  Requests  that  meet both of the condi-
                               tions in the statements  are  counted.  If  the
                               count  exceeds 1,000 requests per five minutes,
                               the rule action triggers. Requests that do  not
                               meet  both  conditions  are not counted towards
                               the rate limit and are  not  affected  by  this
                               rule.

                               You  cannot  nest  a  RateBasedStatement inside
                               another statement, for example  inside  a  Not-
                               Statement  or  OrStatement  .  You can define a
                               RateBasedStatement inside a web ACL and  inside
                               a rule group.

                               Limit -> (long)
                                   The  limit  on requests per 5-minute period
                                   for a single originating IP address. If the
                                   statement  includes  a ScopeDownStatement ,
                                   this limit is applied only to the  requests
                                   that match the statement.

                               AggregateKeyType -> (string)
                                   Setting that indicates how to aggregate the
                                   request counts. The options are the follow-
                                   ing:

                                   o IP  - Aggregate the request counts on the
                                     IP address from the web request origin.

                                   o FORWARDED_IP  -  Aggregate  the   request
                                     counts on the first IP address in an HTTP
                                     header. If you use  this,  configure  the
                                     ForwardedIPConfig , to specify the header
                                     to use.

                               (  ...  recursive  ...  )ForwardedIPConfig   ->
                               (structure)
                                   The   configuration   for   inspecting   IP
                                   addresses in an HTTP header that you  spec-
                                   ify, instead of using the IP address that's
                                   reported by the web  request  origin.  Com-
                                   monly,  this  is  the X-Forwarded-For (XFF)
                                   header, but  you  can  specify  any  header
                                   name.

                                   NOTE:
                                      If the specified header isn't present in
                                      the request, WAF doesn't apply the  rule
                                      to the web request at all.

                                   This is required if AggregateKeyType is set
                                   to FORWARDED_IP .

                                   HeaderName -> (string)
                                      The name of the HTTP header to  use  for
                                      the  IP address. For example, to use the
                                      X-Forwarded-For (XFF) header,  set  this
                                      to X-Forwarded-For .

                                      NOTE:
                                          If   the   specified   header  isn't
                                          present in the request, WAF  doesn't
                                          apply the rule to the web request at
                                          all.

                                   FallbackBehavior -> (string)
                                      The match status to assign  to  the  web
                                      request  if  the  request doesn't have a
                                      valid IP address in the specified  posi-
                                      tion.

                                      NOTE:
                                          If   the   specified   header  isn't
                                          present in the request, WAF  doesn't
                                          apply the rule to the web request at
                                          all.

                                      You can specify the  following  fallback
                                      behaviors:

                                      o MATCH  -  Treat  the  web  request  as
                                        matching  the  rule   statement.   WAF
                                        applies   the   rule   action  to  the
                                        request.

                                      o NO_MATCH - Treat the  web  request  as
                                        not matching the rule statement.

                            AndStatement -> (structure)
                               A  logical rule statement used to combine other
                               rule statements with  AND  logic.  You  provide
                               more  than  one  Statement within the AndState-
                               ment .

                               Statements -> (list)
                                   The statements to combine with  AND  logic.
                                   You  can  use  any  statements  that can be
                                   nested.

                                   ( ... recursive ... )

                            OrStatement -> (structure)
                               A logical rule statement used to combine  other
                               rule statements with OR logic. You provide more
                               than one  Statement within the OrStatement .

                               Statements -> (list)
                                   The statements to combine  with  OR  logic.
                                   You  can  use  any  statements  that can be
                                   nested.

                                   ( ... recursive ... )

                            NotStatement -> (structure)
                               A logical rule statement  used  to  negate  the
                               results  of another rule statement. You provide
                               one  Statement within the NotStatement .

                               ( ... recursive ... )

                            ManagedRuleGroupStatement -> (structure)
                               A rule statement used to run the rules that are
                               defined  in  a managed rule group. To use this,
                               provide the vendor name and  the  name  of  the
                               rule  group in this statement. You can retrieve
                               the required names by calling   ListAvailableM-
                               anagedRuleGroups .

                               You  cannot  nest a ManagedRuleGroupStatement ,
                               for example for use inside  a  NotStatement  or
                               OrStatement  .  It  can only be referenced as a
                               top-level statement within a rule.

                               VendorName -> (string)
                                   The name of the managed rule group  vendor.
                                   You  use  this,  along  with the rule group
                                   name, to identify the rule group.

                               Name -> (string)
                                   The name of the managed rule group. You use
                                   this,  along with the vendor name, to iden-
                                   tify the rule group.

                               Version -> (string)
                                   The version of the managed  rule  group  to
                                   use.  If you specify this, the version set-
                                   ting is fixed until you change it.  If  you
                                   don't  specify  this, WAF uses the vendor's
                                   default version, and then keeps the version
                                   at  the  vendor's  default  when the vendor
                                   updates the managed rule group settings.

                               ExcludedRules -> (list)
                                   The rules  in  the  referenced  rule  group
                                   whose  actions  are set to Count . When you
                                   exclude a rule, WAF evaluates it exactly as
                                   it  would  if  the rule action setting were
                                   Count . This is a useful option for testing
                                   the rules in a rule group without modifying
                                   how they handle your web traffic.

                                   (structure)
                                      Specifies a single rule in a rule  group
                                      whose  action  you  want  to override to
                                      Count . When you  exclude  a  rule,  WAF
                                      evaluates  it exactly as it would if the
                                      rule action setting were Count . This is
                                      a useful option for testing the rules in
                                      a rule group without modifying how  they
                                      handle your web traffic.

                                      Name -> (string)
                                          The  name  of  the rule whose action
                                          you want to override to Count .

                               ( ... recursive ... )

                            LabelMatchStatement -> (structure)
                               A rule statement that defines  a  string  match
                               search  against  labels that have been added to
                               the web request by rules that have already  run
                               in the web ACL.

                               The label match statement provides the label or
                               namespace  string  to  search  for.  The  label
                               string can represent a part or all of the fully
                               qualified label name that had been added to the
                               web request. Fully qualified labels have a pre-
                               fix, optional namespaces, and label  name.  The
                               prefix  identifies  the  rule  group or web ACL
                               context of the rule that added  the  label.  If
                               you  do not provide the fully qualified name in
                               your  label  match  string,  WAF  performs  the
                               search  for  labels that were added in the same
                               context as the label match statement.

                               Scope -> (string)
                                   Specify whether you want to match using the
                                   label name or just the namespace.

                               Key -> (string)
                                   The  string  to  match against. The setting
                                   you provide for this depends on  the  match
                                   statement's Scope setting:

                                   o If  the Scope indicates LABEL , then this
                                     specification must include the  name  and
                                     can   include  any  number  of  preceding
                                     namespace specifications and prefix up to
                                     providing the fully qualified label name.

                                   o If the Scope indicates NAMESPACE  ,  then
                                     this specification can include any number
                                     of contiguous namespace strings, and  can
                                     include the entire label namespace prefix
                                     from the rule group or web ACL where  the
                                     label originates.

                                   Labels are case sensitive and components of
                                   a label must be  separated  by  colon,  for
                                   example NS1:NS2:name .

                            RegexMatchStatement -> (structure)
                               A  rule  statement  used  to search web request
                               components for a match against a single regular
                               expression.

                               RegexString -> (string)
                                   The string representing the regular expres-
                                   sion.

                               FieldToMatch -> (structure)
                                   The part of a web request that you want WAF
                                   to   inspect.  For  more  information,  see
                                   FieldToMatch .

                                   SingleHeader -> (structure)
                                      Inspect a  single  header.  Provide  the
                                      name of the header to inspect, for exam-
                                      ple, User-Agent or Referer .  This  set-
                                      ting isn't case sensitive.

                                      Example  JSON: "SingleHeader": { "Name":
                                      "haystack" }

                                      Name -> (string)
                                          The name  of  the  query  header  to
                                          inspect.

                                   SingleQueryArgument -> (structure)
                                      Inspect a single query argument. Provide
                                      the  name  of  the  query  argument   to
                                      inspect, such as UserName or SalesRegion
                                      . The name can be up  to  30  characters
                                      long and isn't case sensitive.

                                      This  is  used  only to indicate the web
                                      request component for WAF to inspect, in
                                      the  FieldToMatch specification.

                                      Example  JSON:  "SingleQueryArgument": {
                                      "Name": "myArgument" }

                                      Name -> (string)
                                          The name of the  query  argument  to
                                          inspect.

                                   AllQueryArguments -> (structure)
                                      Inspect all query arguments.

                                   UriPath -> (structure)
                                      Inspect  the  request  URI path. This is
                                      the part of a web request  that  identi-
                                      fies    a    resource,    for   example,
                                      /images/daily-ad.jpg .

                                   QueryString -> (structure)
                                      Inspect the query string.  This  is  the
                                      part  of  a  URL  that appears after a ?
                                      character, if any.

                                   Body -> (structure)
                                      Inspect the request body as plain  text.
                                      The request body immediately follows the
                                      request headers. This is the part  of  a
                                      request  that  contains  any  additional
                                      data that you want to send to  your  web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note that only  the  first  8  KB  (8192
                                      bytes) of the request body are forwarded
                                      to WAF for inspection by the  underlying
                                      host  service.  If  you  don't  need  to
                                      inspect more than 8 KB, you can  guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes in by combining a  statement  that
                                      inspects  the  body  of the web request,
                                      such as  ByteMatchStatement  or   Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8  KB  size  limit  on  the  body of the
                                      request. WAF doesn't support  inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                   Method -> (structure)
                                      Inspect  the  HTTP  method.  The  method
                                      indicates the type of operation that the
                                      request is asking the origin to perform.

                                   JsonBody -> (structure)
                                      Inspect  the  request  body as JSON. The
                                      request  body  immediately  follows  the
                                      request  headers.  This is the part of a
                                      request  that  contains  any  additional
                                      data  that  you want to send to your web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note  that  only  the  first  8 KB (8192
                                      bytes) of the request body are forwarded
                                      to  WAF for inspection by the underlying
                                      host  service.  If  you  don't  need  to
                                      inspect  more than 8 KB, you can guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes  in  by combining a statement that
                                      inspects the body of  the  web  request,
                                      such  as   ByteMatchStatement or  Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8 KB size  limit  on  the  body  of  the
                                      request.  WAF doesn't support inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                      MatchPattern -> (structure)
                                          The patterns to look for in the JSON
                                          body. WAF inspects  the  results  of
                                          these  pattern  matches  against the
                                          rule inspection criteria.

                                          All -> (structure)
                                             Match all of  the  elements.  See
                                             also MatchScope in  JsonBody .

                                             You must specify either this set-
                                             ting or  the  IncludedPaths  set-
                                             ting, but not both.

                                          IncludedPaths -> (list)
                                             Match  only the specified include
                                             paths.  See  also  MatchScope  in
                                             JsonBody .

                                             Provide  the  include paths using
                                             JSON Pointer syntax. For example,
                                             "IncludedPaths": ["/dogs/0/name",
                                             "/dogs/1/name"] . For information
                                             about this syntax, see the Inter-
                                             net Engineering Task Force (IETF)
                                             documentation  JavaScript  Object
                                             Notation (JSON) Pointer .

                                             You must specify either this set-
                                             ting  or the All setting, but not
                                             both.

                                             NOTE:
                                                 Don't  use  this  option   to
                                                 include  all  paths. Instead,
                                                 use the All setting.

                                             (string)

                                      MatchScope -> (string)
                                          The  parts  of  the  JSON  to  match
                                          against  using the MatchPattern . If
                                          you  specify  All  ,   WAF   matches
                                          against keys and values.

                                      InvalidFallbackBehavior -> (string)
                                          What  WAF  should  do if it fails to
                                          completely parse the JSON body.  The
                                          options are the following:

                                          o EVALUATE_AS_STRING  -  Inspect the
                                            body as plain  text.  WAF  applies
                                            the   text   transformations   and
                                            inspection   criteria   that   you
                                            defined for the JSON inspection to
                                            the body text string.

                                          o MATCH - Treat the web  request  as
                                            matching  the  rule statement. WAF
                                            applies the  rule  action  to  the
                                            request.

                                          o NO_MATCH  -  Treat the web request
                                            as not matching  the  rule  state-
                                            ment.

                                          If  you  don't provide this setting,
                                          WAF parses and evaluates the content
                                          only up to the first parsing failure
                                          that it encounters.

                                          WAF  does  its  best  to  parse  the
                                          entire   JSON  body,  but  might  be
                                          forced to stop for reasons  such  as
                                          invalid  characters, duplicate keys,
                                          truncation, and  any  content  whose
                                          root  node  isn't  an  object  or an
                                          array.

                                          WAF parses the JSON in the following
                                          examples  as  two  valid  key, value
                                          pairs:

                                          o Missing                     comma:
                                            {"key1":"value1""key2":"value2"}

                                          o Missing                     colon:
                                            {"key1":"value1","key2""value2"}

                                          o Extra                      colons:
                                            {"key1"::"value1","key2""value2"}

                               TextTransformations -> (list)
                                   Text  transformations eliminate some of the
                                   unusual formatting that  attackers  use  in
                                   web  requests in an effort to bypass detec-
                                   tion. If you specify one or more  transfor-
                                   mations  in  a rule statement, WAF performs
                                   all transformations on the content  of  the
                                   request   component  identified  by  Field-
                                   ToMatch , starting from the lowest priority
                                   setting,  before inspecting the content for
                                   a match.

                                   (structure)
                                      Text transformations eliminate  some  of
                                      the  unusual  formatting  that attackers
                                      use in web  requests  in  an  effort  to
                                      bypass detection.

                                      Priority -> (integer)
                                          Sets  the  relative processing order
                                          for  multiple  transformations  that
                                          are  defined  for  a rule statement.
                                          WAF processes  all  transformations,
                                          from  lowest  priority  to  highest,
                                          before  inspecting  the  transformed
                                          content.  The  priorities don't need
                                          to be consecutive, but they must all
                                          be different.

                                      Type -> (string)
                                          You can specify the following trans-
                                          formation types:
                                             BASE64_DECODE - Decode  a  Base64
                                             -encoded string.

                                             BASE64_DECODE_EXT   -   Decode  a
                                             Base64 -encoded string, but use a
                                             forgiving   implementation   that
                                             ignores  characters  that  aren't
                                             valid.

                                             CMD_LINE - Command-line transfor-
                                             mations.  These  are  helpful  in
                                             reducing effectiveness of attack-
                                             ers who inject an operating  sys-
                                             tem  command-line command and use
                                             unusual  formatting  to  disguise
                                             some or all of the command.

                                          o Delete the following characters: \
                                            " ' ^

                                          o Delete spaces before the following
                                            characters: / (

                                          o Replace  the  following characters
                                            with a space: , ;

                                          o Replace multiple spaces  with  one
                                            space

                                          o Convert uppercase letters (A-Z) to
                                            lowercase (a-z)
                                             COMPRESS_WHITE_SPACE  -   Replace
                                             these  characters  with  a  space
                                             character (decimal 32):

                                          o \f , formfeed, decimal 12

                                          o \t , tab, decimal 9

                                          o \n , newline, decimal 10

                                          o \r , carriage return, decimal 13

                                          o \v , vertical tab, decimal 11

                                          o Non-breaking space, decimal 160
                                             COMPRESS_WHITE_SPACE         also
                                             replaces multiple spaces with one
                                             space.

                                             CSS_DECODE  -  Decode  characters
                                             that  were  encoded using CSS 2.x
                                             escape rules syndata.html#charac-
                                             ters  .  This function uses up to
                                             two   bytes   in   the   decoding
                                             process,   so   it  can  help  to
                                             uncover  ASCII  characters   that
                                             were  encoded  using CSS encoding
                                             that   wouldnt    typically    be
                                             encoded.   It's  also  useful  in
                                             countering evasion,  which  is  a
                                             combination  of  a  backslash and
                                             non-hexadecimal  characters.  For
                                             example,      ja\vascript     for
                                             javascript.

                                             ESCAPE_SEQ_DECODE  -  Decode  the
                                             following     ANSI    C    escape
                                             sequences: \a , \b , \f , \n , \r
                                             ,  \t  , \v , \\ , \? , \' , \" ,
                                             \xHH     (hexadecimal),     \0OOO
                                             (octal).  Encodings  that  aren't
                                             valid remain in the output.

                                             HEX_DECODE - Decode a  string  of
                                             hexadecimal   characters  into  a
                                             binary.

                                             HTML_ENTITY_DECODE   -    Replace
                                             HTML-encoded    characters   with
                                             unencoded             characters.
                                             HTML_ENTITY_DECODE performs these
                                             operations:

                                          o Replaces (ampersand)quot; with "

                                          o Replaces (ampersand)nbsp;  with  a
                                            non-breaking space, decimal 160

                                          o Replaces   (ampersand)lt;  with  a
                                            "less than" symbol

                                          o Replaces (ampersand)gt; with >

                                          o Replaces characters that are  rep-
                                            resented  in  hexadecimal  format,
                                            (ampersand)#xhhhh; , with the cor-
                                            responding characters

                                          o Replaces  characters that are rep-
                                            resented   in   decimal    format,
                                            (ampersand)#nnnn;  , with the cor-
                                            responding characters
                                             JS_DECODE  -  Decode   JavaScript
                                             escape sequences. If a \  u  HHHH
                                             code is in the  full-width  ASCII
                                             code  range  of  FF01-FF5E , then
                                             the higher byte is used to detect
                                             and  adjust  the  lower  byte. If
                                             not, only the lower byte is  used
                                             and  the  higher  byte is zeroed,
                                             causing a possible loss of infor-
                                             mation.

                                             LOWERCASE   -  Convert  uppercase
                                             letters (A-Z) to lowercase (a-z).

                                             MD5  - Calculate an MD5 hash from
                                             the data in the input.  The  com-
                                             puted  hash  is  in  a raw binary
                                             form.

                                             NONE - Specify NONE if you  don't
                                             want any text transformations.

                                             NORMALIZE_PATH  - Remove multiple
                                             slashes,  directory   self-refer-
                                             ences,  and directory back-refer-
                                             ences that are not at the  begin-
                                             ning  of  the input from an input
                                             string.

                                             NORMALIZE_PATH_WIN - This is  the
                                             same   as  NORMALIZE_PATH  ,  but
                                             first converts backslash  charac-
                                             ters to forward slashes.

                                             REMOVE_NULLS  -  Remove  all NULL
                                             bytes from the input.

                                             REPLACE_COMMENTS -  Replace  each
                                             occurrence  of  a C-style comment
                                             (/* ... */ ) with a single space.
                                             Multiple  consecutive occurrences
                                             are not compressed.  Unterminated
                                             comments are also replaced with a
                                             space (ASCII  0x20).  However,  a
                                             standalone  termination of a com-
                                             ment (*/ ) is not acted upon.

                                             REPLACE_NULLS  -   Replace   NULL
                                             bytes  in  the  input  with space
                                             characters (ASCII 0x20 ).

                                             SQL_HEX_DECODE - Decode  SQL  hex
                                             data. Example (0x414243 ) will be
                                             decoded to (ABC ).

                                             URL_DECODE - Decode a URL-encoded
                                             value.

                                             URL_DECODE_UNI  - Like URL_DECODE
                                             ,   but    with    support    for
                                             Microsoft-specific  %u  encoding.
                                             If the code is in the  full-width
                                             ASCII  code  range of FF01-FF5E ,
                                             the higher byte is used to detect
                                             and adjust the lower byte. Other-
                                             wise, only the lower byte is used
                                             and the higher byte is zeroed.

                                             UTF8_TO_UNICODE   -  Convert  all
                                             UTF-8 character sequences to Uni-
                                             code. This helps input normaliza-
                                             tion, and minimizing  false-posi-
                                             tives   and  false-negatives  for
                                             non-English languages.

                 OrStatement -> (structure)
                     A logical rule  statement  used  to  combine  other  rule
                     statements  with  OR  logic.  You  provide  more than one
                     Statement within the OrStatement .

                     Statements -> (list)
                        The statements to combine with OR logic. You  can  use
                        any statements that can be nested.

                        (structure)
                            The  processing guidance for a  Rule , used by WAF
                            to determine whether a  web  request  matches  the
                            rule.

                            ByteMatchStatement -> (structure)
                               A  rule  statement  that defines a string match
                               search for WAF to apply to  web  requests.  The
                               byte  match  statement  provides  the  bytes to
                               search for, the location in requests  that  you
                               want  WAF  to  search,  and other settings. The
                               bytes to search for are typically a string that
                               corresponds  with  ASCII characters. In the WAF
                               console and the developer guide, this  is  ref-
                               ered to as a string match statement.

                               SearchString -> (blob)
                                   A  string value that you want WAF to search
                                   for. WAF searches only in the part  of  web
                                   requests  that you designate for inspection
                                   in  FieldToMatch . The  maximum  length  of
                                   the value is 50 bytes.

                                   Valid  values  depend on the component that
                                   you specify for inspection in  FieldToMatch
                                   :

                                   o Method  :  The  HTTP method that you want
                                     WAF to search  for.  This  indicates  the
                                     type   of   operation  specified  in  the
                                     request.

                                   o UriPath : The value that you want WAF  to
                                     search  for in the URI path, for example,
                                     /images/daily-ad.jpg .

                                   If SearchString includes alphabetic charac-
                                   ters  A-Z  and  a-z, note that the value is
                                   case sensitive.
                                      If you're using the WAF API

                                   Specify a  base64-encoded  version  of  the
                                   value.  The  maximum  length  of  the value
                                   before you base64-encode it is 50 bytes.

                                   For example, suppose the value of  Type  is
                                   HEADER  and the value of Data is User-Agent
                                   . If you  want  to  search  the  User-Agent
                                   header   for   the   value   BadBot  ,  you
                                   base64-encode     BadBot     using     MIME
                                   base64-encoding  and  include the resulting
                                   value, QmFkQm90 , in the value  of  Search-
                                   String .
                                      If  you're  using  the CLI or one of the
                                      Amazon Web Services SDKs

                                   The value that you want WAF to search  for.
                                   The  SDK  automatically  base64 encodes the
                                   value.

                               FieldToMatch -> (structure)
                                   The part of a web request that you want WAF
                                   to   inspect.  For  more  information,  see
                                   FieldToMatch .

                                   SingleHeader -> (structure)
                                      Inspect a  single  header.  Provide  the
                                      name of the header to inspect, for exam-
                                      ple, User-Agent or Referer .  This  set-
                                      ting isn't case sensitive.

                                      Example  JSON: "SingleHeader": { "Name":
                                      "haystack" }

                                      Name -> (string)
                                          The name  of  the  query  header  to
                                          inspect.

                                   SingleQueryArgument -> (structure)
                                      Inspect a single query argument. Provide
                                      the  name  of  the  query  argument   to
                                      inspect, such as UserName or SalesRegion
                                      . The name can be up  to  30  characters
                                      long and isn't case sensitive.

                                      This  is  used  only to indicate the web
                                      request component for WAF to inspect, in
                                      the  FieldToMatch specification.

                                      Example  JSON:  "SingleQueryArgument": {
                                      "Name": "myArgument" }

                                      Name -> (string)
                                          The name of the  query  argument  to
                                          inspect.

                                   AllQueryArguments -> (structure)
                                      Inspect all query arguments.

                                   UriPath -> (structure)
                                      Inspect  the  request  URI path. This is
                                      the part of a web request  that  identi-
                                      fies    a    resource,    for   example,
                                      /images/daily-ad.jpg .

                                   QueryString -> (structure)
                                      Inspect the query string.  This  is  the
                                      part  of  a  URL  that appears after a ?
                                      character, if any.

                                   Body -> (structure)
                                      Inspect the request body as plain  text.
                                      The request body immediately follows the
                                      request headers. This is the part  of  a
                                      request  that  contains  any  additional
                                      data that you want to send to  your  web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note that only  the  first  8  KB  (8192
                                      bytes) of the request body are forwarded
                                      to WAF for inspection by the  underlying
                                      host  service.  If  you  don't  need  to
                                      inspect more than 8 KB, you can  guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes in by combining a  statement  that
                                      inspects  the  body  of the web request,
                                      such as  ByteMatchStatement  or   Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8  KB  size  limit  on  the  body of the
                                      request. WAF doesn't support  inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                   Method -> (structure)
                                      Inspect  the  HTTP  method.  The  method
                                      indicates the type of operation that the
                                      request is asking the origin to perform.

                                   JsonBody -> (structure)
                                      Inspect  the  request  body as JSON. The
                                      request  body  immediately  follows  the
                                      request  headers.  This is the part of a
                                      request  that  contains  any  additional
                                      data  that  you want to send to your web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note  that  only  the  first  8 KB (8192
                                      bytes) of the request body are forwarded
                                      to  WAF for inspection by the underlying
                                      host  service.  If  you  don't  need  to
                                      inspect  more than 8 KB, you can guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes  in  by combining a statement that
                                      inspects the body of  the  web  request,
                                      such  as   ByteMatchStatement or  Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8 KB size  limit  on  the  body  of  the
                                      request.  WAF doesn't support inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                      MatchPattern -> (structure)
                                          The patterns to look for in the JSON
                                          body. WAF inspects  the  results  of
                                          these  pattern  matches  against the
                                          rule inspection criteria.

                                          All -> (structure)
                                             Match all of  the  elements.  See
                                             also MatchScope in  JsonBody .

                                             You must specify either this set-
                                             ting or  the  IncludedPaths  set-
                                             ting, but not both.

                                          IncludedPaths -> (list)
                                             Match  only the specified include
                                             paths.  See  also  MatchScope  in
                                             JsonBody .

                                             Provide  the  include paths using
                                             JSON Pointer syntax. For example,
                                             "IncludedPaths": ["/dogs/0/name",
                                             "/dogs/1/name"] . For information
                                             about this syntax, see the Inter-
                                             net Engineering Task Force (IETF)
                                             documentation  JavaScript  Object
                                             Notation (JSON) Pointer .

                                             You must specify either this set-
                                             ting  or the All setting, but not
                                             both.

                                             NOTE:
                                                 Don't  use  this  option   to
                                                 include  all  paths. Instead,
                                                 use the All setting.

                                             (string)

                                      MatchScope -> (string)
                                          The  parts  of  the  JSON  to  match
                                          against  using the MatchPattern . If
                                          you  specify  All  ,   WAF   matches
                                          against keys and values.

                                      InvalidFallbackBehavior -> (string)
                                          What  WAF  should  do if it fails to
                                          completely parse the JSON body.  The
                                          options are the following:

                                          o EVALUATE_AS_STRING  -  Inspect the
                                            body as plain  text.  WAF  applies
                                            the   text   transformations   and
                                            inspection   criteria   that   you
                                            defined for the JSON inspection to
                                            the body text string.

                                          o MATCH - Treat the web  request  as
                                            matching  the  rule statement. WAF
                                            applies the  rule  action  to  the
                                            request.

                                          o NO_MATCH  -  Treat the web request
                                            as not matching  the  rule  state-
                                            ment.

                                          If  you  don't provide this setting,
                                          WAF parses and evaluates the content
                                          only up to the first parsing failure
                                          that it encounters.

                                          WAF  does  its  best  to  parse  the
                                          entire   JSON  body,  but  might  be
                                          forced to stop for reasons  such  as
                                          invalid  characters, duplicate keys,
                                          truncation, and  any  content  whose
                                          root  node  isn't  an  object  or an
                                          array.

                                          WAF parses the JSON in the following
                                          examples  as  two  valid  key, value
                                          pairs:

                                          o Missing                     comma:
                                            {"key1":"value1""key2":"value2"}

                                          o Missing                     colon:
                                            {"key1":"value1","key2""value2"}

                                          o Extra                      colons:
                                            {"key1"::"value1","key2""value2"}

                               TextTransformations -> (list)
                                   Text  transformations eliminate some of the
                                   unusual formatting that  attackers  use  in
                                   web  requests in an effort to bypass detec-
                                   tion. If you specify one or more  transfor-
                                   mations  in  a rule statement, WAF performs
                                   all transformations on the content  of  the
                                   request   component  identified  by  Field-
                                   ToMatch , starting from the lowest priority
                                   setting,  before inspecting the content for
                                   a match.

                                   (structure)
                                      Text transformations eliminate  some  of
                                      the  unusual  formatting  that attackers
                                      use in web  requests  in  an  effort  to
                                      bypass detection.

                                      Priority -> (integer)
                                          Sets  the  relative processing order
                                          for  multiple  transformations  that
                                          are  defined  for  a rule statement.
                                          WAF processes  all  transformations,
                                          from  lowest  priority  to  highest,
                                          before  inspecting  the  transformed
                                          content.  The  priorities don't need
                                          to be consecutive, but they must all
                                          be different.

                                      Type -> (string)
                                          You can specify the following trans-
                                          formation types:
                                             BASE64_DECODE - Decode  a  Base64
                                             -encoded string.

                                             BASE64_DECODE_EXT   -   Decode  a
                                             Base64 -encoded string, but use a
                                             forgiving   implementation   that
                                             ignores  characters  that  aren't
                                             valid.

                                             CMD_LINE - Command-line transfor-
                                             mations.  These  are  helpful  in
                                             reducing effectiveness of attack-
                                             ers who inject an operating  sys-
                                             tem  command-line command and use
                                             unusual  formatting  to  disguise
                                             some or all of the command.

                                          o Delete the following characters: \
                                            " ' ^

                                          o Delete spaces before the following
                                            characters: / (

                                          o Replace  the  following characters
                                            with a space: , ;

                                          o Replace multiple spaces  with  one
                                            space

                                          o Convert uppercase letters (A-Z) to
                                            lowercase (a-z)
                                             COMPRESS_WHITE_SPACE  -   Replace
                                             these  characters  with  a  space
                                             character (decimal 32):

                                          o \f , formfeed, decimal 12

                                          o \t , tab, decimal 9

                                          o \n , newline, decimal 10

                                          o \r , carriage return, decimal 13

                                          o \v , vertical tab, decimal 11

                                          o Non-breaking space, decimal 160
                                             COMPRESS_WHITE_SPACE         also
                                             replaces multiple spaces with one
                                             space.

                                             CSS_DECODE  -  Decode  characters
                                             that  were  encoded using CSS 2.x
                                             escape rules syndata.html#charac-
                                             ters  .  This function uses up to
                                             two   bytes   in   the   decoding
                                             process,   so   it  can  help  to
                                             uncover  ASCII  characters   that
                                             were  encoded  using CSS encoding
                                             that   wouldnt    typically    be
                                             encoded.   It's  also  useful  in
                                             countering evasion,  which  is  a
                                             combination  of  a  backslash and
                                             non-hexadecimal  characters.  For
                                             example,      ja\vascript     for
                                             javascript.

                                             ESCAPE_SEQ_DECODE  -  Decode  the
                                             following     ANSI    C    escape
                                             sequences: \a , \b , \f , \n , \r
                                             ,  \t  , \v , \\ , \? , \' , \" ,
                                             \xHH     (hexadecimal),     \0OOO
                                             (octal).  Encodings  that  aren't
                                             valid remain in the output.

                                             HEX_DECODE - Decode a  string  of
                                             hexadecimal   characters  into  a
                                             binary.

                                             HTML_ENTITY_DECODE   -    Replace
                                             HTML-encoded    characters   with
                                             unencoded             characters.
                                             HTML_ENTITY_DECODE performs these
                                             operations:

                                          o Replaces (ampersand)quot; with "

                                          o Replaces (ampersand)nbsp;  with  a
                                            non-breaking space, decimal 160

                                          o Replaces   (ampersand)lt;  with  a
                                            "less than" symbol

                                          o Replaces (ampersand)gt; with >

                                          o Replaces characters that are  rep-
                                            resented  in  hexadecimal  format,
                                            (ampersand)#xhhhh; , with the cor-
                                            responding characters

                                          o Replaces  characters that are rep-
                                            resented   in   decimal    format,
                                            (ampersand)#nnnn;  , with the cor-
                                            responding characters
                                             JS_DECODE  -  Decode   JavaScript
                                             escape sequences. If a \  u  HHHH
                                             code is in the  full-width  ASCII
                                             code  range  of  FF01-FF5E , then
                                             the higher byte is used to detect
                                             and  adjust  the  lower  byte. If
                                             not, only the lower byte is  used
                                             and  the  higher  byte is zeroed,
                                             causing a possible loss of infor-
                                             mation.

                                             LOWERCASE   -  Convert  uppercase
                                             letters (A-Z) to lowercase (a-z).

                                             MD5  - Calculate an MD5 hash from
                                             the data in the input.  The  com-
                                             puted  hash  is  in  a raw binary
                                             form.

                                             NONE - Specify NONE if you  don't
                                             want any text transformations.

                                             NORMALIZE_PATH  - Remove multiple
                                             slashes,  directory   self-refer-
                                             ences,  and directory back-refer-
                                             ences that are not at the  begin-
                                             ning  of  the input from an input
                                             string.

                                             NORMALIZE_PATH_WIN - This is  the
                                             same   as  NORMALIZE_PATH  ,  but
                                             first converts backslash  charac-
                                             ters to forward slashes.

                                             REMOVE_NULLS  -  Remove  all NULL
                                             bytes from the input.

                                             REPLACE_COMMENTS -  Replace  each
                                             occurrence  of  a C-style comment
                                             (/* ... */ ) with a single space.
                                             Multiple  consecutive occurrences
                                             are not compressed.  Unterminated
                                             comments are also replaced with a
                                             space (ASCII  0x20).  However,  a
                                             standalone  termination of a com-
                                             ment (*/ ) is not acted upon.

                                             REPLACE_NULLS  -   Replace   NULL
                                             bytes  in  the  input  with space
                                             characters (ASCII 0x20 ).

                                             SQL_HEX_DECODE - Decode  SQL  hex
                                             data. Example (0x414243 ) will be
                                             decoded to (ABC ).

                                             URL_DECODE - Decode a URL-encoded
                                             value.

                                             URL_DECODE_UNI  - Like URL_DECODE
                                             ,   but    with    support    for
                                             Microsoft-specific  %u  encoding.
                                             If the code is in the  full-width
                                             ASCII  code  range of FF01-FF5E ,
                                             the higher byte is used to detect
                                             and adjust the lower byte. Other-
                                             wise, only the lower byte is used
                                             and the higher byte is zeroed.

                                             UTF8_TO_UNICODE   -  Convert  all
                                             UTF-8 character sequences to Uni-
                                             code. This helps input normaliza-
                                             tion, and minimizing  false-posi-
                                             tives   and  false-negatives  for
                                             non-English languages.

                               PositionalConstraint -> (string)
                                   The  area  within  the  portion  of  a  web
                                   request  that  you  want  WAF to search for
                                   SearchString .  Valid  values  include  the
                                   following:
                                      CONTAINS

                                   The  specified part of the web request must
                                   include the value of SearchString , but the
                                   location doesn't matter.
                                      CONTAINS_WORD

                                   The  specified part of the web request must
                                   include the value  of  SearchString  ,  and
                                   SearchString must contain only alphanumeric
                                   characters or underscore (A-Z, a-z, 0-9, or
                                   _).  In  addition,  SearchString  must be a
                                   word, which means that both of the  follow-
                                   ing are true:

                                   o SearchString  is  at the beginning of the
                                     specified part of the web request  or  is
                                     preceded  by  a  character  other than an
                                     alphanumeric character or underscore (_).
                                     Examples  include  the  value of a header
                                     and ;BadBot .

                                   o SearchString is at the end of the  speci-
                                     fied  part  of the web request or is fol-
                                     lowed  by  a  character  other  than   an
                                     alphanumeric character or underscore (_),
                                     for example, BadBot; and -BadBot; .
                                      EXACTLY

                                   The value of the specified part of the  web
                                   request  must  exactly  match  the value of
                                   SearchString .
                                      STARTS_WITH

                                   The value of SearchString  must  appear  at
                                   the  beginning of the specified part of the
                                   web request.
                                      ENDS_WITH

                                   The value of SearchString  must  appear  at
                                   the  end  of  the specified part of the web
                                   request.

                            SqliMatchStatement -> (structure)
                               Attackers sometimes insert malicious  SQL  code
                               into  web requests in an effort to extract data
                               from your  database.  To  allow  or  block  web
                               requests  that  appear to contain malicious SQL
                               code, create one or more  SQL  injection  match
                               conditions.  An  SQL  injection match condition
                               identifies the part of web  requests,  such  as
                               the  URI or the query string, that you want WAF
                               to inspect. Later in the process, when you cre-
                               ate  a web ACL, you specify whether to allow or
                               block requests that appear to contain malicious
                               SQL code.

                               FieldToMatch -> (structure)
                                   The part of a web request that you want WAF
                                   to  inspect.  For  more  information,   see
                                   FieldToMatch .

                                   SingleHeader -> (structure)
                                      Inspect  a  single  header.  Provide the
                                      name of the header to inspect, for exam-
                                      ple,  User-Agent  or Referer . This set-
                                      ting isn't case sensitive.

                                      Example JSON: "SingleHeader": {  "Name":
                                      "haystack" }

                                      Name -> (string)
                                          The  name  of  the  query  header to
                                          inspect.

                                   SingleQueryArgument -> (structure)
                                      Inspect a single query argument. Provide
                                      the   name  of  the  query  argument  to
                                      inspect, such as UserName or SalesRegion
                                      .  The  name  can be up to 30 characters
                                      long and isn't case sensitive.

                                      This is used only to  indicate  the  web
                                      request component for WAF to inspect, in
                                      the  FieldToMatch specification.

                                      Example JSON:  "SingleQueryArgument":  {
                                      "Name": "myArgument" }

                                      Name -> (string)
                                          The  name  of  the query argument to
                                          inspect.

                                   AllQueryArguments -> (structure)
                                      Inspect all query arguments.

                                   UriPath -> (structure)
                                      Inspect the request URI  path.  This  is
                                      the  part  of a web request that identi-
                                      fies   a    resource,    for    example,
                                      /images/daily-ad.jpg .

                                   QueryString -> (structure)
                                      Inspect  the  query  string. This is the
                                      part of a URL that  appears  after  a  ?
                                      character, if any.

                                   Body -> (structure)
                                      Inspect  the request body as plain text.
                                      The request body immediately follows the
                                      request  headers.  This is the part of a
                                      request  that  contains  any  additional
                                      data  that  you want to send to your web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note  that  only  the  first  8 KB (8192
                                      bytes) of the request body are forwarded
                                      to  WAF for inspection by the underlying
                                      host  service.  If  you  don't  need  to
                                      inspect  more than 8 KB, you can guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes  in  by combining a statement that
                                      inspects the body of  the  web  request,
                                      such  as   ByteMatchStatement or  Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8 KB size  limit  on  the  body  of  the
                                      request.  WAF doesn't support inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                   Method -> (structure)
                                      Inspect  the  HTTP  method.  The  method
                                      indicates the type of operation that the
                                      request is asking the origin to perform.

                                   JsonBody -> (structure)
                                      Inspect the request body  as  JSON.  The
                                      request  body  immediately  follows  the
                                      request headers. This is the part  of  a
                                      request  that  contains  any  additional
                                      data that you want to send to  your  web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note that only  the  first  8  KB  (8192
                                      bytes) of the request body are forwarded
                                      to WAF for inspection by the  underlying
                                      host  service.  If  you  don't  need  to
                                      inspect more than 8 KB, you can  guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes in by combining a  statement  that
                                      inspects  the  body  of the web request,
                                      such as  ByteMatchStatement  or   Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8  KB  size  limit  on  the  body of the
                                      request. WAF doesn't support  inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                      MatchPattern -> (structure)
                                          The patterns to look for in the JSON
                                          body.  WAF  inspects  the results of
                                          these pattern  matches  against  the
                                          rule inspection criteria.

                                          All -> (structure)
                                             Match  all  of  the elements. See
                                             also MatchScope in  JsonBody .

                                             You must specify either this set-
                                             ting  or  the  IncludedPaths set-
                                             ting, but not both.

                                          IncludedPaths -> (list)
                                             Match only the specified  include
                                             paths.  See  also  MatchScope  in
                                             JsonBody .

                                             Provide the include  paths  using
                                             JSON Pointer syntax. For example,
                                             "IncludedPaths": ["/dogs/0/name",
                                             "/dogs/1/name"] . For information
                                             about this syntax, see the Inter-
                                             net Engineering Task Force (IETF)
                                             documentation  JavaScript  Object
                                             Notation (JSON) Pointer .

                                             You must specify either this set-
                                             ting or the All setting, but  not
                                             both.

                                             NOTE:
                                                 Don't   use  this  option  to
                                                 include all  paths.  Instead,
                                                 use the All setting.

                                             (string)

                                      MatchScope -> (string)
                                          The  parts  of  the  JSON  to  match
                                          against using the MatchPattern .  If
                                          you   specify   All  ,  WAF  matches
                                          against keys and values.

                                      InvalidFallbackBehavior -> (string)
                                          What WAF should do if  it  fails  to
                                          completely  parse the JSON body. The
                                          options are the following:

                                          o EVALUATE_AS_STRING -  Inspect  the
                                            body  as  plain  text. WAF applies
                                            the   text   transformations   and
                                            inspection   criteria   that   you
                                            defined for the JSON inspection to
                                            the body text string.

                                          o MATCH  -  Treat the web request as
                                            matching the rule  statement.  WAF
                                            applies  the  rule  action  to the
                                            request.

                                          o NO_MATCH - Treat the  web  request
                                            as  not  matching  the rule state-
                                            ment.

                                          If you don't provide  this  setting,
                                          WAF parses and evaluates the content
                                          only up to the first parsing failure
                                          that it encounters.

                                          WAF  does  its  best  to  parse  the
                                          entire  JSON  body,  but  might   be
                                          forced  to  stop for reasons such as
                                          invalid characters, duplicate  keys,
                                          truncation,  and  any  content whose
                                          root node  isn't  an  object  or  an
                                          array.

                                          WAF parses the JSON in the following
                                          examples as  two  valid  key,  value
                                          pairs:

                                          o Missing                     comma:
                                            {"key1":"value1""key2":"value2"}

                                          o Missing                     colon:
                                            {"key1":"value1","key2""value2"}

                                          o Extra                      colons:
                                            {"key1"::"value1","key2""value2"}

                               TextTransformations -> (list)
                                   Text transformations eliminate some of  the
                                   unusual  formatting  that  attackers use in
                                   web requests in an effort to bypass  detec-
                                   tion.  If you specify one or more transfor-
                                   mations in a rule statement,  WAF  performs
                                   all  transformations  on the content of the
                                   request  component  identified  by   Field-
                                   ToMatch , starting from the lowest priority
                                   setting, before inspecting the content  for
                                   a match.

                                   (structure)
                                      Text  transformations  eliminate some of
                                      the unusual  formatting  that  attackers
                                      use  in  web  requests  in  an effort to
                                      bypass detection.

                                      Priority -> (integer)
                                          Sets the relative  processing  order
                                          for  multiple  transformations  that
                                          are defined for  a  rule  statement.
                                          WAF  processes  all transformations,
                                          from  lowest  priority  to  highest,
                                          before  inspecting  the  transformed
                                          content. The priorities  don't  need
                                          to be consecutive, but they must all
                                          be different.

                                      Type -> (string)
                                          You can specify the following trans-
                                          formation types:
                                             BASE64_DECODE  -  Decode a Base64
                                             -encoded string.

                                             BASE64_DECODE_EXT  -   Decode   a
                                             Base64 -encoded string, but use a
                                             forgiving   implementation   that
                                             ignores  characters  that  aren't
                                             valid.

                                             CMD_LINE - Command-line transfor-
                                             mations.  These  are  helpful  in
                                             reducing effectiveness of attack-
                                             ers  who inject an operating sys-
                                             tem command-line command and  use
                                             unusual  formatting  to  disguise
                                             some or all of the command.

                                          o Delete the following characters: \
                                            " ' ^

                                          o Delete spaces before the following
                                            characters: / (

                                          o Replace the  following  characters
                                            with a space: , ;

                                          o Replace  multiple  spaces with one
                                            space

                                          o Convert uppercase letters (A-Z) to
                                            lowercase (a-z)
                                             COMPRESS_WHITE_SPACE   -  Replace
                                             these  characters  with  a  space
                                             character (decimal 32):

                                          o \f , formfeed, decimal 12

                                          o \t , tab, decimal 9

                                          o \n , newline, decimal 10

                                          o \r , carriage return, decimal 13

                                          o \v , vertical tab, decimal 11

                                          o Non-breaking space, decimal 160
                                             COMPRESS_WHITE_SPACE         also
                                             replaces multiple spaces with one
                                             space.

                                             CSS_DECODE  -  Decode  characters
                                             that were encoded using  CSS  2.x
                                             escape rules syndata.html#charac-
                                             ters . This function uses  up  to
                                             two   bytes   in   the   decoding
                                             process,  so  it  can   help   to
                                             uncover   ASCII  characters  that
                                             were encoded using  CSS  encoding
                                             that    wouldnt    typically   be
                                             encoded.  It's  also  useful   in
                                             countering  evasion,  which  is a
                                             combination of  a  backslash  and
                                             non-hexadecimal  characters.  For
                                             example,     ja\vascript      for
                                             javascript.

                                             ESCAPE_SEQ_DECODE  -  Decode  the
                                             following    ANSI    C     escape
                                             sequences: \a , \b , \f , \n , \r
                                             , \t , \v , \\ , \? , \' ,  \"  ,
                                             \xHH     (hexadecimal),     \0OOO
                                             (octal).  Encodings  that  aren't
                                             valid remain in the output.

                                             HEX_DECODE  -  Decode a string of
                                             hexadecimal  characters  into   a
                                             binary.

                                             HTML_ENTITY_DECODE    -   Replace
                                             HTML-encoded   characters    with
                                             unencoded             characters.
                                             HTML_ENTITY_DECODE performs these
                                             operations:

                                          o Replaces (ampersand)quot; with "

                                          o Replaces  (ampersand)nbsp;  with a
                                            non-breaking space, decimal 160

                                          o Replaces  (ampersand)lt;  with   a
                                            "less than" symbol

                                          o Replaces (ampersand)gt; with >

                                          o Replaces  characters that are rep-
                                            resented  in  hexadecimal  format,
                                            (ampersand)#xhhhh; , with the cor-
                                            responding characters

                                          o Replaces characters that are  rep-
                                            resented    in   decimal   format,
                                            (ampersand)#nnnn; , with the  cor-
                                            responding characters
                                             JS_DECODE   -  Decode  JavaScript
                                             escape sequences. If a \  u  HHHH
                                             code  is  in the full-width ASCII
                                             code range of  FF01-FF5E  ,  then
                                             the higher byte is used to detect
                                             and adjust  the  lower  byte.  If
                                             not,  only the lower byte is used
                                             and the higher  byte  is  zeroed,
                                             causing a possible loss of infor-
                                             mation.

                                             LOWERCASE  -  Convert   uppercase
                                             letters (A-Z) to lowercase (a-z).

                                             MD5 - Calculate an MD5 hash  from
                                             the  data  in the input. The com-
                                             puted hash is  in  a  raw  binary
                                             form.

                                             NONE  - Specify NONE if you don't
                                             want any text transformations.

                                             NORMALIZE_PATH - Remove  multiple
                                             slashes,   directory  self-refer-
                                             ences, and directory  back-refer-
                                             ences  that are not at the begin-
                                             ning of the input from  an  input
                                             string.

                                             NORMALIZE_PATH_WIN  - This is the
                                             same  as  NORMALIZE_PATH  ,   but
                                             first  converts backslash charac-
                                             ters to forward slashes.

                                             REMOVE_NULLS -  Remove  all  NULL
                                             bytes from the input.

                                             REPLACE_COMMENTS  -  Replace each
                                             occurrence of a  C-style  comment
                                             (/* ... */ ) with a single space.
                                             Multiple consecutive  occurrences
                                             are  not compressed. Unterminated
                                             comments are also replaced with a
                                             space  (ASCII  0x20).  However, a
                                             standalone termination of a  com-
                                             ment (*/ ) is not acted upon.

                                             REPLACE_NULLS   -   Replace  NULL
                                             bytes in  the  input  with  space
                                             characters (ASCII 0x20 ).

                                             SQL_HEX_DECODE  -  Decode SQL hex
                                             data. Example (0x414243 ) will be
                                             decoded to (ABC ).

                                             URL_DECODE - Decode a URL-encoded
                                             value.

                                             URL_DECODE_UNI - Like  URL_DECODE
                                             ,    but    with    support   for
                                             Microsoft-specific  %u  encoding.
                                             If  the code is in the full-width
                                             ASCII code range of  FF01-FF5E  ,
                                             the higher byte is used to detect
                                             and adjust the lower byte. Other-
                                             wise, only the lower byte is used
                                             and the higher byte is zeroed.

                                             UTF8_TO_UNICODE  -  Convert   all
                                             UTF-8 character sequences to Uni-
                                             code. This helps input normaliza-
                                             tion,  and minimizing false-posi-
                                             tives  and  false-negatives   for
                                             non-English languages.

                            XssMatchStatement -> (structure)
                               A  rule  statement  that  defines  a cross-site
                               scripting (XSS) match search for WAF  to  apply
                               to  web  requests.  XSS attacks are those where
                               the attacker uses vulnerabilities in  a  benign
                               website   as  a  vehicle  to  inject  malicious
                               client-site scripts into other  legitimate  web
                               browsers.  The XSS match statement provides the
                               location in  requests  that  you  want  WAF  to
                               search  and  text transformations to use on the
                               search area before WAF searches  for  character
                               sequences  that  are  likely  to  be  malicious
                               strings.

                               FieldToMatch -> (structure)
                                   The part of a web request that you want WAF
                                   to   inspect.  For  more  information,  see
                                   FieldToMatch .

                                   SingleHeader -> (structure)
                                      Inspect a  single  header.  Provide  the
                                      name of the header to inspect, for exam-
                                      ple, User-Agent or Referer .  This  set-
                                      ting isn't case sensitive.

                                      Example  JSON: "SingleHeader": { "Name":
                                      "haystack" }

                                      Name -> (string)
                                          The name  of  the  query  header  to
                                          inspect.

                                   SingleQueryArgument -> (structure)
                                      Inspect a single query argument. Provide
                                      the  name  of  the  query  argument   to
                                      inspect, such as UserName or SalesRegion
                                      . The name can be up  to  30  characters
                                      long and isn't case sensitive.

                                      This  is  used  only to indicate the web
                                      request component for WAF to inspect, in
                                      the  FieldToMatch specification.

                                      Example  JSON:  "SingleQueryArgument": {
                                      "Name": "myArgument" }

                                      Name -> (string)
                                          The name of the  query  argument  to
                                          inspect.

                                   AllQueryArguments -> (structure)
                                      Inspect all query arguments.

                                   UriPath -> (structure)
                                      Inspect  the  request  URI path. This is
                                      the part of a web request  that  identi-
                                      fies    a    resource,    for   example,
                                      /images/daily-ad.jpg .

                                   QueryString -> (structure)
                                      Inspect the query string.  This  is  the
                                      part  of  a  URL  that appears after a ?
                                      character, if any.

                                   Body -> (structure)
                                      Inspect the request body as plain  text.
                                      The request body immediately follows the
                                      request headers. This is the part  of  a
                                      request  that  contains  any  additional
                                      data that you want to send to  your  web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note that only  the  first  8  KB  (8192
                                      bytes) of the request body are forwarded
                                      to WAF for inspection by the  underlying
                                      host  service.  If  you  don't  need  to
                                      inspect more than 8 KB, you can  guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes in by combining a  statement  that
                                      inspects  the  body  of the web request,
                                      such as  ByteMatchStatement  or   Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8  KB  size  limit  on  the  body of the
                                      request. WAF doesn't support  inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                   Method -> (structure)
                                      Inspect  the  HTTP  method.  The  method
                                      indicates the type of operation that the
                                      request is asking the origin to perform.

                                   JsonBody -> (structure)
                                      Inspect  the  request  body as JSON. The
                                      request  body  immediately  follows  the
                                      request  headers.  This is the part of a
                                      request  that  contains  any  additional
                                      data  that  you want to send to your web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note  that  only  the  first  8 KB (8192
                                      bytes) of the request body are forwarded
                                      to  WAF for inspection by the underlying
                                      host  service.  If  you  don't  need  to
                                      inspect  more than 8 KB, you can guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes  in  by combining a statement that
                                      inspects the body of  the  web  request,
                                      such  as   ByteMatchStatement or  Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8 KB size  limit  on  the  body  of  the
                                      request.  WAF doesn't support inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                      MatchPattern -> (structure)
                                          The patterns to look for in the JSON
                                          body. WAF inspects  the  results  of
                                          these  pattern  matches  against the
                                          rule inspection criteria.

                                          All -> (structure)
                                             Match all of  the  elements.  See
                                             also MatchScope in  JsonBody .

                                             You must specify either this set-
                                             ting or  the  IncludedPaths  set-
                                             ting, but not both.

                                          IncludedPaths -> (list)
                                             Match  only the specified include
                                             paths.  See  also  MatchScope  in
                                             JsonBody .

                                             Provide  the  include paths using
                                             JSON Pointer syntax. For example,
                                             "IncludedPaths": ["/dogs/0/name",
                                             "/dogs/1/name"] . For information
                                             about this syntax, see the Inter-
                                             net Engineering Task Force (IETF)
                                             documentation  JavaScript  Object
                                             Notation (JSON) Pointer .

                                             You must specify either this set-
                                             ting  or the All setting, but not
                                             both.

                                             NOTE:
                                                 Don't  use  this  option   to
                                                 include  all  paths. Instead,
                                                 use the All setting.

                                             (string)

                                      MatchScope -> (string)
                                          The  parts  of  the  JSON  to  match
                                          against  using the MatchPattern . If
                                          you  specify  All  ,   WAF   matches
                                          against keys and values.

                                      InvalidFallbackBehavior -> (string)
                                          What  WAF  should  do if it fails to
                                          completely parse the JSON body.  The
                                          options are the following:

                                          o EVALUATE_AS_STRING  -  Inspect the
                                            body as plain  text.  WAF  applies
                                            the   text   transformations   and
                                            inspection   criteria   that   you
                                            defined for the JSON inspection to
                                            the body text string.

                                          o MATCH - Treat the web  request  as
                                            matching  the  rule statement. WAF
                                            applies the  rule  action  to  the
                                            request.

                                          o NO_MATCH  -  Treat the web request
                                            as not matching  the  rule  state-
                                            ment.

                                          If  you  don't provide this setting,
                                          WAF parses and evaluates the content
                                          only up to the first parsing failure
                                          that it encounters.

                                          WAF  does  its  best  to  parse  the
                                          entire   JSON  body,  but  might  be
                                          forced to stop for reasons  such  as
                                          invalid  characters, duplicate keys,
                                          truncation, and  any  content  whose
                                          root  node  isn't  an  object  or an
                                          array.

                                          WAF parses the JSON in the following
                                          examples  as  two  valid  key, value
                                          pairs:

                                          o Missing                     comma:
                                            {"key1":"value1""key2":"value2"}

                                          o Missing                     colon:
                                            {"key1":"value1","key2""value2"}

                                          o Extra                      colons:
                                            {"key1"::"value1","key2""value2"}

                               TextTransformations -> (list)
                                   Text  transformations eliminate some of the
                                   unusual formatting that  attackers  use  in
                                   web  requests in an effort to bypass detec-
                                   tion. If you specify one or more  transfor-
                                   mations  in  a rule statement, WAF performs
                                   all transformations on the content  of  the
                                   request   component  identified  by  Field-
                                   ToMatch , starting from the lowest priority
                                   setting,  before inspecting the content for
                                   a match.

                                   (structure)
                                      Text transformations eliminate  some  of
                                      the  unusual  formatting  that attackers
                                      use in web  requests  in  an  effort  to
                                      bypass detection.

                                      Priority -> (integer)
                                          Sets  the  relative processing order
                                          for  multiple  transformations  that
                                          are  defined  for  a rule statement.
                                          WAF processes  all  transformations,
                                          from  lowest  priority  to  highest,
                                          before  inspecting  the  transformed
                                          content.  The  priorities don't need
                                          to be consecutive, but they must all
                                          be different.

                                      Type -> (string)
                                          You can specify the following trans-
                                          formation types:
                                             BASE64_DECODE - Decode  a  Base64
                                             -encoded string.

                                             BASE64_DECODE_EXT   -   Decode  a
                                             Base64 -encoded string, but use a
                                             forgiving   implementation   that
                                             ignores  characters  that  aren't
                                             valid.

                                             CMD_LINE - Command-line transfor-
                                             mations.  These  are  helpful  in
                                             reducing effectiveness of attack-
                                             ers who inject an operating  sys-
                                             tem  command-line command and use
                                             unusual  formatting  to  disguise
                                             some or all of the command.

                                          o Delete the following characters: \
                                            " ' ^

                                          o Delete spaces before the following
                                            characters: / (

                                          o Replace  the  following characters
                                            with a space: , ;

                                          o Replace multiple spaces  with  one
                                            space

                                          o Convert uppercase letters (A-Z) to
                                            lowercase (a-z)
                                             COMPRESS_WHITE_SPACE  -   Replace
                                             these  characters  with  a  space
                                             character (decimal 32):

                                          o \f , formfeed, decimal 12

                                          o \t , tab, decimal 9

                                          o \n , newline, decimal 10

                                          o \r , carriage return, decimal 13

                                          o \v , vertical tab, decimal 11

                                          o Non-breaking space, decimal 160
                                             COMPRESS_WHITE_SPACE         also
                                             replaces multiple spaces with one
                                             space.

                                             CSS_DECODE  -  Decode  characters
                                             that  were  encoded using CSS 2.x
                                             escape rules syndata.html#charac-
                                             ters  .  This function uses up to
                                             two   bytes   in   the   decoding
                                             process,   so   it  can  help  to
                                             uncover  ASCII  characters   that
                                             were  encoded  using CSS encoding
                                             that   wouldnt    typically    be
                                             encoded.   It's  also  useful  in
                                             countering evasion,  which  is  a
                                             combination  of  a  backslash and
                                             non-hexadecimal  characters.  For
                                             example,      ja\vascript     for
                                             javascript.

                                             ESCAPE_SEQ_DECODE  -  Decode  the
                                             following     ANSI    C    escape
                                             sequences: \a , \b , \f , \n , \r
                                             ,  \t  , \v , \\ , \? , \' , \" ,
                                             \xHH     (hexadecimal),     \0OOO
                                             (octal).  Encodings  that  aren't
                                             valid remain in the output.

                                             HEX_DECODE - Decode a  string  of
                                             hexadecimal   characters  into  a
                                             binary.

                                             HTML_ENTITY_DECODE   -    Replace
                                             HTML-encoded    characters   with
                                             unencoded             characters.
                                             HTML_ENTITY_DECODE performs these
                                             operations:

                                          o Replaces (ampersand)quot; with "

                                          o Replaces (ampersand)nbsp;  with  a
                                            non-breaking space, decimal 160

                                          o Replaces   (ampersand)lt;  with  a
                                            "less than" symbol

                                          o Replaces (ampersand)gt; with >

                                          o Replaces characters that are  rep-
                                            resented  in  hexadecimal  format,
                                            (ampersand)#xhhhh; , with the cor-
                                            responding characters

                                          o Replaces  characters that are rep-
                                            resented   in   decimal    format,
                                            (ampersand)#nnnn;  , with the cor-
                                            responding characters
                                             JS_DECODE  -  Decode   JavaScript
                                             escape sequences. If a \  u  HHHH
                                             code is in the  full-width  ASCII
                                             code  range  of  FF01-FF5E , then
                                             the higher byte is used to detect
                                             and  adjust  the  lower  byte. If
                                             not, only the lower byte is  used
                                             and  the  higher  byte is zeroed,
                                             causing a possible loss of infor-
                                             mation.

                                             LOWERCASE   -  Convert  uppercase
                                             letters (A-Z) to lowercase (a-z).

                                             MD5  - Calculate an MD5 hash from
                                             the data in the input.  The  com-
                                             puted  hash  is  in  a raw binary
                                             form.

                                             NONE - Specify NONE if you  don't
                                             want any text transformations.

                                             NORMALIZE_PATH  - Remove multiple
                                             slashes,  directory   self-refer-
                                             ences,  and directory back-refer-
                                             ences that are not at the  begin-
                                             ning  of  the input from an input
                                             string.

                                             NORMALIZE_PATH_WIN - This is  the
                                             same   as  NORMALIZE_PATH  ,  but
                                             first converts backslash  charac-
                                             ters to forward slashes.

                                             REMOVE_NULLS  -  Remove  all NULL
                                             bytes from the input.

                                             REPLACE_COMMENTS -  Replace  each
                                             occurrence  of  a C-style comment
                                             (/* ... */ ) with a single space.
                                             Multiple  consecutive occurrences
                                             are not compressed.  Unterminated
                                             comments are also replaced with a
                                             space (ASCII  0x20).  However,  a
                                             standalone  termination of a com-
                                             ment (*/ ) is not acted upon.

                                             REPLACE_NULLS  -   Replace   NULL
                                             bytes  in  the  input  with space
                                             characters (ASCII 0x20 ).

                                             SQL_HEX_DECODE - Decode  SQL  hex
                                             data. Example (0x414243 ) will be
                                             decoded to (ABC ).

                                             URL_DECODE - Decode a URL-encoded
                                             value.

                                             URL_DECODE_UNI  - Like URL_DECODE
                                             ,   but    with    support    for
                                             Microsoft-specific  %u  encoding.
                                             If the code is in the  full-width
                                             ASCII  code  range of FF01-FF5E ,
                                             the higher byte is used to detect
                                             and adjust the lower byte. Other-
                                             wise, only the lower byte is used
                                             and the higher byte is zeroed.

                                             UTF8_TO_UNICODE   -  Convert  all
                                             UTF-8 character sequences to Uni-
                                             code. This helps input normaliza-
                                             tion, and minimizing  false-posi-
                                             tives   and  false-negatives  for
                                             non-English languages.

                            SizeConstraintStatement -> (structure)
                               A rule statement  that  compares  a  number  of
                               bytes  against the size of a request component,
                               using a comparison operator,  such  as  greater
                               than (>) or less than (<). For example, you can
                               use a size constraint  statement  to  look  for
                               query strings that are longer than 100 bytes.

                               If  you  configure  WAF  to inspect the request
                               body, WAF inspects only the first 8192 bytes (8
                               KB).  If the request body for your web requests
                               never exceeds 8192 bytes, you can create a size
                               constraint  condition  and  block requests that
                               have a request body greater than 8192 bytes.

                               If you choose URI for the value of Part of  the
                               request  to filter on, the slash (/) in the URI
                               counts as one character. For example,  the  URI
                               /logo.jpg is nine characters long.

                               FieldToMatch -> (structure)
                                   The part of a web request that you want WAF
                                   to  inspect.  For  more  information,   see
                                   FieldToMatch .

                                   SingleHeader -> (structure)
                                      Inspect  a  single  header.  Provide the
                                      name of the header to inspect, for exam-
                                      ple,  User-Agent  or Referer . This set-
                                      ting isn't case sensitive.

                                      Example JSON: "SingleHeader": {  "Name":
                                      "haystack" }

                                      Name -> (string)
                                          The  name  of  the  query  header to
                                          inspect.

                                   SingleQueryArgument -> (structure)
                                      Inspect a single query argument. Provide
                                      the   name  of  the  query  argument  to
                                      inspect, such as UserName or SalesRegion
                                      .  The  name  can be up to 30 characters
                                      long and isn't case sensitive.

                                      This is used only to  indicate  the  web
                                      request component for WAF to inspect, in
                                      the  FieldToMatch specification.

                                      Example JSON:  "SingleQueryArgument":  {
                                      "Name": "myArgument" }

                                      Name -> (string)
                                          The  name  of  the query argument to
                                          inspect.

                                   AllQueryArguments -> (structure)
                                      Inspect all query arguments.

                                   UriPath -> (structure)
                                      Inspect the request URI  path.  This  is
                                      the  part  of a web request that identi-
                                      fies   a    resource,    for    example,
                                      /images/daily-ad.jpg .

                                   QueryString -> (structure)
                                      Inspect  the  query  string. This is the
                                      part of a URL that  appears  after  a  ?
                                      character, if any.

                                   Body -> (structure)
                                      Inspect  the request body as plain text.
                                      The request body immediately follows the
                                      request  headers.  This is the part of a
                                      request  that  contains  any  additional
                                      data  that  you want to send to your web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note  that  only  the  first  8 KB (8192
                                      bytes) of the request body are forwarded
                                      to  WAF for inspection by the underlying
                                      host  service.  If  you  don't  need  to
                                      inspect  more than 8 KB, you can guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes  in  by combining a statement that
                                      inspects the body of  the  web  request,
                                      such  as   ByteMatchStatement or  Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8 KB size  limit  on  the  body  of  the
                                      request.  WAF doesn't support inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                   Method -> (structure)
                                      Inspect  the  HTTP  method.  The  method
                                      indicates the type of operation that the
                                      request is asking the origin to perform.

                                   JsonBody -> (structure)
                                      Inspect the request body  as  JSON.  The
                                      request  body  immediately  follows  the
                                      request headers. This is the part  of  a
                                      request  that  contains  any  additional
                                      data that you want to send to  your  web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note that only  the  first  8  KB  (8192
                                      bytes) of the request body are forwarded
                                      to WAF for inspection by the  underlying
                                      host  service.  If  you  don't  need  to
                                      inspect more than 8 KB, you can  guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes in by combining a  statement  that
                                      inspects  the  body  of the web request,
                                      such as  ByteMatchStatement  or   Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8  KB  size  limit  on  the  body of the
                                      request. WAF doesn't support  inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                      MatchPattern -> (structure)
                                          The patterns to look for in the JSON
                                          body.  WAF  inspects  the results of
                                          these pattern  matches  against  the
                                          rule inspection criteria.

                                          All -> (structure)
                                             Match  all  of  the elements. See
                                             also MatchScope in  JsonBody .

                                             You must specify either this set-
                                             ting  or  the  IncludedPaths set-
                                             ting, but not both.

                                          IncludedPaths -> (list)
                                             Match only the specified  include
                                             paths.  See  also  MatchScope  in
                                             JsonBody .

                                             Provide the include  paths  using
                                             JSON Pointer syntax. For example,
                                             "IncludedPaths": ["/dogs/0/name",
                                             "/dogs/1/name"] . For information
                                             about this syntax, see the Inter-
                                             net Engineering Task Force (IETF)
                                             documentation  JavaScript  Object
                                             Notation (JSON) Pointer .

                                             You must specify either this set-
                                             ting or the All setting, but  not
                                             both.

                                             NOTE:
                                                 Don't   use  this  option  to
                                                 include all  paths.  Instead,
                                                 use the All setting.

                                             (string)

                                      MatchScope -> (string)
                                          The  parts  of  the  JSON  to  match
                                          against using the MatchPattern .  If
                                          you   specify   All  ,  WAF  matches
                                          against keys and values.

                                      InvalidFallbackBehavior -> (string)
                                          What WAF should do if  it  fails  to
                                          completely  parse the JSON body. The
                                          options are the following:

                                          o EVALUATE_AS_STRING -  Inspect  the
                                            body  as  plain  text. WAF applies
                                            the   text   transformations   and
                                            inspection   criteria   that   you
                                            defined for the JSON inspection to
                                            the body text string.

                                          o MATCH  -  Treat the web request as
                                            matching the rule  statement.  WAF
                                            applies  the  rule  action  to the
                                            request.

                                          o NO_MATCH - Treat the  web  request
                                            as  not  matching  the rule state-
                                            ment.

                                          If you don't provide  this  setting,
                                          WAF parses and evaluates the content
                                          only up to the first parsing failure
                                          that it encounters.

                                          WAF  does  its  best  to  parse  the
                                          entire  JSON  body,  but  might   be
                                          forced  to  stop for reasons such as
                                          invalid characters, duplicate  keys,
                                          truncation,  and  any  content whose
                                          root node  isn't  an  object  or  an
                                          array.

                                          WAF parses the JSON in the following
                                          examples as  two  valid  key,  value
                                          pairs:

                                          o Missing                     comma:
                                            {"key1":"value1""key2":"value2"}

                                          o Missing                     colon:
                                            {"key1":"value1","key2""value2"}

                                          o Extra                      colons:
                                            {"key1"::"value1","key2""value2"}

                               ComparisonOperator -> (string)
                                   The operator to use to compare the  request
                                   part to the size setting.

                               Size -> (long)
                                   The  size,  in  byte,  to  compare  to  the
                                   request part, after any transformations.

                               TextTransformations -> (list)
                                   Text transformations eliminate some of  the
                                   unusual  formatting  that  attackers use in
                                   web requests in an effort to bypass  detec-
                                   tion.  If you specify one or more transfor-
                                   mations in a rule statement,  WAF  performs
                                   all  transformations  on the content of the
                                   request  component  identified  by   Field-
                                   ToMatch , starting from the lowest priority
                                   setting, before inspecting the content  for
                                   a match.

                                   (structure)
                                      Text  transformations  eliminate some of
                                      the unusual  formatting  that  attackers
                                      use  in  web  requests  in  an effort to
                                      bypass detection.

                                      Priority -> (integer)
                                          Sets the relative  processing  order
                                          for  multiple  transformations  that
                                          are defined for  a  rule  statement.
                                          WAF  processes  all transformations,
                                          from  lowest  priority  to  highest,
                                          before  inspecting  the  transformed
                                          content. The priorities  don't  need
                                          to be consecutive, but they must all
                                          be different.

                                      Type -> (string)
                                          You can specify the following trans-
                                          formation types:
                                             BASE64_DECODE  -  Decode a Base64
                                             -encoded string.

                                             BASE64_DECODE_EXT  -   Decode   a
                                             Base64 -encoded string, but use a
                                             forgiving   implementation   that
                                             ignores  characters  that  aren't
                                             valid.

                                             CMD_LINE - Command-line transfor-
                                             mations.  These  are  helpful  in
                                             reducing effectiveness of attack-
                                             ers  who inject an operating sys-
                                             tem command-line command and  use
                                             unusual  formatting  to  disguise
                                             some or all of the command.

                                          o Delete the following characters: \
                                            " ' ^

                                          o Delete spaces before the following
                                            characters: / (

                                          o Replace the  following  characters
                                            with a space: , ;

                                          o Replace  multiple  spaces with one
                                            space

                                          o Convert uppercase letters (A-Z) to
                                            lowercase (a-z)
                                             COMPRESS_WHITE_SPACE   -  Replace
                                             these  characters  with  a  space
                                             character (decimal 32):

                                          o \f , formfeed, decimal 12

                                          o \t , tab, decimal 9

                                          o \n , newline, decimal 10

                                          o \r , carriage return, decimal 13

                                          o \v , vertical tab, decimal 11

                                          o Non-breaking space, decimal 160
                                             COMPRESS_WHITE_SPACE         also
                                             replaces multiple spaces with one
                                             space.

                                             CSS_DECODE  -  Decode  characters
                                             that were encoded using  CSS  2.x
                                             escape rules syndata.html#charac-
                                             ters . This function uses  up  to
                                             two   bytes   in   the   decoding
                                             process,  so  it  can   help   to
                                             uncover   ASCII  characters  that
                                             were encoded using  CSS  encoding
                                             that    wouldnt    typically   be
                                             encoded.  It's  also  useful   in
                                             countering  evasion,  which  is a
                                             combination of  a  backslash  and
                                             non-hexadecimal  characters.  For
                                             example,     ja\vascript      for
                                             javascript.

                                             ESCAPE_SEQ_DECODE  -  Decode  the
                                             following    ANSI    C     escape
                                             sequences: \a , \b , \f , \n , \r
                                             , \t , \v , \\ , \? , \' ,  \"  ,
                                             \xHH     (hexadecimal),     \0OOO
                                             (octal).  Encodings  that  aren't
                                             valid remain in the output.

                                             HEX_DECODE  -  Decode a string of
                                             hexadecimal  characters  into   a
                                             binary.

                                             HTML_ENTITY_DECODE    -   Replace
                                             HTML-encoded   characters    with
                                             unencoded             characters.
                                             HTML_ENTITY_DECODE performs these
                                             operations:

                                          o Replaces (ampersand)quot; with "

                                          o Replaces  (ampersand)nbsp;  with a
                                            non-breaking space, decimal 160

                                          o Replaces  (ampersand)lt;  with   a
                                            "less than" symbol

                                          o Replaces (ampersand)gt; with >

                                          o Replaces  characters that are rep-
                                            resented  in  hexadecimal  format,
                                            (ampersand)#xhhhh; , with the cor-
                                            responding characters

                                          o Replaces characters that are  rep-
                                            resented    in   decimal   format,
                                            (ampersand)#nnnn; , with the  cor-
                                            responding characters
                                             JS_DECODE   -  Decode  JavaScript
                                             escape sequences. If a \  u  HHHH
                                             code  is  in the full-width ASCII
                                             code range of  FF01-FF5E  ,  then
                                             the higher byte is used to detect
                                             and adjust  the  lower  byte.  If
                                             not,  only the lower byte is used
                                             and the higher  byte  is  zeroed,
                                             causing a possible loss of infor-
                                             mation.

                                             LOWERCASE  -  Convert   uppercase
                                             letters (A-Z) to lowercase (a-z).

                                             MD5 - Calculate an MD5 hash  from
                                             the  data  in the input. The com-
                                             puted hash is  in  a  raw  binary
                                             form.

                                             NONE  - Specify NONE if you don't
                                             want any text transformations.

                                             NORMALIZE_PATH - Remove  multiple
                                             slashes,   directory  self-refer-
                                             ences, and directory  back-refer-
                                             ences  that are not at the begin-
                                             ning of the input from  an  input
                                             string.

                                             NORMALIZE_PATH_WIN  - This is the
                                             same  as  NORMALIZE_PATH  ,   but
                                             first  converts backslash charac-
                                             ters to forward slashes.

                                             REMOVE_NULLS -  Remove  all  NULL
                                             bytes from the input.

                                             REPLACE_COMMENTS  -  Replace each
                                             occurrence of a  C-style  comment
                                             (/* ... */ ) with a single space.
                                             Multiple consecutive  occurrences
                                             are  not compressed. Unterminated
                                             comments are also replaced with a
                                             space  (ASCII  0x20).  However, a
                                             standalone termination of a  com-
                                             ment (*/ ) is not acted upon.

                                             REPLACE_NULLS   -   Replace  NULL
                                             bytes in  the  input  with  space
                                             characters (ASCII 0x20 ).

                                             SQL_HEX_DECODE  -  Decode SQL hex
                                             data. Example (0x414243 ) will be
                                             decoded to (ABC ).

                                             URL_DECODE - Decode a URL-encoded
                                             value.

                                             URL_DECODE_UNI - Like  URL_DECODE
                                             ,    but    with    support   for
                                             Microsoft-specific  %u  encoding.
                                             If  the code is in the full-width
                                             ASCII code range of  FF01-FF5E  ,
                                             the higher byte is used to detect
                                             and adjust the lower byte. Other-
                                             wise, only the lower byte is used
                                             and the higher byte is zeroed.

                                             UTF8_TO_UNICODE  -  Convert   all
                                             UTF-8 character sequences to Uni-
                                             code. This helps input normaliza-
                                             tion,  and minimizing false-posi-
                                             tives  and  false-negatives   for
                                             non-English languages.

                            GeoMatchStatement -> (structure)
                               A  rule statement used to identify web requests
                               based on country of origin.

                               CountryCodes -> (list)
                                   An array of  two-character  country  codes,
                                   for  example,  [  "US",  "CN"  ] , from the
                                   alpha-2 country ISO codes of the  ISO  3166
                                   international standard.

                                   (string)

                               ForwardedIPConfig -> (structure)
                                   The   configuration   for   inspecting   IP
                                   addresses in an HTTP header that you  spec-
                                   ify, instead of using the IP address that's
                                   reported by the web  request  origin.  Com-
                                   monly,  this  is  the X-Forwarded-For (XFF)
                                   header, but  you  can  specify  any  header
                                   name.

                                   NOTE:
                                      If the specified header isn't present in
                                      the request, WAF doesn't apply the  rule
                                      to the web request at all.

                                   HeaderName -> (string)
                                      The  name  of the HTTP header to use for
                                      the IP address. For example, to use  the
                                      X-Forwarded-For  (XFF)  header, set this
                                      to X-Forwarded-For .

                                      NOTE:
                                          If  the   specified   header   isn't
                                          present  in the request, WAF doesn't
                                          apply the rule to the web request at
                                          all.

                                   FallbackBehavior -> (string)
                                      The  match  status  to assign to the web
                                      request if the request  doesn't  have  a
                                      valid  IP address in the specified posi-
                                      tion.

                                      NOTE:
                                          If  the   specified   header   isn't
                                          present  in the request, WAF doesn't
                                          apply the rule to the web request at
                                          all.

                                      You  can  specify the following fallback
                                      behaviors:

                                      o MATCH  -  Treat  the  web  request  as
                                        matching   the   rule  statement.  WAF
                                        applies  the  rule   action   to   the
                                        request.

                                      o NO_MATCH  -  Treat  the web request as
                                        not matching the rule statement.

                            RuleGroupReferenceStatement -> (structure)
                               A rule statement used to run the rules that are
                               defined in a  RuleGroup . To use this, create a
                               rule group with your rules,  then  provide  the
                               ARN of the rule group in this statement.

                               You cannot nest a RuleGroupReferenceStatement ,
                               for example for use inside  a  NotStatement  or
                               OrStatement  .  You  can  only use a rule group
                               reference statement at the top level  inside  a
                               web ACL.

                               ARN -> (string)
                                   The  Amazon  Resource  Name  (ARN)  of  the
                                   entity.

                               ExcludedRules -> (list)
                                   The rules  in  the  referenced  rule  group
                                   whose  actions  are set to Count . When you
                                   exclude a rule, WAF evaluates it exactly as
                                   it  would  if  the rule action setting were
                                   Count . This is a useful option for testing
                                   the rules in a rule group without modifying
                                   how they handle your web traffic.

                                   (structure)
                                      Specifies a single rule in a rule  group
                                      whose  action  you  want  to override to
                                      Count . When you  exclude  a  rule,  WAF
                                      evaluates  it exactly as it would if the
                                      rule action setting were Count . This is
                                      a useful option for testing the rules in
                                      a rule group without modifying how  they
                                      handle your web traffic.

                                      Name -> (string)
                                          The  name  of  the rule whose action
                                          you want to override to Count .

                            IPSetReferenceStatement -> (structure)
                               A rule statement used to  detect  web  requests
                               coming  from particular IP addresses or address
                               ranges. To use  this,  create  an   IPSet  that
                               specifies  the  addresses  you  want to detect,
                               then use the ARN of that set in this statement.
                               To create an IP set, see  CreateIPSet .

                               Each  IP  set  rule  statement references an IP
                               set. You create and maintain the  set  indepen-
                               dent  of your rules. This allows you to use the
                               single set in multiple rules. When  you  update
                               the  referenced  set, WAF automatically updates
                               all rules that reference it.

                               ARN -> (string)
                                   The  Amazon  Resource  Name  (ARN)  of  the
                                   IPSet that this statement references.

                               IPSetForwardedIPConfig -> (structure)
                                   The   configuration   for   inspecting   IP
                                   addresses in an HTTP header that you  spec-
                                   ify, instead of using the IP address that's
                                   reported by the web  request  origin.  Com-
                                   monly,  this  is  the X-Forwarded-For (XFF)
                                   header, but  you  can  specify  any  header
                                   name.

                                   NOTE:
                                      If the specified header isn't present in
                                      the request, WAF doesn't apply the  rule
                                      to the web request at all.

                                   HeaderName -> (string)
                                      The  name  of the HTTP header to use for
                                      the IP address. For example, to use  the
                                      X-Forwarded-For  (XFF)  header, set this
                                      to X-Forwarded-For .

                                      NOTE:
                                          If  the   specified   header   isn't
                                          present  in the request, WAF doesn't
                                          apply the rule to the web request at
                                          all.

                                   FallbackBehavior -> (string)
                                      The  match  status  to assign to the web
                                      request if the request  doesn't  have  a
                                      valid  IP address in the specified posi-
                                      tion.

                                      NOTE:
                                          If  the   specified   header   isn't
                                          present  in the request, WAF doesn't
                                          apply the rule to the web request at
                                          all.

                                      You  can  specify the following fallback
                                      behaviors:

                                      o MATCH  -  Treat  the  web  request  as
                                        matching   the   rule  statement.  WAF
                                        applies  the  rule   action   to   the
                                        request.

                                      o NO_MATCH  -  Treat  the web request as
                                        not matching the rule statement.

                                   Position -> (string)
                                      The position in the header to search for
                                      the  IP  address. The header can contain
                                      IP addresses of the original client  and
                                      also of proxies. For example, the header
                                      value  could  be  10.1.1.1,   127.0.0.0,
                                      10.10.10.10  where  the first IP address
                                      identifies the original client  and  the
                                      rest  identify  proxies that the request
                                      went through.

                                      The options for  this  setting  are  the
                                      following:

                                      o FIRST  -  Inspect the first IP address
                                        in the list of  IP  addresses  in  the
                                        header.  This  is usually the client's
                                        original IP.

                                      o LAST - Inspect the last IP address  in
                                        the   list  of  IP  addresses  in  the
                                        header.

                                      o ANY - Inspect all IP addresses in  the
                                        header for a match. If the header con-
                                        tains more than 10 IP  addresses,  WAF
                                        inspects the last 10.

                            RegexPatternSetReferenceStatement -> (structure)
                               A  rule  statement  used  to search web request
                               components for  matches  with  regular  expres-
                               sions.  To  use this, create a  RegexPatternSet
                               that specifies the expressions that you want to
                               detect,  then  use  the ARN of that set in this
                               statement. A web request  matches  the  pattern
                               set  rule  statement  if  the request component
                               matches any of the patterns in the set. To cre-
                               ate  a  regex pattern set, see  CreateRegexPat-
                               ternSet .

                               Each regex pattern set  rule  statement  refer-
                               ences a regex pattern set. You create and main-
                               tain the set independent of  your  rules.  This
                               allows  you  to  use the single set in multiple
                               rules. When you update the referenced set,  WAF
                               automatically  updates all rules that reference
                               it.

                               ARN -> (string)
                                   The Amazon Resource Name (ARN) of the  Reg-
                                   exPatternSet  that  this  statement  refer-
                                   ences.

                               FieldToMatch -> (structure)
                                   The part of a web request that you want WAF
                                   to   inspect.  For  more  information,  see
                                   FieldToMatch .

                                   SingleHeader -> (structure)
                                      Inspect a  single  header.  Provide  the
                                      name of the header to inspect, for exam-
                                      ple, User-Agent or Referer .  This  set-
                                      ting isn't case sensitive.

                                      Example  JSON: "SingleHeader": { "Name":
                                      "haystack" }

                                      Name -> (string)
                                          The name  of  the  query  header  to
                                          inspect.

                                   SingleQueryArgument -> (structure)
                                      Inspect a single query argument. Provide
                                      the  name  of  the  query  argument   to
                                      inspect, such as UserName or SalesRegion
                                      . The name can be up  to  30  characters
                                      long and isn't case sensitive.

                                      This  is  used  only to indicate the web
                                      request component for WAF to inspect, in
                                      the  FieldToMatch specification.

                                      Example  JSON:  "SingleQueryArgument": {
                                      "Name": "myArgument" }

                                      Name -> (string)
                                          The name of the  query  argument  to
                                          inspect.

                                   AllQueryArguments -> (structure)
                                      Inspect all query arguments.

                                   UriPath -> (structure)
                                      Inspect  the  request  URI path. This is
                                      the part of a web request  that  identi-
                                      fies    a    resource,    for   example,
                                      /images/daily-ad.jpg .

                                   QueryString -> (structure)
                                      Inspect the query string.  This  is  the
                                      part  of  a  URL  that appears after a ?
                                      character, if any.

                                   Body -> (structure)
                                      Inspect the request body as plain  text.
                                      The request body immediately follows the
                                      request headers. This is the part  of  a
                                      request  that  contains  any  additional
                                      data that you want to send to  your  web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note that only  the  first  8  KB  (8192
                                      bytes) of the request body are forwarded
                                      to WAF for inspection by the  underlying
                                      host  service.  If  you  don't  need  to
                                      inspect more than 8 KB, you can  guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes in by combining a  statement  that
                                      inspects  the  body  of the web request,
                                      such as  ByteMatchStatement  or   Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8  KB  size  limit  on  the  body of the
                                      request. WAF doesn't support  inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                   Method -> (structure)
                                      Inspect  the  HTTP  method.  The  method
                                      indicates the type of operation that the
                                      request is asking the origin to perform.

                                   JsonBody -> (structure)
                                      Inspect  the  request  body as JSON. The
                                      request  body  immediately  follows  the
                                      request  headers.  This is the part of a
                                      request  that  contains  any  additional
                                      data  that  you want to send to your web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note  that  only  the  first  8 KB (8192
                                      bytes) of the request body are forwarded
                                      to  WAF for inspection by the underlying
                                      host  service.  If  you  don't  need  to
                                      inspect  more than 8 KB, you can guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes  in  by combining a statement that
                                      inspects the body of  the  web  request,
                                      such  as   ByteMatchStatement or  Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8 KB size  limit  on  the  body  of  the
                                      request.  WAF doesn't support inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                      MatchPattern -> (structure)
                                          The patterns to look for in the JSON
                                          body. WAF inspects  the  results  of
                                          these  pattern  matches  against the
                                          rule inspection criteria.

                                          All -> (structure)
                                             Match all of  the  elements.  See
                                             also MatchScope in  JsonBody .

                                             You must specify either this set-
                                             ting or  the  IncludedPaths  set-
                                             ting, but not both.

                                          IncludedPaths -> (list)
                                             Match  only the specified include
                                             paths.  See  also  MatchScope  in
                                             JsonBody .

                                             Provide  the  include paths using
                                             JSON Pointer syntax. For example,
                                             "IncludedPaths": ["/dogs/0/name",
                                             "/dogs/1/name"] . For information
                                             about this syntax, see the Inter-
                                             net Engineering Task Force (IETF)
                                             documentation  JavaScript  Object
                                             Notation (JSON) Pointer .

                                             You must specify either this set-
                                             ting  or the All setting, but not
                                             both.

                                             NOTE:
                                                 Don't  use  this  option   to
                                                 include  all  paths. Instead,
                                                 use the All setting.

                                             (string)

                                      MatchScope -> (string)
                                          The  parts  of  the  JSON  to  match
                                          against  using the MatchPattern . If
                                          you  specify  All  ,   WAF   matches
                                          against keys and values.

                                      InvalidFallbackBehavior -> (string)
                                          What  WAF  should  do if it fails to
                                          completely parse the JSON body.  The
                                          options are the following:

                                          o EVALUATE_AS_STRING  -  Inspect the
                                            body as plain  text.  WAF  applies
                                            the   text   transformations   and
                                            inspection   criteria   that   you
                                            defined for the JSON inspection to
                                            the body text string.

                                          o MATCH - Treat the web  request  as
                                            matching  the  rule statement. WAF
                                            applies the  rule  action  to  the
                                            request.

                                          o NO_MATCH  -  Treat the web request
                                            as not matching  the  rule  state-
                                            ment.

                                          If  you  don't provide this setting,
                                          WAF parses and evaluates the content
                                          only up to the first parsing failure
                                          that it encounters.

                                          WAF  does  its  best  to  parse  the
                                          entire   JSON  body,  but  might  be
                                          forced to stop for reasons  such  as
                                          invalid  characters, duplicate keys,
                                          truncation, and  any  content  whose
                                          root  node  isn't  an  object  or an
                                          array.

                                          WAF parses the JSON in the following
                                          examples  as  two  valid  key, value
                                          pairs:

                                          o Missing                     comma:
                                            {"key1":"value1""key2":"value2"}

                                          o Missing                     colon:
                                            {"key1":"value1","key2""value2"}

                                          o Extra                      colons:
                                            {"key1"::"value1","key2""value2"}

                               TextTransformations -> (list)
                                   Text  transformations eliminate some of the
                                   unusual formatting that  attackers  use  in
                                   web  requests in an effort to bypass detec-
                                   tion. If you specify one or more  transfor-
                                   mations  in  a rule statement, WAF performs
                                   all transformations on the content  of  the
                                   request   component  identified  by  Field-
                                   ToMatch , starting from the lowest priority
                                   setting,  before inspecting the content for
                                   a match.

                                   (structure)
                                      Text transformations eliminate  some  of
                                      the  unusual  formatting  that attackers
                                      use in web  requests  in  an  effort  to
                                      bypass detection.

                                      Priority -> (integer)
                                          Sets  the  relative processing order
                                          for  multiple  transformations  that
                                          are  defined  for  a rule statement.
                                          WAF processes  all  transformations,
                                          from  lowest  priority  to  highest,
                                          before  inspecting  the  transformed
                                          content.  The  priorities don't need
                                          to be consecutive, but they must all
                                          be different.

                                      Type -> (string)
                                          You can specify the following trans-
                                          formation types:
                                             BASE64_DECODE - Decode  a  Base64
                                             -encoded string.

                                             BASE64_DECODE_EXT   -   Decode  a
                                             Base64 -encoded string, but use a
                                             forgiving   implementation   that
                                             ignores  characters  that  aren't
                                             valid.

                                             CMD_LINE - Command-line transfor-
                                             mations.  These  are  helpful  in
                                             reducing effectiveness of attack-
                                             ers who inject an operating  sys-
                                             tem  command-line command and use
                                             unusual  formatting  to  disguise
                                             some or all of the command.

                                          o Delete the following characters: \
                                            " ' ^

                                          o Delete spaces before the following
                                            characters: / (

                                          o Replace  the  following characters
                                            with a space: , ;

                                          o Replace multiple spaces  with  one
                                            space

                                          o Convert uppercase letters (A-Z) to
                                            lowercase (a-z)
                                             COMPRESS_WHITE_SPACE  -   Replace
                                             these  characters  with  a  space
                                             character (decimal 32):

                                          o \f , formfeed, decimal 12

                                          o \t , tab, decimal 9

                                          o \n , newline, decimal 10

                                          o \r , carriage return, decimal 13

                                          o \v , vertical tab, decimal 11

                                          o Non-breaking space, decimal 160
                                             COMPRESS_WHITE_SPACE         also
                                             replaces multiple spaces with one
                                             space.

                                             CSS_DECODE  -  Decode  characters
                                             that  were  encoded using CSS 2.x
                                             escape rules syndata.html#charac-
                                             ters  .  This function uses up to
                                             two   bytes   in   the   decoding
                                             process,   so   it  can  help  to
                                             uncover  ASCII  characters   that
                                             were  encoded  using CSS encoding
                                             that   wouldnt    typically    be
                                             encoded.   It's  also  useful  in
                                             countering evasion,  which  is  a
                                             combination  of  a  backslash and
                                             non-hexadecimal  characters.  For
                                             example,      ja\vascript     for
                                             javascript.

                                             ESCAPE_SEQ_DECODE  -  Decode  the
                                             following     ANSI    C    escape
                                             sequences: \a , \b , \f , \n , \r
                                             ,  \t  , \v , \\ , \? , \' , \" ,
                                             \xHH     (hexadecimal),     \0OOO
                                             (octal).  Encodings  that  aren't
                                             valid remain in the output.

                                             HEX_DECODE - Decode a  string  of
                                             hexadecimal   characters  into  a
                                             binary.

                                             HTML_ENTITY_DECODE   -    Replace
                                             HTML-encoded    characters   with
                                             unencoded             characters.
                                             HTML_ENTITY_DECODE performs these
                                             operations:

                                          o Replaces (ampersand)quot; with "

                                          o Replaces (ampersand)nbsp;  with  a
                                            non-breaking space, decimal 160

                                          o Replaces   (ampersand)lt;  with  a
                                            "less than" symbol

                                          o Replaces (ampersand)gt; with >

                                          o Replaces characters that are  rep-
                                            resented  in  hexadecimal  format,
                                            (ampersand)#xhhhh; , with the cor-
                                            responding characters

                                          o Replaces  characters that are rep-
                                            resented   in   decimal    format,
                                            (ampersand)#nnnn;  , with the cor-
                                            responding characters
                                             JS_DECODE  -  Decode   JavaScript
                                             escape sequences. If a \  u  HHHH
                                             code is in the  full-width  ASCII
                                             code  range  of  FF01-FF5E , then
                                             the higher byte is used to detect
                                             and  adjust  the  lower  byte. If
                                             not, only the lower byte is  used
                                             and  the  higher  byte is zeroed,
                                             causing a possible loss of infor-
                                             mation.

                                             LOWERCASE   -  Convert  uppercase
                                             letters (A-Z) to lowercase (a-z).

                                             MD5  - Calculate an MD5 hash from
                                             the data in the input.  The  com-
                                             puted  hash  is  in  a raw binary
                                             form.

                                             NONE - Specify NONE if you  don't
                                             want any text transformations.

                                             NORMALIZE_PATH  - Remove multiple
                                             slashes,  directory   self-refer-
                                             ences,  and directory back-refer-
                                             ences that are not at the  begin-
                                             ning  of  the input from an input
                                             string.

                                             NORMALIZE_PATH_WIN - This is  the
                                             same   as  NORMALIZE_PATH  ,  but
                                             first converts backslash  charac-
                                             ters to forward slashes.

                                             REMOVE_NULLS  -  Remove  all NULL
                                             bytes from the input.

                                             REPLACE_COMMENTS -  Replace  each
                                             occurrence  of  a C-style comment
                                             (/* ... */ ) with a single space.
                                             Multiple  consecutive occurrences
                                             are not compressed.  Unterminated
                                             comments are also replaced with a
                                             space (ASCII  0x20).  However,  a
                                             standalone  termination of a com-
                                             ment (*/ ) is not acted upon.

                                             REPLACE_NULLS  -   Replace   NULL
                                             bytes  in  the  input  with space
                                             characters (ASCII 0x20 ).

                                             SQL_HEX_DECODE - Decode  SQL  hex
                                             data. Example (0x414243 ) will be
                                             decoded to (ABC ).

                                             URL_DECODE - Decode a URL-encoded
                                             value.

                                             URL_DECODE_UNI  - Like URL_DECODE
                                             ,   but    with    support    for
                                             Microsoft-specific  %u  encoding.
                                             If the code is in the  full-width
                                             ASCII  code  range of FF01-FF5E ,
                                             the higher byte is used to detect
                                             and adjust the lower byte. Other-
                                             wise, only the lower byte is used
                                             and the higher byte is zeroed.

                                             UTF8_TO_UNICODE   -  Convert  all
                                             UTF-8 character sequences to Uni-
                                             code. This helps input normaliza-
                                             tion, and minimizing  false-posi-
                                             tives   and  false-negatives  for
                                             non-English languages.

                            RateBasedStatement -> (structure)
                               A rate-based rule tracks the rate  of  requests
                               for  each  originating IP address, and triggers
                               the rule action when the rate exceeds  a  limit
                               that  you  specify on the number of requests in
                               any 5-minute time span. You can use this to put
                               a  temporary  block  on  requests  from  an  IP
                               address that is sending excessive requests.

                               WAF tracks and manages web requests  separately
                               for each instance of a rate-based rule that you
                               use. For  example,  if  you  provide  the  same
                               rate-based  rule settings in two web ACLs, each
                               of the two rule statements represents  a  sepa-
                               rate  instance  of the rate-based rule and gets
                               its own tracking and management by WAF. If  you
                               define  a  rate-based rule inside a rule group,
                               and  then  use  that  rule  group  in  multiple
                               places, each use creates a separate instance of
                               the rate-based rule that gets its own  tracking
                               and management by WAF.

                               When the rule action triggers, WAF blocks addi-
                               tional requests from the IP address  until  the
                               request rate falls below the limit.

                               You   can  optionally  nest  another  statement
                               inside the rate-based statement, to narrow  the
                               scope  of  the  rule  so  that  it  only counts
                               requests that match the nested  statement.  For
                               example, based on recent requests that you have
                               seen from  an  attacker,  you  might  create  a
                               rate-based  rule  with a nested AND rule state-
                               ment that contains the following nested  state-
                               ments:

                               o An  IP  match  statement  with an IP set that
                                 specified the address 192.0.2.44.

                               o A string match statement that searches in the
                                 User-Agent header for the string BadBot.

                               In this rate-based rule, you also define a rate
                               limit. For this  example,  the  rate  limit  is
                               1,000.  Requests  that  meet both of the condi-
                               tions in the statements  are  counted.  If  the
                               count  exceeds 1,000 requests per five minutes,
                               the rule action triggers. Requests that do  not
                               meet  both  conditions  are not counted towards
                               the rate limit and are  not  affected  by  this
                               rule.

                               You  cannot  nest  a  RateBasedStatement inside
                               another statement, for example  inside  a  Not-
                               Statement  or  OrStatement  .  You can define a
                               RateBasedStatement inside a web ACL and  inside
                               a rule group.

                               Limit -> (long)
                                   The  limit  on requests per 5-minute period
                                   for a single originating IP address. If the
                                   statement  includes  a ScopeDownStatement ,
                                   this limit is applied only to the  requests
                                   that match the statement.

                               AggregateKeyType -> (string)
                                   Setting that indicates how to aggregate the
                                   request counts. The options are the follow-
                                   ing:

                                   o IP  - Aggregate the request counts on the
                                     IP address from the web request origin.

                                   o FORWARDED_IP  -  Aggregate  the   request
                                     counts on the first IP address in an HTTP
                                     header. If you use  this,  configure  the
                                     ForwardedIPConfig , to specify the header
                                     to use.

                               (  ...  recursive  ...  )ForwardedIPConfig   ->
                               (structure)
                                   The   configuration   for   inspecting   IP
                                   addresses in an HTTP header that you  spec-
                                   ify, instead of using the IP address that's
                                   reported by the web  request  origin.  Com-
                                   monly,  this  is  the X-Forwarded-For (XFF)
                                   header, but  you  can  specify  any  header
                                   name.

                                   NOTE:
                                      If the specified header isn't present in
                                      the request, WAF doesn't apply the  rule
                                      to the web request at all.

                                   This is required if AggregateKeyType is set
                                   to FORWARDED_IP .

                                   HeaderName -> (string)
                                      The name of the HTTP header to  use  for
                                      the  IP address. For example, to use the
                                      X-Forwarded-For (XFF) header,  set  this
                                      to X-Forwarded-For .

                                      NOTE:
                                          If   the   specified   header  isn't
                                          present in the request, WAF  doesn't
                                          apply the rule to the web request at
                                          all.

                                   FallbackBehavior -> (string)
                                      The match status to assign  to  the  web
                                      request  if  the  request doesn't have a
                                      valid IP address in the specified  posi-
                                      tion.

                                      NOTE:
                                          If   the   specified   header  isn't
                                          present in the request, WAF  doesn't
                                          apply the rule to the web request at
                                          all.

                                      You can specify the  following  fallback
                                      behaviors:

                                      o MATCH  -  Treat  the  web  request  as
                                        matching  the  rule   statement.   WAF
                                        applies   the   rule   action  to  the
                                        request.

                                      o NO_MATCH - Treat the  web  request  as
                                        not matching the rule statement.

                            AndStatement -> (structure)
                               A  logical rule statement used to combine other
                               rule statements with  AND  logic.  You  provide
                               more  than  one  Statement within the AndState-
                               ment .

                               Statements -> (list)
                                   The statements to combine with  AND  logic.
                                   You  can  use  any  statements  that can be
                                   nested.

                                   ( ... recursive ... )

                            OrStatement -> (structure)
                               A logical rule statement used to combine  other
                               rule statements with OR logic. You provide more
                               than one  Statement within the OrStatement .

                               Statements -> (list)
                                   The statements to combine  with  OR  logic.
                                   You  can  use  any  statements  that can be
                                   nested.

                                   ( ... recursive ... )

                            NotStatement -> (structure)
                               A logical rule statement  used  to  negate  the
                               results  of another rule statement. You provide
                               one  Statement within the NotStatement .

                               ( ... recursive ... )

                            ManagedRuleGroupStatement -> (structure)
                               A rule statement used to run the rules that are
                               defined  in  a managed rule group. To use this,
                               provide the vendor name and  the  name  of  the
                               rule  group in this statement. You can retrieve
                               the required names by calling   ListAvailableM-
                               anagedRuleGroups .

                               You  cannot  nest a ManagedRuleGroupStatement ,
                               for example for use inside  a  NotStatement  or
                               OrStatement  .  It  can only be referenced as a
                               top-level statement within a rule.

                               VendorName -> (string)
                                   The name of the managed rule group  vendor.
                                   You  use  this,  along  with the rule group
                                   name, to identify the rule group.

                               Name -> (string)
                                   The name of the managed rule group. You use
                                   this,  along with the vendor name, to iden-
                                   tify the rule group.

                               Version -> (string)
                                   The version of the managed  rule  group  to
                                   use.  If you specify this, the version set-
                                   ting is fixed until you change it.  If  you
                                   don't  specify  this, WAF uses the vendor's
                                   default version, and then keeps the version
                                   at  the  vendor's  default  when the vendor
                                   updates the managed rule group settings.

                               ExcludedRules -> (list)
                                   The rules  in  the  referenced  rule  group
                                   whose  actions  are set to Count . When you
                                   exclude a rule, WAF evaluates it exactly as
                                   it  would  if  the rule action setting were
                                   Count . This is a useful option for testing
                                   the rules in a rule group without modifying
                                   how they handle your web traffic.

                                   (structure)
                                      Specifies a single rule in a rule  group
                                      whose  action  you  want  to override to
                                      Count . When you  exclude  a  rule,  WAF
                                      evaluates  it exactly as it would if the
                                      rule action setting were Count . This is
                                      a useful option for testing the rules in
                                      a rule group without modifying how  they
                                      handle your web traffic.

                                      Name -> (string)
                                          The  name  of  the rule whose action
                                          you want to override to Count .

                               ( ... recursive ... )

                            LabelMatchStatement -> (structure)
                               A rule statement that defines  a  string  match
                               search  against  labels that have been added to
                               the web request by rules that have already  run
                               in the web ACL.

                               The label match statement provides the label or
                               namespace  string  to  search  for.  The  label
                               string can represent a part or all of the fully
                               qualified label name that had been added to the
                               web request. Fully qualified labels have a pre-
                               fix, optional namespaces, and label  name.  The
                               prefix  identifies  the  rule  group or web ACL
                               context of the rule that added  the  label.  If
                               you  do not provide the fully qualified name in
                               your  label  match  string,  WAF  performs  the
                               search  for  labels that were added in the same
                               context as the label match statement.

                               Scope -> (string)
                                   Specify whether you want to match using the
                                   label name or just the namespace.

                               Key -> (string)
                                   The  string  to  match against. The setting
                                   you provide for this depends on  the  match
                                   statement's Scope setting:

                                   o If  the Scope indicates LABEL , then this
                                     specification must include the  name  and
                                     can   include  any  number  of  preceding
                                     namespace specifications and prefix up to
                                     providing the fully qualified label name.

                                   o If the Scope indicates NAMESPACE  ,  then
                                     this specification can include any number
                                     of contiguous namespace strings, and  can
                                     include the entire label namespace prefix
                                     from the rule group or web ACL where  the
                                     label originates.

                                   Labels are case sensitive and components of
                                   a label must be  separated  by  colon,  for
                                   example NS1:NS2:name .

                            RegexMatchStatement -> (structure)
                               A  rule  statement  used  to search web request
                               components for a match against a single regular
                               expression.

                               RegexString -> (string)
                                   The string representing the regular expres-
                                   sion.

                               FieldToMatch -> (structure)
                                   The part of a web request that you want WAF
                                   to   inspect.  For  more  information,  see
                                   FieldToMatch .

                                   SingleHeader -> (structure)
                                      Inspect a  single  header.  Provide  the
                                      name of the header to inspect, for exam-
                                      ple, User-Agent or Referer .  This  set-
                                      ting isn't case sensitive.

                                      Example  JSON: "SingleHeader": { "Name":
                                      "haystack" }

                                      Name -> (string)
                                          The name  of  the  query  header  to
                                          inspect.

                                   SingleQueryArgument -> (structure)
                                      Inspect a single query argument. Provide
                                      the  name  of  the  query  argument   to
                                      inspect, such as UserName or SalesRegion
                                      . The name can be up  to  30  characters
                                      long and isn't case sensitive.

                                      This  is  used  only to indicate the web
                                      request component for WAF to inspect, in
                                      the  FieldToMatch specification.

                                      Example  JSON:  "SingleQueryArgument": {
                                      "Name": "myArgument" }

                                      Name -> (string)
                                          The name of the  query  argument  to
                                          inspect.

                                   AllQueryArguments -> (structure)
                                      Inspect all query arguments.

                                   UriPath -> (structure)
                                      Inspect  the  request  URI path. This is
                                      the part of a web request  that  identi-
                                      fies    a    resource,    for   example,
                                      /images/daily-ad.jpg .

                                   QueryString -> (structure)
                                      Inspect the query string.  This  is  the
                                      part  of  a  URL  that appears after a ?
                                      character, if any.

                                   Body -> (structure)
                                      Inspect the request body as plain  text.
                                      The request body immediately follows the
                                      request headers. This is the part  of  a
                                      request  that  contains  any  additional
                                      data that you want to send to  your  web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note that only  the  first  8  KB  (8192
                                      bytes) of the request body are forwarded
                                      to WAF for inspection by the  underlying
                                      host  service.  If  you  don't  need  to
                                      inspect more than 8 KB, you can  guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes in by combining a  statement  that
                                      inspects  the  body  of the web request,
                                      such as  ByteMatchStatement  or   Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8  KB  size  limit  on  the  body of the
                                      request. WAF doesn't support  inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                   Method -> (structure)
                                      Inspect  the  HTTP  method.  The  method
                                      indicates the type of operation that the
                                      request is asking the origin to perform.

                                   JsonBody -> (structure)
                                      Inspect  the  request  body as JSON. The
                                      request  body  immediately  follows  the
                                      request  headers.  This is the part of a
                                      request  that  contains  any  additional
                                      data  that  you want to send to your web
                                      server as the HTTP request body, such as
                                      data from a form.

                                      Note  that  only  the  first  8 KB (8192
                                      bytes) of the request body are forwarded
                                      to  WAF for inspection by the underlying
                                      host  service.  If  you  don't  need  to
                                      inspect  more than 8 KB, you can guaran-
                                      tee  that  you  don't  allow  additional
                                      bytes  in  by combining a statement that
                                      inspects the body of  the  web  request,
                                      such  as   ByteMatchStatement or  Regex-
                                      PatternSetReferenceStatement  ,  with  a
                                      SizeConstraintStatement that enforces an
                                      8 KB size  limit  on  the  body  of  the
                                      request.  WAF doesn't support inspecting
                                      the  entire  contents  of  web  requests
                                      whose bodies exceed the 8 KB limit.

                                      MatchPattern -> (structure)
                                          The patterns to look for in the JSON
                                          body. WAF inspects  the  results  of
                                          these  pattern  matches  against the
                                          rule inspection criteria.

                                          All -> (structure)
                                             Match all of  the  elements.  See
                                             also MatchScope in  JsonBody .

                                             You must specify either this set-
                                             ting or  the  IncludedPaths  set-
                                             ting, but not both.

                                          IncludedPaths -> (list)
                                             Match  only the specified include
                                             paths.  See  also  MatchScope  in
                                             JsonBody .

                                             Provide  the  include paths using
                                             JSON Pointer syntax. For example,
                                             "IncludedPaths": ["/dogs/0/name",
                                             "/dogs/1/name"] . For information
                                             about this syntax, see the Inter-
                                             net Engineering Task Force (IETF)
                                             documentation  JavaScript  Object
                                             Notation (JSON) Pointer .

                                             You must specify either this set-
                                             ting  or the All setting, but not
                                             both.

                                             NOTE:
                                                 Don't  use  this  option   to
                                                 include  all  paths. Instead,
                                                 use the All setting.

                                             (string)

                                      MatchScope -> (string)
                                          The  parts  of  the  JSON  to  match
                                          against  using the MatchPattern . If
                                          you  specify  All  ,   WAF   matches
                                          against keys and values.

                                      InvalidFallbackBehavior -> (string)
                                          What  WAF  should  do if it fails to
                                          completely parse the JSON body.  The
                                          options are the following:

                                          o EVALUATE_AS_STRING  -  Inspect the
                                            body as plain  text.  WAF  applies
                                            the   text   transformations   and
                                            inspection   criteria   that   you
                                            defined for the JSON inspection to
                                            the body text string.

                                          o MATCH - Treat the web  request  as
                                            matching  the  rule statement. WAF
                                            applies the  rule  action  to  the
                                            request.

                                          o NO_MATCH  -  Treat the web request
                                            as not matching  the  rule  state-
                                            ment.

                                          If  you  don't provide this setting,
                                          WAF parses and evaluates the content
                                          only up to the first parsing failure
                                          that it encounters.

                                          WAF  does  its  best  to  parse  the
                                          entire   JSON  body,  but  might  be
                                          forced to stop for reasons  such  as
                                          invalid  characters, duplicate keys,
                                          truncation, and  any  content  whose
                                          root  node  isn't  an  object  or an
                                          array.

                                          WAF parses the JSON in the following
                                          examples  as  two  valid  key, value
                                          pairs:

                                          o Missing                     comma:
                                            {"key1":"value1""key2":"value2"}

                                          o Missing                     colon:
                                            {"key1":"value1","key2""value2"}

                                          o Extra                      colons:
                                            {"key1"::"value1","key2""value2"}

                               TextTransformations -> (list)
                                   Text  transformations eliminate some of the
                                   unusual formatting that  attackers  use  in
                                   web  requests in an effort to bypass detec-
                                   tion. If you specify one or more  transfor-
                                   mations  in  a rule statement, WAF performs
                                   all transformations on the content  of  the
                                   request   component  identified  by  Field-
                                   ToMatch , starting from the lowest priority
                                   setting,  before inspecting the content for
                                   a match.

                                   (structure)
                                      Text transformations eliminate  some  of
                                      the  unusual  formatting  that attackers
                                      use in web  requests  in  an  effort  to
                                      bypass detection.

                                      Priority -> (integer)
                                          Sets  the  relative processing order
                                          for  multiple  transformations  that
                                          are  defined  for  a rule statement.
                                          WAF processes  all  transformations,
                                          from  lowest  priority  to  highest,
                                          before  inspecting  the  transformed
                                          content.  The  priorities don't need
                                          to be consecutive, but they must all
                                          be different.

                                      Type -> (string)
                                          You can specify the following trans-
                                          formation types:
                                             BASE64_DECODE - Decode  a  Base64
                                             -encoded string.

                                             BASE64_DECODE_EXT   -   Decode  a
                                             Base64 -encoded string, but use a
                                             forgiving   implementation   that
                                             ignores  characters  that  aren't
                                             valid.

                                             CMD_LINE - Command-line transfor-
                                             mations.  These  are  helpful  in
                                             reducing effectiveness of attack-
                                             ers who inject an operating  sys-
                                             tem  command-line command and use
                                             unusual  formatting  to  disguise
                                             some or all of the command.

                                          o Delete the following characters: \
                                            " ' ^

                                          o Delete spaces before the following
                                            characters: / (

                                          o Replace  the  following characters
                                            with a space: , ;

                                          o Replace multiple spaces  with  one
                                            space

                                          o Convert uppercase letters (A-Z) to
                                            lowercase (a-z)
                                             COMPRESS_WHITE_SPACE  -   Replace
                                             these  characters  with  a  space
                                             character (decimal 32):

                                          o \f , formfeed, decimal 12

                                          o \t , tab, decimal 9

                                          o \n , newline, decimal 10

                                          o \r , carriage return, decimal 13

                                          o \v , vertical tab, decimal 11

                                          o Non-breaking space, decimal 160
                                             COMPRESS_WHITE_SPACE         also
                                             replaces multiple spaces with one
                                             space.

                                             CSS_DECODE  -  Decode  characters
                                             that  were  encoded using CSS 2.x
                                             escape rules syndata.html#charac-
                                             ters  .  This function uses up to
                                             two   bytes   in   the   decoding
                                             process,   so   it  can  help  to
                                             uncover  ASCII  characters   that
                                             were  encoded  using CSS encoding
                                             that   wouldnt    typically    be
                                             encoded.   It's  also  useful  in
                                             countering evasion,  which  is  a
                                             combination  of  a  backslash and
                                             non-hexadecimal  characters.  For
                                             example,      ja\vascript     for
                                             javascript.

                                             ESCAPE_SEQ_DECODE  -  Decode  the
                                             following     ANSI    C    escape
                                             sequences: \a , \b , \f , \n , \r
                                             ,  \t  , \v , \\ , \? , \' , \" ,
                                             \xHH     (hexadecimal),     \0OOO
                                             (octal).  Encodings  that  aren't
                                             valid remain in the output.

                                             HEX_DECODE - Decode a  string  of
                                             hexadecimal   characters  into  a
                                             binary.

                                             HTML_ENTITY_DECODE   -    Replace
                                             HTML-encoded    characters   with
                                             unencoded             characters.
                                             HTML_ENTITY_DECODE performs these
                                             operations:

                                          o Replaces (ampersand)quot; with "

                                          o Replaces (ampersand)nbsp;  with  a
                                            non-breaking space, decimal 160

                                          o Replaces   (ampersand)lt;  with  a
                                            "less than" symbol

                                          o Replaces (ampersand)gt; with >

                                          o Replaces characters that are  rep-
                                            resented  in  hexadecimal  format,
                                            (ampersand)#xhhhh; , with the cor-
                                            responding characters

                                          o Replaces  characters that are rep-
                                            resented   in   decimal    format,
                                            (ampersand)#nnnn;  , with the cor-
                                            responding characters
                                             JS_DECODE  -  Decode   JavaScript
                                             escape sequences. If a \  u  HHHH
                                             code is in the  full-width  ASCII
                                             code  range  of  FF01-FF5E , then
                                             the higher byte is used to detect
                                             and  adjust  the  lower  byte. If
                                             not, only the lower byte is  used
                                             and  the  higher  byte is zeroed,
                                             causing a possible loss of infor-
                                             mation.

                                             LOWERCASE   -  Convert  uppercase
                                             letters (A-Z) to lowercase (a-z).

                                             MD5  - Calculate an MD5 hash from
                                             the data in the input.  The  com-
                                             puted  hash  is  in  a raw binary
                                             form.

                                             NONE - Specify NONE if you  don't
                                             want any text transformations.

                                             NORMALIZE_PATH  - Remove multiple
                                             slashes,  directory   self-refer-
                                             ences,  and directory back-refer-
                                             ences that are not at the  begin-
                                             ning  of  the input from an input
                                             string.

                                             NORMALIZE_PATH_WIN - This is  the
                                             same   as  NORMALIZE_PATH  ,  but
                                             first converts backslash  charac-
                                             ters to forward slashes.

                                             REMOVE_NULLS  -  Remove  all NULL
                                             bytes from the input.

                                             REPLACE_COMMENTS -  Replace  each
                                             occurrence  of  a C-style comment
                                             (/* ... */ ) with a single space.
                                             Multiple  consecutive occurrences
                                             are not compressed.  Unterminated
                                             comments are also replaced with a
                                             space (ASCII  0x20).  However,  a
                                             standalone  termination of a com-
                                             ment (*/ ) is not acted upon.

                                             REPLACE_NULLS  -   Replace   NULL
                                             bytes  in  the  input  with space
                                             characters (ASCII 0x20 ).

                                             SQL_HEX_DECODE - Decode  SQL  hex
                                             data. Example (0x414243 ) will be
                                             decoded to (ABC ).

                                             URL_DECODE - Decode a URL-encoded
                                             value.

                                             URL_DECODE_UNI  - Like URL_DECODE
                                             ,   but    with    support    for
                                             Microsoft-specific  %u  encoding.
                                             If the code is in the  full-width
                                             ASCII  code  range of FF01-FF5E ,
                                             the higher byte is used to detect
                                             and adjust the lower byte. Other-
                                             wise, only the lower byte is used
                                             and the higher byte is zeroed.

                                             UTF8_TO_UNICODE   -  Convert  all
                                             UTF-8 character sequences to Uni-
                                             code. This helps input normaliza-
                                             tion, and minimizing  false-posi-
                                             tives   and  false-negatives  for
                                             non-English languages.

                 NotStatement -> (structure)
                     A logical rule statement used to negate  the  results  of
                     another rule statement. You provide one  Statement within
                     the NotStatement .

                     Statement -> (structure)
                        The statement to negate. You  can  use  any  statement
                        that can be nested.

                        ByteMatchStatement -> (structure)
                            A  rule  statement  that  defines  a  string match
                            search for WAF to apply to web requests. The  byte
                            match  statement provides the bytes to search for,
                            the location in requests  that  you  want  WAF  to
                            search,  and  other  settings. The bytes to search
                            for are typically a string that  corresponds  with
                            ASCII  characters.  In  the  WAF  console  and the
                            developer guide, this is refered to  as  a  string
                            match statement.

                            SearchString -> (blob)
                               A string value that you want WAF to search for.
                               WAF searches only in the part of  web  requests
                               that  you  designate  for inspection in  Field-
                               ToMatch . The maximum length of the value is 50
                               bytes.

                               Valid  values  depend on the component that you
                               specify for inspection in FieldToMatch :

                               o Method : The HTTP method that you want WAF to
                                 search for. This indicates the type of opera-
                                 tion specified in the request.

                               o UriPath : The value  that  you  want  WAF  to
                                 search  for  in  the  URI  path, for example,
                                 /images/daily-ad.jpg .

                               If SearchString includes alphabetic  characters
                               A-Z and a-z, note that the value is case sensi-
                               tive.
                                   If you're using the WAF API

                               Specify a base64-encoded version of the  value.
                               The  maximum  length  of  the  value before you
                               base64-encode it is 50 bytes.

                               For example,  suppose  the  value  of  Type  is
                               HEADER and the value of Data is User-Agent . If
                               you want to search the  User-Agent  header  for
                               the  value  BadBot  ,  you base64-encode BadBot
                               using  MIME  base64-encoding  and  include  the
                               resulting  value,  QmFkQm90  ,  in the value of
                               SearchString .
                                   If you're using the CLI or one of the  Ama-
                                   zon Web Services SDKs

                               The  value that you want WAF to search for. The
                               SDK automatically base64 encodes the value.

                            FieldToMatch -> (structure)
                               The part of a web request that you want WAF  to
                               inspect.  For  more  information,  see   Field-
                               ToMatch .

                               SingleHeader -> (structure)
                                   Inspect a single header. Provide  the  name
                                   of  the  header  to  inspect,  for example,
                                   User-Agent or Referer . This setting  isn't
                                   case sensitive.

                                   Example  JSON:  "SingleHeader":  {  "Name":
                                   "haystack" }

                                   Name -> (string)
                                      The name of the query header to inspect.

                               SingleQueryArgument -> (structure)
                                   Inspect  a  single  query argument. Provide
                                   the name of the query argument to  inspect,
                                   such  as UserName or SalesRegion . The name
                                   can be up to 30 characters long  and  isn't
                                   case sensitive.

                                   This  is  used  only  to  indicate  the web
                                   request component for WAF  to  inspect,  in
                                   the  FieldToMatch specification.

                                   Example   JSON:   "SingleQueryArgument":  {
                                   "Name": "myArgument" }

                                   Name -> (string)
                                      The  name  of  the  query  argument   to
                                      inspect.

                               AllQueryArguments -> (structure)
                                   Inspect all query arguments.

                               UriPath -> (structure)
                                   Inspect  the  request URI path. This is the
                                   part of a web  request  that  identifies  a
                                   resource, for example, /images/daily-ad.jpg
                                   .

                               QueryString -> (structure)
                                   Inspect the query string. This is the  part
                                   of  a URL that appears after a ? character,
                                   if any.

                               Body -> (structure)
                                   Inspect the request body as plain text. The
                                   request   body   immediately   follows  the
                                   request headers. This  is  the  part  of  a
                                   request  that  contains any additional data
                                   that you want to send to your web server as
                                   the  HTTP request body, such as data from a
                                   form.

                                   Note that only the first 8 KB (8192  bytes)
                                   of  the  request  body are forwarded to WAF
                                   for inspection by the underlying host  ser-
                                   vice.  If  you  don't  need to inspect more
                                   than 8 KB, you can guarantee that you don't
                                   allow  additional  bytes  in by combining a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement , with  a
                                   SizeConstraintStatement  that enforces an 8
                                   KB size limit on the body of  the  request.
                                   WAF  doesn't  support inspecting the entire
                                   contents  of  web  requests  whose   bodies
                                   exceed the 8 KB limit.

                               Method -> (structure)
                                   Inspect  the  HTTP method. The method indi-
                                   cates  the  type  of  operation  that   the
                                   request is asking the origin to perform.

                               JsonBody -> (structure)
                                   Inspect  the  request  body  as  JSON.  The
                                   request  body   immediately   follows   the
                                   request  headers.  This  is  the  part of a
                                   request that contains any  additional  data
                                   that you want to send to your web server as
                                   the HTTP request body, such as data from  a
                                   form.

                                   Note  that only the first 8 KB (8192 bytes)
                                   of the request body are  forwarded  to  WAF
                                   for  inspection by the underlying host ser-
                                   vice. If you don't  need  to  inspect  more
                                   than 8 KB, you can guarantee that you don't
                                   allow additional bytes in  by  combining  a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement  , with a
                                   SizeConstraintStatement that enforces an  8
                                   KB  size  limit on the body of the request.
                                   WAF doesn't support inspecting  the  entire
                                   contents   of  web  requests  whose  bodies
                                   exceed the 8 KB limit.

                                   MatchPattern -> (structure)
                                      The patterns to look  for  in  the  JSON
                                      body.  WAF inspects the results of these
                                      pattern matches against the rule inspec-
                                      tion criteria.

                                      All -> (structure)
                                          Match  all of the elements. See also
                                          MatchScope in  JsonBody .

                                          You must specify either this setting
                                          or  the  IncludedPaths  setting, but
                                          not both.

                                      IncludedPaths -> (list)
                                          Match  only  the  specified  include
                                          paths. See also MatchScope in  Json-
                                          Body .

                                          Provide the include paths using JSON
                                          Pointer    syntax.    For   example,
                                          "IncludedPaths":    ["/dogs/0/name",
                                          "/dogs/1/name"]  .  For  information
                                          about this syntax, see the  Internet
                                          Engineering  Task Force (IETF) docu-
                                          mentation JavaScript Object Notation
                                          (JSON) Pointer .

                                          You must specify either this setting
                                          or the All setting, but not both.

                                          NOTE:
                                             Don't use this option to  include
                                             all  paths.  Instead, use the All
                                             setting.

                                          (string)

                                   MatchScope -> (string)
                                      The parts of the JSON to  match  against
                                      using  the MatchPattern . If you specify
                                      All , WAF matches against keys and  val-
                                      ues.

                                   InvalidFallbackBehavior -> (string)
                                      What  WAF  should do if it fails to com-
                                      pletely parse the JSON body. The options
                                      are the following:

                                      o EVALUATE_AS_STRING  - Inspect the body
                                        as plain text. WAF  applies  the  text
                                        transformations  and inspection crite-
                                        ria that  you  defined  for  the  JSON
                                        inspection to the body text string.

                                      o MATCH  -  Treat  the  web  request  as
                                        matching  the  rule   statement.   WAF
                                        applies   the   rule   action  to  the
                                        request.

                                      o NO_MATCH - Treat the  web  request  as
                                        not matching the rule statement.

                                      If  you  don't provide this setting, WAF
                                      parses and evaluates the content only up
                                      to  the  first  parsing  failure that it
                                      encounters.

                                      WAF does its best to  parse  the  entire
                                      JSON  body,  but might be forced to stop
                                      for reasons such as invalid  characters,
                                      duplicate keys, truncation, and any con-
                                      tent whose root node isn't an object  or
                                      an array.

                                      WAF  parses  the  JSON  in the following
                                      examples as two valid key, value pairs:

                                      o Missing                         comma:
                                        {"key1":"value1""key2":"value2"}

                                      o Missing                         colon:
                                        {"key1":"value1","key2""value2"}

                                      o Extra                          colons:
                                        {"key1"::"value1","key2""value2"}

                            TextTransformations -> (list)
                               Text  transformations  eliminate  some  of  the
                               unusual formatting that attackers  use  in  web
                               requests  in  an effort to bypass detection. If
                               you specify one or more  transformations  in  a
                               rule  statement,  WAF  performs all transforma-
                               tions on the content of the  request  component
                               identified  by FieldToMatch , starting from the
                               lowest priority setting, before inspecting  the
                               content for a match.

                               (structure)
                                   Text  transformations eliminate some of the
                                   unusual formatting that  attackers  use  in
                                   web  requests in an effort to bypass detec-
                                   tion.

                                   Priority -> (integer)
                                      Sets the relative processing  order  for
                                      multiple    transformations   that   are
                                      defined for a rule statement.  WAF  pro-
                                      cesses  all transformations, from lowest
                                      priority to highest,  before  inspecting
                                      the  transformed content. The priorities
                                      don't need to be consecutive,  but  they
                                      must all be different.

                                   Type -> (string)
                                      You  can specify the following transfor-
                                      mation types:
                                          BASE64_DECODE  -  Decode  a   Base64
                                          -encoded string.

                                          BASE64_DECODE_EXT  - Decode a Base64
                                          -encoded string, but use a forgiving
                                          implementation  that ignores charac-
                                          ters that aren't valid.

                                          CMD_LINE - Command-line  transforma-
                                          tions. These are helpful in reducing
                                          effectiveness   of   attackers   who
                                          inject   an  operating  system  com-
                                          mand-line command  and  use  unusual
                                          formatting  to  disguise some or all
                                          of the command.

                                      o Delete the following characters: \ " '
                                        ^

                                      o Delete  spaces  before  the  following
                                        characters: / (

                                      o Replace the following characters  with
                                        a space: , ;

                                      o Replace multiple spaces with one space

                                      o Convert  uppercase  letters  (A-Z)  to
                                        lowercase (a-z)
                                          COMPRESS_WHITE_SPACE - Replace these
                                          characters with  a  space  character
                                          (decimal 32):

                                      o \f , formfeed, decimal 12

                                      o \t , tab, decimal 9

                                      o \n , newline, decimal 10

                                      o \r , carriage return, decimal 13

                                      o \v , vertical tab, decimal 11

                                      o Non-breaking space, decimal 160
                                          COMPRESS_WHITE_SPACE  also  replaces
                                          multiple spaces with one space.

                                          CSS_DECODE - Decode characters  that
                                          were  encoded  using  CSS 2.x escape
                                          rules syndata.html#characters . This
                                          function uses up to two bytes in the
                                          decoding process, so it can help  to
                                          uncover  ASCII  characters that were
                                          encoded  using  CSS  encoding   that
                                          wouldnt  typically  be encoded. It's
                                          also useful in  countering  evasion,
                                          which  is  a  combination of a back-
                                          slash  and  non-hexadecimal  charac-
                                          ters.  For  example, ja\vascript for
                                          javascript.

                                          ESCAPE_SEQ_DECODE - Decode the  fol-
                                          lowing ANSI C escape sequences: \a ,
                                          \b , \f , \n , \r , \t , \v ,  \\  ,
                                          \?  ,  \' , \" , \xHH (hexadecimal),
                                          \0OOO (octal). Encodings that aren't
                                          valid remain in the output.

                                          HEX_DECODE  -  Decode  a  string  of
                                          hexadecimal   characters   into    a
                                          binary.

                                          HTML_ENTITY_DECODE     -     Replace
                                          HTML-encoded characters  with  unen-
                                          coded characters. HTML_ENTITY_DECODE
                                          performs these operations:

                                      o Replaces (ampersand)quot; with "

                                      o Replaces   (ampersand)nbsp;   with   a
                                        non-breaking space, decimal 160

                                      o Replaces  (ampersand)lt;  with a "less
                                        than" symbol

                                      o Replaces (ampersand)gt; with >

                                      o Replaces characters  that  are  repre-
                                        sented  in hexadecimal format, (amper-
                                        sand)#xhhhh; , with the  corresponding
                                        characters

                                      o Replaces  characters  that  are repre-
                                        sented  in  decimal  format,   (amper-
                                        sand)#nnnn;  ,  with the corresponding
                                        characters
                                          JS_DECODE - Decode JavaScript escape
                                          sequences.  If  a \  u  HHHH code is
                                          in the full-width ASCII  code  range
                                          of  FF01-FF5E , then the higher byte
                                          is used to  detect  and  adjust  the
                                          lower  byte.  If not, only the lower
                                          byte is used and the higher byte  is
                                          zeroed,  causing  a possible loss of
                                          information.

                                          LOWERCASE - Convert  uppercase  let-
                                          ters (A-Z) to lowercase (a-z).

                                          MD5 - Calculate an MD5 hash from the
                                          data in the input. The computed hash
                                          is in a raw binary form.

                                          NONE  -  Specify  NONE  if you don't
                                          want any text transformations.

                                          NORMALIZE_PATH  -  Remove   multiple
                                          slashes,  directory self-references,
                                          and directory  back-references  that
                                          are  not  at  the  beginning  of the
                                          input from an input string.

                                          NORMALIZE_PATH_WIN  -  This  is  the
                                          same  as  NORMALIZE_PATH , but first
                                          converts  backslash  characters   to
                                          forward slashes.

                                          REMOVE_NULLS - Remove all NULL bytes
                                          from the input.

                                          REPLACE_COMMENTS  -   Replace   each
                                          occurrence  of a C-style comment (/*
                                          ... */ ) with a single space. Multi-
                                          ple  consecutive occurrences are not
                                          compressed.  Unterminated   comments
                                          are   also  replaced  with  a  space
                                          (ASCII 0x20). However, a  standalone
                                          termination  of  a  comment (*/ ) is
                                          not acted upon.

                                          REPLACE_NULLS - Replace  NULL  bytes
                                          in  the  input with space characters
                                          (ASCII 0x20 ).

                                          SQL_HEX_DECODE  -  Decode  SQL   hex
                                          data.  Example  (0x414243  ) will be
                                          decoded to (ABC ).

                                          URL_DECODE -  Decode  a  URL-encoded
                                          value.

                                          URL_DECODE_UNI  -  Like URL_DECODE ,
                                          but with support for  Microsoft-spe-
                                          cific %u encoding. If the code is in
                                          the full-width ASCII code  range  of
                                          FF01-FF5E  , the higher byte is used
                                          to detect and adjust the lower byte.
                                          Otherwise,  only  the  lower byte is
                                          used and the higher byte is  zeroed.

                                          UTF8_TO_UNICODE  - Convert all UTF-8
                                          character sequences to Unicode. This
                                          helps input normalization, and mini-
                                          mizing      false-positives      and
                                          false-negatives for non-English lan-
                                          guages.

                            PositionalConstraint -> (string)
                               The area within the portion of  a  web  request
                               that  you want WAF to search for SearchString .
                               Valid values include the following:
                                   CONTAINS

                               The specified part  of  the  web  request  must
                               include  the  value  of  SearchString , but the
                               location doesn't matter.
                                   CONTAINS_WORD

                               The specified part  of  the  web  request  must
                               include the value of SearchString , and Search-
                               String must contain only  alphanumeric  charac-
                               ters  or  underscore  (A-Z, a-z, 0-9, or _). In
                               addition, SearchString must be  a  word,  which
                               means that both of the following are true:

                               o SearchString is at the beginning of the spec-
                                 ified part of the web request or is  preceded
                                 by  a  character  other  than an alphanumeric
                                 character or underscore (_). Examples include
                                 the value of a header and ;BadBot .

                               o SearchString  is  at the end of the specified
                                 part of the web request or is followed  by  a
                                 character  other than an alphanumeric charac-
                                 ter or underscore (_), for  example,  BadBot;
                                 and -BadBot; .
                                   EXACTLY

                               The  value  of  the  specified  part of the web
                               request must exactly match the value of Search-
                               String .
                                   STARTS_WITH

                               The  value  of  SearchString must appear at the
                               beginning of the  specified  part  of  the  web
                               request.
                                   ENDS_WITH

                               The  value  of  SearchString must appear at the
                               end of the specified part of the web request.

                        SqliMatchStatement -> (structure)
                            Attackers sometimes insert malicious SQL code into
                            web  requests  in  an  effort to extract data from
                            your database. To allow or block web requests that
                            appear  to  contain malicious SQL code, create one
                            or more SQL injection  match  conditions.  An  SQL
                            injection  match  condition identifies the part of
                            web requests, such as the URI or the query string,
                            that  you  want  WAF  to  inspect.  Later  in  the
                            process, when you create a web  ACL,  you  specify
                            whether  to allow or block requests that appear to
                            contain malicious SQL code.

                            FieldToMatch -> (structure)
                               The part of a web request that you want WAF  to
                               inspect.  For  more  information,  see   Field-
                               ToMatch .

                               SingleHeader -> (structure)
                                   Inspect a single header. Provide  the  name
                                   of  the  header  to  inspect,  for example,
                                   User-Agent or Referer . This setting  isn't
                                   case sensitive.

                                   Example  JSON:  "SingleHeader":  {  "Name":
                                   "haystack" }

                                   Name -> (string)
                                      The name of the query header to inspect.

                               SingleQueryArgument -> (structure)
                                   Inspect  a  single  query argument. Provide
                                   the name of the query argument to  inspect,
                                   such  as UserName or SalesRegion . The name
                                   can be up to 30 characters long  and  isn't
                                   case sensitive.

                                   This  is  used  only  to  indicate  the web
                                   request component for WAF  to  inspect,  in
                                   the  FieldToMatch specification.

                                   Example   JSON:   "SingleQueryArgument":  {
                                   "Name": "myArgument" }

                                   Name -> (string)
                                      The  name  of  the  query  argument   to
                                      inspect.

                               AllQueryArguments -> (structure)
                                   Inspect all query arguments.

                               UriPath -> (structure)
                                   Inspect  the  request URI path. This is the
                                   part of a web  request  that  identifies  a
                                   resource, for example, /images/daily-ad.jpg
                                   .

                               QueryString -> (structure)
                                   Inspect the query string. This is the  part
                                   of  a URL that appears after a ? character,
                                   if any.

                               Body -> (structure)
                                   Inspect the request body as plain text. The
                                   request   body   immediately   follows  the
                                   request headers. This  is  the  part  of  a
                                   request  that  contains any additional data
                                   that you want to send to your web server as
                                   the  HTTP request body, such as data from a
                                   form.

                                   Note that only the first 8 KB (8192  bytes)
                                   of  the  request  body are forwarded to WAF
                                   for inspection by the underlying host  ser-
                                   vice.  If  you  don't  need to inspect more
                                   than 8 KB, you can guarantee that you don't
                                   allow  additional  bytes  in by combining a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement , with  a
                                   SizeConstraintStatement  that enforces an 8
                                   KB size limit on the body of  the  request.
                                   WAF  doesn't  support inspecting the entire
                                   contents  of  web  requests  whose   bodies
                                   exceed the 8 KB limit.

                               Method -> (structure)
                                   Inspect  the  HTTP method. The method indi-
                                   cates  the  type  of  operation  that   the
                                   request is asking the origin to perform.

                               JsonBody -> (structure)
                                   Inspect  the  request  body  as  JSON.  The
                                   request  body   immediately   follows   the
                                   request  headers.  This  is  the  part of a
                                   request that contains any  additional  data
                                   that you want to send to your web server as
                                   the HTTP request body, such as data from  a
                                   form.

                                   Note  that only the first 8 KB (8192 bytes)
                                   of the request body are  forwarded  to  WAF
                                   for  inspection by the underlying host ser-
                                   vice. If you don't  need  to  inspect  more
                                   than 8 KB, you can guarantee that you don't
                                   allow additional bytes in  by  combining  a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement  , with a
                                   SizeConstraintStatement that enforces an  8
                                   KB  size  limit on the body of the request.
                                   WAF doesn't support inspecting  the  entire
                                   contents   of  web  requests  whose  bodies
                                   exceed the 8 KB limit.

                                   MatchPattern -> (structure)
                                      The patterns to look  for  in  the  JSON
                                      body.  WAF inspects the results of these
                                      pattern matches against the rule inspec-
                                      tion criteria.

                                      All -> (structure)
                                          Match  all of the elements. See also
                                          MatchScope in  JsonBody .

                                          You must specify either this setting
                                          or  the  IncludedPaths  setting, but
                                          not both.

                                      IncludedPaths -> (list)
                                          Match  only  the  specified  include
                                          paths. See also MatchScope in  Json-
                                          Body .

                                          Provide the include paths using JSON
                                          Pointer    syntax.    For   example,
                                          "IncludedPaths":    ["/dogs/0/name",
                                          "/dogs/1/name"]  .  For  information
                                          about this syntax, see the  Internet
                                          Engineering  Task Force (IETF) docu-
                                          mentation JavaScript Object Notation
                                          (JSON) Pointer .

                                          You must specify either this setting
                                          or the All setting, but not both.

                                          NOTE:
                                             Don't use this option to  include
                                             all  paths.  Instead, use the All
                                             setting.

                                          (string)

                                   MatchScope -> (string)
                                      The parts of the JSON to  match  against
                                      using  the MatchPattern . If you specify
                                      All , WAF matches against keys and  val-
                                      ues.

                                   InvalidFallbackBehavior -> (string)
                                      What  WAF  should do if it fails to com-
                                      pletely parse the JSON body. The options
                                      are the following:

                                      o EVALUATE_AS_STRING  - Inspect the body
                                        as plain text. WAF  applies  the  text
                                        transformations  and inspection crite-
                                        ria that  you  defined  for  the  JSON
                                        inspection to the body text string.

                                      o MATCH  -  Treat  the  web  request  as
                                        matching  the  rule   statement.   WAF
                                        applies   the   rule   action  to  the
                                        request.

                                      o NO_MATCH - Treat the  web  request  as
                                        not matching the rule statement.

                                      If  you  don't provide this setting, WAF
                                      parses and evaluates the content only up
                                      to  the  first  parsing  failure that it
                                      encounters.

                                      WAF does its best to  parse  the  entire
                                      JSON  body,  but might be forced to stop
                                      for reasons such as invalid  characters,
                                      duplicate keys, truncation, and any con-
                                      tent whose root node isn't an object  or
                                      an array.

                                      WAF  parses  the  JSON  in the following
                                      examples as two valid key, value pairs:

                                      o Missing                         comma:
                                        {"key1":"value1""key2":"value2"}

                                      o Missing                         colon:
                                        {"key1":"value1","key2""value2"}

                                      o Extra                          colons:
                                        {"key1"::"value1","key2""value2"}

                            TextTransformations -> (list)
                               Text  transformations  eliminate  some  of  the
                               unusual formatting that attackers  use  in  web
                               requests  in  an effort to bypass detection. If
                               you specify one or more  transformations  in  a
                               rule  statement,  WAF  performs all transforma-
                               tions on the content of the  request  component
                               identified  by FieldToMatch , starting from the
                               lowest priority setting, before inspecting  the
                               content for a match.

                               (structure)
                                   Text  transformations eliminate some of the
                                   unusual formatting that  attackers  use  in
                                   web  requests in an effort to bypass detec-
                                   tion.

                                   Priority -> (integer)
                                      Sets the relative processing  order  for
                                      multiple    transformations   that   are
                                      defined for a rule statement.  WAF  pro-
                                      cesses  all transformations, from lowest
                                      priority to highest,  before  inspecting
                                      the  transformed content. The priorities
                                      don't need to be consecutive,  but  they
                                      must all be different.

                                   Type -> (string)
                                      You  can specify the following transfor-
                                      mation types:
                                          BASE64_DECODE  -  Decode  a   Base64
                                          -encoded string.

                                          BASE64_DECODE_EXT  - Decode a Base64
                                          -encoded string, but use a forgiving
                                          implementation  that ignores charac-
                                          ters that aren't valid.

                                          CMD_LINE - Command-line  transforma-
                                          tions. These are helpful in reducing
                                          effectiveness   of   attackers   who
                                          inject   an  operating  system  com-
                                          mand-line command  and  use  unusual
                                          formatting  to  disguise some or all
                                          of the command.

                                      o Delete the following characters: \ " '
                                        ^

                                      o Delete  spaces  before  the  following
                                        characters: / (

                                      o Replace the following characters  with
                                        a space: , ;

                                      o Replace multiple spaces with one space

                                      o Convert  uppercase  letters  (A-Z)  to
                                        lowercase (a-z)
                                          COMPRESS_WHITE_SPACE - Replace these
                                          characters with  a  space  character
                                          (decimal 32):

                                      o \f , formfeed, decimal 12

                                      o \t , tab, decimal 9

                                      o \n , newline, decimal 10

                                      o \r , carriage return, decimal 13

                                      o \v , vertical tab, decimal 11

                                      o Non-breaking space, decimal 160
                                          COMPRESS_WHITE_SPACE  also  replaces
                                          multiple spaces with one space.

                                          CSS_DECODE - Decode characters  that
                                          were  encoded  using  CSS 2.x escape
                                          rules syndata.html#characters . This
                                          function uses up to two bytes in the
                                          decoding process, so it can help  to
                                          uncover  ASCII  characters that were
                                          encoded  using  CSS  encoding   that
                                          wouldnt  typically  be encoded. It's
                                          also useful in  countering  evasion,
                                          which  is  a  combination of a back-
                                          slash  and  non-hexadecimal  charac-
                                          ters.  For  example, ja\vascript for
                                          javascript.

                                          ESCAPE_SEQ_DECODE - Decode the  fol-
                                          lowing ANSI C escape sequences: \a ,
                                          \b , \f , \n , \r , \t , \v ,  \\  ,
                                          \?  ,  \' , \" , \xHH (hexadecimal),
                                          \0OOO (octal). Encodings that aren't
                                          valid remain in the output.

                                          HEX_DECODE  -  Decode  a  string  of
                                          hexadecimal   characters   into    a
                                          binary.

                                          HTML_ENTITY_DECODE     -     Replace
                                          HTML-encoded characters  with  unen-
                                          coded characters. HTML_ENTITY_DECODE
                                          performs these operations:

                                      o Replaces (ampersand)quot; with "

                                      o Replaces   (ampersand)nbsp;   with   a
                                        non-breaking space, decimal 160

                                      o Replaces  (ampersand)lt;  with a "less
                                        than" symbol

                                      o Replaces (ampersand)gt; with >

                                      o Replaces characters  that  are  repre-
                                        sented  in hexadecimal format, (amper-
                                        sand)#xhhhh; , with the  corresponding
                                        characters

                                      o Replaces  characters  that  are repre-
                                        sented  in  decimal  format,   (amper-
                                        sand)#nnnn;  ,  with the corresponding
                                        characters
                                          JS_DECODE - Decode JavaScript escape
                                          sequences.  If  a \  u  HHHH code is
                                          in the full-width ASCII  code  range
                                          of  FF01-FF5E , then the higher byte
                                          is used to  detect  and  adjust  the
                                          lower  byte.  If not, only the lower
                                          byte is used and the higher byte  is
                                          zeroed,  causing  a possible loss of
                                          information.

                                          LOWERCASE - Convert  uppercase  let-
                                          ters (A-Z) to lowercase (a-z).

                                          MD5 - Calculate an MD5 hash from the
                                          data in the input. The computed hash
                                          is in a raw binary form.

                                          NONE  -  Specify  NONE  if you don't
                                          want any text transformations.

                                          NORMALIZE_PATH  -  Remove   multiple
                                          slashes,  directory self-references,
                                          and directory  back-references  that
                                          are  not  at  the  beginning  of the
                                          input from an input string.

                                          NORMALIZE_PATH_WIN  -  This  is  the
                                          same  as  NORMALIZE_PATH , but first
                                          converts  backslash  characters   to
                                          forward slashes.

                                          REMOVE_NULLS - Remove all NULL bytes
                                          from the input.

                                          REPLACE_COMMENTS  -   Replace   each
                                          occurrence  of a C-style comment (/*
                                          ... */ ) with a single space. Multi-
                                          ple  consecutive occurrences are not
                                          compressed.  Unterminated   comments
                                          are   also  replaced  with  a  space
                                          (ASCII 0x20). However, a  standalone
                                          termination  of  a  comment (*/ ) is
                                          not acted upon.

                                          REPLACE_NULLS - Replace  NULL  bytes
                                          in  the  input with space characters
                                          (ASCII 0x20 ).

                                          SQL_HEX_DECODE  -  Decode  SQL   hex
                                          data.  Example  (0x414243  ) will be
                                          decoded to (ABC ).

                                          URL_DECODE -  Decode  a  URL-encoded
                                          value.

                                          URL_DECODE_UNI  -  Like URL_DECODE ,
                                          but with support for  Microsoft-spe-
                                          cific %u encoding. If the code is in
                                          the full-width ASCII code  range  of
                                          FF01-FF5E  , the higher byte is used
                                          to detect and adjust the lower byte.
                                          Otherwise,  only  the  lower byte is
                                          used and the higher byte is  zeroed.

                                          UTF8_TO_UNICODE  - Convert all UTF-8
                                          character sequences to Unicode. This
                                          helps input normalization, and mini-
                                          mizing      false-positives      and
                                          false-negatives for non-English lan-
                                          guages.

                        XssMatchStatement -> (structure)
                            A rule statement that defines a cross-site script-
                            ing  (XSS)  match  search  for WAF to apply to web
                            requests. XSS attacks are those where the attacker
                            uses  vulnerabilities  in  a  benign  website as a
                            vehicle to inject  malicious  client-site  scripts
                            into  other legitimate web browsers. The XSS match
                            statement provides the location in  requests  that
                            you want WAF to search and text transformations to
                            use on the search area  before  WAF  searches  for
                            character  sequences  that  are likely to be mali-
                            cious strings.

                            FieldToMatch -> (structure)
                               The part of a web request that you want WAF  to
                               inspect.  For  more  information,  see   Field-
                               ToMatch .

                               SingleHeader -> (structure)
                                   Inspect a single header. Provide  the  name
                                   of  the  header  to  inspect,  for example,
                                   User-Agent or Referer . This setting  isn't
                                   case sensitive.

                                   Example  JSON:  "SingleHeader":  {  "Name":
                                   "haystack" }

                                   Name -> (string)
                                      The name of the query header to inspect.

                               SingleQueryArgument -> (structure)
                                   Inspect  a  single  query argument. Provide
                                   the name of the query argument to  inspect,
                                   such  as UserName or SalesRegion . The name
                                   can be up to 30 characters long  and  isn't
                                   case sensitive.

                                   This  is  used  only  to  indicate  the web
                                   request component for WAF  to  inspect,  in
                                   the  FieldToMatch specification.

                                   Example   JSON:   "SingleQueryArgument":  {
                                   "Name": "myArgument" }

                                   Name -> (string)
                                      The  name  of  the  query  argument   to
                                      inspect.

                               AllQueryArguments -> (structure)
                                   Inspect all query arguments.

                               UriPath -> (structure)
                                   Inspect  the  request URI path. This is the
                                   part of a web  request  that  identifies  a
                                   resource, for example, /images/daily-ad.jpg
                                   .

                               QueryString -> (structure)
                                   Inspect the query string. This is the  part
                                   of  a URL that appears after a ? character,
                                   if any.

                               Body -> (structure)
                                   Inspect the request body as plain text. The
                                   request   body   immediately   follows  the
                                   request headers. This  is  the  part  of  a
                                   request  that  contains any additional data
                                   that you want to send to your web server as
                                   the  HTTP request body, such as data from a
                                   form.

                                   Note that only the first 8 KB (8192  bytes)
                                   of  the  request  body are forwarded to WAF
                                   for inspection by the underlying host  ser-
                                   vice.  If  you  don't  need to inspect more
                                   than 8 KB, you can guarantee that you don't
                                   allow  additional  bytes  in by combining a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement , with  a
                                   SizeConstraintStatement  that enforces an 8
                                   KB size limit on the body of  the  request.
                                   WAF  doesn't  support inspecting the entire
                                   contents  of  web  requests  whose   bodies
                                   exceed the 8 KB limit.

                               Method -> (structure)
                                   Inspect  the  HTTP method. The method indi-
                                   cates  the  type  of  operation  that   the
                                   request is asking the origin to perform.

                               JsonBody -> (structure)
                                   Inspect  the  request  body  as  JSON.  The
                                   request  body   immediately   follows   the
                                   request  headers.  This  is  the  part of a
                                   request that contains any  additional  data
                                   that you want to send to your web server as
                                   the HTTP request body, such as data from  a
                                   form.

                                   Note  that only the first 8 KB (8192 bytes)
                                   of the request body are  forwarded  to  WAF
                                   for  inspection by the underlying host ser-
                                   vice. If you don't  need  to  inspect  more
                                   than 8 KB, you can guarantee that you don't
                                   allow additional bytes in  by  combining  a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement  , with a
                                   SizeConstraintStatement that enforces an  8
                                   KB  size  limit on the body of the request.
                                   WAF doesn't support inspecting  the  entire
                                   contents   of  web  requests  whose  bodies
                                   exceed the 8 KB limit.

                                   MatchPattern -> (structure)
                                      The patterns to look  for  in  the  JSON
                                      body.  WAF inspects the results of these
                                      pattern matches against the rule inspec-
                                      tion criteria.

                                      All -> (structure)
                                          Match  all of the elements. See also
                                          MatchScope in  JsonBody .

                                          You must specify either this setting
                                          or  the  IncludedPaths  setting, but
                                          not both.

                                      IncludedPaths -> (list)
                                          Match  only  the  specified  include
                                          paths. See also MatchScope in  Json-
                                          Body .

                                          Provide the include paths using JSON
                                          Pointer    syntax.    For   example,
                                          "IncludedPaths":    ["/dogs/0/name",
                                          "/dogs/1/name"]  .  For  information
                                          about this syntax, see the  Internet
                                          Engineering  Task Force (IETF) docu-
                                          mentation JavaScript Object Notation
                                          (JSON) Pointer .

                                          You must specify either this setting
                                          or the All setting, but not both.

                                          NOTE:
                                             Don't use this option to  include
                                             all  paths.  Instead, use the All
                                             setting.

                                          (string)

                                   MatchScope -> (string)
                                      The parts of the JSON to  match  against
                                      using  the MatchPattern . If you specify
                                      All , WAF matches against keys and  val-
                                      ues.

                                   InvalidFallbackBehavior -> (string)
                                      What  WAF  should do if it fails to com-
                                      pletely parse the JSON body. The options
                                      are the following:

                                      o EVALUATE_AS_STRING  - Inspect the body
                                        as plain text. WAF  applies  the  text
                                        transformations  and inspection crite-
                                        ria that  you  defined  for  the  JSON
                                        inspection to the body text string.

                                      o MATCH  -  Treat  the  web  request  as
                                        matching  the  rule   statement.   WAF
                                        applies   the   rule   action  to  the
                                        request.

                                      o NO_MATCH - Treat the  web  request  as
                                        not matching the rule statement.

                                      If  you  don't provide this setting, WAF
                                      parses and evaluates the content only up
                                      to  the  first  parsing  failure that it
                                      encounters.

                                      WAF does its best to  parse  the  entire
                                      JSON  body,  but might be forced to stop
                                      for reasons such as invalid  characters,
                                      duplicate keys, truncation, and any con-
                                      tent whose root node isn't an object  or
                                      an array.

                                      WAF  parses  the  JSON  in the following
                                      examples as two valid key, value pairs:

                                      o Missing                         comma:
                                        {"key1":"value1""key2":"value2"}

                                      o Missing                         colon:
                                        {"key1":"value1","key2""value2"}

                                      o Extra                          colons:
                                        {"key1"::"value1","key2""value2"}

                            TextTransformations -> (list)
                               Text  transformations  eliminate  some  of  the
                               unusual formatting that attackers  use  in  web
                               requests  in  an effort to bypass detection. If
                               you specify one or more  transformations  in  a
                               rule  statement,  WAF  performs all transforma-
                               tions on the content of the  request  component
                               identified  by FieldToMatch , starting from the
                               lowest priority setting, before inspecting  the
                               content for a match.

                               (structure)
                                   Text  transformations eliminate some of the
                                   unusual formatting that  attackers  use  in
                                   web  requests in an effort to bypass detec-
                                   tion.

                                   Priority -> (integer)
                                      Sets the relative processing  order  for
                                      multiple    transformations   that   are
                                      defined for a rule statement.  WAF  pro-
                                      cesses  all transformations, from lowest
                                      priority to highest,  before  inspecting
                                      the  transformed content. The priorities
                                      don't need to be consecutive,  but  they
                                      must all be different.

                                   Type -> (string)
                                      You  can specify the following transfor-
                                      mation types:
                                          BASE64_DECODE  -  Decode  a   Base64
                                          -encoded string.

                                          BASE64_DECODE_EXT  - Decode a Base64
                                          -encoded string, but use a forgiving
                                          implementation  that ignores charac-
                                          ters that aren't valid.

                                          CMD_LINE - Command-line  transforma-
                                          tions. These are helpful in reducing
                                          effectiveness   of   attackers   who
                                          inject   an  operating  system  com-
                                          mand-line command  and  use  unusual
                                          formatting  to  disguise some or all
                                          of the command.

                                      o Delete the following characters: \ " '
                                        ^

                                      o Delete  spaces  before  the  following
                                        characters: / (

                                      o Replace the following characters  with
                                        a space: , ;

                                      o Replace multiple spaces with one space

                                      o Convert  uppercase  letters  (A-Z)  to
                                        lowercase (a-z)
                                          COMPRESS_WHITE_SPACE - Replace these
                                          characters with  a  space  character
                                          (decimal 32):

                                      o \f , formfeed, decimal 12

                                      o \t , tab, decimal 9

                                      o \n , newline, decimal 10

                                      o \r , carriage return, decimal 13

                                      o \v , vertical tab, decimal 11

                                      o Non-breaking space, decimal 160
                                          COMPRESS_WHITE_SPACE  also  replaces
                                          multiple spaces with one space.

                                          CSS_DECODE - Decode characters  that
                                          were  encoded  using  CSS 2.x escape
                                          rules syndata.html#characters . This
                                          function uses up to two bytes in the
                                          decoding process, so it can help  to
                                          uncover  ASCII  characters that were
                                          encoded  using  CSS  encoding   that
                                          wouldnt  typically  be encoded. It's
                                          also useful in  countering  evasion,
                                          which  is  a  combination of a back-
                                          slash  and  non-hexadecimal  charac-
                                          ters.  For  example, ja\vascript for
                                          javascript.

                                          ESCAPE_SEQ_DECODE - Decode the  fol-
                                          lowing ANSI C escape sequences: \a ,
                                          \b , \f , \n , \r , \t , \v ,  \\  ,
                                          \?  ,  \' , \" , \xHH (hexadecimal),
                                          \0OOO (octal). Encodings that aren't
                                          valid remain in the output.

                                          HEX_DECODE  -  Decode  a  string  of
                                          hexadecimal   characters   into    a
                                          binary.

                                          HTML_ENTITY_DECODE     -     Replace
                                          HTML-encoded characters  with  unen-
                                          coded characters. HTML_ENTITY_DECODE
                                          performs these operations:

                                      o Replaces (ampersand)quot; with "

                                      o Replaces   (ampersand)nbsp;   with   a
                                        non-breaking space, decimal 160

                                      o Replaces  (ampersand)lt;  with a "less
                                        than" symbol

                                      o Replaces (ampersand)gt; with >

                                      o Replaces characters  that  are  repre-
                                        sented  in hexadecimal format, (amper-
                                        sand)#xhhhh; , with the  corresponding
                                        characters

                                      o Replaces  characters  that  are repre-
                                        sented  in  decimal  format,   (amper-
                                        sand)#nnnn;  ,  with the corresponding
                                        characters
                                          JS_DECODE - Decode JavaScript escape
                                          sequences.  If  a \  u  HHHH code is
                                          in the full-width ASCII  code  range
                                          of  FF01-FF5E , then the higher byte
                                          is used to  detect  and  adjust  the
                                          lower  byte.  If not, only the lower
                                          byte is used and the higher byte  is
                                          zeroed,  causing  a possible loss of
                                          information.

                                          LOWERCASE - Convert  uppercase  let-
                                          ters (A-Z) to lowercase (a-z).

                                          MD5 - Calculate an MD5 hash from the
                                          data in the input. The computed hash
                                          is in a raw binary form.

                                          NONE  -  Specify  NONE  if you don't
                                          want any text transformations.

                                          NORMALIZE_PATH  -  Remove   multiple
                                          slashes,  directory self-references,
                                          and directory  back-references  that
                                          are  not  at  the  beginning  of the
                                          input from an input string.

                                          NORMALIZE_PATH_WIN  -  This  is  the
                                          same  as  NORMALIZE_PATH , but first
                                          converts  backslash  characters   to
                                          forward slashes.

                                          REMOVE_NULLS - Remove all NULL bytes
                                          from the input.

                                          REPLACE_COMMENTS  -   Replace   each
                                          occurrence  of a C-style comment (/*
                                          ... */ ) with a single space. Multi-
                                          ple  consecutive occurrences are not
                                          compressed.  Unterminated   comments
                                          are   also  replaced  with  a  space
                                          (ASCII 0x20). However, a  standalone
                                          termination  of  a  comment (*/ ) is
                                          not acted upon.

                                          REPLACE_NULLS - Replace  NULL  bytes
                                          in  the  input with space characters
                                          (ASCII 0x20 ).

                                          SQL_HEX_DECODE  -  Decode  SQL   hex
                                          data.  Example  (0x414243  ) will be
                                          decoded to (ABC ).

                                          URL_DECODE -  Decode  a  URL-encoded
                                          value.

                                          URL_DECODE_UNI  -  Like URL_DECODE ,
                                          but with support for  Microsoft-spe-
                                          cific %u encoding. If the code is in
                                          the full-width ASCII code  range  of
                                          FF01-FF5E  , the higher byte is used
                                          to detect and adjust the lower byte.
                                          Otherwise,  only  the  lower byte is
                                          used and the higher byte is  zeroed.

                                          UTF8_TO_UNICODE  - Convert all UTF-8
                                          character sequences to Unicode. This
                                          helps input normalization, and mini-
                                          mizing      false-positives      and
                                          false-negatives for non-English lan-
                                          guages.

                        SizeConstraintStatement -> (structure)
                            A rule statement that compares a number  of  bytes
                            against  the  size of a request component, using a
                            comparison operator, such as greater than  (>)  or
                            less  than  (<).  For  example, you can use a size
                            constraint statement to  look  for  query  strings
                            that are longer than 100 bytes.

                            If  you configure WAF to inspect the request body,
                            WAF inspects only the first 8192 bytes (8 KB).  If
                            the  request  body  for  your  web  requests never
                            exceeds 8192 bytes, you can  create  a  size  con-
                            straint  condition  and block requests that have a
                            request body greater than 8192 bytes.

                            If you choose URI for the value  of  Part  of  the
                            request  to  filter  on,  the slash (/) in the URI
                            counts as one  character.  For  example,  the  URI
                            /logo.jpg is nine characters long.

                            FieldToMatch -> (structure)
                               The  part of a web request that you want WAF to
                               inspect.  For  more  information,  see   Field-
                               ToMatch .

                               SingleHeader -> (structure)
                                   Inspect  a  single header. Provide the name
                                   of the  header  to  inspect,  for  example,
                                   User-Agent  or Referer . This setting isn't
                                   case sensitive.

                                   Example  JSON:  "SingleHeader":  {  "Name":
                                   "haystack" }

                                   Name -> (string)
                                      The name of the query header to inspect.

                               SingleQueryArgument -> (structure)
                                   Inspect a single  query  argument.  Provide
                                   the  name of the query argument to inspect,
                                   such as UserName or SalesRegion . The  name
                                   can  be  up to 30 characters long and isn't
                                   case sensitive.

                                   This is  used  only  to  indicate  the  web
                                   request  component  for  WAF to inspect, in
                                   the  FieldToMatch specification.

                                   Example  JSON:   "SingleQueryArgument":   {
                                   "Name": "myArgument" }

                                   Name -> (string)
                                      The   name  of  the  query  argument  to
                                      inspect.

                               AllQueryArguments -> (structure)
                                   Inspect all query arguments.

                               UriPath -> (structure)
                                   Inspect the request URI path. This  is  the
                                   part  of  a  web  request that identifies a
                                   resource, for example, /images/daily-ad.jpg
                                   .

                               QueryString -> (structure)
                                   Inspect  the query string. This is the part
                                   of a URL that appears after a ?  character,
                                   if any.

                               Body -> (structure)
                                   Inspect the request body as plain text. The
                                   request  body   immediately   follows   the
                                   request  headers.  This  is  the  part of a
                                   request that contains any  additional  data
                                   that you want to send to your web server as
                                   the HTTP request body, such as data from  a
                                   form.

                                   Note  that only the first 8 KB (8192 bytes)
                                   of the request body are  forwarded  to  WAF
                                   for  inspection by the underlying host ser-
                                   vice. If you don't  need  to  inspect  more
                                   than 8 KB, you can guarantee that you don't
                                   allow additional bytes in  by  combining  a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement  , with a
                                   SizeConstraintStatement that enforces an  8
                                   KB  size  limit on the body of the request.
                                   WAF doesn't support inspecting  the  entire
                                   contents   of  web  requests  whose  bodies
                                   exceed the 8 KB limit.

                               Method -> (structure)
                                   Inspect the HTTP method. The  method  indi-
                                   cates   the  type  of  operation  that  the
                                   request is asking the origin to perform.

                               JsonBody -> (structure)
                                   Inspect  the  request  body  as  JSON.  The
                                   request   body   immediately   follows  the
                                   request headers. This  is  the  part  of  a
                                   request  that  contains any additional data
                                   that you want to send to your web server as
                                   the  HTTP request body, such as data from a
                                   form.

                                   Note that only the first 8 KB (8192  bytes)
                                   of  the  request  body are forwarded to WAF
                                   for inspection by the underlying host  ser-
                                   vice.  If  you  don't  need to inspect more
                                   than 8 KB, you can guarantee that you don't
                                   allow  additional  bytes  in by combining a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement , with  a
                                   SizeConstraintStatement  that enforces an 8
                                   KB size limit on the body of  the  request.
                                   WAF  doesn't  support inspecting the entire
                                   contents  of  web  requests  whose   bodies
                                   exceed the 8 KB limit.

                                   MatchPattern -> (structure)
                                      The  patterns  to  look  for in the JSON
                                      body. WAF inspects the results of  these
                                      pattern matches against the rule inspec-
                                      tion criteria.

                                      All -> (structure)
                                          Match all of the elements. See  also
                                          MatchScope in  JsonBody .

                                          You must specify either this setting
                                          or the  IncludedPaths  setting,  but
                                          not both.

                                      IncludedPaths -> (list)
                                          Match  only  the  specified  include
                                          paths. See also MatchScope in  Json-
                                          Body .

                                          Provide the include paths using JSON
                                          Pointer   syntax.    For    example,
                                          "IncludedPaths":    ["/dogs/0/name",
                                          "/dogs/1/name"]  .  For  information
                                          about  this syntax, see the Internet
                                          Engineering Task Force (IETF)  docu-
                                          mentation JavaScript Object Notation
                                          (JSON) Pointer .

                                          You must specify either this setting
                                          or the All setting, but not both.

                                          NOTE:
                                             Don't  use this option to include
                                             all paths. Instead, use  the  All
                                             setting.

                                          (string)

                                   MatchScope -> (string)
                                      The  parts  of the JSON to match against
                                      using the MatchPattern . If you  specify
                                      All  , WAF matches against keys and val-
                                      ues.

                                   InvalidFallbackBehavior -> (string)
                                      What WAF should do if it fails  to  com-
                                      pletely parse the JSON body. The options
                                      are the following:

                                      o EVALUATE_AS_STRING - Inspect the  body
                                        as  plain  text.  WAF applies the text
                                        transformations and inspection  crite-
                                        ria  that  you  defined  for  the JSON
                                        inspection to the body text string.

                                      o MATCH  -  Treat  the  web  request  as
                                        matching   the   rule  statement.  WAF
                                        applies  the  rule   action   to   the
                                        request.

                                      o NO_MATCH  -  Treat  the web request as
                                        not matching the rule statement.

                                      If you don't provide this  setting,  WAF
                                      parses and evaluates the content only up
                                      to the first  parsing  failure  that  it
                                      encounters.

                                      WAF  does  its  best to parse the entire
                                      JSON body, but might be forced  to  stop
                                      for  reasons such as invalid characters,
                                      duplicate keys, truncation, and any con-
                                      tent  whose root node isn't an object or
                                      an array.

                                      WAF parses the  JSON  in  the  following
                                      examples as two valid key, value pairs:

                                      o Missing                         comma:
                                        {"key1":"value1""key2":"value2"}

                                      o Missing                         colon:
                                        {"key1":"value1","key2""value2"}

                                      o Extra                          colons:
                                        {"key1"::"value1","key2""value2"}

                            ComparisonOperator -> (string)
                               The operator to use to compare the request part
                               to the size setting.

                            Size -> (long)
                               The  size,  in  byte, to compare to the request
                               part, after any transformations.

                            TextTransformations -> (list)
                               Text  transformations  eliminate  some  of  the
                               unusual  formatting  that  attackers use in web
                               requests in an effort to bypass  detection.  If
                               you  specify  one  or more transformations in a
                               rule statement, WAF  performs  all  transforma-
                               tions  on  the content of the request component
                               identified by FieldToMatch , starting from  the
                               lowest  priority setting, before inspecting the
                               content for a match.

                               (structure)
                                   Text transformations eliminate some of  the
                                   unusual  formatting  that  attackers use in
                                   web requests in an effort to bypass  detec-
                                   tion.

                                   Priority -> (integer)
                                      Sets  the  relative processing order for
                                      multiple   transformations   that    are
                                      defined  for  a rule statement. WAF pro-
                                      cesses all transformations, from  lowest
                                      priority  to  highest, before inspecting
                                      the transformed content. The  priorities
                                      don't  need  to be consecutive, but they
                                      must all be different.

                                   Type -> (string)
                                      You can specify the following  transfor-
                                      mation types:
                                          BASE64_DECODE   -  Decode  a  Base64
                                          -encoded string.

                                          BASE64_DECODE_EXT - Decode a  Base64
                                          -encoded string, but use a forgiving
                                          implementation that ignores  charac-
                                          ters that aren't valid.

                                          CMD_LINE  - Command-line transforma-
                                          tions. These are helpful in reducing
                                          effectiveness   of   attackers   who
                                          inject  an  operating  system   com-
                                          mand-line  command  and  use unusual
                                          formatting to disguise some  or  all
                                          of the command.

                                      o Delete the following characters: \ " '
                                        ^

                                      o Delete  spaces  before  the  following
                                        characters: / (

                                      o Replace  the following characters with
                                        a space: , ;

                                      o Replace multiple spaces with one space

                                      o Convert  uppercase  letters  (A-Z)  to
                                        lowercase (a-z)
                                          COMPRESS_WHITE_SPACE - Replace these
                                          characters  with  a  space character
                                          (decimal 32):

                                      o \f , formfeed, decimal 12

                                      o \t , tab, decimal 9

                                      o \n , newline, decimal 10

                                      o \r , carriage return, decimal 13

                                      o \v , vertical tab, decimal 11

                                      o Non-breaking space, decimal 160
                                          COMPRESS_WHITE_SPACE  also  replaces
                                          multiple spaces with one space.

                                          CSS_DECODE  - Decode characters that
                                          were encoded using  CSS  2.x  escape
                                          rules syndata.html#characters . This
                                          function uses up to two bytes in the
                                          decoding  process, so it can help to
                                          uncover ASCII characters  that  were
                                          encoded   using  CSS  encoding  that
                                          wouldnt typically be  encoded.  It's
                                          also  useful  in countering evasion,
                                          which is a combination  of  a  back-
                                          slash  and  non-hexadecimal  charac-
                                          ters. For example,  ja\vascript  for
                                          javascript.

                                          ESCAPE_SEQ_DECODE  - Decode the fol-
                                          lowing ANSI C escape sequences: \a ,
                                          \b  ,  \f , \n , \r , \t , \v , \\ ,
                                          \? , \' , \" ,  \xHH  (hexadecimal),
                                          \0OOO (octal). Encodings that aren't
                                          valid remain in the output.

                                          HEX_DECODE  -  Decode  a  string  of
                                          hexadecimal    characters   into   a
                                          binary.

                                          HTML_ENTITY_DECODE     -     Replace
                                          HTML-encoded  characters  with unen-
                                          coded characters. HTML_ENTITY_DECODE
                                          performs these operations:

                                      o Replaces (ampersand)quot; with "

                                      o Replaces   (ampersand)nbsp;   with   a
                                        non-breaking space, decimal 160

                                      o Replaces (ampersand)lt; with  a  "less
                                        than" symbol

                                      o Replaces (ampersand)gt; with >

                                      o Replaces  characters  that  are repre-
                                        sented in hexadecimal format,  (amper-
                                        sand)#xhhhh;  , with the corresponding
                                        characters

                                      o Replaces characters  that  are  repre-
                                        sented   in  decimal  format,  (amper-
                                        sand)#nnnn; , with  the  corresponding
                                        characters
                                          JS_DECODE - Decode JavaScript escape
                                          sequences. If a \  u  HHHH  code  is
                                          in  the  full-width ASCII code range
                                          of FF01-FF5E , then the higher  byte
                                          is  used  to  detect  and adjust the
                                          lower byte. If not, only  the  lower
                                          byte  is used and the higher byte is
                                          zeroed, causing a possible  loss  of
                                          information.

                                          LOWERCASE  -  Convert uppercase let-
                                          ters (A-Z) to lowercase (a-z).

                                          MD5 - Calculate an MD5 hash from the
                                          data in the input. The computed hash
                                          is in a raw binary form.

                                          NONE - Specify  NONE  if  you  don't
                                          want any text transformations.

                                          NORMALIZE_PATH   -  Remove  multiple
                                          slashes, directory  self-references,
                                          and  directory  back-references that
                                          are not  at  the  beginning  of  the
                                          input from an input string.

                                          NORMALIZE_PATH_WIN  -  This  is  the
                                          same as NORMALIZE_PATH ,  but  first
                                          converts   backslash  characters  to
                                          forward slashes.

                                          REMOVE_NULLS - Remove all NULL bytes
                                          from the input.

                                          REPLACE_COMMENTS   -   Replace  each
                                          occurrence of a C-style comment  (/*
                                          ... */ ) with a single space. Multi-
                                          ple consecutive occurrences are  not
                                          compressed.   Unterminated  comments
                                          are  also  replaced  with  a   space
                                          (ASCII  0x20). However, a standalone
                                          termination of a comment  (*/  )  is
                                          not acted upon.

                                          REPLACE_NULLS  -  Replace NULL bytes
                                          in the input with  space  characters
                                          (ASCII 0x20 ).

                                          SQL_HEX_DECODE   -  Decode  SQL  hex
                                          data. Example (0x414243  )  will  be
                                          decoded to (ABC ).

                                          URL_DECODE  -  Decode  a URL-encoded
                                          value.

                                          URL_DECODE_UNI - Like  URL_DECODE  ,
                                          but  with support for Microsoft-spe-
                                          cific %u encoding. If the code is in
                                          the  full-width  ASCII code range of
                                          FF01-FF5E , the higher byte is  used
                                          to detect and adjust the lower byte.
                                          Otherwise, only the  lower  byte  is
                                          used  and the higher byte is zeroed.

                                          UTF8_TO_UNICODE - Convert all  UTF-8
                                          character sequences to Unicode. This
                                          helps input normalization, and mini-
                                          mizing      false-positives      and
                                          false-negatives for non-English lan-
                                          guages.

                        GeoMatchStatement -> (structure)
                            A  rule  statement  used  to identify web requests
                            based on country of origin.

                            CountryCodes -> (list)
                               An array of two-character  country  codes,  for
                               example,  [  "US",  "CN"  ]  , from the alpha-2
                               country ISO codes of the ISO 3166 international
                               standard.

                               (string)

                            ForwardedIPConfig -> (structure)
                               The  configuration  for inspecting IP addresses
                               in an HTTP header that you specify, instead  of
                               using the IP address that's reported by the web
                               request origin. Commonly, this  is  the  X-For-
                               warded-For  (XFF)  header,  but you can specify
                               any header name.

                               NOTE:
                                   If the specified header  isn't  present  in
                                   the  request, WAF doesn't apply the rule to
                                   the web request at all.

                               HeaderName -> (string)
                                   The name of the HTTP header to use for  the
                                   IP  address. For example, to use the X-For-
                                   warded-For (XFF) header, set this to X-For-
                                   warded-For .

                                   NOTE:
                                      If the specified header isn't present in
                                      the request, WAF doesn't apply the  rule
                                      to the web request at all.

                               FallbackBehavior -> (string)
                                   The  match  status  to  assign  to  the web
                                   request if the request doesn't have a valid
                                   IP address in the specified position.

                                   NOTE:
                                      If the specified header isn't present in
                                      the request, WAF doesn't apply the  rule
                                      to the web request at all.

                                   You  can  specify  the  following  fallback
                                   behaviors:

                                   o MATCH - Treat the web request as matching
                                     the  rule statement. WAF applies the rule
                                     action to the request.

                                   o NO_MATCH - Treat the web request  as  not
                                     matching the rule statement.

                        RuleGroupReferenceStatement -> (structure)
                            A  rule  statement  used to run the rules that are
                            defined in a  RuleGroup . To use  this,  create  a
                            rule  group  with your rules, then provide the ARN
                            of the rule group in this statement.

                            You cannot nest  a  RuleGroupReferenceStatement  ,
                            for  example  for  use  inside  a  NotStatement or
                            OrStatement . You can only use a rule group refer-
                            ence  statement at the top level inside a web ACL.

                            ARN -> (string)
                               The Amazon Resource Name (ARN) of the entity.

                            ExcludedRules -> (list)
                               The rules in the referenced  rule  group  whose
                               actions  are  set to Count . When you exclude a
                               rule, WAF evaluates it exactly as it  would  if
                               the  rule action setting were Count . This is a
                               useful option for testing the rules in  a  rule
                               group  without  modifying  how they handle your
                               web traffic.

                               (structure)
                                   Specifies a single rule  in  a  rule  group
                                   whose  action you want to override to Count
                                   . When you exclude a rule, WAF evaluates it
                                   exactly as it would if the rule action set-
                                   ting were Count . This is a  useful  option
                                   for testing the rules in a rule group with-
                                   out modifying  how  they  handle  your  web
                                   traffic.

                                   Name -> (string)
                                      The  name  of  the rule whose action you
                                      want to override to Count .

                        IPSetReferenceStatement -> (structure)
                            A rule statement used to detect web requests  com-
                            ing   from  particular  IP  addresses  or  address
                            ranges. To use this, create an  IPSet that  speci-
                            fies  the  addresses  you want to detect, then use
                            the ARN of that set in this statement.  To  create
                            an IP set, see  CreateIPSet .

                            Each  IP  set rule statement references an IP set.
                            You create and maintain  the  set  independent  of
                            your  rules. This allows you to use the single set
                            in multiple rules. When you update the  referenced
                            set, WAF automatically updates all rules that ref-
                            erence it.

                            ARN -> (string)
                               The Amazon Resource Name (ARN)  of  the   IPSet
                               that this statement references.

                            IPSetForwardedIPConfig -> (structure)
                               The  configuration  for inspecting IP addresses
                               in an HTTP header that you specify, instead  of
                               using the IP address that's reported by the web
                               request origin. Commonly, this  is  the  X-For-
                               warded-For  (XFF)  header,  but you can specify
                               any header name.

                               NOTE:
                                   If the specified header  isn't  present  in
                                   the  request, WAF doesn't apply the rule to
                                   the web request at all.

                               HeaderName -> (string)
                                   The name of the HTTP header to use for  the
                                   IP  address. For example, to use the X-For-
                                   warded-For (XFF) header, set this to X-For-
                                   warded-For .

                                   NOTE:
                                      If the specified header isn't present in
                                      the request, WAF doesn't apply the  rule
                                      to the web request at all.

                               FallbackBehavior -> (string)
                                   The  match  status  to  assign  to  the web
                                   request if the request doesn't have a valid
                                   IP address in the specified position.

                                   NOTE:
                                      If the specified header isn't present in
                                      the request, WAF doesn't apply the  rule
                                      to the web request at all.

                                   You  can  specify  the  following  fallback
                                   behaviors:

                                   o MATCH - Treat the web request as matching
                                     the  rule statement. WAF applies the rule
                                     action to the request.

                                   o NO_MATCH - Treat the web request  as  not
                                     matching the rule statement.

                               Position -> (string)
                                   The  position  in  the header to search for
                                   the IP address. The header can  contain  IP
                                   addresses  of  the original client and also
                                   of proxies. For example, the  header  value
                                   could  be  10.1.1.1, 127.0.0.0, 10.10.10.10
                                   where the first IP address  identifies  the
                                   original client and the rest identify prox-
                                   ies that the request went through.

                                   The options for this setting are  the  fol-
                                   lowing:

                                   o FIRST  -  Inspect the first IP address in
                                     the list of IP addresses in  the  header.
                                     This is usually the client's original IP.

                                   o LAST - Inspect the last IP address in the
                                     list of IP addresses in the header.

                                   o ANY  -  Inspect  all  IP addresses in the
                                     header for a match. If  the  header  con-
                                     tains  more  than  10  IP  addresses, WAF
                                     inspects the last 10.

                        RegexPatternSetReferenceStatement -> (structure)
                            A rule statement used to search web request compo-
                            nents for matches with regular expressions. To use
                            this, create a  RegexPatternSet that specifies the
                            expressions  that you want to detect, then use the
                            ARN of that set in this statement. A  web  request
                            matches  the  pattern  set  rule  statement if the
                            request component matches any of the  patterns  in
                            the  set. To create a regex pattern set, see  Cre-
                            ateRegexPatternSet .

                            Each regex pattern set rule statement references a
                            regex pattern set. You create and maintain the set
                            independent of your rules. This allows you to  use
                            the  single set in multiple rules. When you update
                            the referenced set, WAF automatically updates  all
                            rules that reference it.

                            ARN -> (string)
                               The  Amazon  Resource Name (ARN) of the  Regex-
                               PatternSet that this statement references.

                            FieldToMatch -> (structure)
                               The part of a web request that you want WAF  to
                               inspect.  For  more  information,  see   Field-
                               ToMatch .

                               SingleHeader -> (structure)
                                   Inspect a single header. Provide  the  name
                                   of  the  header  to  inspect,  for example,
                                   User-Agent or Referer . This setting  isn't
                                   case sensitive.

                                   Example  JSON:  "SingleHeader":  {  "Name":
                                   "haystack" }

                                   Name -> (string)
                                      The name of the query header to inspect.

                               SingleQueryArgument -> (structure)
                                   Inspect  a  single  query argument. Provide
                                   the name of the query argument to  inspect,
                                   such  as UserName or SalesRegion . The name
                                   can be up to 30 characters long  and  isn't
                                   case sensitive.

                                   This  is  used  only  to  indicate  the web
                                   request component for WAF  to  inspect,  in
                                   the  FieldToMatch specification.

                                   Example   JSON:   "SingleQueryArgument":  {
                                   "Name": "myArgument" }

                                   Name -> (string)
                                      The  name  of  the  query  argument   to
                                      inspect.

                               AllQueryArguments -> (structure)
                                   Inspect all query arguments.

                               UriPath -> (structure)
                                   Inspect  the  request URI path. This is the
                                   part of a web  request  that  identifies  a
                                   resource, for example, /images/daily-ad.jpg
                                   .

                               QueryString -> (structure)
                                   Inspect the query string. This is the  part
                                   of  a URL that appears after a ? character,
                                   if any.

                               Body -> (structure)
                                   Inspect the request body as plain text. The
                                   request   body   immediately   follows  the
                                   request headers. This  is  the  part  of  a
                                   request  that  contains any additional data
                                   that you want to send to your web server as
                                   the  HTTP request body, such as data from a
                                   form.

                                   Note that only the first 8 KB (8192  bytes)
                                   of  the  request  body are forwarded to WAF
                                   for inspection by the underlying host  ser-
                                   vice.  If  you  don't  need to inspect more
                                   than 8 KB, you can guarantee that you don't
                                   allow  additional  bytes  in by combining a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement , with  a
                                   SizeConstraintStatement  that enforces an 8
                                   KB size limit on the body of  the  request.
                                   WAF  doesn't  support inspecting the entire
                                   contents  of  web  requests  whose   bodies
                                   exceed the 8 KB limit.

                               Method -> (structure)
                                   Inspect  the  HTTP method. The method indi-
                                   cates  the  type  of  operation  that   the
                                   request is asking the origin to perform.

                               JsonBody -> (structure)
                                   Inspect  the  request  body  as  JSON.  The
                                   request  body   immediately   follows   the
                                   request  headers.  This  is  the  part of a
                                   request that contains any  additional  data
                                   that you want to send to your web server as
                                   the HTTP request body, such as data from  a
                                   form.

                                   Note  that only the first 8 KB (8192 bytes)
                                   of the request body are  forwarded  to  WAF
                                   for  inspection by the underlying host ser-
                                   vice. If you don't  need  to  inspect  more
                                   than 8 KB, you can guarantee that you don't
                                   allow additional bytes in  by  combining  a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement  , with a
                                   SizeConstraintStatement that enforces an  8
                                   KB  size  limit on the body of the request.
                                   WAF doesn't support inspecting  the  entire
                                   contents   of  web  requests  whose  bodies
                                   exceed the 8 KB limit.

                                   MatchPattern -> (structure)
                                      The patterns to look  for  in  the  JSON
                                      body.  WAF inspects the results of these
                                      pattern matches against the rule inspec-
                                      tion criteria.

                                      All -> (structure)
                                          Match  all of the elements. See also
                                          MatchScope in  JsonBody .

                                          You must specify either this setting
                                          or  the  IncludedPaths  setting, but
                                          not both.

                                      IncludedPaths -> (list)
                                          Match  only  the  specified  include
                                          paths. See also MatchScope in  Json-
                                          Body .

                                          Provide the include paths using JSON
                                          Pointer    syntax.    For   example,
                                          "IncludedPaths":    ["/dogs/0/name",
                                          "/dogs/1/name"]  .  For  information
                                          about this syntax, see the  Internet
                                          Engineering  Task Force (IETF) docu-
                                          mentation JavaScript Object Notation
                                          (JSON) Pointer .

                                          You must specify either this setting
                                          or the All setting, but not both.

                                          NOTE:
                                             Don't use this option to  include
                                             all  paths.  Instead, use the All
                                             setting.

                                          (string)

                                   MatchScope -> (string)
                                      The parts of the JSON to  match  against
                                      using  the MatchPattern . If you specify
                                      All , WAF matches against keys and  val-
                                      ues.

                                   InvalidFallbackBehavior -> (string)
                                      What  WAF  should do if it fails to com-
                                      pletely parse the JSON body. The options
                                      are the following:

                                      o EVALUATE_AS_STRING  - Inspect the body
                                        as plain text. WAF  applies  the  text
                                        transformations  and inspection crite-
                                        ria that  you  defined  for  the  JSON
                                        inspection to the body text string.

                                      o MATCH  -  Treat  the  web  request  as
                                        matching  the  rule   statement.   WAF
                                        applies   the   rule   action  to  the
                                        request.

                                      o NO_MATCH - Treat the  web  request  as
                                        not matching the rule statement.

                                      If  you  don't provide this setting, WAF
                                      parses and evaluates the content only up
                                      to  the  first  parsing  failure that it
                                      encounters.

                                      WAF does its best to  parse  the  entire
                                      JSON  body,  but might be forced to stop
                                      for reasons such as invalid  characters,
                                      duplicate keys, truncation, and any con-
                                      tent whose root node isn't an object  or
                                      an array.

                                      WAF  parses  the  JSON  in the following
                                      examples as two valid key, value pairs:

                                      o Missing                         comma:
                                        {"key1":"value1""key2":"value2"}

                                      o Missing                         colon:
                                        {"key1":"value1","key2""value2"}

                                      o Extra                          colons:
                                        {"key1"::"value1","key2""value2"}

                            TextTransformations -> (list)
                               Text  transformations  eliminate  some  of  the
                               unusual formatting that attackers  use  in  web
                               requests  in  an effort to bypass detection. If
                               you specify one or more  transformations  in  a
                               rule  statement,  WAF  performs all transforma-
                               tions on the content of the  request  component
                               identified  by FieldToMatch , starting from the
                               lowest priority setting, before inspecting  the
                               content for a match.

                               (structure)
                                   Text  transformations eliminate some of the
                                   unusual formatting that  attackers  use  in
                                   web  requests in an effort to bypass detec-
                                   tion.

                                   Priority -> (integer)
                                      Sets the relative processing  order  for
                                      multiple    transformations   that   are
                                      defined for a rule statement.  WAF  pro-
                                      cesses  all transformations, from lowest
                                      priority to highest,  before  inspecting
                                      the  transformed content. The priorities
                                      don't need to be consecutive,  but  they
                                      must all be different.

                                   Type -> (string)
                                      You  can specify the following transfor-
                                      mation types:
                                          BASE64_DECODE  -  Decode  a   Base64
                                          -encoded string.

                                          BASE64_DECODE_EXT  - Decode a Base64
                                          -encoded string, but use a forgiving
                                          implementation  that ignores charac-
                                          ters that aren't valid.

                                          CMD_LINE - Command-line  transforma-
                                          tions. These are helpful in reducing
                                          effectiveness   of   attackers   who
                                          inject   an  operating  system  com-
                                          mand-line command  and  use  unusual
                                          formatting  to  disguise some or all
                                          of the command.

                                      o Delete the following characters: \ " '
                                        ^

                                      o Delete  spaces  before  the  following
                                        characters: / (

                                      o Replace the following characters  with
                                        a space: , ;

                                      o Replace multiple spaces with one space

                                      o Convert  uppercase  letters  (A-Z)  to
                                        lowercase (a-z)
                                          COMPRESS_WHITE_SPACE - Replace these
                                          characters with  a  space  character
                                          (decimal 32):

                                      o \f , formfeed, decimal 12

                                      o \t , tab, decimal 9

                                      o \n , newline, decimal 10

                                      o \r , carriage return, decimal 13

                                      o \v , vertical tab, decimal 11

                                      o Non-breaking space, decimal 160
                                          COMPRESS_WHITE_SPACE  also  replaces
                                          multiple spaces with one space.

                                          CSS_DECODE - Decode characters  that
                                          were  encoded  using  CSS 2.x escape
                                          rules syndata.html#characters . This
                                          function uses up to two bytes in the
                                          decoding process, so it can help  to
                                          uncover  ASCII  characters that were
                                          encoded  using  CSS  encoding   that
                                          wouldnt  typically  be encoded. It's
                                          also useful in  countering  evasion,
                                          which  is  a  combination of a back-
                                          slash  and  non-hexadecimal  charac-
                                          ters.  For  example, ja\vascript for
                                          javascript.

                                          ESCAPE_SEQ_DECODE - Decode the  fol-
                                          lowing ANSI C escape sequences: \a ,
                                          \b , \f , \n , \r , \t , \v ,  \\  ,
                                          \?  ,  \' , \" , \xHH (hexadecimal),
                                          \0OOO (octal). Encodings that aren't
                                          valid remain in the output.

                                          HEX_DECODE  -  Decode  a  string  of
                                          hexadecimal   characters   into    a
                                          binary.

                                          HTML_ENTITY_DECODE     -     Replace
                                          HTML-encoded characters  with  unen-
                                          coded characters. HTML_ENTITY_DECODE
                                          performs these operations:

                                      o Replaces (ampersand)quot; with "

                                      o Replaces   (ampersand)nbsp;   with   a
                                        non-breaking space, decimal 160

                                      o Replaces  (ampersand)lt;  with a "less
                                        than" symbol

                                      o Replaces (ampersand)gt; with >

                                      o Replaces characters  that  are  repre-
                                        sented  in hexadecimal format, (amper-
                                        sand)#xhhhh; , with the  corresponding
                                        characters

                                      o Replaces  characters  that  are repre-
                                        sented  in  decimal  format,   (amper-
                                        sand)#nnnn;  ,  with the corresponding
                                        characters
                                          JS_DECODE - Decode JavaScript escape
                                          sequences.  If  a \  u  HHHH code is
                                          in the full-width ASCII  code  range
                                          of  FF01-FF5E , then the higher byte
                                          is used to  detect  and  adjust  the
                                          lower  byte.  If not, only the lower
                                          byte is used and the higher byte  is
                                          zeroed,  causing  a possible loss of
                                          information.

                                          LOWERCASE - Convert  uppercase  let-
                                          ters (A-Z) to lowercase (a-z).

                                          MD5 - Calculate an MD5 hash from the
                                          data in the input. The computed hash
                                          is in a raw binary form.

                                          NONE  -  Specify  NONE  if you don't
                                          want any text transformations.

                                          NORMALIZE_PATH  -  Remove   multiple
                                          slashes,  directory self-references,
                                          and directory  back-references  that
                                          are  not  at  the  beginning  of the
                                          input from an input string.

                                          NORMALIZE_PATH_WIN  -  This  is  the
                                          same  as  NORMALIZE_PATH , but first
                                          converts  backslash  characters   to
                                          forward slashes.

                                          REMOVE_NULLS - Remove all NULL bytes
                                          from the input.

                                          REPLACE_COMMENTS  -   Replace   each
                                          occurrence  of a C-style comment (/*
                                          ... */ ) with a single space. Multi-
                                          ple  consecutive occurrences are not
                                          compressed.  Unterminated   comments
                                          are   also  replaced  with  a  space
                                          (ASCII 0x20). However, a  standalone
                                          termination  of  a  comment (*/ ) is
                                          not acted upon.

                                          REPLACE_NULLS - Replace  NULL  bytes
                                          in  the  input with space characters
                                          (ASCII 0x20 ).

                                          SQL_HEX_DECODE  -  Decode  SQL   hex
                                          data.  Example  (0x414243  ) will be
                                          decoded to (ABC ).

                                          URL_DECODE -  Decode  a  URL-encoded
                                          value.

                                          URL_DECODE_UNI  -  Like URL_DECODE ,
                                          but with support for  Microsoft-spe-
                                          cific %u encoding. If the code is in
                                          the full-width ASCII code  range  of
                                          FF01-FF5E  , the higher byte is used
                                          to detect and adjust the lower byte.
                                          Otherwise,  only  the  lower byte is
                                          used and the higher byte is  zeroed.

                                          UTF8_TO_UNICODE  - Convert all UTF-8
                                          character sequences to Unicode. This
                                          helps input normalization, and mini-
                                          mizing      false-positives      and
                                          false-negatives for non-English lan-
                                          guages.

                        RateBasedStatement -> (structure)
                            A rate-based rule tracks the rate of requests  for
                            each originating IP address, and triggers the rule
                            action when the rate  exceeds  a  limit  that  you
                            specify  on the number of requests in any 5-minute
                            time span. You can use this  to  put  a  temporary
                            block on requests from an IP address that is send-
                            ing excessive requests.

                            WAF tracks and manages web requests separately for
                            each  instance  of a rate-based rule that you use.
                            For example, if you provide  the  same  rate-based
                            rule  settings  in  two  web ACLs, each of the two
                            rule statements represents a separate instance  of
                            the  rate-based rule and gets its own tracking and
                            management by WAF. If you define a rate-based rule
                            inside  a rule group, and then use that rule group
                            in multiple places, each use  creates  a  separate
                            instance  of the rate-based rule that gets its own
                            tracking and management by WAF.

                            When the rule action triggers,  WAF  blocks  addi-
                            tional  requests  from  the  IP  address until the
                            request rate falls below the limit.

                            You can optionally nest another  statement  inside
                            the  rate-based  statement, to narrow the scope of
                            the rule so that  it  only  counts  requests  that
                            match  the nested statement. For example, based on
                            recent  requests  that  you  have  seen  from   an
                            attacker,  you might create a rate-based rule with
                            a nested AND rule statement that contains the fol-
                            lowing nested statements:

                            o An IP match statement with an IP set that speci-
                              fied the address 192.0.2.44.

                            o A string match statement that  searches  in  the
                              User-Agent header for the string BadBot.

                            In  this  rate-based  rule, you also define a rate
                            limit. For this example, the rate limit is  1,000.
                            Requests  that  meet both of the conditions in the
                            statements are counted. If the count exceeds 1,000
                            requests  per  five minutes, the rule action trig-
                            gers. Requests that do not  meet  both  conditions
                            are not counted towards the rate limit and are not
                            affected by this rule.

                            You  cannot  nest  a   RateBasedStatement   inside
                            another  statement, for example inside a NotState-
                            ment or OrStatement . You can define a  RateBased-
                            Statement  inside  a  web  ACL  and  inside a rule
                            group.

                            Limit -> (long)
                               The limit on requests per 5-minute period for a
                               single originating IP address. If the statement
                               includes a ScopeDownStatement , this  limit  is
                               applied  only  to  the  requests that match the
                               statement.

                            AggregateKeyType -> (string)
                               Setting that indicates  how  to  aggregate  the
                               request counts. The options are the following:

                               o IP  -  Aggregate the request counts on the IP
                                 address from the web request origin.

                               o FORWARDED_IP - Aggregate the  request  counts
                                 on the first IP address in an HTTP header. If
                                 you use this, configure the ForwardedIPConfig
                                 , to specify the header to use.

                            (  ... recursive ... )ForwardedIPConfig -> (struc-
                            ture)
                               The configuration for inspecting  IP  addresses
                               in  an HTTP header that you specify, instead of
                               using the IP address that's reported by the web
                               request  origin.  Commonly,  this is the X-For-
                               warded-For (XFF) header, but  you  can  specify
                               any header name.

                               NOTE:
                                   If  the  specified  header isn't present in
                                   the request, WAF doesn't apply the rule  to
                                   the web request at all.

                               This  is required if AggregateKeyType is set to
                               FORWARDED_IP .

                               HeaderName -> (string)
                                   The name of the HTTP header to use for  the
                                   IP  address. For example, to use the X-For-
                                   warded-For (XFF) header, set this to X-For-
                                   warded-For .

                                   NOTE:
                                      If the specified header isn't present in
                                      the request, WAF doesn't apply the  rule
                                      to the web request at all.

                               FallbackBehavior -> (string)
                                   The  match  status  to  assign  to  the web
                                   request if the request doesn't have a valid
                                   IP address in the specified position.

                                   NOTE:
                                      If the specified header isn't present in
                                      the request, WAF doesn't apply the  rule
                                      to the web request at all.

                                   You  can  specify  the  following  fallback
                                   behaviors:

                                   o MATCH - Treat the web request as matching
                                     the  rule statement. WAF applies the rule
                                     action to the request.

                                   o NO_MATCH - Treat the web request  as  not
                                     matching the rule statement.

                        AndStatement -> (structure)
                            A  logical  rule  statement  used to combine other
                            rule statements with AND logic. You  provide  more
                            than one  Statement within the AndStatement .

                            Statements -> (list)
                               The  statements  to combine with AND logic. You
                               can use any statements that can be nested.

                               ( ... recursive ... )

                        OrStatement -> (structure)
                            A logical rule statement  used  to  combine  other
                            rule  statements  with  OR logic. You provide more
                            than one  Statement within the OrStatement .

                            Statements -> (list)
                               The statements to combine with  OR  logic.  You
                               can use any statements that can be nested.

                               ( ... recursive ... )

                        NotStatement -> (structure)
                            A  logical  rule  statement  used  to  negate  the
                            results of another rule statement. You provide one
                            Statement within the NotStatement .

                            ( ... recursive ... )

                        ManagedRuleGroupStatement -> (structure)
                            A  rule  statement  used to run the rules that are
                            defined in a managed rule group. To use this, pro-
                            vide  the  vendor  name  and  the name of the rule
                            group in this  statement.  You  can  retrieve  the
                            required  names  by  calling  ListAvailableManage-
                            dRuleGroups .

                            You cannot nest a ManagedRuleGroupStatement ,  for
                            example  for use inside a NotStatement or OrState-
                            ment . It can only be referenced  as  a  top-level
                            statement within a rule.

                            VendorName -> (string)
                               The  name of the managed rule group vendor. You
                               use this, along with the rule  group  name,  to
                               identify the rule group.

                            Name -> (string)
                               The  name  of  the  managed rule group. You use
                               this, along with the vendor name,  to  identify
                               the rule group.

                            Version -> (string)
                               The  version  of the managed rule group to use.
                               If you specify this,  the  version  setting  is
                               fixed until you change it. If you don't specify
                               this, WAF uses the  vendor's  default  version,
                               and  then  keeps  the  version  at the vendor's
                               default when the  vendor  updates  the  managed
                               rule group settings.

                            ExcludedRules -> (list)
                               The  rules  in  the referenced rule group whose
                               actions are set to Count . When you  exclude  a
                               rule,  WAF  evaluates it exactly as it would if
                               the rule action setting were Count . This is  a
                               useful  option  for testing the rules in a rule
                               group without modifying how  they  handle  your
                               web traffic.

                               (structure)
                                   Specifies  a  single  rule  in a rule group
                                   whose action you want to override to  Count
                                   . When you exclude a rule, WAF evaluates it
                                   exactly as it would if the rule action set-
                                   ting  were  Count . This is a useful option
                                   for testing the rules in a rule group with-
                                   out  modifying  how  they  handle  your web
                                   traffic.

                                   Name -> (string)
                                      The name of the rule  whose  action  you
                                      want to override to Count .

                            ( ... recursive ... )

                        LabelMatchStatement -> (structure)
                            A  rule  statement  that  defines  a  string match
                            search against labels that have been added to  the
                            web  request by rules that have already run in the
                            web ACL.

                            The label match statement provides  the  label  or
                            namespace  string  to search for. The label string
                            can represent a part or all of the fully qualified
                            label name that had been added to the web request.
                            Fully qualified labels  have  a  prefix,  optional
                            namespaces,  and label name. The prefix identifies
                            the rule group or web ACL context of the rule that
                            added  the  label. If you do not provide the fully
                            qualified name in your  label  match  string,  WAF
                            performs  the search for labels that were added in
                            the same context as the label match statement.

                            Scope -> (string)
                               Specify whether you want  to  match  using  the
                               label name or just the namespace.

                            Key -> (string)
                               The  string  to  match against. The setting you
                               provide for this depends on  the  match  state-
                               ment's Scope setting:

                               o If  the  Scope  indicates  LABEL  , then this
                                 specification must include the name  and  can
                                 include  any  number  of  preceding namespace
                                 specifications and prefix up to providing the
                                 fully qualified label name.

                               o If  the Scope indicates NAMESPACE , then this
                                 specification can include any number of  con-
                                 tiguous  namespace  strings,  and can include
                                 the entire label namespace  prefix  from  the
                                 rule  group or web ACL where the label origi-
                                 nates.

                               Labels are case sensitive and components  of  a
                               label  must  be separated by colon, for example
                               NS1:NS2:name .

                        RegexMatchStatement -> (structure)
                            A rule statement used to search web request compo-
                            nents for a match against a single regular expres-
                            sion.

                            RegexString -> (string)
                               The string representing the regular expression.

                            FieldToMatch -> (structure)
                               The  part of a web request that you want WAF to
                               inspect.  For  more  information,  see   Field-
                               ToMatch .

                               SingleHeader -> (structure)
                                   Inspect  a  single header. Provide the name
                                   of the  header  to  inspect,  for  example,
                                   User-Agent  or Referer . This setting isn't
                                   case sensitive.

                                   Example  JSON:  "SingleHeader":  {  "Name":
                                   "haystack" }

                                   Name -> (string)
                                      The name of the query header to inspect.

                               SingleQueryArgument -> (structure)
                                   Inspect a single  query  argument.  Provide
                                   the  name of the query argument to inspect,
                                   such as UserName or SalesRegion . The  name
                                   can  be  up to 30 characters long and isn't
                                   case sensitive.

                                   This is  used  only  to  indicate  the  web
                                   request  component  for  WAF to inspect, in
                                   the  FieldToMatch specification.

                                   Example  JSON:   "SingleQueryArgument":   {
                                   "Name": "myArgument" }

                                   Name -> (string)
                                      The   name  of  the  query  argument  to
                                      inspect.

                               AllQueryArguments -> (structure)
                                   Inspect all query arguments.

                               UriPath -> (structure)
                                   Inspect the request URI path. This  is  the
                                   part  of  a  web  request that identifies a
                                   resource, for example, /images/daily-ad.jpg
                                   .

                               QueryString -> (structure)
                                   Inspect  the query string. This is the part
                                   of a URL that appears after a ?  character,
                                   if any.

                               Body -> (structure)
                                   Inspect the request body as plain text. The
                                   request  body   immediately   follows   the
                                   request  headers.  This  is  the  part of a
                                   request that contains any  additional  data
                                   that you want to send to your web server as
                                   the HTTP request body, such as data from  a
                                   form.

                                   Note  that only the first 8 KB (8192 bytes)
                                   of the request body are  forwarded  to  WAF
                                   for  inspection by the underlying host ser-
                                   vice. If you don't  need  to  inspect  more
                                   than 8 KB, you can guarantee that you don't
                                   allow additional bytes in  by  combining  a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement  , with a
                                   SizeConstraintStatement that enforces an  8
                                   KB  size  limit on the body of the request.
                                   WAF doesn't support inspecting  the  entire
                                   contents   of  web  requests  whose  bodies
                                   exceed the 8 KB limit.

                               Method -> (structure)
                                   Inspect the HTTP method. The  method  indi-
                                   cates   the  type  of  operation  that  the
                                   request is asking the origin to perform.

                               JsonBody -> (structure)
                                   Inspect  the  request  body  as  JSON.  The
                                   request   body   immediately   follows  the
                                   request headers. This  is  the  part  of  a
                                   request  that  contains any additional data
                                   that you want to send to your web server as
                                   the  HTTP request body, such as data from a
                                   form.

                                   Note that only the first 8 KB (8192  bytes)
                                   of  the  request  body are forwarded to WAF
                                   for inspection by the underlying host  ser-
                                   vice.  If  you  don't  need to inspect more
                                   than 8 KB, you can guarantee that you don't
                                   allow  additional  bytes  in by combining a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement , with  a
                                   SizeConstraintStatement  that enforces an 8
                                   KB size limit on the body of  the  request.
                                   WAF  doesn't  support inspecting the entire
                                   contents  of  web  requests  whose   bodies
                                   exceed the 8 KB limit.

                                   MatchPattern -> (structure)
                                      The  patterns  to  look  for in the JSON
                                      body. WAF inspects the results of  these
                                      pattern matches against the rule inspec-
                                      tion criteria.

                                      All -> (structure)
                                          Match all of the elements. See  also
                                          MatchScope in  JsonBody .

                                          You must specify either this setting
                                          or the  IncludedPaths  setting,  but
                                          not both.

                                      IncludedPaths -> (list)
                                          Match  only  the  specified  include
                                          paths. See also MatchScope in  Json-
                                          Body .

                                          Provide the include paths using JSON
                                          Pointer   syntax.    For    example,
                                          "IncludedPaths":    ["/dogs/0/name",
                                          "/dogs/1/name"]  .  For  information
                                          about  this syntax, see the Internet
                                          Engineering Task Force (IETF)  docu-
                                          mentation JavaScript Object Notation
                                          (JSON) Pointer .

                                          You must specify either this setting
                                          or the All setting, but not both.

                                          NOTE:
                                             Don't  use this option to include
                                             all paths. Instead, use  the  All
                                             setting.

                                          (string)

                                   MatchScope -> (string)
                                      The  parts  of the JSON to match against
                                      using the MatchPattern . If you  specify
                                      All  , WAF matches against keys and val-
                                      ues.

                                   InvalidFallbackBehavior -> (string)
                                      What WAF should do if it fails  to  com-
                                      pletely parse the JSON body. The options
                                      are the following:

                                      o EVALUATE_AS_STRING - Inspect the  body
                                        as  plain  text.  WAF applies the text
                                        transformations and inspection  crite-
                                        ria  that  you  defined  for  the JSON
                                        inspection to the body text string.

                                      o MATCH  -  Treat  the  web  request  as
                                        matching   the   rule  statement.  WAF
                                        applies  the  rule   action   to   the
                                        request.

                                      o NO_MATCH  -  Treat  the web request as
                                        not matching the rule statement.

                                      If you don't provide this  setting,  WAF
                                      parses and evaluates the content only up
                                      to the first  parsing  failure  that  it
                                      encounters.

                                      WAF  does  its  best to parse the entire
                                      JSON body, but might be forced  to  stop
                                      for  reasons such as invalid characters,
                                      duplicate keys, truncation, and any con-
                                      tent  whose root node isn't an object or
                                      an array.

                                      WAF parses the  JSON  in  the  following
                                      examples as two valid key, value pairs:

                                      o Missing                         comma:
                                        {"key1":"value1""key2":"value2"}

                                      o Missing                         colon:
                                        {"key1":"value1","key2""value2"}

                                      o Extra                          colons:
                                        {"key1"::"value1","key2""value2"}

                            TextTransformations -> (list)
                               Text  transformations  eliminate  some  of  the
                               unusual  formatting  that  attackers use in web
                               requests in an effort to bypass  detection.  If
                               you  specify  one  or more transformations in a
                               rule statement, WAF  performs  all  transforma-
                               tions  on  the content of the request component
                               identified by FieldToMatch , starting from  the
                               lowest  priority setting, before inspecting the
                               content for a match.

                               (structure)
                                   Text transformations eliminate some of  the
                                   unusual  formatting  that  attackers use in
                                   web requests in an effort to bypass  detec-
                                   tion.

                                   Priority -> (integer)
                                      Sets  the  relative processing order for
                                      multiple   transformations   that    are
                                      defined  for  a rule statement. WAF pro-
                                      cesses all transformations, from  lowest
                                      priority  to  highest, before inspecting
                                      the transformed content. The  priorities
                                      don't  need  to be consecutive, but they
                                      must all be different.

                                   Type -> (string)
                                      You can specify the following  transfor-
                                      mation types:
                                          BASE64_DECODE   -  Decode  a  Base64
                                          -encoded string.

                                          BASE64_DECODE_EXT - Decode a  Base64
                                          -encoded string, but use a forgiving
                                          implementation that ignores  charac-
                                          ters that aren't valid.

                                          CMD_LINE  - Command-line transforma-
                                          tions. These are helpful in reducing
                                          effectiveness   of   attackers   who
                                          inject  an  operating  system   com-
                                          mand-line  command  and  use unusual
                                          formatting to disguise some  or  all
                                          of the command.

                                      o Delete the following characters: \ " '
                                        ^

                                      o Delete  spaces  before  the  following
                                        characters: / (

                                      o Replace  the following characters with
                                        a space: , ;

                                      o Replace multiple spaces with one space

                                      o Convert  uppercase  letters  (A-Z)  to
                                        lowercase (a-z)
                                          COMPRESS_WHITE_SPACE - Replace these
                                          characters  with  a  space character
                                          (decimal 32):

                                      o \f , formfeed, decimal 12

                                      o \t , tab, decimal 9

                                      o \n , newline, decimal 10

                                      o \r , carriage return, decimal 13

                                      o \v , vertical tab, decimal 11

                                      o Non-breaking space, decimal 160
                                          COMPRESS_WHITE_SPACE  also  replaces
                                          multiple spaces with one space.

                                          CSS_DECODE  - Decode characters that
                                          were encoded using  CSS  2.x  escape
                                          rules syndata.html#characters . This
                                          function uses up to two bytes in the
                                          decoding  process, so it can help to
                                          uncover ASCII characters  that  were
                                          encoded   using  CSS  encoding  that
                                          wouldnt typically be  encoded.  It's
                                          also  useful  in countering evasion,
                                          which is a combination  of  a  back-
                                          slash  and  non-hexadecimal  charac-
                                          ters. For example,  ja\vascript  for
                                          javascript.

                                          ESCAPE_SEQ_DECODE  - Decode the fol-
                                          lowing ANSI C escape sequences: \a ,
                                          \b  ,  \f , \n , \r , \t , \v , \\ ,
                                          \? , \' , \" ,  \xHH  (hexadecimal),
                                          \0OOO (octal). Encodings that aren't
                                          valid remain in the output.

                                          HEX_DECODE  -  Decode  a  string  of
                                          hexadecimal    characters   into   a
                                          binary.

                                          HTML_ENTITY_DECODE     -     Replace
                                          HTML-encoded  characters  with unen-
                                          coded characters. HTML_ENTITY_DECODE
                                          performs these operations:

                                      o Replaces (ampersand)quot; with "

                                      o Replaces   (ampersand)nbsp;   with   a
                                        non-breaking space, decimal 160

                                      o Replaces (ampersand)lt; with  a  "less
                                        than" symbol

                                      o Replaces (ampersand)gt; with >

                                      o Replaces  characters  that  are repre-
                                        sented in hexadecimal format,  (amper-
                                        sand)#xhhhh;  , with the corresponding
                                        characters

                                      o Replaces characters  that  are  repre-
                                        sented   in  decimal  format,  (amper-
                                        sand)#nnnn; , with  the  corresponding
                                        characters
                                          JS_DECODE - Decode JavaScript escape
                                          sequences. If a \  u  HHHH  code  is
                                          in  the  full-width ASCII code range
                                          of FF01-FF5E , then the higher  byte
                                          is  used  to  detect  and adjust the
                                          lower byte. If not, only  the  lower
                                          byte  is used and the higher byte is
                                          zeroed, causing a possible  loss  of
                                          information.

                                          LOWERCASE  -  Convert uppercase let-
                                          ters (A-Z) to lowercase (a-z).

                                          MD5 - Calculate an MD5 hash from the
                                          data in the input. The computed hash
                                          is in a raw binary form.

                                          NONE - Specify  NONE  if  you  don't
                                          want any text transformations.

                                          NORMALIZE_PATH   -  Remove  multiple
                                          slashes, directory  self-references,
                                          and  directory  back-references that
                                          are not  at  the  beginning  of  the
                                          input from an input string.

                                          NORMALIZE_PATH_WIN  -  This  is  the
                                          same as NORMALIZE_PATH ,  but  first
                                          converts   backslash  characters  to
                                          forward slashes.

                                          REMOVE_NULLS - Remove all NULL bytes
                                          from the input.

                                          REPLACE_COMMENTS   -   Replace  each
                                          occurrence of a C-style comment  (/*
                                          ... */ ) with a single space. Multi-
                                          ple consecutive occurrences are  not
                                          compressed.   Unterminated  comments
                                          are  also  replaced  with  a   space
                                          (ASCII  0x20). However, a standalone
                                          termination of a comment  (*/  )  is
                                          not acted upon.

                                          REPLACE_NULLS  -  Replace NULL bytes
                                          in the input with  space  characters
                                          (ASCII 0x20 ).

                                          SQL_HEX_DECODE   -  Decode  SQL  hex
                                          data. Example (0x414243  )  will  be
                                          decoded to (ABC ).

                                          URL_DECODE  -  Decode  a URL-encoded
                                          value.

                                          URL_DECODE_UNI - Like  URL_DECODE  ,
                                          but  with support for Microsoft-spe-
                                          cific %u encoding. If the code is in
                                          the  full-width  ASCII code range of
                                          FF01-FF5E , the higher byte is  used
                                          to detect and adjust the lower byte.
                                          Otherwise, only the  lower  byte  is
                                          used  and the higher byte is zeroed.

                                          UTF8_TO_UNICODE - Convert all  UTF-8
                                          character sequences to Unicode. This
                                          helps input normalization, and mini-
                                          mizing      false-positives      and
                                          false-negatives for non-English lan-
                                          guages.

                 ManagedRuleGroupStatement -> (structure)
                     A  rule  statement used to run the rules that are defined
                     in a managed rule group. To use this, provide the  vendor
                     name  and  the  name of the rule group in this statement.
                     You can retrieve the  required  names  by  calling   Lis-
                     tAvailableManagedRuleGroups .

                     You cannot nest a ManagedRuleGroupStatement , for example
                     for use inside a NotStatement or  OrStatement  .  It  can
                     only  be  referenced  as  a  top-level statement within a
                     rule.

                     VendorName -> (string)
                        The name of the managed rule  group  vendor.  You  use
                        this,  along with the rule group name, to identify the
                        rule group.

                     Name -> (string)
                        The name of the managed  rule  group.  You  use  this,
                        along  with  the  vendor  name,  to  identify the rule
                        group.

                     Version -> (string)
                        The version of the managed rule group to use.  If  you
                        specify  this,  the version setting is fixed until you
                        change it. If you don't specify  this,  WAF  uses  the
                        vendor's  default  version, and then keeps the version
                        at the vendor's default when the  vendor  updates  the
                        managed rule group settings.

                     ExcludedRules -> (list)
                        The  rules  in the referenced rule group whose actions
                        are set to Count . When you exclude a rule, WAF evalu-
                        ates it exactly as it would if the rule action setting
                        were Count . This is a useful option for  testing  the
                        rules  in a rule group without modifying how they han-
                        dle your web traffic.

                        (structure)
                            Specifies a single rule  in  a  rule  group  whose
                            action  you  want  to override to Count . When you
                            exclude a rule, WAF evaluates  it  exactly  as  it
                            would if the rule action setting were Count . This
                            is a useful option for testing the rules in a rule
                            group  without  modifying how they handle your web
                            traffic.

                            Name -> (string)
                               The name of the rule whose action you  want  to
                               override to Count .

                     ScopeDownStatement -> (structure)
                        An optional nested statement that narrows the scope of
                        the web requests that are  evaluated  by  the  managed
                        rule  group.  Requests  are only evaluated by the rule
                        group if they match the scope-down statement. You  can
                        use  any  nestable  Statement in the scope-down state-
                        ment, and you can nest statements at  any  level,  the
                        same as you can for a rule statement.

                        ByteMatchStatement -> (structure)
                            A  rule  statement  that  defines  a  string match
                            search for WAF to apply to web requests. The  byte
                            match  statement provides the bytes to search for,
                            the location in requests  that  you  want  WAF  to
                            search,  and  other  settings. The bytes to search
                            for are typically a string that  corresponds  with
                            ASCII  characters.  In  the  WAF  console  and the
                            developer guide, this is refered to  as  a  string
                            match statement.

                            SearchString -> (blob)
                               A string value that you want WAF to search for.
                               WAF searches only in the part of  web  requests
                               that  you  designate  for inspection in  Field-
                               ToMatch . The maximum length of the value is 50
                               bytes.

                               Valid  values  depend on the component that you
                               specify for inspection in FieldToMatch :

                               o Method : The HTTP method that you want WAF to
                                 search for. This indicates the type of opera-
                                 tion specified in the request.

                               o UriPath : The value  that  you  want  WAF  to
                                 search  for  in  the  URI  path, for example,
                                 /images/daily-ad.jpg .

                               If SearchString includes alphabetic  characters
                               A-Z and a-z, note that the value is case sensi-
                               tive.
                                   If you're using the WAF API

                               Specify a base64-encoded version of the  value.
                               The  maximum  length  of  the  value before you
                               base64-encode it is 50 bytes.

                               For example,  suppose  the  value  of  Type  is
                               HEADER and the value of Data is User-Agent . If
                               you want to search the  User-Agent  header  for
                               the  value  BadBot  ,  you base64-encode BadBot
                               using  MIME  base64-encoding  and  include  the
                               resulting  value,  QmFkQm90  ,  in the value of
                               SearchString .
                                   If you're using the CLI or one of the  Ama-
                                   zon Web Services SDKs

                               The  value that you want WAF to search for. The
                               SDK automatically base64 encodes the value.

                            FieldToMatch -> (structure)
                               The part of a web request that you want WAF  to
                               inspect.  For  more  information,  see   Field-
                               ToMatch .

                               SingleHeader -> (structure)
                                   Inspect a single header. Provide  the  name
                                   of  the  header  to  inspect,  for example,
                                   User-Agent or Referer . This setting  isn't
                                   case sensitive.

                                   Example  JSON:  "SingleHeader":  {  "Name":
                                   "haystack" }

                                   Name -> (string)
                                      The name of the query header to inspect.

                               SingleQueryArgument -> (structure)
                                   Inspect  a  single  query argument. Provide
                                   the name of the query argument to  inspect,
                                   such  as UserName or SalesRegion . The name
                                   can be up to 30 characters long  and  isn't
                                   case sensitive.

                                   This  is  used  only  to  indicate  the web
                                   request component for WAF  to  inspect,  in
                                   the  FieldToMatch specification.

                                   Example   JSON:   "SingleQueryArgument":  {
                                   "Name": "myArgument" }

                                   Name -> (string)
                                      The  name  of  the  query  argument   to
                                      inspect.

                               AllQueryArguments -> (structure)
                                   Inspect all query arguments.

                               UriPath -> (structure)
                                   Inspect  the  request URI path. This is the
                                   part of a web  request  that  identifies  a
                                   resource, for example, /images/daily-ad.jpg
                                   .

                               QueryString -> (structure)
                                   Inspect the query string. This is the  part
                                   of  a URL that appears after a ? character,
                                   if any.

                               Body -> (structure)
                                   Inspect the request body as plain text. The
                                   request   body   immediately   follows  the
                                   request headers. This  is  the  part  of  a
                                   request  that  contains any additional data
                                   that you want to send to your web server as
                                   the  HTTP request body, such as data from a
                                   form.

                                   Note that only the first 8 KB (8192  bytes)
                                   of  the  request  body are forwarded to WAF
                                   for inspection by the underlying host  ser-
                                   vice.  If  you  don't  need to inspect more
                                   than 8 KB, you can guarantee that you don't
                                   allow  additional  bytes  in by combining a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement , with  a
                                   SizeConstraintStatement  that enforces an 8
                                   KB size limit on the body of  the  request.
                                   WAF  doesn't  support inspecting the entire
                                   contents  of  web  requests  whose   bodies
                                   exceed the 8 KB limit.

                               Method -> (structure)
                                   Inspect  the  HTTP method. The method indi-
                                   cates  the  type  of  operation  that   the
                                   request is asking the origin to perform.

                               JsonBody -> (structure)
                                   Inspect  the  request  body  as  JSON.  The
                                   request  body   immediately   follows   the
                                   request  headers.  This  is  the  part of a
                                   request that contains any  additional  data
                                   that you want to send to your web server as
                                   the HTTP request body, such as data from  a
                                   form.

                                   Note  that only the first 8 KB (8192 bytes)
                                   of the request body are  forwarded  to  WAF
                                   for  inspection by the underlying host ser-
                                   vice. If you don't  need  to  inspect  more
                                   than 8 KB, you can guarantee that you don't
                                   allow additional bytes in  by  combining  a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement  , with a
                                   SizeConstraintStatement that enforces an  8
                                   KB  size  limit on the body of the request.
                                   WAF doesn't support inspecting  the  entire
                                   contents   of  web  requests  whose  bodies
                                   exceed the 8 KB limit.

                                   MatchPattern -> (structure)
                                      The patterns to look  for  in  the  JSON
                                      body.  WAF inspects the results of these
                                      pattern matches against the rule inspec-
                                      tion criteria.

                                      All -> (structure)
                                          Match  all of the elements. See also
                                          MatchScope in  JsonBody .

                                          You must specify either this setting
                                          or  the  IncludedPaths  setting, but
                                          not both.

                                      IncludedPaths -> (list)
                                          Match  only  the  specified  include
                                          paths. See also MatchScope in  Json-
                                          Body .

                                          Provide the include paths using JSON
                                          Pointer    syntax.    For   example,
                                          "IncludedPaths":    ["/dogs/0/name",
                                          "/dogs/1/name"]  .  For  information
                                          about this syntax, see the  Internet
                                          Engineering  Task Force (IETF) docu-
                                          mentation JavaScript Object Notation
                                          (JSON) Pointer .

                                          You must specify either this setting
                                          or the All setting, but not both.

                                          NOTE:
                                             Don't use this option to  include
                                             all  paths.  Instead, use the All
                                             setting.

                                          (string)

                                   MatchScope -> (string)
                                      The parts of the JSON to  match  against
                                      using  the MatchPattern . If you specify
                                      All , WAF matches against keys and  val-
                                      ues.

                                   InvalidFallbackBehavior -> (string)
                                      What  WAF  should do if it fails to com-
                                      pletely parse the JSON body. The options
                                      are the following:

                                      o EVALUATE_AS_STRING  - Inspect the body
                                        as plain text. WAF  applies  the  text
                                        transformations  and inspection crite-
                                        ria that  you  defined  for  the  JSON
                                        inspection to the body text string.

                                      o MATCH  -  Treat  the  web  request  as
                                        matching  the  rule   statement.   WAF
                                        applies   the   rule   action  to  the
                                        request.

                                      o NO_MATCH - Treat the  web  request  as
                                        not matching the rule statement.

                                      If  you  don't provide this setting, WAF
                                      parses and evaluates the content only up
                                      to  the  first  parsing  failure that it
                                      encounters.

                                      WAF does its best to  parse  the  entire
                                      JSON  body,  but might be forced to stop
                                      for reasons such as invalid  characters,
                                      duplicate keys, truncation, and any con-
                                      tent whose root node isn't an object  or
                                      an array.

                                      WAF  parses  the  JSON  in the following
                                      examples as two valid key, value pairs:

                                      o Missing                         comma:
                                        {"key1":"value1""key2":"value2"}

                                      o Missing                         colon:
                                        {"key1":"value1","key2""value2"}

                                      o Extra                          colons:
                                        {"key1"::"value1","key2""value2"}

                            TextTransformations -> (list)
                               Text  transformations  eliminate  some  of  the
                               unusual formatting that attackers  use  in  web
                               requests  in  an effort to bypass detection. If
                               you specify one or more  transformations  in  a
                               rule  statement,  WAF  performs all transforma-
                               tions on the content of the  request  component
                               identified  by FieldToMatch , starting from the
                               lowest priority setting, before inspecting  the
                               content for a match.

                               (structure)
                                   Text  transformations eliminate some of the
                                   unusual formatting that  attackers  use  in
                                   web  requests in an effort to bypass detec-
                                   tion.

                                   Priority -> (integer)
                                      Sets the relative processing  order  for
                                      multiple    transformations   that   are
                                      defined for a rule statement.  WAF  pro-
                                      cesses  all transformations, from lowest
                                      priority to highest,  before  inspecting
                                      the  transformed content. The priorities
                                      don't need to be consecutive,  but  they
                                      must all be different.

                                   Type -> (string)
                                      You  can specify the following transfor-
                                      mation types:
                                          BASE64_DECODE  -  Decode  a   Base64
                                          -encoded string.

                                          BASE64_DECODE_EXT  - Decode a Base64
                                          -encoded string, but use a forgiving
                                          implementation  that ignores charac-
                                          ters that aren't valid.

                                          CMD_LINE - Command-line  transforma-
                                          tions. These are helpful in reducing
                                          effectiveness   of   attackers   who
                                          inject   an  operating  system  com-
                                          mand-line command  and  use  unusual
                                          formatting  to  disguise some or all
                                          of the command.

                                      o Delete the following characters: \ " '
                                        ^

                                      o Delete  spaces  before  the  following
                                        characters: / (

                                      o Replace the following characters  with
                                        a space: , ;

                                      o Replace multiple spaces with one space

                                      o Convert  uppercase  letters  (A-Z)  to
                                        lowercase (a-z)
                                          COMPRESS_WHITE_SPACE - Replace these
                                          characters with  a  space  character
                                          (decimal 32):

                                      o \f , formfeed, decimal 12

                                      o \t , tab, decimal 9

                                      o \n , newline, decimal 10

                                      o \r , carriage return, decimal 13

                                      o \v , vertical tab, decimal 11

                                      o Non-breaking space, decimal 160
                                          COMPRESS_WHITE_SPACE  also  replaces
                                          multiple spaces with one space.

                                          CSS_DECODE - Decode characters  that
                                          were  encoded  using  CSS 2.x escape
                                          rules syndata.html#characters . This
                                          function uses up to two bytes in the
                                          decoding process, so it can help  to
                                          uncover  ASCII  characters that were
                                          encoded  using  CSS  encoding   that
                                          wouldnt  typically  be encoded. It's
                                          also useful in  countering  evasion,
                                          which  is  a  combination of a back-
                                          slash  and  non-hexadecimal  charac-
                                          ters.  For  example, ja\vascript for
                                          javascript.

                                          ESCAPE_SEQ_DECODE - Decode the  fol-
                                          lowing ANSI C escape sequences: \a ,
                                          \b , \f , \n , \r , \t , \v ,  \\  ,
                                          \?  ,  \' , \" , \xHH (hexadecimal),
                                          \0OOO (octal). Encodings that aren't
                                          valid remain in the output.

                                          HEX_DECODE  -  Decode  a  string  of
                                          hexadecimal   characters   into    a
                                          binary.

                                          HTML_ENTITY_DECODE     -     Replace
                                          HTML-encoded characters  with  unen-
                                          coded characters. HTML_ENTITY_DECODE
                                          performs these operations:

                                      o Replaces (ampersand)quot; with "

                                      o Replaces   (ampersand)nbsp;   with   a
                                        non-breaking space, decimal 160

                                      o Replaces  (ampersand)lt;  with a "less
                                        than" symbol

                                      o Replaces (ampersand)gt; with >

                                      o Replaces characters  that  are  repre-
                                        sented  in hexadecimal format, (amper-
                                        sand)#xhhhh; , with the  corresponding
                                        characters

                                      o Replaces  characters  that  are repre-
                                        sented  in  decimal  format,   (amper-
                                        sand)#nnnn;  ,  with the corresponding
                                        characters
                                          JS_DECODE - Decode JavaScript escape
                                          sequences.  If  a \  u  HHHH code is
                                          in the full-width ASCII  code  range
                                          of  FF01-FF5E , then the higher byte
                                          is used to  detect  and  adjust  the
                                          lower  byte.  If not, only the lower
                                          byte is used and the higher byte  is
                                          zeroed,  causing  a possible loss of
                                          information.

                                          LOWERCASE - Convert  uppercase  let-
                                          ters (A-Z) to lowercase (a-z).

                                          MD5 - Calculate an MD5 hash from the
                                          data in the input. The computed hash
                                          is in a raw binary form.

                                          NONE  -  Specify  NONE  if you don't
                                          want any text transformations.

                                          NORMALIZE_PATH  -  Remove   multiple
                                          slashes,  directory self-references,
                                          and directory  back-references  that
                                          are  not  at  the  beginning  of the
                                          input from an input string.

                                          NORMALIZE_PATH_WIN  -  This  is  the
                                          same  as  NORMALIZE_PATH , but first
                                          converts  backslash  characters   to
                                          forward slashes.

                                          REMOVE_NULLS - Remove all NULL bytes
                                          from the input.

                                          REPLACE_COMMENTS  -   Replace   each
                                          occurrence  of a C-style comment (/*
                                          ... */ ) with a single space. Multi-
                                          ple  consecutive occurrences are not
                                          compressed.  Unterminated   comments
                                          are   also  replaced  with  a  space
                                          (ASCII 0x20). However, a  standalone
                                          termination  of  a  comment (*/ ) is
                                          not acted upon.

                                          REPLACE_NULLS - Replace  NULL  bytes
                                          in  the  input with space characters
                                          (ASCII 0x20 ).

                                          SQL_HEX_DECODE  -  Decode  SQL   hex
                                          data.  Example  (0x414243  ) will be
                                          decoded to (ABC ).

                                          URL_DECODE -  Decode  a  URL-encoded
                                          value.

                                          URL_DECODE_UNI  -  Like URL_DECODE ,
                                          but with support for  Microsoft-spe-
                                          cific %u encoding. If the code is in
                                          the full-width ASCII code  range  of
                                          FF01-FF5E  , the higher byte is used
                                          to detect and adjust the lower byte.
                                          Otherwise,  only  the  lower byte is
                                          used and the higher byte is  zeroed.

                                          UTF8_TO_UNICODE  - Convert all UTF-8
                                          character sequences to Unicode. This
                                          helps input normalization, and mini-
                                          mizing      false-positives      and
                                          false-negatives for non-English lan-
                                          guages.

                            PositionalConstraint -> (string)
                               The area within the portion of  a  web  request
                               that  you want WAF to search for SearchString .
                               Valid values include the following:
                                   CONTAINS

                               The specified part  of  the  web  request  must
                               include  the  value  of  SearchString , but the
                               location doesn't matter.
                                   CONTAINS_WORD

                               The specified part  of  the  web  request  must
                               include the value of SearchString , and Search-
                               String must contain only  alphanumeric  charac-
                               ters  or  underscore  (A-Z, a-z, 0-9, or _). In
                               addition, SearchString must be  a  word,  which
                               means that both of the following are true:

                               o SearchString is at the beginning of the spec-
                                 ified part of the web request or is  preceded
                                 by  a  character  other  than an alphanumeric
                                 character or underscore (_). Examples include
                                 the value of a header and ;BadBot .

                               o SearchString  is  at the end of the specified
                                 part of the web request or is followed  by  a
                                 character  other than an alphanumeric charac-
                                 ter or underscore (_), for  example,  BadBot;
                                 and -BadBot; .
                                   EXACTLY

                               The  value  of  the  specified  part of the web
                               request must exactly match the value of Search-
                               String .
                                   STARTS_WITH

                               The  value  of  SearchString must appear at the
                               beginning of the  specified  part  of  the  web
                               request.
                                   ENDS_WITH

                               The  value  of  SearchString must appear at the
                               end of the specified part of the web request.

                        SqliMatchStatement -> (structure)
                            Attackers sometimes insert malicious SQL code into
                            web  requests  in  an  effort to extract data from
                            your database. To allow or block web requests that
                            appear  to  contain malicious SQL code, create one
                            or more SQL injection  match  conditions.  An  SQL
                            injection  match  condition identifies the part of
                            web requests, such as the URI or the query string,
                            that  you  want  WAF  to  inspect.  Later  in  the
                            process, when you create a web  ACL,  you  specify
                            whether  to allow or block requests that appear to
                            contain malicious SQL code.

                            FieldToMatch -> (structure)
                               The part of a web request that you want WAF  to
                               inspect.  For  more  information,  see   Field-
                               ToMatch .

                               SingleHeader -> (structure)
                                   Inspect a single header. Provide  the  name
                                   of  the  header  to  inspect,  for example,
                                   User-Agent or Referer . This setting  isn't
                                   case sensitive.

                                   Example  JSON:  "SingleHeader":  {  "Name":
                                   "haystack" }

                                   Name -> (string)
                                      The name of the query header to inspect.

                               SingleQueryArgument -> (structure)
                                   Inspect  a  single  query argument. Provide
                                   the name of the query argument to  inspect,
                                   such  as UserName or SalesRegion . The name
                                   can be up to 30 characters long  and  isn't
                                   case sensitive.

                                   This  is  used  only  to  indicate  the web
                                   request component for WAF  to  inspect,  in
                                   the  FieldToMatch specification.

                                   Example   JSON:   "SingleQueryArgument":  {
                                   "Name": "myArgument" }

                                   Name -> (string)
                                      The  name  of  the  query  argument   to
                                      inspect.

                               AllQueryArguments -> (structure)
                                   Inspect all query arguments.

                               UriPath -> (structure)
                                   Inspect  the  request URI path. This is the
                                   part of a web  request  that  identifies  a
                                   resource, for example, /images/daily-ad.jpg
                                   .

                               QueryString -> (structure)
                                   Inspect the query string. This is the  part
                                   of  a URL that appears after a ? character,
                                   if any.

                               Body -> (structure)
                                   Inspect the request body as plain text. The
                                   request   body   immediately   follows  the
                                   request headers. This  is  the  part  of  a
                                   request  that  contains any additional data
                                   that you want to send to your web server as
                                   the  HTTP request body, such as data from a
                                   form.

                                   Note that only the first 8 KB (8192  bytes)
                                   of  the  request  body are forwarded to WAF
                                   for inspection by the underlying host  ser-
                                   vice.  If  you  don't  need to inspect more
                                   than 8 KB, you can guarantee that you don't
                                   allow  additional  bytes  in by combining a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement , with  a
                                   SizeConstraintStatement  that enforces an 8
                                   KB size limit on the body of  the  request.
                                   WAF  doesn't  support inspecting the entire
                                   contents  of  web  requests  whose   bodies
                                   exceed the 8 KB limit.

                               Method -> (structure)
                                   Inspect  the  HTTP method. The method indi-
                                   cates  the  type  of  operation  that   the
                                   request is asking the origin to perform.

                               JsonBody -> (structure)
                                   Inspect  the  request  body  as  JSON.  The
                                   request  body   immediately   follows   the
                                   request  headers.  This  is  the  part of a
                                   request that contains any  additional  data
                                   that you want to send to your web server as
                                   the HTTP request body, such as data from  a
                                   form.

                                   Note  that only the first 8 KB (8192 bytes)
                                   of the request body are  forwarded  to  WAF
                                   for  inspection by the underlying host ser-
                                   vice. If you don't  need  to  inspect  more
                                   than 8 KB, you can guarantee that you don't
                                   allow additional bytes in  by  combining  a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement  , with a
                                   SizeConstraintStatement that enforces an  8
                                   KB  size  limit on the body of the request.
                                   WAF doesn't support inspecting  the  entire
                                   contents   of  web  requests  whose  bodies
                                   exceed the 8 KB limit.

                                   MatchPattern -> (structure)
                                      The patterns to look  for  in  the  JSON
                                      body.  WAF inspects the results of these
                                      pattern matches against the rule inspec-
                                      tion criteria.

                                      All -> (structure)
                                          Match  all of the elements. See also
                                          MatchScope in  JsonBody .

                                          You must specify either this setting
                                          or  the  IncludedPaths  setting, but
                                          not both.

                                      IncludedPaths -> (list)
                                          Match  only  the  specified  include
                                          paths. See also MatchScope in  Json-
                                          Body .

                                          Provide the include paths using JSON
                                          Pointer    syntax.    For   example,
                                          "IncludedPaths":    ["/dogs/0/name",
                                          "/dogs/1/name"]  .  For  information
                                          about this syntax, see the  Internet
                                          Engineering  Task Force (IETF) docu-
                                          mentation JavaScript Object Notation
                                          (JSON) Pointer .

                                          You must specify either this setting
                                          or the All setting, but not both.

                                          NOTE:
                                             Don't use this option to  include
                                             all  paths.  Instead, use the All
                                             setting.

                                          (string)

                                   MatchScope -> (string)
                                      The parts of the JSON to  match  against
                                      using  the MatchPattern . If you specify
                                      All , WAF matches against keys and  val-
                                      ues.

                                   InvalidFallbackBehavior -> (string)
                                      What  WAF  should do if it fails to com-
                                      pletely parse the JSON body. The options
                                      are the following:

                                      o EVALUATE_AS_STRING  - Inspect the body
                                        as plain text. WAF  applies  the  text
                                        transformations  and inspection crite-
                                        ria that  you  defined  for  the  JSON
                                        inspection to the body text string.

                                      o MATCH  -  Treat  the  web  request  as
                                        matching  the  rule   statement.   WAF
                                        applies   the   rule   action  to  the
                                        request.

                                      o NO_MATCH - Treat the  web  request  as
                                        not matching the rule statement.

                                      If  you  don't provide this setting, WAF
                                      parses and evaluates the content only up
                                      to  the  first  parsing  failure that it
                                      encounters.

                                      WAF does its best to  parse  the  entire
                                      JSON  body,  but might be forced to stop
                                      for reasons such as invalid  characters,
                                      duplicate keys, truncation, and any con-
                                      tent whose root node isn't an object  or
                                      an array.

                                      WAF  parses  the  JSON  in the following
                                      examples as two valid key, value pairs:

                                      o Missing                         comma:
                                        {"key1":"value1""key2":"value2"}

                                      o Missing                         colon:
                                        {"key1":"value1","key2""value2"}

                                      o Extra                          colons:
                                        {"key1"::"value1","key2""value2"}

                            TextTransformations -> (list)
                               Text  transformations  eliminate  some  of  the
                               unusual formatting that attackers  use  in  web
                               requests  in  an effort to bypass detection. If
                               you specify one or more  transformations  in  a
                               rule  statement,  WAF  performs all transforma-
                               tions on the content of the  request  component
                               identified  by FieldToMatch , starting from the
                               lowest priority setting, before inspecting  the
                               content for a match.

                               (structure)
                                   Text  transformations eliminate some of the
                                   unusual formatting that  attackers  use  in
                                   web  requests in an effort to bypass detec-
                                   tion.

                                   Priority -> (integer)
                                      Sets the relative processing  order  for
                                      multiple    transformations   that   are
                                      defined for a rule statement.  WAF  pro-
                                      cesses  all transformations, from lowest
                                      priority to highest,  before  inspecting
                                      the  transformed content. The priorities
                                      don't need to be consecutive,  but  they
                                      must all be different.

                                   Type -> (string)
                                      You  can specify the following transfor-
                                      mation types:
                                          BASE64_DECODE  -  Decode  a   Base64
                                          -encoded string.

                                          BASE64_DECODE_EXT  - Decode a Base64
                                          -encoded string, but use a forgiving
                                          implementation  that ignores charac-
                                          ters that aren't valid.

                                          CMD_LINE - Command-line  transforma-
                                          tions. These are helpful in reducing
                                          effectiveness   of   attackers   who
                                          inject   an  operating  system  com-
                                          mand-line command  and  use  unusual
                                          formatting  to  disguise some or all
                                          of the command.

                                      o Delete the following characters: \ " '
                                        ^

                                      o Delete  spaces  before  the  following
                                        characters: / (

                                      o Replace the following characters  with
                                        a space: , ;

                                      o Replace multiple spaces with one space

                                      o Convert  uppercase  letters  (A-Z)  to
                                        lowercase (a-z)
                                          COMPRESS_WHITE_SPACE - Replace these
                                          characters with  a  space  character
                                          (decimal 32):

                                      o \f , formfeed, decimal 12

                                      o \t , tab, decimal 9

                                      o \n , newline, decimal 10

                                      o \r , carriage return, decimal 13

                                      o \v , vertical tab, decimal 11

                                      o Non-breaking space, decimal 160
                                          COMPRESS_WHITE_SPACE  also  replaces
                                          multiple spaces with one space.

                                          CSS_DECODE - Decode characters  that
                                          were  encoded  using  CSS 2.x escape
                                          rules syndata.html#characters . This
                                          function uses up to two bytes in the
                                          decoding process, so it can help  to
                                          uncover  ASCII  characters that were
                                          encoded  using  CSS  encoding   that
                                          wouldnt  typically  be encoded. It's
                                          also useful in  countering  evasion,
                                          which  is  a  combination of a back-
                                          slash  and  non-hexadecimal  charac-
                                          ters.  For  example, ja\vascript for
                                          javascript.

                                          ESCAPE_SEQ_DECODE - Decode the  fol-
                                          lowing ANSI C escape sequences: \a ,
                                          \b , \f , \n , \r , \t , \v ,  \\  ,
                                          \?  ,  \' , \" , \xHH (hexadecimal),
                                          \0OOO (octal). Encodings that aren't
                                          valid remain in the output.

                                          HEX_DECODE  -  Decode  a  string  of
                                          hexadecimal   characters   into    a
                                          binary.

                                          HTML_ENTITY_DECODE     -     Replace
                                          HTML-encoded characters  with  unen-
                                          coded characters. HTML_ENTITY_DECODE
                                          performs these operations:

                                      o Replaces (ampersand)quot; with "

                                      o Replaces   (ampersand)nbsp;   with   a
                                        non-breaking space, decimal 160

                                      o Replaces  (ampersand)lt;  with a "less
                                        than" symbol

                                      o Replaces (ampersand)gt; with >

                                      o Replaces characters  that  are  repre-
                                        sented  in hexadecimal format, (amper-
                                        sand)#xhhhh; , with the  corresponding
                                        characters

                                      o Replaces  characters  that  are repre-
                                        sented  in  decimal  format,   (amper-
                                        sand)#nnnn;  ,  with the corresponding
                                        characters
                                          JS_DECODE - Decode JavaScript escape
                                          sequences.  If  a \  u  HHHH code is
                                          in the full-width ASCII  code  range
                                          of  FF01-FF5E , then the higher byte
                                          is used to  detect  and  adjust  the
                                          lower  byte.  If not, only the lower
                                          byte is used and the higher byte  is
                                          zeroed,  causing  a possible loss of
                                          information.

                                          LOWERCASE - Convert  uppercase  let-
                                          ters (A-Z) to lowercase (a-z).

                                          MD5 - Calculate an MD5 hash from the
                                          data in the input. The computed hash
                                          is in a raw binary form.

                                          NONE  -  Specify  NONE  if you don't
                                          want any text transformations.

                                          NORMALIZE_PATH  -  Remove   multiple
                                          slashes,  directory self-references,
                                          and directory  back-references  that
                                          are  not  at  the  beginning  of the
                                          input from an input string.

                                          NORMALIZE_PATH_WIN  -  This  is  the
                                          same  as  NORMALIZE_PATH , but first
                                          converts  backslash  characters   to
                                          forward slashes.

                                          REMOVE_NULLS - Remove all NULL bytes
                                          from the input.

                                          REPLACE_COMMENTS  -   Replace   each
                                          occurrence  of a C-style comment (/*
                                          ... */ ) with a single space. Multi-
                                          ple  consecutive occurrences are not
                                          compressed.  Unterminated   comments
                                          are   also  replaced  with  a  space
                                          (ASCII 0x20). However, a  standalone
                                          termination  of  a  comment (*/ ) is
                                          not acted upon.

                                          REPLACE_NULLS - Replace  NULL  bytes
                                          in  the  input with space characters
                                          (ASCII 0x20 ).

                                          SQL_HEX_DECODE  -  Decode  SQL   hex
                                          data.  Example  (0x414243  ) will be
                                          decoded to (ABC ).

                                          URL_DECODE -  Decode  a  URL-encoded
                                          value.

                                          URL_DECODE_UNI  -  Like URL_DECODE ,
                                          but with support for  Microsoft-spe-
                                          cific %u encoding. If the code is in
                                          the full-width ASCII code  range  of
                                          FF01-FF5E  , the higher byte is used
                                          to detect and adjust the lower byte.
                                          Otherwise,  only  the  lower byte is
                                          used and the higher byte is  zeroed.

                                          UTF8_TO_UNICODE  - Convert all UTF-8
                                          character sequences to Unicode. This
                                          helps input normalization, and mini-
                                          mizing      false-positives      and
                                          false-negatives for non-English lan-
                                          guages.

                        XssMatchStatement -> (structure)
                            A rule statement that defines a cross-site script-
                            ing  (XSS)  match  search  for WAF to apply to web
                            requests. XSS attacks are those where the attacker
                            uses  vulnerabilities  in  a  benign  website as a
                            vehicle to inject  malicious  client-site  scripts
                            into  other legitimate web browsers. The XSS match
                            statement provides the location in  requests  that
                            you want WAF to search and text transformations to
                            use on the search area  before  WAF  searches  for
                            character  sequences  that  are likely to be mali-
                            cious strings.

                            FieldToMatch -> (structure)
                               The part of a web request that you want WAF  to
                               inspect.  For  more  information,  see   Field-
                               ToMatch .

                               SingleHeader -> (structure)
                                   Inspect a single header. Provide  the  name
                                   of  the  header  to  inspect,  for example,
                                   User-Agent or Referer . This setting  isn't
                                   case sensitive.

                                   Example  JSON:  "SingleHeader":  {  "Name":
                                   "haystack" }

                                   Name -> (string)
                                      The name of the query header to inspect.

                               SingleQueryArgument -> (structure)
                                   Inspect  a  single  query argument. Provide
                                   the name of the query argument to  inspect,
                                   such  as UserName or SalesRegion . The name
                                   can be up to 30 characters long  and  isn't
                                   case sensitive.

                                   This  is  used  only  to  indicate  the web
                                   request component for WAF  to  inspect,  in
                                   the  FieldToMatch specification.

                                   Example   JSON:   "SingleQueryArgument":  {
                                   "Name": "myArgument" }

                                   Name -> (string)
                                      The  name  of  the  query  argument   to
                                      inspect.

                               AllQueryArguments -> (structure)
                                   Inspect all query arguments.

                               UriPath -> (structure)
                                   Inspect  the  request URI path. This is the
                                   part of a web  request  that  identifies  a
                                   resource, for example, /images/daily-ad.jpg
                                   .

                               QueryString -> (structure)
                                   Inspect the query string. This is the  part
                                   of  a URL that appears after a ? character,
                                   if any.

                               Body -> (structure)
                                   Inspect the request body as plain text. The
                                   request   body   immediately   follows  the
                                   request headers. This  is  the  part  of  a
                                   request  that  contains any additional data
                                   that you want to send to your web server as
                                   the  HTTP request body, such as data from a
                                   form.

                                   Note that only the first 8 KB (8192  bytes)
                                   of  the  request  body are forwarded to WAF
                                   for inspection by the underlying host  ser-
                                   vice.  If  you  don't  need to inspect more
                                   than 8 KB, you can guarantee that you don't
                                   allow  additional  bytes  in by combining a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement , with  a
                                   SizeConstraintStatement  that enforces an 8
                                   KB size limit on the body of  the  request.
                                   WAF  doesn't  support inspecting the entire
                                   contents  of  web  requests  whose   bodies
                                   exceed the 8 KB limit.

                               Method -> (structure)
                                   Inspect  the  HTTP method. The method indi-
                                   cates  the  type  of  operation  that   the
                                   request is asking the origin to perform.

                               JsonBody -> (structure)
                                   Inspect  the  request  body  as  JSON.  The
                                   request  body   immediately   follows   the
                                   request  headers.  This  is  the  part of a
                                   request that contains any  additional  data
                                   that you want to send to your web server as
                                   the HTTP request body, such as data from  a
                                   form.

                                   Note  that only the first 8 KB (8192 bytes)
                                   of the request body are  forwarded  to  WAF
                                   for  inspection by the underlying host ser-
                                   vice. If you don't  need  to  inspect  more
                                   than 8 KB, you can guarantee that you don't
                                   allow additional bytes in  by  combining  a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement  , with a
                                   SizeConstraintStatement that enforces an  8
                                   KB  size  limit on the body of the request.
                                   WAF doesn't support inspecting  the  entire
                                   contents   of  web  requests  whose  bodies
                                   exceed the 8 KB limit.

                                   MatchPattern -> (structure)
                                      The patterns to look  for  in  the  JSON
                                      body.  WAF inspects the results of these
                                      pattern matches against the rule inspec-
                                      tion criteria.

                                      All -> (structure)
                                          Match  all of the elements. See also
                                          MatchScope in  JsonBody .

                                          You must specify either this setting
                                          or  the  IncludedPaths  setting, but
                                          not both.

                                      IncludedPaths -> (list)
                                          Match  only  the  specified  include
                                          paths. See also MatchScope in  Json-
                                          Body .

                                          Provide the include paths using JSON
                                          Pointer    syntax.    For   example,
                                          "IncludedPaths":    ["/dogs/0/name",
                                          "/dogs/1/name"]  .  For  information
                                          about this syntax, see the  Internet
                                          Engineering  Task Force (IETF) docu-
                                          mentation JavaScript Object Notation
                                          (JSON) Pointer .

                                          You must specify either this setting
                                          or the All setting, but not both.

                                          NOTE:
                                             Don't use this option to  include
                                             all  paths.  Instead, use the All
                                             setting.

                                          (string)

                                   MatchScope -> (string)
                                      The parts of the JSON to  match  against
                                      using  the MatchPattern . If you specify
                                      All , WAF matches against keys and  val-
                                      ues.

                                   InvalidFallbackBehavior -> (string)
                                      What  WAF  should do if it fails to com-
                                      pletely parse the JSON body. The options
                                      are the following:

                                      o EVALUATE_AS_STRING  - Inspect the body
                                        as plain text. WAF  applies  the  text
                                        transformations  and inspection crite-
                                        ria that  you  defined  for  the  JSON
                                        inspection to the body text string.

                                      o MATCH  -  Treat  the  web  request  as
                                        matching  the  rule   statement.   WAF
                                        applies   the   rule   action  to  the
                                        request.

                                      o NO_MATCH - Treat the  web  request  as
                                        not matching the rule statement.

                                      If  you  don't provide this setting, WAF
                                      parses and evaluates the content only up
                                      to  the  first  parsing  failure that it
                                      encounters.

                                      WAF does its best to  parse  the  entire
                                      JSON  body,  but might be forced to stop
                                      for reasons such as invalid  characters,
                                      duplicate keys, truncation, and any con-
                                      tent whose root node isn't an object  or
                                      an array.

                                      WAF  parses  the  JSON  in the following
                                      examples as two valid key, value pairs:

                                      o Missing                         comma:
                                        {"key1":"value1""key2":"value2"}

                                      o Missing                         colon:
                                        {"key1":"value1","key2""value2"}

                                      o Extra                          colons:
                                        {"key1"::"value1","key2""value2"}

                            TextTransformations -> (list)
                               Text  transformations  eliminate  some  of  the
                               unusual formatting that attackers  use  in  web
                               requests  in  an effort to bypass detection. If
                               you specify one or more  transformations  in  a
                               rule  statement,  WAF  performs all transforma-
                               tions on the content of the  request  component
                               identified  by FieldToMatch , starting from the
                               lowest priority setting, before inspecting  the
                               content for a match.

                               (structure)
                                   Text  transformations eliminate some of the
                                   unusual formatting that  attackers  use  in
                                   web  requests in an effort to bypass detec-
                                   tion.

                                   Priority -> (integer)
                                      Sets the relative processing  order  for
                                      multiple    transformations   that   are
                                      defined for a rule statement.  WAF  pro-
                                      cesses  all transformations, from lowest
                                      priority to highest,  before  inspecting
                                      the  transformed content. The priorities
                                      don't need to be consecutive,  but  they
                                      must all be different.

                                   Type -> (string)
                                      You  can specify the following transfor-
                                      mation types:
                                          BASE64_DECODE  -  Decode  a   Base64
                                          -encoded string.

                                          BASE64_DECODE_EXT  - Decode a Base64
                                          -encoded string, but use a forgiving
                                          implementation  that ignores charac-
                                          ters that aren't valid.

                                          CMD_LINE - Command-line  transforma-
                                          tions. These are helpful in reducing
                                          effectiveness   of   attackers   who
                                          inject   an  operating  system  com-
                                          mand-line command  and  use  unusual
                                          formatting  to  disguise some or all
                                          of the command.

                                      o Delete the following characters: \ " '
                                        ^

                                      o Delete  spaces  before  the  following
                                        characters: / (

                                      o Replace the following characters  with
                                        a space: , ;

                                      o Replace multiple spaces with one space

                                      o Convert  uppercase  letters  (A-Z)  to
                                        lowercase (a-z)
                                          COMPRESS_WHITE_SPACE - Replace these
                                          characters with  a  space  character
                                          (decimal 32):

                                      o \f , formfeed, decimal 12

                                      o \t , tab, decimal 9

                                      o \n , newline, decimal 10

                                      o \r , carriage return, decimal 13

                                      o \v , vertical tab, decimal 11

                                      o Non-breaking space, decimal 160
                                          COMPRESS_WHITE_SPACE  also  replaces
                                          multiple spaces with one space.

                                          CSS_DECODE - Decode characters  that
                                          were  encoded  using  CSS 2.x escape
                                          rules syndata.html#characters . This
                                          function uses up to two bytes in the
                                          decoding process, so it can help  to
                                          uncover  ASCII  characters that were
                                          encoded  using  CSS  encoding   that
                                          wouldnt  typically  be encoded. It's
                                          also useful in  countering  evasion,
                                          which  is  a  combination of a back-
                                          slash  and  non-hexadecimal  charac-
                                          ters.  For  example, ja\vascript for
                                          javascript.

                                          ESCAPE_SEQ_DECODE - Decode the  fol-
                                          lowing ANSI C escape sequences: \a ,
                                          \b , \f , \n , \r , \t , \v ,  \\  ,
                                          \?  ,  \' , \" , \xHH (hexadecimal),
                                          \0OOO (octal). Encodings that aren't
                                          valid remain in the output.

                                          HEX_DECODE  -  Decode  a  string  of
                                          hexadecimal   characters   into    a
                                          binary.

                                          HTML_ENTITY_DECODE     -     Replace
                                          HTML-encoded characters  with  unen-
                                          coded characters. HTML_ENTITY_DECODE
                                          performs these operations:

                                      o Replaces (ampersand)quot; with "

                                      o Replaces   (ampersand)nbsp;   with   a
                                        non-breaking space, decimal 160

                                      o Replaces  (ampersand)lt;  with a "less
                                        than" symbol

                                      o Replaces (ampersand)gt; with >

                                      o Replaces characters  that  are  repre-
                                        sented  in hexadecimal format, (amper-
                                        sand)#xhhhh; , with the  corresponding
                                        characters

                                      o Replaces  characters  that  are repre-
                                        sented  in  decimal  format,   (amper-
                                        sand)#nnnn;  ,  with the corresponding
                                        characters
                                          JS_DECODE - Decode JavaScript escape
                                          sequences.  If  a \  u  HHHH code is
                                          in the full-width ASCII  code  range
                                          of  FF01-FF5E , then the higher byte
                                          is used to  detect  and  adjust  the
                                          lower  byte.  If not, only the lower
                                          byte is used and the higher byte  is
                                          zeroed,  causing  a possible loss of
                                          information.

                                          LOWERCASE - Convert  uppercase  let-
                                          ters (A-Z) to lowercase (a-z).

                                          MD5 - Calculate an MD5 hash from the
                                          data in the input. The computed hash
                                          is in a raw binary form.

                                          NONE  -  Specify  NONE  if you don't
                                          want any text transformations.

                                          NORMALIZE_PATH  -  Remove   multiple
                                          slashes,  directory self-references,
                                          and directory  back-references  that
                                          are  not  at  the  beginning  of the
                                          input from an input string.

                                          NORMALIZE_PATH_WIN  -  This  is  the
                                          same  as  NORMALIZE_PATH , but first
                                          converts  backslash  characters   to
                                          forward slashes.

                                          REMOVE_NULLS - Remove all NULL bytes
                                          from the input.

                                          REPLACE_COMMENTS  -   Replace   each
                                          occurrence  of a C-style comment (/*
                                          ... */ ) with a single space. Multi-
                                          ple  consecutive occurrences are not
                                          compressed.  Unterminated   comments
                                          are   also  replaced  with  a  space
                                          (ASCII 0x20). However, a  standalone
                                          termination  of  a  comment (*/ ) is
                                          not acted upon.

                                          REPLACE_NULLS - Replace  NULL  bytes
                                          in  the  input with space characters
                                          (ASCII 0x20 ).

                                          SQL_HEX_DECODE  -  Decode  SQL   hex
                                          data.  Example  (0x414243  ) will be
                                          decoded to (ABC ).

                                          URL_DECODE -  Decode  a  URL-encoded
                                          value.

                                          URL_DECODE_UNI  -  Like URL_DECODE ,
                                          but with support for  Microsoft-spe-
                                          cific %u encoding. If the code is in
                                          the full-width ASCII code  range  of
                                          FF01-FF5E  , the higher byte is used
                                          to detect and adjust the lower byte.
                                          Otherwise,  only  the  lower byte is
                                          used and the higher byte is  zeroed.

                                          UTF8_TO_UNICODE  - Convert all UTF-8
                                          character sequences to Unicode. This
                                          helps input normalization, and mini-
                                          mizing      false-positives      and
                                          false-negatives for non-English lan-
                                          guages.

                        SizeConstraintStatement -> (structure)
                            A rule statement that compares a number  of  bytes
                            against  the  size of a request component, using a
                            comparison operator, such as greater than  (>)  or
                            less  than  (<).  For  example, you can use a size
                            constraint statement to  look  for  query  strings
                            that are longer than 100 bytes.

                            If  you configure WAF to inspect the request body,
                            WAF inspects only the first 8192 bytes (8 KB).  If
                            the  request  body  for  your  web  requests never
                            exceeds 8192 bytes, you can  create  a  size  con-
                            straint  condition  and block requests that have a
                            request body greater than 8192 bytes.

                            If you choose URI for the value  of  Part  of  the
                            request  to  filter  on,  the slash (/) in the URI
                            counts as one  character.  For  example,  the  URI
                            /logo.jpg is nine characters long.

                            FieldToMatch -> (structure)
                               The  part of a web request that you want WAF to
                               inspect.  For  more  information,  see   Field-
                               ToMatch .

                               SingleHeader -> (structure)
                                   Inspect  a  single header. Provide the name
                                   of the  header  to  inspect,  for  example,
                                   User-Agent  or Referer . This setting isn't
                                   case sensitive.

                                   Example  JSON:  "SingleHeader":  {  "Name":
                                   "haystack" }

                                   Name -> (string)
                                      The name of the query header to inspect.

                               SingleQueryArgument -> (structure)
                                   Inspect a single  query  argument.  Provide
                                   the  name of the query argument to inspect,
                                   such as UserName or SalesRegion . The  name
                                   can  be  up to 30 characters long and isn't
                                   case sensitive.

                                   This is  used  only  to  indicate  the  web
                                   request  component  for  WAF to inspect, in
                                   the  FieldToMatch specification.

                                   Example  JSON:   "SingleQueryArgument":   {
                                   "Name": "myArgument" }

                                   Name -> (string)
                                      The   name  of  the  query  argument  to
                                      inspect.

                               AllQueryArguments -> (structure)
                                   Inspect all query arguments.

                               UriPath -> (structure)
                                   Inspect the request URI path. This  is  the
                                   part  of  a  web  request that identifies a
                                   resource, for example, /images/daily-ad.jpg
                                   .

                               QueryString -> (structure)
                                   Inspect  the query string. This is the part
                                   of a URL that appears after a ?  character,
                                   if any.

                               Body -> (structure)
                                   Inspect the request body as plain text. The
                                   request  body   immediately   follows   the
                                   request  headers.  This  is  the  part of a
                                   request that contains any  additional  data
                                   that you want to send to your web server as
                                   the HTTP request body, such as data from  a
                                   form.

                                   Note  that only the first 8 KB (8192 bytes)
                                   of the request body are  forwarded  to  WAF
                                   for  inspection by the underlying host ser-
                                   vice. If you don't  need  to  inspect  more
                                   than 8 KB, you can guarantee that you don't
                                   allow additional bytes in  by  combining  a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement  , with a
                                   SizeConstraintStatement that enforces an  8
                                   KB  size  limit on the body of the request.
                                   WAF doesn't support inspecting  the  entire
                                   contents   of  web  requests  whose  bodies
                                   exceed the 8 KB limit.

                               Method -> (structure)
                                   Inspect the HTTP method. The  method  indi-
                                   cates   the  type  of  operation  that  the
                                   request is asking the origin to perform.

                               JsonBody -> (structure)
                                   Inspect  the  request  body  as  JSON.  The
                                   request   body   immediately   follows  the
                                   request headers. This  is  the  part  of  a
                                   request  that  contains any additional data
                                   that you want to send to your web server as
                                   the  HTTP request body, such as data from a
                                   form.

                                   Note that only the first 8 KB (8192  bytes)
                                   of  the  request  body are forwarded to WAF
                                   for inspection by the underlying host  ser-
                                   vice.  If  you  don't  need to inspect more
                                   than 8 KB, you can guarantee that you don't
                                   allow  additional  bytes  in by combining a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement , with  a
                                   SizeConstraintStatement  that enforces an 8
                                   KB size limit on the body of  the  request.
                                   WAF  doesn't  support inspecting the entire
                                   contents  of  web  requests  whose   bodies
                                   exceed the 8 KB limit.

                                   MatchPattern -> (structure)
                                      The  patterns  to  look  for in the JSON
                                      body. WAF inspects the results of  these
                                      pattern matches against the rule inspec-
                                      tion criteria.

                                      All -> (structure)
                                          Match all of the elements. See  also
                                          MatchScope in  JsonBody .

                                          You must specify either this setting
                                          or the  IncludedPaths  setting,  but
                                          not both.

                                      IncludedPaths -> (list)
                                          Match  only  the  specified  include
                                          paths. See also MatchScope in  Json-
                                          Body .

                                          Provide the include paths using JSON
                                          Pointer   syntax.    For    example,
                                          "IncludedPaths":    ["/dogs/0/name",
                                          "/dogs/1/name"]  .  For  information
                                          about  this syntax, see the Internet
                                          Engineering Task Force (IETF)  docu-
                                          mentation JavaScript Object Notation
                                          (JSON) Pointer .

                                          You must specify either this setting
                                          or the All setting, but not both.

                                          NOTE:
                                             Don't  use this option to include
                                             all paths. Instead, use  the  All
                                             setting.

                                          (string)

                                   MatchScope -> (string)
                                      The  parts  of the JSON to match against
                                      using the MatchPattern . If you  specify
                                      All  , WAF matches against keys and val-
                                      ues.

                                   InvalidFallbackBehavior -> (string)
                                      What WAF should do if it fails  to  com-
                                      pletely parse the JSON body. The options
                                      are the following:

                                      o EVALUATE_AS_STRING - Inspect the  body
                                        as  plain  text.  WAF applies the text
                                        transformations and inspection  crite-
                                        ria  that  you  defined  for  the JSON
                                        inspection to the body text string.

                                      o MATCH  -  Treat  the  web  request  as
                                        matching   the   rule  statement.  WAF
                                        applies  the  rule   action   to   the
                                        request.

                                      o NO_MATCH  -  Treat  the web request as
                                        not matching the rule statement.

                                      If you don't provide this  setting,  WAF
                                      parses and evaluates the content only up
                                      to the first  parsing  failure  that  it
                                      encounters.

                                      WAF  does  its  best to parse the entire
                                      JSON body, but might be forced  to  stop
                                      for  reasons such as invalid characters,
                                      duplicate keys, truncation, and any con-
                                      tent  whose root node isn't an object or
                                      an array.

                                      WAF parses the  JSON  in  the  following
                                      examples as two valid key, value pairs:

                                      o Missing                         comma:
                                        {"key1":"value1""key2":"value2"}

                                      o Missing                         colon:
                                        {"key1":"value1","key2""value2"}

                                      o Extra                          colons:
                                        {"key1"::"value1","key2""value2"}

                            ComparisonOperator -> (string)
                               The operator to use to compare the request part
                               to the size setting.

                            Size -> (long)
                               The  size,  in  byte, to compare to the request
                               part, after any transformations.

                            TextTransformations -> (list)
                               Text  transformations  eliminate  some  of  the
                               unusual  formatting  that  attackers use in web
                               requests in an effort to bypass  detection.  If
                               you  specify  one  or more transformations in a
                               rule statement, WAF  performs  all  transforma-
                               tions  on  the content of the request component
                               identified by FieldToMatch , starting from  the
                               lowest  priority setting, before inspecting the
                               content for a match.

                               (structure)
                                   Text transformations eliminate some of  the
                                   unusual  formatting  that  attackers use in
                                   web requests in an effort to bypass  detec-
                                   tion.

                                   Priority -> (integer)
                                      Sets  the  relative processing order for
                                      multiple   transformations   that    are
                                      defined  for  a rule statement. WAF pro-
                                      cesses all transformations, from  lowest
                                      priority  to  highest, before inspecting
                                      the transformed content. The  priorities
                                      don't  need  to be consecutive, but they
                                      must all be different.

                                   Type -> (string)
                                      You can specify the following  transfor-
                                      mation types:
                                          BASE64_DECODE   -  Decode  a  Base64
                                          -encoded string.

                                          BASE64_DECODE_EXT - Decode a  Base64
                                          -encoded string, but use a forgiving
                                          implementation that ignores  charac-
                                          ters that aren't valid.

                                          CMD_LINE  - Command-line transforma-
                                          tions. These are helpful in reducing
                                          effectiveness   of   attackers   who
                                          inject  an  operating  system   com-
                                          mand-line  command  and  use unusual
                                          formatting to disguise some  or  all
                                          of the command.

                                      o Delete the following characters: \ " '
                                        ^

                                      o Delete  spaces  before  the  following
                                        characters: / (

                                      o Replace  the following characters with
                                        a space: , ;

                                      o Replace multiple spaces with one space

                                      o Convert  uppercase  letters  (A-Z)  to
                                        lowercase (a-z)
                                          COMPRESS_WHITE_SPACE - Replace these
                                          characters  with  a  space character
                                          (decimal 32):

                                      o \f , formfeed, decimal 12

                                      o \t , tab, decimal 9

                                      o \n , newline, decimal 10

                                      o \r , carriage return, decimal 13

                                      o \v , vertical tab, decimal 11

                                      o Non-breaking space, decimal 160
                                          COMPRESS_WHITE_SPACE  also  replaces
                                          multiple spaces with one space.

                                          CSS_DECODE  - Decode characters that
                                          were encoded using  CSS  2.x  escape
                                          rules syndata.html#characters . This
                                          function uses up to two bytes in the
                                          decoding  process, so it can help to
                                          uncover ASCII characters  that  were
                                          encoded   using  CSS  encoding  that
                                          wouldnt typically be  encoded.  It's
                                          also  useful  in countering evasion,
                                          which is a combination  of  a  back-
                                          slash  and  non-hexadecimal  charac-
                                          ters. For example,  ja\vascript  for
                                          javascript.

                                          ESCAPE_SEQ_DECODE  - Decode the fol-
                                          lowing ANSI C escape sequences: \a ,
                                          \b  ,  \f , \n , \r , \t , \v , \\ ,
                                          \? , \' , \" ,  \xHH  (hexadecimal),
                                          \0OOO (octal). Encodings that aren't
                                          valid remain in the output.

                                          HEX_DECODE  -  Decode  a  string  of
                                          hexadecimal    characters   into   a
                                          binary.

                                          HTML_ENTITY_DECODE     -     Replace
                                          HTML-encoded  characters  with unen-
                                          coded characters. HTML_ENTITY_DECODE
                                          performs these operations:

                                      o Replaces (ampersand)quot; with "

                                      o Replaces   (ampersand)nbsp;   with   a
                                        non-breaking space, decimal 160

                                      o Replaces (ampersand)lt; with  a  "less
                                        than" symbol

                                      o Replaces (ampersand)gt; with >

                                      o Replaces  characters  that  are repre-
                                        sented in hexadecimal format,  (amper-
                                        sand)#xhhhh;  , with the corresponding
                                        characters

                                      o Replaces characters  that  are  repre-
                                        sented   in  decimal  format,  (amper-
                                        sand)#nnnn; , with  the  corresponding
                                        characters
                                          JS_DECODE - Decode JavaScript escape
                                          sequences. If a \  u  HHHH  code  is
                                          in  the  full-width ASCII code range
                                          of FF01-FF5E , then the higher  byte
                                          is  used  to  detect  and adjust the
                                          lower byte. If not, only  the  lower
                                          byte  is used and the higher byte is
                                          zeroed, causing a possible  loss  of
                                          information.

                                          LOWERCASE  -  Convert uppercase let-
                                          ters (A-Z) to lowercase (a-z).

                                          MD5 - Calculate an MD5 hash from the
                                          data in the input. The computed hash
                                          is in a raw binary form.

                                          NONE - Specify  NONE  if  you  don't
                                          want any text transformations.

                                          NORMALIZE_PATH   -  Remove  multiple
                                          slashes, directory  self-references,
                                          and  directory  back-references that
                                          are not  at  the  beginning  of  the
                                          input from an input string.

                                          NORMALIZE_PATH_WIN  -  This  is  the
                                          same as NORMALIZE_PATH ,  but  first
                                          converts   backslash  characters  to
                                          forward slashes.

                                          REMOVE_NULLS - Remove all NULL bytes
                                          from the input.

                                          REPLACE_COMMENTS   -   Replace  each
                                          occurrence of a C-style comment  (/*
                                          ... */ ) with a single space. Multi-
                                          ple consecutive occurrences are  not
                                          compressed.   Unterminated  comments
                                          are  also  replaced  with  a   space
                                          (ASCII  0x20). However, a standalone
                                          termination of a comment  (*/  )  is
                                          not acted upon.

                                          REPLACE_NULLS  -  Replace NULL bytes
                                          in the input with  space  characters
                                          (ASCII 0x20 ).

                                          SQL_HEX_DECODE   -  Decode  SQL  hex
                                          data. Example (0x414243  )  will  be
                                          decoded to (ABC ).

                                          URL_DECODE  -  Decode  a URL-encoded
                                          value.

                                          URL_DECODE_UNI - Like  URL_DECODE  ,
                                          but  with support for Microsoft-spe-
                                          cific %u encoding. If the code is in
                                          the  full-width  ASCII code range of
                                          FF01-FF5E , the higher byte is  used
                                          to detect and adjust the lower byte.
                                          Otherwise, only the  lower  byte  is
                                          used  and the higher byte is zeroed.

                                          UTF8_TO_UNICODE - Convert all  UTF-8
                                          character sequences to Unicode. This
                                          helps input normalization, and mini-
                                          mizing      false-positives      and
                                          false-negatives for non-English lan-
                                          guages.

                        GeoMatchStatement -> (structure)
                            A  rule  statement  used  to identify web requests
                            based on country of origin.

                            CountryCodes -> (list)
                               An array of two-character  country  codes,  for
                               example,  [  "US",  "CN"  ]  , from the alpha-2
                               country ISO codes of the ISO 3166 international
                               standard.

                               (string)

                            ForwardedIPConfig -> (structure)
                               The  configuration  for inspecting IP addresses
                               in an HTTP header that you specify, instead  of
                               using the IP address that's reported by the web
                               request origin. Commonly, this  is  the  X-For-
                               warded-For  (XFF)  header,  but you can specify
                               any header name.

                               NOTE:
                                   If the specified header  isn't  present  in
                                   the  request, WAF doesn't apply the rule to
                                   the web request at all.

                               HeaderName -> (string)
                                   The name of the HTTP header to use for  the
                                   IP  address. For example, to use the X-For-
                                   warded-For (XFF) header, set this to X-For-
                                   warded-For .

                                   NOTE:
                                      If the specified header isn't present in
                                      the request, WAF doesn't apply the  rule
                                      to the web request at all.

                               FallbackBehavior -> (string)
                                   The  match  status  to  assign  to  the web
                                   request if the request doesn't have a valid
                                   IP address in the specified position.

                                   NOTE:
                                      If the specified header isn't present in
                                      the request, WAF doesn't apply the  rule
                                      to the web request at all.

                                   You  can  specify  the  following  fallback
                                   behaviors:

                                   o MATCH - Treat the web request as matching
                                     the  rule statement. WAF applies the rule
                                     action to the request.

                                   o NO_MATCH - Treat the web request  as  not
                                     matching the rule statement.

                        RuleGroupReferenceStatement -> (structure)
                            A  rule  statement  used to run the rules that are
                            defined in a  RuleGroup . To use  this,  create  a
                            rule  group  with your rules, then provide the ARN
                            of the rule group in this statement.

                            You cannot nest  a  RuleGroupReferenceStatement  ,
                            for  example  for  use  inside  a  NotStatement or
                            OrStatement . You can only use a rule group refer-
                            ence  statement at the top level inside a web ACL.

                            ARN -> (string)
                               The Amazon Resource Name (ARN) of the entity.

                            ExcludedRules -> (list)
                               The rules in the referenced  rule  group  whose
                               actions  are  set to Count . When you exclude a
                               rule, WAF evaluates it exactly as it  would  if
                               the  rule action setting were Count . This is a
                               useful option for testing the rules in  a  rule
                               group  without  modifying  how they handle your
                               web traffic.

                               (structure)
                                   Specifies a single rule  in  a  rule  group
                                   whose  action you want to override to Count
                                   . When you exclude a rule, WAF evaluates it
                                   exactly as it would if the rule action set-
                                   ting were Count . This is a  useful  option
                                   for testing the rules in a rule group with-
                                   out modifying  how  they  handle  your  web
                                   traffic.

                                   Name -> (string)
                                      The  name  of  the rule whose action you
                                      want to override to Count .

                        IPSetReferenceStatement -> (structure)
                            A rule statement used to detect web requests  com-
                            ing   from  particular  IP  addresses  or  address
                            ranges. To use this, create an  IPSet that  speci-
                            fies  the  addresses  you want to detect, then use
                            the ARN of that set in this statement.  To  create
                            an IP set, see  CreateIPSet .

                            Each  IP  set rule statement references an IP set.
                            You create and maintain  the  set  independent  of
                            your  rules. This allows you to use the single set
                            in multiple rules. When you update the  referenced
                            set, WAF automatically updates all rules that ref-
                            erence it.

                            ARN -> (string)
                               The Amazon Resource Name (ARN)  of  the   IPSet
                               that this statement references.

                            IPSetForwardedIPConfig -> (structure)
                               The  configuration  for inspecting IP addresses
                               in an HTTP header that you specify, instead  of
                               using the IP address that's reported by the web
                               request origin. Commonly, this  is  the  X-For-
                               warded-For  (XFF)  header,  but you can specify
                               any header name.

                               NOTE:
                                   If the specified header  isn't  present  in
                                   the  request, WAF doesn't apply the rule to
                                   the web request at all.

                               HeaderName -> (string)
                                   The name of the HTTP header to use for  the
                                   IP  address. For example, to use the X-For-
                                   warded-For (XFF) header, set this to X-For-
                                   warded-For .

                                   NOTE:
                                      If the specified header isn't present in
                                      the request, WAF doesn't apply the  rule
                                      to the web request at all.

                               FallbackBehavior -> (string)
                                   The  match  status  to  assign  to  the web
                                   request if the request doesn't have a valid
                                   IP address in the specified position.

                                   NOTE:
                                      If the specified header isn't present in
                                      the request, WAF doesn't apply the  rule
                                      to the web request at all.

                                   You  can  specify  the  following  fallback
                                   behaviors:

                                   o MATCH - Treat the web request as matching
                                     the  rule statement. WAF applies the rule
                                     action to the request.

                                   o NO_MATCH - Treat the web request  as  not
                                     matching the rule statement.

                               Position -> (string)
                                   The  position  in  the header to search for
                                   the IP address. The header can  contain  IP
                                   addresses  of  the original client and also
                                   of proxies. For example, the  header  value
                                   could  be  10.1.1.1, 127.0.0.0, 10.10.10.10
                                   where the first IP address  identifies  the
                                   original client and the rest identify prox-
                                   ies that the request went through.

                                   The options for this setting are  the  fol-
                                   lowing:

                                   o FIRST  -  Inspect the first IP address in
                                     the list of IP addresses in  the  header.
                                     This is usually the client's original IP.

                                   o LAST - Inspect the last IP address in the
                                     list of IP addresses in the header.

                                   o ANY  -  Inspect  all  IP addresses in the
                                     header for a match. If  the  header  con-
                                     tains  more  than  10  IP  addresses, WAF
                                     inspects the last 10.

                        RegexPatternSetReferenceStatement -> (structure)
                            A rule statement used to search web request compo-
                            nents for matches with regular expressions. To use
                            this, create a  RegexPatternSet that specifies the
                            expressions  that you want to detect, then use the
                            ARN of that set in this statement. A  web  request
                            matches  the  pattern  set  rule  statement if the
                            request component matches any of the  patterns  in
                            the  set. To create a regex pattern set, see  Cre-
                            ateRegexPatternSet .

                            Each regex pattern set rule statement references a
                            regex pattern set. You create and maintain the set
                            independent of your rules. This allows you to  use
                            the  single set in multiple rules. When you update
                            the referenced set, WAF automatically updates  all
                            rules that reference it.

                            ARN -> (string)
                               The  Amazon  Resource Name (ARN) of the  Regex-
                               PatternSet that this statement references.

                            FieldToMatch -> (structure)
                               The part of a web request that you want WAF  to
                               inspect.  For  more  information,  see   Field-
                               ToMatch .

                               SingleHeader -> (structure)
                                   Inspect a single header. Provide  the  name
                                   of  the  header  to  inspect,  for example,
                                   User-Agent or Referer . This setting  isn't
                                   case sensitive.

                                   Example  JSON:  "SingleHeader":  {  "Name":
                                   "haystack" }

                                   Name -> (string)
                                      The name of the query header to inspect.

                               SingleQueryArgument -> (structure)
                                   Inspect  a  single  query argument. Provide
                                   the name of the query argument to  inspect,
                                   such  as UserName or SalesRegion . The name
                                   can be up to 30 characters long  and  isn't
                                   case sensitive.

                                   This  is  used  only  to  indicate  the web
                                   request component for WAF  to  inspect,  in
                                   the  FieldToMatch specification.

                                   Example   JSON:   "SingleQueryArgument":  {
                                   "Name": "myArgument" }

                                   Name -> (string)
                                      The  name  of  the  query  argument   to
                                      inspect.

                               AllQueryArguments -> (structure)
                                   Inspect all query arguments.

                               UriPath -> (structure)
                                   Inspect  the  request URI path. This is the
                                   part of a web  request  that  identifies  a
                                   resource, for example, /images/daily-ad.jpg
                                   .

                               QueryString -> (structure)
                                   Inspect the query string. This is the  part
                                   of  a URL that appears after a ? character,
                                   if any.

                               Body -> (structure)
                                   Inspect the request body as plain text. The
                                   request   body   immediately   follows  the
                                   request headers. This  is  the  part  of  a
                                   request  that  contains any additional data
                                   that you want to send to your web server as
                                   the  HTTP request body, such as data from a
                                   form.

                                   Note that only the first 8 KB (8192  bytes)
                                   of  the  request  body are forwarded to WAF
                                   for inspection by the underlying host  ser-
                                   vice.  If  you  don't  need to inspect more
                                   than 8 KB, you can guarantee that you don't
                                   allow  additional  bytes  in by combining a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement , with  a
                                   SizeConstraintStatement  that enforces an 8
                                   KB size limit on the body of  the  request.
                                   WAF  doesn't  support inspecting the entire
                                   contents  of  web  requests  whose   bodies
                                   exceed the 8 KB limit.

                               Method -> (structure)
                                   Inspect  the  HTTP method. The method indi-
                                   cates  the  type  of  operation  that   the
                                   request is asking the origin to perform.

                               JsonBody -> (structure)
                                   Inspect  the  request  body  as  JSON.  The
                                   request  body   immediately   follows   the
                                   request  headers.  This  is  the  part of a
                                   request that contains any  additional  data
                                   that you want to send to your web server as
                                   the HTTP request body, such as data from  a
                                   form.

                                   Note  that only the first 8 KB (8192 bytes)
                                   of the request body are  forwarded  to  WAF
                                   for  inspection by the underlying host ser-
                                   vice. If you don't  need  to  inspect  more
                                   than 8 KB, you can guarantee that you don't
                                   allow additional bytes in  by  combining  a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement  , with a
                                   SizeConstraintStatement that enforces an  8
                                   KB  size  limit on the body of the request.
                                   WAF doesn't support inspecting  the  entire
                                   contents   of  web  requests  whose  bodies
                                   exceed the 8 KB limit.

                                   MatchPattern -> (structure)
                                      The patterns to look  for  in  the  JSON
                                      body.  WAF inspects the results of these
                                      pattern matches against the rule inspec-
                                      tion criteria.

                                      All -> (structure)
                                          Match  all of the elements. See also
                                          MatchScope in  JsonBody .

                                          You must specify either this setting
                                          or  the  IncludedPaths  setting, but
                                          not both.

                                      IncludedPaths -> (list)
                                          Match  only  the  specified  include
                                          paths. See also MatchScope in  Json-
                                          Body .

                                          Provide the include paths using JSON
                                          Pointer    syntax.    For   example,
                                          "IncludedPaths":    ["/dogs/0/name",
                                          "/dogs/1/name"]  .  For  information
                                          about this syntax, see the  Internet
                                          Engineering  Task Force (IETF) docu-
                                          mentation JavaScript Object Notation
                                          (JSON) Pointer .

                                          You must specify either this setting
                                          or the All setting, but not both.

                                          NOTE:
                                             Don't use this option to  include
                                             all  paths.  Instead, use the All
                                             setting.

                                          (string)

                                   MatchScope -> (string)
                                      The parts of the JSON to  match  against
                                      using  the MatchPattern . If you specify
                                      All , WAF matches against keys and  val-
                                      ues.

                                   InvalidFallbackBehavior -> (string)
                                      What  WAF  should do if it fails to com-
                                      pletely parse the JSON body. The options
                                      are the following:

                                      o EVALUATE_AS_STRING  - Inspect the body
                                        as plain text. WAF  applies  the  text
                                        transformations  and inspection crite-
                                        ria that  you  defined  for  the  JSON
                                        inspection to the body text string.

                                      o MATCH  -  Treat  the  web  request  as
                                        matching  the  rule   statement.   WAF
                                        applies   the   rule   action  to  the
                                        request.

                                      o NO_MATCH - Treat the  web  request  as
                                        not matching the rule statement.

                                      If  you  don't provide this setting, WAF
                                      parses and evaluates the content only up
                                      to  the  first  parsing  failure that it
                                      encounters.

                                      WAF does its best to  parse  the  entire
                                      JSON  body,  but might be forced to stop
                                      for reasons such as invalid  characters,
                                      duplicate keys, truncation, and any con-
                                      tent whose root node isn't an object  or
                                      an array.

                                      WAF  parses  the  JSON  in the following
                                      examples as two valid key, value pairs:

                                      o Missing                         comma:
                                        {"key1":"value1""key2":"value2"}

                                      o Missing                         colon:
                                        {"key1":"value1","key2""value2"}

                                      o Extra                          colons:
                                        {"key1"::"value1","key2""value2"}

                            TextTransformations -> (list)
                               Text  transformations  eliminate  some  of  the
                               unusual formatting that attackers  use  in  web
                               requests  in  an effort to bypass detection. If
                               you specify one or more  transformations  in  a
                               rule  statement,  WAF  performs all transforma-
                               tions on the content of the  request  component
                               identified  by FieldToMatch , starting from the
                               lowest priority setting, before inspecting  the
                               content for a match.

                               (structure)
                                   Text  transformations eliminate some of the
                                   unusual formatting that  attackers  use  in
                                   web  requests in an effort to bypass detec-
                                   tion.

                                   Priority -> (integer)
                                      Sets the relative processing  order  for
                                      multiple    transformations   that   are
                                      defined for a rule statement.  WAF  pro-
                                      cesses  all transformations, from lowest
                                      priority to highest,  before  inspecting
                                      the  transformed content. The priorities
                                      don't need to be consecutive,  but  they
                                      must all be different.

                                   Type -> (string)
                                      You  can specify the following transfor-
                                      mation types:
                                          BASE64_DECODE  -  Decode  a   Base64
                                          -encoded string.

                                          BASE64_DECODE_EXT  - Decode a Base64
                                          -encoded string, but use a forgiving
                                          implementation  that ignores charac-
                                          ters that aren't valid.

                                          CMD_LINE - Command-line  transforma-
                                          tions. These are helpful in reducing
                                          effectiveness   of   attackers   who
                                          inject   an  operating  system  com-
                                          mand-line command  and  use  unusual
                                          formatting  to  disguise some or all
                                          of the command.

                                      o Delete the following characters: \ " '
                                        ^

                                      o Delete  spaces  before  the  following
                                        characters: / (

                                      o Replace the following characters  with
                                        a space: , ;

                                      o Replace multiple spaces with one space

                                      o Convert  uppercase  letters  (A-Z)  to
                                        lowercase (a-z)
                                          COMPRESS_WHITE_SPACE - Replace these
                                          characters with  a  space  character
                                          (decimal 32):

                                      o \f , formfeed, decimal 12

                                      o \t , tab, decimal 9

                                      o \n , newline, decimal 10

                                      o \r , carriage return, decimal 13

                                      o \v , vertical tab, decimal 11

                                      o Non-breaking space, decimal 160
                                          COMPRESS_WHITE_SPACE  also  replaces
                                          multiple spaces with one space.

                                          CSS_DECODE - Decode characters  that
                                          were  encoded  using  CSS 2.x escape
                                          rules syndata.html#characters . This
                                          function uses up to two bytes in the
                                          decoding process, so it can help  to
                                          uncover  ASCII  characters that were
                                          encoded  using  CSS  encoding   that
                                          wouldnt  typically  be encoded. It's
                                          also useful in  countering  evasion,
                                          which  is  a  combination of a back-
                                          slash  and  non-hexadecimal  charac-
                                          ters.  For  example, ja\vascript for
                                          javascript.

                                          ESCAPE_SEQ_DECODE - Decode the  fol-
                                          lowing ANSI C escape sequences: \a ,
                                          \b , \f , \n , \r , \t , \v ,  \\  ,
                                          \?  ,  \' , \" , \xHH (hexadecimal),
                                          \0OOO (octal). Encodings that aren't
                                          valid remain in the output.

                                          HEX_DECODE  -  Decode  a  string  of
                                          hexadecimal   characters   into    a
                                          binary.

                                          HTML_ENTITY_DECODE     -     Replace
                                          HTML-encoded characters  with  unen-
                                          coded characters. HTML_ENTITY_DECODE
                                          performs these operations:

                                      o Replaces (ampersand)quot; with "

                                      o Replaces   (ampersand)nbsp;   with   a
                                        non-breaking space, decimal 160

                                      o Replaces  (ampersand)lt;  with a "less
                                        than" symbol

                                      o Replaces (ampersand)gt; with >

                                      o Replaces characters  that  are  repre-
                                        sented  in hexadecimal format, (amper-
                                        sand)#xhhhh; , with the  corresponding
                                        characters

                                      o Replaces  characters  that  are repre-
                                        sented  in  decimal  format,   (amper-
                                        sand)#nnnn;  ,  with the corresponding
                                        characters
                                          JS_DECODE - Decode JavaScript escape
                                          sequences.  If  a \  u  HHHH code is
                                          in the full-width ASCII  code  range
                                          of  FF01-FF5E , then the higher byte
                                          is used to  detect  and  adjust  the
                                          lower  byte.  If not, only the lower
                                          byte is used and the higher byte  is
                                          zeroed,  causing  a possible loss of
                                          information.

                                          LOWERCASE - Convert  uppercase  let-
                                          ters (A-Z) to lowercase (a-z).

                                          MD5 - Calculate an MD5 hash from the
                                          data in the input. The computed hash
                                          is in a raw binary form.

                                          NONE  -  Specify  NONE  if you don't
                                          want any text transformations.

                                          NORMALIZE_PATH  -  Remove   multiple
                                          slashes,  directory self-references,
                                          and directory  back-references  that
                                          are  not  at  the  beginning  of the
                                          input from an input string.

                                          NORMALIZE_PATH_WIN  -  This  is  the
                                          same  as  NORMALIZE_PATH , but first
                                          converts  backslash  characters   to
                                          forward slashes.

                                          REMOVE_NULLS - Remove all NULL bytes
                                          from the input.

                                          REPLACE_COMMENTS  -   Replace   each
                                          occurrence  of a C-style comment (/*
                                          ... */ ) with a single space. Multi-
                                          ple  consecutive occurrences are not
                                          compressed.  Unterminated   comments
                                          are   also  replaced  with  a  space
                                          (ASCII 0x20). However, a  standalone
                                          termination  of  a  comment (*/ ) is
                                          not acted upon.

                                          REPLACE_NULLS - Replace  NULL  bytes
                                          in  the  input with space characters
                                          (ASCII 0x20 ).

                                          SQL_HEX_DECODE  -  Decode  SQL   hex
                                          data.  Example  (0x414243  ) will be
                                          decoded to (ABC ).

                                          URL_DECODE -  Decode  a  URL-encoded
                                          value.

                                          URL_DECODE_UNI  -  Like URL_DECODE ,
                                          but with support for  Microsoft-spe-
                                          cific %u encoding. If the code is in
                                          the full-width ASCII code  range  of
                                          FF01-FF5E  , the higher byte is used
                                          to detect and adjust the lower byte.
                                          Otherwise,  only  the  lower byte is
                                          used and the higher byte is  zeroed.

                                          UTF8_TO_UNICODE  - Convert all UTF-8
                                          character sequences to Unicode. This
                                          helps input normalization, and mini-
                                          mizing      false-positives      and
                                          false-negatives for non-English lan-
                                          guages.

                        RateBasedStatement -> (structure)
                            A rate-based rule tracks the rate of requests  for
                            each originating IP address, and triggers the rule
                            action when the rate  exceeds  a  limit  that  you
                            specify  on the number of requests in any 5-minute
                            time span. You can use this  to  put  a  temporary
                            block on requests from an IP address that is send-
                            ing excessive requests.

                            WAF tracks and manages web requests separately for
                            each  instance  of a rate-based rule that you use.
                            For example, if you provide  the  same  rate-based
                            rule  settings  in  two  web ACLs, each of the two
                            rule statements represents a separate instance  of
                            the  rate-based rule and gets its own tracking and
                            management by WAF. If you define a rate-based rule
                            inside  a rule group, and then use that rule group
                            in multiple places, each use  creates  a  separate
                            instance  of the rate-based rule that gets its own
                            tracking and management by WAF.

                            When the rule action triggers,  WAF  blocks  addi-
                            tional  requests  from  the  IP  address until the
                            request rate falls below the limit.

                            You can optionally nest another  statement  inside
                            the  rate-based  statement, to narrow the scope of
                            the rule so that  it  only  counts  requests  that
                            match  the nested statement. For example, based on
                            recent  requests  that  you  have  seen  from   an
                            attacker,  you might create a rate-based rule with
                            a nested AND rule statement that contains the fol-
                            lowing nested statements:

                            o An IP match statement with an IP set that speci-
                              fied the address 192.0.2.44.

                            o A string match statement that  searches  in  the
                              User-Agent header for the string BadBot.

                            In  this  rate-based  rule, you also define a rate
                            limit. For this example, the rate limit is  1,000.
                            Requests  that  meet both of the conditions in the
                            statements are counted. If the count exceeds 1,000
                            requests  per  five minutes, the rule action trig-
                            gers. Requests that do not  meet  both  conditions
                            are not counted towards the rate limit and are not
                            affected by this rule.

                            You  cannot  nest  a   RateBasedStatement   inside
                            another  statement, for example inside a NotState-
                            ment or OrStatement . You can define a  RateBased-
                            Statement  inside  a  web  ACL  and  inside a rule
                            group.

                            Limit -> (long)
                               The limit on requests per 5-minute period for a
                               single originating IP address. If the statement
                               includes a ScopeDownStatement , this  limit  is
                               applied  only  to  the  requests that match the
                               statement.

                            AggregateKeyType -> (string)
                               Setting that indicates  how  to  aggregate  the
                               request counts. The options are the following:

                               o IP  -  Aggregate the request counts on the IP
                                 address from the web request origin.

                               o FORWARDED_IP - Aggregate the  request  counts
                                 on the first IP address in an HTTP header. If
                                 you use this, configure the ForwardedIPConfig
                                 , to specify the header to use.

                            (  ... recursive ... )ForwardedIPConfig -> (struc-
                            ture)
                               The configuration for inspecting  IP  addresses
                               in  an HTTP header that you specify, instead of
                               using the IP address that's reported by the web
                               request  origin.  Commonly,  this is the X-For-
                               warded-For (XFF) header, but  you  can  specify
                               any header name.

                               NOTE:
                                   If  the  specified  header isn't present in
                                   the request, WAF doesn't apply the rule  to
                                   the web request at all.

                               This  is required if AggregateKeyType is set to
                               FORWARDED_IP .

                               HeaderName -> (string)
                                   The name of the HTTP header to use for  the
                                   IP  address. For example, to use the X-For-
                                   warded-For (XFF) header, set this to X-For-
                                   warded-For .

                                   NOTE:
                                      If the specified header isn't present in
                                      the request, WAF doesn't apply the  rule
                                      to the web request at all.

                               FallbackBehavior -> (string)
                                   The  match  status  to  assign  to  the web
                                   request if the request doesn't have a valid
                                   IP address in the specified position.

                                   NOTE:
                                      If the specified header isn't present in
                                      the request, WAF doesn't apply the  rule
                                      to the web request at all.

                                   You  can  specify  the  following  fallback
                                   behaviors:

                                   o MATCH - Treat the web request as matching
                                     the  rule statement. WAF applies the rule
                                     action to the request.

                                   o NO_MATCH - Treat the web request  as  not
                                     matching the rule statement.

                        AndStatement -> (structure)
                            A  logical  rule  statement  used to combine other
                            rule statements with AND logic. You  provide  more
                            than one  Statement within the AndStatement .

                            Statements -> (list)
                               The  statements  to combine with AND logic. You
                               can use any statements that can be nested.

                               ( ... recursive ... )

                        OrStatement -> (structure)
                            A logical rule statement  used  to  combine  other
                            rule  statements  with  OR logic. You provide more
                            than one  Statement within the OrStatement .

                            Statements -> (list)
                               The statements to combine with  OR  logic.  You
                               can use any statements that can be nested.

                               ( ... recursive ... )

                        NotStatement -> (structure)
                            A  logical  rule  statement  used  to  negate  the
                            results of another rule statement. You provide one
                            Statement within the NotStatement .

                            ( ... recursive ... )

                        ManagedRuleGroupStatement -> (structure)
                            A  rule  statement  used to run the rules that are
                            defined in a managed rule group. To use this, pro-
                            vide  the  vendor  name  and  the name of the rule
                            group in this  statement.  You  can  retrieve  the
                            required  names  by  calling  ListAvailableManage-
                            dRuleGroups .

                            You cannot nest a ManagedRuleGroupStatement ,  for
                            example  for use inside a NotStatement or OrState-
                            ment . It can only be referenced  as  a  top-level
                            statement within a rule.

                            VendorName -> (string)
                               The  name of the managed rule group vendor. You
                               use this, along with the rule  group  name,  to
                               identify the rule group.

                            Name -> (string)
                               The  name  of  the  managed rule group. You use
                               this, along with the vendor name,  to  identify
                               the rule group.

                            Version -> (string)
                               The  version  of the managed rule group to use.
                               If you specify this,  the  version  setting  is
                               fixed until you change it. If you don't specify
                               this, WAF uses the  vendor's  default  version,
                               and  then  keeps  the  version  at the vendor's
                               default when the  vendor  updates  the  managed
                               rule group settings.

                            ExcludedRules -> (list)
                               The  rules  in  the referenced rule group whose
                               actions are set to Count . When you  exclude  a
                               rule,  WAF  evaluates it exactly as it would if
                               the rule action setting were Count . This is  a
                               useful  option  for testing the rules in a rule
                               group without modifying how  they  handle  your
                               web traffic.

                               (structure)
                                   Specifies  a  single  rule  in a rule group
                                   whose action you want to override to  Count
                                   . When you exclude a rule, WAF evaluates it
                                   exactly as it would if the rule action set-
                                   ting  were  Count . This is a useful option
                                   for testing the rules in a rule group with-
                                   out  modifying  how  they  handle  your web
                                   traffic.

                                   Name -> (string)
                                      The name of the rule  whose  action  you
                                      want to override to Count .

                            ( ... recursive ... )

                        LabelMatchStatement -> (structure)
                            A  rule  statement  that  defines  a  string match
                            search against labels that have been added to  the
                            web  request by rules that have already run in the
                            web ACL.

                            The label match statement provides  the  label  or
                            namespace  string  to search for. The label string
                            can represent a part or all of the fully qualified
                            label name that had been added to the web request.
                            Fully qualified labels  have  a  prefix,  optional
                            namespaces,  and label name. The prefix identifies
                            the rule group or web ACL context of the rule that
                            added  the  label. If you do not provide the fully
                            qualified name in your  label  match  string,  WAF
                            performs  the search for labels that were added in
                            the same context as the label match statement.

                            Scope -> (string)
                               Specify whether you want  to  match  using  the
                               label name or just the namespace.

                            Key -> (string)
                               The  string  to  match against. The setting you
                               provide for this depends on  the  match  state-
                               ment's Scope setting:

                               o If  the  Scope  indicates  LABEL  , then this
                                 specification must include the name  and  can
                                 include  any  number  of  preceding namespace
                                 specifications and prefix up to providing the
                                 fully qualified label name.

                               o If  the Scope indicates NAMESPACE , then this
                                 specification can include any number of  con-
                                 tiguous  namespace  strings,  and can include
                                 the entire label namespace  prefix  from  the
                                 rule  group or web ACL where the label origi-
                                 nates.

                               Labels are case sensitive and components  of  a
                               label  must  be separated by colon, for example
                               NS1:NS2:name .

                        RegexMatchStatement -> (structure)
                            A rule statement used to search web request compo-
                            nents for a match against a single regular expres-
                            sion.

                            RegexString -> (string)
                               The string representing the regular expression.

                            FieldToMatch -> (structure)
                               The  part of a web request that you want WAF to
                               inspect.  For  more  information,  see   Field-
                               ToMatch .

                               SingleHeader -> (structure)
                                   Inspect  a  single header. Provide the name
                                   of the  header  to  inspect,  for  example,
                                   User-Agent  or Referer . This setting isn't
                                   case sensitive.

                                   Example  JSON:  "SingleHeader":  {  "Name":
                                   "haystack" }

                                   Name -> (string)
                                      The name of the query header to inspect.

                               SingleQueryArgument -> (structure)
                                   Inspect a single  query  argument.  Provide
                                   the  name of the query argument to inspect,
                                   such as UserName or SalesRegion . The  name
                                   can  be  up to 30 characters long and isn't
                                   case sensitive.

                                   This is  used  only  to  indicate  the  web
                                   request  component  for  WAF to inspect, in
                                   the  FieldToMatch specification.

                                   Example  JSON:   "SingleQueryArgument":   {
                                   "Name": "myArgument" }

                                   Name -> (string)
                                      The   name  of  the  query  argument  to
                                      inspect.

                               AllQueryArguments -> (structure)
                                   Inspect all query arguments.

                               UriPath -> (structure)
                                   Inspect the request URI path. This  is  the
                                   part  of  a  web  request that identifies a
                                   resource, for example, /images/daily-ad.jpg
                                   .

                               QueryString -> (structure)
                                   Inspect  the query string. This is the part
                                   of a URL that appears after a ?  character,
                                   if any.

                               Body -> (structure)
                                   Inspect the request body as plain text. The
                                   request  body   immediately   follows   the
                                   request  headers.  This  is  the  part of a
                                   request that contains any  additional  data
                                   that you want to send to your web server as
                                   the HTTP request body, such as data from  a
                                   form.

                                   Note  that only the first 8 KB (8192 bytes)
                                   of the request body are  forwarded  to  WAF
                                   for  inspection by the underlying host ser-
                                   vice. If you don't  need  to  inspect  more
                                   than 8 KB, you can guarantee that you don't
                                   allow additional bytes in  by  combining  a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement  , with a
                                   SizeConstraintStatement that enforces an  8
                                   KB  size  limit on the body of the request.
                                   WAF doesn't support inspecting  the  entire
                                   contents   of  web  requests  whose  bodies
                                   exceed the 8 KB limit.

                               Method -> (structure)
                                   Inspect the HTTP method. The  method  indi-
                                   cates   the  type  of  operation  that  the
                                   request is asking the origin to perform.

                               JsonBody -> (structure)
                                   Inspect  the  request  body  as  JSON.  The
                                   request   body   immediately   follows  the
                                   request headers. This  is  the  part  of  a
                                   request  that  contains any additional data
                                   that you want to send to your web server as
                                   the  HTTP request body, such as data from a
                                   form.

                                   Note that only the first 8 KB (8192  bytes)
                                   of  the  request  body are forwarded to WAF
                                   for inspection by the underlying host  ser-
                                   vice.  If  you  don't  need to inspect more
                                   than 8 KB, you can guarantee that you don't
                                   allow  additional  bytes  in by combining a
                                   statement that inspects the body of the web
                                   request,  such  as   ByteMatchStatement  or
                                   RegexPatternSetReferenceStatement , with  a
                                   SizeConstraintStatement  that enforces an 8
                                   KB size limit on the body of  the  request.
                                   WAF  doesn't  support inspecting the entire
                                   contents  of  web  requests  whose   bodies
                                   exceed the 8 KB limit.

                                   MatchPattern -> (structure)
                                      The  patterns  to  look  for in the JSON
                                      body. WAF inspects the results of  these
                                      pattern matches against the rule inspec-
                                      tion criteria.

                                      All -> (structure)
                                          Match all of the elements. See  also
                                          MatchScope in  JsonBody .

                                          You must specify either this setting
                                          or the  IncludedPaths  setting,  but
                                          not both.

                                      IncludedPaths -> (list)
                                          Match  only  the  specified  include
                                          paths. See also MatchScope in  Json-
                                          Body .

                                          Provide the include paths using JSON
                                          Pointer   syntax.    For    example,
                                          "IncludedPaths":    ["/dogs/0/name",
                                          "/dogs/1/name"]  .  For  information
                                          about  this syntax, see the Internet
                                          Engineering Task Force (IETF)  docu-
                                          mentation JavaScript Object Notation
                                          (JSON) Pointer .

                                          You must specify either this setting
                                          or the All setting, but not both.

                                          NOTE:
                                             Don't  use this option to include
                                             all paths. Instead, use  the  All
                                             setting.

                                          (string)

                                   MatchScope -> (string)
                                      The  parts  of the JSON to match against
                                      using the MatchPattern . If you  specify
                                      All  , WAF matches against keys and val-
                                      ues.

                                   InvalidFallbackBehavior -> (string)
                                      What WAF should do if it fails  to  com-
                                      pletely parse the JSON body. The options
                                      are the following:

                                      o EVALUATE_AS_STRING - Inspect the  body
                                        as  plain  text.  WAF applies the text
                                        transformations and inspection  crite-
                                        ria  that  you  defined  for  the JSON
                                        inspection to the body text string.

                                      o MATCH  -  Treat  the  web  request  as
                                        matching   the   rule  statement.  WAF
                                        applies  the  rule   action   to   the
                                        request.

                                      o NO_MATCH  -  Treat  the web request as
                                        not matching the rule statement.

                                      If you don't provide this  setting,  WAF
                                      parses and evaluates the content only up
                                      to the first  parsing  failure  that  it
                                      encounters.

                                      WAF  does  its  best to parse the entire
                                      JSON body, but might be forced  to  stop
                                      for  reasons such as invalid characters,
                                      duplicate keys, truncation, and any con-
                                      tent  whose root node isn't an object or
                                      an array.

                                      WAF parses the  JSON  in  the  following
                                      examples as two valid key, value pairs:

                                      o Missing                         comma:
                                        {"key1":"value1""key2":"value2"}

                                      o Missing                         colon:
                                        {"key1":"value1","key2""value2"}

                                      o Extra                          colons:
                                        {"key1"::"value1","key2""value2"}

                            TextTransformations -> (list)
                               Text  transformations  eliminate  some  of  the
                               unusual  formatting  that  attackers use in web
                               requests in an effort to bypass  detection.  If
                               you  specify  one  or more transformations in a
                               rule statement, WAF  performs  all  transforma-
                               tions  on  the content of the request component
                               identified by FieldToMatch , starting from  the
                               lowest  priority setting, before inspecting the
                               content for a match.

                               (structure)
                                   Text transformations eliminate some of  the
                                   unusual  formatting  that  attackers use in
                                   web requests in an effort to bypass  detec-
                                   tion.

                                   Priority -> (integer)
                                      Sets  the  relative processing order for
                                      multiple   transformations   that    are
                                      defined  for  a rule statement. WAF pro-
                                      cesses all transformations, from  lowest
                                      priority  to  highest, before inspecting
                                      the transformed content. The  priorities
                                      don't  need  to be consecutive, but they
                                      must all be different.

                                   Type -> (string)
                                      You can specify the following  transfor-
                                      mation types:
                                          BASE64_DECODE   -  Decode  a  Base64
                                          -encoded string.

                                          BASE64_DECODE_EXT - Decode a  Base64
                                          -encoded string, but use a forgiving
                                          implementation that ignores  charac-
                                          ters that aren't valid.

                                          CMD_LINE  - Command-line transforma-
                                          tions. These are helpful in reducing
                                          effectiveness   of   attackers   who
                                          inject  an  operating  system   com-
                                          mand-line  command  and  use unusual
                                          formatting to disguise some  or  all
                                          of the command.

                                      o Delete the following characters: \ " '
                                        ^

                                      o Delete  spaces  before  the  following
                                        characters: / (

                                      o Replace  the following characters with
                                        a space: , ;

                                      o Replace multiple spaces with one space

                                      o Convert  uppercase  letters  (A-Z)  to
                                        lowercase (a-z)
                                          COMPRESS_WHITE_SPACE - Replace these
                                          characters  with  a  space character
                                          (decimal 32):

                                      o \f , formfeed, decimal 12

                                      o \t , tab, decimal 9

                                      o \n , newline, decimal 10

                                      o \r , carriage return, decimal 13

                                      o \v , vertical tab, decimal 11

                                      o Non-breaking space, decimal 160
                                          COMPRESS_WHITE_SPACE  also  replaces
                                          multiple spaces with one space.

                                          CSS_DECODE  - Decode characters that
                                          were encoded using  CSS  2.x  escape
                                          rules syndata.html#characters . This
                                          function uses up to two bytes in the
                                          decoding  process, so it can help to
                                          uncover ASCII characters  that  were
                                          encoded   using  CSS  encoding  that
                                          wouldnt typically be  encoded.  It's
                                          also  useful  in countering evasion,
                                          which is a combination  of  a  back-
                                          slash  and  non-hexadecimal  charac-
                                          ters. For example,  ja\vascript  for
                                          javascript.

                                          ESCAPE_SEQ_DECODE  - Decode the fol-
                                          lowing ANSI C escape sequences: \a ,
                                          \b  ,  \f , \n , \r , \t , \v , \\ ,
                                          \? , \' , \" ,  \xHH  (hexadecimal),
                                          \0OOO (octal). Encodings that aren't
                                          valid remain in the output.

                                          HEX_DECODE  -  Decode  a  string  of
                                          hexadecimal    characters   into   a
                                          binary.

                                          HTML_ENTITY_DECODE     -     Replace
                                          HTML-encoded  characters  with unen-
                                          coded characters. HTML_ENTITY_DECODE
                                          performs these operations:

                                      o Replaces (ampersand)quot; with "

                                      o Replaces   (ampersand)nbsp;   with   a
                                        non-breaking space, decimal 160

                                      o Replaces (ampersand)lt; with  a  "less
                                        than" symbol

                                      o Replaces (ampersand)gt; with >

                                      o Replaces  characters  that  are repre-
                                        sented in hexadecimal format,  (amper-
                                        sand)#xhhhh;  , with the corresponding
                                        characters

                                      o Replaces characters  that  are  repre-
                                        sented   in  decimal  format,  (amper-
                                        sand)#nnnn; , with  the  corresponding
                                        characters
                                          JS_DECODE - Decode JavaScript escape
                                          sequences. If a \  u  HHHH  code  is
                                          in  the  full-width ASCII code range
                                          of FF01-FF5E , then the higher  byte
                                          is  used  to  detect  and adjust the
                                          lower byte. If not, only  the  lower
                                          byte  is used and the higher byte is
                                          zeroed, causing a possible  loss  of
                                          information.

                                          LOWERCASE  -  Convert uppercase let-
                                          ters (A-Z) to lowercase (a-z).

                                          MD5 - Calculate an MD5 hash from the
                                          data in the input. The computed hash
                                          is in a raw binary form.

                                          NONE - Specify  NONE  if  you  don't
                                          want any text transformations.

                                          NORMALIZE_PATH   -  Remove  multiple
                                          slashes, directory  self-references,
                                          and  directory  back-references that
                                          are not  at  the  beginning  of  the
                                          input from an input string.

                                          NORMALIZE_PATH_WIN  -  This  is  the
                                          same as NORMALIZE_PATH ,  but  first
                                          converts   backslash  characters  to
                                          forward slashes.

                                          REMOVE_NULLS - Remove all NULL bytes
                                          from the input.

                                          REPLACE_COMMENTS   -   Replace  each
                                          occurrence of a C-style comment  (/*
                                          ... */ ) with a single space. Multi-
                                          ple consecutive occurrences are  not
                                          compressed.   Unterminated  comments
                                          are  also  replaced  with  a   space
                                          (ASCII  0x20). However, a standalone
                                          termination of a comment  (*/  )  is
                                          not acted upon.

                                          REPLACE_NULLS  -  Replace NULL bytes
                                          in the input with  space  characters
                                          (ASCII 0x20 ).

                                          SQL_HEX_DECODE   -  Decode  SQL  hex
                                          data. Example (0x414243  )  will  be
                                          decoded to (ABC ).

                                          URL_DECODE  -  Decode  a URL-encoded
                                          value.

                                          URL_DECODE_UNI - Like  URL_DECODE  ,
                                          but  with support for Microsoft-spe-
                                          cific %u encoding. If the code is in
                                          the  full-width  ASCII code range of
                                          FF01-FF5E , the higher byte is  used
                                          to detect and adjust the lower byte.
                                          Otherwise, only the  lower  byte  is
                                          used  and the higher byte is zeroed.

                                          UTF8_TO_UNICODE - Convert all  UTF-8
                                          character sequences to Unicode. This
                                          helps input normalization, and mini-
                                          mizing      false-positives      and
                                          false-negatives for non-English lan-
                                          guages.

                 LabelMatchStatement -> (structure)
                     A  rule  statement  that  defines  a  string match search
                     against labels that have been added to the web request by
                     rules that have already run in the web ACL.

                     The label match statement provides the label or namespace
                     string to search for. The label string  can  represent  a
                     part  or  all  of the fully qualified label name that had
                     been added to the web  request.  Fully  qualified  labels
                     have  a  prefix, optional namespaces, and label name. The
                     prefix identifies the rule group or web  ACL  context  of
                     the  rule that added the label. If you do not provide the
                     fully qualified name in your label match string, WAF per-
                     forms  the  search for labels that were added in the same
                     context as the label match statement.

                     Scope -> (string)
                        Specify whether you want to match using the label name
                        or just the namespace.

                     Key -> (string)
                        The  string  to match against. The setting you provide
                        for this depends on the match statement's  Scope  set-
                        ting:

                        o If  the Scope indicates LABEL , then this specifica-
                          tion must include the name and can include any  num-
                          ber of preceding namespace specifications and prefix
                          up to providing the fully qualified label name.

                        o If the Scope indicates NAMESPACE , then this  speci-
                          fication can include any number of contiguous names-
                          pace strings,  and  can  include  the  entire  label
                          namespace  prefix  from  the  rule  group or web ACL
                          where the label originates.

                        Labels are case sensitive and components  of  a  label
                        must be separated by colon, for example NS1:NS2:name .

                 RegexMatchStatement -> (structure)
                     A rule statement used to search  web  request  components
                     for a match against a single regular expression.

                     RegexString -> (string)
                        The string representing the regular expression.

                     FieldToMatch -> (structure)
                        The  part  of  a  web  request  that  you  want WAF to
                        inspect. For more information, see  FieldToMatch .

                        SingleHeader -> (structure)
                            Inspect a single header. Provide the name  of  the
                            header to inspect, for example, User-Agent or Ref-
                            erer . This setting isn't case sensitive.

                            Example JSON: "SingleHeader": { "Name": "haystack"
                            }

                            Name -> (string)
                               The name of the query header to inspect.

                        SingleQueryArgument -> (structure)
                            Inspect  a single query argument. Provide the name
                            of the query argument to inspect, such as UserName
                            or  SalesRegion . The name can be up to 30 charac-
                            ters long and isn't case sensitive.

                            This is used only to indicate the web request com-
                            ponent  for  WAF  to inspect, in the  FieldToMatch
                            specification.

                            Example  JSON:  "SingleQueryArgument":  {  "Name":
                            "myArgument" }

                            Name -> (string)
                               The name of the query argument to inspect.

                        AllQueryArguments -> (structure)
                            Inspect all query arguments.

                        UriPath -> (structure)
                            Inspect  the request URI path. This is the part of
                            a web request  that  identifies  a  resource,  for
                            example, /images/daily-ad.jpg .

                        QueryString -> (structure)
                            Inspect  the  query  string. This is the part of a
                            URL that appears after a ? character, if any.

                        Body -> (structure)
                            Inspect  the  request  body  as  plain  text.  The
                            request body immediately follows the request head-
                            ers. This is the part of a request  that  contains
                            any  additional data that you want to send to your
                            web server as the HTTP request body, such as  data
                            from a form.

                            Note  that only the first 8 KB (8192 bytes) of the
                            request body are forwarded to WAF  for  inspection
                            by  the underlying host service. If you don't need
                            to inspect more than 8 KB, you can guarantee  that
                            you don't allow additional bytes in by combining a
                            statement  that  inspects  the  body  of  the  web
                            request, such as  ByteMatchStatement or  RegexPat-
                            ternSetReferenceStatement  ,  with   a    SizeCon-
                            straintStatement  that enforces an 8 KB size limit
                            on the body of the request.  WAF  doesn't  support
                            inspecting  the  entire  contents  of web requests
                            whose bodies exceed the 8 KB limit.

                        Method -> (structure)
                            Inspect the HTTP method. The method indicates  the
                            type  of  operation that the request is asking the
                            origin to perform.

                        JsonBody -> (structure)
                            Inspect the request body as JSON. The request body
                            immediately  follows  the request headers. This is
                            the part of a request that contains any additional
                            data  that  you want to send to your web server as
                            the HTTP request body, such as data from a form.

                            Note that only the first 8 KB (8192 bytes) of  the
                            request  body  are forwarded to WAF for inspection
                            by the underlying host service. If you don't  need
                            to  inspect more than 8 KB, you can guarantee that
                            you don't allow additional bytes in by combining a
                            statement  that  inspects  the  body  of  the  web
                            request, such as  ByteMatchStatement or  RegexPat-
                            ternSetReferenceStatement   ,   with  a   SizeCon-
                            straintStatement that enforces an 8 KB size  limit
                            on  the  body  of the request. WAF doesn't support
                            inspecting the entire  contents  of  web  requests
                            whose bodies exceed the 8 KB limit.

                            MatchPattern -> (structure)
                               The  patterns to look for in the JSON body. WAF
                               inspects the results of these  pattern  matches
                               against the rule inspection criteria.

                               All -> (structure)
                                   Match  all of the elements. See also Match-
                                   Scope in  JsonBody .

                                   You must specify either this setting or the
                                   IncludedPaths setting, but not both.

                               IncludedPaths -> (list)
                                   Match only the specified include paths. See
                                   also MatchScope in  JsonBody .

                                   Provide  the  include  paths   using   JSON
                                   Pointer  syntax.  For  example,  "Included-
                                   Paths": ["/dogs/0/name", "/dogs/1/name"]  .
                                   For  information about this syntax, see the
                                   Internet Engineering Task Force (IETF) doc-
                                   umentation   JavaScript   Object   Notation
                                   (JSON) Pointer .

                                   You must specify either this setting or the
                                   All setting, but not both.

                                   NOTE:
                                      Don't  use  this  option  to include all
                                      paths. Instead, use the All setting.

                                   (string)

                            MatchScope -> (string)
                               The parts of the JSON to  match  against  using
                               the  MatchPattern  .  If  you specify All , WAF
                               matches against keys and values.

                            InvalidFallbackBehavior -> (string)
                               What WAF should do if it  fails  to  completely
                               parse  the  JSON body. The options are the fol-
                               lowing:

                               o EVALUATE_AS_STRING  -  Inspect  the  body  as
                                 plain  text. WAF applies the text transforma-
                                 tions  and  inspection  criteria   that   you
                                 defined  for  the JSON inspection to the body
                                 text string.

                               o MATCH - Treat the web request as matching the
                                 rule  statement.  WAF applies the rule action
                                 to the request.

                               o NO_MATCH -  Treat  the  web  request  as  not
                                 matching the rule statement.

                               If  you  don't provide this setting, WAF parses
                               and evaluates the content only up to the  first
                               parsing failure that it encounters.

                               WAF  does  its  best  to  parse the entire JSON
                               body, but might be forced to stop  for  reasons
                               such  as  invalid  characters,  duplicate keys,
                               truncation, and any  content  whose  root  node
                               isn't an object or an array.

                               WAF  parses  the JSON in the following examples
                               as two valid key, value pairs:

                               o Missing                                comma:
                                 {"key1":"value1""key2":"value2"}

                               o Missing                                colon:
                                 {"key1":"value1","key2""value2"}

                               o Extra                                 colons:
                                 {"key1"::"value1","key2""value2"}

                     TextTransformations -> (list)
                        Text  transformations  eliminate  some  of the unusual
                        formatting that attackers use in web  requests  in  an
                        effort to bypass detection. If you specify one or more
                        transformations in a rule statement, WAF performs  all
                        transformations  on  the content of the request compo-
                        nent identified by FieldToMatch ,  starting  from  the
                        lowest priority setting, before inspecting the content
                        for a match.

                        (structure)
                            Text transformations eliminate some of the unusual
                            formatting  that  attackers use in web requests in
                            an effort to bypass detection.

                            Priority -> (integer)
                               Sets the relative processing order for multiple
                               transformations  that  are  defined  for a rule
                               statement. WAF processes  all  transformations,
                               from   lowest   priority   to  highest,  before
                               inspecting the transformed content. The priori-
                               ties  don't  need  to  be consecutive, but they
                               must all be different.

                            Type -> (string)
                               You can specify  the  following  transformation
                               types:
                                   BASE64_DECODE  -  Decode  a Base64 -encoded
                                   string.

                                   BASE64_DECODE_EXT   -   Decode   a   Base64
                                   -encoded string, but use a forgiving imple-
                                   mentation  that  ignores  characters   that
                                   aren't valid.

                                   CMD_LINE  -  Command-line  transformations.
                                   These are helpful in reducing effectiveness
                                   of attackers who inject an operating system
                                   command-line command and use  unusual  for-
                                   matting to disguise some or all of the com-
                                   mand.

                               o Delete the following characters: \ " ' ^

                               o Delete spaces before  the  following  charac-
                                 ters: / (

                               o Replace   the  following  characters  with  a
                                 space: , ;

                               o Replace multiple spaces with one space

                               o Convert uppercase letters (A-Z) to  lowercase
                                 (a-z)
                                   COMPRESS_WHITE_SPACE  - Replace these char-
                                   acters with a space character (decimal 32):

                               o \f , formfeed, decimal 12

                               o \t , tab, decimal 9

                               o \n , newline, decimal 10

                               o \r , carriage return, decimal 13

                               o \v , vertical tab, decimal 11

                               o Non-breaking space, decimal 160
                                   COMPRESS_WHITE_SPACE also replaces multiple
                                   spaces with one space.

                                   CSS_DECODE - Decode  characters  that  were
                                   encoded  using  CSS  2.x  escape rules syn-
                                   data.html#characters . This  function  uses
                                   up to two bytes in the decoding process, so
                                   it can help  to  uncover  ASCII  characters
                                   that  were  encoded using CSS encoding that
                                   wouldnt typically  be  encoded.  It's  also
                                   useful  in  countering  evasion, which is a
                                   combination of a backslash and non-hexadec-
                                   imal  characters.  For example, ja\vascript
                                   for javascript.

                                   ESCAPE_SEQ_DECODE -  Decode  the  following
                                   ANSI  C escape sequences: \a , \b , \f , \n
                                   , \r , \t , \v , \\ , \? , \' , \"  ,  \xHH
                                   (hexadecimal),   \0OOO  (octal).  Encodings
                                   that aren't valid remain in the output.

                                   HEX_DECODE - Decode a string of hexadecimal
                                   characters into a binary.

                                   HTML_ENTITY_DECODE  -  Replace HTML-encoded
                                   characters   with   unencoded   characters.
                                   HTML_ENTITY_DECODE  performs  these  opera-
                                   tions:

                               o Replaces (ampersand)quot; with "

                               o Replaces (ampersand)nbsp; with a non-breaking
                                 space, decimal 160

                               o Replaces  (ampersand)lt;  with  a "less than"
                                 symbol

                               o Replaces (ampersand)gt; with >

                               o Replaces characters that are  represented  in
                                 hexadecimal format, (ampersand)#xhhhh; , with
                                 the corresponding characters

                               o Replaces characters that are  represented  in
                                 decimal  format, (ampersand)#nnnn; , with the
                                 corresponding characters
                                   JS_DECODE  -   Decode   JavaScript   escape
                                   sequences.  If  a \  u  HHHH code is in the
                                   full-width ASCII code range of FF01-FF5E  ,
                                   then  the higher byte is used to detect and
                                   adjust the lower byte.  If  not,  only  the
                                   lower  byte  is used and the higher byte is
                                   zeroed, causing a possible loss of informa-
                                   tion.

                                   LOWERCASE - Convert uppercase letters (A-Z)
                                   to lowercase (a-z).

                                   MD5 - Calculate an MD5 hash from  the  data
                                   in the input. The computed hash is in a raw
                                   binary form.

                                   NONE - Specify NONE if you don't  want  any
                                   text transformations.

                                   NORMALIZE_PATH  -  Remove multiple slashes,
                                   directory  self-references,  and  directory
                                   back-references  that are not at the begin-
                                   ning of the input from an input string.

                                   NORMALIZE_PATH_WIN - This is  the  same  as
                                   NORMALIZE_PATH  ,  but first converts back-
                                   slash characters to forward slashes.

                                   REMOVE_NULLS - Remove all NULL  bytes  from
                                   the input.

                                   REPLACE_COMMENTS  - Replace each occurrence
                                   of a C-style comment (/* ... */  )  with  a
                                   single  space.  Multiple consecutive occur-
                                   rences  are  not  compressed.  Unterminated
                                   comments  are  also  replaced  with a space
                                   (ASCII 0x20). However, a standalone  termi-
                                   nation  of  a  comment  (*/  ) is not acted
                                   upon.

                                   REPLACE_NULLS - Replace NULL bytes  in  the
                                   input  with space characters (ASCII 0x20 ).

                                   SQL_HEX_DECODE - Decode SQL hex data. Exam-
                                   ple  (0x414243 ) will be decoded to (ABC ).

                                   URL_DECODE - Decode a URL-encoded value.

                                   URL_DECODE_UNI - Like URL_DECODE , but with
                                   support for Microsoft-specific %u encoding.
                                   If the code is in the full-width ASCII code
                                   range  of  FF01-FF5E  ,  the higher byte is
                                   used to detect and adjust the  lower  byte.
                                   Otherwise,  only the lower byte is used and
                                   the higher byte is zeroed.

                                   UTF8_TO_UNICODE - Convert all UTF-8 charac-
                                   ter  sequences to Unicode. This helps input
                                   normalization, and  minimizing  false-posi-
                                   tives  and  false-negatives for non-English
                                   languages.

              Action -> (structure)
                 The action that WAF should take on  a  web  request  when  it
                 matches the rule statement. Settings at the web ACL level can
                 override the rule action setting.

                 This is used only for rules whose statements do not reference
                 a  rule  group.  Rule  statements that reference a rule group
                 include  RuleGroupReferenceStatement  and   ManagedRuleGroup-
                 Statement .

                 You must specify either this Action setting or the rule Over-
                 rideAction setting, but not both:

                 o If the rule statement does not reference a rule group,  use
                   this  rule  action setting and not the rule override action
                   setting.

                 o If the rule statement references  a  rule  group,  use  the
                   override action setting and not this action setting.

                 Block -> (structure)
                     Instructs WAF to block the web request.

                     CustomResponse -> (structure)
                        Defines a custom response for the web request.

                        For  information  about  customizing  web requests and
                        responses, see Customizing web requests and  responses
                        in WAF in the WAF Developer Guide .

                        ResponseCode -> (integer)
                            The HTTP status code to return to the client.

                            For  a  list  of  status codes that you can use in
                            your custom reqponses, see Supported status  codes
                            for custom response in the WAF Developer Guide .

                        CustomResponseBodyKey -> (string)
                            References  the response body that you want WAF to
                            return to the web request client. You can define a
                            custom response for a rule action or a default web
                            ACL action that is set to block. To do  this,  you
                            first  define  the  response body key and value in
                            the CustomResponseBodies setting for  the   WebACL
                            or   RuleGroup  where you want to use it. Then, in
                            the rule action or web ACL default action BlockAc-
                            tion  setting,  you  reference  the  response body
                            using this key.

                        ResponseHeaders -> (list)
                            The HTTP headers to use in the response. Duplicate
                            header names are not allowed.

                            For information about the limits on count and size
                            for custom request and response settings, see  WAF
                            quotas in the WAF Developer Guide .

                            (structure)
                               A custom header for custom request and response
                               handling. This is used in   CustomResponse  and
                               CustomRequestHandling .

                               Name -> (string)
                                   The name of the custom header.

                                   For  custom  request header insertion, when
                                   WAF inserts the header into the request, it
                                   prefixes  this  name x-amzn-waf- , to avoid
                                   confusion with the headers that are already
                                   in the request. For example, for the header
                                   name  sample  ,  WAF  inserts  the   header
                                   x-amzn-waf-sample .

                               Value -> (string)
                                   The value of the custom header.

                 Allow -> (structure)
                     Instructs WAF to allow the web request.

                     CustomRequestHandling -> (structure)
                        Defines custom handling for the web request.

                        For  information  about  customizing  web requests and
                        responses, see Customizing web requests and  responses
                        in WAF in the WAF Developer Guide .

                        InsertHeaders -> (list)
                            The  HTTP  headers  to  insert  into  the request.
                            Duplicate header names are not allowed.

                            For information about the limits on count and size
                            for  custom request and response settings, see WAF
                            quotas in the WAF Developer Guide .

                            (structure)
                               A custom header for custom request and response
                               handling.  This  is used in  CustomResponse and
                               CustomRequestHandling .

                               Name -> (string)
                                   The name of the custom header.

                                   For custom request header  insertion,  when
                                   WAF inserts the header into the request, it
                                   prefixes this name x-amzn-waf- ,  to  avoid
                                   confusion with the headers that are already
                                   in the request. For example, for the header
                                   name   sample  ,  WAF  inserts  the  header
                                   x-amzn-waf-sample .

                               Value -> (string)
                                   The value of the custom header.

                 Count -> (structure)
                     Instructs WAF to count the web request and allow it.

                     CustomRequestHandling -> (structure)
                        Defines custom handling for the web request.

                        For information about  customizing  web  requests  and
                        responses,  see Customizing web requests and responses
                        in WAF in the WAF Developer Guide .

                        InsertHeaders -> (list)
                            The HTTP  headers  to  insert  into  the  request.
                            Duplicate header names are not allowed.

                            For information about the limits on count and size
                            for custom request and response settings, see  WAF
                            quotas in the WAF Developer Guide .

                            (structure)
                               A custom header for custom request and response
                               handling. This is used in   CustomResponse  and
                               CustomRequestHandling .

                               Name -> (string)
                                   The name of the custom header.

                                   For  custom  request header insertion, when
                                   WAF inserts the header into the request, it
                                   prefixes  this  name x-amzn-waf- , to avoid
                                   confusion with the headers that are already
                                   in the request. For example, for the header
                                   name  sample  ,  WAF  inserts  the   header
                                   x-amzn-waf-sample .

                               Value -> (string)
                                   The value of the custom header.

                 Captcha -> (structure)
                     Instructs  WAF  to  run  a  CAPTCHA check against the web
                     request.

                     CustomRequestHandling -> (structure)
                        Defines custom handling for the web request.

                        For information about  customizing  web  requests  and
                        responses,  see Customizing web requests and responses
                        in WAF in the WAF Developer Guide .

                        InsertHeaders -> (list)
                            The HTTP  headers  to  insert  into  the  request.
                            Duplicate header names are not allowed.

                            For information about the limits on count and size
                            for custom request and response settings, see  WAF
                            quotas in the WAF Developer Guide .

                            (structure)
                               A custom header for custom request and response
                               handling. This is used in   CustomResponse  and
                               CustomRequestHandling .

                               Name -> (string)
                                   The name of the custom header.

                                   For  custom  request header insertion, when
                                   WAF inserts the header into the request, it
                                   prefixes  this  name x-amzn-waf- , to avoid
                                   confusion with the headers that are already
                                   in the request. For example, for the header
                                   name  sample  ,  WAF  inserts  the   header
                                   x-amzn-waf-sample .

                               Value -> (string)
                                   The value of the custom header.

              OverrideAction -> (structure)
                 The  action  to  use  in the place of the action that results
                 from the rule group evaluation. Set the  override  action  to
                 none  to  leave the result of the rule group alone. Set it to
                 count to override the result to count only.

                 You can only use this for rule statements  that  reference  a
                 rule group, like RuleGroupReferenceStatement and ManagedRule-
                 GroupStatement .

                 NOTE:
                     This option is usually set to none. It  does  not  affect
                     how  the  rules  in  the rule group are evaluated. If you
                     want the rules in the rule group to only  count  matches,
                     do  not  use this and instead exclude those rules in your
                     rule group reference statement settings.

                 Count -> (structure)
                     Override the rule group evaluation result to count  only.

                     NOTE:
                        This option is usually set to none. It does not affect
                        how the rules in the rule group are evaluated. If  you
                        want  the  rules  in  the  rule  group  to  only count
                        matches, do not use this  and  instead  exclude  those
                        rules in your rule group reference statement settings.

                     CustomRequestHandling -> (structure)
                        Defines custom handling for the web request.

                        For information about  customizing  web  requests  and
                        responses,  see Customizing web requests and responses
                        in WAF in the WAF Developer Guide .

                        InsertHeaders -> (list)
                            The HTTP  headers  to  insert  into  the  request.
                            Duplicate header names are not allowed.

                            For information about the limits on count and size
                            for custom request and response settings, see  WAF
                            quotas in the WAF Developer Guide .

                            (structure)
                               A custom header for custom request and response
                               handling. This is used in   CustomResponse  and
                               CustomRequestHandling .

                               Name -> (string)
                                   The name of the custom header.

                                   For  custom  request header insertion, when
                                   WAF inserts the header into the request, it
                                   prefixes  this  name x-amzn-waf- , to avoid
                                   confusion with the headers that are already
                                   in the request. For example, for the header
                                   name  sample  ,  WAF  inserts  the   header
                                   x-amzn-waf-sample .

                               Value -> (string)
                                   The value of the custom header.

                 None -> (structure)
                     Don't  override the rule group evaluation result. This is
                     the most common setting.

              RuleLabels -> (list)
                 Labels to apply to web requests that  match  the  rule  match
                 statement. WAF applies fully qualified labels to matching web
                 requests. A fully qualified label is the concatenation  of  a
                 label  namespace  and  a rule label. The rule's rule group or
                 web ACL defines the label namespace.

                 Rules that run after this rule  in  the  web  ACL  can  match
                 against these labels using a LabelMatchStatement .

                 For  each  label,  provide a case-sensitive string containing
                 optional namespaces and a label name, according to  the  fol-
                 lowing guidelines:

                 o Separate each component of the label with a colon.

                 o Each namespace or name can have up to 128 characters.

                 o You can specify up to 5 namespaces in a label.

                 o Don't use the following reserved words in your label speci-
                   fication: aws , waf , managed , rulegroup , webacl , regex-
                   patternset , or ipset .

                 For example, myLabelName or nameSpace1:nameSpace2:myLabelName
                 .

                 (structure)
                     A single label container. This is used as an element of a
                     label array in multiple contexts, for example, in RuleLa-
                     bels inside a  Rule and  in  Labels  inside  a   Sampled-
                     HTTPRequest .

                     Name -> (string)
                        The label string.

              VisibilityConfig -> (structure)
                 Defines and enables Amazon CloudWatch metrics and web request
                 sample collection.

                 SampledRequestsEnabled -> (boolean)
                     A boolean indicating whether WAF should store a  sampling
                     of  the  web  requests that match the rules. You can view
                     the sampled requests through the WAF console.

                 CloudWatchMetricsEnabled -> (boolean)
                     A boolean  indicating  whether  the  associated  resource
                     sends  metrics  to  Amazon  CloudWatch.  For  the list of
                     available metrics, see WAF Metrics .

                 MetricName -> (string)
                     A name of the Amazon CloudWatch metric. The name can con-
                     tain  only the characters: A-Z, a-z, 0-9, - (hyphen), and
                     _ (underscore). The name can be from one to  128  charac-
                     ters  long.  It  can't contain whitespace or metric names
                     reserved for WAF, for example "All" and "Default_Action."

              CaptchaConfig -> (structure)
                 Specifies  how  WAF should handle CAPTCHA evaluations. If you
                 don't specify this, WAF uses the CAPTCHA configuration that's
                 defined for the web ACL.

                 ImmunityTimeProperty -> (structure)
                     Determines  how  long a CAPTCHA token remains valid after
                     the client successfully solves a CAPTCHA puzzle.

                     ImmunityTime -> (long)
                        The amount of time, in seconds, that a  CAPTCHA  token
                        is valid. The default setting is 300.

       JSON Syntax:

          [
            {
              "Name": "string",
              "Priority": integer,
              "Statement": {
                "ByteMatchStatement": {
                  "SearchString": blob,
                  "FieldToMatch": {
                    "SingleHeader": {
                      "Name": "string"
                    },
                    "SingleQueryArgument": {
                      "Name": "string"
                    },
                    "AllQueryArguments": {

                    },
                    "UriPath": {

                    },
                    "QueryString": {

                    },
                    "Body": {

                    },
                    "Method": {

                    },
                    "JsonBody": {
                      "MatchPattern": {
                        "All": {

                        },
                        "IncludedPaths": ["string", ...]
                      },
                      "MatchScope": "ALL"|"KEY"|"VALUE",
                      "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                    }
                  },
                  "TextTransformations": [
                    {
                      "Priority": integer,
                      "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                    }
                    ...
                  ],
                  "PositionalConstraint": "EXACTLY"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CONTAINS_WORD"
                },
                "SqliMatchStatement": {
                  "FieldToMatch": {
                    "SingleHeader": {
                      "Name": "string"
                    },
                    "SingleQueryArgument": {
                      "Name": "string"
                    },
                    "AllQueryArguments": {

                    },
                    "UriPath": {

                    },
                    "QueryString": {

                    },
                    "Body": {

                    },
                    "Method": {

                    },
                    "JsonBody": {
                      "MatchPattern": {
                        "All": {

                        },
                        "IncludedPaths": ["string", ...]
                      },
                      "MatchScope": "ALL"|"KEY"|"VALUE",
                      "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                    }
                  },
                  "TextTransformations": [
                    {
                      "Priority": integer,
                      "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                    }
                    ...
                  ]
                },
                "XssMatchStatement": {
                  "FieldToMatch": {
                    "SingleHeader": {
                      "Name": "string"
                    },
                    "SingleQueryArgument": {
                      "Name": "string"
                    },
                    "AllQueryArguments": {

                    },
                    "UriPath": {

                    },
                    "QueryString": {

                    },
                    "Body": {

                    },
                    "Method": {

                    },
                    "JsonBody": {
                      "MatchPattern": {
                        "All": {

                        },
                        "IncludedPaths": ["string", ...]
                      },
                      "MatchScope": "ALL"|"KEY"|"VALUE",
                      "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                    }
                  },
                  "TextTransformations": [
                    {
                      "Priority": integer,
                      "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                    }
                    ...
                  ]
                },
                "SizeConstraintStatement": {
                  "FieldToMatch": {
                    "SingleHeader": {
                      "Name": "string"
                    },
                    "SingleQueryArgument": {
                      "Name": "string"
                    },
                    "AllQueryArguments": {

                    },
                    "UriPath": {

                    },
                    "QueryString": {

                    },
                    "Body": {

                    },
                    "Method": {

                    },
                    "JsonBody": {
                      "MatchPattern": {
                        "All": {

                        },
                        "IncludedPaths": ["string", ...]
                      },
                      "MatchScope": "ALL"|"KEY"|"VALUE",
                      "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                    }
                  },
                  "ComparisonOperator": "EQ"|"NE"|"LE"|"LT"|"GE"|"GT",
                  "Size": long,
                  "TextTransformations": [
                    {
                      "Priority": integer,
                      "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                    }
                    ...
                  ]
                },
                "GeoMatchStatement": {
                  "CountryCodes": ["AF"|"AX"|"AL"|"DZ"|"AS"|"AD"|"AO"|"AI"|"AQ"|"AG"|"AR"|"AM"|"AW"|"AU"|"AT"|"AZ"|"BS"|"BH"|"BD"|"BB"|"BY"|"BE"|"BZ"|"BJ"|"BM"|"BT"|"BO"|"BQ"|"BA"|"BW"|"BV"|"BR"|"IO"|"BN"|"BG"|"BF"|"BI"|"KH"|"CM"|"CA"|"CV"|"KY"|"CF"|"TD"|"CL"|"CN"|"CX"|"CC"|"CO"|"KM"|"CG"|"CD"|"CK"|"CR"|"CI"|"HR"|"CU"|"CW"|"CY"|"CZ"|"DK"|"DJ"|"DM"|"DO"|"EC"|"EG"|"SV"|"GQ"|"ER"|"EE"|"ET"|"FK"|"FO"|"FJ"|"FI"|"FR"|"GF"|"PF"|"TF"|"GA"|"GM"|"GE"|"DE"|"GH"|"GI"|"GR"|"GL"|"GD"|"GP"|"GU"|"GT"|"GG"|"GN"|"GW"|"GY"|"HT"|"HM"|"VA"|"HN"|"HK"|"HU"|"IS"|"IN"|"ID"|"IR"|"IQ"|"IE"|"IM"|"IL"|"IT"|"JM"|"JP"|"JE"|"JO"|"KZ"|"KE"|"KI"|"KP"|"KR"|"KW"|"KG"|"LA"|"LV"|"LB"|"LS"|"LR"|"LY"|"LI"|"LT"|"LU"|"MO"|"MK"|"MG"|"MW"|"MY"|"MV"|"ML"|"MT"|"MH"|"MQ"|"MR"|"MU"|"YT"|"MX"|"FM"|"MD"|"MC"|"MN"|"ME"|"MS"|"MA"|"MZ"|"MM"|"NA"|"NR"|"NP"|"NL"|"NC"|"NZ"|"NI"|"NE"|"NG"|"NU"|"NF"|"MP"|"NO"|"OM"|"PK"|"PW"|"PS"|"PA"|"PG"|"PY"|"PE"|"PH"|"PN"|"PL"|"PT"|"PR"|"QA"|"RE"|"RO"|"RU"|"RW"|"BL"|"SH"|"KN"|"LC"|"MF"|"PM"|"VC"|"WS"|"SM"|"ST"|"SA"|"SN"|"RS"|"SC"|"SL"|"SG"|"SX"|"SK"|"SI"|"SB"|"SO"|"ZA"|"GS"|"SS"|"ES"|"LK"|"SD"|"SR"|"SJ"|"SZ"|"SE"|"CH"|"SY"|"TW"|"TJ"|"TZ"|"TH"|"TL"|"TG"|"TK"|"TO"|"TT"|"TN"|"TR"|"TM"|"TC"|"TV"|"UG"|"UA"|"AE"|"GB"|"US"|"UM"|"UY"|"UZ"|"VU"|"VE"|"VN"|"VG"|"VI"|"WF"|"EH"|"YE"|"ZM"|"ZW", ...],
                  "ForwardedIPConfig": {
                    "HeaderName": "string",
                    "FallbackBehavior": "MATCH"|"NO_MATCH"
                  }
                },
                "RuleGroupReferenceStatement": {
                  "ARN": "string",
                  "ExcludedRules": [
                    {
                      "Name": "string"
                    }
                    ...
                  ]
                },
                "IPSetReferenceStatement": {
                  "ARN": "string",
                  "IPSetForwardedIPConfig": {
                    "HeaderName": "string",
                    "FallbackBehavior": "MATCH"|"NO_MATCH",
                    "Position": "FIRST"|"LAST"|"ANY"
                  }
                },
                "RegexPatternSetReferenceStatement": {
                  "ARN": "string",
                  "FieldToMatch": {
                    "SingleHeader": {
                      "Name": "string"
                    },
                    "SingleQueryArgument": {
                      "Name": "string"
                    },
                    "AllQueryArguments": {

                    },
                    "UriPath": {

                    },
                    "QueryString": {

                    },
                    "Body": {

                    },
                    "Method": {

                    },
                    "JsonBody": {
                      "MatchPattern": {
                        "All": {

                        },
                        "IncludedPaths": ["string", ...]
                      },
                      "MatchScope": "ALL"|"KEY"|"VALUE",
                      "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                    }
                  },
                  "TextTransformations": [
                    {
                      "Priority": integer,
                      "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                    }
                    ...
                  ]
                },
                "RateBasedStatement": {
                  "Limit": long,
                  "AggregateKeyType": "IP"|"FORWARDED_IP",
                  "ScopeDownStatement": {
                    "ByteMatchStatement": {
                      "SearchString": blob,
                      "FieldToMatch": {
                        "SingleHeader": {
                          "Name": "string"
                        },
                        "SingleQueryArgument": {
                          "Name": "string"
                        },
                        "AllQueryArguments": {

                        },
                        "UriPath": {

                        },
                        "QueryString": {

                        },
                        "Body": {

                        },
                        "Method": {

                        },
                        "JsonBody": {
                          "MatchPattern": {
                            "All": {

                            },
                            "IncludedPaths": ["string", ...]
                          },
                          "MatchScope": "ALL"|"KEY"|"VALUE",
                          "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                        }
                      },
                      "TextTransformations": [
                        {
                          "Priority": integer,
                          "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                        }
                        ...
                      ],
                      "PositionalConstraint": "EXACTLY"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CONTAINS_WORD"
                    },
                    "SqliMatchStatement": {
                      "FieldToMatch": {
                        "SingleHeader": {
                          "Name": "string"
                        },
                        "SingleQueryArgument": {
                          "Name": "string"
                        },
                        "AllQueryArguments": {

                        },
                        "UriPath": {

                        },
                        "QueryString": {

                        },
                        "Body": {

                        },
                        "Method": {

                        },
                        "JsonBody": {
                          "MatchPattern": {
                            "All": {

                            },
                            "IncludedPaths": ["string", ...]
                          },
                          "MatchScope": "ALL"|"KEY"|"VALUE",
                          "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                        }
                      },
                      "TextTransformations": [
                        {
                          "Priority": integer,
                          "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                        }
                        ...
                      ]
                    },
                    "XssMatchStatement": {
                      "FieldToMatch": {
                        "SingleHeader": {
                          "Name": "string"
                        },
                        "SingleQueryArgument": {
                          "Name": "string"
                        },
                        "AllQueryArguments": {

                        },
                        "UriPath": {

                        },
                        "QueryString": {

                        },
                        "Body": {

                        },
                        "Method": {

                        },
                        "JsonBody": {
                          "MatchPattern": {
                            "All": {

                            },
                            "IncludedPaths": ["string", ...]
                          },
                          "MatchScope": "ALL"|"KEY"|"VALUE",
                          "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                        }
                      },
                      "TextTransformations": [
                        {
                          "Priority": integer,
                          "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                        }
                        ...
                      ]
                    },
                    "SizeConstraintStatement": {
                      "FieldToMatch": {
                        "SingleHeader": {
                          "Name": "string"
                        },
                        "SingleQueryArgument": {
                          "Name": "string"
                        },
                        "AllQueryArguments": {

                        },
                        "UriPath": {

                        },
                        "QueryString": {

                        },
                        "Body": {

                        },
                        "Method": {

                        },
                        "JsonBody": {
                          "MatchPattern": {
                            "All": {

                            },
                            "IncludedPaths": ["string", ...]
                          },
                          "MatchScope": "ALL"|"KEY"|"VALUE",
                          "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                        }
                      },
                      "ComparisonOperator": "EQ"|"NE"|"LE"|"LT"|"GE"|"GT",
                      "Size": long,
                      "TextTransformations": [
                        {
                          "Priority": integer,
                          "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                        }
                        ...
                      ]
                    },
                    "GeoMatchStatement": {
                      "CountryCodes": ["AF"|"AX"|"AL"|"DZ"|"AS"|"AD"|"AO"|"AI"|"AQ"|"AG"|"AR"|"AM"|"AW"|"AU"|"AT"|"AZ"|"BS"|"BH"|"BD"|"BB"|"BY"|"BE"|"BZ"|"BJ"|"BM"|"BT"|"BO"|"BQ"|"BA"|"BW"|"BV"|"BR"|"IO"|"BN"|"BG"|"BF"|"BI"|"KH"|"CM"|"CA"|"CV"|"KY"|"CF"|"TD"|"CL"|"CN"|"CX"|"CC"|"CO"|"KM"|"CG"|"CD"|"CK"|"CR"|"CI"|"HR"|"CU"|"CW"|"CY"|"CZ"|"DK"|"DJ"|"DM"|"DO"|"EC"|"EG"|"SV"|"GQ"|"ER"|"EE"|"ET"|"FK"|"FO"|"FJ"|"FI"|"FR"|"GF"|"PF"|"TF"|"GA"|"GM"|"GE"|"DE"|"GH"|"GI"|"GR"|"GL"|"GD"|"GP"|"GU"|"GT"|"GG"|"GN"|"GW"|"GY"|"HT"|"HM"|"VA"|"HN"|"HK"|"HU"|"IS"|"IN"|"ID"|"IR"|"IQ"|"IE"|"IM"|"IL"|"IT"|"JM"|"JP"|"JE"|"JO"|"KZ"|"KE"|"KI"|"KP"|"KR"|"KW"|"KG"|"LA"|"LV"|"LB"|"LS"|"LR"|"LY"|"LI"|"LT"|"LU"|"MO"|"MK"|"MG"|"MW"|"MY"|"MV"|"ML"|"MT"|"MH"|"MQ"|"MR"|"MU"|"YT"|"MX"|"FM"|"MD"|"MC"|"MN"|"ME"|"MS"|"MA"|"MZ"|"MM"|"NA"|"NR"|"NP"|"NL"|"NC"|"NZ"|"NI"|"NE"|"NG"|"NU"|"NF"|"MP"|"NO"|"OM"|"PK"|"PW"|"PS"|"PA"|"PG"|"PY"|"PE"|"PH"|"PN"|"PL"|"PT"|"PR"|"QA"|"RE"|"RO"|"RU"|"RW"|"BL"|"SH"|"KN"|"LC"|"MF"|"PM"|"VC"|"WS"|"SM"|"ST"|"SA"|"SN"|"RS"|"SC"|"SL"|"SG"|"SX"|"SK"|"SI"|"SB"|"SO"|"ZA"|"GS"|"SS"|"ES"|"LK"|"SD"|"SR"|"SJ"|"SZ"|"SE"|"CH"|"SY"|"TW"|"TJ"|"TZ"|"TH"|"TL"|"TG"|"TK"|"TO"|"TT"|"TN"|"TR"|"TM"|"TC"|"TV"|"UG"|"UA"|"AE"|"GB"|"US"|"UM"|"UY"|"UZ"|"VU"|"VE"|"VN"|"VG"|"VI"|"WF"|"EH"|"YE"|"ZM"|"ZW", ...],
                      "ForwardedIPConfig": {
                        "HeaderName": "string",
                        "FallbackBehavior": "MATCH"|"NO_MATCH"
                      }
                    },
                    "RuleGroupReferenceStatement": {
                      "ARN": "string",
                      "ExcludedRules": [
                        {
                          "Name": "string"
                        }
                        ...
                      ]
                    },
                    "IPSetReferenceStatement": {
                      "ARN": "string",
                      "IPSetForwardedIPConfig": {
                        "HeaderName": "string",
                        "FallbackBehavior": "MATCH"|"NO_MATCH",
                        "Position": "FIRST"|"LAST"|"ANY"
                      }
                    },
                    "RegexPatternSetReferenceStatement": {
                      "ARN": "string",
                      "FieldToMatch": {
                        "SingleHeader": {
                          "Name": "string"
                        },
                        "SingleQueryArgument": {
                          "Name": "string"
                        },
                        "AllQueryArguments": {

                        },
                        "UriPath": {

                        },
                        "QueryString": {

                        },
                        "Body": {

                        },
                        "Method": {

                        },
                        "JsonBody": {
                          "MatchPattern": {
                            "All": {

                            },
                            "IncludedPaths": ["string", ...]
                          },
                          "MatchScope": "ALL"|"KEY"|"VALUE",
                          "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                        }
                      },
                      "TextTransformations": [
                        {
                          "Priority": integer,
                          "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                        }
                        ...
                      ]
                    },
                    "RateBasedStatement": {
                      "Limit": long,
                      "AggregateKeyType": "IP"|"FORWARDED_IP",
                      "ScopeDownStatement": { ... recursive ... },
                      "ForwardedIPConfig": {
                        "HeaderName": "string",
                        "FallbackBehavior": "MATCH"|"NO_MATCH"
                      }
                    },
                    "AndStatement": {
                      "Statements": [
                        { ... recursive ... }
                        ...
                      ]
                    },
                    "OrStatement": {
                      "Statements": [
                        { ... recursive ... }
                        ...
                      ]
                    },
                    "NotStatement": {
                      "Statement": { ... recursive ... }
                    },
                    "ManagedRuleGroupStatement": {
                      "VendorName": "string",
                      "Name": "string",
                      "Version": "string",
                      "ExcludedRules": [
                        {
                          "Name": "string"
                        }
                        ...
                      ],
                      "ScopeDownStatement": { ... recursive ... }
                    },
                    "LabelMatchStatement": {
                      "Scope": "LABEL"|"NAMESPACE",
                      "Key": "string"
                    },
                    "RegexMatchStatement": {
                      "RegexString": "string",
                      "FieldToMatch": {
                        "SingleHeader": {
                          "Name": "string"
                        },
                        "SingleQueryArgument": {
                          "Name": "string"
                        },
                        "AllQueryArguments": {

                        },
                        "UriPath": {

                        },
                        "QueryString": {

                        },
                        "Body": {

                        },
                        "Method": {

                        },
                        "JsonBody": {
                          "MatchPattern": {
                            "All": {

                            },
                            "IncludedPaths": ["string", ...]
                          },
                          "MatchScope": "ALL"|"KEY"|"VALUE",
                          "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                        }
                      },
                      "TextTransformations": [
                        {
                          "Priority": integer,
                          "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                        }
                        ...
                      ]
                    }
                  },
                  "ForwardedIPConfig": {
                    "HeaderName": "string",
                    "FallbackBehavior": "MATCH"|"NO_MATCH"
                  }
                },
                "AndStatement": {
                  "Statements": [
                    {
                      "ByteMatchStatement": {
                        "SearchString": blob,
                        "FieldToMatch": {
                          "SingleHeader": {
                            "Name": "string"
                          },
                          "SingleQueryArgument": {
                            "Name": "string"
                          },
                          "AllQueryArguments": {

                          },
                          "UriPath": {

                          },
                          "QueryString": {

                          },
                          "Body": {

                          },
                          "Method": {

                          },
                          "JsonBody": {
                            "MatchPattern": {
                              "All": {

                              },
                              "IncludedPaths": ["string", ...]
                            },
                            "MatchScope": "ALL"|"KEY"|"VALUE",
                            "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                          }
                        },
                        "TextTransformations": [
                          {
                            "Priority": integer,
                            "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                          }
                          ...
                        ],
                        "PositionalConstraint": "EXACTLY"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CONTAINS_WORD"
                      },
                      "SqliMatchStatement": {
                        "FieldToMatch": {
                          "SingleHeader": {
                            "Name": "string"
                          },
                          "SingleQueryArgument": {
                            "Name": "string"
                          },
                          "AllQueryArguments": {

                          },
                          "UriPath": {

                          },
                          "QueryString": {

                          },
                          "Body": {

                          },
                          "Method": {

                          },
                          "JsonBody": {
                            "MatchPattern": {
                              "All": {

                              },
                              "IncludedPaths": ["string", ...]
                            },
                            "MatchScope": "ALL"|"KEY"|"VALUE",
                            "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                          }
                        },
                        "TextTransformations": [
                          {
                            "Priority": integer,
                            "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                          }
                          ...
                        ]
                      },
                      "XssMatchStatement": {
                        "FieldToMatch": {
                          "SingleHeader": {
                            "Name": "string"
                          },
                          "SingleQueryArgument": {
                            "Name": "string"
                          },
                          "AllQueryArguments": {

                          },
                          "UriPath": {

                          },
                          "QueryString": {

                          },
                          "Body": {

                          },
                          "Method": {

                          },
                          "JsonBody": {
                            "MatchPattern": {
                              "All": {

                              },
                              "IncludedPaths": ["string", ...]
                            },
                            "MatchScope": "ALL"|"KEY"|"VALUE",
                            "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                          }
                        },
                        "TextTransformations": [
                          {
                            "Priority": integer,
                            "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                          }
                          ...
                        ]
                      },
                      "SizeConstraintStatement": {
                        "FieldToMatch": {
                          "SingleHeader": {
                            "Name": "string"
                          },
                          "SingleQueryArgument": {
                            "Name": "string"
                          },
                          "AllQueryArguments": {

                          },
                          "UriPath": {

                          },
                          "QueryString": {

                          },
                          "Body": {

                          },
                          "Method": {

                          },
                          "JsonBody": {
                            "MatchPattern": {
                              "All": {

                              },
                              "IncludedPaths": ["string", ...]
                            },
                            "MatchScope": "ALL"|"KEY"|"VALUE",
                            "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                          }
                        },
                        "ComparisonOperator": "EQ"|"NE"|"LE"|"LT"|"GE"|"GT",
                        "Size": long,
                        "TextTransformations": [
                          {
                            "Priority": integer,
                            "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                          }
                          ...
                        ]
                      },
                      "GeoMatchStatement": {
                        "CountryCodes": ["AF"|"AX"|"AL"|"DZ"|"AS"|"AD"|"AO"|"AI"|"AQ"|"AG"|"AR"|"AM"|"AW"|"AU"|"AT"|"AZ"|"BS"|"BH"|"BD"|"BB"|"BY"|"BE"|"BZ"|"BJ"|"BM"|"BT"|"BO"|"BQ"|"BA"|"BW"|"BV"|"BR"|"IO"|"BN"|"BG"|"BF"|"BI"|"KH"|"CM"|"CA"|"CV"|"KY"|"CF"|"TD"|"CL"|"CN"|"CX"|"CC"|"CO"|"KM"|"CG"|"CD"|"CK"|"CR"|"CI"|"HR"|"CU"|"CW"|"CY"|"CZ"|"DK"|"DJ"|"DM"|"DO"|"EC"|"EG"|"SV"|"GQ"|"ER"|"EE"|"ET"|"FK"|"FO"|"FJ"|"FI"|"FR"|"GF"|"PF"|"TF"|"GA"|"GM"|"GE"|"DE"|"GH"|"GI"|"GR"|"GL"|"GD"|"GP"|"GU"|"GT"|"GG"|"GN"|"GW"|"GY"|"HT"|"HM"|"VA"|"HN"|"HK"|"HU"|"IS"|"IN"|"ID"|"IR"|"IQ"|"IE"|"IM"|"IL"|"IT"|"JM"|"JP"|"JE"|"JO"|"KZ"|"KE"|"KI"|"KP"|"KR"|"KW"|"KG"|"LA"|"LV"|"LB"|"LS"|"LR"|"LY"|"LI"|"LT"|"LU"|"MO"|"MK"|"MG"|"MW"|"MY"|"MV"|"ML"|"MT"|"MH"|"MQ"|"MR"|"MU"|"YT"|"MX"|"FM"|"MD"|"MC"|"MN"|"ME"|"MS"|"MA"|"MZ"|"MM"|"NA"|"NR"|"NP"|"NL"|"NC"|"NZ"|"NI"|"NE"|"NG"|"NU"|"NF"|"MP"|"NO"|"OM"|"PK"|"PW"|"PS"|"PA"|"PG"|"PY"|"PE"|"PH"|"PN"|"PL"|"PT"|"PR"|"QA"|"RE"|"RO"|"RU"|"RW"|"BL"|"SH"|"KN"|"LC"|"MF"|"PM"|"VC"|"WS"|"SM"|"ST"|"SA"|"SN"|"RS"|"SC"|"SL"|"SG"|"SX"|"SK"|"SI"|"SB"|"SO"|"ZA"|"GS"|"SS"|"ES"|"LK"|"SD"|"SR"|"SJ"|"SZ"|"SE"|"CH"|"SY"|"TW"|"TJ"|"TZ"|"TH"|"TL"|"TG"|"TK"|"TO"|"TT"|"TN"|"TR"|"TM"|"TC"|"TV"|"UG"|"UA"|"AE"|"GB"|"US"|"UM"|"UY"|"UZ"|"VU"|"VE"|"VN"|"VG"|"VI"|"WF"|"EH"|"YE"|"ZM"|"ZW", ...],
                        "ForwardedIPConfig": {
                          "HeaderName": "string",
                          "FallbackBehavior": "MATCH"|"NO_MATCH"
                        }
                      },
                      "RuleGroupReferenceStatement": {
                        "ARN": "string",
                        "ExcludedRules": [
                          {
                            "Name": "string"
                          }
                          ...
                        ]
                      },
                      "IPSetReferenceStatement": {
                        "ARN": "string",
                        "IPSetForwardedIPConfig": {
                          "HeaderName": "string",
                          "FallbackBehavior": "MATCH"|"NO_MATCH",
                          "Position": "FIRST"|"LAST"|"ANY"
                        }
                      },
                      "RegexPatternSetReferenceStatement": {
                        "ARN": "string",
                        "FieldToMatch": {
                          "SingleHeader": {
                            "Name": "string"
                          },
                          "SingleQueryArgument": {
                            "Name": "string"
                          },
                          "AllQueryArguments": {

                          },
                          "UriPath": {

                          },
                          "QueryString": {

                          },
                          "Body": {

                          },
                          "Method": {

                          },
                          "JsonBody": {
                            "MatchPattern": {
                              "All": {

                              },
                              "IncludedPaths": ["string", ...]
                            },
                            "MatchScope": "ALL"|"KEY"|"VALUE",
                            "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                          }
                        },
                        "TextTransformations": [
                          {
                            "Priority": integer,
                            "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                          }
                          ...
                        ]
                      },
                      "RateBasedStatement": {
                        "Limit": long,
                        "AggregateKeyType": "IP"|"FORWARDED_IP",
                        "ScopeDownStatement": { ... recursive ... },
                        "ForwardedIPConfig": {
                          "HeaderName": "string",
                          "FallbackBehavior": "MATCH"|"NO_MATCH"
                        }
                      },
                      "AndStatement": {
                        "Statements": [
                          { ... recursive ... }
                          ...
                        ]
                      },
                      "OrStatement": {
                        "Statements": [
                          { ... recursive ... }
                          ...
                        ]
                      },
                      "NotStatement": {
                        "Statement": { ... recursive ... }
                      },
                      "ManagedRuleGroupStatement": {
                        "VendorName": "string",
                        "Name": "string",
                        "Version": "string",
                        "ExcludedRules": [
                          {
                            "Name": "string"
                          }
                          ...
                        ],
                        "ScopeDownStatement": { ... recursive ... }
                      },
                      "LabelMatchStatement": {
                        "Scope": "LABEL"|"NAMESPACE",
                        "Key": "string"
                      },
                      "RegexMatchStatement": {
                        "RegexString": "string",
                        "FieldToMatch": {
                          "SingleHeader": {
                            "Name": "string"
                          },
                          "SingleQueryArgument": {
                            "Name": "string"
                          },
                          "AllQueryArguments": {

                          },
                          "UriPath": {

                          },
                          "QueryString": {

                          },
                          "Body": {

                          },
                          "Method": {

                          },
                          "JsonBody": {
                            "MatchPattern": {
                              "All": {

                              },
                              "IncludedPaths": ["string", ...]
                            },
                            "MatchScope": "ALL"|"KEY"|"VALUE",
                            "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                          }
                        },
                        "TextTransformations": [
                          {
                            "Priority": integer,
                            "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                          }
                          ...
                        ]
                      }
                    }
                    ...
                  ]
                },
                "OrStatement": {
                  "Statements": [
                    {
                      "ByteMatchStatement": {
                        "SearchString": blob,
                        "FieldToMatch": {
                          "SingleHeader": {
                            "Name": "string"
                          },
                          "SingleQueryArgument": {
                            "Name": "string"
                          },
                          "AllQueryArguments": {

                          },
                          "UriPath": {

                          },
                          "QueryString": {

                          },
                          "Body": {

                          },
                          "Method": {

                          },
                          "JsonBody": {
                            "MatchPattern": {
                              "All": {

                              },
                              "IncludedPaths": ["string", ...]
                            },
                            "MatchScope": "ALL"|"KEY"|"VALUE",
                            "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                          }
                        },
                        "TextTransformations": [
                          {
                            "Priority": integer,
                            "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                          }
                          ...
                        ],
                        "PositionalConstraint": "EXACTLY"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CONTAINS_WORD"
                      },
                      "SqliMatchStatement": {
                        "FieldToMatch": {
                          "SingleHeader": {
                            "Name": "string"
                          },
                          "SingleQueryArgument": {
                            "Name": "string"
                          },
                          "AllQueryArguments": {

                          },
                          "UriPath": {

                          },
                          "QueryString": {

                          },
                          "Body": {

                          },
                          "Method": {

                          },
                          "JsonBody": {
                            "MatchPattern": {
                              "All": {

                              },
                              "IncludedPaths": ["string", ...]
                            },
                            "MatchScope": "ALL"|"KEY"|"VALUE",
                            "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                          }
                        },
                        "TextTransformations": [
                          {
                            "Priority": integer,
                            "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                          }
                          ...
                        ]
                      },
                      "XssMatchStatement": {
                        "FieldToMatch": {
                          "SingleHeader": {
                            "Name": "string"
                          },
                          "SingleQueryArgument": {
                            "Name": "string"
                          },
                          "AllQueryArguments": {

                          },
                          "UriPath": {

                          },
                          "QueryString": {

                          },
                          "Body": {

                          },
                          "Method": {

                          },
                          "JsonBody": {
                            "MatchPattern": {
                              "All": {

                              },
                              "IncludedPaths": ["string", ...]
                            },
                            "MatchScope": "ALL"|"KEY"|"VALUE",
                            "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                          }
                        },
                        "TextTransformations": [
                          {
                            "Priority": integer,
                            "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                          }
                          ...
                        ]
                      },
                      "SizeConstraintStatement": {
                        "FieldToMatch": {
                          "SingleHeader": {
                            "Name": "string"
                          },
                          "SingleQueryArgument": {
                            "Name": "string"
                          },
                          "AllQueryArguments": {

                          },
                          "UriPath": {

                          },
                          "QueryString": {

                          },
                          "Body": {

                          },
                          "Method": {

                          },
                          "JsonBody": {
                            "MatchPattern": {
                              "All": {

                              },
                              "IncludedPaths": ["string", ...]
                            },
                            "MatchScope": "ALL"|"KEY"|"VALUE",
                            "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                          }
                        },
                        "ComparisonOperator": "EQ"|"NE"|"LE"|"LT"|"GE"|"GT",
                        "Size": long,
                        "TextTransformations": [
                          {
                            "Priority": integer,
                            "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                          }
                          ...
                        ]
                      },
                      "GeoMatchStatement": {
                        "CountryCodes": ["AF"|"AX"|"AL"|"DZ"|"AS"|"AD"|"AO"|"AI"|"AQ"|"AG"|"AR"|"AM"|"AW"|"AU"|"AT"|"AZ"|"BS"|"BH"|"BD"|"BB"|"BY"|"BE"|"BZ"|"BJ"|"BM"|"BT"|"BO"|"BQ"|"BA"|"BW"|"BV"|"BR"|"IO"|"BN"|"BG"|"BF"|"BI"|"KH"|"CM"|"CA"|"CV"|"KY"|"CF"|"TD"|"CL"|"CN"|"CX"|"CC"|"CO"|"KM"|"CG"|"CD"|"CK"|"CR"|"CI"|"HR"|"CU"|"CW"|"CY"|"CZ"|"DK"|"DJ"|"DM"|"DO"|"EC"|"EG"|"SV"|"GQ"|"ER"|"EE"|"ET"|"FK"|"FO"|"FJ"|"FI"|"FR"|"GF"|"PF"|"TF"|"GA"|"GM"|"GE"|"DE"|"GH"|"GI"|"GR"|"GL"|"GD"|"GP"|"GU"|"GT"|"GG"|"GN"|"GW"|"GY"|"HT"|"HM"|"VA"|"HN"|"HK"|"HU"|"IS"|"IN"|"ID"|"IR"|"IQ"|"IE"|"IM"|"IL"|"IT"|"JM"|"JP"|"JE"|"JO"|"KZ"|"KE"|"KI"|"KP"|"KR"|"KW"|"KG"|"LA"|"LV"|"LB"|"LS"|"LR"|"LY"|"LI"|"LT"|"LU"|"MO"|"MK"|"MG"|"MW"|"MY"|"MV"|"ML"|"MT"|"MH"|"MQ"|"MR"|"MU"|"YT"|"MX"|"FM"|"MD"|"MC"|"MN"|"ME"|"MS"|"MA"|"MZ"|"MM"|"NA"|"NR"|"NP"|"NL"|"NC"|"NZ"|"NI"|"NE"|"NG"|"NU"|"NF"|"MP"|"NO"|"OM"|"PK"|"PW"|"PS"|"PA"|"PG"|"PY"|"PE"|"PH"|"PN"|"PL"|"PT"|"PR"|"QA"|"RE"|"RO"|"RU"|"RW"|"BL"|"SH"|"KN"|"LC"|"MF"|"PM"|"VC"|"WS"|"SM"|"ST"|"SA"|"SN"|"RS"|"SC"|"SL"|"SG"|"SX"|"SK"|"SI"|"SB"|"SO"|"ZA"|"GS"|"SS"|"ES"|"LK"|"SD"|"SR"|"SJ"|"SZ"|"SE"|"CH"|"SY"|"TW"|"TJ"|"TZ"|"TH"|"TL"|"TG"|"TK"|"TO"|"TT"|"TN"|"TR"|"TM"|"TC"|"TV"|"UG"|"UA"|"AE"|"GB"|"US"|"UM"|"UY"|"UZ"|"VU"|"VE"|"VN"|"VG"|"VI"|"WF"|"EH"|"YE"|"ZM"|"ZW", ...],
                        "ForwardedIPConfig": {
                          "HeaderName": "string",
                          "FallbackBehavior": "MATCH"|"NO_MATCH"
                        }
                      },
                      "RuleGroupReferenceStatement": {
                        "ARN": "string",
                        "ExcludedRules": [
                          {
                            "Name": "string"
                          }
                          ...
                        ]
                      },
                      "IPSetReferenceStatement": {
                        "ARN": "string",
                        "IPSetForwardedIPConfig": {
                          "HeaderName": "string",
                          "FallbackBehavior": "MATCH"|"NO_MATCH",
                          "Position": "FIRST"|"LAST"|"ANY"
                        }
                      },
                      "RegexPatternSetReferenceStatement": {
                        "ARN": "string",
                        "FieldToMatch": {
                          "SingleHeader": {
                            "Name": "string"
                          },
                          "SingleQueryArgument": {
                            "Name": "string"
                          },
                          "AllQueryArguments": {

                          },
                          "UriPath": {

                          },
                          "QueryString": {

                          },
                          "Body": {

                          },
                          "Method": {

                          },
                          "JsonBody": {
                            "MatchPattern": {
                              "All": {

                              },
                              "IncludedPaths": ["string", ...]
                            },
                            "MatchScope": "ALL"|"KEY"|"VALUE",
                            "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                          }
                        },
                        "TextTransformations": [
                          {
                            "Priority": integer,
                            "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                          }
                          ...
                        ]
                      },
                      "RateBasedStatement": {
                        "Limit": long,
                        "AggregateKeyType": "IP"|"FORWARDED_IP",
                        "ScopeDownStatement": { ... recursive ... },
                        "ForwardedIPConfig": {
                          "HeaderName": "string",
                          "FallbackBehavior": "MATCH"|"NO_MATCH"
                        }
                      },
                      "AndStatement": {
                        "Statements": [
                          { ... recursive ... }
                          ...
                        ]
                      },
                      "OrStatement": {
                        "Statements": [
                          { ... recursive ... }
                          ...
                        ]
                      },
                      "NotStatement": {
                        "Statement": { ... recursive ... }
                      },
                      "ManagedRuleGroupStatement": {
                        "VendorName": "string",
                        "Name": "string",
                        "Version": "string",
                        "ExcludedRules": [
                          {
                            "Name": "string"
                          }
                          ...
                        ],
                        "ScopeDownStatement": { ... recursive ... }
                      },
                      "LabelMatchStatement": {
                        "Scope": "LABEL"|"NAMESPACE",
                        "Key": "string"
                      },
                      "RegexMatchStatement": {
                        "RegexString": "string",
                        "FieldToMatch": {
                          "SingleHeader": {
                            "Name": "string"
                          },
                          "SingleQueryArgument": {
                            "Name": "string"
                          },
                          "AllQueryArguments": {

                          },
                          "UriPath": {

                          },
                          "QueryString": {

                          },
                          "Body": {

                          },
                          "Method": {

                          },
                          "JsonBody": {
                            "MatchPattern": {
                              "All": {

                              },
                              "IncludedPaths": ["string", ...]
                            },
                            "MatchScope": "ALL"|"KEY"|"VALUE",
                            "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                          }
                        },
                        "TextTransformations": [
                          {
                            "Priority": integer,
                            "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                          }
                          ...
                        ]
                      }
                    }
                    ...
                  ]
                },
                "NotStatement": {
                  "Statement": {
                    "ByteMatchStatement": {
                      "SearchString": blob,
                      "FieldToMatch": {
                        "SingleHeader": {
                          "Name": "string"
                        },
                        "SingleQueryArgument": {
                          "Name": "string"
                        },
                        "AllQueryArguments": {

                        },
                        "UriPath": {

                        },
                        "QueryString": {

                        },
                        "Body": {

                        },
                        "Method": {

                        },
                        "JsonBody": {
                          "MatchPattern": {
                            "All": {

                            },
                            "IncludedPaths": ["string", ...]
                          },
                          "MatchScope": "ALL"|"KEY"|"VALUE",
                          "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                        }
                      },
                      "TextTransformations": [
                        {
                          "Priority": integer,
                          "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                        }
                        ...
                      ],
                      "PositionalConstraint": "EXACTLY"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CONTAINS_WORD"
                    },
                    "SqliMatchStatement": {
                      "FieldToMatch": {
                        "SingleHeader": {
                          "Name": "string"
                        },
                        "SingleQueryArgument": {
                          "Name": "string"
                        },
                        "AllQueryArguments": {

                        },
                        "UriPath": {

                        },
                        "QueryString": {

                        },
                        "Body": {

                        },
                        "Method": {

                        },
                        "JsonBody": {
                          "MatchPattern": {
                            "All": {

                            },
                            "IncludedPaths": ["string", ...]
                          },
                          "MatchScope": "ALL"|"KEY"|"VALUE",
                          "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                        }
                      },
                      "TextTransformations": [
                        {
                          "Priority": integer,
                          "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                        }
                        ...
                      ]
                    },
                    "XssMatchStatement": {
                      "FieldToMatch": {
                        "SingleHeader": {
                          "Name": "string"
                        },
                        "SingleQueryArgument": {
                          "Name": "string"
                        },
                        "AllQueryArguments": {

                        },
                        "UriPath": {

                        },
                        "QueryString": {

                        },
                        "Body": {

                        },
                        "Method": {

                        },
                        "JsonBody": {
                          "MatchPattern": {
                            "All": {

                            },
                            "IncludedPaths": ["string", ...]
                          },
                          "MatchScope": "ALL"|"KEY"|"VALUE",
                          "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                        }
                      },
                      "TextTransformations": [
                        {
                          "Priority": integer,
                          "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                        }
                        ...
                      ]
                    },
                    "SizeConstraintStatement": {
                      "FieldToMatch": {
                        "SingleHeader": {
                          "Name": "string"
                        },
                        "SingleQueryArgument": {
                          "Name": "string"
                        },
                        "AllQueryArguments": {

                        },
                        "UriPath": {

                        },
                        "QueryString": {

                        },
                        "Body": {

                        },
                        "Method": {

                        },
                        "JsonBody": {
                          "MatchPattern": {
                            "All": {

                            },
                            "IncludedPaths": ["string", ...]
                          },
                          "MatchScope": "ALL"|"KEY"|"VALUE",
                          "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                        }
                      },
                      "ComparisonOperator": "EQ"|"NE"|"LE"|"LT"|"GE"|"GT",
                      "Size": long,
                      "TextTransformations": [
                        {
                          "Priority": integer,
                          "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                        }
                        ...
                      ]
                    },
                    "GeoMatchStatement": {
                      "CountryCodes": ["AF"|"AX"|"AL"|"DZ"|"AS"|"AD"|"AO"|"AI"|"AQ"|"AG"|"AR"|"AM"|"AW"|"AU"|"AT"|"AZ"|"BS"|"BH"|"BD"|"BB"|"BY"|"BE"|"BZ"|"BJ"|"BM"|"BT"|"BO"|"BQ"|"BA"|"BW"|"BV"|"BR"|"IO"|"BN"|"BG"|"BF"|"BI"|"KH"|"CM"|"CA"|"CV"|"KY"|"CF"|"TD"|"CL"|"CN"|"CX"|"CC"|"CO"|"KM"|"CG"|"CD"|"CK"|"CR"|"CI"|"HR"|"CU"|"CW"|"CY"|"CZ"|"DK"|"DJ"|"DM"|"DO"|"EC"|"EG"|"SV"|"GQ"|"ER"|"EE"|"ET"|"FK"|"FO"|"FJ"|"FI"|"FR"|"GF"|"PF"|"TF"|"GA"|"GM"|"GE"|"DE"|"GH"|"GI"|"GR"|"GL"|"GD"|"GP"|"GU"|"GT"|"GG"|"GN"|"GW"|"GY"|"HT"|"HM"|"VA"|"HN"|"HK"|"HU"|"IS"|"IN"|"ID"|"IR"|"IQ"|"IE"|"IM"|"IL"|"IT"|"JM"|"JP"|"JE"|"JO"|"KZ"|"KE"|"KI"|"KP"|"KR"|"KW"|"KG"|"LA"|"LV"|"LB"|"LS"|"LR"|"LY"|"LI"|"LT"|"LU"|"MO"|"MK"|"MG"|"MW"|"MY"|"MV"|"ML"|"MT"|"MH"|"MQ"|"MR"|"MU"|"YT"|"MX"|"FM"|"MD"|"MC"|"MN"|"ME"|"MS"|"MA"|"MZ"|"MM"|"NA"|"NR"|"NP"|"NL"|"NC"|"NZ"|"NI"|"NE"|"NG"|"NU"|"NF"|"MP"|"NO"|"OM"|"PK"|"PW"|"PS"|"PA"|"PG"|"PY"|"PE"|"PH"|"PN"|"PL"|"PT"|"PR"|"QA"|"RE"|"RO"|"RU"|"RW"|"BL"|"SH"|"KN"|"LC"|"MF"|"PM"|"VC"|"WS"|"SM"|"ST"|"SA"|"SN"|"RS"|"SC"|"SL"|"SG"|"SX"|"SK"|"SI"|"SB"|"SO"|"ZA"|"GS"|"SS"|"ES"|"LK"|"SD"|"SR"|"SJ"|"SZ"|"SE"|"CH"|"SY"|"TW"|"TJ"|"TZ"|"TH"|"TL"|"TG"|"TK"|"TO"|"TT"|"TN"|"TR"|"TM"|"TC"|"TV"|"UG"|"UA"|"AE"|"GB"|"US"|"UM"|"UY"|"UZ"|"VU"|"VE"|"VN"|"VG"|"VI"|"WF"|"EH"|"YE"|"ZM"|"ZW", ...],
                      "ForwardedIPConfig": {
                        "HeaderName": "string",
                        "FallbackBehavior": "MATCH"|"NO_MATCH"
                      }
                    },
                    "RuleGroupReferenceStatement": {
                      "ARN": "string",
                      "ExcludedRules": [
                        {
                          "Name": "string"
                        }
                        ...
                      ]
                    },
                    "IPSetReferenceStatement": {
                      "ARN": "string",
                      "IPSetForwardedIPConfig": {
                        "HeaderName": "string",
                        "FallbackBehavior": "MATCH"|"NO_MATCH",
                        "Position": "FIRST"|"LAST"|"ANY"
                      }
                    },
                    "RegexPatternSetReferenceStatement": {
                      "ARN": "string",
                      "FieldToMatch": {
                        "SingleHeader": {
                          "Name": "string"
                        },
                        "SingleQueryArgument": {
                          "Name": "string"
                        },
                        "AllQueryArguments": {

                        },
                        "UriPath": {

                        },
                        "QueryString": {

                        },
                        "Body": {

                        },
                        "Method": {

                        },
                        "JsonBody": {
                          "MatchPattern": {
                            "All": {

                            },
                            "IncludedPaths": ["string", ...]
                          },
                          "MatchScope": "ALL"|"KEY"|"VALUE",
                          "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                        }
                      },
                      "TextTransformations": [
                        {
                          "Priority": integer,
                          "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                        }
                        ...
                      ]
                    },
                    "RateBasedStatement": {
                      "Limit": long,
                      "AggregateKeyType": "IP"|"FORWARDED_IP",
                      "ScopeDownStatement": { ... recursive ... },
                      "ForwardedIPConfig": {
                        "HeaderName": "string",
                        "FallbackBehavior": "MATCH"|"NO_MATCH"
                      }
                    },
                    "AndStatement": {
                      "Statements": [
                        { ... recursive ... }
                        ...
                      ]
                    },
                    "OrStatement": {
                      "Statements": [
                        { ... recursive ... }
                        ...
                      ]
                    },
                    "NotStatement": {
                      "Statement": { ... recursive ... }
                    },
                    "ManagedRuleGroupStatement": {
                      "VendorName": "string",
                      "Name": "string",
                      "Version": "string",
                      "ExcludedRules": [
                        {
                          "Name": "string"
                        }
                        ...
                      ],
                      "ScopeDownStatement": { ... recursive ... }
                    },
                    "LabelMatchStatement": {
                      "Scope": "LABEL"|"NAMESPACE",
                      "Key": "string"
                    },
                    "RegexMatchStatement": {
                      "RegexString": "string",
                      "FieldToMatch": {
                        "SingleHeader": {
                          "Name": "string"
                        },
                        "SingleQueryArgument": {
                          "Name": "string"
                        },
                        "AllQueryArguments": {

                        },
                        "UriPath": {

                        },
                        "QueryString": {

                        },
                        "Body": {

                        },
                        "Method": {

                        },
                        "JsonBody": {
                          "MatchPattern": {
                            "All": {

                            },
                            "IncludedPaths": ["string", ...]
                          },
                          "MatchScope": "ALL"|"KEY"|"VALUE",
                          "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                        }
                      },
                      "TextTransformations": [
                        {
                          "Priority": integer,
                          "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                        }
                        ...
                      ]
                    }
                  }
                },
                "ManagedRuleGroupStatement": {
                  "VendorName": "string",
                  "Name": "string",
                  "Version": "string",
                  "ExcludedRules": [
                    {
                      "Name": "string"
                    }
                    ...
                  ],
                  "ScopeDownStatement": {
                    "ByteMatchStatement": {
                      "SearchString": blob,
                      "FieldToMatch": {
                        "SingleHeader": {
                          "Name": "string"
                        },
                        "SingleQueryArgument": {
                          "Name": "string"
                        },
                        "AllQueryArguments": {

                        },
                        "UriPath": {

                        },
                        "QueryString": {

                        },
                        "Body": {

                        },
                        "Method": {

                        },
                        "JsonBody": {
                          "MatchPattern": {
                            "All": {

                            },
                            "IncludedPaths": ["string", ...]
                          },
                          "MatchScope": "ALL"|"KEY"|"VALUE",
                          "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                        }
                      },
                      "TextTransformations": [
                        {
                          "Priority": integer,
                          "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                        }
                        ...
                      ],
                      "PositionalConstraint": "EXACTLY"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CONTAINS_WORD"
                    },
                    "SqliMatchStatement": {
                      "FieldToMatch": {
                        "SingleHeader": {
                          "Name": "string"
                        },
                        "SingleQueryArgument": {
                          "Name": "string"
                        },
                        "AllQueryArguments": {

                        },
                        "UriPath": {

                        },
                        "QueryString": {

                        },
                        "Body": {

                        },
                        "Method": {

                        },
                        "JsonBody": {
                          "MatchPattern": {
                            "All": {

                            },
                            "IncludedPaths": ["string", ...]
                          },
                          "MatchScope": "ALL"|"KEY"|"VALUE",
                          "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                        }
                      },
                      "TextTransformations": [
                        {
                          "Priority": integer,
                          "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                        }
                        ...
                      ]
                    },
                    "XssMatchStatement": {
                      "FieldToMatch": {
                        "SingleHeader": {
                          "Name": "string"
                        },
                        "SingleQueryArgument": {
                          "Name": "string"
                        },
                        "AllQueryArguments": {

                        },
                        "UriPath": {

                        },
                        "QueryString": {

                        },
                        "Body": {

                        },
                        "Method": {

                        },
                        "JsonBody": {
                          "MatchPattern": {
                            "All": {

                            },
                            "IncludedPaths": ["string", ...]
                          },
                          "MatchScope": "ALL"|"KEY"|"VALUE",
                          "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                        }
                      },
                      "TextTransformations": [
                        {
                          "Priority": integer,
                          "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                        }
                        ...
                      ]
                    },
                    "SizeConstraintStatement": {
                      "FieldToMatch": {
                        "SingleHeader": {
                          "Name": "string"
                        },
                        "SingleQueryArgument": {
                          "Name": "string"
                        },
                        "AllQueryArguments": {

                        },
                        "UriPath": {

                        },
                        "QueryString": {

                        },
                        "Body": {

                        },
                        "Method": {

                        },
                        "JsonBody": {
                          "MatchPattern": {
                            "All": {

                            },
                            "IncludedPaths": ["string", ...]
                          },
                          "MatchScope": "ALL"|"KEY"|"VALUE",
                          "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                        }
                      },
                      "ComparisonOperator": "EQ"|"NE"|"LE"|"LT"|"GE"|"GT",
                      "Size": long,
                      "TextTransformations": [
                        {
                          "Priority": integer,
                          "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                        }
                        ...
                      ]
                    },
                    "GeoMatchStatement": {
                      "CountryCodes": ["AF"|"AX"|"AL"|"DZ"|"AS"|"AD"|"AO"|"AI"|"AQ"|"AG"|"AR"|"AM"|"AW"|"AU"|"AT"|"AZ"|"BS"|"BH"|"BD"|"BB"|"BY"|"BE"|"BZ"|"BJ"|"BM"|"BT"|"BO"|"BQ"|"BA"|"BW"|"BV"|"BR"|"IO"|"BN"|"BG"|"BF"|"BI"|"KH"|"CM"|"CA"|"CV"|"KY"|"CF"|"TD"|"CL"|"CN"|"CX"|"CC"|"CO"|"KM"|"CG"|"CD"|"CK"|"CR"|"CI"|"HR"|"CU"|"CW"|"CY"|"CZ"|"DK"|"DJ"|"DM"|"DO"|"EC"|"EG"|"SV"|"GQ"|"ER"|"EE"|"ET"|"FK"|"FO"|"FJ"|"FI"|"FR"|"GF"|"PF"|"TF"|"GA"|"GM"|"GE"|"DE"|"GH"|"GI"|"GR"|"GL"|"GD"|"GP"|"GU"|"GT"|"GG"|"GN"|"GW"|"GY"|"HT"|"HM"|"VA"|"HN"|"HK"|"HU"|"IS"|"IN"|"ID"|"IR"|"IQ"|"IE"|"IM"|"IL"|"IT"|"JM"|"JP"|"JE"|"JO"|"KZ"|"KE"|"KI"|"KP"|"KR"|"KW"|"KG"|"LA"|"LV"|"LB"|"LS"|"LR"|"LY"|"LI"|"LT"|"LU"|"MO"|"MK"|"MG"|"MW"|"MY"|"MV"|"ML"|"MT"|"MH"|"MQ"|"MR"|"MU"|"YT"|"MX"|"FM"|"MD"|"MC"|"MN"|"ME"|"MS"|"MA"|"MZ"|"MM"|"NA"|"NR"|"NP"|"NL"|"NC"|"NZ"|"NI"|"NE"|"NG"|"NU"|"NF"|"MP"|"NO"|"OM"|"PK"|"PW"|"PS"|"PA"|"PG"|"PY"|"PE"|"PH"|"PN"|"PL"|"PT"|"PR"|"QA"|"RE"|"RO"|"RU"|"RW"|"BL"|"SH"|"KN"|"LC"|"MF"|"PM"|"VC"|"WS"|"SM"|"ST"|"SA"|"SN"|"RS"|"SC"|"SL"|"SG"|"SX"|"SK"|"SI"|"SB"|"SO"|"ZA"|"GS"|"SS"|"ES"|"LK"|"SD"|"SR"|"SJ"|"SZ"|"SE"|"CH"|"SY"|"TW"|"TJ"|"TZ"|"TH"|"TL"|"TG"|"TK"|"TO"|"TT"|"TN"|"TR"|"TM"|"TC"|"TV"|"UG"|"UA"|"AE"|"GB"|"US"|"UM"|"UY"|"UZ"|"VU"|"VE"|"VN"|"VG"|"VI"|"WF"|"EH"|"YE"|"ZM"|"ZW", ...],
                      "ForwardedIPConfig": {
                        "HeaderName": "string",
                        "FallbackBehavior": "MATCH"|"NO_MATCH"
                      }
                    },
                    "RuleGroupReferenceStatement": {
                      "ARN": "string",
                      "ExcludedRules": [
                        {
                          "Name": "string"
                        }
                        ...
                      ]
                    },
                    "IPSetReferenceStatement": {
                      "ARN": "string",
                      "IPSetForwardedIPConfig": {
                        "HeaderName": "string",
                        "FallbackBehavior": "MATCH"|"NO_MATCH",
                        "Position": "FIRST"|"LAST"|"ANY"
                      }
                    },
                    "RegexPatternSetReferenceStatement": {
                      "ARN": "string",
                      "FieldToMatch": {
                        "SingleHeader": {
                          "Name": "string"
                        },
                        "SingleQueryArgument": {
                          "Name": "string"
                        },
                        "AllQueryArguments": {

                        },
                        "UriPath": {

                        },
                        "QueryString": {

                        },
                        "Body": {

                        },
                        "Method": {

                        },
                        "JsonBody": {
                          "MatchPattern": {
                            "All": {

                            },
                            "IncludedPaths": ["string", ...]
                          },
                          "MatchScope": "ALL"|"KEY"|"VALUE",
                          "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                        }
                      },
                      "TextTransformations": [
                        {
                          "Priority": integer,
                          "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                        }
                        ...
                      ]
                    },
                    "RateBasedStatement": {
                      "Limit": long,
                      "AggregateKeyType": "IP"|"FORWARDED_IP",
                      "ScopeDownStatement": { ... recursive ... },
                      "ForwardedIPConfig": {
                        "HeaderName": "string",
                        "FallbackBehavior": "MATCH"|"NO_MATCH"
                      }
                    },
                    "AndStatement": {
                      "Statements": [
                        { ... recursive ... }
                        ...
                      ]
                    },
                    "OrStatement": {
                      "Statements": [
                        { ... recursive ... }
                        ...
                      ]
                    },
                    "NotStatement": {
                      "Statement": { ... recursive ... }
                    },
                    "ManagedRuleGroupStatement": {
                      "VendorName": "string",
                      "Name": "string",
                      "Version": "string",
                      "ExcludedRules": [
                        {
                          "Name": "string"
                        }
                        ...
                      ],
                      "ScopeDownStatement": { ... recursive ... }
                    },
                    "LabelMatchStatement": {
                      "Scope": "LABEL"|"NAMESPACE",
                      "Key": "string"
                    },
                    "RegexMatchStatement": {
                      "RegexString": "string",
                      "FieldToMatch": {
                        "SingleHeader": {
                          "Name": "string"
                        },
                        "SingleQueryArgument": {
                          "Name": "string"
                        },
                        "AllQueryArguments": {

                        },
                        "UriPath": {

                        },
                        "QueryString": {

                        },
                        "Body": {

                        },
                        "Method": {

                        },
                        "JsonBody": {
                          "MatchPattern": {
                            "All": {

                            },
                            "IncludedPaths": ["string", ...]
                          },
                          "MatchScope": "ALL"|"KEY"|"VALUE",
                          "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                        }
                      },
                      "TextTransformations": [
                        {
                          "Priority": integer,
                          "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                        }
                        ...
                      ]
                    }
                  }
                },
                "LabelMatchStatement": {
                  "Scope": "LABEL"|"NAMESPACE",
                  "Key": "string"
                },
                "RegexMatchStatement": {
                  "RegexString": "string",
                  "FieldToMatch": {
                    "SingleHeader": {
                      "Name": "string"
                    },
                    "SingleQueryArgument": {
                      "Name": "string"
                    },
                    "AllQueryArguments": {

                    },
                    "UriPath": {

                    },
                    "QueryString": {

                    },
                    "Body": {

                    },
                    "Method": {

                    },
                    "JsonBody": {
                      "MatchPattern": {
                        "All": {

                        },
                        "IncludedPaths": ["string", ...]
                      },
                      "MatchScope": "ALL"|"KEY"|"VALUE",
                      "InvalidFallbackBehavior": "MATCH"|"NO_MATCH"|"EVALUATE_AS_STRING"
                    }
                  },
                  "TextTransformations": [
                    {
                      "Priority": integer,
                      "Type": "NONE"|"COMPRESS_WHITE_SPACE"|"HTML_ENTITY_DECODE"|"LOWERCASE"|"CMD_LINE"|"URL_DECODE"|"BASE64_DECODE"|"HEX_DECODE"|"MD5"|"REPLACE_COMMENTS"|"ESCAPE_SEQ_DECODE"|"SQL_HEX_DECODE"|"CSS_DECODE"|"JS_DECODE"|"NORMALIZE_PATH"|"NORMALIZE_PATH_WIN"|"REMOVE_NULLS"|"REPLACE_NULLS"|"BASE64_DECODE_EXT"|"URL_DECODE_UNI"|"UTF8_TO_UNICODE"
                    }
                    ...
                  ]
                }
              },
              "Action": {
                "Block": {
                  "CustomResponse": {
                    "ResponseCode": integer,
                    "CustomResponseBodyKey": "string",
                    "ResponseHeaders": [
                      {
                        "Name": "string",
                        "Value": "string"
                      }
                      ...
                    ]
                  }
                },
                "Allow": {
                  "CustomRequestHandling": {
                    "InsertHeaders": [
                      {
                        "Name": "string",
                        "Value": "string"
                      }
                      ...
                    ]
                  }
                },
                "Count": {
                  "CustomRequestHandling": {
                    "InsertHeaders": [
                      {
                        "Name": "string",
                        "Value": "string"
                      }
                      ...
                    ]
                  }
                },
                "Captcha": {
                  "CustomRequestHandling": {
                    "InsertHeaders": [
                      {
                        "Name": "string",
                        "Value": "string"
                      }
                      ...
                    ]
                  }
                }
              },
              "OverrideAction": {
                "Count": {
                  "CustomRequestHandling": {
                    "InsertHeaders": [
                      {
                        "Name": "string",
                        "Value": "string"
                      }
                      ...
                    ]
                  }
                },
                "None": {

                }
              },
              "RuleLabels": [
                {
                  "Name": "string"
                }
                ...
              ],
              "VisibilityConfig": {
                "SampledRequestsEnabled": true|false,
                "CloudWatchMetricsEnabled": true|false,
                "MetricName": "string"
              },
              "CaptchaConfig": {
                "ImmunityTimeProperty": {
                  "ImmunityTime": long
                }
              }
            }
            ...
          ]

       --visibility-config (structure)
          Defines and enables Amazon CloudWatch metrics and web request sample
          collection.

          SampledRequestsEnabled -> (boolean)
              A boolean indicating whether WAF should store a sampling of  the
              web  requests  that  match  the  rules. You can view the sampled
              requests through the WAF console.

          CloudWatchMetricsEnabled -> (boolean)
              A boolean indicating whether the associated resource sends  met-
              rics  to  Amazon  CloudWatch. For the list of available metrics,
              see WAF Metrics .

          MetricName -> (string)
              A name of the Amazon CloudWatch metric.  The  name  can  contain
              only  the  characters:  A-Z, a-z, 0-9, - (hyphen), and _ (under-
              score). The name can be from one  to  128  characters  long.  It
              can't  contain  whitespace or metric names reserved for WAF, for
              example "All" and "Default_Action."

       Shorthand Syntax:

          SampledRequestsEnabled=boolean,CloudWatchMetricsEnabled=boolean,MetricName=string

       JSON Syntax:

          {
            "SampledRequestsEnabled": true|false,
            "CloudWatchMetricsEnabled": true|false,
            "MetricName": "string"
          }

       --lock-token (string)
          A token used for optimistic locking. WAF returns a token to your get
          and  list  requests,  to mark the state of the entity at the time of
          the request. To make changes  to  the  entity  associated  with  the
          token,  you provide the token to operations like update and delete .
          WAF uses the token to ensure that no changes have been made  to  the
          entity  since  you last retrieved it. If a change has been made, the
          update fails with a WAFOptimisticLockException .  If  this  happens,
          perform  another get , and use the new token returned by that opera-
          tion.

       --custom-response-bodies (map)
          A map of custom response keys and content bodies. When you create  a
          rule  with a block action, you can send a custom response to the web
          request. You define these for the rule group, and then use  them  in
          the rules that you define in the rule group.

          For  information  about  customizing web requests and responses, see
          Customizing web requests and responses in WAF in the  WAF  Developer
          Guide .

          For  information  about  the  limits  on  count  and size for custom
          request and response settings, see WAF quotas in the  WAF  Developer
          Guide .

          key -> (string)

          value -> (structure)
              The  response body to use in a custom response to a web request.
              This is referenced by key from  CustomResponse   CustomResponse-
              BodyKey .

              ContentType -> (string)
                 The  type  of content in the payload that you are defining in
                 the Content string.

              Content -> (string)
                 The payload of the custom response.

                 You can use JSON escape strings in JSON content. To do  this,
                 you must specify JSON content in the ContentType setting.

                 For information about the limits on count and size for custom
                 request and response settings, see  WAF  quotas  in  the  WAF
                 Developer Guide .

       Shorthand Syntax:

          KeyName1=ContentType=string,Content=string,KeyName2=ContentType=string,Content=string

       JSON Syntax:

          {"string": {
                "ContentType": "TEXT_PLAIN"|"TEXT_HTML"|"APPLICATION_JSON",
                "Content": "string"
              }
            ...}

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To update a custom rule group

       The  following  update-rule-group  changes the visibility configuration
       for an existing custom rule group. This call requires an ID, which  you
       can  obtain from the call, list-rule-groups, and a lock token which you
       can obtain from the calls, list-rule-groups  and  get-rule-group.  This
       call  also  returns  a  lock  token  that  you can use for a subsequent
       update.

          aws wafv2 update-rule-group \
              --name TestRuleGroup \
              --scope REGIONAL \
              --id a1b2c3d4-5678-90ab-cdef-EXAMPLE11111 \
              --lock-token 7b3bcec2-0000-0000-0000-563bf47249f0 \
              --visibility-config SampledRequestsEnabled=false,CloudWatchMetricsEnabled=false,MetricName=TestMetricsForRuleGroup \
              --region us-west-2

       Output:

          {
              "NextLockToken": "1eb5ec48-0000-0000-0000-ee9b906c541e"
          }

       For more information, see Managing Your Own Rule Groups in the AWS WAF,
       AWS Firewall Manager, and AWS Shield Advanced Developer Guide.

OUTPUT
       NextLockToken -> (string)
          A  token used for optimistic locking. WAF returns this token to your
          update requests. You use NextLockToken in the same manner as you use
          LockToken .



                                                           UPDATE-RULE-GROUP()
