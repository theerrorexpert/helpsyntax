CREATE-ROBOT-APPLICATION-VERSION()          CREATE-ROBOT-APPLICATION-VERSION()



NAME
       create-robot-application-version -

DESCRIPTION
       Creates a version of a robot application.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-robot-application-version
          --application <value>
          [--current-revision-id <value>]
          [--s3-etags <value>]
          [--image-digest <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --application (string)
          The application information for the robot application.

       --current-revision-id (string)
          The  current revision id for the robot application. If you provide a
          value and it matches the latest revision ID, a new version  will  be
          created.

       --s3-etags (list)
          The  Amazon  S3  identifier for the zip file bundle that you use for
          your robot application.

          (string)

       Syntax:

          "string" "string" ...

       --image-digest (string)
          A SHA256 identifier for the Docker image that you use for your robot
          application.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a robot application version

       This example creates a robot application version.

       Command:

          aws robomaker create-robot-application-version --application arn:aws:robomaker:us-west-2:111111111111:robot-application/MyRobotApplication/1551201873931

       Output:

          {
            "arn": "arn:aws:robomaker:us-west-2:111111111111:robot-application/MyRobotApplication/1551201873931",
            "name": "MyRobotApplication",
            "version": "1",
            "sources": [
                {
                    "s3Bucket": "my-bucket",
                    "s3Key": "my-robot-application.tar.gz",
                    "etag": "f8cf5526f1c6e7b3a72c3ed3f79c5493-70",
                    "architecture": "ARMHF"
                }
            ],
            "robotSoftwareSuite": {
                "name": "ROS",
                "version": "Kinetic"
            },
            "lastUpdatedAt": 1551201873.0,
            "revisionId": "9986bb8d-a695-4ab4-8810-9f4a74d1aa00"
            "tags": {}
          }

OUTPUT
       arn -> (string)
          The Amazon Resource Name (ARN) of the robot application.

       name -> (string)
          The name of the robot application.

       version -> (string)
          The version of the robot application.

       sources -> (list)
          The sources of the robot application.

          (structure)
              Information about a source.

              s3Bucket -> (string)
                 The s3 bucket name.

              s3Key -> (string)
                 The s3 object key.

              etag -> (string)
                 A hash of the object specified by s3Bucket and s3Key .

              architecture -> (string)
                 The taget processor architecture for the application.

       robotSoftwareSuite -> (structure)
          The robot software suite (ROS distribution) used by the robot appli-
          cation.

          name -> (string)
              The name of the robot software suite (ROS distribution).

          version -> (string)
              The version of the robot software suite (ROS distribution).

       lastUpdatedAt -> (timestamp)
          The time, in milliseconds since the epoch, when the  robot  applica-
          tion was last updated.

       revisionId -> (string)
          The revision id of the robot application.

       environment -> (structure)
          The  object  that  contains the Docker image URI used to create your
          robot application.

          uri -> (string)
              The Docker image URI for either your robot or simulation  appli-
              cations.



                                            CREATE-ROBOT-APPLICATION-VERSION()
