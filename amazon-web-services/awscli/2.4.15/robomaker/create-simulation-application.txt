CREATE-SIMULATION-APPLICATION()                CREATE-SIMULATION-APPLICATION()



NAME
       create-simulation-application -

DESCRIPTION
       Creates a simulation application.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-simulation-application
          --name <value>
          [--sources <value>]
          --simulation-software-suite <value>
          --robot-software-suite <value>
          [--rendering-engine <value>]
          [--tags <value>]
          [--environment <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --name (string)
          The name of the simulation application.

       --sources (list)
          The sources of the simulation application.

          (structure)
              Information about a source configuration.

              s3Bucket -> (string)
                 The Amazon S3 bucket name.

              s3Key -> (string)
                 The s3 object key.

              architecture -> (string)
                 The target processor architecture for the application.

       Shorthand Syntax:

          s3Bucket=string,s3Key=string,architecture=string ...

       JSON Syntax:

          [
            {
              "s3Bucket": "string",
              "s3Key": "string",
              "architecture": "X86_64"|"ARM64"|"ARMHF"
            }
            ...
          ]

       --simulation-software-suite (structure)
          The simulation software suite used by the simulation application.

          name -> (string)
              The name of the simulation software suite.

          version -> (string)
              The version of the simulation software suite.

       Shorthand Syntax:

          name=string,version=string

       JSON Syntax:

          {
            "name": "Gazebo"|"RosbagPlay"|"SimulationRuntime",
            "version": "string"
          }

       --robot-software-suite (structure)
          The  robot  software suite (ROS distribution) used by the simulation
          application.

          name -> (string)
              The name of the robot software suite (ROS distribution).

          version -> (string)
              The version of the robot software suite (ROS distribution).

       Shorthand Syntax:

          name=string,version=string

       JSON Syntax:

          {
            "name": "ROS"|"ROS2"|"General",
            "version": "Kinetic"|"Melodic"|"Dashing"|"Foxy"
          }

       --rendering-engine (structure)
          The rendering engine for the simulation application.

          name -> (string)
              The name of the rendering engine.

          version -> (string)
              The version of the rendering engine.

       Shorthand Syntax:

          name=string,version=string

       JSON Syntax:

          {
            "name": "OGRE",
            "version": "string"
          }

       --tags (map)
          A map that contains tag keys and tag values that are attached to the
          simulation application.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --environment (structure)
          The  object  that  contains the Docker image URI used to create your
          simulation application.

          uri -> (string)
              The Docker image URI for either your robot or simulation  appli-
              cations.

       Shorthand Syntax:

          uri=string

       JSON Syntax:

          {
            "uri": "string"
          }

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a simulation application

       This example creates a simulation application.

       Command:

          aws robomaker create-simulation-application  --name MyRobotApplication --sources s3Bucket=my-bucket,s3Key=my-simulation-application.tar.gz,architecture=ARMHF --robot-software-suite name=ROS,version=Kinetic --simulation-software-suite name=Gazebo,version=7 --rendering-engine name=OGRE,version=1.x

       Output:

          {
            "arn": "arn:aws:robomaker:us-west-2:111111111111:simulation-application/MyRobotApplication/1551203301792",
            "name": "MyRobotApplication",
            "version": "$LATEST",
            "sources": [
                {
                    "s3Bucket": "my-bucket",
                    "s3Key": "my-simulation-application.tar.gz",
                    "architecture": "X86_64"
                }
            ],
            "simulationSoftwareSuite": {
                "name": "Gazebo",
                "version": "7"
            },
            "robotSoftwareSuite": {
                "name": "ROS",
                "version": "Kinetic"
            },
            "renderingEngine": {
                "name": "OGRE",
                "version": "1.x"
            },
            "lastUpdatedAt": 1551203301.0,
            "revisionId": "ee753e53-519c-4d37-895d-65e79bcd1914",
            "tags": {}
          }

OUTPUT
       arn -> (string)
          The Amazon Resource Name (ARN) of the simulation application.

       name -> (string)
          The name of the simulation application.

       version -> (string)
          The version of the simulation application.

       sources -> (list)
          The sources of the simulation application.

          (structure)
              Information about a source.

              s3Bucket -> (string)
                 The s3 bucket name.

              s3Key -> (string)
                 The s3 object key.

              etag -> (string)
                 A hash of the object specified by s3Bucket and s3Key .

              architecture -> (string)
                 The taget processor architecture for the application.

       simulationSoftwareSuite -> (structure)
          The simulation software suite used by the simulation application.

          name -> (string)
              The name of the simulation software suite.

          version -> (string)
              The version of the simulation software suite.

       robotSoftwareSuite -> (structure)
          Information about the robot software suite (ROS distribution).

          name -> (string)
              The name of the robot software suite (ROS distribution).

          version -> (string)
              The version of the robot software suite (ROS distribution).

       renderingEngine -> (structure)
          The rendering engine for the simulation application.

          name -> (string)
              The name of the rendering engine.

          version -> (string)
              The version of the rendering engine.

       lastUpdatedAt -> (timestamp)
          The  time,  in  milliseconds  since  the  epoch, when the simulation
          application was last updated.

       revisionId -> (string)
          The revision id of the simulation application.

       tags -> (map)
          The list of all tags added to the simulation application.

          key -> (string)

          value -> (string)

       environment -> (structure)
          The object that contains the Docker image URI that you used to  cre-
          ate your simulation application.

          uri -> (string)
              The  Docker image URI for either your robot or simulation appli-
              cations.



                                               CREATE-SIMULATION-APPLICATION()
