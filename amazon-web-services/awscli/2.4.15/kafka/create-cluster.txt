CREATE-CLUSTER()                                              CREATE-CLUSTER()



NAME
       create-cluster -

DESCRIPTION
       Creates a new MSK cluster.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-cluster
          --broker-node-group-info <value>
          [--client-authentication <value>]
          --cluster-name <value>
          [--configuration-info <value>]
          [--encryption-info <value>]
          [--enhanced-monitoring <value>]
          [--open-monitoring <value>]
          --kafka-version <value>
          [--logging-info <value>]
          --number-of-broker-nodes <value>
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --broker-node-group-info (structure)
          Information about the broker nodes in the cluster.
              BrokerAZDistribution -> (string)
                 The  distribution  of broker nodes across Availability Zones.
                 This is an optional parameter. If you don't specify it,  Ama-
                 zon  MSK  gives it the value DEFAULT. You can also explicitly
                 set this parameter to the value DEFAULT. No other values  are
                 currently allowed.

                 Amazon  MSK  distributes  the  broker nodes evenly across the
                 Availability Zones that correspond to the subnets you provide
                 when you create the cluster.

          ClientSubnets -> (list)
              The  list of subnets to connect to in the client virtual private
              cloud (VPC). AWS creates elastic network interfaces inside these
              subnets.  Client  applications use elastic network interfaces to
              produce and consume data. Client subnets can't be in  Availabil-
              ity Zone us-east-1e.

              (string)

          InstanceType -> (string)
              The  type  of  Amazon EC2 instances to use for Apache Kafka bro-
              kers. The following instance types are allowed:  kafka.m5.large,
              kafka.m5.xlarge,       kafka.m5.2xlarge,       kafka.m5.4xlarge,
              kafka.m5.12xlarge, and kafka.m5.24xlarge.

          SecurityGroups -> (list)
              The AWS security groups to associate with  the  elastic  network
              interfaces  in  order to specify who can connect to and communi-
              cate with the Amazon MSK cluster. If you don't specify  a  secu-
              rity  group,  Amazon MSK uses the default security group associ-
              ated with the VPC.

              (string)

          StorageInfo -> (structure)
              Contains information about storage volumes attached to MSK  bro-
              ker nodes.

              EbsStorageInfo -> (structure)
                 EBS volume information.

                 ProvisionedThroughput -> (structure)
                     EBS volume provisioned throughput information.

                     Enabled -> (boolean)
                        Provisioned throughput is enabled or not.

                     VolumeThroughput -> (integer)
                        Throughput value of the EBS volumes for the data drive
                        on each kafka broker node in MiB per second.

                 VolumeSize -> (integer)
                     The size in GiB of the EBS volume for the data  drive  on
                     each broker node.

          ConnectivityInfo -> (structure)
              Information about the broker access configuration.

              PublicAccess -> (structure)
                 Public access control for brokers.

                 Type -> (string)
                     The value DISABLED indicates that public access is turned
                     off. SERVICE_PROVIDED_EIPS indicates that  public  access
                     is turned on.

       JSON Syntax:

          {
            "BrokerAZDistribution": "DEFAULT",
            "ClientSubnets": ["string", ...],
            "InstanceType": "string",
            "SecurityGroups": ["string", ...],
            "StorageInfo": {
              "EbsStorageInfo": {
                "ProvisionedThroughput": {
                  "Enabled": true|false,
                  "VolumeThroughput": integer
                },
                "VolumeSize": integer
              }
            },
            "ConnectivityInfo": {
              "PublicAccess": {
                "Type": "string"
              }
            }
          }

       --client-authentication (structure)
          Includes all client authentication related information.
              Sasl -> (structure)
                 Details for ClientAuthentication using SASL.

                 Scram -> (structure)
                     Details for SASL/SCRAM client authentication.

                     Enabled -> (boolean)
                        SASL/SCRAM authentication is enabled or not.

                 Iam -> (structure)
                     Indicates whether IAM access control is enabled.

                     Enabled -> (boolean)
                        Indicates whether IAM access control is enabled.

          Tls -> (structure)
              Details for ClientAuthentication using TLS.

              CertificateAuthorityArnList -> (list)
                 List of ACM Certificate Authority ARNs.

                 (string)

              Enabled -> (boolean)
                 Specifies whether you want to turn on or turn off TLS authen-
                 tication.

          Unauthenticated -> (structure)
              Contains information about unauthenticated traffic to the  clus-
              ter.

              Enabled -> (boolean)
                 Specifies whether you want to turn on or turn off unauthenti-
                 cated traffic to your cluster.

       Shorthand Syntax:

          Sasl={Scram={Enabled=boolean},Iam={Enabled=boolean}},Tls={CertificateAuthorityArnList=[string,string],Enabled=boolean},Unauthenticated={Enabled=boolean}

       JSON Syntax:

          {
            "Sasl": {
              "Scram": {
                "Enabled": true|false
              },
              "Iam": {
                "Enabled": true|false
              }
            },
            "Tls": {
              "CertificateAuthorityArnList": ["string", ...],
              "Enabled": true|false
            },
            "Unauthenticated": {
              "Enabled": true|false
            }
          }

       --cluster-name (string)
          The name of the cluster.

       --configuration-info (structure)
          Represents the configuration that you want MSK to use for  the  bro-
          kers in a cluster.
              Arn -> (string)
                 ARN of the configuration to use.

          Revision -> (long)
              The revision of the configuration to use.

       Shorthand Syntax:

          Arn=string,Revision=long

       JSON Syntax:

          {
            "Arn": "string",
            "Revision": long
          }

       --encryption-info (structure)
          Includes all encryption-related information.
              EncryptionAtRest -> (structure)
                 The data-volume encryption details.

                 DataVolumeKMSKeyId -> (string)
                     The  ARN  of the AWS KMS key for encrypting data at rest.
                     If you don't specify a KMS key, MSK creates one  for  you
                     and uses it.

          EncryptionInTransit -> (structure)
              The details for encryption in transit.

              ClientBroker -> (string)
                 Indicates  the encryption setting for data in transit between
                 clients and brokers. The following are the possible values.

                 TLS means that client-broker communication  is  enabled  with
                 TLS only.

                 TLS_PLAINTEXT   means  that  client-broker  communication  is
                 enabled for both TLS-encrypted, as well as plaintext data.

                 PLAINTEXT means that client-broker communication  is  enabled
                 in plaintext only.

                 The default value is TLS_PLAINTEXT.

              InCluster -> (boolean)
                 When  set to true, it indicates that data communication among
                 the broker nodes of the cluster is  encrypted.  When  set  to
                 false, the communication happens in plaintext.

                 The default value is true.

       Shorthand Syntax:

          EncryptionAtRest={DataVolumeKMSKeyId=string},EncryptionInTransit={ClientBroker=string,InCluster=boolean}

       JSON Syntax:

          {
            "EncryptionAtRest": {
              "DataVolumeKMSKeyId": "string"
            },
            "EncryptionInTransit": {
              "ClientBroker": "TLS"|"TLS_PLAINTEXT"|"PLAINTEXT",
              "InCluster": true|false
            }
          }

       --enhanced-monitoring (string)
          Specifies  the level of monitoring for the MSK cluster. The possible
          values   are   DEFAULT,   PER_BROKER,   PER_TOPIC_PER_BROKER,    and
          PER_TOPIC_PER_PARTITION.

          Possible values:

          o DEFAULT

          o PER_BROKER

          o PER_TOPIC_PER_BROKER

          o PER_TOPIC_PER_PARTITION

       --open-monitoring (structure)
          The settings for open monitoring.
              Prometheus -> (structure)
                 Prometheus settings.

                 JmxExporter -> (structure)
                     Indicates whether you want to turn on or turn off the JMX
                     Exporter.

                     EnabledInBroker -> (boolean)
                        Indicates whether you want to turn on or turn off  the
                        JMX Exporter.

                 NodeExporter -> (structure)
                     Indicates  whether  you  want  to turn on or turn off the
                     Node Exporter.

                     EnabledInBroker -> (boolean)
                        Indicates whether you want to turn on or turn off  the
                        Node Exporter.

       Shorthand Syntax:

          Prometheus={JmxExporter={EnabledInBroker=boolean},NodeExporter={EnabledInBroker=boolean}}

       JSON Syntax:

          {
            "Prometheus": {
              "JmxExporter": {
                "EnabledInBroker": true|false
              },
              "NodeExporter": {
                "EnabledInBroker": true|false
              }
            }
          }

       --kafka-version (string)
          The version of Apache Kafka.

       --logging-info (structure) BrokerLogs -> (structure)
          CloudWatchLogs -> (structure)
              Enabled -> (boolean)

              LogGroup -> (string)

          Firehose -> (structure)
              DeliveryStream -> (string)

              Enabled -> (boolean)

          S3 -> (structure)
              Bucket -> (string)

              Enabled -> (boolean)

              Prefix -> (string)

       Shorthand Syntax:

          BrokerLogs={CloudWatchLogs={Enabled=boolean,LogGroup=string},Firehose={DeliveryStream=string,Enabled=boolean},S3={Bucket=string,Enabled=boolean,Prefix=string}}

       JSON Syntax:

          {
            "BrokerLogs": {
              "CloudWatchLogs": {
                "Enabled": true|false,
                "LogGroup": "string"
              },
              "Firehose": {
                "DeliveryStream": "string",
                "Enabled": true|false
              },
              "S3": {
                "Bucket": "string",
                "Enabled": true|false,
                "Prefix": "string"
              }
            }
          }

       --number-of-broker-nodes (integer)
          The number of broker nodes in the cluster.

       --tags (map)
          Create tags when creating the cluster.
              key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create an Amazon MSK cluster

       The  following create-cluster example creates an MSK cluster named Mes-
       sagingCluster with three broker nodes. A JSON  file  named  brokernode-
       groupinfo.json  specifies  the three subnets over which you want Amazon
       MSK to distribute the broker nodes. This example  doesn't  specify  the
       monitoring level, so the cluster gets the DEFAULT level.

          aws kafka create-cluster \
              --cluster-name "MessagingCluster" \
              --broker-node-group-info file://brokernodegroupinfo.json \
              --kafka-version "2.2.1" \
              --number-of-broker-nodes 3

       Contents of brokernodegroupinfo.json:

          {
              "InstanceType": "kafka.m5.xlarge",
              "BrokerAZDistribution": "DEFAULT",
              "ClientSubnets": [
                  "subnet-0123456789111abcd",
                  "subnet-0123456789222abcd",
                  "subnet-0123456789333abcd"
              ]
          }

       Output:

          {
              "ClusterArn": "arn:aws:kafka:us-west-2:123456789012:cluster/MessagingCluster/a1b2c3d4-5678-90ab-cdef-11111EXAMPLE-2",
              "ClusterName": "MessagingCluster",
              "State": "CREATING"
          }

       For  more  information,  see Create an Amazon MSK Cluster in the Amazon
       Managed Streaming for Apache Kafka.

OUTPUT
       ClusterArn -> (string)
          The Amazon Resource Name (ARN) of the cluster.

       ClusterName -> (string)
          The name of the MSK cluster.

       State -> (string)
          The state of the cluster. The possible states are ACTIVE,  CREATING,
          DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and UPDAT-
          ING.



                                                              CREATE-CLUSTER()
