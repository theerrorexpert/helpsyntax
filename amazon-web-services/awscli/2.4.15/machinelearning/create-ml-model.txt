CREATE-ML-MODEL()                                            CREATE-ML-MODEL()



NAME
       create-ml-model -

DESCRIPTION
       Creates  a  new MLModel using the DataSource and the recipe as informa-
       tion sources.

       An MLModel is nearly immutable. Users can update only  the  MLModelName
       and the ScoreThreshold in an MLModel without creating a new MLModel .
          CreateMLModel  is  an  asynchronous  operation.  In response to Cre-
          ateMLModel , Amazon Machine Learning (Amazon ML) immediately returns
          and  sets the MLModel status to PENDING . After the MLModel has been
          created and ready is for use, Amazon ML sets the status to COMPLETED
          .

       You  can  use  the  GetMLModel  operation  to check the progress of the
       MLModel during the creation operation.
          CreateMLModel requires a DataSource with computed statistics,  which
          can  be  created by setting ComputeStatistics to true in CreateData-
          SourceFromRDS , CreateDataSourceFromS3 , or CreateDataSourceFromRed-
          shift operations.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-ml-model
          --ml-model-id <value>
          [--ml-model-name <value>]
          --ml-model-type <value>
          [--parameters <value>]
          --training-data-source-id <value>
          [--recipe <value>]
          [--recipe-uri <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --ml-model-id (string)
          A user-supplied ID that uniquely identifies the MLModel .

       --ml-model-name (string)
          A user-supplied name or description of the MLModel .

       --ml-model-type (string)
          The  category of supervised learning that this MLModel will address.
          Choose from the following types:

          o Choose REGRESSION if the MLModel will be used to predict a numeric
            value.

          o Choose BINARY if the MLModel result has two possible values.

          o Choose  MULTICLASS  if  the MLModel result has a limited number of
            values.

          For more information, see  the  Amazon  Machine  Learning  Developer
          Guide .

          Possible values:

          o REGRESSION

          o BINARY

          o MULTICLASS

       --parameters (map)
          A  list  of  the  training  parameters  in the MLModel . The list is
          implemented as a map of key-value pairs.

          The following is the current set of training parameters:

          o sgd.maxMLModelSizeInBytes - The maximum allowed size of the model.
            Depending  on  the  input data, the size of the model might affect
            its performance. The value is an integer that ranges  from  100000
            to 2147483648 . The default value is 33554432 .

          o sgd.maxPasses - The number of times that the training process tra-
            verses the observations to build the MLModel .  The  value  is  an
            integer that ranges from 1 to 10000 . The default value is 10 .

          o sgd.shuffleType  -  Whether  Amazon ML shuffles the training data.
            Shuffling the data improves a model's ability to find the  optimal
            solution  for  a  variety of data types. The valid values are auto
            and none . The default value is none . We strongly recommend  that
            you shuffle your data.

          o sgd.l1RegularizationAmount  -  The  coefficient  regularization L1
            norm. It controls overfitting the data by penalizing large coeffi-
            cients.  This  tends to drive coefficients to zero, resulting in a
            sparse feature set. If you use this parameter, start by specifying
            a small value, such as 1.0E-08 . The value is a double that ranges
            from 0 to MAX_DOUBLE . The default is to not use L1 normalization.
            This parameter can't be used when L2 is specified. Use this param-
            eter sparingly.

          o sgd.l2RegularizationAmount -  The  coefficient  regularization  L2
            norm. It controls overfitting the data by penalizing large coeffi-
            cients. This tends to drive coefficients to small, nonzero values.
            If you use this parameter, start by specifying a small value, such
            as 1.0E-08 . The value is a double that ranges from 0 to  MAX_DOU-
            BLE  .  The default is to not use L2 normalization. This parameter
            can't be used when L1 is specified. Use this parameter  sparingly.

          key -> (string)
              String type.

          value -> (string)
              String type.

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --training-data-source-id (string)
          The DataSource that points to the training data.

       --recipe (string)
          The  data  recipe for creating the MLModel . You must specify either
          the recipe or its URI. If you don't specify a  recipe  or  its  URI,
          Amazon ML creates a default.

       --recipe-uri (string)
          The Amazon Simple Storage Service (Amazon S3) location and file name
          that contains the MLModel recipe. You must specify either the recipe
          or its URI. If you don't specify a recipe or its URI, Amazon ML cre-
          ates a default.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       MLModelId -> (string)
          A user-supplied ID that uniquely identifies the MLModel . This value
          should be identical to the value of the MLModelId in the request.



                                                             CREATE-ML-MODEL()
