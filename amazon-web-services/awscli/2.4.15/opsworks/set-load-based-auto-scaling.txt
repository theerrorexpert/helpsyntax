SET-LOAD-BASED-AUTO-SCALING()                    SET-LOAD-BASED-AUTO-SCALING()



NAME
       set-load-based-auto-scaling -

DESCRIPTION
       Specify  the  load-based  auto  scaling  configuration  for a specified
       layer. For more information, see  Managing  Load  with  Time-based  and
       Load-based Instances .

       NOTE:
              To  use  load-based  auto  scaling,  you  must  create  a set of
              load-based auto scaling instances. Load-based auto scaling oper-
              ates  only  on  the  instances from that set, so you must ensure
              that you have created enough instances  to  handle  the  maximum
              anticipated load.

          Required  Permissions  : To use this action, an IAM user must have a
          Manage permissions level for the stack, or an attached  policy  that
          explicitly  grants permissions. For more information on user permis-
          sions, see Managing User Permissions .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            set-load-based-auto-scaling
          --layer-id <value>
          [--enable | --no-enable]
          [--up-scaling <value>]
          [--down-scaling <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --layer-id (string)
          The layer ID.

       --enable | --no-enable (boolean)
          Enables load-based auto scaling for the layer.

       --up-scaling (structure)
          An AutoScalingThresholds object with the upscaling threshold config-
          uration. If the load exceeds these thresholds for a specified amount
          of time, AWS OpsWorks Stacks starts a specified number of instances.

          InstanceCount -> (integer)
              The number of instances to add or remove when the load exceeds a
              threshold.

          ThresholdsWaitTime -> (integer)
              The amount of time, in minutes, that  the  load  must  exceed  a
              threshold before more instances are added or removed.

          IgnoreMetricsTime -> (integer)
              The  amount  of  time  (in minutes) after a scaling event occurs
              that AWS OpsWorks Stacks  should  ignore  metrics  and  suppress
              additional scaling events. For example, AWS OpsWorks Stacks adds
              new instances following an upscaling  event  but  the  instances
              won't  start  reducing  the load until they have been booted and
              configured. There is no  point  in  raising  additional  scaling
              events during that operation, which typically takes several min-
              utes. IgnoreMetricsTime allows you to direct AWS OpsWorks Stacks
              to  suppress scaling events long enough to get the new instances
              online.

          CpuThreshold -> (double)
              The CPU utilization threshold, as a  percent  of  the  available
              CPU. A value of -1 disables the threshold.

          MemoryThreshold -> (double)
              The  memory utilization threshold, as a percent of the available
              memory. A value of -1 disables the threshold.

          LoadThreshold -> (double)
              The load threshold. A value of -1 disables  the  threshold.  For
              more  information  about how load is computed, see Load (comput-
              ing) .

          Alarms -> (list)
              Custom Cloudwatch auto scaling alarms, to be used as thresholds.
              This parameter takes a list of up to five alarm names, which are
              case sensitive and must be in the same region as the stack.

              NOTE:
                 To use custom alarms, you must update your  service  role  to
                 allow  cloudwatch:DescribeAlarms  .  You  can either have AWS
                 OpsWorks Stacks update the role for you when  you  first  use
                 this  feature  or  you  can  edit the role manually. For more
                 information, see Allowing AWS OpsWorks Stacks to Act on  Your
                 Behalf .

              (string)

       Shorthand Syntax:

          InstanceCount=integer,ThresholdsWaitTime=integer,IgnoreMetricsTime=integer,CpuThreshold=double,MemoryThreshold=double,LoadThreshold=double,Alarms=string,string

       JSON Syntax:

          {
            "InstanceCount": integer,
            "ThresholdsWaitTime": integer,
            "IgnoreMetricsTime": integer,
            "CpuThreshold": double,
            "MemoryThreshold": double,
            "LoadThreshold": double,
            "Alarms": ["string", ...]
          }

       --down-scaling (structure)
          An  AutoScalingThresholds object with the downscaling threshold con-
          figuration. If the load falls below these thresholds for a specified
          amount  of  time,  AWS  OpsWorks  Stacks stops a specified number of
          instances.

          InstanceCount -> (integer)
              The number of instances to add or remove when the load exceeds a
              threshold.

          ThresholdsWaitTime -> (integer)
              The  amount  of  time,  in  minutes, that the load must exceed a
              threshold before more instances are added or removed.

          IgnoreMetricsTime -> (integer)
              The amount of time (in minutes) after  a  scaling  event  occurs
              that  AWS  OpsWorks  Stacks  should  ignore metrics and suppress
              additional scaling events. For example, AWS OpsWorks Stacks adds
              new  instances  following  an  upscaling event but the instances
              won't start reducing the load until they have  been  booted  and
              configured.  There  is  no  point  in raising additional scaling
              events during that operation, which typically takes several min-
              utes. IgnoreMetricsTime allows you to direct AWS OpsWorks Stacks
              to suppress scaling events long enough to get the new  instances
              online.

          CpuThreshold -> (double)
              The  CPU  utilization  threshold,  as a percent of the available
              CPU. A value of -1 disables the threshold.

          MemoryThreshold -> (double)
              The memory utilization threshold, as a percent of the  available
              memory. A value of -1 disables the threshold.

          LoadThreshold -> (double)
              The  load  threshold.  A value of -1 disables the threshold. For
              more information about how load is computed, see  Load  (comput-
              ing) .

          Alarms -> (list)
              Custom Cloudwatch auto scaling alarms, to be used as thresholds.
              This parameter takes a list of up to five alarm names, which are
              case sensitive and must be in the same region as the stack.

              NOTE:
                 To  use  custom  alarms, you must update your service role to
                 allow cloudwatch:DescribeAlarms . You  can  either  have  AWS
                 OpsWorks  Stacks  update  the role for you when you first use
                 this feature or you can edit  the  role  manually.  For  more
                 information,  see Allowing AWS OpsWorks Stacks to Act on Your
                 Behalf .

              (string)

       Shorthand Syntax:

          InstanceCount=integer,ThresholdsWaitTime=integer,IgnoreMetricsTime=integer,CpuThreshold=double,MemoryThreshold=double,LoadThreshold=double,Alarms=string,string

       JSON Syntax:

          {
            "InstanceCount": integer,
            "ThresholdsWaitTime": integer,
            "IgnoreMetricsTime": integer,
            "CpuThreshold": double,
            "MemoryThreshold": double,
            "LoadThreshold": double,
            "Alarms": ["string", ...]
          }

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To set the load-based scaling configuration for a layer

       The following example enables load-based scaling for a specified  layer
       and  sets  the  configuration  for  that  layer.   You  must  use  cre-
       ate-instance to add load-based instances to the layer.

          aws opsworks --region us-east-1 set-load-based-auto-scaling --layer-id 523569ae-2faf-47ac-b39e-f4c4b381f36d --enable --up-scaling file://upscale.json --down-scaling file://downscale.json

       The example puts the upscaling threshold settings in a separate file in
       the working directory named upscale.json, which contains the following.

          {
            "InstanceCount": 2,
            "ThresholdsWaitTime": 3,
            "IgnoreMetricsTime": 3,
            "CpuThreshold": 85,
            "MemoryThreshold": 85,
            "LoadThreshold": 85
          }

       The example puts the downscaling threshold settings in a separate  file
       in  the working directory named downscale.json, which contains the fol-
       lowing.

          {
          "InstanceCount": 2,
          "ThresholdsWaitTime": 3,
          "IgnoreMetricsTime": 3,
          "CpuThreshold": 35,
          "MemoryThreshold": 30,
          "LoadThreshold": 30
          }

       Output: None.

       More Information

       For more information, see Using Automatic Load-based Scaling in the AWS
       OpsWorks User Guide.

OUTPUT
       None



                                                 SET-LOAD-BASED-AUTO-SCALING()
