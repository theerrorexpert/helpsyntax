CREATE-BUDGET()                                                CREATE-BUDGET()



NAME
       create-budget -

DESCRIPTION
       Creates a budget and, if included, notifications and subscribers.

       WARNING:
          Only one of BudgetLimit or PlannedBudgetLimits can be present in the
          syntax at one time. Use the  syntax  that  matches  your  case.  The
          Request Syntax section shows the BudgetLimit syntax. For PlannedBud-
          getLimits , see the Examples section.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-budget
          --account-id <value>
          --budget <value>
          [--notifications-with-subscribers <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --account-id (string)
          The accountId that is associated with the budget.

       --budget (structure)
          The budget object that you want to create.

          BudgetName -> (string)
              The name of a budget. The name must be unique within an account.
              The : and \ characters aren't allowed in BudgetName .

          BudgetLimit -> (structure)
              The  total  amount  of cost, usage, RI utilization, RI coverage,
              Savings Plans utilization, or Savings Plans  coverage  that  you
              want to track with your budget.
                 BudgetLimit  is  required  for  cost  or  usage  budgets, but
                 optional for RI or Savings Plans utilization or coverage bud-
                 gets.  RI  and  Savings Plans utilization or coverage budgets
                 default to 100 , which is the only valid value for RI or Sav-
                 ings  Plans  utilization  or  coverage budgets. You can't use
                 BudgetLimit with  PlannedBudgetLimits  for  CreateBudget  and
                 UpdateBudget actions.

              Amount -> (string)
                 The  cost  or  usage  amount that is associated with a budget
                 forecast, actual spend, or budget threshold.

              Unit -> (string)
                 The unit of measurement that is used for the budget forecast,
                 actual spend, or budget threshold, such as dollars or GB.

          PlannedBudgetLimits -> (map)
              A  map  containing  multiple  BudgetLimit , including current or
              future limits.
                 PlannedBudgetLimits is available for cost or usage budget and
                 supports monthly and quarterly TimeUnit .

              For  monthly  budgets,  provide 12 months of PlannedBudgetLimits
              values. This must start from the current month and  include  the
              next  11 months. The key is the start of the month, UTC in epoch
              seconds.

              For quarterly budgets, provide 4 quarters of PlannedBudgetLimits
              value entries in standard calendar quarter increments. This must
              start from the current quarter and include the next 3  quarters.
              The key is the start of the quarter, UTC in epoch seconds.

              If  the planned budget expires before 12 months for monthly or 4
              quarters for quarterly, provide the  PlannedBudgetLimits  values
              only for the remaining periods.

              If  the  budget begins at a date in the future, provide Planned-
              BudgetLimits values from the start date of the budget.

              After all of the BudgetLimit values in  PlannedBudgetLimits  are
              used,  the  budget  continues  to use the last limit as the Bud-
              getLimit . At that point, the planned budget provides  the  same
              experience as a fixed budget.
                 DescribeBudget   and   DescribeBudgets  response  along  with
                 PlannedBudgetLimits will also contain BudgetLimit  represent-
                 ing the current month or quarter limit present in PlannedBud-
                 getLimits  .  This  only  applies  to  budgets  created  with
                 PlannedBudgetLimits  .  Budgets  created  without PlannedBud-
                 getLimits will only contain BudgetLimit , and no  PlannedBud-
                 getLimits .

              key -> (string)
                 A generic string.

              value -> (structure)
                 The amount of cost or usage that is measured for a budget.

                 For example, a Spend for 3 GB of S3 usage would have the fol-
                 lowing parameters:

                 o An Amount of 3

                 o A unit of GB

                 Amount -> (string)
                     The cost or usage amount that is associated with a budget
                     forecast, actual spend, or budget threshold.

                 Unit -> (string)
                     The unit of measurement that is used for the budget fore-
                     cast, actual spend, or budget threshold, such as  dollars
                     or GB.

          CostFilters -> (map)
              The  cost filters, such as service or tag, that are applied to a
              budget.

              AWS Budgets supports the following services as a filter  for  RI
              budgets:

              o Amazon Elastic Compute Cloud - Compute

              o Amazon Redshift

              o Amazon Relational Database Service

              o Amazon ElastiCache

              o Amazon Elasticsearch Service

              key -> (string)
                 A generic string.

              value -> (list)
                 (string)
                     A generic string.

          CostTypes -> (structure)
              The types of costs that are included in this COST budget.
                 USAGE , RI_UTILIZATION , RI_COVERAGE , SAVINGS_PLANS_UTILIZA-
                 TION , and SAVINGS_PLANS_COVERAGE budgets do not  have  Cost-
                 Types .

              IncludeTax -> (boolean)
                 Specifies whether a budget includes taxes.

                 The default value is true .

              IncludeSubscription -> (boolean)
                 Specifies whether a budget includes subscriptions.

                 The default value is true .

              UseBlended -> (boolean)
                 Specifies whether a budget uses a blended rate.

                 The default value is false .

              IncludeRefund -> (boolean)
                 Specifies whether a budget includes refunds.

                 The default value is true .

              IncludeCredit -> (boolean)
                 Specifies whether a budget includes credits.

                 The default value is true .

              IncludeUpfront -> (boolean)
                 Specifies whether a budget includes upfront RI costs.

                 The default value is true .

              IncludeRecurring -> (boolean)
                 Specifies  whether  a  budget includes recurring fees such as
                 monthly RI fees.

                 The default value is true .

              IncludeOtherSubscription -> (boolean)
                 Specifies  whether  a  budget  includes  non-RI  subscription
                 costs.

                 The default value is true .

              IncludeSupport -> (boolean)
                 Specifies  whether  a  budget  includes  support subscription
                 fees.

                 The default value is true .

              IncludeDiscount -> (boolean)
                 Specifies whether a budget includes discounts.

                 The default value is true .

              UseAmortized -> (boolean)
                 Specifies whether a budget uses the amortized rate.

                 The default value is false .

          TimeUnit -> (string)
              The length of time until a budget resets the  actual  and  fore-
              casted spend.

          TimePeriod -> (structure)
              The period of time that is covered by a budget. The period has a
              start date and an end date. The start date must come before  the
              end date. The end date must come before 06/15/87 00:00 UTC .

              If  you  create  your budget and don't specify a start date, AWS
              defaults to  the  start  of  your  chosen  time  period  (DAILY,
              MONTHLY,  QUARTERLY,  or  ANNUALLY). For example, if you created
              your budget on January 24, 2018, chose DAILY , and didn't set  a
              start  date,  AWS set your start date to 01/24/18 00:00 UTC . If
              you chose MONTHLY , AWS set your start date  to  01/01/18  00:00
              UTC  .  If you didn't specify an end date, AWS set your end date
              to 06/15/87 00:00 UTC . The defaults are the same  for  the  AWS
              Billing and Cost Management console and the API.

              You can change either date with the UpdateBudget operation.

              After  the  end  date, AWS deletes the budget and all associated
              notifications and subscribers.

              Start -> (timestamp)
                 The start date for a budget. If you created your  budget  and
                 didn't  specify  a  start  date, AWS defaults to the start of
                 your chosen time period (DAILY, MONTHLY, QUARTERLY, or  ANNU-
                 ALLY). For example, if you created your budget on January 24,
                 2018, chose DAILY , and didn't set a start date, AWS set your
                 start date to 01/24/18 00:00 UTC . If you chose MONTHLY , AWS
                 set your start date to 01/01/18 00:00 UTC . The defaults  are
                 the  same for the AWS Billing and Cost Management console and
                 the API.

                 You can change your start date with the  UpdateBudget  opera-
                 tion.

              End -> (timestamp)
                 The end date for a budget. If you didn't specify an end date,
                 AWS set your end date to 06/15/87 00:00 UTC  .  The  defaults
                 are  the same for the AWS Billing and Cost Management console
                 and the API.

                 After the end date, AWS deletes the budget and all associated
                 notifications  and  subscribers. You can change your end date
                 with the UpdateBudget operation.

          CalculatedSpend -> (structure)
              The actual and forecasted cost or usage that the budget  tracks.

              ActualSpend -> (structure)
                 The  amount  of cost, usage, RI units, or Savings Plans units
                 that you have used.

                 Amount -> (string)
                     The cost or usage amount that is associated with a budget
                     forecast, actual spend, or budget threshold.

                 Unit -> (string)
                     The unit of measurement that is used for the budget fore-
                     cast, actual spend, or budget threshold, such as  dollars
                     or GB.

              ForecastedSpend -> (structure)
                 The  amount  of cost, usage, RI units, or Savings Plans units
                 that you are forecasted to use.

                 Amount -> (string)
                     The cost or usage amount that is associated with a budget
                     forecast, actual spend, or budget threshold.

                 Unit -> (string)
                     The unit of measurement that is used for the budget fore-
                     cast, actual spend, or budget threshold, such as  dollars
                     or GB.

          BudgetType -> (string)
              Whether this budget tracks costs, usage, RI utilization, RI cov-
              erage, Savings Plans utilization, or Savings Plans coverage.

          LastUpdatedTime -> (timestamp)
              The last time that you updated this budget.

       Shorthand Syntax:

          BudgetName=string,BudgetLimit={Amount=string,Unit=string},PlannedBudgetLimits={KeyName1={Amount=string,Unit=string},KeyName2={Amount=string,Unit=string}},CostFilters={KeyName1=string,string,KeyName2=string,string},CostTypes={IncludeTax=boolean,IncludeSubscription=boolean,UseBlended=boolean,IncludeRefund=boolean,IncludeCredit=boolean,IncludeUpfront=boolean,IncludeRecurring=boolean,IncludeOtherSubscription=boolean,IncludeSupport=boolean,IncludeDiscount=boolean,UseAmortized=boolean},TimeUnit=string,TimePeriod={Start=timestamp,End=timestamp},CalculatedSpend={ActualSpend={Amount=string,Unit=string},ForecastedSpend={Amount=string,Unit=string}},BudgetType=string,LastUpdatedTime=timestamp

       JSON Syntax:

          {
            "BudgetName": "string",
            "BudgetLimit": {
              "Amount": "string",
              "Unit": "string"
            },
            "PlannedBudgetLimits": {"string": {
                  "Amount": "string",
                  "Unit": "string"
                }
              ...},
            "CostFilters": {"string": ["string", ...]
              ...},
            "CostTypes": {
              "IncludeTax": true|false,
              "IncludeSubscription": true|false,
              "UseBlended": true|false,
              "IncludeRefund": true|false,
              "IncludeCredit": true|false,
              "IncludeUpfront": true|false,
              "IncludeRecurring": true|false,
              "IncludeOtherSubscription": true|false,
              "IncludeSupport": true|false,
              "IncludeDiscount": true|false,
              "UseAmortized": true|false
            },
            "TimeUnit": "DAILY"|"MONTHLY"|"QUARTERLY"|"ANNUALLY",
            "TimePeriod": {
              "Start": timestamp,
              "End": timestamp
            },
            "CalculatedSpend": {
              "ActualSpend": {
                "Amount": "string",
                "Unit": "string"
              },
              "ForecastedSpend": {
                "Amount": "string",
                "Unit": "string"
              }
            },
            "BudgetType": "USAGE"|"COST"|"RI_UTILIZATION"|"RI_COVERAGE"|"SAVINGS_PLANS_UTILIZATION"|"SAVINGS_PLANS_COVERAGE",
            "LastUpdatedTime": timestamp
          }

       --notifications-with-subscribers (list)
          A notification that you want to associate with a  budget.  A  budget
          can  have  up  to five notifications, and each notification can have
          one SNS subscriber and up to 10 email subscribers.  If  you  include
          notifications and subscribers in your CreateBudget call, AWS creates
          the notifications and subscribers for you.

          (structure)
              A notification with subscribers. A notification can have one SNS
              subscriber  and  up  to  10 email subscribers, for a total of 11
              subscribers.

              Notification -> (structure)
                 The notification that is associated with a budget.

                 NotificationType -> (string)
                     Whether the notification is for how much you  have  spent
                     (ACTUAL  )  or  for  how  much you're forecasted to spend
                     (FORECASTED ).

                 ComparisonOperator -> (string)
                     The comparison that is used for this notification.

                 Threshold -> (double)
                     The threshold that is  associated  with  a  notification.
                     Thresholds  are  always  a percentage, and many customers
                     find value being alerted between 50% - 200% of  the  bud-
                     geted  amount.  The  maximum  limit for your threshold is
                     1,000,000% above the budgeted amount.

                 ThresholdType -> (string)
                     The type of  threshold  for  a  notification.  For  ABSO-
                     LUTE_VALUE  thresholds, AWS notifies you when you go over
                     or are forecasted to go over your total  cost  threshold.
                     For  PERCENTAGE  thresholds, AWS notifies you when you go
                     over or are forecasted to go over a certain percentage of
                     your  forecasted spend. For example, if you have a budget
                     for 200 dollars and you have a  PERCENTAGE  threshold  of
                     80%, AWS notifies you when you go over 160 dollars.

                 NotificationState -> (string)
                     Whether  this notification is in alarm. If a budget noti-
                     fication is in the ALARM state, you have passed  the  set
                     threshold for the budget.

              Subscribers -> (list)
                 A  list  of  subscribers who are subscribed to this notifica-
                 tion.

                 (structure)
                     The subscriber to a budget notification.  The  subscriber
                     consists  of a subscription type and either an Amazon SNS
                     topic or an email address.

                     For example, an email subscriber would have the following
                     parameters:

                     o A subscriptionType of EMAIL

                     o An address of example@example.com

                     SubscriptionType -> (string)
                        The  type  of  notification  that  AWS sends to a sub-
                        scriber.

                     Address -> (string)
                        The address that AWS sends  budget  notifications  to,
                        either an SNS topic or an email.

                        When  you  create  a  subscriber, the value of Address
                        can't contain line breaks.

       Shorthand Syntax:

          Notification={NotificationType=string,ComparisonOperator=string,Threshold=double,ThresholdType=string,NotificationState=string},Subscribers=[{SubscriptionType=string,Address=string},{SubscriptionType=string,Address=string}] ...

       JSON Syntax:

          [
            {
              "Notification": {
                "NotificationType": "ACTUAL"|"FORECASTED",
                "ComparisonOperator": "GREATER_THAN"|"LESS_THAN"|"EQUAL_TO",
                "Threshold": double,
                "ThresholdType": "PERCENTAGE"|"ABSOLUTE_VALUE",
                "NotificationState": "OK"|"ALARM"
              },
              "Subscribers": [
                {
                  "SubscriptionType": "SNS"|"EMAIL",
                  "Address": "string"
                }
                ...
              ]
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a Cost and Usage budget

       The following create-budget command creates a Cost and Usage budget.

          aws budgets create-budget \
              --account-id 111122223333 \
              --budget file://budget.json \
              --notifications-with-subscribers file://notifications-with-subscribers.json

       Contents of budget.json:

          {
              "BudgetLimit": {
                  "Amount": "100",
                  "Unit": "USD"
              },
              "BudgetName": "Example Tag Budget",
              "BudgetType": "COST",
              "CostFilters": {
                  "TagKeyValue": [
                      "user:Key$value1",
                      "user:Key$value2"
                  ]
              },
              "CostTypes": {
                  "IncludeCredit": true,
                  "IncludeDiscount": true,
                  "IncludeOtherSubscription": true,
                  "IncludeRecurring": true,
                  "IncludeRefund": true,
                  "IncludeSubscription": true,
                  "IncludeSupport": true,
                  "IncludeTax": true,
                  "IncludeUpfront": true,
                  "UseBlended": false
              },
              "TimePeriod": {
                  "Start": 1477958399,
                  "End": 3706473600
              },
              "TimeUnit": "MONTHLY"
          }

       Contents of notifications-with-subscribers.json:

          [
              {
                  "Notification": {
                      "ComparisonOperator": "GREATER_THAN",
                      "NotificationType": "ACTUAL",
                      "Threshold": 80,
                      "ThresholdType": "PERCENTAGE"
                  },
                  "Subscribers": [
                      {
                          "Address": "example@example.com",
                          "SubscriptionType": "EMAIL"
                      }
                  ]
              }
          ]

OUTPUT
       None



                                                               CREATE-BUDGET()
