LIST-CONFIGURATIONS()                                    LIST-CONFIGURATIONS()



NAME
       list-configurations -

DESCRIPTION
       Retrieves  a  list  of  configuration  items  as specified by the value
       passed to the required parameter configurationType . Optional filtering
       may be applied to refine search results.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       list-configurations is a paginated operation. Multiple API calls may be
       issued in order to retrieve the entire data set  of  results.  You  can
       disable pagination by providing the --no-paginate argument.  When using
       --output text and the --query argument on  a  paginated  response,  the
       --query  argument  must  extract data from the results of the following
       query expressions: configurations

SYNOPSIS
            list-configurations
          --configuration-type <value>
          [--filters <value>]
          [--order-by <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --configuration-type (string)
          A valid configuration identified by Application Discovery Service.

          Possible values:

          o SERVER

          o PROCESS

          o CONNECTION

          o APPLICATION

       --filters (list)
          You can filter the request using various logical operators and a key
          -value format. For example:
              {"key": "serverType", "value": "webServer"}

          For  a complete list of filter options and guidance about using them
          with this action, see Using the ListConfigurations Action in the AWS
          Application Discovery Service User Guide .

          (structure)
              A filter that can use conditional operators.

              For more information about filters, see Querying Discovered Con-
              figuration Items in the AWS Application Discovery  Service  User
              Guide .

              name -> (string)
                 The name of the filter.

              values -> (list)
                 A string value on which to filter. For example, if you choose
                 the destinationServer.osVersion filter name, you could  spec-
                 ify Ubuntu for the value.

                 (string)

              condition -> (string)
                 A  conditional  operator.  The following operators are valid:
                 EQUALS, NOT_EQUALS, CONTAINS, NOT_CONTAINS.  If  you  specify
                 multiple  filters,  the system utilizes all filters as though
                 concatenated by AND . If you specify multiple  values  for  a
                 particular filter, the system differentiates the values using
                 OR . Calling either DescribeConfigurations or  ListConfigura-
                 tions returns attributes of matching configuration items.

       Shorthand Syntax:

          name=string,values=string,string,condition=string ...

       JSON Syntax:

          [
            {
              "name": "string",
              "values": ["string", ...],
              "condition": "string"
            }
            ...
          ]

       --order-by (list)
          Certain  filter criteria return output that can be sorted in ascend-
          ing or descending order. For a list of  output  characteristics  for
          each  filter,  see  Using  the  ListConfigurations Action in the AWS
          Application Discovery Service User Guide .

          (structure)
              A field and direction for ordered output.

              fieldName -> (string)
                 The field on which to order.

              sortOrder -> (string)
                 Ordering direction.

       Shorthand Syntax:

          fieldName=string,sortOrder=string ...

       JSON Syntax:

          [
            {
              "fieldName": "string",
              "sortOrder": "ASC"|"DESC"
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --starting-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The size of each page to get in the AWS service call. This does  not
          affect the number of items returned in the command's output. Setting
          a smaller page size results  in  more  calls  to  the  AWS  service,
          retrieving  fewer  items in each call. This can help prevent the AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To  list  all  of the discovered servers meeting a set of filter condi-
       tions

       This example command lists discovered servers matching  either  of  two
       hostname patterns and not running Ubuntu.

       Command:

          aws discovery list-configurations --configuration-type SERVER --filters name="server.hostName",values="172-31-35","172-31-42",condition="CONTAINS" name="server.osName",values="Ubuntu",condition="NOT_CONTAINS"

       Output:

          {
              "configurations": [
                {
                      "server.osVersion": "3.14.48-33.39.amzn1.x86_64",
                      "server.type": "EC2",
                      "server.hostName": "ip-172-31-42-208",
                      "server.timeOfCreation": "2016-10-28 23:44:30.0",
                      "server.configurationId": "d-server-099385097ef9fbcfb",
                      "server.osName": "Linux - Amazon Linux AMI release 2015.03",
                      "server.agentId": "i-c142b99e"
                  },
                  {
                      "server.osVersion": "3.14.48-33.39.amzn1.x86_64",
                      "server.type": "EC2",
                      "server.hostName": "ip-172-31-35-152",
                      "server.timeOfCreation": "2016-10-28 23:44:00.0",
                      "server.configurationId": "d-server-0c4f2dd1fee22c6c1",
                      "server.osName": "Linux - Amazon Linux AMI release 2015.03",
                      "server.agentId": "i-4447bc1b"
                  }
              ]
          }

OUTPUT
       configurations -> (list)
          Returns  configuration  details,  including  the  configuration  ID,
          attribute names, and attribute values.

          (map)
              key -> (string)

              value -> (string)

       nextToken -> (string)
          Token to retrieve the next set of results. For example, if your call
          to ListConfigurations returned 100 items, but you set ListConfigura-
          tionsRequest$maxResults to 10, you received  a  set  of  10  results
          along  with this token. Use this token in the next query to retrieve
          the next set of 10.



                                                         LIST-CONFIGURATIONS()
