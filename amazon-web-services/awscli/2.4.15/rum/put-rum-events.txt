PUT-RUM-EVENTS()                                              PUT-RUM-EVENTS()



NAME
       put-rum-events -

DESCRIPTION
       Sends  telemetry  events  about  your  application performance and user
       behavior to CloudWatch RUM. The code snippet that RUM generates for you
       to  add  to  your  application includes PutRumEvents operations to send
       this data to RUM.

       Each PutRumEvents operation can send a batch of events  from  one  user
       session.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            put-rum-events
          --app-monitor-details <value>
          --batch-id <value>
          --id <value>
          --rum-events <value>
          --user-details <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --app-monitor-details (structure)
          A  structure  that  contains  information about the app monitor that
          collected this telemetry information.

          id -> (string)
              The unique ID of the app monitor.

          name -> (string)
              The name of the app monitor.

          version -> (string)
              The version of the app monitor.

       Shorthand Syntax:

          id=string,name=string,version=string

       JSON Syntax:

          {
            "id": "string",
            "name": "string",
            "version": "string"
          }

       --batch-id (string)
          A unique identifier for this batch of RUM event data.

       --id (string)
          The ID of the app monitor that is sending this data.

       --rum-events (list)
          An array of structures that contain the telemetry event data.

          (structure)
              A structure that contains the information  for  one  performance
              event  that  RUM collects from a user session with your applica-
              tion.

              details -> (string)
                 A string containing details about the event.

              id -> (string)
                 A unique ID for this event.

              metadata -> (string)
                 Metadata about this event, which contains a  JSON  serializa-
                 tion  of  the identity of the user for this session. The user
                 information  comes  from  information  such   as   the   HTTP
                 user-agent request header and document interface.

              timestamp -> (timestamp)
                 The exact time that this event occurred.

              type -> (string)
                 The  JSON schema that denotes the type of event this is, such
                 as a page load or a new session.

       Shorthand Syntax:

          details=string,id=string,metadata=string,timestamp=timestamp,type=string ...

       JSON Syntax:

          [
            {
              "details": "string",
              "id": "string",
              "metadata": "string",
              "timestamp": timestamp,
              "type": "string"
            }
            ...
          ]

       --user-details (structure)
          A structure that contains information about the  user  session  that
          this batch of events was collected from.

          sessionId -> (string)
              The session ID that the performance events are from.

          userId -> (string)
              The  ID  of the user for this user session. This ID is generated
              by RUM and does not include any personally identifiable informa-
              tion about the user.

       Shorthand Syntax:

          sessionId=string,userId=string

       JSON Syntax:

          {
            "sessionId": "string",
            "userId": "string"
          }

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       None



                                                              PUT-RUM-EVENTS()
