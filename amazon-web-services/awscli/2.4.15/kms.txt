KMS()                                                                    KMS()



NAME
       kms -

DESCRIPTION
       Key  Management  Service  (KMS) is an encryption and key management web
       service. This guide describes the KMS operations that you can call pro-
       grammatically. For general information about KMS, see the ` Key Manage-
       ment               Service               Developer                Guide
       https://docs.aws.amazon.com/kms/latest/developerguide/
       `
       __ .

       NOTE:
          KMS is replacing the term customer master key (CMK) with KMS key and
          KMS key . The concept has not changed. To prevent breaking  changes,
          KMS is keeping some variations of this term.

          Amazon Web Services provides SDKs that consist of libraries and sam-
          ple code for various  programming  languages  and  platforms  (Java,
          Ruby, .Net, macOS, Android, etc.). The SDKs provide a convenient way
          to create programmatic access to KMS and other Amazon  Web  Services
          services.  For  example, the SDKs take care of tasks such as signing
          requests (see below), managing errors, and retrying  requests  auto-
          matically.  For more information about the Amazon Web Services SDKs,
          including how to download and install them, see Tools for Amazon Web
          Services .

       We recommend that you use the Amazon Web Services SDKs to make program-
       matic API calls to KMS.

       Clients must support TLS (Transport Layer Security) 1.0.  We  recommend
       TLS  1.2.  Clients must also support cipher suites with Perfect Forward
       Secrecy (PFS) such as Ephemeral Diffie-Hellman (DHE) or Elliptic  Curve
       Ephemeral  Diffie-Hellman  (ECDHE).  Most modern systems such as Java 7
       and later support these modes.
          Signing Requests

       Requests must be signed by using an access key ID and a  secret  access
       key. We strongly recommend that you do not use your Amazon Web Services
       account (root) access key ID and secret key for everyday work with KMS.
       Instead,  use  the access key ID and secret access key for an IAM user.
       You can also use the Amazon Web Services Security Token Service to gen-
       erate temporary security credentials that you can use to sign requests.

       All KMS operations require Signature Version 4 .
          Logging API Requests

       KMS supports CloudTrail, a service that logs Amazon  Web  Services  API
       calls  and  related  events  for  your  Amazon Web Services account and
       delivers them to an Amazon S3 bucket that you  specify.  By  using  the
       information  collected  by  CloudTrail, you can determine what requests
       were made to KMS, who made the request, when it was made, and so on. To
       learn  more about CloudTrail, including how to turn it on and find your
       log files, see the CloudTrail User Guide .
          Additional Resources

       For more information about credentials and  request  signing,  see  the
       following:

       o Amazon  Web  Services Security Credentials - This topic provides gen-
         eral information about the types of credentials used to access Amazon
         Web Services.

       o Temporary  Security  Credentials - This section of the IAM User Guide
         describes how to create and use temporary security credentials.

       o Signature Version 4 Signing Process - This set of  topics  walks  you
         through the process of signing a request using an access key ID and a
         secret access key.
          Commonly Used API Operations

       Of the API operations discussed in this guide, the following will prove
       the  most  useful for most applications. You will likely perform opera-
       tions other than these, such as creating keys and  assigning  policies,
       by using the console.

       o Encrypt

       o Decrypt

       o GenerateDataKey

       o GenerateDataKeyWithoutPlaintext

AVAILABLE COMMANDS
       o cancel-key-deletion

       o connect-custom-key-store

       o create-alias

       o create-custom-key-store

       o create-grant

       o create-key

       o decrypt

       o delete-alias

       o delete-custom-key-store

       o delete-imported-key-material

       o describe-custom-key-stores

       o describe-key

       o disable-key

       o disable-key-rotation

       o disconnect-custom-key-store

       o enable-key

       o enable-key-rotation

       o encrypt

       o generate-data-key

       o generate-data-key-pair

       o generate-data-key-pair-without-plaintext

       o generate-data-key-without-plaintext

       o generate-random

       o get-key-policy

       o get-key-rotation-status

       o get-parameters-for-import

       o get-public-key

       o help

       o import-key-material

       o list-aliases

       o list-grants

       o list-key-policies

       o list-keys

       o list-resource-tags

       o list-retirable-grants

       o put-key-policy

       o re-encrypt

       o replicate-key

       o retire-grant

       o revoke-grant

       o schedule-key-deletion

       o sign

       o tag-resource

       o untag-resource

       o update-alias

       o update-custom-key-store

       o update-key-description

       o update-primary-region

       o verify



                                                                         KMS()
