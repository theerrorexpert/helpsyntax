GET-LAMBDA-FUNCTION-RECOMMENDATIONS()    GET-LAMBDA-FUNCTION-RECOMMENDATIONS()



NAME
       get-lambda-function-recommendations -

DESCRIPTION
       Returns Lambda function recommendations.

       Compute  Optimizer  generates recommendations for functions that meet a
       specific set of requirements. For more information, see  the  Supported
       resources and requirements in the Compute Optimizer User Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-lambda-function-recommendations
          [--function-arns <value>]
          [--account-ids <value>]
          [--filters <value>]
          [--next-token <value>]
          [--max-results <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --function-arns (list)
          The  Amazon Resource Name (ARN) of the functions for which to return
          recommendations.

          You can specify a qualified or unqualified ARN. If  you  specify  an
          unqualified ARN without a function version suffix, Compute Optimizer
          will return recommendations for the latest ($LATEST ) version of the
          function. If you specify a qualified ARN with a version suffix, Com-
          pute Optimizer will return recommendations for the  specified  func-
          tion  version.  For  more information about using function versions,
          see Using versions in the Lambda Developer Guide .

          (string)

       Syntax:

          "string" "string" ...

       --account-ids (list)
          The ID of the Amazon Web Services account for which to return  func-
          tion recommendations.

          If  your  account  is the management account of an organization, use
          this parameter to specify the member account for which you  want  to
          return function recommendations.

          Only one account ID can be specified per request.

          (string)

       Syntax:

          "string" "string" ...

       --filters (list)
          An array of objects to specify a filter that returns a more specific
          list of function recommendations.

          (structure)
              Describes a filter that returns a more specific list  of  Lambda
              function  recommendations.  Use this filter with the  GetLambda-
              FunctionRecommendations action.

              You can  use  EBSFilter  with  the   GetEBSVolumeRecommendations
              action,  JobFilter  with  the   DescribeRecommendationExportJobs
              action, and Filter with the   GetAutoScalingGroupRecommendations
              and  GetEC2InstanceRecommendations actions.

              name -> (string)
                 The name of the filter.

                 Specify  Finding  to  return  recommendations with a specific
                 finding classification (for example, NotOptimized ).

                 Specify FindingReasonCode to return  recommendations  with  a
                 specific  finding reason code (for example, MemoryUnderprovi-
                 sioned ).

              values -> (list)
                 The value of the filter.

                 The valid values for this parameter are as follows, depending
                 on what you specify for the name parameter:

                 o Specify  Optimized  ,  NotOptimized , or Unavailable if you
                   specify the name parameter as Finding .

                 o Specify MemoryOverprovisioned  ,  MemoryUnderprovisioned  ,
                   InsufficientData  , or Inconclusive if you specify the name
                   parameter as FindingReasonCode .

                 (string)

       Shorthand Syntax:

          name=string,values=string,string ...

       JSON Syntax:

          [
            {
              "name": "Finding"|"FindingReasonCode",
              "values": ["string", ...]
            }
            ...
          ]

       --next-token (string)
          The token to advance to the next page of function recommendations.

       --max-results (integer)
          The maximum number of function recommendations to return with a sin-
          gle request.

          To  retrieve  the  remaining  results, make another request with the
          returned nextToken value.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       nextToken -> (string)
          The token to use to advance to the next page of function recommenda-
          tions.

          This  value  is null when there are no more pages of function recom-
          mendations to return.

       lambdaFunctionRecommendations -> (list)
          An array of objects that describe function recommendations.

          (structure)
              Describes an Lambda function recommendation.

              functionArn -> (string)
                 The Amazon Resource Name (ARN) of the current function.

              functionVersion -> (string)
                 The version number of the current function.

              accountId -> (string)
                 The Amazon Web Services account ID of the function.

              currentMemorySize -> (integer)
                 The amount of memory, in MB, that's allocated to the  current
                 function.

              numberOfInvocations -> (long)
                 The number of times your function code was applied during the
                 look-back period.

              utilizationMetrics -> (list)
                 An array of objects that describe the utilization metrics  of
                 the function.

                 (structure)
                     Describes a utilization metric of an Lambda function.

                     name -> (string)
                        The name of the utilization metric.

                        The following utilization metrics are available:

                        o Duration  -  The  amount  of time that your function
                          code spends processing an event.

                        o Memory - The amount of memory used per invocation.

                     statistic -> (string)
                        The statistic of the utilization metric.

                        The Compute  Optimizer  API,  Command  Line  Interface
                        (CLI),  and SDKs return utilization metrics using only
                        the Maximum statistic,  which  is  the  highest  value
                        observed during the specified period.

                        The Compute Optimizer console displays graphs for some
                        utilization metrics using the Average statistic, which
                        is the value of Sum / SampleCount during the specified
                        period. For more  information,  see  Viewing  resource
                        recommendations  in the Compute Optimizer User Guide .
                        You can also get averaged utilization metric data  for
                        your  resources  using  Amazon  CloudWatch.  For  more
                        information, see the Amazon CloudWatch User Guide .

                     value -> (double)
                        The value of the utilization metric.

              lookbackPeriodInDays -> (double)
                 The number of days for which utilization  metrics  were  ana-
                 lyzed for the function.

              lastRefreshTimestamp -> (timestamp)
                 The  timestamp  of  when the function recommendation was last
                 generated.

              finding -> (string)
                 The finding classification of the function.

                 Findings for functions include:

                 o
                   **
                   Optimized **  The function is correctly provisioned to  run
                   your  workload  based  on its current configuration and its
                   utilization history. This finding classification  does  not
                   include finding reason codes.

                 o
                   **
                   NotOptimized  **   The  function  is performing at a higher
                   level (over-provisioned) or at a lower level  (under-provi-
                   sioned) than required for your workload because its current
                   configuration is not  optimal.  Over-provisioned  resources
                   might   lead   to   unnecessary  infrastructure  cost,  and
                   under-provisioned resources might lead to poor  application
                   performance.  This  finding  classification can include the
                   MemoryUnderprovisioned and  MemoryUnderprovisioned  finding
                   reason codes.

                 o
                   **
                   Unavailable  **  Compute Optimizer was unable to generate a
                   recommendation for the function. This could be because  the
                   function has not accumulated sufficient metric data, or the
                   function does not qualify for a recommendation. This  find-
                   ing  classification  can  include  the InsufficientData and
                   Inconclusive finding reason codes.

                 NOTE:
                     Functions with a finding of unavailable are not  returned
                     unless  you  specify the filter parameter with a value of
                     Unavailable  in   your   GetLambdaFunctionRecommendations
                     request.

              findingReasonCodes -> (list)
                 The reason for the finding classification of the function.

                 NOTE:
                     Functions that have a finding classification of Optimized
                     don't have a finding reason code.

                 Finding reason codes for functions include:

                 o
                   **
                   MemoryOverprovisioned **  The function is  over-provisioned
                   when its memory configuration can be sized down while still
                   meeting the performance requirements of your  workload.  An
                   over-provisioned  function might lead to unnecessary infra-
                   structure cost. This finding reason code  is  part  of  the
                   NotOptimized finding classification.

                 o
                   **
                   MemoryUnderprovisioned  **   The  function  is under-provi-
                   sioned when its memory configuration doesn't meet the  per-
                   formance requirements of the workload. An under-provisioned
                   function might lead to poor application  performance.  This
                   finding  reason  code  is  part of the NotOptimized finding
                   classification.

                 o
                   **
                   InsufficientData **  The function does not have  sufficient
                   metric data for Compute Optimizer to generate a recommenda-
                   tion. For more information, see the Supported resources and
                   requirements  in  the  Compute  Optimizer User Guide . This
                   finding reason code is  part  of  the  Unavailable  finding
                   classification.

                 o
                   **
                   Inconclusive **  The function does not qualify for a recom-
                   mendation because Compute Optimizer cannot generate a  rec-
                   ommendation  with a high degree of confidence. This finding
                   reason code is part of the Unavailable finding  classifica-
                   tion.

                 (string)

              memorySizeRecommendationOptions -> (list)
                 An  array  of  objects that describe the memory configuration
                 recommendation options for the function.

                 (structure)
                     Describes a recommendation option for an Lambda function.

                     rank -> (integer)
                        The rank of the function recommendation option.

                        The top recommendation option is ranked as 1 .

                     memorySize -> (integer)
                        The memory size, in MB, of the function recommendation
                        option.

                     projectedUtilizationMetrics -> (list)
                        An array of objects that describe the  projected  uti-
                        lization   metrics   of  the  function  recommendation
                        option.

                        (structure)
                            Describes a projected  utilization  metric  of  an
                            Lambda function recommendation option.

                            name -> (string)
                               The name of the projected utilization metric.

                            statistic -> (string)
                               The statistic of the projected utilization met-
                               ric.

                            value -> (double)
                               The values of the  projected  utilization  met-
                               rics.

                     savingsOpportunity -> (structure)
                        An  object  that describes the savings opportunity for
                        the Lambda  function  recommendation  option.  Savings
                        opportunity  includes  the  estimated  monthly savings
                        amount and percentage.

                        savingsOpportunityPercentage -> (double)
                            The estimated monthly savings possible as  a  per-
                            centage  of monthly cost by adopting Compute Opti-
                            mizer recommendations for a given resource.

                        estimatedMonthlySavings -> (structure)
                            An object that  describes  the  estimated  monthly
                            savings   amount   possible,  based  on  On-Demand
                            instance pricing, by  adopting  Compute  Optimizer
                            recommendations for a given resource.

                            currency -> (string)
                               The  currency of the estimated monthly savings.

                            value -> (double)
                               The value of the estimated monthly savings.

              currentPerformanceRisk -> (string)
                 The risk of the current Lambda function not meeting the  per-
                 formance  needs  of  its  workloads. The higher the risk, the
                 more likely the current Lambda function requires more memory.



                                         GET-LAMBDA-FUNCTION-RECOMMENDATIONS()
