UPDATE-INDEX()                                                  UPDATE-INDEX()



NAME
       update-index -

DESCRIPTION
       Updates an existing Amazon Kendra index.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            update-index
          --id <value>
          [--name <value>]
          [--role-arn <value>]
          [--description <value>]
          [--document-metadata-configuration-updates <value>]
          [--capacity-units <value>]
          [--user-token-configurations <value>]
          [--user-context-policy <value>]
          [--user-group-resolution-configuration <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --id (string)
          The identifier of the index to update.

       --name (string)
          The name of the index to update.

       --role-arn (string)
          A  new  IAM  role that gives Amazon Kendra permission to access your
          Amazon CloudWatch logs.

       --description (string)
          A new description for the index.

       --document-metadata-configuration-updates (list)
          The document metadata to update.

          (structure)
              Specifies the properties of a custom index field.

              Name -> (string)
                 The name of the index field.

              Type -> (string)
                 The data type of the index field.

              Relevance -> (structure)
                 Provides manual tuning parameters to determine how the  field
                 affects the search results.

                 Freshness -> (boolean)
                     Indicates  that this field determines how "fresh" a docu-
                     ment is. For example, if document 1 was created on Novem-
                     ber 5, and document 2 was created on October 31, document
                     1 is "fresher" than document 2.  You  can  only  set  the
                     Freshness  field  on one DATE type field. Only applies to
                     DATE fields.

                 Importance -> (integer)
                     The relative importance  of  the  field  in  the  search.
                     Larger  numbers provide more of a boost than smaller num-
                     bers.

                 Duration -> (string)
                     Specifies the time period that the boost applies to.  For
                     example,  to  make  the boost apply to documents with the
                     field  value  within  the  last  month,  you  would   use
                     "2628000s".  Once the field value is beyond the specified
                     range, the effect of the boost drops off. The higher  the
                     importance, the faster the effect drops off. If you don't
                     specify a value, the default is 3 months.  The  value  of
                     the  field  is a numeric string followed by the character
                     "s", for example "86400s" for one day, or  "604800s"  for
                     one week.

                     Only applies to DATE fields.

                 RankOrder -> (string)
                     Determines how values should be interpreted.

                     When  the  RankOrder  field is ASCENDING , higher numbers
                     are better. For example, a document with a  rating  score
                     of  10  is  higher  ranking than a document with a rating
                     score of 1.

                     When the RankOrder field is DESCENDING  ,  lower  numbers
                     are  better. For example, in a task tracking application,
                     a priority 1 task is more important  than  a  priority  5
                     task.

                     Only applies to LONG and DOUBLE fields.

                 ValueImportanceMap -> (map)
                     A  list  of values that should be given a different boost
                     when they appear in the result list. For example, if  you
                     are  boosting  a  field  called "department," query terms
                     that match  the  department  field  are  boosted  in  the
                     result.  However, you can add entries from the department
                     field to boost documents with those values higher.

                     For example, you can add entries to the map with names of
                     departments.  If  you  add  "HR",5  and  "Legal",3  those
                     departments are given special attention when they  appear
                     in  the  metadata  of a document. When those terms appear
                     they are given the specified importance  instead  of  the
                     regular importance for the boost.

                     key -> (string)

                     value -> (integer)

              Search -> (structure)
                 Provides  information  about  how  the field is used during a
                 search.

                 Facetable -> (boolean)
                     Indicates that the field can be  used  to  create  search
                     facets,  a  count of results for each value in the field.
                     The default is false .

                 Searchable -> (boolean)
                     Determines whether the field is used in  the  search.  If
                     the Searchable field is true , you can use relevance tun-
                     ing to manually tune how Amazon Kendra weights the  field
                     in  the search. The default is true for string fields and
                     false for number and date fields.

                 Displayable -> (boolean)
                     Determines whether the field is  returned  in  the  query
                     response. The default is true .

                 Sortable -> (boolean)
                     Determines  whether  the  field  can  be used to sort the
                     results of a query. If you specify  sorting  on  a  field
                     that  does  not have Sortable set to true , Amazon Kendra
                     returns an exception. The default is false .

       Shorthand Syntax:

          Name=string,Type=string,Relevance={Freshness=boolean,Importance=integer,Duration=string,RankOrder=string,ValueImportanceMap={KeyName1=integer,KeyName2=integer}},Search={Facetable=boolean,Searchable=boolean,Displayable=boolean,Sortable=boolean} ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Type": "STRING_VALUE"|"STRING_LIST_VALUE"|"LONG_VALUE"|"DATE_VALUE",
              "Relevance": {
                "Freshness": true|false,
                "Importance": integer,
                "Duration": "string",
                "RankOrder": "ASCENDING"|"DESCENDING",
                "ValueImportanceMap": {"string": integer
                  ...}
              },
              "Search": {
                "Facetable": true|false,
                "Searchable": true|false,
                "Displayable": true|false,
                "Sortable": true|false
              }
            }
            ...
          ]

       --capacity-units (structure)
          Sets the number of additional storage and query capacity units  that
          should  be  used  by  the  index. You can change the capacity of the
          index up to 5 times per day.

          If you are using extra storage units, you can't reduce  the  storage
          capacity  below  that  required  to  meet the storage needs for your
          index.

          StorageCapacityUnits -> (integer)
              The amount of extra storage capacity  for  an  index.  A  single
              capacity  unit  provides 30 GB of storage space or 100,000 docu-
              ments, whichever is reached first.

          QueryCapacityUnits -> (integer)
              The  amount  of  extra  query  capacity   for   an   index   and
              GetQuerySuggestions capacity.

              A  single  extra capacity unit for an index provides 0.1 queries
              per second or approximately 8,000 queries per day.
                 GetQuerySuggestions capacity is five  times  the  provisioned
                 query  capacity  for  an  index,  or the base capacity of 2.5
                 calls per second, whichever is higher. For example, the  base
                 capacity  for  an  index  is 0.1 queries per second, and Get-
                 QuerySuggestions capacity has a base of 2.5 calls per second.
                 If  you  add  another  0.1  queries  per  second to total 0.2
                 queries per second  for  an  index,  the  GetQuerySuggestions
                 capacity  is 2.5 calls per second (higher than five times 0.2
                 queries per second).

       Shorthand Syntax:

          StorageCapacityUnits=integer,QueryCapacityUnits=integer

       JSON Syntax:

          {
            "StorageCapacityUnits": integer,
            "QueryCapacityUnits": integer
          }

       --user-token-configurations (list)
          The user token configuration.

          (structure)
              Provides configuration information for a token configuration.

              JwtTokenTypeConfiguration -> (structure)
                 Information about the JWT token type configuration.

                 KeyLocation -> (string)
                     The location of the key.

                 URL -> (string)
                     The signing key URL.

                 SecretManagerArn -> (string)
                     The Amazon Resource Name (arn) of the secret.

                 UserNameAttributeField -> (string)
                     The user name attribute field.

                 GroupAttributeField -> (string)
                     The group attribute field.

                 Issuer -> (string)
                     The issuer of the token.

                 ClaimRegex -> (string)
                     The regular expression that identifies the claim.

              JsonTokenTypeConfiguration -> (structure)
                 Information about the JSON token type configuration.

                 UserNameAttributeField -> (string)
                     The user name attribute field.

                 GroupAttributeField -> (string)
                     The group attribute field.

       Shorthand Syntax:

          JwtTokenTypeConfiguration={KeyLocation=string,URL=string,SecretManagerArn=string,UserNameAttributeField=string,GroupAttributeField=string,Issuer=string,ClaimRegex=string},JsonTokenTypeConfiguration={UserNameAttributeField=string,GroupAttributeField=string} ...

       JSON Syntax:

          [
            {
              "JwtTokenTypeConfiguration": {
                "KeyLocation": "URL"|"SECRET_MANAGER",
                "URL": "string",
                "SecretManagerArn": "string",
                "UserNameAttributeField": "string",
                "GroupAttributeField": "string",
                "Issuer": "string",
                "ClaimRegex": "string"
              },
              "JsonTokenTypeConfiguration": {
                "UserNameAttributeField": "string",
                "GroupAttributeField": "string"
              }
            }
            ...
          ]

       --user-context-policy (string)
          The user context policy.

          Possible values:

          o ATTRIBUTE_FILTER

          o USER_TOKEN

       --user-group-resolution-configuration (structure)
          Enables fetching access levels of groups and users  from  an  Amazon
          Web  Services Single Sign On identity source. To configure this, see
          UserGroupResolutionConfiguration .

          UserGroupResolutionMode -> (string)
              The identity store provider (mode) you  want  to  use  to  fetch
              access  levels  of  groups and users. Amazon Web Services Single
              Sign On is currently the only available  mode.  Your  users  and
              groups  must exist in an Amazon Web Services SSO identity source
              in order to use this mode.

       Shorthand Syntax:

          UserGroupResolutionMode=string

       JSON Syntax:

          {
            "UserGroupResolutionMode": "AWS_SSO"|"NONE"
          }

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       None



                                                                UPDATE-INDEX()
