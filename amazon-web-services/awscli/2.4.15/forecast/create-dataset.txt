CREATE-DATASET()                                              CREATE-DATASET()



NAME
       create-dataset -

DESCRIPTION
       Creates  an  Amazon Forecast dataset. The information about the dataset
       that you provide helps Forecast understand how to consume the data  for
       model training. This includes the following:

       o
         *
         DataFrequency  * - How frequently your historical time-series data is
         collected.

       o
         *
         Domain * and * DatasetType * - Each dataset has an associated dataset
         domain  and a type within the domain. Amazon Forecast provides a list
         of predefined domains and types within each domain. For  each  unique
         dataset  domain  and type within the domain, Amazon Forecast requires
         your data to include a minimum set of predefined fields.

       o
         *
         Schema * - A schema specifies the fields in  the  dataset,  including
         the field name and data type.

       After creating a dataset, you import your training data into it and add
       the dataset to a dataset group. You use the dataset group to  create  a
       predictor. For more information, see  howitworks-datasets-groups .

       To get a list of all your datasets, use the  ListDatasets operation.

       For  example  Forecast  datasets, see the Amazon Forecast Sample GitHub
       repository .

       NOTE:
          The Status of a dataset must be ACTIVE before you can import  train-
          ing data. Use the  DescribeDataset operation to get the status.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-dataset
          --dataset-name <value>
          --domain <value>
          --dataset-type <value>
          [--data-frequency <value>]
          --schema <value>
          [--encryption-config <value>]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --dataset-name (string)
          A name for the dataset.

       --domain (string)
          The  domain associated with the dataset. When you add a dataset to a
          dataset group, this value and the value  specified  for  the  Domain
          parameter of the  CreateDatasetGroup operation must match.

          The Domain and DatasetType that you choose determine the fields that
          must be present in the training data that you import to the dataset.
          For  example, if you choose the RETAIL domain and TARGET_TIME_SERIES
          as the DatasetType , Amazon Forecast requires item_id , timestamp  ,
          and  demand fields to be present in your data. For more information,
          see  howitworks-datasets-groups .

          Possible values:

          o RETAIL

          o CUSTOM

          o INVENTORY_PLANNING

          o EC2_CAPACITY

          o WORK_FORCE

          o WEB_TRAFFIC

          o METRICS

       --dataset-type (string)
          The dataset type. Valid values depend on the chosen Domain .

          Possible values:

          o TARGET_TIME_SERIES

          o RELATED_TIME_SERIES

          o ITEM_METADATA

       --data-frequency (string)
          The frequency of data collection. This  parameter  is  required  for
          RELATED_TIME_SERIES datasets.

          Valid  intervals  are  Y  (Year),  M  (Month),  W (Week), D (Day), H
          (Hour), 30min (30 minutes), 15min (15 minutes), 10min (10  minutes),
          5min  (5  minutes),  and 1min (1 minute). For example, "D" indicates
          every day and "15min" indicates every 15 minutes.

       --schema (structure)
          The schema for the dataset. The schema attributes  and  their  order
          must  match the fields in your data. The dataset Domain and Dataset-
          Type that you choose determine the minimum required fields  in  your
          training  data. For information about the required fields for a spe-
          cific dataset domain and type, see  howitworks-domains-ds-types .

          Attributes -> (list)
              An array of attributes specifying the  name  and  type  of  each
              field in a dataset.

              (structure)
                 An  attribute  of  a schema, which defines a dataset field. A
                 schema attribute is required for every field  in  a  dataset.
                 The   Schema  object  contains  an  array  of SchemaAttribute
                 objects.

                 AttributeName -> (string)
                     The name of the dataset field.

                 AttributeType -> (string)
                     The data type of the field.

       Shorthand Syntax:

          Attributes=[{AttributeName=string,AttributeType=string},{AttributeName=string,AttributeType=string}]

       JSON Syntax:

          {
            "Attributes": [
              {
                "AttributeName": "string",
                "AttributeType": "string"|"integer"|"float"|"timestamp"|"geolocation"
              }
              ...
            ]
          }

       --encryption-config (structure)
          An AWS Key Management Service (KMS) key and  the  AWS  Identity  and
          Access  Management  (IAM)  role  that  Amazon Forecast can assume to
          access the key.

          RoleArn -> (string)
              The ARN of the IAM role  that  Amazon  Forecast  can  assume  to
              access the AWS KMS key.

              Passing a role across AWS accounts is not allowed. If you pass a
              role that isn't in your account, you get  an  InvalidInputExcep-
              tion error.

          KMSKeyArn -> (string)
              The Amazon Resource Name (ARN) of the KMS key.

       Shorthand Syntax:

          RoleArn=string,KMSKeyArn=string

       JSON Syntax:

          {
            "RoleArn": "string",
            "KMSKeyArn": "string"
          }

       --tags (list)
          The optional metadata that you apply to the dataset to help you cat-
          egorize and organize them.  Each  tag  consists  of  a  key  and  an
          optional value, both of which you define.

          The following basic restrictions apply to tags:

          o Maximum number of tags per resource - 50.

          o For  each  resource, each tag key must be unique, and each tag key
            can have only one value.

          o Maximum key length - 128 Unicode characters in UTF-8.

          o Maximum value length - 256 Unicode characters in UTF-8.

          o If your tagging  schema  is  used  across  multiple  services  and
            resources,  remember  that other services may have restrictions on
            allowed characters. Generally  allowed  characters  are:  letters,
            numbers,  and  spaces  representable  in  UTF-8, and the following
            characters: + - = . _ : / @.

          o Tag keys and values are case sensitive.

          o Do not use aws: , AWS: , or any upper or lowercase combination  of
            such  as a prefix for keys as it is reserved for AWS use. You can-
            not edit or delete tag keys with this prefix. Values can have this
            prefix. If a tag value has aws as its prefix but the key does not,
            then Forecast considers it to be a user tag and will count against
            the  limit of 50 tags. Tags with only the key prefix of aws do not
            count against your tags per resource limit.

          (structure)
              The optional metadata that you apply to a resource to  help  you
              categorize  and organize them. Each tag consists of a key and an
              optional value, both of which you define.

              The following basic restrictions apply to tags:

              o Maximum number of tags per resource - 50.

              o For each resource, each tag key must be unique, and  each  tag
                key can have only one value.

              o Maximum key length - 128 Unicode characters in UTF-8.

              o Maximum value length - 256 Unicode characters in UTF-8.

              o If  your  tagging  schema is used across multiple services and
                resources, remember that other services may have  restrictions
                on  allowed characters. Generally allowed characters are: let-
                ters, numbers, and spaces representable in UTF-8, and the fol-
                lowing characters: + - = . _ : / @.

              o Tag keys and values are case sensitive.

              o Do not use aws: , AWS: , or any upper or lowercase combination
                of such as a prefix for keys as it is reserved  for  AWS  use.
                You  cannot  edit  or delete tag keys with this prefix. Values
                can have this prefix. If a tag value has aws as its prefix but
                the  key does not, then Forecast considers it to be a user tag
                and will count against the limit of 50 tags.  Tags  with  only
                the  key  prefix  of  aws  do  not count against your tags per
                resource limit.

              Key -> (string)
                 One part of a key-value pair that makes up a tag. A key is  a
                 general label that acts like a category for more specific tag
                 values.

              Value -> (string)
                 The optional part of a key-value pair that makes up a tag.  A
                 value acts as a descriptor within a tag category (key).

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       DatasetArn -> (string)
          The Amazon Resource Name (ARN) of the dataset.



                                                              CREATE-DATASET()
