CREATE-PREDICTOR-BACKTEST-EXPORT-JOB()  CREATE-PREDICTOR-BACKTEST-EXPORT-JOB()



NAME
       create-predictor-backtest-export-job -

DESCRIPTION
       Exports  backtest forecasts and accuracy metrics generated by the  Cre-
       ateAutoPredictor or  CreatePredictor operations. Two folders containing
       CSV files are exported to your specified S3 bucket.

       The export file names will match the following conventions:
          <ExportJobName>_<ExportTimestamp>_<PartNumber>.csv

       The   <ExportTimestamp>   component   is   in  Java  SimpleDate  format
       (yyyy-MM-ddTHH-mm-ssZ).

       You must specify a  DataDestination object that includes an  Amazon  S3
       bucket and an AWS Identity and Access Management (IAM) role that Amazon
       Forecast can assume to access the Amazon S3 bucket. For  more  informa-
       tion, see  aws-forecast-iam-roles .

       NOTE:
          The  Status  of  the export job must be ACTIVE before you can access
          the export in your Amazon S3 bucket. To  get  the  status,  use  the
          DescribePredictorBacktestExportJob operation.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-predictor-backtest-export-job
          --predictor-backtest-export-job-name <value>
          --predictor-arn <value>
          --destination <value>
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --predictor-backtest-export-job-name (string)
          The name for the backtest export job.

       --predictor-arn (string)
          The  Amazon  Resource  Name  (ARN) of the predictor that you want to
          export.

       --destination (structure)
          The destination for an export job. Provide an S3 path, an AWS  Iden-
          tity and Access Management (IAM) role that allows Amazon Forecast to
          access the location, and an AWS Key  Management  Service  (KMS)  key
          (optional).

          S3Config -> (structure)
              The  path to an Amazon Simple Storage Service (Amazon S3) bucket
              along with the credentials to access the bucket.

              Path -> (string)
                 The path to an Amazon  Simple  Storage  Service  (Amazon  S3)
                 bucket or file(s) in an Amazon S3 bucket.

              RoleArn -> (string)
                 The  ARN of the AWS Identity and Access Management (IAM) role
                 that Amazon Forecast can  assume  to  access  the  Amazon  S3
                 bucket  or  files.  If  you provide a value for the KMSKeyArn
                 key, the role must allow access to the key.

                 Passing a role across AWS accounts is  not  allowed.  If  you
                 pass a role that isn't in your account, you get an InvalidIn-
                 putException error.

              KMSKeyArn -> (string)
                 The Amazon Resource Name (ARN) of an AWS Key Management  Ser-
                 vice (KMS) key.

       Shorthand Syntax:

          S3Config={Path=string,RoleArn=string,KMSKeyArn=string}

       JSON Syntax:

          {
            "S3Config": {
              "Path": "string",
              "RoleArn": "string",
              "KMSKeyArn": "string"
            }
          }

       --tags (list)
          Optional  metadata  to  help  you categorize and organize your back-
          tests. Each tag consists of a key and an  optional  value,  both  of
          which you define. Tag keys and values are case sensitive.

          The following restrictions apply to tags:

          o For  each  resource,  each tag key must be unique and each tag key
            must have one value.

          o Maximum number of tags per resource: 50.

          o Maximum key length: 128 Unicode characters in UTF-8.

          o Maximum value length: 256 Unicode characters in UTF-8.

          o Accepted characters: all letters and numbers, spaces representable
            in  UTF-8,  and  +  -  = . _ : / @. If your tagging schema is used
            across other services and resources, the character restrictions of
            those services also apply.

          o Key  prefixes cannot include any upper or lowercase combination of
            aws: or AWS: . Values can have this prefix. If a tag value has aws
            as  its prefix but the key does not, Forecast considers it to be a
            user tag and will count against the limit of 50  tags.  Tags  with
            only  the  key  prefix  of  aws do not count against your tags per
            resource limit. You cannot edit or delete tag keys with this  pre-
            fix.

          (structure)
              The  optional  metadata that you apply to a resource to help you
              categorize and organize them. Each tag consists of a key and  an
              optional value, both of which you define.

              The following basic restrictions apply to tags:

              o Maximum number of tags per resource - 50.

              o For  each  resource, each tag key must be unique, and each tag
                key can have only one value.

              o Maximum key length - 128 Unicode characters in UTF-8.

              o Maximum value length - 256 Unicode characters in UTF-8.

              o If your tagging schema is used across  multiple  services  and
                resources,  remember that other services may have restrictions
                on allowed characters. Generally allowed characters are:  let-
                ters, numbers, and spaces representable in UTF-8, and the fol-
                lowing characters: + - = . _ : / @.

              o Tag keys and values are case sensitive.

              o Do not use aws: , AWS: , or any upper or lowercase combination
                of  such  as  a prefix for keys as it is reserved for AWS use.
                You cannot edit or delete tag keys with  this  prefix.  Values
                can have this prefix. If a tag value has aws as its prefix but
                the key does not, then Forecast considers it to be a user  tag
                and  will  count  against the limit of 50 tags. Tags with only
                the key prefix of aws do  not  count  against  your  tags  per
                resource limit.

              Key -> (string)
                 One  part of a key-value pair that makes up a tag. A key is a
                 general label that acts like a category for more specific tag
                 values.

              Value -> (string)
                 The  optional part of a key-value pair that makes up a tag. A
                 value acts as a descriptor within a tag category (key).

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       PredictorBacktestExportJobArn -> (string)
          The Amazon Resource Name (ARN) of the predictor backtest export  job
          that you want to export.



                                        CREATE-PREDICTOR-BACKTEST-EXPORT-JOB()
