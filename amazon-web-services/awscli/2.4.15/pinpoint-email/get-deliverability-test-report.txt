GET-DELIVERABILITY-TEST-REPORT()              GET-DELIVERABILITY-TEST-REPORT()



NAME
       get-deliverability-test-report -

DESCRIPTION
       Retrieve the results of a predictive inbox placement test.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-deliverability-test-report
          --report-id <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --report-id (string)
          A unique string that identifies the predictive inbox placement test.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       DeliverabilityTestReport -> (structure)
          An object that contains the results of the predictive  inbox  place-
          ment test.

          ReportId -> (string)
              A  unique  string that identifies the predictive inbox placement
              test.

          ReportName -> (string)
              A name that helps you identify a predictive inbox placement test
              report.

          Subject -> (string)
              The subject line for an email that you submitted in a predictive
              inbox placement test.

          FromEmailAddress -> (string)
              The sender address that you specified for the  predictive  inbox
              placement test.

          CreateDate -> (timestamp)
              The  date  and time when the predictive inbox placement test was
              created, in Unix time format.

          DeliverabilityTestStatus -> (string)
              The status of the predictive inbox placement test. If the status
              is  IN_PROGRESS  ,  then  the predictive inbox placement test is
              currently running. Predictive inbox placement tests are  usually
              complete  within 24 hours of creating the test. If the status is
              COMPLETE , then the test is finished, and you can use the GetDe-
              liverabilityTestReport to view the results of the test.

       OverallPlacement -> (structure)
          An  object that specifies how many test messages that were sent dur-
          ing the predictive inbox placement test were  delivered  to  recipi-
          ents'  inboxes,  how many were sent to recipients' spam folders, and
          how many weren't delivered.

          InboxPercentage -> (double)
              The percentage of emails that  arrived  in  recipients'  inboxes
              during the predictive inbox placement test.

          SpamPercentage -> (double)
              The  percentage  of  emails  that arrived in recipients' spam or
              junk mail folders during the predictive inbox placement test.

          MissingPercentage -> (double)
              The percentage of  emails  that  didn't  arrive  in  recipients'
              inboxes at all during the predictive inbox placement test.

          SpfPercentage -> (double)
              The percentage of emails that were authenticated by using Sender
              Policy Framework (SPF) during  the  predictive  inbox  placement
              test.

          DkimPercentage -> (double)
              The  percentage  of  emails  that  were  authenticated  by using
              DomainKeys Identified Mail (DKIM) during  the  predictive  inbox
              placement test.

       IspPlacements -> (list)
          An  object  that describes how the test email was handled by several
          email providers, including Gmail, Hotmail, Yahoo, AOL, and others.

          (structure)
              An object that describes how email sent  during  the  predictive
              inbox placement test was handled by a certain email provider.

              IspName -> (string)
                 The  name of the email provider that the inbox placement data
                 applies to.

              PlacementStatistics -> (structure)
                 An object that contains inbox placement metrics  for  a  spe-
                 cific email provider.

                 InboxPercentage -> (double)
                     The  percentage  of  emails  that  arrived in recipients'
                     inboxes during the predictive inbox placement test.

                 SpamPercentage -> (double)
                     The percentage of emails that arrived in recipients' spam
                     or  junk  mail folders during the predictive inbox place-
                     ment test.

                 MissingPercentage -> (double)
                     The percentage of emails that didn't  arrive  in  recipi-
                     ents'  inboxes  at all during the predictive inbox place-
                     ment test.

                 SpfPercentage -> (double)
                     The percentage of emails that were authenticated by using
                     Sender Policy Framework (SPF) during the predictive inbox
                     placement test.

                 DkimPercentage -> (double)
                     The percentage of emails that were authenticated by using
                     DomainKeys  Identified  Mail (DKIM) during the predictive
                     inbox placement test.

       Message -> (string)
          An object that contains the message that you sent when you performed
          this predictive inbox placement test.

       Tags -> (list)
          An  array of objects that define the tags (keys and values) that are
          associated with the predictive inbox placement test.

          (structure)
              An object that defines the  tags  that  are  associated  with  a
              resource.  A tag is a label that you optionally define and asso-
              ciate with a resource in Amazon Pinpoint. Tags can help you cat-
              egorize  and manage resources in different ways, such as by pur-
              pose, owner, environment, or other criteria. A resource can have
              as many as 50 tags.

              Each  tag  consists  of a required tag key and an associated tag
              value , both of which you define. A tag key is a  general  label
              that  acts  as  a  category for a more specific tag value. A tag
              value acts as a descriptor within a tag key. A tag key can  con-
              tain  as many as 128 characters. A tag value can contain as many
              as 256 characters. The characters can be Unicode  letters,  dig-
              its,  white  space, or one of the following symbols: _ . : / = +
              -. The following additional restrictions apply to tags:

              o Tag keys and values are case sensitive.

              o For each associated resource, each tag key must be unique  and
                it can have only one value.

              o The aws: prefix is reserved for use by AWS; you cant use it in
                any tag keys or values that you define. In addition, you can't
                edit  or  remove tag keys or values that use this prefix. Tags
                that use this prefix dont count against the limit of  50  tags
                per resource.

              o You  can  associate  tags with public or shared resources, but
                the tags are available only for  your  AWS  account,  not  any
                other  accounts that share the resource. In addition, the tags
                are available only for resources that are located in the spec-
                ified AWS Region for your AWS account.

              Key -> (string)
                 One  part of a key-value pair that defines a tag. The maximum
                 length of a tag key is 128 characters. The minimum length  is
                 1 character.

              Value -> (string)
                 The optional part of a key-value pair that defines a tag. The
                 maximum length of a tag value is 256 characters. The  minimum
                 length is 0 characters. If you dont want a resource to have a
                 specific tag value, dont specify a value for this  parameter.
                 Amazon Pinpoint will set the value to an empty string.



                                              GET-DELIVERABILITY-TEST-REPORT()
