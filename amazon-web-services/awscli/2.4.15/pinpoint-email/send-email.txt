SEND-EMAIL()                                                      SEND-EMAIL()



NAME
       send-email -

DESCRIPTION
       Sends  an  email  message. You can use the Amazon Pinpoint Email API to
       send two types of messages:

       o Simple  A standard email message. When you create this type  of  mes-
         sage,  you  specify  the sender, the recipient, and the message body,
         and Amazon Pinpoint assembles the message for you.

       o Raw  A raw, MIME-formatted email message. When you send this type  of
         email, you have to specify all of the message headers, as well as the
         message body. You can use this message type  to  send  messages  that
         contain  attachments.  The message that you specify has to be a valid
         MIME message.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            send-email
          [--from-email-address <value>]
          --destination <value>
          [--reply-to-addresses <value>]
          [--feedback-forwarding-email-address <value>]
          --content <value>
          [--email-tags <value>]
          [--configuration-set-name <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --from-email-address (string)
          The email address that you want to use as the "From" address for the
          email. The address that you specify has to be verified.

       --destination (structure)
          An object that contains the recipients of the email message.

          ToAddresses -> (list)
              An  array  that contains the email addresses of the "To" recipi-
              ents for the email.

              (string)

          CcAddresses -> (list)
              An array that contains the email addresses of the  "CC"  (carbon
              copy) recipients for the email.

              (string)

          BccAddresses -> (list)
              An  array  that contains the email addresses of the "BCC" (blind
              carbon copy) recipients for the email.

              (string)

       Shorthand Syntax:

          ToAddresses=string,string,CcAddresses=string,string,BccAddresses=string,string

       JSON Syntax:

          {
            "ToAddresses": ["string", ...],
            "CcAddresses": ["string", ...],
            "BccAddresses": ["string", ...]
          }

       --reply-to-addresses (list)
          The "Reply-to" email addresses for the message. When  the  recipient
          replies to the message, each Reply-to address receives the reply.

          (string)

       Syntax:

          "string" "string" ...

       --feedback-forwarding-email-address (string)
          The  address  that  Amazon Pinpoint should send bounce and complaint
          notifications to.

       --content (structure)
          An object that contains the body of the message. You can send either
          a Simple message or a Raw message.

          Simple -> (structure)
              The  simple email message. The message consists of a subject and
              a message body.

              Subject -> (structure)
                 The subject line of the email. The subject line can only con-
                 tain   7-bit  ASCII  characters.  However,  you  can  specify
                 non-ASCII  characters  in   the   subject   line   by   using
                 encoded-word syntax, as described in RFC 2047 .

                 Data -> (string)
                     The content of the message itself.

                 Charset -> (string)
                     The  character  set  for the content. Because of the con-
                     straints of the SMTP protocol, Amazon Pinpoint uses 7-bit
                     ASCII by default. If the text includes characters outside
                     of the ASCII range, you have to specify a character  set.
                     For  example,  you  could specify UTF-8 , ISO-8859-1 , or
                     Shift_JIS .

              Body -> (structure)
                 The body of the message. You can specify an HTML  version  of
                 the message, a text-only version of the message, or both.

                 Text -> (structure)
                     An object that represents the version of the message that
                     is displayed in email clients that don't support HTML, or
                     clients  where the recipient has disabled HTML rendering.

                     Data -> (string)
                        The content of the message itself.

                     Charset -> (string)
                        The character set for the content. Because of the con-
                        straints  of  the  SMTP protocol, Amazon Pinpoint uses
                        7-bit ASCII by default. If the text  includes  charac-
                        ters outside of the ASCII range, you have to specify a
                        character set. For example, you could specify UTF-8  ,
                        ISO-8859-1 , or Shift_JIS .

                 Html -> (structure)
                     An object that represents the version of the message that
                     is displayed in email clients  that  support  HTML.  HTML
                     messages  can include formatted text, hyperlinks, images,
                     and more.

                     Data -> (string)
                        The content of the message itself.

                     Charset -> (string)
                        The character set for the content. Because of the con-
                        straints  of  the  SMTP protocol, Amazon Pinpoint uses
                        7-bit ASCII by default. If the text  includes  charac-
                        ters outside of the ASCII range, you have to specify a
                        character set. For example, you could specify UTF-8  ,
                        ISO-8859-1 , or Shift_JIS .

          Raw -> (structure)
              The  raw  email  message.  The message has to meet the following
              criteria:

              o The message has to contain a header and a body,  separated  by
                one blank line.

              o All  of the required header fields must be present in the mes-
                sage.

              o Each part of a multipart MIME message must be formatted  prop-
                erly.

              o If you include attachments, they must be in a file format that
                Amazon Pinpoint supports.

              o The entire message must be Base64 encoded.

              o If any of the MIME parts in your message contain content  that
                is  outside  of  the  7-bit  ASCII character range, you should
                encode that content to ensure that recipients'  email  clients
                render the message properly.

              o The  length  of  any  single line of text in the message can't
                exceed 1,000 characters. This restriction is  defined  in  RFC
                5321 .

              Data -> (blob)
                 The  raw email message. The message has to meet the following
                 criteria:

                 o The message has to contain a header and a  body,  separated
                   by one blank line.

                 o All  of  the  required header fields must be present in the
                   message.

                 o Each part of a multipart MIME  message  must  be  formatted
                   properly.

                 o Attachments  must  be in a file format that Amazon Pinpoint
                   supports.

                 o The entire message must be Base64 encoded.

                 o If any of the MIME parts in your  message  contain  content
                   that  is  outside  of  the 7-bit ASCII character range, you
                   should encode that content to ensure that recipients' email
                   clients render the message properly.

                 o The  length of any single line of text in the message can't
                   exceed 1,000 characters. This restriction is defined in RFC
                   5321 .

          Template -> (structure)
              The template to use for the email message.

              TemplateArn -> (string)
                 The Amazon Resource Name (ARN) of the template.

              TemplateData -> (string)
                 An  object  that  defines the values to use for message vari-
                 ables in the template. This object  is  a  set  of  key-value
                 pairs.  Each  key defines a message variable in the template.
                 The corresponding value defines the value  to  use  for  that
                 variable.

       JSON Syntax:

          {
            "Simple": {
              "Subject": {
                "Data": "string",
                "Charset": "string"
              },
              "Body": {
                "Text": {
                  "Data": "string",
                  "Charset": "string"
                },
                "Html": {
                  "Data": "string",
                  "Charset": "string"
                }
              }
            },
            "Raw": {
              "Data": blob
            },
            "Template": {
              "TemplateArn": "string",
              "TemplateData": "string"
            }
          }

       --email-tags (list)
          A  list  of  tags,  in  the form of name/value pairs, to apply to an
          email that you send using the SendEmail operation.  Tags  correspond
          to  characteristics  of  the  email that you define, so that you can
          publish email sending events.

          (structure)
              Contains the name and value of a tag that you apply to an email.
              You  can use message tags when you publish email sending events.

              Name -> (string)
                 The name of the message tag. The message tag name has to meet
                 the following criteria:

                 o It  can  only contain ASCII letters (az, AZ), numbers (09),
                   underscores (_), or dashes (-).

                 o It can contain no more than 256 characters.

              Value -> (string)
                 The value of the message tag. The message tag  value  has  to
                 meet the following criteria:

                 o It  can  only contain ASCII letters (az, AZ), numbers (09),
                   underscores (_), or dashes (-).

                 o It can contain no more than 256 characters.

       Shorthand Syntax:

          Name=string,Value=string ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Value": "string"
            }
            ...
          ]

       --configuration-set-name (string)
          The name of the configuration set that you want to use when  sending
          the email.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       MessageId -> (string)
          A  unique  identifier  for the message that is generated when Amazon
          Pinpoint accepts the message.

          NOTE:
              It is possible for Amazon Pinpoint to accept a  message  without
              sending  it.  This  can happen when the message you're trying to
              send has an attachment doesn't pass a virus check, or  when  you
              send  a  templated  email  that contains invalid personalization
              content, for example.



                                                                  SEND-EMAIL()
