CODEPIPELINE()                                                  CODEPIPELINE()



NAME
       codepipeline -

DESCRIPTION
          Overview

       This  is  the  AWS  CodePipeline  API  Reference.  This  guide provides
       descriptions of the actions and data types for AWS  CodePipeline.  Some
       functionality for your pipeline can only be configured through the API.
       For more information, see the AWS CodePipeline User Guide .

       You can use the AWS CodePipeline API to work  with  pipelines,  stages,
       actions, and transitions.
          Pipelines  are  models of automated release processes. Each pipeline
          is uniquely named, and consists of stages, actions, and transitions.

       You can work with pipelines by calling:

       o CreatePipeline , which creates a uniquely named pipeline.

       o DeletePipeline , which deletes the specified pipeline.

       o GetPipeline  , which returns information about the pipeline structure
         and pipeline metadata, including the pipeline  Amazon  Resource  Name
         (ARN).

       o GetPipelineExecution  ,  which  returns  information about a specific
         execution of a pipeline.

       o GetPipelineState , which returns information about the current  state
         of the stages and actions of a pipeline.

       o ListActionExecutions  ,  which  returns action-level details for past
         executions. The details include full stage and action-level  details,
         including   individual  action  duration,  status,  any  errors  that
         occurred during the execution, and input and output artifact location
         details.

       o ListPipelines  , which gets a summary of all of the pipelines associ-
         ated with your account.

       o ListPipelineExecutions , which gets a summary of the most recent exe-
         cutions for a pipeline.

       o StartPipelineExecution  ,  which  runs the most recent revision of an
         artifact through the pipeline.

       o StopPipelineExecution , which stops the specified pipeline  execution
         from continuing through the pipeline.

       o UpdatePipeline  ,  which  updates a pipeline with edits or changes to
         the structure of the pipeline.

       Pipelines include stages . Each stage contains one or more actions that
       must  complete before the next stage begins. A stage results in success
       or failure. If a stage fails, the pipeline  stops  at  that  stage  and
       remains  stopped  until  either a new version of an artifact appears in
       the source location, or a user takes action to rerun  the  most  recent
       artifact  through  the pipeline. You can call  GetPipelineState , which
       displays the status of a pipeline, including the status  of  stages  in
       the  pipeline,  or  GetPipeline , which returns the entire structure of
       the pipeline, including the stages of that pipeline. For more  informa-
       tion  about  the  structure of stages and actions, see AWS CodePipeline
       Pipeline Structure Reference .

       Pipeline stages include actions that are  categorized  into  categories
       such as source or build actions performed in a stage of a pipeline. For
       example, you can use a source action to import artifacts into  a  pipe-
       line from a source such as Amazon S3. Like stages, you do not work with
       actions directly in most cases, but you do  define  and  interact  with
       actions  when  working with pipeline operations such as  CreatePipeline
       and  GetPipelineState . Valid action categories are:

       o Source

       o Build

       o Test

       o Deploy

       o Approval

       o Invoke

       Pipelines also include transitions ,  which  allow  the  transition  of
       artifacts from one stage to the next in a pipeline after the actions in
       one stage complete.

       You can work with transitions by calling:

       o DisableStageTransition , which prevents artifacts from  transitioning
         to the next stage in a pipeline.

       o EnableStageTransition , which enables transition of artifacts between
         stages in a pipeline.
          Using the API to integrate with AWS CodePipeline

       For third-party integrators or developers who want to create their  own
       integrations  with  AWS CodePipeline, the expected sequence varies from
       the standard API user. To integrate with AWS  CodePipeline,  developers
       need to work with the following items:
          Jobs  ,  which  are instances of an action. For example, a job for a
          source action might import a revision of an artifact from a  source.

       You can work with jobs by calling:

       o AcknowledgeJob , which confirms whether a job worker has received the
         specified job.

       o GetJobDetails , which returns the details of a job.

       o PollForJobs , which determines whether there are any jobs to act  on.

       o PutJobFailureResult , which provides details of a job failure.

       o PutJobSuccessResult , which provides details of a job success.
          Third  party  jobs  ,  which are instances of an action created by a
          partner action and integrated into AWS CodePipeline. Partner actions
          are created by members of the AWS Partner Network.

       You can work with third party jobs by calling:

       o AcknowledgeThirdPartyJob  ,  which  confirms whether a job worker has
         received the specified job.

       o GetThirdPartyJobDetails , which requests the details of a job  for  a
         partner action.

       o PollForThirdPartyJobs  ,  which determines whether there are any jobs
         to act on.

       o PutThirdPartyJobFailureResult , which provides details of a job fail-
         ure.

       o PutThirdPartyJobSuccessResult  , which provides details of a job suc-
         cess.

AVAILABLE COMMANDS
       o acknowledge-job

       o acknowledge-third-party-job

       o create-custom-action-type

       o create-pipeline

       o delete-custom-action-type

       o delete-pipeline

       o delete-webhook

       o deregister-webhook-with-third-party

       o disable-stage-transition

       o enable-stage-transition

       o get-action-type

       o get-job-details

       o get-pipeline

       o get-pipeline-execution

       o get-pipeline-state

       o get-third-party-job-details

       o help

       o list-action-executions

       o list-action-types

       o list-pipeline-executions

       o list-pipelines

       o list-tags-for-resource

       o list-webhooks

       o poll-for-jobs

       o poll-for-third-party-jobs

       o put-action-revision

       o put-approval-result

       o put-job-failure-result

       o put-job-success-result

       o put-third-party-job-failure-result

       o put-third-party-job-success-result

       o put-webhook

       o register-webhook-with-third-party

       o retry-stage-execution

       o start-pipeline-execution

       o stop-pipeline-execution

       o tag-resource

       o untag-resource

       o update-action-type

       o update-pipeline



                                                                CODEPIPELINE()
