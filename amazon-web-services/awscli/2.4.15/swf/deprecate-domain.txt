DEPRECATE-DOMAIN()                                          DEPRECATE-DOMAIN()



NAME
       deprecate-domain -

DESCRIPTION
       Deprecates  the specified domain. After a domain has been deprecated it
       cannot be used to create new workflow executions or register new types.
       However, you can still use visibility actions on this domain. Deprecat-
       ing a domain also deprecates all activity and workflow types registered
       in  the domain. Executions that were started before the domain was dep-
       recated continues to run.

       NOTE:
              This operation is eventually consistent. The  results  are  best
              effort and may not exactly reflect recent updates and changes.

          Access Control

       You  can use IAM policies to control this action's access to Amazon SWF
       resources as follows:

       o Use a Resource element with the domain name to limit  the  action  to
         only specified domains.

       o Use  an  Action  element  to  allow  or  deny permission to call this
         action.

       o You cannot use an IAM policy to constrain this action's parameters.

       If the caller doesn't have sufficient permissions to invoke the action,
       or  the  parameter  values  fall outside the specified constraints, the
       action fails. The associated event attribute's cause parameter  is  set
       to  OPERATION_NOT_PERMITTED . For details and example IAM policies, see
       Using IAM to Manage Access to Amazon SWF Workflows in  the  Amazon  SWF
       Developer Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            deprecate-domain
          --name <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --name (string)
          The name of the domain to deprecate.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
   Deprecating a Domain
       To  deprecate  a  domain  (you  can still see it, but cannot create new
       workflow executions or register types on it), use swf deprecate-domain.
       It  has  a sole required parameter, --name, which takes the name of the
       domain to deprecate.

          $ aws swf deprecate-domain --name MyNeatNewDomain
          ""

       As with register-domain, no output is returned. If you use list-domains
       to  view  the registered domains, however, you will see that the domain
       has been deprecated and no longer appears in the returned data:

          $ aws swf list-domains --registration-status REGISTERED
          {
              "domainInfos": [
                  {
                      "status": "REGISTERED",
                      "name": "DataFrobotz"
                  },
                  {
                      "status": "REGISTERED",
                      "name": "erontest"
                  }
              ]
          }

       If you use --registration-status DEPRECATED with list-domains, you will
       see your deprecated domain:

          $ aws swf list-domains --registration-status DEPRECATED
          {
              "domainInfos": [
                  {
                      "status": "DEPRECATED",
                      "name": "MyNeatNewDomain"
                  }
              ]
          }

       You can still use describe-domain to get information about a deprecated
       domain:

          $ aws swf describe-domain --name MyNeatNewDomain
          {
              "domainInfo": {
                  "status": "DEPRECATED",
                  "name": "MyNeatNewDomain"
              },
              "configuration": {
                  "workflowExecutionRetentionPeriodInDays": "0"
              }
          }

   See Also
       o DeprecateDomain in the Amazon Simple Workflow Service API Reference

OUTPUT
       None



                                                            DEPRECATE-DOMAIN()
