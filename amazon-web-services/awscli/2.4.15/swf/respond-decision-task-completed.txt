RESPOND-DECISION-TASK-COMPLETED()            RESPOND-DECISION-TASK-COMPLETED()



NAME
       respond-decision-task-completed -

DESCRIPTION
       Used  by deciders to tell the service that the  DecisionTask identified
       by the taskToken has successfully  completed.  The  decisions  argument
       specifies the list of decisions made while processing the task.

       A  DecisionTaskCompleted  event  is  added to the workflow history. The
       executionContext specified is attached to the  event  in  the  workflow
       execution history.
          Access Control

       If  an IAM policy grants permission to use RespondDecisionTaskCompleted
       , it can express permissions for the list of decisions in the decisions
       parameter.  Each of the decisions has one or more parameters, much like
       a regular API call. To allow for policies to be as readable  as  possi-
       ble,  you  can  express permissions on decisions as if they were actual
       API calls, including applying conditions to some parameters.  For  more
       information,  see Using IAM to Manage Access to Amazon SWF Workflows in
       the Amazon SWF Developer Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            respond-decision-task-completed
          --task-token <value>
          [--decisions <value>]
          [--execution-context <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --task-token (string)
          The taskToken from the  DecisionTask .

          WARNING:
              taskToken is generated by the service and should be  treated  as
              an  opaque  value. If the task is passed to another process, its
              taskToken must also be passed. This enables it  to  provide  its
              progress and respond with results.

       --decisions (list)
          The  list  of  decisions  (possibly empty) made by the decider while
          processing this decision task. See the docs for the  Decision struc-
          ture for details.

          (structure)
              Specifies  a decision made by the decider. A decision can be one
              of these types:

              o CancelTimer  Cancels a previously started timer and records  a
                TimerCanceled event in the history.

              o CancelWorkflowExecution   Closes  the  workflow  execution and
                records a WorkflowExecutionCanceled event in the history.

              o CompleteWorkflowExecution  Closes the workflow  execution  and
                records a WorkflowExecutionCompleted event in the history .

              o ContinueAsNewWorkflowExecution   Closes the workflow execution
                and starts a new workflow execution of the same type using the
                same  workflow ID and a unique run Id. A WorkflowExecutionCon-
                tinuedAsNew event is recorded in the history.

              o FailWorkflowExecution   Closes  the  workflow  execution   and
                records a WorkflowExecutionFailed event in the history.

              o RecordMarker   Records  a MarkerRecorded event in the history.
                Markers can be used for adding custom information in the  his-
                tory for instance to let deciders know that they don't need to
                look at the history beyond the marker event.

              o RequestCancelActivityTask  Attempts  to  cancel  a  previously
                scheduled  activity  task.  If the activity task was scheduled
                but has not been assigned to a worker, then it is canceled. If
                the  activity  task was already assigned to a worker, then the
                worker is informed that cancellation has been requested in the
                response to  RecordActivityTaskHeartbeat .

              o RequestCancelExternalWorkflowExecution     Requests   that   a
                request be made to cancel the specified external workflow exe-
                cution  and  records a RequestCancelExternalWorkflowExecution-
                Initiated event in the history.

              o ScheduleActivityTask  Schedules an activity task.

              o SignalExternalWorkflowExecution   Requests  a  signal  to   be
                delivered  to  the  specified  external workflow execution and
                records a  SignalExternalWorkflowExecutionInitiated  event  in
                the history.

              o StartChildWorkflowExecution   Requests  that  a child workflow
                execution be started and  records  a  StartChildWorkflowExecu-
                tionInitiated  event in the history. The child workflow execu-
                tion is a separate workflow execution with its own history.

              o StartTimer  Starts a timer for  this  workflow  execution  and
                records  a TimerStarted event in the history. This timer fires
                after the specified delay and record a TimerFired event.
                 Access Control

              If you grant permission to  use  RespondDecisionTaskCompleted  ,
              you  can use IAM policies to express permissions for the list of
              decisions returned by this action as if they were members of the
              API. Treating decisions as a pseudo API maintains a uniform con-
              ceptual model and helps keep policies readable. For details  and
              example  IAM  policies, see Using IAM to Manage Access to Amazon
              SWF Workflows in the Amazon SWF Developer Guide .
                 Decision Failure

              Decisions can fail for several reasons

              o The ordering of decisions should follow a logical  flow.  Some
                decisions  might  not make sense in the current context of the
                workflow execution and therefore fails.

              o A limit on your account was reached.

              o The decision lacks sufficient permissions.

              One of the following events might be added  to  the  history  to
              indicate  an  error. The event attribute's cause parameter indi-
              cates the cause. If cause is set  to  OPERATION_NOT_PERMITTED  ,
              the  decision  failed  because it lacked sufficient permissions.
              For details and example IAM policies, see Using  IAM  to  Manage
              Access to Amazon SWF Workflows in the Amazon SWF Developer Guide
              .

              o ScheduleActivityTaskFailed   A  ScheduleActivityTask  decision
                failed.  This  could  happen if the activity type specified in
                the decision isn't registered, is in a  deprecated  state,  or
                the decision isn't properly configured.

              o RequestCancelActivityTaskFailed   A  RequestCancelActivityTask
                decision failed. This could happen if there is no open  activ-
                ity task with the specified activityId.

              o StartTimerFailed   A  StartTimer  decision  failed. This could
                happen if there is another open timer with the same timerId.

              o CancelTimerFailed  A CancelTimer decision failed.  This  could
                happen if there is no open timer with the specified timerId.

              o StartChildWorkflowExecutionFailed   A StartChildWorkflowExecu-
                tion decision failed. This could happen if the  workflow  type
                specified  isn't  registered,  is  deprecated, or the decision
                isn't properly configured.

              o SignalExternalWorkflowExecutionFailed   A  SignalExternalWork-
                flowExecution  decision failed. This could happen if the work-
                flowID specified in the decision was incorrect.

              o RequestCancelExternalWorkflowExecutionFailed     A    Request-
                CancelExternalWorkflowExecution  decision  failed.  This could
                happen if the workflowID specified in the decision was  incor-
                rect.

              o CancelWorkflowExecutionFailed  A CancelWorkflowExecution deci-
                sion failed. This could happen if there is an unhandled  deci-
                sion task pending in the workflow execution.

              o CompleteWorkflowExecutionFailed   A  CompleteWorkflowExecution
                decision failed. This could happen if there  is  an  unhandled
                decision task pending in the workflow execution.

              o ContinueAsNewWorkflowExecutionFailed    A   ContinueAsNewWork-
                flowExecution decision failed. This could happen if  there  is
                an  unhandled  decision task pending in the workflow execution
                or the ContinueAsNewWorkflowExecution decision was not config-
                ured correctly.

              o FailWorkflowExecutionFailed   A FailWorkflowExecution decision
                failed. This could happen if there is  an  unhandled  decision
                task pending in the workflow execution.

              The  preceding  error  events might occur due to an error in the
              decider logic, which might put  the  workflow  execution  in  an
              unstable  state  The  cause field in the event structure for the
              error event indicates the cause of the error.

              NOTE:
                     A workflow execution may be  closed  by  the  decider  by
                     returning  one of the following decisions when completing
                     a decision task:  CompleteWorkflowExecution  ,  FailWork-
                     flowExecution  ,  CancelWorkflowExecution and ContinueAs-
                     NewWorkflowExecution  .  An  UnhandledDecision  fault  is
                     returned  if a workflow closing decision is specified and
                     a signal or activity event had been added to the  history
                     while  the  decision  task  was  being  performed  by the
                     decider. Unlike the  above  situations  which  are  logic
                     issues,  this  fault  is  always possible because of race
                     conditions in a distributed system. The right action here
                     is  to  call   RespondDecisionTaskCompleted  without  any
                     decisions. This would result  in  another  decision  task
                     with  these  new  events  included  in  the  history. The
                     decider should handle the new events and  may  decide  to
                     close the workflow execution.

                 How to Code a Decision

              You  code a decision by first setting the decision type field to
              one of the above decision values, and then set the corresponding
              attributes field shown below:

              o `` ScheduleActivityTaskDecisionAttributes ``

              o `` RequestCancelActivityTaskDecisionAttributes ``

              o `` CompleteWorkflowExecutionDecisionAttributes ``

              o `` FailWorkflowExecutionDecisionAttributes ``

              o `` CancelWorkflowExecutionDecisionAttributes ``

              o `` ContinueAsNewWorkflowExecutionDecisionAttributes ``

              o `` RecordMarkerDecisionAttributes ``

              o `` StartTimerDecisionAttributes ``

              o `` CancelTimerDecisionAttributes ``

              o `` SignalExternalWorkflowExecutionDecisionAttributes ``

              o `` RequestCancelExternalWorkflowExecutionDecisionAttributes ``

              o `` StartChildWorkflowExecutionDecisionAttributes ``

              decisionType -> (string)
                 Specifies the type of the decision.

              scheduleActivityTaskDecisionAttributes -> (structure)
                 Provides the details of the ScheduleActivityTask decision. It
                 isn't set for other decision types.

                 activityType -> (structure)
                     The type of the activity task to schedule.

                     name -> (string)
                        The name of this activity.

                        NOTE:
                            The  combination of activity type name and version
                            must be unique within a domain.

                     version -> (string)
                        The version of this activity.

                        NOTE:
                            The combination of activity type name and  version
                            must be unique with in a domain.

                 activityId -> (string)
                     The activityId of the activity task.

                     The  specified  string  must not start or end with white-
                     space. It must not contain a  :  (colon),  /  (slash),  |
                     (vertical  bar), or any control characters (\u0000-\u001f
                     | \u007f-\u009f ). Also, it must not contain the  literal
                     string arn .

                 control -> (string)
                     Data  attached  to  the  event  that  can  be used by the
                     decider in subsequent workflow  tasks.  This  data  isn't
                     sent to the activity.

                 input -> (string)
                     The input provided to the activity task.

                 scheduleToCloseTimeout -> (string)
                     The maximum duration for this activity task.

                     The  duration is specified in seconds, an integer greater
                     than or equal to 0 . You can use NONE to  specify  unlim-
                     ited duration.

                     NOTE:
                        A  schedule-to-close  timeout  for  this activity task
                        must be specified either as a default for the activity
                        type  or  through this field. If neither this field is
                        set nor a default schedule-to-close timeout was speci-
                        fied at registration time then a fault is returned.

                 taskList -> (structure)
                     If  set,  specifies the name of the task list in which to
                     schedule  the  activity  task.  If  not  specified,   the
                     defaultTaskList  registered  with  the  activity  type is
                     used.

                     NOTE:
                        A task list for this activity task must  be  specified
                        either  as  a default for the activity type or through
                        this field. If neither this field is set nor a default
                        task  list  was  specified at registration time then a
                        fault is returned.

                     The specified string must not start or  end  with  white-
                     space.  It  must  not  contain  a : (colon), / (slash), |
                     (vertical bar), or any control characters  (\u0000-\u001f
                     |  \u007f-\u009f ). Also, it must not contain the literal
                     string arn .

                     name -> (string)
                        The name of the task list.

                 taskPriority -> (string)
                     If set, specifies the priority with  which  the  activity
                     task  is  to  be assigned to a worker. This overrides the
                     defaultTaskPriority specified when registering the activ-
                     ity  type  using  RegisterActivityType . Valid values are
                     integers  that  range   from   Java's   Integer.MIN_VALUE
                     (-2147483648)  to  Integer.MAX_VALUE (2147483647). Higher
                     numbers indicate higher priority.

                     For more information about  setting  task  priority,  see
                     Setting Task Priority in the Amazon SWF Developer Guide .

                 scheduleToStartTimeout -> (string)
                     If set, specifies the maximum duration the activity  task
                     can  wait  to be assigned to a worker. This overrides the
                     default schedule-to-start timeout specified  when  regis-
                     tering the activity type using  RegisterActivityType .

                     The  duration is specified in seconds, an integer greater
                     than or equal to 0 . You can use NONE to  specify  unlim-
                     ited duration.

                     NOTE:
                        A  schedule-to-start  timeout  for  this activity task
                        must be specified either as a default for the activity
                        type  or  through this field. If neither this field is
                        set nor a default schedule-to-start timeout was speci-
                        fied at registration time then a fault is returned.

                 startToCloseTimeout -> (string)
                     If  set, specifies the maximum duration a worker may take
                     to process this activity task. This overrides the default
                     start-to-close  timeout  specified  when  registering the
                     activity type using  RegisterActivityType .

                     The duration is specified in seconds, an integer  greater
                     than  or  equal to 0 . You can use NONE to specify unlim-
                     ited duration.

                     NOTE:
                        A start-to-close timeout for this activity  task  must
                        be specified either as a default for the activity type
                        or through this field. If neither this  field  is  set
                        nor  a default start-to-close timeout was specified at
                        registration time then a fault is returned.

                 heartbeatTimeout -> (string)
                     If set, specifies the maximum time before which a  worker
                     processing  a  task  of this type must report progress by
                     calling  RecordActivityTaskHeartbeat . If the timeout  is
                     exceeded,  the  activity task is automatically timed out.
                     If the worker subsequently attempts to record a heartbeat
                     or  returns  a  result, it is ignored. This overrides the
                     default heartbeat timeout specified when registering  the
                     activity type using  RegisterActivityType .

                     The  duration is specified in seconds, an integer greater
                     than or equal to 0 . You can use NONE to  specify  unlim-
                     ited duration.

              requestCancelActivityTaskDecisionAttributes -> (structure)
                 Provides  the  details of the RequestCancelActivityTask deci-
                 sion. It isn't set for other decision types.

                 activityId -> (string)
                     The activityId of the activity task to be canceled.

              completeWorkflowExecutionDecisionAttributes -> (structure)
                 Provides the details of the  CompleteWorkflowExecution  deci-
                 sion. It isn't set for other decision types.

                 result -> (string)
                     The  result  of  the  workflow execution. The form of the
                     result is implementation defined.

              failWorkflowExecutionDecisionAttributes -> (structure)
                 Provides the details of the  FailWorkflowExecution  decision.
                 It isn't set for other decision types.

                 reason -> (string)
                     A  descriptive  reason  for  the failure that may help in
                     diagnostics.

                 details -> (string)
                     Details of the failure.

              cancelWorkflowExecutionDecisionAttributes -> (structure)
                 Provides the details of the CancelWorkflowExecution decision.
                 It isn't set for other decision types.

                 details -> (string)
                     Details of the cancellation.

              continueAsNewWorkflowExecutionDecisionAttributes -> (structure)
                 Provides  the  details  of the ContinueAsNewWorkflowExecution
                 decision. It isn't set for other decision types.

                 input -> (string)
                     The input provided to the new workflow execution.

                 executionStartToCloseTimeout -> (string)
                     If set, specifies the total duration  for  this  workflow
                     execution.  This  overrides  the defaultExecutionStartTo-
                     CloseTimeout  specified  when  registering  the  workflow
                     type.

                     The  duration is specified in seconds, an integer greater
                     than or equal to 0 . You can use NONE to  specify  unlim-
                     ited duration.

                     NOTE:
                        An  execution start-to-close timeout for this workflow
                        execution must be specified either as  a  default  for
                        the  workflow  type  or through this field. If neither
                        this  field   is   set   nor   a   default   execution
                        start-to-close  timeout  was specified at registration
                        time then a fault is returned.

                 taskList -> (structure)
                     The task list to use for the decisions of the  new  (con-
                     tinued) workflow execution.

                     name -> (string)
                        The name of the task list.

                 taskPriority -> (string)
                     The  task  priority  that, if set, specifies the priority
                     for the decision tasks for this workflow execution.  This
                     overrides  the  defaultTaskPriority specified when regis-
                     tering the workflow type. Valid values are integers  that
                     range  from  Java's  Integer.MIN_VALUE  (-2147483648)  to
                     Integer.MAX_VALUE (2147483647). Higher  numbers  indicate
                     higher priority.

                     For  more  information  about  setting task priority, see
                     Setting Task Priority in the Amazon SWF Developer Guide .

                 taskStartToCloseTimeout -> (string)
                     Specifies  the maximum duration of decision tasks for the
                     new workflow  execution.  This  parameter  overrides  the
                     defaultTaskStartToCloseTimout  specified when registering
                     the workflow type using  RegisterWorkflowType .

                     The duration is specified in seconds, an integer  greater
                     than  or  equal to 0 . You can use NONE to specify unlim-
                     ited duration.

                     NOTE:
                        A task start-to-close timeout  for  the  new  workflow
                        execution  must  be  specified either as a default for
                        the workflow type or through this parameter.  If  nei-
                        ther   this  parameter  is  set  nor  a  default  task
                        start-to-close timeout was specified  at  registration
                        time then a fault is returned.

                 childPolicy -> (string)
                     If  set,  specifies the policy to use for the child work-
                     flow executions of the new execution if it is  terminated
                     by calling the  TerminateWorkflowExecution action explic-
                     itly or due to an expired timeout. This policy  overrides
                     the  default  child policy specified when registering the
                     workflow type using  RegisterWorkflowType .

                     The supported child policies are:

                     o TERMINATE  The child executions are terminated.

                     o REQUEST_CANCEL  A request to cancel  is  attempted  for
                       each  child execution by recording a WorkflowExecution-
                       CancelRequested event in its history. It is up  to  the
                       decider to take appropriate actions when it receives an
                       execution history with this event.

                     o ABANDON  No action is taken. The child executions  con-
                       tinue to run.

                     NOTE:
                        A  child  policy  for  this workflow execution must be
                        specified either as a default for the workflow type or
                        through  this  parameter. If neither this parameter is
                        set nor a default child policy was specified at regis-
                        tration time then a fault is returned.

                 tagList -> (list)
                     The  list of tags to associate with the new workflow exe-
                     cution. A maximum of 5 tags can  be  specified.  You  can
                     list  workflow  executions with a specific tag by calling
                     ListOpenWorkflowExecutions  or   ListClosedWorkflowExecu-
                     tions and specifying a  TagFilter .

                     (string)

                 workflowTypeVersion -> (string)
                     The version of the workflow to start.

                 lambdaRole -> (string)
                     The  IAM role to attach to the new (continued) execution.

              recordMarkerDecisionAttributes -> (structure)
                 Provides the details of the RecordMarker decision.  It  isn't
                 set for other decision types.

                 markerName -> (string)
                     The name of the marker.

                 details -> (string)
                     The details of the marker.

              startTimerDecisionAttributes -> (structure)
                 Provides the details of the StartTimer decision. It isn't set
                 for other decision types.

                 timerId -> (string)
                     The unique ID of the timer.

                     The specified string must not start or  end  with  white-
                     space.  It  must  not  contain  a : (colon), / (slash), |
                     (vertical bar), or any control characters  (\u0000-\u001f
                     |  \u007f-\u009f ). Also, it must not contain the literal
                     string arn .

                 control -> (string)
                     The data attached to the event that can be  used  by  the
                     decider in subsequent workflow tasks.

                 startToFireTimeout -> (string)
                     The duration to wait before firing the timer.

                     The  duration is specified in seconds, an integer greater
                     than or equal to 0 .

              cancelTimerDecisionAttributes -> (structure)
                 Provides the details of the CancelTimer  decision.  It  isn't
                 set for other decision types.

                 timerId -> (string)
                     The unique ID of the timer to cancel.

              signalExternalWorkflowExecutionDecisionAttributes -> (structure)
                 Provides the details of  the  SignalExternalWorkflowExecution
                 decision. It isn't set for other decision types.

                 workflowId -> (string)
                     The  workflowId of the workflow execution to be signaled.

                 runId -> (string)
                     The runId of the workflow execution to be signaled.

                 signalName -> (string)
                     The name of the signal.The target workflow execution uses
                     the signal name and input to process the signal.

                 input -> (string)
                     The input data to be provided with the signal. The target
                     workflow execution uses the signal name and input data to
                     process the signal.

                 control -> (string)
                     The  data  attached  to the event that can be used by the
                     decider in subsequent decision tasks.

              requestCancelExternalWorkflowExecutionDecisionAttributes      ->
              (structure)
                 Provides the details of the RequestCancelExternalWorkflowExe-
                 cution decision. It isn't set for other decision types.

                 workflowId -> (string)
                     The workflowId of the external workflow execution to can-
                     cel.

                 runId -> (string)
                     The runId of the external workflow execution to cancel.

                 control -> (string)
                     The  data  attached  to the event that can be used by the
                     decider in subsequent workflow tasks.

              startChildWorkflowExecutionDecisionAttributes -> (structure)
                 Provides the details of the StartChildWorkflowExecution deci-
                 sion. It isn't set for other decision types.

                 workflowType -> (structure)
                     The type of the workflow execution to be started.

                     name -> (string)
                        The name of the workflow type.

                        NOTE:
                            The  combination of workflow type name and version
                            must be unique with in a domain.

                     version -> (string)
                        The version of the workflow type.

                        NOTE:
                            The combination of workflow type name and  version
                            must be unique with in a domain.

                 workflowId -> (string)
                     The workflowId of the workflow execution.

                     The  specified  string  must not start or end with white-
                     space. It must not contain a  :  (colon),  /  (slash),  |
                     (vertical  bar), or any control characters (\u0000-\u001f
                     | \u007f-\u009f ). Also, it must not contain the  literal
                     string arn .

                 control -> (string)
                     The  data  attached  to the event that can be used by the
                     decider in subsequent workflow  tasks.  This  data  isn't
                     sent to the child workflow execution.

                 input -> (string)
                     The input to be provided to the workflow execution.

                 executionStartToCloseTimeout -> (string)
                     The  total  duration  for  this  workflow execution. This
                     overrides the defaultExecutionStartToCloseTimeout  speci-
                     fied when registering the workflow type.

                     The  duration is specified in seconds, an integer greater
                     than or equal to 0 . You can use NONE to  specify  unlim-
                     ited duration.

                     NOTE:
                        An  execution start-to-close timeout for this workflow
                        execution must be specified either as  a  default  for
                        the  workflow  type or through this parameter. If nei-
                        ther this parameter is set  nor  a  default  execution
                        start-to-close  timeout  was specified at registration
                        time then a fault is returned.

                 taskList -> (structure)
                     The name of the task list to be used for  decision  tasks
                     of the child workflow execution.

                     NOTE:
                        A task list for this workflow execution must be speci-
                        fied either as a default  for  the  workflow  type  or
                        through  this  parameter. If neither this parameter is
                        set nor a default task list was specified at registra-
                        tion time then a fault is returned.

                     The  specified  string  must not start or end with white-
                     space. It must not contain a  :  (colon),  /  (slash),  |
                     (vertical  bar), or any control characters (\u0000-\u001f
                     | \u007f-\u009f ). Also, it must not contain the  literal
                     string arn .

                     name -> (string)
                        The name of the task list.

                 taskPriority -> (string)
                     A  task priority that, if set, specifies the priority for
                     a decision task of this workflow  execution.  This  over-
                     rides  the defaultTaskPriority specified when registering
                     the workflow type. Valid values are integers  that  range
                     from  Java's  Integer.MIN_VALUE  (-2147483648)  to  Inte-
                     ger.MAX_VALUE  (2147483647).  Higher   numbers   indicate
                     higher priority.

                     For  more  information  about  setting task priority, see
                     Setting Task Priority in the Amazon SWF Developer Guide .

                 taskStartToCloseTimeout -> (string)
                     Specifies the maximum duration of decision tasks for this
                     workflow execution. This parameter overrides the default-
                     TaskStartToCloseTimout  specified  when  registering  the
                     workflow type using  RegisterWorkflowType .

                     The duration is specified in seconds, an integer  greater
                     than  or  equal to 0 . You can use NONE to specify unlim-
                     ited duration.

                     NOTE:
                        A task start-to-close timeout for this workflow execu-
                        tion  must  be  specified  either as a default for the
                        workflow type or through this  parameter.  If  neither
                        this   parameter   is   set   nor   a   default   task
                        start-to-close timeout was specified  at  registration
                        time then a fault is returned.

                 childPolicy -> (string)
                     If  set,  specifies the policy to use for the child work-
                     flow executions if the workflow execution  being  started
                     is  terminated by calling the  TerminateWorkflowExecution
                     action explicitly or due to an expired timeout. This pol-
                     icy  overrides  the  default  child policy specified when
                     registering the workflow type using  RegisterWorkflowType
                     .

                     The supported child policies are:

                     o TERMINATE  The child executions are terminated.

                     o REQUEST_CANCEL   A  request  to cancel is attempted for
                       each child execution by recording a  WorkflowExecution-
                       CancelRequested  event  in its history. It is up to the
                       decider to take appropriate actions when it receives an
                       execution history with this event.

                     o ABANDON   No action is taken. The child executions con-
                       tinue to run.

                     NOTE:
                        A child policy for this  workflow  execution  must  be
                        specified either as a default for the workflow type or
                        through this parameter. If neither this  parameter  is
                        set nor a default child policy was specified at regis-
                        tration time then a fault is returned.

                 tagList -> (list)
                     The list of tags to associate  with  the  child  workflow
                     execution.  A maximum of 5 tags can be specified. You can
                     list workflow executions with a specific tag  by  calling
                     ListOpenWorkflowExecutions  or   ListClosedWorkflowExecu-
                     tions and specifying a  TagFilter .

                     (string)

                 lambdaRole -> (string)
                     The IAM role attached to the child workflow execution.

              scheduleLambdaFunctionDecisionAttributes -> (structure)
                 Provides the details of the ScheduleLambdaFunction  decision.
                 It isn't set for other decision types.

                 id -> (string)
                     A string that identifies the Lambda function execution in
                     the event history.

                 name -> (string)
                     The name, or ARN, of the Lambda function to schedule.

                 control -> (string)
                     The data attached to the event that the decider  can  use
                     in subsequent workflow tasks. This data isn't sent to the
                     Lambda task.

                 input -> (string)
                     The optional input data to  be  supplied  to  the  Lambda
                     function.

                 startToCloseTimeout -> (string)
                     The  timeout  value,  in  seconds, after which the Lambda
                     function is considered to be failed once it has  started.
                     This  can  be any integer from 1-300 (1s-5m). If no value
                     is supplied, than a default value of 300s is assumed.

       Shorthand Syntax:

          decisionType=string,scheduleActivityTaskDecisionAttributes={activityType={name=string,version=string},activityId=string,control=string,input=string,scheduleToCloseTimeout=string,taskList={name=string},taskPriority=string,scheduleToStartTimeout=string,startToCloseTimeout=string,heartbeatTimeout=string},requestCancelActivityTaskDecisionAttributes={activityId=string},completeWorkflowExecutionDecisionAttributes={result=string},failWorkflowExecutionDecisionAttributes={reason=string,details=string},cancelWorkflowExecutionDecisionAttributes={details=string},continueAsNewWorkflowExecutionDecisionAttributes={input=string,executionStartToCloseTimeout=string,taskList={name=string},taskPriority=string,taskStartToCloseTimeout=string,childPolicy=string,tagList=[string,string],workflowTypeVersion=string,lambdaRole=string},recordMarkerDecisionAttributes={markerName=string,details=string},startTimerDecisionAttributes={timerId=string,control=string,startToFireTimeout=string},cancelTimerDecisionAttributes={timerId=string},signalExternalWorkflowExecutionDecisionAttributes={workflowId=string,runId=string,signalName=string,input=string,control=string},requestCancelExternalWorkflowExecutionDecisionAttributes={workflowId=string,runId=string,control=string},startChildWorkflowExecutionDecisionAttributes={workflowType={name=string,version=string},workflowId=string,control=string,input=string,executionStartToCloseTimeout=string,taskList={name=string},taskPriority=string,taskStartToCloseTimeout=string,childPolicy=string,tagList=[string,string],lambdaRole=string},scheduleLambdaFunctionDecisionAttributes={id=string,name=string,control=string,input=string,startToCloseTimeout=string} ...

       JSON Syntax:

          [
            {
              "decisionType": "ScheduleActivityTask"|"RequestCancelActivityTask"|"CompleteWorkflowExecution"|"FailWorkflowExecution"|"CancelWorkflowExecution"|"ContinueAsNewWorkflowExecution"|"RecordMarker"|"StartTimer"|"CancelTimer"|"SignalExternalWorkflowExecution"|"RequestCancelExternalWorkflowExecution"|"StartChildWorkflowExecution"|"ScheduleLambdaFunction",
              "scheduleActivityTaskDecisionAttributes": {
                "activityType": {
                  "name": "string",
                  "version": "string"
                },
                "activityId": "string",
                "control": "string",
                "input": "string",
                "scheduleToCloseTimeout": "string",
                "taskList": {
                  "name": "string"
                },
                "taskPriority": "string",
                "scheduleToStartTimeout": "string",
                "startToCloseTimeout": "string",
                "heartbeatTimeout": "string"
              },
              "requestCancelActivityTaskDecisionAttributes": {
                "activityId": "string"
              },
              "completeWorkflowExecutionDecisionAttributes": {
                "result": "string"
              },
              "failWorkflowExecutionDecisionAttributes": {
                "reason": "string",
                "details": "string"
              },
              "cancelWorkflowExecutionDecisionAttributes": {
                "details": "string"
              },
              "continueAsNewWorkflowExecutionDecisionAttributes": {
                "input": "string",
                "executionStartToCloseTimeout": "string",
                "taskList": {
                  "name": "string"
                },
                "taskPriority": "string",
                "taskStartToCloseTimeout": "string",
                "childPolicy": "TERMINATE"|"REQUEST_CANCEL"|"ABANDON",
                "tagList": ["string", ...],
                "workflowTypeVersion": "string",
                "lambdaRole": "string"
              },
              "recordMarkerDecisionAttributes": {
                "markerName": "string",
                "details": "string"
              },
              "startTimerDecisionAttributes": {
                "timerId": "string",
                "control": "string",
                "startToFireTimeout": "string"
              },
              "cancelTimerDecisionAttributes": {
                "timerId": "string"
              },
              "signalExternalWorkflowExecutionDecisionAttributes": {
                "workflowId": "string",
                "runId": "string",
                "signalName": "string",
                "input": "string",
                "control": "string"
              },
              "requestCancelExternalWorkflowExecutionDecisionAttributes": {
                "workflowId": "string",
                "runId": "string",
                "control": "string"
              },
              "startChildWorkflowExecutionDecisionAttributes": {
                "workflowType": {
                  "name": "string",
                  "version": "string"
                },
                "workflowId": "string",
                "control": "string",
                "input": "string",
                "executionStartToCloseTimeout": "string",
                "taskList": {
                  "name": "string"
                },
                "taskPriority": "string",
                "taskStartToCloseTimeout": "string",
                "childPolicy": "TERMINATE"|"REQUEST_CANCEL"|"ABANDON",
                "tagList": ["string", ...],
                "lambdaRole": "string"
              },
              "scheduleLambdaFunctionDecisionAttributes": {
                "id": "string",
                "name": "string",
                "control": "string",
                "input": "string",
                "startToCloseTimeout": "string"
              }
            }
            ...
          ]

       --execution-context (string)
          User defined context to add to workflow execution.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       None



                                             RESPOND-DECISION-TASK-COMPLETED()
