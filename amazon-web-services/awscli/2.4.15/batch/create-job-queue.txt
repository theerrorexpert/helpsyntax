CREATE-JOB-QUEUE()                                          CREATE-JOB-QUEUE()



NAME
       create-job-queue -

DESCRIPTION
       Creates  an Batch job queue. When you create a job queue, you associate
       one or more compute environments to the queue and assign  an  order  of
       preference for the compute environments.

       You also set a priority to the job queue that determines the order that
       the Batch scheduler places jobs onto its  associated  compute  environ-
       ments.  For  example,  if a compute environment is associated with more
       than one job queue, the job queue with a higher priority is given pref-
       erence for scheduling jobs to that compute environment.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-job-queue
          --job-queue-name <value>
          [--state <value>]
          [--scheduling-policy-arn <value>]
          --priority <value>
          --compute-environment-order <value>
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --job-queue-name (string)
          The  name of the job queue. It can be up to 128 letters long. It can
          contain uppercase and lowercase letters, numbers, hyphens  (-),  and
          underscores (_).

       --state (string)
          The  state  of the job queue. If the job queue state is ENABLED , it
          is able to accept jobs. If the job queue state  is  DISABLED  ,  new
          jobs  can't be added to the queue, but jobs already in the queue can
          finish.

          Possible values:

          o ENABLED

          o DISABLED

       --scheduling-policy-arn (string)
          The Amazon Resource Name (ARN) of the fair share scheduling  policy.
          If  this  parameter  is  specified,  the job queue uses a fair share
          scheduling policy. If this parameter isn't specified, the job  queue
          uses  a  first  in,  first out (FIFO) scheduling policy. After a job
          queue is created, you can replace but can't remove  the  fair  share
          scheduling  policy.  The  format  is aws:*Partition* :batch:*Region*
          :*Account*   :scheduling-policy/*Name*   ``   .   An   example    is
          ``aws:aws:batch:us-west-2:012345678910:scheduling-policy/MySchedul-
          ingPolicy .

       --priority (integer)
          The priority of the job queue. Job queues with a higher priority (or
          a  higher  integer  value  for the priority parameter) are evaluated
          first when associated with the same compute environment. Priority is
          determined in descending order. For example, a job queue with a pri-
          ority value of 10 is given scheduling preference over  a  job  queue
          with a priority value of 1 . All of the compute environments must be
          either EC2 (EC2 or SPOT ) or Fargate (FARGATE or FARGATE_SPOT ); EC2
          and Fargate compute environments can't be mixed.

       --compute-environment-order (list)
          The  set  of  compute  environments  mapped to a job queue and their
          order relative to each other. The job scheduler uses this  parameter
          to  determine  which  compute environment should run a specific job.
          Compute environments must be in the VALID state before you can asso-
          ciate  them  with a job queue. You can associate up to three compute
          environments with a job queue. All of the compute environments  must
          be  either EC2 (EC2 or SPOT ) or Fargate (FARGATE or FARGATE_SPOT );
          EC2 and Fargate compute environments can't be mixed.

          NOTE:
              All compute environments that are associated with  a  job  queue
              must  share  the same architecture. Batch doesn't support mixing
              compute environment architecture types in a single job queue.

          (structure)
              The order in which compute environments are tried for job place-
              ment within a queue. Compute environments are tried in ascending
              order. For example, if two compute environments  are  associated
              with  a  job  queue,  the compute environment with a lower order
              integer value is tried for job placement first. Compute environ-
              ments  must  be in the VALID state before you can associate them
              with a job queue. All of the compute environments must be either
              EC2  (EC2  or  SPOT ) or Fargate (FARGATE or FARGATE_SPOT ); EC2
              and Fargate compute environments can't be mixed.

              NOTE:
                 All compute environments that are associated with a job queue
                 must  share the same architecture. Batch doesn't support mix-
                 ing compute environment architecture types in  a  single  job
                 queue.

              order -> (integer)
                 The  order  of  the compute environment. Compute environments
                 are tried in ascending order. For  example,  if  two  compute
                 environments  are  associated  with  a job queue, the compute
                 environment with a lower order integer value is tried for job
                 placement first.

              computeEnvironment -> (string)
                 The Amazon Resource Name (ARN) of the compute environment.

       Shorthand Syntax:

          order=integer,computeEnvironment=string ...

       JSON Syntax:

          [
            {
              "order": integer,
              "computeEnvironment": "string"
            }
            ...
          ]

       --tags (map)
          The  tags that you apply to the job queue to help you categorize and
          organize your resources. Each tag consists of a key and an  optional
          value.  For  more  information,  see Tagging your Batch resources in
          Batch User Guide .

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a low priority job queue with a single compute environment

       This example creates a job  queue  called  LowPriority  that  uses  the
       M4Spot compute environment.

       Command:

          aws batch create-job-queue --cli-input-json file://<path_to_json_file>/LowPriority.json

       JSON file format:

          {
            "jobQueueName": "LowPriority",
            "state": "ENABLED",
            "priority": 10,
            "computeEnvironmentOrder": [
              {
                "order": 1,
                "computeEnvironment": "M4Spot"
              }
            ]
          }

       Output:

          {
              "jobQueueArn": "arn:aws:batch:us-east-1:012345678910:job-queue/LowPriority",
              "jobQueueName": "LowPriority"
          }

       To create a high priority job queue with two compute environments

       This  example  creates  a  job  queue called HighPriority that uses the
       C4OnDemand compute environment with an order of 1 and the  M4Spot  com-
       pute  environment  with  an  order  of 2. The scheduler will attempt to
       place jobs on the C4OnDemand compute environment first.

       Command:

          aws batch create-job-queue --cli-input-json file://<path_to_json_file>/HighPriority.json

       JSON file format:

          {
            "jobQueueName": "HighPriority",
            "state": "ENABLED",
            "priority": 1,
            "computeEnvironmentOrder": [
              {
                "order": 1,
                "computeEnvironment": "C4OnDemand"
              },
              {
                "order": 2,
                "computeEnvironment": "M4Spot"
              }
            ]
          }

       Output:

          {
              "jobQueueArn": "arn:aws:batch:us-east-1:012345678910:job-queue/HighPriority",
              "jobQueueName": "HighPriority"
          }

OUTPUT
       jobQueueName -> (string)
          The name of the job queue.

       jobQueueArn -> (string)
          The Amazon Resource Name (ARN) of the job queue.



                                                            CREATE-JOB-QUEUE()
