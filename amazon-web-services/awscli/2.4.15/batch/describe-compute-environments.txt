DESCRIBE-COMPUTE-ENVIRONMENTS()                DESCRIBE-COMPUTE-ENVIRONMENTS()



NAME
       describe-compute-environments -

DESCRIPTION
       Describes one or more of your compute environments.

       If  you're  using  an  unmanaged  compute  environment, you can use the
       DescribeComputeEnvironment operation  to  determine  the  ecsClusterArn
       that you should launch your Amazon ECS container instances into.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       describe-compute-environments  is  a  paginated operation. Multiple API
       calls may be issued in  order  to  retrieve  the  entire  data  set  of
       results.  You  can  disable  pagination  by providing the --no-paginate
       argument.  When using --output text and the --query argument on a pagi-
       nated response, the --query argument must extract data from the results
       of the following query expressions: computeEnvironments

SYNOPSIS
            describe-compute-environments
          [--compute-environments <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --compute-environments (list)
          A list of up  to  100  compute  environment  names  or  full  Amazon
          Resource Name (ARN) entries.

          (string)

       Syntax:

          "string" "string" ...

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size  results  in  more  calls to the AWS service,
          retrieving fewer items in each call. This can help prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To describe a compute environment

       This example describes the P2OnDemand compute environment.

       Command:

          aws batch describe-compute-environments --compute-environments P2OnDemand

       Output:

          {
              "computeEnvironments": [
                  {
                      "status": "VALID",
                      "serviceRole": "arn:aws:iam::012345678910:role/AWSBatchServiceRole",
                      "computeEnvironmentArn": "arn:aws:batch:us-east-1:012345678910:compute-environment/P2OnDemand",
                      "computeResources": {
                          "subnets": [
                              "subnet-220c0e0a",
                              "subnet-1a95556d",
                              "subnet-978f6dce"
                          ],
                          "tags": {
                              "Name": "Batch Instance - P2OnDemand"
                          },
                          "desiredvCpus": 48,
                          "minvCpus": 0,
                          "instanceTypes": [
                              "p2"
                          ],
                          "securityGroupIds": [
                              "sg-cf5093b2"
                          ],
                          "instanceRole": "ecsInstanceRole",
                          "maxvCpus": 128,
                          "type": "EC2",
                          "ec2KeyPair": "id_rsa"
                      },
                      "statusReason": "ComputeEnvironment Healthy",
                      "ecsClusterArn": "arn:aws:ecs:us-east-1:012345678910:cluster/P2OnDemand_Batch_2c06f29d-d1fe-3a49-879d-42394c86effc",
                      "state": "ENABLED",
                      "computeEnvironmentName": "P2OnDemand",
                      "type": "MANAGED"
                  }
              ]
          }

OUTPUT
       computeEnvironments -> (list)
          The list of compute environments.

          (structure)
              An object representing an Batch compute environment.

              computeEnvironmentName -> (string)
                 The name of the compute environment. It can be up to 128 let-
                 ters  long.  It  can contain uppercase and lowercase letters,
                 numbers, hyphens (-), and underscores (_).

              computeEnvironmentArn -> (string)
                 The Amazon Resource Name (ARN) of the compute environment.

              unmanagedvCpus -> (integer)
                 The maximum number of VCPUs expected to be used for an unman-
                 aged compute environment.

              ecsClusterArn -> (string)
                 The  Amazon  Resource Name (ARN) of the underlying Amazon ECS
                 cluster used by the compute environment.

              tags -> (map)
                 The tags applied to the compute environment.

                 key -> (string)

                 value -> (string)

              type -> (string)
                 The type of the compute environment: MANAGED or  UNMANAGED  .
                 For  more  information, see Compute Environments in the Batch
                 User Guide .

              state -> (string)
                 The state of the compute environment. The  valid  values  are
                 ENABLED or DISABLED .

                 If  the  state  is  ENABLED  ,  then  the Batch scheduler can
                 attempt to place jobs from an associated  job  queue  on  the
                 compute  resources  within  the  environment.  If the compute
                 environment is managed, then it can scale its  instances  out
                 or in automatically, based on the job queue demand.

                 If  the  state is DISABLED , then the Batch scheduler doesn't
                 attempt to place jobs  within  the  environment.  Jobs  in  a
                 STARTING or RUNNING state continue to progress normally. Man-
                 aged compute environments in the DISABLED state  don't  scale
                 out. However, they scale in to minvCpus value after instances
                 become idle.

              status -> (string)
                 The current status of the compute environment  (for  example,
                 CREATING or VALID ).

              statusReason -> (string)
                 A  short, human-readable string to provide additional details
                 about the current status of the compute environment.

              computeResources -> (structure)
                 The compute resources defined for  the  compute  environment.
                 For  more  information, see Compute Environments in the Batch
                 User Guide .

                 type -> (string)
                     The type of compute environment: EC2 , SPOT ,  FARGATE  ,
                     or FARGATE_SPOT . For more information, see Compute Envi-
                     ronments in the Batch User Guide .

                     If you choose SPOT , you must also specify an Amazon  EC2
                     Spot  Fleet role with the spotIamFleetRole parameter. For
                     more information, see Amazon EC2 Spot Fleet role  in  the
                     Batch User Guide .

                 allocationStrategy -> (string)
                     The  allocation  strategy to use for the compute resource
                     if not enough instances of the best fitting instance type
                     can  be  allocated. This might be because of availability
                     of the instance type in the Region or Amazon EC2  service
                     limits  . For more information, see Allocation Strategies
                     in the Batch User Guide .

                     NOTE:
                        This parameter isn't applicable to jobs that are  run-
                        ning on Fargate resources, and shouldn't be specified.

                        BEST_FIT (default)

                     Batch selects an instance type that best fits  the  needs
                     of  the  jobs  with  a  preference  for  the  lowest-cost
                     instance type. If additional instances  of  the  selected
                     instance type aren't available, Batch waits for the addi-
                     tional instances to be available. If there aren't  enough
                     instances  available,  or  if the user is reaching Amazon
                     EC2 service limits then additional jobs aren't run  until
                     the  currently  running jobs have completed. This alloca-
                     tion strategy keeps costs lower but can limit scaling. If
                     you  are  using  Spot  Fleets with BEST_FIT then the Spot
                     Fleet IAM Role must be specified.
                        BEST_FIT_PROGRESSIVE

                     Batch will select  additional  instance  types  that  are
                     large  enough to meet the requirements of the jobs in the
                     queue, with a preference for instance types with a  lower
                     cost per unit vCPU. If additional instances of the previ-
                     ously selected instance  types  aren't  available,  Batch
                     will select new instance types.
                        SPOT_CAPACITY_OPTIMIZED

                     Batch  will  select  one  or more instance types that are
                     large enough to meet the requirements of the jobs in  the
                     queue, with a preference for instance types that are less
                     likely to be interrupted.  This  allocation  strategy  is
                     only available for Spot Instance compute resources.

                     With  both  BEST_FIT_PROGRESSIVE  and SPOT_CAPACITY_OPTI-
                     MIZED strategies, Batch might need to go  above  maxvCpus
                     to  meet your capacity requirements. In this event, Batch
                     never exceeds maxvCpus by more than a single instance.

                 minvCpus -> (integer)
                     The minimum number of Amazon EC2 vCPUs that  an  environ-
                     ment  should maintain (even if the compute environment is
                     DISABLED ).

                     NOTE:
                        This parameter isn't applicable to jobs that are  run-
                        ning on Fargate resources, and shouldn't be specified.

                 maxvCpus -> (integer)
                     The maximum number of Amazon EC2  vCPUs  that  a  compute
                     environment can reach.

                     NOTE:
                        With both BEST_FIT_PROGRESSIVE and SPOT_CAPACITY_OPTI-
                        MIZED  allocation  strategies,  Batch  might  need  to
                        exceed maxvCpus to meet your capacity requirements. In
                        this event, Batch never exceeds maxvCpus by more  than
                        a  single instance. For example, no more than a single
                        instance from among those specified  in  your  compute
                        environment is allocated.

                 desiredvCpus -> (integer)
                     The  desired  number  of  Amazon EC2 vCPUS in the compute
                     environment. Batch modifies this value between the  mini-
                     mum and maximum values, based on job queue demand.

                     NOTE:
                        This  parameter isn't applicable to jobs that are run-
                        ning on Fargate resources, and shouldn't be specified.

                 instanceTypes -> (list)
                     The instances types that can be launched. You can specify
                     instance families to  launch  any  instance  type  within
                     those families (for example, c5 or p3 ), or you can spec-
                     ify specific sizes within a family (such as c5.8xlarge ).
                     You  can  also  choose  optimal  to select instance types
                     (from the C4, M4, and R4 instance  families)  that  match
                     the demand of your job queues.

                     NOTE:
                        This  parameter isn't applicable to jobs that are run-
                        ning on Fargate resources, and shouldn't be specified.

                     NOTE:
                        When  you  create  a compute environment, the instance
                        types that you select for the compute environment must
                        share  the  same  architecture. For example, you can't
                        mix x86 and ARM instances in the same compute environ-
                        ment.

                     NOTE:
                        Currently,  optimal  uses  instance types from the C4,
                        M4, and R4 instance families. In  Regions  that  don't
                        have  instance  types  from  those  instance families,
                        instance types from the C5, M5. and R5 instance  fami-
                        lies are used.

                     (string)

                 imageId -> (string)
                     The  Amazon  Machine  Image  (AMI)  ID used for instances
                     launched in the compute environment.  This  parameter  is
                     overridden  by  the imageIdOverride member of the Ec2Con-
                     figuration structure.

                     NOTE:
                        This parameter isn't applicable to jobs that are  run-
                        ning on Fargate resources, and shouldn't be specified.

                     NOTE:
                        The AMI that you choose for a compute environment must
                        match  the architecture of the instance types that you
                        intend to use for that compute environment. For  exam-
                        ple,  if  your  compute  environment  uses A1 instance
                        types, the compute resource AMI that you  choose  must
                        support  ARM  instances. Amazon ECS vends both x86 and
                        ARM versions of the Amazon ECS-optimized Amazon  Linux
                        2  AMI. For more information, see Amazon ECS-optimized
                        Amazon Linux 2 AMI in  the  Amazon  Elastic  Container
                        Service Developer Guide .

                 subnets -> (list)
                     The VPC subnets where the compute resources are launched.
                     These subnets must be within the same VPC.  Fargate  com-
                     pute  resources  can  contain  up to 16 subnets. For more
                     information, see VPCs and Subnets in the Amazon VPC  User
                     Guide .

                     (string)

                 securityGroupIds -> (list)
                     The  Amazon EC2 security groups associated with instances
                     launched in the compute environment. One or more security
                     groups  must  be specified, either in securityGroupIds or
                     using a launch template referenced  in  launchTemplate  .
                     This  parameter  is required for jobs that are running on
                     Fargate resources and must contain at least one  security
                     group. Fargate doesn't support launch templates. If secu-
                     rity groups are specified using both securityGroupIds and
                     launchTemplate , the values in securityGroupIds are used.

                     (string)

                 ec2KeyPair -> (string)
                     The  Amazon  EC2  key  pair  that's  used  for  instances
                     launched in the compute environment. You can use this key
                     pair to log in to your instances with SSH.

                     NOTE:
                        This parameter isn't applicable to jobs that are  run-
                        ning on Fargate resources, and shouldn't be specified.

                 instanceRole -> (string)
                     The Amazon ECS instance profile  applied  to  Amazon  EC2
                     instances  in  a compute environment. You can specify the
                     short name or full  Amazon  Resource  Name  (ARN)  of  an
                     instance profile. For example, `` ecsInstanceRole `` or
                     ``
                     arn:aws:iam::<aws_account_id>    :instance-profile/ecsIn-
                     stanceRole `` . For  more  information,  see  Amazon  ECS
                     Instance Role in the Batch User Guide .

                     NOTE:
                        This  parameter isn't applicable to jobs that are run-
                        ning on Fargate resources, and shouldn't be specified.

                 tags -> (map)
                     Key-value  pair  tags to be applied to EC2 resources that
                     are launched in the compute environment. For Batch, these
                     take  the  form of "String1": "String2", where String1 is
                     the tag key and String2 is the tag  valuefor  example,  {
                     "Name": "Batch Instance - C4OnDemand" } . This is helpful
                     for recognizing your Batch instances in  the  Amazon  EC2
                     console. These tags can't be updated or removed after the
                     compute environment is created. Any changes to these tags
                     require  that  you  create  a new compute environment and
                     remove the old compute  environment.  These  tags  aren't
                     seen  when using the Batch ListTagsForResource API opera-
                     tion.

                     NOTE:
                        This parameter isn't applicable to jobs that are  run-
                        ning on Fargate resources, and shouldn't be specified.

                     key -> (string)

                     value -> (string)

                 placementGroup -> (string)
                     The Amazon EC2 placement group  to  associate  with  your
                     compute  resources.  If  you  intend to submit multi-node
                     parallel jobs to your  compute  environment,  you  should
                     consider creating a cluster placement group and associate
                     it  with  your  compute  resources.   This   keeps   your
                     multi-node   parallel   job  on  a  logical  grouping  of
                     instances within a single  Availability  Zone  with  high
                     network   flow   potential.  For  more  information,  see
                     Placement Groups in the Amazon EC2 User Guide  for  Linux
                     Instances .

                     NOTE:
                        This  parameter isn't applicable to jobs that are run-
                        ning on Fargate resources, and shouldn't be specified.

                 bidPercentage -> (integer)
                     The  maximum percentage that a Spot Instance price can be
                     when compared with the On-Demand price for that  instance
                     type  before instances are launched. For example, if your
                     maximum percentage is 20%, then the Spot  price  must  be
                     less  than  20%  of  the current On-Demand price for that
                     Amazon EC2 instance. You always pay the  lowest  (market)
                     price and never more than your maximum percentage. If you
                     leave this field empty, the default value is 100% of  the
                     On-Demand price.

                     NOTE:
                        This  parameter isn't applicable to jobs that are run-
                        ning on Fargate resources, and shouldn't be specified.

                 spotIamFleetRole -> (string)
                     The  Amazon  Resource  Name  (ARN) of the Amazon EC2 Spot
                     Fleet IAM role applied to  a  SPOT  compute  environment.
                     This  role  is required if the allocation strategy set to
                     BEST_FIT or if the allocation strategy  isn't  specified.
                     For  more  information, see Amazon EC2 Spot Fleet Role in
                     the Batch User Guide .

                     NOTE:
                        This parameter isn't applicable to jobs that are  run-
                        ning on Fargate resources, and shouldn't be specified.

                     WARNING:
                        To tag your Spot Instances on creation, the Spot Fleet
                        IAM  role  specified  here  must  use  the  newer Ama-
                        zonEC2SpotFleetTaggingRole managed policy. The  previ-
                        ously  recommended AmazonEC2SpotFleetRole managed pol-
                        icy doesn't have the required permissions to tag  Spot
                        Instances.  For  more  information, see Spot Instances
                        not tagged on creation in the Batch User Guide .

                 launchTemplate -> (structure)
                     The launch template to use for  your  compute  resources.
                     Any other compute resource parameters that you specify in
                     a  CreateComputeEnvironment API  operation  override  the
                     same  parameters in the launch template. You must specify
                     either the launch template ID or launch template name  in
                     the  request,  but  not  both.  For more information, see
                     Launch Template Support in the Batch User Guide .

                     NOTE:
                        This parameter isn't applicable to jobs that are  run-
                        ning on Fargate resources, and shouldn't be specified.

                     launchTemplateId -> (string)
                        The ID of the launch template.

                     launchTemplateName -> (string)
                        The name of the launch template.

                     version -> (string)
                        The version number of the launch template,  $Latest  ,
                        or $Default .

                        If  the  value  is $Latest , the latest version of the
                        launch template is used. If the value  is  $Default  ,
                        the default version of the launch template is used.

                        WARNING:
                            After  the  compute  environment  is  created, the
                            launch template version that's used isn't changed,
                            even  if  the  $Default or $Latest version for the
                            launch template is updated. To use  a  new  launch
                            template  version,  create  a new compute environ-
                            ment, add  the  new  compute  environment  to  the
                            existing  job  queue, remove the old compute envi-
                            ronment from the job queue,  and  delete  the  old
                            compute environment.

                        Default: $Default .

                 ec2Configuration -> (list)
                     Provides information used to select Amazon Machine Images
                     (AMIs) for EC2 instances in the compute  environment.  If
                     Ec2Configuration  isn't specified, the default is ECS_AL2
                     .

                     One or two values can be provided.

                     NOTE:
                        This parameter isn't applicable to jobs that are  run-
                        ning on Fargate resources, and shouldn't be specified.

                     (structure)
                        Provides information used  to  select  Amazon  Machine
                        Images  (AMIs)  for  instances in the compute environ-
                        ment. If Ec2Configuration isn't specified, the default
                        is ECS_AL2 (Amazon Linux 2 ).

                        NOTE:
                            This object isn't applicable to jobs that are run-
                            ning on Fargate resources.

                        imageType -> (string)
                            The image type to match with the instance type  to
                            select  an  AMI.  If the imageIdOverride parameter
                            isn't specified, then a  recent  Amazon  ECS-opti-
                            mized Amazon Linux 2 AMI (ECS_AL2 ) is used.
                                   ECS_AL2

                               Amazon   Linux   2   Default  for  all  non-GPU
                               instance families.
                                   ECS_AL2_NVIDIA

                               Amazon  Linux  2  (GPU)  Default  for  all  GPU
                               instance  families (for example P4 and G4 ) and
                               can be used for all  non  Amazon  Web  Services
                               Graviton-based instance types.
                                   ECS_AL1

                               Amazon  Linux  .  Amazon  Linux is reaching the
                               end-of-life  of  standard  support.  For   more
                               information, see Amazon Linux AMI .

                        imageIdOverride -> (string)
                            The AMI ID used for instances launched in the com-
                            pute environment that match the image  type.  This
                            setting  overrides  the imageId set in the comput-
                            eResource object.

              serviceRole -> (string)
                 The service role associated with the compute environment that
                 allows  Batch to make calls to Amazon Web Services API opera-
                 tions on your behalf. For more information, see Batch service
                 IAM role in the Batch User Guide .

       nextToken -> (string)
          The  nextToken  value to include in a future DescribeComputeEnviron-
          ments request. When the  results  of  a  DescribeComputeEnvironments
          request  exceed  maxResults , this value can be used to retrieve the
          next page of results. This value is null  when  there  are  no  more
          results to return.



                                               DESCRIBE-COMPUTE-ENVIRONMENTS()
