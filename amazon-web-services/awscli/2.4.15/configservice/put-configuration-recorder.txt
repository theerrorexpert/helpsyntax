PUT-CONFIGURATION-RECORDER()                      PUT-CONFIGURATION-RECORDER()



NAME
       put-configuration-recorder -

DESCRIPTION
       Creates  a  new  configuration recorder to record the selected resource
       configurations.

       You can use this action to change the role roleARN  or  the  recording-
       Group  of  an existing recorder. To change the role, call the action on
       the existing configuration recorder and specify a role.

       NOTE:
          Currently, you can  specify  only  one  configuration  recorder  per
          region in your account.

          If  ConfigurationRecorder does not have the recordingGroup parameter
          specified, the default is to record all supported resource types.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            put-configuration-recorder
          --configuration-recorder <value>
          [--recording-group <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --configuration-recorder (structure)
          The configuration recorder object that  records  each  configuration
          change made to the resources.

          name -> (string)
              The  name  of  the  recorder.  By  default, Config automatically
              assigns the  name  "default"  when  creating  the  configuration
              recorder. You cannot change the assigned name.

          roleARN -> (string)
              Amazon  Resource Name (ARN) of the IAM role used to describe the
              Amazon Web Services resources associated with the account.

       Shorthand Syntax:

          name=string,roleARN=string

       JSON Syntax:

          {
            "name": "string",
            "roleARN": "string"
          }

       --recording-group (structure)
          Specifies the types of Amazon Web Services resources for which  Con-
          fig records configuration changes.

          allSupported -> (boolean)
              Specifies whether Config records configuration changes for every
              supported type of regional resource.

              If you set this option to true , when Config adds support for  a
              new  type of regional resource, it starts recording resources of
              that type automatically.

              If you set this option to true , you cannot enumerate a list  of
              resourceTypes .

          includeGlobalResourceTypes -> (boolean)
              Specifies  whether Config includes all supported types of global
              resources (for example, IAM resources) with the  resources  that
              it records.

              Before  you  can set this option to true , you must set the all-
              Supported option to true .

              If you set this option to true , when Config adds support for  a
              new  type  of  global resource, it starts recording resources of
              that type automatically.

              The configuration details for any global resource are  the  same
              in  all  regions.  To prevent duplicate configuration items, you
              should consider customizing Config in only one region to  record
              global resources.

          resourceTypes -> (list)
              A  comma-separated  list  that specifies the types of Amazon Web
              Services  resources  for  which  Config  records   configuration
              changes   (for   example,   AWS::EC2::Instance   or  AWS::Cloud-
              Trail::Trail ).

              To record all configuration changes, you must  set  the  allSup-
              ported option to true .

              If you set this option to false , when Config adds support for a
              new type of resource, it will not record resources of that  type
              unless you manually add that type to your recording group.

              For  a  list of valid resourceTypes values, see the resourceType
              Value column in Supported Amazon Web Services resource Types .

              (string)

       Shorthand Syntax:

          allSupported=boolean,includeGlobalResourceTypes=boolean,resourceTypes=string,string

       JSON Syntax:

          {
            "allSupported": true|false,
            "includeGlobalResourceTypes": true|false,
            "resourceTypes": ["AWS::EC2::CustomerGateway"|"AWS::EC2::EIP"|"AWS::EC2::Host"|"AWS::EC2::Instance"|"AWS::EC2::InternetGateway"|"AWS::EC2::NetworkAcl"|"AWS::EC2::NetworkInterface"|"AWS::EC2::RouteTable"|"AWS::EC2::SecurityGroup"|"AWS::EC2::Subnet"|"AWS::CloudTrail::Trail"|"AWS::EC2::Volume"|"AWS::EC2::VPC"|"AWS::EC2::VPNConnection"|"AWS::EC2::VPNGateway"|"AWS::EC2::RegisteredHAInstance"|"AWS::EC2::NatGateway"|"AWS::EC2::EgressOnlyInternetGateway"|"AWS::EC2::VPCEndpoint"|"AWS::EC2::VPCEndpointService"|"AWS::EC2::FlowLog"|"AWS::EC2::VPCPeeringConnection"|"AWS::Elasticsearch::Domain"|"AWS::IAM::Group"|"AWS::IAM::Policy"|"AWS::IAM::Role"|"AWS::IAM::User"|"AWS::ElasticLoadBalancingV2::LoadBalancer"|"AWS::ACM::Certificate"|"AWS::RDS::DBInstance"|"AWS::RDS::DBSubnetGroup"|"AWS::RDS::DBSecurityGroup"|"AWS::RDS::DBSnapshot"|"AWS::RDS::DBCluster"|"AWS::RDS::DBClusterSnapshot"|"AWS::RDS::EventSubscription"|"AWS::S3::Bucket"|"AWS::S3::AccountPublicAccessBlock"|"AWS::Redshift::Cluster"|"AWS::Redshift::ClusterSnapshot"|"AWS::Redshift::ClusterParameterGroup"|"AWS::Redshift::ClusterSecurityGroup"|"AWS::Redshift::ClusterSubnetGroup"|"AWS::Redshift::EventSubscription"|"AWS::SSM::ManagedInstanceInventory"|"AWS::CloudWatch::Alarm"|"AWS::CloudFormation::Stack"|"AWS::ElasticLoadBalancing::LoadBalancer"|"AWS::AutoScaling::AutoScalingGroup"|"AWS::AutoScaling::LaunchConfiguration"|"AWS::AutoScaling::ScalingPolicy"|"AWS::AutoScaling::ScheduledAction"|"AWS::DynamoDB::Table"|"AWS::CodeBuild::Project"|"AWS::WAF::RateBasedRule"|"AWS::WAF::Rule"|"AWS::WAF::RuleGroup"|"AWS::WAF::WebACL"|"AWS::WAFRegional::RateBasedRule"|"AWS::WAFRegional::Rule"|"AWS::WAFRegional::RuleGroup"|"AWS::WAFRegional::WebACL"|"AWS::CloudFront::Distribution"|"AWS::CloudFront::StreamingDistribution"|"AWS::Lambda::Function"|"AWS::NetworkFirewall::Firewall"|"AWS::NetworkFirewall::FirewallPolicy"|"AWS::NetworkFirewall::RuleGroup"|"AWS::ElasticBeanstalk::Application"|"AWS::ElasticBeanstalk::ApplicationVersion"|"AWS::ElasticBeanstalk::Environment"|"AWS::WAFv2::WebACL"|"AWS::WAFv2::RuleGroup"|"AWS::WAFv2::IPSet"|"AWS::WAFv2::RegexPatternSet"|"AWS::WAFv2::ManagedRuleSet"|"AWS::XRay::EncryptionConfig"|"AWS::SSM::AssociationCompliance"|"AWS::SSM::PatchCompliance"|"AWS::Shield::Protection"|"AWS::ShieldRegional::Protection"|"AWS::Config::ConformancePackCompliance"|"AWS::Config::ResourceCompliance"|"AWS::ApiGateway::Stage"|"AWS::ApiGateway::RestApi"|"AWS::ApiGatewayV2::Stage"|"AWS::ApiGatewayV2::Api"|"AWS::CodePipeline::Pipeline"|"AWS::ServiceCatalog::CloudFormationProvisionedProduct"|"AWS::ServiceCatalog::CloudFormationProduct"|"AWS::ServiceCatalog::Portfolio"|"AWS::SQS::Queue"|"AWS::KMS::Key"|"AWS::QLDB::Ledger"|"AWS::SecretsManager::Secret"|"AWS::SNS::Topic"|"AWS::SSM::FileData"|"AWS::Backup::BackupPlan"|"AWS::Backup::BackupSelection"|"AWS::Backup::BackupVault"|"AWS::Backup::RecoveryPoint"|"AWS::ECR::Repository"|"AWS::ECS::Cluster"|"AWS::ECS::Service"|"AWS::ECS::TaskDefinition"|"AWS::EFS::AccessPoint"|"AWS::EFS::FileSystem"|"AWS::EKS::Cluster"|"AWS::OpenSearch::Domain"|"AWS::EC2::TransitGateway"|"AWS::Kinesis::Stream"|"AWS::Kinesis::StreamConsumer"|"AWS::CodeDeploy::Application"|"AWS::CodeDeploy::DeploymentConfig"|"AWS::CodeDeploy::DeploymentGroup", ...]
          }

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To record all supported resources

       The following command creates  a  configuration  recorder  that  tracks
       changes  to  all  supported  resource  types, including global resource
       types:

          aws configservice put-configuration-recorder --configuration-recorder name=default,roleARN=arn:aws:iam::123456789012:role/config-role --recording-group allSupported=true,includeGlobalResourceTypes=true

       To record specific types of resources

       The following command creates  a  configuration  recorder  that  tracks
       changes to only those types of resources that are specified in the JSON
       file for the --recording-group option:

          aws configservice put-configuration-recorder --configuration-recorder name=default,roleARN=arn:aws:iam::123456789012:role/config-role --recording-group file://recordingGroup.json

       recordingGroup.json  is  a  JSON  file  that  specifies  the  types  of
       resources that AWS Config will record:

          {
            "allSupported": false,
            "includeGlobalResourceTypes": false,
            "resourceTypes": [
              "AWS::EC2::EIP",
              "AWS::EC2::Instance",
              "AWS::EC2::NetworkAcl",
              "AWS::EC2::SecurityGroup",
              "AWS::CloudTrail::Trail",
              "AWS::EC2::Volume",
              "AWS::EC2::VPC",
              "AWS::IAM::User",
              "AWS::IAM::Policy"
            ]
          }

       Before  you  can  specify resource types for the resourceTypes key, you
       must set the allSupported  and  includeGlobalResourceTypes  options  to
       false or omit them.

       If  the  command  succeeds, AWS Config returns no output. To verify the
       settings    of     your     configuration     recorder,     run     the
       describe-configuration-recorders command.

OUTPUT
       None



                                                  PUT-CONFIGURATION-RECORDER()
