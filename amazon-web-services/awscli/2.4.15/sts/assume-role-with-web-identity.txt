ASSUME-ROLE-WITH-WEB-IDENTITY()                ASSUME-ROLE-WITH-WEB-IDENTITY()



NAME
       assume-role-with-web-identity -

DESCRIPTION
       Returns a set of temporary security credentials for users who have been
       authenticated in a mobile  or  web  application  with  a  web  identity
       provider.  Example providers include Amazon Cognito, Login with Amazon,
       Facebook, Google, or any OpenID Connect-compatible identity provider.

       NOTE:
          For mobile applications, we recommend that you use  Amazon  Cognito.
          You  can use Amazon Cognito with the Amazon Web Services SDK for iOS
          Developer Guide and the Amazon Web Services SDK for  Android  Devel-
          oper Guide to uniquely identify a user. You can also supply the user
          with a consistent identity throughout the lifetime  of  an  applica-
          tion.

          To  learn  more about Amazon Cognito, see Amazon Cognito Overview in
          Amazon Web Services SDK for Android Developer Guide and Amazon  Cog-
          nito Overview in the Amazon Web Services SDK for iOS Developer Guide
          .

       Calling AssumeRoleWithWebIdentity does not require the  use  of  Amazon
       Web  Services  security  credentials.  Therefore, you can distribute an
       application (for example, on mobile devices)  that  requests  temporary
       security  credentials  without  including long-term Amazon Web Services
       credentials  in  the  application.  You  also  don't  need  to   deploy
       server-based proxy services that use long-term Amazon Web Services cre-
       dentials. Instead, the identity of the caller is validated by  using  a
       token  from  the web identity provider. For a comparison of AssumeRole-
       WithWebIdentity with the other API operations  that  produce  temporary
       credentials,   see   Requesting   Temporary  Security  Credentials  and
       Comparing the Amazon Web Services STS API operations in  the  IAM  User
       Guide .

       The  temporary  security credentials returned by this API consist of an
       access key ID, a secret access key, and a security token.  Applications
       can  use  these  temporary security credentials to sign calls to Amazon
       Web Services service API operations.
          Session Duration

       By default, the temporary security credentials created  by  AssumeRole-
       WithWebIdentity  last  for  one hour. However, you can use the optional
       DurationSeconds parameter to specify the duration of your session.  You
       can  provide  a  value  from 900 seconds (15 minutes) up to the maximum
       session duration setting for the role. This setting can  have  a  value
       from  1  hour  to  12 hours. To learn how to view the maximum value for
       your role, see View the Maximum Session Duration Setting for a Role  in
       the  IAM  User  Guide . The maximum session duration limit applies when
       you use the AssumeRole* API operations or  the  assume-role*  CLI  com-
       mands.  However  the limit does not apply when you use those operations
       to create a console URL. For more information, see Using IAM  Roles  in
       the IAM User Guide .
          Permissions

       The temporary security credentials created by AssumeRoleWithWebIdentity
       can be used to make API calls to any Amazon Web Services  service  with
       the  following exception: you cannot call the STS GetFederationToken or
       GetSessionToken API operations.

       (Optional) You can pass inline or  managed  session  policies  to  this
       operation.  You  can  pass  a  single JSON policy document to use as an
       inline session policy. You can also specify up to 10  managed  policies
       to use as managed session policies. The plaintext that you use for both
       inline and managed session  policies  can't  exceed  2,048  characters.
       Passing  policies  to this operation returns new temporary credentials.
       The resulting session's permissions are the intersection of the  role's
       identity-based  policy and the session policies. You can use the role's
       temporary credentials in subsequent Amazon Web Services  API  calls  to
       access resources in the account that owns the role. You cannot use ses-
       sion policies to grant more permissions than those allowed by the iden-
       tity-based  policy of the role that is being assumed. For more informa-
       tion, see Session Policies in the IAM User Guide .
          Tags

       (Optional) You can configure your IdP to pass attributes into your  web
       identity token as session tags. Each session tag consists of a key name
       and an associated value. For more information about session  tags,  see
       Passing Session Tags in STS in the IAM User Guide .

       You can pass up to 50 session tags. The plaintext session tag keys cant
       exceed 128 characters and the values cant exceed  256  characters.  For
       these  and  additional  limits, see IAM and STS Character Limits in the
       IAM User Guide .

       NOTE:
          An Amazon Web Services  conversion  compresses  the  passed  session
          policies  and  session  tags  into a packed binary format that has a
          separate limit. Your request can fail for this limit  even  if  your
          plaintext   meets   the  other  requirements.  The  PackedPolicySize
          response element indicates by percentage how close the policies  and
          tags for your request are to the upper size limit.

       You  can pass a session tag with the same key as a tag that is attached
       to the role. When you do, the session tag overrides the role  tag  with
       the same key.

       An  administrator must grant you the permissions necessary to pass ses-
       sion tags. The administrator can also create  granular  permissions  to
       allow you to pass only specific session tags. For more information, see
       Tutorial: Using Tags for Attribute-Based Access Control in the IAM User
       Guide .

       You  can  set  the  session tags as transitive. Transitive tags persist
       during role chaining. For more information,  see  Chaining  Roles  with
       Session Tags in the IAM User Guide .
          Identities

       Before  your  application can call AssumeRoleWithWebIdentity , you must
       have an identity token from a supported identity provider and create  a
       role  that  the  application can assume. The role that your application
       assumes must trust the identity provider that is  associated  with  the
       identity token. In other words, the identity provider must be specified
       in the role's trust policy.

       WARNING:
          Calling AssumeRoleWithWebIdentity can result in  an  entry  in  your
          CloudTrail  logs. The entry includes the Subject of the provided web
          identity token. We recommend that you  avoid  using  any  personally
          identifiable information (PII) in this field. For example, you could
          instead use a GUID or a pairwise identifier,  as  suggested  in  the
          OIDC specification .

       For  more  information about how to use web identity federation and the
       AssumeRoleWithWebIdentity API, see the following resources:

       o Using Web Identity Federation API  Operations  for  Mobile  Apps  and
         Federation Through a Web-based Identity Provider .

       o Web  Identity  Federation  Playground  .  Walk through the process of
         authenticating through Login with Amazon, Facebook, or  Google,  get-
         ting temporary security credentials, and then using those credentials
         to make a request to Amazon Web Services.

       o Amazon Web Services SDK for iOS Developer Guide and Amazon  Web  Ser-
         vices SDK for Android Developer Guide . These toolkits contain sample
         apps that show how to invoke the  identity  providers.  The  toolkits
         then  show how to use the information from these providers to get and
         use temporary security credentials.

       o Web Identity Federation with Mobile Applications . This article  dis-
         cusses web identity federation and shows an example of how to use web
         identity federation to get access to content in Amazon S3.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            assume-role-with-web-identity
          --role-arn <value>
          --role-session-name <value>
          --web-identity-token <value>
          [--provider-id <value>]
          [--policy-arns <value>]
          [--policy <value>]
          [--duration-seconds <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --role-arn (string)
          The Amazon Resource Name (ARN) of the role that the caller is assum-
          ing.

       --role-session-name (string)
          An  identifier for the assumed role session. Typically, you pass the
          name or identifier that is associated with the  user  who  is  using
          your  application. That way, the temporary security credentials that
          your application will use are associated with that user.  This  ses-
          sion  name is included as part of the ARN and assumed role ID in the
          AssumedRoleUser response element.

          The regex used to validate this parameter is a string of  characters
          consisting  of upper- and lower-case alphanumeric characters with no
          spaces. You can also include underscores or  any  of  the  following
          characters: =,.@-

       --web-identity-token (string)
          The  OAuth  2.0 access token or OpenID Connect ID token that is pro-
          vided by the identity provider. Your application must get this token
          by  authenticating the user who is using your application with a web
          identity provider before the application makes an  AssumeRoleWithWe-
          bIdentity call.

       --provider-id (string)
          The  fully  qualified host component of the domain name of the iden-
          tity provider.

          Specify this value only  for  OAuth  2.0  access  tokens.  Currently
          www.amazon.com  and  graph.facebook.com are the only supported iden-
          tity providers for OAuth 2.0  access  tokens.  Do  not  include  URL
          schemes and port numbers.

          Do not specify this value for OpenID Connect ID tokens.

       --policy-arns (list)
          The  Amazon  Resource  Names (ARNs) of the IAM managed policies that
          you want to use as managed session policies. The policies must exist
          in the same account as the role.

          This  parameter is optional. You can provide up to 10 managed policy
          ARNs. However, the plaintext that you use for both inline  and  man-
          aged session policies can't exceed 2,048 characters. For more infor-
          mation about ARNs, see Amazon Resource Names (ARNs) and  Amazon  Web
          Services  Service Namespaces in the Amazon Web Services General Ref-
          erence.

          NOTE:
              An Amazon Web Services conversion compresses the passed  session
              policies and session tags into a packed binary format that has a
              separate limit. Your request can fail for  this  limit  even  if
              your  plaintext  meets the other requirements. The PackedPolicy-
              Size response element indicates  by  percentage  how  close  the
              policies  and tags for your request are to the upper size limit.

          Passing policies to this operation  returns  new  temporary  creden-
          tials.  The  resulting session's permissions are the intersection of
          the role's identity-based policy and the session policies.  You  can
          use  the  role's temporary credentials in subsequent Amazon Web Ser-
          vices API calls to access resources in the  account  that  owns  the
          role. You cannot use session policies to grant more permissions than
          those allowed by the identity-based policy of the role that is being
          assumed.  For more information, see Session Policies in the IAM User
          Guide .

          (structure)
              A reference to the IAM managed policy that is passed as  a  ses-
              sion policy for a role session or a federated user session.

              arn -> (string)
                 The  Amazon  Resource Name (ARN) of the IAM managed policy to
                 use as a session policy for the role.  For  more  information
                 about  ARNs,  see Amazon Resource Names (ARNs) and Amazon Web
                 Services Service Namespaces in the Amazon Web  Services  Gen-
                 eral Reference .

       Shorthand Syntax:

          arn=string ...

       JSON Syntax:

          [
            {
              "arn": "string"
            }
            ...
          ]

       --policy (string)
          An  IAM policy in JSON format that you want to use as an inline ses-
          sion policy.

          This parameter is  optional.  Passing  policies  to  this  operation
          returns  new  temporary credentials. The resulting session's permis-
          sions are the intersection of the role's identity-based  policy  and
          the  session  policies. You can use the role's temporary credentials
          in subsequent Amazon Web Services API calls to access  resources  in
          the  account  that owns the role. You cannot use session policies to
          grant more permissions than those allowed by the identity-based pol-
          icy  of  the  role  that is being assumed. For more information, see
          Session Policies in the IAM User Guide .

          The plaintext that you use for both inline and managed session poli-
          cies  can't  exceed 2,048 characters. The JSON policy characters can
          be any ASCII character from the space character to the  end  of  the
          valid  character list (u0020 through u00FF). It can also include the
          tab (u0009), linefeed (u000A), and carriage return  (u000D)  charac-
          ters.

          NOTE:
              An  Amazon Web Services conversion compresses the passed session
              policies and session tags into a packed binary format that has a
              separate  limit.  Your  request  can fail for this limit even if
              your plaintext meets the other requirements.  The  PackedPolicy-
              Size  response  element  indicates  by  percentage how close the
              policies and tags for your request are to the upper size  limit.

       --duration-seconds (integer)
          The  duration,  in seconds, of the role session. The value can range
          from 900 seconds (15 minutes) up to  the  maximum  session  duration
          setting  for  the role. This setting can have a value from 1 hour to
          12 hours. If you specify a value higher than this setting, the oper-
          ation  fails.  For  example, if you specify a session duration of 12
          hours, but your administrator set the maximum session duration to  6
          hours,  your operation fails. To learn how to view the maximum value
          for your role, see View the Maximum Session Duration Setting  for  a
          Role in the IAM User Guide .

          By default, the value is set to 3600 seconds.

          NOTE:
              The DurationSeconds parameter is separate from the duration of a
              console session that you might request using the  returned  cre-
              dentials.  The  request to the federation endpoint for a console
              sign-in token takes a SessionDuration parameter  that  specifies
              the maximum length of the console session. For more information,
              see Creating a URL that Enables Federated Users  to  Access  the
              Amazon Web Services Management Console in the IAM User Guide .

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To  get  short-term credentials for a role authenticated with Web Iden-
       tity (OAuth 2."0)

       The following assume-role-with-web-identity example retrieves a set  of
       short-term  credentials for the IAM role app1. The request is authenti-
       cated by using the web identity token supplied  by  the  specified  web
       identity  provider.  Two additional policies are applied to the session
       to further restrict what the user  can  do.  The  returned  credentials
       expire one hour after they are generated.

          aws sts assume-role-with-web-identity \
              --duration-seconds 3600 \
              --role-session-name "app1" \
              --provider-id "www.amazon.com" \
              --policy-arns "arn:aws:iam::123456789012:policy/q=webidentitydemopolicy1","arn:aws:iam::123456789012:policy/webidentitydemopolicy2" \
              --role-arn arn:aws:iam::123456789012:role/FederatedWebIdentityRole \
              --web-identity-token "Atza%7CIQEBLjAsAhRFiXuWpUXuRvQ9PZL3GMFcYevydwIUFAHZwXZXXXXXXXXJnrulxKDHwy87oGKPznh0D6bEQZTSCzyoCtL_8S07pLpr0zMbn6w1lfVZKNTBdDansFBmtGnIsIapjI6xKR02Yc_2bQ8LZbUXSGm6Ry6_BG7PrtLZtj_dfCTj92xNGed-CrKqjG7nPBjNIL016GGvuS5gSvPRUxWES3VYfm1wl7WTI7jn-Pcb6M-buCgHhFOzTQxod27L9CqnOLio7N3gZAGpsp6n1-AJBOCJckcyXe2c6uD0srOJeZlKUm2eTDVMf8IehDVI0r1QOnTV6KzzAI3OY87Vd_cVMQ"

       Output:

          {
              "SubjectFromWebIdentityToken": "amzn1.account.AF6RHO7KZU5XRVQJGXK6HB56KR2A"
              "Audience": "client.5498841531868486423.1548@apps.example.com",
              "AssumedRoleUser": {
                  "Arn": "arn:aws:sts::123456789012:assumed-role/FederatedWebIdentityRole/app1",
                  "AssumedRoleId": "AROACLKWSDQRAOEXAMPLE:app1"
              }
              "Credentials": {
                  "AccessKeyId": "AKIAIOSFODNN7EXAMPLE",
                  "SecretAccessKey": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY",
                  "SessionToken": "AQoEXAMPLEH4aoAH0gNCAPyJxz4BlCFFxWNE1OPTgk5TthT+FvwqnKwRcOIfrRh3c/LTo6UDdyJwOOvEVPvLXCrrrUtdnniCEXAMPLE/IvU1dYUg2RVAJBanLiHb4IgRmpRV3zrkuWJOgQs8IZZaIv2BXIa2R4OlgkBN9bkUDNCJiBeb/AXlzBBko7b15fjrBs2+cTQtpZ3CYWFXG8C5zqx37wnOE49mRl/+OtkIKGO7fAE",
                  "Expiration": "2020-05-19T18:06:10+00:00"
              },
              "Provider": "www.amazon.com"
          }

       For  more information, see Requesting Temporary Security Credentials in
       the IAM User Guide.

OUTPUT
       Credentials -> (structure)
          The temporary security credentials, which include an access key  ID,
          a secret access key, and a security token.

          NOTE:
              The size of the security token that STS API operations return is
              not fixed. We strongly recommend that you  make  no  assumptions
              about the maximum size.

          AccessKeyId -> (string)
              The access key ID that identifies the temporary security creden-
              tials.

          SecretAccessKey -> (string)
              The secret access key that can be used to sign requests.

          SessionToken -> (string)
              The token that users must pass to the service  API  to  use  the
              temporary credentials.

          Expiration -> (timestamp)
              The date on which the current credentials expire.

       SubjectFromWebIdentityToken -> (string)
          The  unique  user  identifier  that  is  returned  by  the  identity
          provider. This identifier is associated  with  the  WebIdentityToken
          that  was  submitted  with  the  AssumeRoleWithWebIdentity call. The
          identifier is typically unique to the user and the application  that
          acquired the WebIdentityToken (pairwise identifier). For OpenID Con-
          nect ID tokens, this field contains the value returned by the  iden-
          tity provider as the token's sub (Subject) claim.

       AssumedRoleUser -> (structure)
          The  Amazon  Resource  Name (ARN) and the assumed role ID, which are
          identifiers that you can use to refer  to  the  resulting  temporary
          security  credentials.  For example, you can reference these creden-
          tials as a principal in a resource-based policy by using the ARN  or
          assumed role ID. The ARN and ID include the RoleSessionName that you
          specified when you called AssumeRole .

          AssumedRoleId -> (string)
              A unique identifier that contains the role ID and the role  ses-
              sion name of the role that is being assumed. The role ID is gen-
              erated by Amazon Web Services when the role is created.

          Arn -> (string)
              The ARN of the temporary security credentials that are  returned
              from the  AssumeRole action. For more information about ARNs and
              how to use them in policies, see IAM Identifiers in the IAM User
              Guide .

       PackedPolicySize -> (integer)
          A  percentage  value  that  indicates the packed size of the session
          policies and session  tags  combined  passed  in  the  request.  The
          request  fails if the packed size is greater than 100 percent, which
          means the policies and tags exceeded the allowed space.

       Provider -> (string)
          The issuing authority of  the  web  identity  token  presented.  For
          OpenID  Connect ID tokens, this contains the value of the iss field.
          For OAuth  2.0  access  tokens,  this  contains  the  value  of  the
          ProviderId  parameter  that was passed in the AssumeRoleWithWebIden-
          tity request.

       Audience -> (string)
          The intended audience (also known as client ID) of the web  identity
          token.  This  is  traditionally  the client identifier issued to the
          application that requested the web identity token.

       SourceIdentity -> (string)
          The value of the source identity that is returned in  the  JSON  web
          token (JWT) from the identity provider.

          You  can  require  users  to  set  a source identity value when they
          assume a role. You do this by using the sts:SourceIdentity condition
          key  in  a  role trust policy. That way, actions that are taken with
          the role are associated with that user. After the source identity is
          set,  the  value cannot be changed. It is present in the request for
          all actions that are taken by the role and persists  across  chained
          role  sessions.  You  can configure your identity provider to use an
          attribute associated with your users, like user name  or  email,  as
          the  source identity when calling AssumeRoleWithWebIdentity . You do
          this by adding a claim to the JSON web token. To  learn  more  about
          OIDC tokens and claims, see Using Tokens with User Pools in the Ama-
          zon Cognito Developer Guide  .  For  more  information  about  using
          source  identity, see Monitor and control actions taken with assumed
          roles in the IAM User Guide .

          The regex used to validate this parameter is a string of  characters
          consisting  of upper- and lower-case alphanumeric characters with no
          spaces. You can also include underscores or  any  of  the  following
          characters: =,.@-



                                               ASSUME-ROLE-WITH-WEB-IDENTITY()
