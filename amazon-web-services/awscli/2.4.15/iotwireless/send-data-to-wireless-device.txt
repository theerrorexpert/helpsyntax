SEND-DATA-TO-WIRELESS-DEVICE()                  SEND-DATA-TO-WIRELESS-DEVICE()



NAME
       send-data-to-wireless-device -

DESCRIPTION
       Sends a decrypted application data frame to a device.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            send-data-to-wireless-device
          --id <value>
          --transmit-mode <value>
          --payload-data <value>
          [--wireless-metadata <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --id (string)
          The ID of the wireless device to receive the data.

       --transmit-mode (integer)
          The  transmit  mode  to use to send data to the wireless device. Can
          be: 0 for UM (unacknowledge mode) or 1 for AM (acknowledge mode).

       --payload-data (string)
          The binary to be sent to the end device, encoded in base64.

       --wireless-metadata (structure)
          Metadata about the message request.

          LoRaWAN -> (structure)
              LoRaWAN device info.

              FPort -> (integer)
                 The Fport value.

          Sidewalk -> (structure)
              The Sidewalk account credentials.

              Seq -> (integer)
                 The sequence number.

              MessageType -> (string)
                 Sidewalk device message type. Default  value  is  CUSTOM_COM-
                 MAND_ID_NOTIFY .

       Shorthand Syntax:

          LoRaWAN={FPort=integer},Sidewalk={Seq=integer,MessageType=string}

       JSON Syntax:

          {
            "LoRaWAN": {
              "FPort": integer
            },
            "Sidewalk": {
              "Seq": integer,
              "MessageType": "CUSTOM_COMMAND_ID_NOTIFY"|"CUSTOM_COMMAND_ID_GET"|"CUSTOM_COMMAND_ID_SET"|"CUSTOM_COMMAND_ID_RESP"
            }
          }

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To send data to the wireless device

       The  following  send-data-to-wireless-device  example sends a decrypted
       application data frame to the wireless device.

          aws iotwireless send-data-to-wireless-device \
              --id "11aa5eae-2f56-4b8e-a023-b28d98494e49" \
              --transmit-mode "1" \
              --payload-data "SGVsbG8gVG8gRGV2c2lt" \
              --wireless-metadata LoRaWAN={FPort=1}

       Output:

          {
              MessageId: "6011dd36-0043d6eb-0072-0008"
          }

       For more information, see Connecting devices and gateways  to  AWS  IoT
       Core for LoRaWAN in the AWS IoT Developers Guide.

OUTPUT
       MessageId -> (string)
          The ID of the message sent to the wireless device.



                                                SEND-DATA-TO-WIRELESS-DEVICE()
