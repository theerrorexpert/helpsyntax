DESCRIBE-BROKER()                                            DESCRIBE-BROKER()



NAME
       describe-broker -

DESCRIPTION
       Returns information about the specified broker.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            describe-broker
          --broker-id <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --broker-id (string)
          The unique ID that Amazon MQ generates for the broker.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       AuthenticationStrategy -> (string)
          The  authentication  strategy used to secure the broker. The default
          is SIMPLE.

       AutoMinorVersionUpgrade -> (boolean)
          Enables automatic upgrades to new minor versions for brokers, as new
          versions are released and supported by Amazon MQ. Automatic upgrades
          occur during the scheduled maintenance window of the broker or after
          a manual broker reboot.

       BrokerArn -> (string)
          The broker's Amazon Resource Name (ARN).

       BrokerId -> (string)
          The unique ID that Amazon MQ generates for the broker.

       BrokerInstances -> (list)
          A list of information about allocated brokers.

          (structure)
              Returns information about all brokers.

              ConsoleURL -> (string)
                 The brokers web console URL.

              Endpoints -> (list)
                 The broker's wire-level protocol endpoints.

                 (string)

              IpAddress -> (string)
                 The  IP  address  of  the  Elastic  Network  Interface  (ENI)
                 attached to the broker. Does not apply to RabbitMQ brokers.

       BrokerName -> (string)
          The broker's name. This value must be unique in  your  AWS  account,
          1-50  characters  long,  must contain only letters, numbers, dashes,
          and underscores, and must not contain white spaces, brackets,  wild-
          card characters, or special characters.

       BrokerState -> (string)
          The broker's status.

       Configurations -> (structure)
          The list of all revisions for the specified configuration.

          Current -> (structure)
              The broker's current configuration.

              Id -> (string)
                 Required. The unique ID that Amazon MQ generates for the con-
                 figuration.

              Revision -> (integer)
                 The revision number of the configuration.

          History -> (list)
              The history of configurations applied to the broker.

              (structure)
                 A list of information about the configuration.

                 WARNING:
                     Does not apply to RabbitMQ brokers.

                 Id -> (string)
                     Required. The unique ID that Amazon MQ generates for  the
                     configuration.

                 Revision -> (integer)
                     The revision number of the configuration.

          Pending -> (structure)
              The broker's pending configuration.

              Id -> (string)
                 Required. The unique ID that Amazon MQ generates for the con-
                 figuration.

              Revision -> (integer)
                 The revision number of the configuration.

       Created -> (timestamp)
          The time when the broker was created.

       DeploymentMode -> (string)
          The broker's deployment mode.

       EncryptionOptions -> (structure)
          Encryption options for the broker. Does not apply to  RabbitMQ  bro-
          kers.

          KmsKeyId -> (string)
              The  customer master key (CMK) to use for the AWS Key Management
              Service (KMS). This key is used to encrypt your data at rest. If
              not  provided,  Amazon MQ will use a default CMK to encrypt your
              data.

          UseAwsOwnedKey -> (boolean)
              Enables the use of an AWS owned CMK  using  AWS  Key  Management
              Service  (KMS). Set to true by default, if no value is provided,
              for example, for RabbitMQ brokers.

       EngineType -> (string)
          The type of broker engine. Currently, Amazon  MQ  supports  ACTIVEMQ
          and RABBITMQ.

       EngineVersion -> (string)
          The  broker  engine's  version.  For a list of supported engine ver-
          sions, see Supported engines .

       HostInstanceType -> (string)
          The broker's instance type.

       LdapServerMetadata -> (structure)
          The metadata of the LDAP server used to authenticate  and  authorize
          connections to the broker.

          Hosts -> (list)
              Specifies  the location of the LDAP server such as AWS Directory
              Service for  Microsoft  Active  Directory  .  Optional  failover
              server.

              (string)

          RoleBase -> (string)
              The  distinguished name of the node in the directory information
              tree (DIT) to search for roles or groups. For example, ou=group,
              ou=corp, dc=corp, dc=example, dc=com.

          RoleName -> (string)
              Specifies  the  LDAP  attribute  that  identifies the group name
              attribute in the  object  returned  from  the  group  membership
              query.

          RoleSearchMatching -> (string)
              The  LDAP  search filter used to find roles within the roleBase.
              The distinguished name of the user matched by userSearchMatching
              is  substituted  into  the {0} placeholder in the search filter.
              The client's username is substituted into the  {1}  placeholder.
              For  example,  if you set this option to (member=uid={1})for the
              user janedoe, the  search  filter  becomes  (member=uid=janedoe)
              after string substitution. It matches all role entries that have
              a member  attribute  equal  to  uid=janedoe  under  the  subtree
              selected by the roleBase.

          RoleSearchSubtree -> (boolean)
              The  directory  search scope for the role. If set to true, scope
              is to search the entire subtree.

          ServiceAccountUsername -> (string)
              Service account username. A service account  is  an  account  in
              your  LDAP  server that has access to initiate a connection. For
              example, cn=admin,dc=corp, dc=example, dc=com.

          UserBase -> (string)
              Select a particular subtree of the  directory  information  tree
              (DIT)  to search for user entries. The subtree is specified by a
              DN, which specifies the base node of the subtree.  For  example,
              by setting this option to ou=Users,ou=corp, dc=corp, dc=example,
              dc=com, the search for user entries is restricted to the subtree
              beneath ou=Users, ou=corp, dc=corp, dc=example, dc=com.

          UserRoleName -> (string)
              Specifies the name of the LDAP attribute for the user group mem-
              bership.

          UserSearchMatching -> (string)
              The LDAP search filter used to find users within  the  userBase.
              The client's username is substituted into the {0} placeholder in
              the search filter.  For  example,  if  this  option  is  set  to
              (uid={0})  and the received username is janedoe, the search fil-
              ter becomes (uid=janedoe) after  string  substitution.  It  will
              result  in matching an entry like uid=janedoe, ou=Users,ou=corp,
              dc=corp, dc=example, dc=com.

          UserSearchSubtree -> (boolean)
              The directory search scope for the user. If set to  true,  scope
              is to search the entire subtree.

       Logs -> (structure)
          The  list of information about logs currently enabled and pending to
          be deployed for the specified broker.

          Audit -> (boolean)
              Enables audit logging. Every user management action  made  using
              JMX or the ActiveMQ Web Console is logged.

          AuditLogGroup -> (string)
              The  location  of the CloudWatch Logs log group where audit logs
              are sent.

          General -> (boolean)
              Enables general logging.

          GeneralLogGroup -> (string)
              The location of the CloudWatch Logs log group where general logs
              are sent.

          Pending -> (structure)
              The  list  of  information about logs pending to be deployed for
              the specified broker.

              Audit -> (boolean)
                 Enables audit logging.  Every  user  management  action  made
                 using JMX or the ActiveMQ Web Console is logged.

              General -> (boolean)
                 Enables general logging.

       MaintenanceWindowStartTime -> (structure)
          The parameters that determine the WeeklyStartTime.

          DayOfWeek -> (string)
              Required. The day of the week.

          TimeOfDay -> (string)
              Required. The time, in 24-hour format.

          TimeZone -> (string)
              The  time  zone, UTC by default, in either the Country/City for-
              mat, or the UTC offset format.

       PendingAuthenticationStrategy -> (string)
          The authentication strategy that will be applied when the broker  is
          rebooted. The default is SIMPLE.

       PendingEngineVersion -> (string)
          The  broker  engine  version  to upgrade to. For a list of supported
          engine versions, see Supported engines .

       PendingHostInstanceType -> (string)
          The broker's host instance type to upgrade to. For a  list  of  sup-
          ported instance types, see Broker instance types .

       PendingLdapServerMetadata -> (structure)
          The  metadata  of  the LDAP server that will be used to authenticate
          and authorize connections to the broker after it is rebooted.

          Hosts -> (list)
              Specifies the location of the LDAP server such as AWS  Directory
              Service  for  Microsoft  Active  Directory  .  Optional failover
              server.

              (string)

          RoleBase -> (string)
              The distinguished name of the node in the directory  information
              tree (DIT) to search for roles or groups. For example, ou=group,
              ou=corp, dc=corp, dc=example, dc=com.

          RoleName -> (string)
              Specifies the LDAP attribute  that  identifies  the  group  name
              attribute  in  the  object  returned  from  the group membership
              query.

          RoleSearchMatching -> (string)
              The LDAP search filter used to find roles within  the  roleBase.
              The distinguished name of the user matched by userSearchMatching
              is substituted into the {0} placeholder in  the  search  filter.
              The  client's  username is substituted into the {1} placeholder.
              For example, if you set this option to  (member=uid={1})for  the
              user  janedoe,  the  search  filter becomes (member=uid=janedoe)
              after string substitution. It matches all role entries that have
              a  member  attribute  equal  to  uid=janedoe  under  the subtree
              selected by the roleBase.

          RoleSearchSubtree -> (boolean)
              The directory search scope for the role. If set to  true,  scope
              is to search the entire subtree.

          ServiceAccountUsername -> (string)
              Service  account  username.  A  service account is an account in
              your LDAP server that has access to initiate a  connection.  For
              example, cn=admin,dc=corp, dc=example, dc=com.

          UserBase -> (string)
              Select  a  particular  subtree of the directory information tree
              (DIT) to search for user entries. The subtree is specified by  a
              DN,  which  specifies the base node of the subtree. For example,
              by setting this option to ou=Users,ou=corp, dc=corp, dc=example,
              dc=com, the search for user entries is restricted to the subtree
              beneath ou=Users, ou=corp, dc=corp, dc=example, dc=com.

          UserRoleName -> (string)
              Specifies the name of the LDAP attribute for the user group mem-
              bership.

          UserSearchMatching -> (string)
              The  LDAP  search filter used to find users within the userBase.
              The client's username is substituted into the {0} placeholder in
              the  search  filter.  For  example,  if  this  option  is set to
              (uid={0}) and the received username is janedoe, the search  fil-
              ter  becomes  (uid=janedoe)  after  string substitution. It will
              result in matching an entry like uid=janedoe,  ou=Users,ou=corp,
              dc=corp, dc=example, dc=com.

          UserSearchSubtree -> (boolean)
              The  directory  search scope for the user. If set to true, scope
              is to search the entire subtree.

       PendingSecurityGroups -> (list)
          The list of pending security groups to authorize connections to bro-
          kers.

          (string)

       PubliclyAccessible -> (boolean)
          Enables  connections from applications outside of the VPC that hosts
          the broker's subnets.

       SecurityGroups -> (list)
          The list of rules (1 minimum, 125 maximum)  that  authorize  connec-
          tions to brokers.

          (string)

       StorageType -> (string)
          The broker's storage type.

       SubnetIds -> (list)
          The  list of groups that define which subnets and IP ranges the bro-
          ker can use from different Availability Zones.

          (string)

       Tags -> (map)
          The list of all tags associated with this broker.

          key -> (string)

          value -> (string)

       Users -> (list)
          The list of all broker usernames for the specified broker.

          (structure)
              Returns a list of all broker users. Does not apply  to  RabbitMQ
              brokers.

              PendingChange -> (string)
                 The type of change pending for the broker user.

              Username -> (string)
                 Required.  The  username  of  the broker user. This value can
                 contain only alphanumeric characters, dashes, periods, under-
                 scores,  and tildes (- . _ ~). This value must be 2-100 char-
                 acters long.



                                                             DESCRIBE-BROKER()
