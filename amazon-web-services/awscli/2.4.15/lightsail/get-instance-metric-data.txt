GET-INSTANCE-METRIC-DATA()                          GET-INSTANCE-METRIC-DATA()



NAME
       get-instance-metric-data -

DESCRIPTION
       Returns  the  data  points  for the specified Amazon Lightsail instance
       metric, given an instance name.

       Metrics report the utilization of your resources, and the error  counts
       generated  by  them. Monitor and collect metric data regularly to main-
       tain the reliability, availability, and performance of your  resources.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-instance-metric-data
          --instance-name <value>
          --metric-name <value>
          --period <value>
          --start-time <value>
          --end-time <value>
          --unit <value>
          --statistics <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --instance-name (string)
          The name of the instance for which you want to get metrics data.

       --metric-name (string)
          The metric for which you want to return information.

          Valid  instance  metric  names are listed below, along with the most
          useful statistics to include in your request, and the published unit
          value.

          o
            **
            BurstCapacityPercentage  **  -  The  percentage of CPU performance
            available for your instance to  burst  above  its  baseline.  Your
            instance  continuously  accrues and consumes burst capacity. Burst
            capacity stops accruing when your instance's BurstCapacityPercent-
            age reaches 100%. For more information, see Viewing instance burst
            capacity in Amazon Lightsail .  Statistics : The most useful  sta-
            tistics  are  Maximum  and Average .  Unit : The published unit is
            Percent .

          o
            **
            BurstCapacityTime ** - The  available  amount  of  time  for  your
            instance  to burst at 100% CPU utilization. Your instance continu-
            ously accrues and consumes burst  capacity.  Burst  capacity  time
            stops accruing when your instance's BurstCapacityPercentage metric
            reaches 100%. Burst capacity time is consumed  at  the  full  rate
            only  when  your  instance  operates  at 100% CPU utilization. For
            example, if your instance operates at 50% CPU utilization  in  the
            burstable  zone  for a 5-minute period, then it consumes CPU burst
            capacity minutes at a 50% rate in that period. Your instance  con-
            sumed  2  minutes  and 30 seconds of CPU burst capacity minutes in
            the 5-minute period. For more information,  see  Viewing  instance
            burst capacity in Amazon Lightsail .  Statistics : The most useful
            statistics are Maximum and Average .  Unit : The published unit is
            Seconds .

          o
            **
            CPUUtilization ** - The percentage of allocated compute units that
            are currently in use on the instance. This metric  identifies  the
            processing power to run the applications on the instance. Tools in
            your operating system can show a lower percentage  than  Lightsail
            when the instance is not allocated a full processor core.  Statis-
            tics : The most useful statistics are Maximum and Average .   Unit
            : The published unit is Percent .

          o
            **
            NetworkIn  ** - The number of bytes received on all network inter-
            faces by the instance. This metric identifies the volume of incom-
            ing  network  traffic  to the instance. The number reported is the
            number of bytes received during the period. Because this metric is
            reported  in 5-minute intervals, divide the reported number by 300
            to find Bytes/second.  Statistics : The most useful  statistic  is
            Sum .  Unit : The published unit is Bytes .

          o
            **
            NetworkOut ** - The number of bytes sent out on all network inter-
            faces by the instance. This metric identifies the volume of outgo-
            ing  network traffic from the instance. The number reported is the
            number of bytes sent during the period.  Because  this  metric  is
            reported  in 5-minute intervals, divide the reported number by 300
            to find Bytes/second.  Statistics : The most useful  statistic  is
            Sum .  Unit : The published unit is Bytes .

          o
            **
            StatusCheckFailed  **  -  Reports  whether  the instance passed or
            failed both the instance status check and the system status check.
            This  metric  can  be either 0 (passed) or 1 (failed). This metric
            data is available in 1-minute (60 seconds)  granularity.   Statis-
            tics  :  The  most useful statistic is Sum .  Unit : The published
            unit is Count .

          o
            **
            StatusCheckFailed_Instance  **  -  Reports  whether  the  instance
            passed  or  failed  the  instance status check. This metric can be
            either 0 (passed) or 1 (failed). This metric data is available  in
            1-minute  (60  seconds) granularity.  Statistics : The most useful
            statistic is Sum .  Unit : The published unit is Count .

          o
            **
            StatusCheckFailed_System ** - Reports whether the instance  passed
            or  failed  the  system  status check. This metric can be either 0
            (passed) or 1 (failed). This metric data is available in  1-minute
            (60  seconds) granularity.  Statistics : The most useful statistic
            is Sum .  Unit : The published unit is Count .

          Possible values:

          o CPUUtilization

          o NetworkIn

          o NetworkOut

          o StatusCheckFailed

          o StatusCheckFailed_Instance

          o StatusCheckFailed_System

          o BurstCapacityTime

          o BurstCapacityPercentage

       --period (integer)
          The granularity, in seconds, of the returned data points.

          The  StatusCheckFailed  ,  StatusCheckFailed_Instance  ,  and   Sta-
          tusCheckFailed_System  instance metric data is available in 1-minute
          (60 seconds) granularity. All other instance metric data  is  avail-
          able in 5-minute (300 seconds) granularity.

       --start-time (timestamp)
          The start time of the time period.

       --end-time (timestamp)
          The end time of the time period.

       --unit (string)
          The unit for the metric data request. Valid units depend on the met-
          ric data being requested. For the valid units to specify  with  each
          available metric, see the metricName parameter.

          Possible values:

          o Seconds

          o Microseconds

          o Milliseconds

          o Bytes

          o Kilobytes

          o Megabytes

          o Gigabytes

          o Terabytes

          o Bits

          o Kilobits

          o Megabits

          o Gigabits

          o Terabits

          o Percent

          o Count

          o Bytes/Second

          o Kilobytes/Second

          o Megabytes/Second

          o Gigabytes/Second

          o Terabytes/Second

          o Bits/Second

          o Kilobits/Second

          o Megabits/Second

          o Gigabits/Second

          o Terabits/Second

          o Count/Second

          o None

       --statistics (list)
          The statistic for the metric.

          The following statistics are available:

          o Minimum  -  The lowest value observed during the specified period.
            Use this value to determine  low  volumes  of  activity  for  your
            application.

          o Maximum  - The highest value observed during the specified period.
            Use this value to determine high  volumes  of  activity  for  your
            application.

          o Sum - All values submitted for the matching metric added together.
            You can use this statistic to determine the total volume of a met-
            ric.

          o Average  -  The  value  of  Sum / SampleCount during the specified
            period. By comparing this statistic with the Minimum  and  Maximum
            values, you can determine the full scope of a metric and how close
            the average use is to the Minimum and Maximum values. This compar-
            ison  helps  you  to  know  when  to  increase  or  decrease  your
            resources.

          o SampleCount - The count, or number, of data points  used  for  the
            statistical calculation.

          (string)

       Syntax:

          "string" "string" ...

          Where valid values are:
            Minimum
            Maximum
            Sum
            Average
            SampleCount

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To get metric data for an instance

       The following get-instance-metric-data example returns the average per-
       cent of CPUUtilization every 7200 seconds (2 hours) between  1571342400
       and 1571428800 for instance MEAN-1.

       We  recommend  that you use a unix time converter to identify the start
       and end times.

          aws lightsail get-instance-metric-data \
              --instance-name MEAN-1 \
              --metric-name CPUUtilization \
              --period 7200 \
              --start-time 1571342400 \
              --end-time 1571428800 \
              --unit Percent \
              --statistics Average

       Output:

          {
              "metricName": "CPUUtilization",
              "metricData": [
                  {
                      "average": 0.26113718770120725,
                      "timestamp": 1571342400.0,
                      "unit": "Percent"
                  },
                  {
                      "average": 0.26861268928111953,
                      "timestamp": 1571392800.0,
                      "unit": "Percent"
                  },
                  {
                      "average": 0.28187475104748777,
                      "timestamp": 1571378400.0,
                      "unit": "Percent"
                  },
                  {
                      "average": 0.2651936960458352,
                      "timestamp": 1571421600.0,
                      "unit": "Percent"
                  },
                  {
                      "average": 0.2561856213712188,
                      "timestamp": 1571371200.0,
                      "unit": "Percent"
                  },
                  {
                      "average": 0.3021383254607764,
                      "timestamp": 1571356800.0,
                      "unit": "Percent"
                  },
                  {
                      "average": 0.2618381649223539,
                      "timestamp": 1571407200.0,
                      "unit": "Percent"
                  },
                  {
                      "average": 0.26331929394825787,
                      "timestamp": 1571400000.0,
                      "unit": "Percent"
                  },
                  {
                      "average": 0.2576348407007818,
                      "timestamp": 1571385600.0,
                      "unit": "Percent"
                  },
                  {
                      "average": 0.2513008454658378,
                      "timestamp": 1571364000.0,
                      "unit": "Percent"
                  },
                  {
                      "average": 0.26329974562758346,
                      "timestamp": 1571414400.0,
                      "unit": "Percent"
                  },
                  {
                      "average": 0.2667092536656445,
                      "timestamp": 1571349600.0,
                      "unit": "Percent"
                  }
              ]
          }

OUTPUT
       metricName -> (string)
          The name of the metric returned.

       metricData -> (list)
          An array of objects that describe the metric data returned.

          (structure)
              Describes the metric data point.

              average -> (double)
                 The average.

              maximum -> (double)
                 The maximum.

              minimum -> (double)
                 The minimum.

              sampleCount -> (double)
                 The sample count.

              sum -> (double)
                 The sum.

              timestamp -> (timestamp)
                 The timestamp (e.g., 1479816991.349 ).

              unit -> (string)
                 The unit.



                                                    GET-INSTANCE-METRIC-DATA()
