GET-LOAD-BALANCER-METRIC-DATA()                GET-LOAD-BALANCER-METRIC-DATA()



NAME
       get-load-balancer-metric-data -

DESCRIPTION
       Returns  information  about health metrics for your Lightsail load bal-
       ancer.

       Metrics report the utilization of your resources, and the error  counts
       generated  by  them. Monitor and collect metric data regularly to main-
       tain the reliability, availability, and performance of your  resources.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-load-balancer-metric-data
          --load-balancer-name <value>
          --metric-name <value>
          --period <value>
          --start-time <value>
          --end-time <value>
          --unit <value>
          --statistics <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --load-balancer-name (string)
          The name of the load balancer.

       --metric-name (string)
          The metric for which you want to return information.

          Valid  load  balancer  metric names are listed below, along with the
          most useful statistics to include in your request, and the published
          unit value.

          o
            **
            ClientTLSNegotiationErrorCount  ** - The number of TLS connections
            initiated by the client that did not establish a session with  the
            load  balancer  due to a TLS error generated by the load balancer.
            Possible causes include a mismatch of ciphers or protocols.   Sta-
            tistics : The most useful statistic is Sum .  Unit : The published
            unit is Count .

          o
            **
            HealthyHostCount ** - The number of target instances that are con-
            sidered healthy.  Statistics : The most useful statistic are Aver-
            age , Minimum , and Maximum .  Unit : The published unit is  Count
            .

          o
            **
            HTTPCode_Instance_2XX_Count  **  - The number of HTTP 2XX response
            codes generated by the target instances. This does not include any
            response  codes  generated by the load balancer.  Statistics : The
            most useful statistic is Sum . Note that Minimum , Maximum  ,  and
            Average all return 1 .  Unit : The published unit is Count .

          o
            **
            HTTPCode_Instance_3XX_Count  **  - The number of HTTP 3XX response
            codes generated by the target instances. This does not include any
            response  codes  generated by the load balancer.  Statistics : The
            most useful statistic is Sum . Note that Minimum , Maximum  ,  and
            Average all return 1 .  Unit : The published unit is Count .

          o
            **
            HTTPCode_Instance_4XX_Count  **  - The number of HTTP 4XX response
            codes generated by the target instances. This does not include any
            response  codes  generated by the load balancer.  Statistics : The
            most useful statistic is Sum . Note that Minimum , Maximum  ,  and
            Average all return 1 .  Unit : The published unit is Count .

          o
            **
            HTTPCode_Instance_5XX_Count  **  - The number of HTTP 5XX response
            codes generated by the target instances. This does not include any
            response  codes  generated by the load balancer.  Statistics : The
            most useful statistic is Sum . Note that Minimum , Maximum  ,  and
            Average all return 1 .  Unit : The published unit is Count .

          o
            **
            HTTPCode_LB_4XX_Count  **  -  The  number of HTTP 4XX client error
            codes that originated from the load balancer.  Client  errors  are
            generated   when  requests  are  malformed  or  incomplete.  These
            requests were not received by the target instance. This count does
            not  include  response  codes  generated  by the target instances.
            Statistics : The most useful statistic is Sum . Note that  Minimum
            ,  Maximum , and Average all return 1 .  Unit : The published unit
            is Count .

          o
            **
            HTTPCode_LB_5XX_Count ** - The number of  HTTP  5XX  server  error
            codes  that  originated  from  the  load  balancer.  This does not
            include any response codes generated by the target instance.  This
            metric  is  reported if there are no healthy instances attached to
            the load balancer, or if the request rate exceeds the capacity  of
            the  instances (spillover) or the load balancer.  Statistics : The
            most useful statistic is Sum . Note that Minimum , Maximum  ,  and
            Average all return 1 .  Unit : The published unit is Count .

          o
            **
            InstanceResponseTime  ** - The time elapsed, in seconds, after the
            request leaves the load balancer until a response from the  target
            instance  is  received.  Statistics : The most useful statistic is
            Average .  Unit : The published unit is Seconds .

          o
            **
            RejectedConnectionCount ** - The number of connections  that  were
            rejected  because the load balancer had reached its maximum number
            of connections.  Statistics : The most useful statistic is  Sum  .
            Unit : The published unit is Count .

          o
            **
            RequestCount ** - The number of requests processed over IPv4. This
            count includes only the requests with a response  generated  by  a
            target  instance of the load balancer.  Statistics : The most use-
            ful statistic is Sum . Note that Minimum , Maximum ,  and  Average
            all return 1 .  Unit : The published unit is Count .

          o
            **
            UnhealthyHostCount  **  -  The number of target instances that are
            considered unhealthy.  Statistics : The most useful statistic  are
            Average  ,  Minimum  , and Maximum .  Unit : The published unit is
            Count .

          Possible values:

          o ClientTLSNegotiationErrorCount

          o HealthyHostCount

          o UnhealthyHostCount

          o HTTPCode_LB_4XX_Count

          o HTTPCode_LB_5XX_Count

          o HTTPCode_Instance_2XX_Count

          o HTTPCode_Instance_3XX_Count

          o HTTPCode_Instance_4XX_Count

          o HTTPCode_Instance_5XX_Count

          o InstanceResponseTime

          o RejectedConnectionCount

          o RequestCount

       --period (integer)
          The granularity, in seconds, of the returned data points.

       --start-time (timestamp)
          The start time of the period.

       --end-time (timestamp)
          The end time of the period.

       --unit (string)
          The unit for the metric data request. Valid units depend on the met-
          ric  data  being  requested. For the valid units with each available
          metric, see the metricName parameter.

          Possible values:

          o Seconds

          o Microseconds

          o Milliseconds

          o Bytes

          o Kilobytes

          o Megabytes

          o Gigabytes

          o Terabytes

          o Bits

          o Kilobits

          o Megabits

          o Gigabits

          o Terabits

          o Percent

          o Count

          o Bytes/Second

          o Kilobytes/Second

          o Megabytes/Second

          o Gigabytes/Second

          o Terabytes/Second

          o Bits/Second

          o Kilobits/Second

          o Megabits/Second

          o Gigabits/Second

          o Terabits/Second

          o Count/Second

          o None

       --statistics (list)
          The statistic for the metric.

          The following statistics are available:

          o Minimum - The lowest value observed during the  specified  period.
            Use  this  value  to  determine  low  volumes of activity for your
            application.

          o Maximum - The highest value observed during the specified  period.
            Use  this  value  to  determine  high volumes of activity for your
            application.

          o Sum - All values submitted for the matching metric added together.
            You can use this statistic to determine the total volume of a met-
            ric.

          o Average - The value of Sum  /  SampleCount  during  the  specified
            period.  By  comparing this statistic with the Minimum and Maximum
            values, you can determine the full scope of a metric and how close
            the average use is to the Minimum and Maximum values. This compar-
            ison  helps  you  to  know  when  to  increase  or  decrease  your
            resources.

          o SampleCount  -  The  count, or number, of data points used for the
            statistical calculation.

          (string)

       Syntax:

          "string" "string" ...

          Where valid values are:
            Minimum
            Maximum
            Sum
            Average
            SampleCount

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       metricName -> (string)
          The name of the metric returned.

       metricData -> (list)
          An array of objects that describe the metric data returned.

          (structure)
              Describes the metric data point.

              average -> (double)
                 The average.

              maximum -> (double)
                 The maximum.

              minimum -> (double)
                 The minimum.

              sampleCount -> (double)
                 The sample count.

              sum -> (double)
                 The sum.

              timestamp -> (timestamp)
                 The timestamp (e.g., 1479816991.349 ).

              unit -> (string)
                 The unit.



                                               GET-LOAD-BALANCER-METRIC-DATA()
