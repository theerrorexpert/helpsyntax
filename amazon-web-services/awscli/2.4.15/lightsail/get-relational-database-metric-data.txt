GET-RELATIONAL-DATABASE-METRIC-DATA()    GET-RELATIONAL-DATABASE-METRIC-DATA()



NAME
       get-relational-database-metric-data -

DESCRIPTION
       Returns  the data points of the specified metric for a database in Ama-
       zon Lightsail.

       Metrics report the utilization of your resources, and the error  counts
       generated  by  them. Monitor and collect metric data regularly to main-
       tain the reliability, availability, and performance of your  resources.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-relational-database-metric-data
          --relational-database-name <value>
          --metric-name <value>
          --period <value>
          --start-time <value>
          --end-time <value>
          --unit <value>
          --statistics <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --relational-database-name (string)
          The name of your database from which to get metric data.

       --metric-name (string)
          The metric for which you want to return information.

          Valid  relational database metric names are listed below, along with
          the most useful statistics to include in your request, and the  pub-
          lished  unit value. All relational database metric data is available
          in 1-minute (60 seconds) granularity.

          o
            **
            CPUUtilization ** - The percentage of CPU utilization currently in
            use  on the database.  Statistics : The most useful statistics are
            Maximum and Average .  Unit : The published unit is Percent .

          o
            **
            DatabaseConnections ** - The number  of  database  connections  in
            use.   Statistics : The most useful statistics are Maximum and Sum
            .  Unit : The published unit is Count .

          o
            **
            DiskQueueDepth ** - The  number  of  outstanding  IOs  (read/write
            requests)  that  are waiting to access the disk.  Statistics : The
            most useful statistic is Sum .  Unit : The published unit is Count
            .

          o
            **
            FreeStorageSpace ** - The amount of available storage space.  Sta-
            tistics : The most useful statistic is Sum .  Unit : The published
            unit is Bytes .

          o
            **
            NetworkReceiveThroughput ** - The incoming (Receive) network traf-
            fic on the database, including both customer database traffic  and
            AWS traffic used for monitoring and replication.  Statistics : The
            most useful statistic is Average .  Unit : The published  unit  is
            Bytes/Second .

          o
            **
            NetworkTransmitThroughput  **  -  The  outgoing (Transmit) network
            traffic on the database, including both customer database  traffic
            and AWS traffic used for monitoring and replication.  Statistics :
            The most useful statistic is Average .  Unit : The published  unit
            is Bytes/Second .

          Possible values:

          o CPUUtilization

          o DatabaseConnections

          o DiskQueueDepth

          o FreeStorageSpace

          o NetworkReceiveThroughput

          o NetworkTransmitThroughput

       --period (integer)
          The granularity, in seconds, of the returned data points.

          All  relational  database  metric  data is available in 1-minute (60
          seconds) granularity.

       --start-time (timestamp)
          The start of the time interval from which to get metric data.

          Constraints:

          o Specified in Coordinated Universal Time (UTC).

          o Specified in the Unix time format. For example, if you wish to use
            a  start  time  of  October  1,  2018, at 8 PM UTC, then you input
            1538424000 as the start time.

       --end-time (timestamp)
          The end of the time interval from which to get metric data.

          Constraints:

          o Specified in Coordinated Universal Time (UTC).

          o Specified in the Unix time format. For example, if you wish to use
            an  end  time  of  October  1,  2018,  at 8 PM UTC, then you input
            1538424000 as the end time.

       --unit (string)
          The unit for the metric data request. Valid units depend on the met-
          ric  data  being  requested. For the valid units with each available
          metric, see the metricName parameter.

          Possible values:

          o Seconds

          o Microseconds

          o Milliseconds

          o Bytes

          o Kilobytes

          o Megabytes

          o Gigabytes

          o Terabytes

          o Bits

          o Kilobits

          o Megabits

          o Gigabits

          o Terabits

          o Percent

          o Count

          o Bytes/Second

          o Kilobytes/Second

          o Megabytes/Second

          o Gigabytes/Second

          o Terabytes/Second

          o Bits/Second

          o Kilobits/Second

          o Megabits/Second

          o Gigabits/Second

          o Terabits/Second

          o Count/Second

          o None

       --statistics (list)
          The statistic for the metric.

          The following statistics are available:

          o Minimum - The lowest value observed during the  specified  period.
            Use  this  value  to  determine  low  volumes of activity for your
            application.

          o Maximum - The highest value observed during the specified  period.
            Use  this  value  to  determine  high volumes of activity for your
            application.

          o Sum - All values submitted for the matching metric added together.
            You can use this statistic to determine the total volume of a met-
            ric.

          o Average - The value of Sum  /  SampleCount  during  the  specified
            period.  By  comparing this statistic with the Minimum and Maximum
            values, you can determine the full scope of a metric and how close
            the average use is to the Minimum and Maximum values. This compar-
            ison  helps  you  to  know  when  to  increase  or  decrease  your
            resources.

          o SampleCount  -  The  count, or number, of data points used for the
            statistical calculation.

          (string)

       Syntax:

          "string" "string" ...

          Where valid values are:
            Minimum
            Maximum
            Sum
            Average
            SampleCount

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To get metric data for a relational database

       The following get-relational-database-metric-data example  returns  the
       count sum of the metric DatabaseConnections over the period of 24 hours
       (86400 seconds) between 1570733176 and 1571597176 for relational  data-
       base Database1.

       We  recommend  that you use a unix time converter to identify the start
       and end times.

          aws lightsail get-relational-database-metric-data \
              --relational-database-name Database1 \
              --metric-name DatabaseConnections \
              --period 86400 \
              --start-time 1570733176 \
              --end-time 1571597176 \
              --unit Count \
              --statistics Sum

       Output:

          {
              "metricName": "DatabaseConnections",
              "metricData": [
                  {
                      "sum": 1.0,
                      "timestamp": 1571510760.0,
                      "unit": "Count"
                  },
                  {
                      "sum": 1.0,
                      "timestamp": 1570733160.0,
                      "unit": "Count"
                  },
                  {
                      "sum": 1.0,
                      "timestamp": 1570992360.0,
                      "unit": "Count"
                  },
                  {
                      "sum": 0.0,
                      "timestamp": 1571251560.0,
                      "unit": "Count"
                  },
                  {
                      "sum": 721.0,
                      "timestamp": 1570819560.0,
                      "unit": "Count"
                  },
                  {
                      "sum": 1.0,
                      "timestamp": 1571078760.0,
                      "unit": "Count"
                  },
                  {
                      "sum": 2.0,
                      "timestamp": 1571337960.0,
                      "unit": "Count"
                  },
                  {
                      "sum": 684.0,
                      "timestamp": 1570905960.0,
                      "unit": "Count"
                  },
                  {
                      "sum": 0.0,
                      "timestamp": 1571165160.0,
                      "unit": "Count"
                  },
                  {
                      "sum": 1.0,
                      "timestamp": 1571424360.0,
                      "unit": "Count"
                  }
              ]
          }

OUTPUT
       metricName -> (string)
          The name of the metric returned.

       metricData -> (list)
          An array of objects that describe the metric data returned.

          (structure)
              Describes the metric data point.

              average -> (double)
                 The average.

              maximum -> (double)
                 The maximum.

              minimum -> (double)
                 The minimum.

              sampleCount -> (double)
                 The sample count.

              sum -> (double)
                 The sum.

              timestamp -> (timestamp)
                 The timestamp (e.g., 1479816991.349 ).

              unit -> (string)
                 The unit.



                                         GET-RELATIONAL-DATABASE-METRIC-DATA()
