GET-CONTAINER-SERVICES()                              GET-CONTAINER-SERVICES()



NAME
       get-container-services -

DESCRIPTION
       Returns  information  about  one  or more of your Amazon Lightsail con-
       tainer services.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-container-services
          [--service-name <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --service-name (string)
          The name of the container service for which to return information.

          When omitted, the response includes all of your  container  services
          in the AWS Region where the request is made.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       containerServices -> (list)
          An array of objects that describe one or more container services.

          (structure)
              Describes an Amazon Lightsail container service.

              containerServiceName -> (string)
                 The name of the container service.

              arn -> (string)
                 The Amazon Resource Name (ARN) of the container service.

              createdAt -> (timestamp)
                 The timestamp when the container service was created.

              location -> (structure)
                 An  object  that describes the location of the container ser-
                 vice, such as the AWS Region and Availability Zone.

                 availabilityZone -> (string)
                     The Availability  Zone.  Follows  the  format  us-east-2a
                     (case-sensitive).

                 regionName -> (string)
                     The AWS Region name.

              resourceType -> (string)
                 The  Lightsail  resource type of the container service (i.e.,
                 ContainerService ).

              tags -> (list)
                 The tag keys and optional values for the resource.  For  more
                 information about tags in Lightsail, see the Amazon Lightsail
                 Developer Guide .

                 (structure)
                     Describes a tag key and optional  value  assigned  to  an
                     Amazon Lightsail resource.

                     For  more  information  about  tags in Lightsail, see the
                     Amazon Lightsail Developer Guide .

                     key -> (string)
                        The key of the tag.

                        Constraints: Tag keys accept a maximum of 128 letters,
                        numbers, spaces in UTF-8, or the following characters:
                        + - = . _ : / @

                     value -> (string)
                        The value of the tag.

                        Constraints: Tag values accept a maximum of  256  let-
                        ters, numbers, spaces in UTF-8, or the following char-
                        acters: + - = . _ : / @

              power -> (string)
                 The power specification of the container service.

                 The power specifies the amount of RAM, the number  of  vCPUs,
                 and the base price of the container service.

              powerId -> (string)
                 The ID of the power of the container service.

              state -> (string)
                 The current state of the container service.

                 The following container service states are possible:

                 o PENDING - The container service is being created.

                 o READY  -  The  container service is running but it does not
                   have an active container deployment.

                 o DEPLOYING - The container service is launching a  container
                   deployment.

                 o RUNNING  -  The  container service is running and it has an
                   active container deployment.

                 o UPDATING - The container service  capacity  or  its  custom
                   domains are being updated.

                 o DELETING - The container service is being deleted.

                 o DISABLED  -  The  container  service  is  disabled, and its
                   active deployment and containers, if any, are shut down.

              stateDetail -> (structure)
                 An object that describes the current state of  the  container
                 service.

                 NOTE:
                     The  state detail is populated only when a container ser-
                     vice is in a PENDING , DEPLOYING , or UPDATING state.

                 code -> (string)
                     The state code of the container service.

                     The following state codes are possible:

                     o The following state codes are  possible  if  your  con-
                       tainer service is in a DEPLOYING or UPDATING state:

                       o CREATING_SYSTEM_RESOURCES  - The system resources for
                         your container service are being created.

                       o CREATING_NETWORK_INFRASTRUCTURE - The network  infra-
                         structure  for  your container service are being cre-
                         ated.

                       o PROVISIONING_CERTIFICATE -  The  SSL/TLS  certificate
                         for your container service is being created.

                       o PROVISIONING_SERVICE  -  Your  container  service  is
                         being provisioned.

                       o CREATING_DEPLOYMENT - Your deployment is  being  cre-
                         ated on your container service.

                       o EVALUATING_HEALTH_CHECK  - The health of your deploy-
                         ment is being evaluated.

                       o ACTIVATING_DEPLOYMENT  -  Your  deployment  is  being
                         activated.

                     o The  following  state  codes  are possible if your con-
                       tainer service is in a PENDING state:

                       o CERTIFICATE_LIMIT_EXCEEDED - The SSL/TLS  certificate
                         required for your container service exceeds the maxi-
                         mum number of certificates allowed for your  account.

                       o UNKNOWN_ERROR  -  An  error was experienced when your
                         container service was being created.

                 message -> (string)
                     A message that provides more information  for  the  state
                     code.

                     NOTE:
                        The  state  detail  is populated only when a container
                        service is in a PENDING  ,  DEPLOYING  ,  or  UPDATING
                        state.

              scale -> (integer)
                 The scale specification of the container service.

                 The  scale  specifies the allocated compute nodes of the con-
                 tainer service.

              currentDeployment -> (structure)
                 An object that describes the current container deployment  of
                 the container service.

                 version -> (integer)
                     The version number of the deployment.

                 state -> (string)
                     The state of the deployment.

                     A deployment can be in one of the following states:

                     o Activating - The deployment is being created.

                     o Active  -  The deployment was successfully created, and
                       it's currently running on the  container  service.  The
                       container  service  can  have only one deployment in an
                       active state at a time.

                     o Inactive - The deployment was  previously  successfully
                       created,  but  it  is not currently running on the con-
                       tainer service.

                     o Failed - The deployment failed. Use the GetContainerLog
                       action to view the log events for the containers in the
                       deployment to try to determine the reason for the fail-
                       ure.

                 containers -> (map)
                     An  object  that describes the configuration for the con-
                     tainers of the deployment.

                     key -> (string)

                     value -> (structure)
                        Describes the settings of a  container  that  will  be
                        launched,  or that is launched, to an Amazon Lightsail
                        container service.

                        image -> (string)
                            The name of the image used for the container.

                            Container images sourced from your Lightsail  con-
                            tainer  service, that are registered and stored on
                            your service, start with a colon (: ).  For  exam-
                            ple,  if  your  container  service  name  is  con-
                            tainer-service-1 , the container  image  label  is
                            mystaticsite  , and you want to use the third (3 )
                            version of the registered  container  image,  then
                            you  should specify :container-service-1.mystatic-
                            site.3 . To use the latest version of a  container
                            image,  specify latest instead of a version number
                            (for    example,    :container-service-1.mystatic-
                            site.latest  ).  Lightsail  will automatically use
                            the highest numbered  version  of  the  registered
                            container image.

                            Container  images  sourced  from a public registry
                            like Docker Hub don't  start  with  a  colon.  For
                            example, nginx:latest or nginx .

                        command -> (list)
                            The launch command for the container.

                            (string)

                        environment -> (map)
                            The environment variables of the container.

                            key -> (string)

                            value -> (string)

                        ports -> (map)
                            The open firewall ports of the container.

                            key -> (string)

                            value -> (string)

                 publicEndpoint -> (structure)
                     An  object that describes the endpoint of the deployment.

                     containerName -> (string)
                        The name of the container entry of the deployment that
                        the endpoint configuration applies to.

                     containerPort -> (integer)
                        The  port  of the specified container to which traffic
                        is forwarded to.

                     healthCheck -> (structure)
                        An object that describes the health  check  configura-
                        tion of the container.

                        healthyThreshold -> (integer)
                            The  number of consecutive health checks successes
                            required  before  moving  the  container  to   the
                            Healthy state. The default value is 2 .

                        unhealthyThreshold -> (integer)
                            The  number  of  consecutive health check failures
                            required  before  moving  the  container  to   the
                            Unhealthy state. The default value is 2 .

                        timeoutSeconds -> (integer)
                            The  amount  of  time, in seconds, during which no
                            response means a  failed  health  check.  You  can
                            specify  between  2  and  60  seconds. The default
                            value is 2 .

                        intervalSeconds -> (integer)
                            The  approximate  interval,  in  seconds,  between
                            health  checks of an individual container. You can
                            specify between 5 and  300  seconds.  The  default
                            value is 5 .

                        path -> (string)
                            The  path on the container on which to perform the
                            health check. The default value is / .

                        successCodes -> (string)
                            The HTTP codes to use when checking for a success-
                            ful  response  from  a  container. You can specify
                            values between 200 and 499 . You can specify  mul-
                            tiple values (for example, 200,202 ) or a range of
                            values (for example, 200-299 ).

                 createdAt -> (timestamp)
                     The timestamp when the deployment was created.

              nextDeployment -> (structure)
                 An object that describes the next deployment of the container
                 service.

                 This  value  is null when there is no deployment in a pending
                 state.

                 version -> (integer)
                     The version number of the deployment.

                 state -> (string)
                     The state of the deployment.

                     A deployment can be in one of the following states:

                     o Activating - The deployment is being created.

                     o Active - The deployment was successfully  created,  and
                       it's  currently  running  on the container service. The
                       container service can have only one  deployment  in  an
                       active state at a time.

                     o Inactive  -  The deployment was previously successfully
                       created, but it is not currently running  on  the  con-
                       tainer service.

                     o Failed - The deployment failed. Use the GetContainerLog
                       action to view the log events for the containers in the
                       deployment to try to determine the reason for the fail-
                       ure.

                 containers -> (map)
                     An object that describes the configuration for  the  con-
                     tainers of the deployment.

                     key -> (string)

                     value -> (structure)
                        Describes  the  settings  of  a container that will be
                        launched, or that is launched, to an Amazon  Lightsail
                        container service.

                        image -> (string)
                            The name of the image used for the container.

                            Container  images sourced from your Lightsail con-
                            tainer service, that are registered and stored  on
                            your  service,  start with a colon (: ). For exam-
                            ple,  if  your  container  service  name  is  con-
                            tainer-service-1  ,  the  container image label is
                            mystaticsite , and you want to use the third (3  )
                            version  of  the  registered container image, then
                            you should specify  :container-service-1.mystatic-
                            site.3  . To use the latest version of a container
                            image, specify latest instead of a version  number
                            (for    example,    :container-service-1.mystatic-
                            site.latest ). Lightsail  will  automatically  use
                            the  highest  numbered  version  of the registered
                            container image.

                            Container images sourced from  a  public  registry
                            like  Docker  Hub  don't  start  with a colon. For
                            example, nginx:latest or nginx .

                        command -> (list)
                            The launch command for the container.

                            (string)

                        environment -> (map)
                            The environment variables of the container.

                            key -> (string)

                            value -> (string)

                        ports -> (map)
                            The open firewall ports of the container.

                            key -> (string)

                            value -> (string)

                 publicEndpoint -> (structure)
                     An object that describes the endpoint of the  deployment.

                     containerName -> (string)
                        The name of the container entry of the deployment that
                        the endpoint configuration applies to.

                     containerPort -> (integer)
                        The port of the specified container to  which  traffic
                        is forwarded to.

                     healthCheck -> (structure)
                        An  object  that describes the health check configura-
                        tion of the container.

                        healthyThreshold -> (integer)
                            The number of consecutive health checks  successes
                            required   before  moving  the  container  to  the
                            Healthy state. The default value is 2 .

                        unhealthyThreshold -> (integer)
                            The number of consecutive  health  check  failures
                            required   before  moving  the  container  to  the
                            Unhealthy state. The default value is 2 .

                        timeoutSeconds -> (integer)
                            The amount of time, in seconds,  during  which  no
                            response  means  a  failed  health  check. You can
                            specify between 2  and  60  seconds.  The  default
                            value is 2 .

                        intervalSeconds -> (integer)
                            The  approximate  interval,  in  seconds,  between
                            health checks of an individual container. You  can
                            specify  between  5  and  300 seconds. The default
                            value is 5 .

                        path -> (string)
                            The path on the container on which to perform  the
                            health check. The default value is / .

                        successCodes -> (string)
                            The HTTP codes to use when checking for a success-
                            ful response from a  container.  You  can  specify
                            values  between 200 and 499 . You can specify mul-
                            tiple values (for example, 200,202 ) or a range of
                            values (for example, 200-299 ).

                 createdAt -> (timestamp)
                     The timestamp when the deployment was created.

              isDisabled -> (boolean)
                 A  Boolean  value indicating whether the container service is
                 disabled.

              principalArn -> (string)
                 The principal ARN of the container service.

                 The principal ARN can be used to create a trust  relationship
                 between  your  standard  AWS  account and your Lightsail con-
                 tainer service. This allows you to give your service  permis-
                 sion to access resources in your standard AWS account.

              privateDomainName -> (string)
                 The private domain name of the container service.

                 The private domain name is accessible only by other resources
                 within the default virtual private cloud (VPC) of your Light-
                 sail account.

              publicDomainNames -> (map)
                 The  public  domain  name  of  the container service, such as
                 example.com and www.example.com .

                 You can specify up to four public domain  names  for  a  con-
                 tainer  service.  The  domain names that you specify are used
                 when you create a deployment with a container  configured  as
                 the public endpoint of your container service.

                 If  you  don't  specify public domain names, then you can use
                 the default domain of the container service.

                 WARNING:
                     You must  create  and  validate  an  SSL/TLS  certificate
                     before  you  can  use  public domain names with your con-
                     tainer service. Use the CreateCertificate action to  cre-
                     ate a certificate for the public domain names you want to
                     use with your container service.

                 See  CreateContainerService  or  UpdateContainerService   for
                 information about how to specify public domain names for your
                 Lightsail container service.

                 key -> (string)

                 value -> (list)
                     (string)

              url -> (string)
                 The publicly accessible URL of the container service.

                 If no public endpoint is specified in the currentDeployment ,
                 this URL returns a 404 response.



                                                      GET-CONTAINER-SERVICES()
