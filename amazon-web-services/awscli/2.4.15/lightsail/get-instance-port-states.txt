GET-INSTANCE-PORT-STATES()                          GET-INSTANCE-PORT-STATES()



NAME
       get-instance-port-states -

DESCRIPTION
       Returns  the  firewall  port  states  for  a  specific Amazon Lightsail
       instance, the IP addresses allowed to connect to the  instance  through
       the ports, and the protocol.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-instance-port-states
          --instance-name <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --instance-name (string)
          The name of the instance for which to return firewall port states.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To get firewall information for an instance

       The  following  get-instance-port-states  example  returns the firewall
       ports configured for instance MEAN-1.

          aws lightsail get-instance-port-states \
              --instance-name MEAN-1

       Output:

          {
              "portStates": [
                  {
                      "fromPort": 80,
                      "toPort": 80,
                      "protocol": "tcp",
                      "state": "open"
                  },
                  {
                      "fromPort": 22,
                      "toPort": 22,
                      "protocol": "tcp",
                      "state": "open"
                  },
                  {
                      "fromPort": 443,
                      "toPort": 443,
                      "protocol": "tcp",
                      "state": "open"
                  }
              ]
          }

OUTPUT
       portStates -> (list)
          An array of objects that describe the firewall port states  for  the
          specified instance.

          (structure)
              Describes open ports on an instance, the IP addresses allowed to
              connect to the instance through the ports, and the protocol.

              fromPort -> (integer)
                 The first port in a range of open ports on an instance.

                 Allowed ports:

                 o TCP and UDP - 0 to 65535

                 o ICMP - The ICMP type for IPv4 addresses. For example, spec-
                   ify  8  as  the  fromPort (ICMP type), and -1 as the toPort
                   (ICMP code), to enable ICMP Ping. For more information, see
                   Control Messages on Wikipedia .

                 o ICMPv6  -  The  ICMP  type for IPv6 addresses. For example,
                   specify 128 as the fromPort (ICMPv6 type), and 0 as  toPort
                   (ICMPv6  code).  For more information, see Internet Control
                   Message Protocol for IPv6 .

              toPort -> (integer)
                 The last port in a range of open ports on an instance.

                 Allowed ports:

                 o TCP and UDP - 0 to 65535

                 o ICMP - The ICMP code for IPv4 addresses. For example, spec-
                   ify  8  as  the  fromPort (ICMP type), and -1 as the toPort
                   (ICMP code), to enable ICMP Ping. For more information, see
                   Control Messages on Wikipedia .

                 o ICMPv6  -  The  ICMP  code for IPv6 addresses. For example,
                   specify 128 as the fromPort (ICMPv6 type), and 0 as  toPort
                   (ICMPv6  code).  For more information, see Internet Control
                   Message Protocol for IPv6 .

              protocol -> (string)
                 The IP protocol name.

                 The name can be one of the following:

                 o tcp - Transmission Control Protocol  (TCP)  provides  reli-
                   able,  ordered, and error-checked delivery of streamed data
                   between applications running on hosts communicating  by  an
                   IP network. If you have an application that doesn't require
                   reliable data stream service, use UDP instead.

                 o all - All transport layer protocol types. For more  general
                   information, see Transport layer on Wikipedia .

                 o udp  - With User Datagram Protocol (UDP), computer applica-
                   tions can send messages (or datagrams) to other hosts on an
                   Internet  Protocol  (IP)  network. Prior communications are
                   not required to set up transmission channels or data paths.
                   Applications  that  don't require reliable data stream ser-
                   vice can use UDP, which provides a connectionless  datagram
                   service  that  emphasizes reduced latency over reliability.
                   If you do require reliable data  stream  service,  use  TCP
                   instead.

                 o icmp  - Internet Control Message Protocol (ICMP) is used to
                   send error messages and operational information  indicating
                   success or failure when communicating with an instance. For
                   example, an error is indicated when an instance  could  not
                   be  reached.  When  you  specify icmp as the protocol , you
                   must specify the ICMP type using  the  fromPort  parameter,
                   and ICMP code using the toPort parameter.

              state -> (string)
                 Specifies whether the instance port is open or closed .

                 NOTE:
                     The port state for Lightsail instances is always open .

              cidrs -> (list)
                 The  IPv4  address, or range of IPv4 addresses (in CIDR nota-
                 tion) that are allowed to connect to an instance through  the
                 ports, and the protocol.

                 NOTE:
                     The ipv6Cidrs parameter lists the IPv6 addresses that are
                     allowed to connect to an instance.

                 For more information about CIDR block notation, see Classless
                 Inter-Domain Routing on Wikipedia .

                 (string)

              ipv6Cidrs -> (list)
                 The  IPv6  address, or range of IPv6 addresses (in CIDR nota-
                 tion) that are allowed to connect to an instance through  the
                 ports,  and  the  protocol. Only devices with an IPv6 address
                 can connect to an  instance  through  IPv6;  otherwise,  IPv4
                 should be used.

                 NOTE:
                     The  cidrs  parameter  lists  the IPv4 addresses that are
                     allowed to connect to an instance.

                 For more information about CIDR block notation, see Classless
                 Inter-Domain Routing on Wikipedia .

                 (string)

              cidrListAliases -> (list)
                 An  alias that defines access for a preconfigured range of IP
                 addresses.

                 The only alias currently  supported  is  lightsail-connect  ,
                 which allows IP addresses of the browser-based RDP/SSH client
                 in the Lightsail console to connect to your instance.

                 (string)



                                                    GET-INSTANCE-PORT-STATES()
