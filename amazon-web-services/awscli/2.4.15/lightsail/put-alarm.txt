PUT-ALARM()                                                        PUT-ALARM()



NAME
       put-alarm -

DESCRIPTION
       Creates  or updates an alarm, and associates it with the specified met-
       ric.

       An alarm is used to monitor a single metric for one of your  resources.
       When  a metric condition is met, the alarm can notify you by email, SMS
       text message, and a banner displayed on the Amazon  Lightsail  console.
       For more information, see Alarms in Amazon Lightsail .

       When  this  action creates an alarm, the alarm state is immediately set
       to INSUFFICIENT_DATA . The alarm is then evaluated and its state is set
       appropriately.  Any actions associated with the new state are then exe-
       cuted.

       When you update an existing alarm, its state is left unchanged, but the
       update  completely  overwrites the previous configuration of the alarm.
       The alarm is then evaluated with the updated configuration.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            put-alarm
          --alarm-name <value>
          --metric-name <value>
          --monitored-resource-name <value>
          --comparison-operator <value>
          --threshold <value>
          --evaluation-periods <value>
          [--datapoints-to-alarm <value>]
          [--treat-missing-data <value>]
          [--contact-protocols <value>]
          [--notification-triggers <value>]
          [--notification-enabled | --no-notification-enabled]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --alarm-name (string)
          The name for the alarm. Specify the name of  an  existing  alarm  to
          update, and overwrite the previous configuration of the alarm.

       --metric-name (string)
          The name of the metric to associate with the alarm.

          You can configure up to two alarms per metric.

          The following metrics are available for each resource type:

          o Instances  : BurstCapacityPercentage , BurstCapacityTime , CPUUti-
            lization , NetworkIn  ,  NetworkOut  ,  StatusCheckFailed  ,  Sta-
            tusCheckFailed_Instance , and StatusCheckFailed_System .

          o Load balancers : ClientTLSNegotiationErrorCount , HealthyHostCount
            ,   UnhealthyHostCount    ,    HTTPCode_LB_4XX_Count    ,    HTTP-
            Code_LB_5XX_Count    ,    HTTPCode_Instance_2XX_Count    ,   HTTP-
            Code_Instance_3XX_Count  ,  HTTPCode_Instance_4XX_Count  ,   HTTP-
            Code_Instance_5XX_Count  ,  InstanceResponseTime , RejectedConnec-
            tionCount , and RequestCount .

          o Relational databases  :  CPUUtilization  ,  DatabaseConnections  ,
            DiskQueueDepth , FreeStorageSpace , NetworkReceiveThroughput , and
            NetworkTransmitThroughput .

          For more information about these metrics, see Metrics  available  in
          Lightsail .

          Possible values:

          o CPUUtilization

          o NetworkIn

          o NetworkOut

          o StatusCheckFailed

          o StatusCheckFailed_Instance

          o StatusCheckFailed_System

          o ClientTLSNegotiationErrorCount

          o HealthyHostCount

          o UnhealthyHostCount

          o HTTPCode_LB_4XX_Count

          o HTTPCode_LB_5XX_Count

          o HTTPCode_Instance_2XX_Count

          o HTTPCode_Instance_3XX_Count

          o HTTPCode_Instance_4XX_Count

          o HTTPCode_Instance_5XX_Count

          o InstanceResponseTime

          o RejectedConnectionCount

          o RequestCount

          o DatabaseConnections

          o DiskQueueDepth

          o FreeStorageSpace

          o NetworkReceiveThroughput

          o NetworkTransmitThroughput

          o BurstCapacityTime

          o BurstCapacityPercentage

       --monitored-resource-name (string)
          The name of the Lightsail resource that will be monitored.

          Instances,  load  balancers,  and  relational databases are the only
          Lightsail resources that can currently be monitored by alarms.

       --comparison-operator (string)
          The arithmetic operation to use when comparing the specified statis-
          tic  to  the threshold. The specified statistic value is used as the
          first operand.

          Possible values:

          o GreaterThanOrEqualToThreshold

          o GreaterThanThreshold

          o LessThanThreshold

          o LessThanOrEqualToThreshold

       --threshold (double)
          The value against which the specified statistic is compared.

       --evaluation-periods (integer)
          The number of most recent periods over which data is compared to the
          specified  threshold. If you are setting an "M out of N" alarm, this
          value (evaluationPeriods ) is the N.

          If you are setting an alarm that requires that a number of  consecu-
          tive data points be breaching to trigger the alarm, this value spec-
          ifies the rolling period of time in which data points are evaluated.

          Each evaluation period is five minutes long. For example, specify an
          evaluation period of 24 to evaluate a metric over a  rolling  period
          of two hours.

          You  can  specify a minimum valuation period of 1 (5 minutes), and a
          maximum evaluation period of 288 (24 hours).

       --datapoints-to-alarm (integer)
          The number of data points that must  be  not  within  the  specified
          threshold  to  trigger the alarm. If you are setting an "M out of N"
          alarm, this value (datapointsToAlarm ) is the M.

       --treat-missing-data (string)
          Sets how this alarm will handle missing data points.

          An alarm can treat missing data in the following ways:

          o breaching - Assume the missing data is not within  the  threshold.
            Missing  data counts towards the number of times the metric is not
            within the threshold.

          o notBreaching - Assume the missing data is  within  the  threshold.
            Missing data does not count towards the number of times the metric
            is not within the threshold.

          o ignore - Ignore the missing  data.  Maintains  the  current  alarm
            state.

          o missing - Missing data is treated as missing.

          If  treatMissingData is not specified, the default behavior of miss-
          ing is used.

          Possible values:

          o breaching

          o notBreaching

          o ignore

          o missing

       --contact-protocols (list)
          The contact protocols to use for the alarm,  such  as  Email  ,  SMS
          (text messaging), or both.

          A notification is sent via the specified contact protocol if notifi-
          cations are enabled for the alarm, and when the alarm is  triggered.

          A  notification  is not sent if a contact protocol is not specified,
          if the specified contact protocol  is  not  configured  in  the  AWS
          Region,  or if notifications are not enabled for the alarm using the
          notificationEnabled paramater.

          Use the CreateContactMethod action to configure a  contact  protocol
          in an AWS Region.

          (string)

       Syntax:

          "string" "string" ...

          Where valid values are:
            Email
            SMS

       --notification-triggers (list)
          The alarm states that trigger a notification.

          An alarm has the following possible states:

          o ALARM - The metric is outside of the defined threshold.

          o INSUFFICIENT_DATA  - The alarm has just started, the metric is not
            available, or not enough data  is  available  for  the  metric  to
            determine the alarm state.

          o OK - The metric is within the defined threshold.

          When  you  specify  a  notification trigger, the ALARM state must be
          specified. The INSUFFICIENT_DATA and OK states can be  specified  in
          addition to the ALARM state.

          o If you specify OK as an alarm trigger, a notification is sent when
            the alarm switches from an ALARM or INSUFFICIENT_DATA alarm  state
            to an OK state. This can be thought of as an all clear alarm noti-
            fication.

          o If you specify INSUFFICIENT_DATA as the alarm trigger, a notifica-
            tion  is  sent  when  the alarm switches from an OK or ALARM alarm
            state to an INSUFFICIENT_DATA state.

          The notification trigger defaults to ALARM if you don't specify this
          parameter.

          (string)

       Syntax:

          "string" "string" ...

          Where valid values are:
            OK
            ALARM
            INSUFFICIENT_DATA

       --notification-enabled | --no-notification-enabled (boolean)
          Indicates whether the alarm is enabled.

          Notifications  are  enabled  by  default  if  you don't specify this
          parameter.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       operations -> (list)
          An array of objects that describe the result of the action, such  as
          the  status  of  the  request, the timestamp of the request, and the
          resources affected by the request.

          (structure)
              Describes the API operation.

              id -> (string)
                 The ID of the operation.

              resourceName -> (string)
                 The resource name.

              resourceType -> (string)
                 The resource type.

              createdAt -> (timestamp)
                 The timestamp  when  the  operation  was  initialized  (e.g.,
                 1479816991.349 ).

              location -> (structure)
                 The AWS Region and Availability Zone.

                 availabilityZone -> (string)
                     The  Availability  Zone.  Follows  the  format us-east-2a
                     (case-sensitive).

                 regionName -> (string)
                     The AWS Region name.

              isTerminal -> (boolean)
                 A Boolean value indicating whether the operation is terminal.

              operationDetails -> (string)
                 Details about the operation (e.g., Debian-1GB-Ohio-1 ).

              operationType -> (string)
                 The type of operation.

              status -> (string)
                 The status of the operation.

              statusChangedAt -> (timestamp)
                 The   timestamp   when   the   status   was   changed  (e.g.,
                 1479816991.349 ).

              errorCode -> (string)
                 The error code.

              errorDetails -> (string)
                 The error details.



                                                                   PUT-ALARM()
