OPEN-INSTANCE-PUBLIC-PORTS()                      OPEN-INSTANCE-PUBLIC-PORTS()



NAME
       open-instance-public-ports -

DESCRIPTION
       Opens ports for a specific Amazon Lightsail instance, and specifies the
       IP addresses allowed to connect to the instance through the ports,  and
       the protocol.

       The  OpenInstancePublicPorts  action  supports tag-based access control
       via resource tags applied to the resource identified by instanceName  .
       For more information, see the Amazon Lightsail Developer Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            open-instance-public-ports
          --port-info <value>
          --instance-name <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --port-info (structure)
          An  object to describe the ports to open for the specified instance.

          fromPort -> (integer)
              The first port in a range of open ports on an instance.

              Allowed ports:

              o TCP and UDP - 0 to 65535

              o ICMP - The ICMP type for IPv4 addresses. For example,  specify
                8  as  the  fromPort  (ICMP  type), and -1 as the toPort (ICMP
                code), to enable ICMP Ping. For more information, see  Control
                Messages on Wikipedia .

              o ICMPv6  - The ICMP type for IPv6 addresses. For example, spec-
                ify 128 as the fromPort (ICMPv6 type), and 0 as toPort (ICMPv6
                code). For more information, see Internet Control Message Pro-
                tocol for IPv6 .

          toPort -> (integer)
              The last port in a range of open ports on an instance.

              Allowed ports:

              o TCP and UDP - 0 to 65535

              o ICMP - The ICMP code for IPv4 addresses. For example,  specify
                8  as  the  fromPort  (ICMP  type), and -1 as the toPort (ICMP
                code), to enable ICMP Ping. For more information, see  Control
                Messages on Wikipedia .

              o ICMPv6  - The ICMP code for IPv6 addresses. For example, spec-
                ify 128 as the fromPort (ICMPv6 type), and 0 as toPort (ICMPv6
                code). For more information, see Internet Control Message Pro-
                tocol for IPv6 .

          protocol -> (string)
              The IP protocol name.

              The name can be one of the following:

              o tcp - Transmission Control Protocol (TCP)  provides  reliable,
                ordered,  and  error-checked delivery of streamed data between
                applications running on hosts communicating by an IP  network.
                If  you have an application that doesn't require reliable data
                stream service, use UDP instead.

              o all - All transport layer protocol  types.  For  more  general
                information, see Transport layer on Wikipedia .

              o udp - With User Datagram Protocol (UDP), computer applications
                can send messages (or datagrams) to other hosts on an Internet
                Protocol  (IP)  network. Prior communications are not required
                to set up transmission channels or  data  paths.  Applications
                that  don't  require reliable data stream service can use UDP,
                which provides a connectionless datagram service  that  empha-
                sizes  reduced  latency  over  reliability.  If you do require
                reliable data stream service, use TCP instead.

              o icmp - Internet Control Message Protocol  (ICMP)  is  used  to
                send  error  messages  and  operational information indicating
                success or failure when communicating with  an  instance.  For
                example,  an  error is indicated when an instance could not be
                reached. When you specify icmp as  the  protocol  ,  you  must
                specify  the  ICMP type using the fromPort parameter, and ICMP
                code using the toPort parameter.

          cidrs -> (list)
              The IPv4 address, or range of IPv4 addresses (in CIDR  notation)
              that  are  allowed  to connect to an instance through the ports,
              and the protocol.

              NOTE:
                 The ipv6Cidrs parameter lists the  IPv6  addresses  that  are
                 allowed to connect to an instance.

              Examples:

              o To  allow  the  IP  address 192.0.2.44 , specify 192.0.2.44 or
                192.0.2.44/32 .

              o To allow the IP addresses 192.0.2.0 to 192.0.2.255  ,  specify
                192.0.2.0/24 .

              For  more  information  about CIDR block notation, see Classless
              Inter-Domain Routing on Wikipedia .

              (string)

          ipv6Cidrs -> (list)
              The IPv6 address, or range of IPv6 addresses (in CIDR  notation)
              that  are  allowed  to connect to an instance through the ports,
              and the protocol. Only devices with an IPv6 address can  connect
              to an instance through IPv6; otherwise, IPv4 should be used.

              NOTE:
                 The cidrs parameter lists the IPv4 addresses that are allowed
                 to connect to an instance.

              For more information about CIDR block  notation,  see  Classless
              Inter-Domain Routing on Wikipedia .

              (string)

          cidrListAliases -> (list)
              An  alias  that  defines  access for a preconfigured range of IP
              addresses.

              The only alias currently supported is lightsail-connect ,  which
              allows  IP  addresses of the browser-based RDP/SSH client in the
              Lightsail console to connect to your instance.

              (string)

       Shorthand Syntax:

          fromPort=integer,toPort=integer,protocol=string,cidrs=string,string,ipv6Cidrs=string,string,cidrListAliases=string,string

       JSON Syntax:

          {
            "fromPort": integer,
            "toPort": integer,
            "protocol": "tcp"|"all"|"udp"|"icmp",
            "cidrs": ["string", ...],
            "ipv6Cidrs": ["string", ...],
            "cidrListAliases": ["string", ...]
          }

       --instance-name (string)
          The name of the instance for which to open ports.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To open firewall ports for an instance

       The following open-instance-public-ports example opens TCP port  22  on
       the specified instance.

          aws lightsail open-instance-public-ports \
              --instance-name MEAN-2 \
              --port-info fromPort=22,protocol=TCP,toPort=22

       Output:

          {
              "operation": {
                  "id": "719744f0-a022-46f2-9f11-6EXAMPLE4642",
                  "resourceName": "MEAN-2",
                  "resourceType": "Instance",
                  "createdAt": 1571072906.849,
                  "location": {
                      "availabilityZone": "us-west-2a",
                      "regionName": "us-west-2"
                  },
                  "isTerminal": true,
                  "operationDetails": "22/tcp",
                  "operationType": "OpenInstancePublicPorts",
                  "status": "Succeeded",
                  "statusChangedAt": 1571072906.849
              }
          }

OUTPUT
       operation -> (structure)
          An  array of objects that describe the result of the action, such as
          the status of the request, the timestamp of  the  request,  and  the
          resources affected by the request.

          id -> (string)
              The ID of the operation.

          resourceName -> (string)
              The resource name.

          resourceType -> (string)
              The resource type.

          createdAt -> (timestamp)
              The   timestamp   when  the  operation  was  initialized  (e.g.,
              1479816991.349 ).

          location -> (structure)
              The AWS Region and Availability Zone.

              availabilityZone -> (string)
                 The  Availability  Zone.  Follows   the   format   us-east-2a
                 (case-sensitive).

              regionName -> (string)
                 The AWS Region name.

          isTerminal -> (boolean)
              A Boolean value indicating whether the operation is terminal.

          operationDetails -> (string)
              Details about the operation (e.g., Debian-1GB-Ohio-1 ).

          operationType -> (string)
              The type of operation.

          status -> (string)
              The status of the operation.

          statusChangedAt -> (timestamp)
              The  timestamp when the status was changed (e.g., 1479816991.349
              ).

          errorCode -> (string)
              The error code.

          errorDetails -> (string)
              The error details.



                                                  OPEN-INSTANCE-PUBLIC-PORTS()
