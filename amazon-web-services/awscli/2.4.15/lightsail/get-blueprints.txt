GET-BLUEPRINTS()                                              GET-BLUEPRINTS()



NAME
       get-blueprints -

DESCRIPTION
       Returns  the list of available instance images, or blueprints . You can
       use a blueprint to create a new instance  already  running  a  specific
       operating  system,  as well as a preinstalled app or development stack.
       The software each instance is running depends on  the  blueprint  image
       you choose.

       NOTE:
          Use  active  blueprints  when creating new instances. Inactive blue-
          prints are listed to support customers with existing  instances  and
          are  not  necessarily  available to create new instances. Blueprints
          are marked inactive when they become outdated due to operating  sys-
          tem updates or new application releases.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       get-blueprints  is  a  paginated  operation.  Multiple API calls may be
       issued in order to retrieve the entire data set  of  results.  You  can
       disable pagination by providing the --no-paginate argument.  When using
       --output text and the --query argument on  a  paginated  response,  the
       --query  argument  must  extract data from the results of the following
       query expressions: blueprints

SYNOPSIS
            get-blueprints
          [--include-inactive | --no-include-inactive]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --include-inactive | --no-include-inactive (boolean)
          A Boolean value indicating whether to include  inactive  results  in
          your request.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To get the blueprints for new instances

       The  following get-blueprints example displays details about all of the
       available blueprints that can be used to create new instances in Amazon
       Lightsail.

          aws lightsail get-blueprints

       Output:

          {
              "blueprints": [
                  {
                      "blueprintId": "wordpress",
                      "name": "WordPress",
                      "group": "wordpress",
                      "type": "app",
                      "description": "Bitnami, the leaders in application packaging, and Automattic, the experts behind WordPress, have teamed up to offer this official WordPress image. This image is a pre-configured, ready-to-run image for running WordPress on Amazon Lightsail. WordPress is the world's most popular content management platform. Whether it's for an enterprise or small business website, or a personal or corporate blog, content authors can easily create content using its new Gutenberg editor, and developers can extend the base platform with additional features. Popular plugins like Jetpack, Akismet, All in One SEO Pack, WP Mail, Google Analytics for WordPress, and Amazon Polly are all pre-installed in this image. Let's Encrypt SSL certificates are supported through an auto-configuration script.",
                      "isActive": true,
                      "minPower": 0,
                      "version": "5.2.2-3",
                      "versionCode": "1",
                      "productUrl": "https://aws.amazon.com/marketplace/pp/B00NN8Y43U",
                      "licenseUrl": "https://d7umqicpi7263.cloudfront.net/eula/product/7d426cb7-9522-4dd7-a56b-55dd8cc1c8d0/588fd495-6492-4610-b3e8-d15ce864454c.txt",
                      "platform": "LINUX_UNIX"
                  },
                  {
                      "blueprintId": "lamp_7_1_28",
                      "name": "LAMP (PHP 7)",
                      "group": "lamp_7",
                      "type": "app",
                      "description": "LAMP with PHP 7.x certified by Bitnami greatly simplifies the development and deployment of PHP applications. It includes the latest versions of PHP 7.x, Apache and MySQL together with phpMyAdmin and popular PHP frameworks Zend, Symfony, CodeIgniter, CakePHP, Smarty, and Laravel. Other pre-configured components and PHP modules include FastCGI, ModSecurity, SQLite, Varnish, ImageMagick, xDebug, Xcache, OpenLDAP, Memcache, OAuth, PEAR, PECL, APC, GD and cURL. It is secure by default and supports multiple applications, each with its own virtual host and project directory. Let's Encrypt SSL certificates are supported through an auto-configuration script.",
                      "isActive": true,
                      "minPower": 0,
                      "version": "7.1.28",
                      "versionCode": "1",
                      "productUrl": "https://aws.amazon.com/marketplace/pp/B072JNJZ5C",
                      "licenseUrl": "https://d7umqicpi7263.cloudfront.net/eula/product/cb6afd05-a3b2-4916-a3e6-bccd414f5f21/12ab56cc-6a8c-4977-9611-dcd770824aad.txt",
                      "platform": "LINUX_UNIX"
                  },
                  {
                      "blueprintId": "nodejs",
                      "name": "Node.js",
                      "group": "node",
                      "type": "app",
                      "description": "Node.js certified by Bitnami is a pre-configured, ready to run image for Node.js on Amazon EC2. It includes the latest version of Node.js, Apache, Python and Redis. The image supports multiple Node.js applications, each with its own virtual host and project directory. It is configured for production use and is secure by default, as all ports except HTTP, HTTPS and SSH ports are closed. Let's Encrypt SSL certificates are supported through an auto-configuration script. Developers benefit from instant access to a secure, update and consistent Node.js environment without having to manually install and configure multiple components and libraries.",
                      "isActive": true,
                      "minPower": 0,
                      "version": "12.7.0",
                      "versionCode": "1",
                      "productUrl": "https://aws.amazon.com/marketplace/pp/B00NNZUAKO",
                      "licenseUrl": "https://d7umqicpi7263.cloudfront.net/eula/product/033793fe-951d-47d0-aa94-5fbd0afb3582/25f8fa66-c868-4d80-adf8-4a2b602064ae.txt",
                      "platform": "LINUX_UNIX"
                  },
                  ...
                  }
              ]
          }

OUTPUT
       blueprints -> (list)
          An  array  of  key-value  pairs  that contains information about the
          available blueprints.

          (structure)
              Describes a blueprint (a virtual private server image).

              blueprintId -> (string)
                 The ID for the virtual private server image (e.g.,  app_word-
                 press_4_4 or app_lamp_7_0 ).

              name -> (string)
                 The friendly name of the blueprint (e.g., Amazon Linux ).

              group -> (string)
                 The group name of the blueprint (e.g., amazon-linux ).

              type -> (string)
                 The type of the blueprint (e.g., os or app ).

              description -> (string)
                 The description of the blueprint.

              isActive -> (boolean)
                 A  Boolean  value indicating whether the blueprint is active.
                 Inactive blueprints are  listed  to  support  customers  with
                 existing  instances  but  are  not  necessarily available for
                 launch of new instances. Blueprints are marked inactive  when
                 they  become  outdated due to operating system updates or new
                 application releases.

              minPower -> (integer)
                 The minimum bundle power required to run this blueprint.  For
                 example,  you need a bundle with a power value of 500 or more
                 to create an instance that uses a blueprint  with  a  minimum
                 power  value  of  500. 0 indicates that the blueprint runs on
                 all instance sizes.

              version -> (string)
                 The version number of the operating system,  application,  or
                 stack (e.g., 2016.03.0 ).

              versionCode -> (string)
                 The version code.

              productUrl -> (string)
                 The product URL to learn more about the image or blueprint.

              licenseUrl -> (string)
                 The  end-user  license  agreement  URL for the image or blue-
                 print.

              platform -> (string)
                 The operating system  platform  (either  Linux/Unix-based  or
                 Windows Server-based) of the blueprint.

       nextPageToken -> (string)
          The  token to advance to the next page of results from your request.

          A next page token is not returned if there are no  more  results  to
          display.

          To  get  the  next  page  of  results, perform another GetBlueprints
          request and specify the next page token using the pageToken  parame-
          ter.



                                                              GET-BLUEPRINTS()
