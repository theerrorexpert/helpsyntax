CREATE-CONTAINER-SERVICE()                          CREATE-CONTAINER-SERVICE()



NAME
       create-container-service -

DESCRIPTION
       Creates an Amazon Lightsail container service.

       A  Lightsail  container  service is a compute resource to which you can
       deploy containers. For more information, see Container services in Ama-
       zon Lightsail in the Lightsail Dev Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-container-service
          --service-name <value>
          --power <value>
          --scale <value>
          [--tags <value>]
          [--public-domain-names <value>]
          [--deployment <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --service-name (string)
          The name for the container service.

          The  name  that  you specify for your container service will make up
          part of its default domain. The default domain of a  container  ser-
          vice    is    typically   https://<ServiceName>.<RandomGUID>.<AWSRe-
          gion>.cs.amazonlightsail.com . If the name of your container service
          is  container-service-1 , and it's located in the US East (Ohio) AWS
          region (us-east-2 ), then the domain for your container service will
          be  like the following example: https://container-service-1.ur4EXAM-
          PLE2uq.us-east-2.cs.amazonlightsail.com

          The following are the requirements for container service names:

          o Must be unique within each AWS Region in your Lightsail account.

          o Must contain 1 to 63 characters.

          o Must contain only alphanumeric characters and hyphens.

          o A hyphen (-) can separate words but cannot be at the start or  end
            of the name.

       --power (string)
          The power specification for the container service.

          The  power  specifies  the amount of memory, vCPUs, and base monthly
          cost of each node of the container service. The power and scale of a
          container service makes up its configured capacity. To determine the
          monthly price of your container service, multiply the base price  of
          the power with the scale (the number of nodes) of the service.

          Use  the  GetContainerServicePowers  action  to  get a list of power
          options that you can specify using this parameter,  and  their  base
          monthly cost.

          Possible values:

          o nano

          o micro

          o small

          o medium

          o large

          o xlarge

       --scale (integer)
          The scale specification for the container service.

          The  scale  specifies  the  allocated compute nodes of the container
          service. The power and scale of a container  service  makes  up  its
          configured  capacity.  To  determine  the monthly price of your con-
          tainer service, multiply the base price of the power with the  scale
          (the number of nodes) of the service.

       --tags (list)
          The  tag  keys  and  optional values to add to the container service
          during create.

          Use the TagResource action to tag a resource after it's created.

          For more information about tags in Lightsail, see the Amazon  Light-
          sail Developer Guide .

          (structure)
              Describes  a  tag  key  and optional value assigned to an Amazon
              Lightsail resource.

              For more information about tags in  Lightsail,  see  the  Amazon
              Lightsail Developer Guide .

              key -> (string)
                 The key of the tag.

                 Constraints:  Tag  keys accept a maximum of 128 letters, num-
                 bers, spaces in UTF-8, or the following characters: + - = . _
                 : / @

              value -> (string)
                 The value of the tag.

                 Constraints: Tag values accept a maximum of 256 letters, num-
                 bers, spaces in UTF-8, or the following characters: + - = . _
                 : / @

       Shorthand Syntax:

          key=string,value=string ...

       JSON Syntax:

          [
            {
              "key": "string",
              "value": "string"
            }
            ...
          ]

       --public-domain-names (map)
          The  public  domain names to use with the container service, such as
          example.com and www.example.com .

          You can specify up to four public domain names for a container  ser-
          vice.  The  domain names that you specify are used when you create a
          deployment with a container configured as  the  public  endpoint  of
          your container service.

          If  you  don't  specify  public  domain  names, then you can use the
          default domain of the container service.

          WARNING:
              You must create and validate an SSL/TLS certificate  before  you
              can use public domain names with your container service. Use the
              CreateCertificate action to create a certificate for the  public
              domain names you want to use with your container service.

          You  can  specify public domain names using a string to array map as
          shown in the example later on this page.

          key -> (string)

          value -> (list)
              (string)

       Shorthand Syntax:

          KeyName1=string,string,KeyName2=string,string

       JSON Syntax:

          {"string": ["string", ...]
            ...}

       --deployment (structure)
          An object that describes a deployment for the container service.

          A deployment specifies the containers that will be launched  on  the
          container service and their settings, such as the ports to open, the
          environment variables to apply, and the launch command  to  run.  It
          also  specifies the container that will serve as the public endpoint
          of the deployment and its settings, such as the HTTP or  HTTPS  port
          to use, and the health check configuration.

          containers -> (map)
              An object that describes the configuration for the containers of
              the deployment.

              key -> (string)

              value -> (structure)
                 Describes the settings of a container that will be  launched,
                 or  that  is  launched, to an Amazon Lightsail container ser-
                 vice.

                 image -> (string)
                     The name of the image used for the container.

                     Container images sourced from  your  Lightsail  container
                     service,  that are registered and stored on your service,
                     start with a colon (: ). For example, if  your  container
                     service name is container-service-1 , the container image
                     label is mystaticsite , and you want to use the third  (3
                     )  version  of  the  registered container image, then you
                     should specify :container-service-1.mystaticsite.3  .  To
                     use the latest version of a container image, specify lat-
                     est instead of  a  version  number  (for  example,  :con-
                     tainer-service-1.mystaticsite.latest  ).  Lightsail  will
                     automatically use the highest  numbered  version  of  the
                     registered container image.

                     Container  images  sourced  from  a  public registry like
                     Docker  Hub  don't  start  with  a  colon.  For  example,
                     nginx:latest or nginx .

                 command -> (list)
                     The launch command for the container.

                     (string)

                 environment -> (map)
                     The environment variables of the container.

                     key -> (string)

                     value -> (string)

                 ports -> (map)
                     The open firewall ports of the container.

                     key -> (string)

                     value -> (string)

          publicEndpoint -> (structure)
              An object that describes the endpoint of the deployment.

              containerName -> (string)
                 The name of the container for the endpoint.

              containerPort -> (integer)
                 The port of the container to which traffic is forwarded to.

              healthCheck -> (structure)
                 An  object  that  describes the health check configuration of
                 the container.

                 healthyThreshold -> (integer)
                     The  number  of  consecutive  health   checks   successes
                     required  before  moving  the  container  to  the Healthy
                     state. The default value is 2 .

                 unhealthyThreshold -> (integer)
                     The number of consecutive health check failures  required
                     before  moving  the container to the Unhealthy state. The
                     default value is 2 .

                 timeoutSeconds -> (integer)
                     The amount of time, in seconds, during which no  response
                     means  a  failed  health check. You can specify between 2
                     and 60 seconds. The default value is 2 .

                 intervalSeconds -> (integer)
                     The approximate  interval,  in  seconds,  between  health
                     checks  of  an  individual  container.  You  can  specify
                     between 5 and 300 seconds. The default value is 5 .

                 path -> (string)
                     The path on the container on which to perform the  health
                     check. The default value is / .

                 successCodes -> (string)
                     The  HTTP  codes  to  use  when checking for a successful
                     response from a container. You can specify values between
                     200  and 499 . You can specify multiple values (for exam-
                     ple, 200,202 ) or a range of values (for example, 200-299
                     ).

       Shorthand Syntax:

          containers={KeyName1={image=string,command=[string,string],environment={KeyName1=string,KeyName2=string},ports={KeyName1=string,KeyName2=string}},KeyName2={image=string,command=[string,string],environment={KeyName1=string,KeyName2=string},ports={KeyName1=string,KeyName2=string}}},publicEndpoint={containerName=string,containerPort=integer,healthCheck={healthyThreshold=integer,unhealthyThreshold=integer,timeoutSeconds=integer,intervalSeconds=integer,path=string,successCodes=string}}

       JSON Syntax:

          {
            "containers": {"string": {
                  "image": "string",
                  "command": ["string", ...],
                  "environment": {"string": "string"
                    ...},
                  "ports": {"string": "HTTP"|"HTTPS"|"TCP"|"UDP"
                    ...}
                }
              ...},
            "publicEndpoint": {
              "containerName": "string",
              "containerPort": integer,
              "healthCheck": {
                "healthyThreshold": integer,
                "unhealthyThreshold": integer,
                "timeoutSeconds": integer,
                "intervalSeconds": integer,
                "path": "string",
                "successCodes": "string"
              }
            }
          }

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       containerService -> (structure)
          An object that describes a container service.

          containerServiceName -> (string)
              The name of the container service.

          arn -> (string)
              The Amazon Resource Name (ARN) of the container service.

          createdAt -> (timestamp)
              The timestamp when the container service was created.

          location -> (structure)
              An  object that describes the location of the container service,
              such as the AWS Region and Availability Zone.

              availabilityZone -> (string)
                 The  Availability  Zone.  Follows   the   format   us-east-2a
                 (case-sensitive).

              regionName -> (string)
                 The AWS Region name.

          resourceType -> (string)
              The Lightsail resource type of the container service (i.e., Con-
              tainerService ).

          tags -> (list)
              The tag keys and optional values  for  the  resource.  For  more
              information  about  tags  in Lightsail, see the Amazon Lightsail
              Developer Guide .

              (structure)
                 Describes a tag key and optional value assigned to an  Amazon
                 Lightsail resource.

                 For  more information about tags in Lightsail, see the Amazon
                 Lightsail Developer Guide .

                 key -> (string)
                     The key of the tag.

                     Constraints: Tag keys accept a maximum  of  128  letters,
                     numbers,  spaces in UTF-8, or the following characters: +
                     - = . _ : / @

                 value -> (string)
                     The value of the tag.

                     Constraints: Tag values accept a maximum of 256  letters,
                     numbers,  spaces in UTF-8, or the following characters: +
                     - = . _ : / @

          power -> (string)
              The power specification of the container service.

              The power specifies the amount of RAM, the number of vCPUs,  and
              the base price of the container service.

          powerId -> (string)
              The ID of the power of the container service.

          state -> (string)
              The current state of the container service.

              The following container service states are possible:

              o PENDING - The container service is being created.

              o READY  - The container service is running but it does not have
                an active container deployment.

              o DEPLOYING - The container service  is  launching  a  container
                deployment.

              o RUNNING  -  The  container  service  is  running and it has an
                active container deployment.

              o UPDATING -  The  container  service  capacity  or  its  custom
                domains are being updated.

              o DELETING - The container service is being deleted.

              o DISABLED  -  The container service is disabled, and its active
                deployment and containers, if any, are shut down.

          stateDetail -> (structure)
              An object that describes the current state of the container ser-
              vice.

              NOTE:
                 The  state  detail is populated only when a container service
                 is in a PENDING , DEPLOYING , or UPDATING state.

              code -> (string)
                 The state code of the container service.

                 The following state codes are possible:

                 o The following state codes are possible  if  your  container
                   service is in a DEPLOYING or UPDATING state:

                   o CREATING_SYSTEM_RESOURCES - The system resources for your
                     container service are being created.

                   o CREATING_NETWORK_INFRASTRUCTURE - The network infrastruc-
                     ture for your container service are being created.

                   o PROVISIONING_CERTIFICATE  -  The  SSL/TLS certificate for
                     your container service is being created.

                   o PROVISIONING_SERVICE - Your container  service  is  being
                     provisioned.

                   o CREATING_DEPLOYMENT - Your deployment is being created on
                     your container service.

                   o EVALUATING_HEALTH_CHECK - The health of  your  deployment
                     is being evaluated.

                   o ACTIVATING_DEPLOYMENT  -  Your  deployment is being acti-
                     vated.

                 o The following state codes are possible  if  your  container
                   service is in a PENDING state:

                   o CERTIFICATE_LIMIT_EXCEEDED   -  The  SSL/TLS  certificate
                     required for your container service exceeds  the  maximum
                     number of certificates allowed for your account.

                   o UNKNOWN_ERROR  -  An error was experienced when your con-
                     tainer service was being created.

              message -> (string)
                 A message that provides more information for the state  code.

                 NOTE:
                     The  state detail is populated only when a container ser-
                     vice is in a PENDING , DEPLOYING , or UPDATING state.

          scale -> (integer)
              The scale specification of the container service.

              The scale specifies the allocated compute nodes of the container
              service.

          currentDeployment -> (structure)
              An object that describes the current container deployment of the
              container service.

              version -> (integer)
                 The version number of the deployment.

              state -> (string)
                 The state of the deployment.

                 A deployment can be in one of the following states:

                 o Activating - The deployment is being created.

                 o Active - The deployment was successfully created, and  it's
                   currently  running  on the container service. The container
                   service can have only one deployment in an active state  at
                   a time.

                 o Inactive  - The deployment was previously successfully cre-
                   ated, but it is not currently running on the container ser-
                   vice.

                 o Failed  -  The  deployment  failed. Use the GetContainerLog
                   action to view the log events for  the  containers  in  the
                   deployment  to try to determine the reason for the failure.

              containers -> (map)
                 An object that describes the configuration for the containers
                 of the deployment.

                 key -> (string)

                 value -> (structure)
                     Describes  the  settings  of  a  container  that  will be
                     launched, or that is launched,  to  an  Amazon  Lightsail
                     container service.

                     image -> (string)
                        The name of the image used for the container.

                        Container images sourced from your Lightsail container
                        service, that are registered and stored on  your  ser-
                        vice,  start  with  a colon (: ). For example, if your
                        container service name is  container-service-1  ,  the
                        container  image  label is mystaticsite , and you want
                        to use the third (3 ) version of the  registered  con-
                        tainer  image, then you should specify :container-ser-
                        vice-1.mystaticsite.3 . To use the latest version of a
                        container  image,  specify latest instead of a version
                        number  (for  example,  :container-service-1.mystatic-
                        site.latest  ).  Lightsail  will automatically use the
                        highest numbered version of the  registered  container
                        image.

                        Container  images  sourced from a public registry like
                        Docker Hub don't start  with  a  colon.  For  example,
                        nginx:latest or nginx .

                     command -> (list)
                        The launch command for the container.

                        (string)

                     environment -> (map)
                        The environment variables of the container.

                        key -> (string)

                        value -> (string)

                     ports -> (map)
                        The open firewall ports of the container.

                        key -> (string)

                        value -> (string)

              publicEndpoint -> (structure)
                 An object that describes the endpoint of the deployment.

                 containerName -> (string)
                     The  name  of  the container entry of the deployment that
                     the endpoint configuration applies to.

                 containerPort -> (integer)
                     The port of the specified container to which  traffic  is
                     forwarded to.

                 healthCheck -> (structure)
                     An  object  that describes the health check configuration
                     of the container.

                     healthyThreshold -> (integer)
                        The number  of  consecutive  health  checks  successes
                        required  before  moving  the container to the Healthy
                        state. The default value is 2 .

                     unhealthyThreshold -> (integer)
                        The  number  of  consecutive  health  check   failures
                        required  before moving the container to the Unhealthy
                        state. The default value is 2 .

                     timeoutSeconds -> (integer)
                        The amount  of  time,  in  seconds,  during  which  no
                        response  means a failed health check. You can specify
                        between 2 and 60 seconds. The default value is 2 .

                     intervalSeconds -> (integer)
                        The approximate interval, in seconds,  between  health
                        checks  of  an  individual  container. You can specify
                        between 5 and 300 seconds. The default value is 5 .

                     path -> (string)
                        The path on the container  on  which  to  perform  the
                        health check. The default value is / .

                     successCodes -> (string)
                        The  HTTP  codes to use when checking for a successful
                        response from a  container.  You  can  specify  values
                        between  200 and 499 . You can specify multiple values
                        (for example, 200,202 ) or  a  range  of  values  (for
                        example, 200-299 ).

              createdAt -> (timestamp)
                 The timestamp when the deployment was created.

          nextDeployment -> (structure)
              An  object  that  describes the next deployment of the container
              service.

              This value is null when there is  no  deployment  in  a  pending
              state.

              version -> (integer)
                 The version number of the deployment.

              state -> (string)
                 The state of the deployment.

                 A deployment can be in one of the following states:

                 o Activating - The deployment is being created.

                 o Active  - The deployment was successfully created, and it's
                   currently running on the container service.  The  container
                   service  can have only one deployment in an active state at
                   a time.

                 o Inactive - The deployment was previously successfully  cre-
                   ated, but it is not currently running on the container ser-
                   vice.

                 o Failed - The deployment  failed.  Use  the  GetContainerLog
                   action  to  view  the  log events for the containers in the
                   deployment to try to determine the reason for the  failure.

              containers -> (map)
                 An object that describes the configuration for the containers
                 of the deployment.

                 key -> (string)

                 value -> (structure)
                     Describes the  settings  of  a  container  that  will  be
                     launched,  or  that  is  launched, to an Amazon Lightsail
                     container service.

                     image -> (string)
                        The name of the image used for the container.

                        Container images sourced from your Lightsail container
                        service,  that  are registered and stored on your ser-
                        vice, start with a colon (: ). For  example,  if  your
                        container  service  name  is container-service-1 , the
                        container image label is mystaticsite , and  you  want
                        to  use  the third (3 ) version of the registered con-
                        tainer image, then you should specify  :container-ser-
                        vice-1.mystaticsite.3 . To use the latest version of a
                        container image, specify latest instead of  a  version
                        number  (for  example,  :container-service-1.mystatic-
                        site.latest ). Lightsail will  automatically  use  the
                        highest  numbered  version of the registered container
                        image.

                        Container images sourced from a public  registry  like
                        Docker  Hub  don't  start  with  a colon. For example,
                        nginx:latest or nginx .

                     command -> (list)
                        The launch command for the container.

                        (string)

                     environment -> (map)
                        The environment variables of the container.

                        key -> (string)

                        value -> (string)

                     ports -> (map)
                        The open firewall ports of the container.

                        key -> (string)

                        value -> (string)

              publicEndpoint -> (structure)
                 An object that describes the endpoint of the deployment.

                 containerName -> (string)
                     The name of the container entry of  the  deployment  that
                     the endpoint configuration applies to.

                 containerPort -> (integer)
                     The  port  of the specified container to which traffic is
                     forwarded to.

                 healthCheck -> (structure)
                     An object that describes the health  check  configuration
                     of the container.

                     healthyThreshold -> (integer)
                        The  number  of  consecutive  health  checks successes
                        required before moving the container  to  the  Healthy
                        state. The default value is 2 .

                     unhealthyThreshold -> (integer)
                        The   number  of  consecutive  health  check  failures
                        required before moving the container to the  Unhealthy
                        state. The default value is 2 .

                     timeoutSeconds -> (integer)
                        The  amount  of  time,  in  seconds,  during  which no
                        response means a failed health check. You can  specify
                        between 2 and 60 seconds. The default value is 2 .

                     intervalSeconds -> (integer)
                        The  approximate  interval, in seconds, between health
                        checks of an individual  container.  You  can  specify
                        between 5 and 300 seconds. The default value is 5 .

                     path -> (string)
                        The  path  on  the  container  on which to perform the
                        health check. The default value is / .

                     successCodes -> (string)
                        The HTTP codes to use when checking for  a  successful
                        response  from  a  container.  You  can specify values
                        between 200 and 499 . You can specify multiple  values
                        (for  example,  200,202  )  or  a range of values (for
                        example, 200-299 ).

              createdAt -> (timestamp)
                 The timestamp when the deployment was created.

          isDisabled -> (boolean)
              A Boolean value indicating whether the container service is dis-
              abled.

          principalArn -> (string)
              The principal ARN of the container service.

              The  principal  ARN  can  be used to create a trust relationship
              between your standard AWS account and your  Lightsail  container
              service.  This  allows  you  to  give your service permission to
              access resources in your standard AWS account.

          privateDomainName -> (string)
              The private domain name of the container service.

              The private domain name is accessible only  by  other  resources
              within the default virtual private cloud (VPC) of your Lightsail
              account.

          publicDomainNames -> (map)
              The public domain name of the container service, such  as  exam-
              ple.com and www.example.com .

              You  can  specify up to four public domain names for a container
              service. The domain names that you specify  are  used  when  you
              create  a  deployment  with a container configured as the public
              endpoint of your container service.

              If you don't specify public domain names, then you can  use  the
              default domain of the container service.

              WARNING:
                 You  must  create  and validate an SSL/TLS certificate before
                 you can use public domain names with your container  service.
                 Use  the CreateCertificate action to create a certificate for
                 the public domain names you want to use with  your  container
                 service.

              See  CreateContainerService or UpdateContainerService for infor-
              mation about how to specify public domain names for your  Light-
              sail container service.

              key -> (string)

              value -> (list)
                 (string)

          url -> (string)
              The publicly accessible URL of the container service.

              If  no  public  endpoint is specified in the currentDeployment ,
              this URL returns a 404 response.



                                                    CREATE-CONTAINER-SERVICE()
