ADD-APPLICATION-REFERENCE-DATA-SOURCE()ADD-APPLICATION-REFERENCE-DATA-SOURCE()



NAME
       add-application-reference-data-source -

DESCRIPTION
       NOTE:
          This  documentation is for version 1 of the Amazon Kinesis Data Ana-
          lytics API, which only supports SQL applications. Version 2  of  the
          API  supports  SQL and Java applications. For more information about
          version 2, see Amazon Kinesis Data Analytics API V2 Documentation  .

       Adds a reference data source to an existing application.

       Amazon  Kinesis  Analytics  reads reference data (that is, an Amazon S3
       object) and creates an in-application table within your application. In
       the  request,  you  provide  the  source (S3 bucket name and object key
       name), name of the in-application table to create,  and  the  necessary
       mapping information that describes how data in Amazon S3 object maps to
       columns in the resulting in-application table.

       For conceptual information, see Configuring Application Input . For the
       limits on data sources you can add to your application, see Limits .

       This  operation  requires  permissions  to  perform  the kinesisanalyt-
       ics:AddApplicationOutput action.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            add-application-reference-data-source
          --application-name <value>
          --current-application-version-id <value>
          --reference-data-source <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --application-name (string)
          Name of an existing application.

       --current-application-version-id (long)
          Version of the application for which you are  adding  the  reference
          data  source.  You  can use the DescribeApplication operation to get
          the current application version. If the version specified is not the
          current version, the ConcurrentModificationException is returned.

       --reference-data-source (structure)
          The reference data source can be an object in your Amazon S3 bucket.
          Amazon Kinesis Analytics reads the object and copies the  data  into
          the  in-application table that is created. You provide an S3 bucket,
          object key name, and the resulting in-application table that is cre-
          ated.  You  must also provide an IAM role with the necessary permis-
          sions that Amazon Kinesis Analytics can assume to  read  the  object
          from your S3 bucket on your behalf.

          TableName -> (string)
              Name of the in-application table to create.

          S3ReferenceDataSource -> (structure)
              Identifies  the S3 bucket and object that contains the reference
              data. Also identifies the IAM role Amazon Kinesis Analytics  can
              assume  to  read  this  object on your behalf. An Amazon Kinesis
              Analytics application loads reference data  only  once.  If  the
              data  changes, you call the UpdateApplication operation to trig-
              ger reloading of data into your application.

              BucketARN -> (string)
                 Amazon Resource Name (ARN) of the S3 bucket.

              FileKey -> (string)
                 Object key name containing reference data.

              ReferenceRoleARN -> (string)
                 ARN of the IAM role that the service can assume to read  data
                 on  your  behalf.  This  role  must  have  permission for the
                 s3:GetObject action on  the  object  and  trust  policy  that
                 allows  Amazon  Kinesis Analytics service principal to assume
                 this role.

          ReferenceSchema -> (structure)
              Describes the format of the data in the  streaming  source,  and
              how  each  data element maps to corresponding columns created in
              the in-application stream.

              RecordFormat -> (structure)
                 Specifies the format of the records on the streaming  source.

                 RecordFormatType -> (string)
                     The type of record format.

                 MappingParameters -> (structure)
                     When  configuring application input at the time of creat-
                     ing or updating an application, provides additional  map-
                     ping  information  specific to the record format (such as
                     JSON, CSV, or record fields delimited by some  delimiter)
                     on the streaming source.

                     JSONMappingParameters -> (structure)
                        Provides  additional  mapping information when JSON is
                        the record format on the streaming source.

                        RecordRowPath -> (string)
                            Path to the top-level  parent  that  contains  the
                            records.

                     CSVMappingParameters -> (structure)
                        Provides   additional  mapping  information  when  the
                        record format uses delimiters (for example, CSV).

                        RecordRowDelimiter -> (string)
                            Row delimiter. For example, in a CSV  format,  'n'
                            is the typical row delimiter.

                        RecordColumnDelimiter -> (string)
                            Column  delimiter. For example, in a CSV format, a
                            comma (",") is the typical column delimiter.

              RecordEncoding -> (string)
                 Specifies the  encoding  of  the  records  in  the  streaming
                 source. For example, UTF-8.

              RecordColumns -> (list)
                 A list of RecordColumn objects.

                 (structure)
                     Describes the mapping of each data element in the stream-
                     ing source to the corresponding column in the in-applica-
                     tion stream.

                     Also  used  to  describe the format of the reference data
                     source.

                     Name -> (string)
                        Name of the column created in the in-application input
                        stream or reference table.

                     Mapping -> (string)
                        Reference  to  the data element in the streaming input
                        or the reference data source. This element is required
                        if the RecordFormatType is JSON .

                     SqlType -> (string)
                        Type  of  column  created  in the in-application input
                        stream or reference table.

       JSON Syntax:

          {
            "TableName": "string",
            "S3ReferenceDataSource": {
              "BucketARN": "string",
              "FileKey": "string",
              "ReferenceRoleARN": "string"
            },
            "ReferenceSchema": {
              "RecordFormat": {
                "RecordFormatType": "JSON"|"CSV",
                "MappingParameters": {
                  "JSONMappingParameters": {
                    "RecordRowPath": "string"
                  },
                  "CSVMappingParameters": {
                    "RecordRowDelimiter": "string",
                    "RecordColumnDelimiter": "string"
                  }
                }
              },
              "RecordEncoding": "string",
              "RecordColumns": [
                {
                  "Name": "string",
                  "Mapping": "string",
                  "SqlType": "string"
                }
                ...
              ]
            }
          }

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       None



                                       ADD-APPLICATION-REFERENCE-DATA-SOURCE()
