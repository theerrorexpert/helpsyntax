CREATE-APPLICATION-VERSION()                      CREATE-APPLICATION-VERSION()



NAME
       create-application-version -

DESCRIPTION
       Creates  an  application version for the specified application. You can
       create an application version from a source bundle in Amazon S3, a com-
       mit  in AWS CodeCommit, or the output of an AWS CodeBuild build as fol-
       lows:

       Specify a commit in an AWS CodeCommit repository with SourceBuildInfor-
       mation .

       Specify  a  build  in  an AWS CodeBuild with SourceBuildInformation and
       BuildConfiguration .

       Specify a source bundle in S3 with SourceBundle

       Omit both SourceBuildInformation and SourceBundle to  use  the  default
       sample application.

       NOTE:
          After  you  create an application version with a specified Amazon S3
          bucket and key location, you can't change that Amazon  S3  location.
          If  you change the Amazon S3 location, you receive an exception when
          you attempt to launch an environment from the application version.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-application-version
          --application-name <value>
          --version-label <value>
          [--description <value>]
          [--source-build-information <value>]
          [--source-bundle <value>]
          [--build-configuration <value>]
          [--auto-create-application | --no-auto-create-application]
          [--process | --no-process]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --application-name (string)
          The name of the application. If no application is  found  with  this
          name, and AutoCreateApplication is false , returns an InvalidParame-
          terValue error.

       --version-label (string)
          A label identifying this version.

          Constraint: Must be unique per application. If an  application  ver-
          sion  already  exists with this label for the specified application,
          AWS Elastic Beanstalk returns an InvalidParameterValue error.

       --description (string)
          A description of this application version.

       --source-build-information (structure)
          Specify a commit in an AWS CodeCommit Git repository to use  as  the
          source code for the application version.

          SourceType -> (string)
              The type of repository.

              o Git

              o Zip

          SourceRepository -> (string)
              Location where the repository is stored.

              o CodeCommit

              o S3

          SourceLocation -> (string)
              The  location of the source code, as a formatted string, depend-
              ing on the value of SourceRepository

              o For CodeCommit , the format is the repository name and  commit
                ID,    separated    by   a   forward   slash.   For   example,
                my-git-repo/265cfa0cf6af46153527f55d6503ec030551f57a .

              o For S3 , the format is the S3 bucket name and object key, sep-
                arated  by  a  forward  slash. For example, my-s3-bucket/Fold-
                ers/my-source-file .

       Shorthand Syntax:

          SourceType=string,SourceRepository=string,SourceLocation=string

       JSON Syntax:

          {
            "SourceType": "Git"|"Zip",
            "SourceRepository": "CodeCommit"|"S3",
            "SourceLocation": "string"
          }

       --source-bundle (structure)
          The Amazon S3 bucket and key  that  identify  the  location  of  the
          source bundle for this version.

          NOTE:
              The  Amazon S3 bucket must be in the same region as the environ-
              ment.

          Specify a source bundle in S3 or  a  commit  in  an  AWS  CodeCommit
          repository  (with SourceBuildInformation ), but not both. If neither
          SourceBundle  nor  SourceBuildInformation  are   provided,   Elastic
          Beanstalk uses a sample application.

          S3Bucket -> (string)
              The Amazon S3 bucket where the data is located.

          S3Key -> (string)
              The Amazon S3 key where the data is located.

       Shorthand Syntax:

          S3Bucket=string,S3Key=string

       JSON Syntax:

          {
            "S3Bucket": "string",
            "S3Key": "string"
          }

       --build-configuration (structure)
          Settings for an AWS CodeBuild build.

          ArtifactName -> (string)
              The  name  of  the artifact of the CodeBuild build. If provided,
              Elastic Beanstalk stores the build artifact in the  S3  location
              S3-bucket  /resources/application-name /codebuild/codebuild-ver-
              sion-label  -artifact-name  .zip.  If  not   provided,   Elastic
              Beanstalk stores the build artifact in the S3 location S3-bucket
              /resources/application-name   /codebuild/codebuild-version-label
              .zip.

          CodeBuildServiceRole -> (string)
              The  Amazon  Resource  Name (ARN) of the AWS Identity and Access
              Management (IAM) role that enables  AWS  CodeBuild  to  interact
              with dependent AWS services on behalf of the AWS account.

          ComputeType -> (string)
              Information  about  the compute resources the build project will
              use.

              o BUILD_GENERAL1_SMALL: Use up to 3 GB memory and  2  vCPUs  for
                builds

              o BUILD_GENERAL1_MEDIUM:  Use  up to 7 GB memory and 4 vCPUs for
                builds

              o BUILD_GENERAL1_LARGE: Use up to 15 GB memory and 8  vCPUs  for
                builds

          Image -> (string)
              The ID of the Docker image to use for this build project.

          TimeoutInMinutes -> (integer)
              How  long in minutes, from 5 to 480 (8 hours), for AWS CodeBuild
              to wait until timing out any related build  that  does  not  get
              marked as completed. The default is 60 minutes.

       Shorthand Syntax:

          ArtifactName=string,CodeBuildServiceRole=string,ComputeType=string,Image=string,TimeoutInMinutes=integer

       JSON Syntax:

          {
            "ArtifactName": "string",
            "CodeBuildServiceRole": "string",
            "ComputeType": "BUILD_GENERAL1_SMALL"|"BUILD_GENERAL1_MEDIUM"|"BUILD_GENERAL1_LARGE",
            "Image": "string",
            "TimeoutInMinutes": integer
          }

       --auto-create-application | --no-auto-create-application (boolean)
          Set  to  true to create an application with the specified name if it
          doesn't already exist.

       --process | --no-process (boolean)
          Pre-processes and validates the environment manifest (env.yaml ) and
          configuration  files (*.config files in the .ebextensions folder) in
          the source  bundle.  Validating  configuration  files  can  identify
          issues prior to deploying the application version to an environment.

          You must turn processing on for application versions that you create
          using  AWS  CodeBuild  or  AWS  CodeCommit. For application versions
          built from a source bundle in Amazon S3, processing is optional.

          NOTE:
              The Process option  validates  Elastic  Beanstalk  configuration
              files.  It  doesn't  validate  your  application's configuration
              files, like proxy server or Docker configuration.

       --tags (list)
          Specifies the tags applied to the application version.

          Elastic Beanstalk applies these tags only to  the  application  ver-
          sion.  Environments  that  use the application version don't inherit
          the tags.

          (structure)
              Describes a tag applied to a resource in an environment.

              Key -> (string)
                 The key of the tag.

              Value -> (string)
                 The value of the tag.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a new application version

       The following command creates a new version,  "v1"  of  an  application
       named "MyApp":

          aws elasticbeanstalk create-application-version --application-name MyApp --version-label v1 --description MyAppv1 --source-bundle S3Bucket="my-bucket",S3Key="sample.war" --auto-create-application

       The  application  will  be created automatically if it does not already
       exist, due to the auto-create-application option. The source bundle  is
       a  .war file stored in an s3 bucket named "my-bucket" that contains the
       Apache Tomcat sample application.

       Output:

          {
            "ApplicationVersion": {
                "ApplicationName": "MyApp",
                "VersionLabel": "v1",
                "Description": "MyAppv1",
                "DateCreated": "2015-02-03T23:01:25.412Z",
                "DateUpdated": "2015-02-03T23:01:25.412Z",
                "SourceBundle": {
                    "S3Bucket": "my-bucket",
                    "S3Key": "sample.war"
                }
            }
          }

OUTPUT
       ApplicationVersion -> (structure)
          The  ApplicationVersionDescription of the application version.

          ApplicationVersionArn -> (string)
              The Amazon Resource Name (ARN) of the application version.

          ApplicationName -> (string)
              The name of the application to  which  the  application  version
              belongs.

          Description -> (string)
              The description of the application version.

          VersionLabel -> (string)
              A unique identifier for the application version.

          SourceBuildInformation -> (structure)
              If  the version's source code was retrieved from AWS CodeCommit,
              the location of the source code for the application version.

              SourceType -> (string)
                 The type of repository.

                 o Git

                 o Zip

              SourceRepository -> (string)
                 Location where the repository is stored.

                 o CodeCommit

                 o S3

              SourceLocation -> (string)
                 The location of the  source  code,  as  a  formatted  string,
                 depending on the value of SourceRepository

                 o For CodeCommit , the format is the repository name and com-
                   mit  ID,  separated  by  a  forward  slash.  For   example,
                   my-git-repo/265cfa0cf6af46153527f55d6503ec030551f57a .

                 o For  S3  , the format is the S3 bucket name and object key,
                   separated   by    a    forward    slash.    For    example,
                   my-s3-bucket/Folders/my-source-file .

          BuildArn -> (string)
              Reference to the artifact from the AWS CodeBuild build.

          SourceBundle -> (structure)
              The  storage location of the application version's source bundle
              in Amazon S3.

              S3Bucket -> (string)
                 The Amazon S3 bucket where the data is located.

              S3Key -> (string)
                 The Amazon S3 key where the data is located.

          DateCreated -> (timestamp)
              The creation date of the application version.

          DateUpdated -> (timestamp)
              The last modified date of the application version.

          Status -> (string)
              The processing status of the application version.  Reflects  the
              state  of  the  application version during its creation. Many of
              the values are only applicable if you  specified  True  for  the
              Process  parameter  of  the CreateApplicationVersion action. The
              following list describes the possible values.

              o Unprocessed  Application version wasn't pre-processed or vali-
                dated.  Elastic  Beanstalk  will  validate configuration files
                during deployment of the application version  to  an  environ-
                ment.

              o Processing   Elastic  Beanstalk  is  currently  processing the
                application version.

              o Building  Application version is currently undergoing  an  AWS
                CodeBuild build.

              o Processed   Elastic  Beanstalk  was successfully pre-processed
                and validated.

              o Failed  Either the AWS CodeBuild build failed or configuration
                files  didn't  pass validation. This application version isn't
                usable.



                                                  CREATE-APPLICATION-VERSION()
