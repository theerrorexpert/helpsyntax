CREATE-CONFIGURATION-TEMPLATE()                CREATE-CONFIGURATION-TEMPLATE()



NAME
       create-configuration-template -

DESCRIPTION
       Creates  an  AWS  Elastic  Beanstalk configuration template, associated
       with a specific Elastic Beanstalk application. You  define  application
       configuration  settings  in  a configuration template. You can then use
       the configuration template to deploy different versions of the applica-
       tion with the same configuration settings.

       Templates  aren't  associated with any environment. The EnvironmentName
       response element is always null .

       Related Topics

       o DescribeConfigurationOptions

       o DescribeConfigurationSettings

       o ListAvailableSolutionStacks

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-configuration-template
          --application-name <value>
          --template-name <value>
          [--solution-stack-name <value>]
          [--platform-arn <value>]
          [--source-configuration <value>]
          [--environment-id <value>]
          [--description <value>]
          [--option-settings <value>]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --application-name (string)
          The name of the Elastic Beanstalk application to associate with this
          configuration template.

       --template-name (string)
          The name of the configuration template.

          Constraint: This name must be unique per application.

       --solution-stack-name (string)
          The  name  of an Elastic Beanstalk solution stack (platform version)
          that this  configuration  uses.  For  example,  64bit  Amazon  Linux
          2013.09  running  Tomcat  7  Java 7 . A solution stack specifies the
          operating system, runtime, and application server for  a  configura-
          tion  template.  It also determines the set of configuration options
          as well as the possible and default values.  For  more  information,
          see Supported Platforms in the AWS Elastic Beanstalk Developer Guide
          .

          You must specify SolutionStackName if you don't specify  PlatformArn
          , EnvironmentId , or SourceConfiguration .

          Use            the           `           ListAvailableSolutionStacks
          https://docs.aws.amazon.com/elasticbeanstalk/latest/api/API_ListAvailableSolutionStacks.html`__
          API to obtain a list of available solution stacks.

       --platform-arn (string)
          The  Amazon  Resource  Name  (ARN)  of the custom platform. For more
          information, see Custom  Platforms  in  the  AWS  Elastic  Beanstalk
          Developer Guide .

          NOTE:
              If  you  specify PlatformArn , then don't specify SolutionStack-
              Name .

       --source-configuration (structure)
          An Elastic Beanstalk configuration template to base this one on.  If
          specified,  Elastic Beanstalk uses the configuration values from the
          specified configuration template to create a new configuration.

          Values specified in OptionSettings override any values obtained from
          the SourceConfiguration .

          You  must  specify SourceConfiguration if you don't specify Platfor-
          mArn , EnvironmentId , or SolutionStackName .

          Constraint: If both solution stack name and source configuration are
          specified,  the  solution stack of the source configuration template
          must match the specified solution stack name.

          ApplicationName -> (string)
              The name of the application associated with the configuration.

          TemplateName -> (string)
              The name of the configuration template.

       Shorthand Syntax:

          ApplicationName=string,TemplateName=string

       JSON Syntax:

          {
            "ApplicationName": "string",
            "TemplateName": "string"
          }

       --environment-id (string)
          The ID of an environment whose settings you want to  use  to  create
          the  configuration  template.  You must specify EnvironmentId if you
          don't specify PlatformArn , SolutionStackName , or  SourceConfigura-
          tion .

       --description (string)
          An optional description for this configuration.

       --option-settings (list)
          Option  values  for the Elastic Beanstalk configuration, such as the
          instance type.  If  specified,  these  values  override  the  values
          obtained  from  the  solution stack or the source configuration tem-
          plate. For  a  complete  list  of  Elastic  Beanstalk  configuration
          options,  see  Option  Values in the AWS Elastic Beanstalk Developer
          Guide .

          (structure)
              A specification identifying an individual  configuration  option
              along  with its current value. For a list of possible namespaces
              and  option  values,  see  Option  Values  in  the  AWS  Elastic
              Beanstalk Developer Guide .

              ResourceName -> (string)
                 A  unique  resource name for the option setting. Use it for a
                 timebased scaling configuration option.

              Namespace -> (string)
                 A unique namespace that identifies  the  option's  associated
                 AWS resource.

              OptionName -> (string)
                 The name of the configuration option.

              Value -> (string)
                 The current value for the configuration option.

       Shorthand Syntax:

          ResourceName=string,Namespace=string,OptionName=string,Value=string ...

       JSON Syntax:

          [
            {
              "ResourceName": "string",
              "Namespace": "string",
              "OptionName": "string",
              "Value": "string"
            }
            ...
          ]

       --tags (list)
          Specifies the tags applied to the configuration template.

          (structure)
              Describes a tag applied to a resource in an environment.

              Key -> (string)
                 The key of the tag.

              Value -> (string)
                 The value of the tag.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a configuration template

       The  following command creates a configuration template named my-app-v1
       from the settings applied to an environment with the id e-rpqsewtp2j:

          aws elasticbeanstalk create-configuration-template --application-name my-app --template-name my-app-v1 --environment-id e-rpqsewtp2j

       Output:

          {
              "ApplicationName": "my-app",
              "TemplateName": "my-app-v1",
              "DateCreated": "2015-08-12T18:40:39Z",
              "DateUpdated": "2015-08-12T18:40:39Z",
              "SolutionStackName": "64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 8 Java 8"
          }

OUTPUT
       SolutionStackName -> (string)
          The name of the solution stack this configuration set uses.

       PlatformArn -> (string)
          The ARN of the platform version.

       ApplicationName -> (string)
          The name of the application associated with this configuration  set.

       TemplateName -> (string)
          If  not  null , the name of the configuration template for this con-
          figuration set.

       Description -> (string)
          Describes this configuration set.

       EnvironmentName -> (string)
          If not null , the name of the  environment  for  this  configuration
          set.

       DeploymentStatus -> (string)
          If  this  configuration  set  is associated with an environment, the
          DeploymentStatus parameter indicates the deployment status  of  this
          configuration set:

          o null  :  This configuration is not associated with a running envi-
            ronment.

          o pending : This is a draft configuration that is  not  deployed  to
            the associated environment but is in the process of deploying.

          o deployed : This is the configuration that is currently deployed to
            the associated running environment.

          o failed : This is a draft configuration that failed to successfully
            deploy.

       DateCreated -> (timestamp)
          The date (in UTC time) when this configuration set was created.

       DateUpdated -> (timestamp)
          The  date  (in  UTC time) when this configuration set was last modi-
          fied.

       OptionSettings -> (list)
          A list of the configuration options and their values in this config-
          uration set.

          (structure)
              A  specification  identifying an individual configuration option
              along with its current value. For a list of possible  namespaces
              and  option  values,  see  Option  Values  in  the  AWS  Elastic
              Beanstalk Developer Guide .

              ResourceName -> (string)
                 A unique resource name for the option setting. Use it  for  a
                 timebased scaling configuration option.

              Namespace -> (string)
                 A  unique  namespace  that identifies the option's associated
                 AWS resource.

              OptionName -> (string)
                 The name of the configuration option.

              Value -> (string)
                 The current value for the configuration option.



                                               CREATE-CONFIGURATION-TEMPLATE()
