DESCRIBE-PROJECT()                                          DESCRIBE-PROJECT()



NAME
       describe-project -

DESCRIPTION
       Returns an object describing a project.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            describe-project
          --project-name <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --project-name (string)
          The name of the project to be described.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To describe an AWS IoT 1-Click project

       The  following describe-project example describes the specified AWS IoT
       1-Click project.

          aws iot1click-projects describe-project \
              --project-name AnytownDumpsters

       Output:

          {
              "project": {
                  "arn": "arn:aws:iot1click:us-west-2:012345678901:projects/AnytownDumpsters",
                  "projectName": "AnytownDumpsters",
                  "description": "All dumpsters in the Anytown region.",
                  "createdDate": 1563483100,
                  "updatedDate": 1563483100,
                  "placementTemplate": {
                      "defaultAttributes": {
                          "City": "Anytown"
                      },
                      "deviceTemplates": {
                          "empty-dumpster-request": {
                              "deviceType": "button",
                              "callbackOverrides": {}
                          }
                      }
                  },
                  "tags": {}
              }
          }

       For more information, see Using AWS IoT 1-Click with the AWS CLI in the
       AWS IoT 1-Click Developer Guide.

OUTPUT
       project -> (structure)
          An object describing the project.

          arn -> (string)
              The ARN of the project.

          projectName -> (string)
              The name of the project for which to obtain information from.

          description -> (string)
              The description of the project.

          createdDate -> (timestamp)
              The  date when the project was originally created, in UNIX epoch
              time format.

          updatedDate -> (timestamp)
              The date when the project was last updated, in UNIX  epoch  time
              format.  If  the  project  was not updated, then createdDate and
              updatedDate are the same.

          placementTemplate -> (structure)
              An object describing the project's placement specifications.

              defaultAttributes -> (map)
                 The default attributes (key/value pairs) to be applied to all
                 placements using this template.

                 key -> (string)

                 value -> (string)

              deviceTemplates -> (map)
                 An  object  specifying the  DeviceTemplate for all placements
                 using this ( PlacementTemplate ) template.

                 key -> (string)

                 value -> (structure)
                     An object representing a device for a placement  template
                     (see  PlacementTemplate ).

                     deviceType -> (string)
                        The device type, which currently must be "button" .

                     callbackOverrides -> (map)
                        An  optional  Lambda function to invoke instead of the
                        default Lambda function provided by the placement tem-
                        plate.

                        key -> (string)

                        value -> (string)

          tags -> (map)
              The tags (metadata key/value pairs) associated with the project.

              key -> (string)

              value -> (string)



                                                            DESCRIBE-PROJECT()
