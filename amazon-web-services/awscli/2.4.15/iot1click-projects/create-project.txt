CREATE-PROJECT()                                              CREATE-PROJECT()



NAME
       create-project -

DESCRIPTION
       Creates  an empty project with a placement template. A project contains
       zero or more placements that adhere to the placement  template  defined
       in the project.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-project
          --project-name <value>
          [--description <value>]
          [--placement-template <value>]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --project-name (string)
          The name of the project to create.

       --description (string)
          An optional description for the project.

       --placement-template (structure)
          The  schema  defining  the placement to be created. A placement tem-
          plate defines placement default attributes and device templates. You
          cannot  add  or  remove  device templates after the project has been
          created. However, you can update callbackOverrides  for  the  device
          templates using the UpdateProject API.

          defaultAttributes -> (map)
              The  default  attributes  (key/value pairs) to be applied to all
              placements using this template.

              key -> (string)

              value -> (string)

          deviceTemplates -> (map)
              An object specifying  the   DeviceTemplate  for  all  placements
              using this ( PlacementTemplate ) template.

              key -> (string)

              value -> (structure)
                 An object representing a device for a placement template (see
                 PlacementTemplate ).

                 deviceType -> (string)
                     The device type, which currently must be "button" .

                 callbackOverrides -> (map)
                     An optional Lambda function  to  invoke  instead  of  the
                     default  Lambda  function  provided by the placement tem-
                     plate.

                     key -> (string)

                     value -> (string)

       Shorthand Syntax:

          defaultAttributes={KeyName1=string,KeyName2=string},deviceTemplates={KeyName1={deviceType=string,callbackOverrides={KeyName1=string,KeyName2=string}},KeyName2={deviceType=string,callbackOverrides={KeyName1=string,KeyName2=string}}}

       JSON Syntax:

          {
            "defaultAttributes": {"string": "string"
              ...},
            "deviceTemplates": {"string": {
                  "deviceType": "string",
                  "callbackOverrides": {"string": "string"
                    ...}
                }
              ...}
          }

       --tags (map)
          Optional tags (metadata key/value pairs) to be associated  with  the
          project. For example, { {"key1": "value1", "key2": "value2"} } . For
          more information, see AWS Tagging Strategies .

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create an AWS IoT 1-Click project for zero or more placements

       The following create-project example creates an AWS IoT 1-Click project
       for a placement.

          aws iot1click-projects create-project
                 --cli-input-json file://create-project.json

       Contents of create-project.json:

          {
               "projectName": "AnytownDumpsters",
               "description": "All dumpsters in the Anytown region.",
               "placementTemplate": {
                   "defaultAttributes": {
                       "City" : "Anytown"
                   },
                   "deviceTemplates": {
                       "empty-dumpster-request" : {
                           "deviceType": "button"
                       }
                   }
               }
          }

       This command produces no output.

       For more information, see Using AWS IoT 1-Click with the AWS CLI in the
       AWS IoT 1-Click Developer Guide.

OUTPUT
       None



                                                              CREATE-PROJECT()
