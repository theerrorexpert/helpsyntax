UPDATE-INTEGRATION-RESPONSE()                    UPDATE-INTEGRATION-RESPONSE()



NAME
       update-integration-response -

DESCRIPTION
       Updates an IntegrationResponses.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            update-integration-response
          --api-id <value>
          [--content-handling-strategy <value>]
          --integration-id <value>
          --integration-response-id <value>
          [--integration-response-key <value>]
          [--response-parameters <value>]
          [--response-templates <value>]
          [--template-selection-expression <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --api-id (string)
          The API identifier.

       --content-handling-strategy (string)
          Supported  only for WebSocket APIs. Specifies how to handle response
          payload  content  type  conversions.  Supported  values   are   CON-
          VERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:

          CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
          string to the corresponding binary blob.

          CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
          Base64-encoded string.

          If this property is not defined, the response payload will be passed
          through from the integration  response  to  the  route  response  or
          method response without modification.

          Possible values:

          o CONVERT_TO_BINARY

          o CONVERT_TO_TEXT

       --integration-id (string)
          The integration ID.

       --integration-response-id (string)
          The integration response ID.

       --integration-response-key (string)
          The integration response key.

       --response-parameters (map)
          A  key-value  map  specifying response parameters that are passed to
          the method response from the backend. The key is a  method  response
          header  parameter  name  and  the  mapped  value  is  an integration
          response header value, a static value enclosed within a pair of sin-
          gle quotes, or a JSON expression from the integration response body.
          The    mapping     key     must     match     the     pattern     of
          method.response.header.{name},  where  name  is  a  valid and unique
          header name. The mapped non-static value must match the  pattern  of
          integration.response.header.{name}or                        integra-
          tion.response.body.{JSON-expression}, where  {name}is  a  valid  and
          unique  response  header  name  and {JSON-expression}is a valid JSON
          expression without the $ prefix.

          key -> (string)

          value -> (string)
              A string with a length between [1-512].

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --response-templates (map)
          The collection of response templates for the integration response as
          a  string-to-string  map  of key-value pairs. Response templates are
          represented as a key/value map, with a content-type as the key and a
          template as the value.

          key -> (string)

          value -> (string)
              A string with a length between [0-32768].

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --template-selection-expression (string)
          The template selection expression for the integration response. Sup-
          ported only for WebSocket APIs.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       ContentHandlingStrategy -> (string)
          Supported only for WebSocket APIs. Specifies how to handle  response
          payload   content   type  conversions.  Supported  values  are  CON-
          VERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:

          CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
          string to the corresponding binary blob.

          CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
          Base64-encoded string.

          If this property is not defined, the response payload will be passed
          through  from  the  integration  response  to  the route response or
          method response without modification.

       IntegrationResponseId -> (string)
          The integration response ID.

       IntegrationResponseKey -> (string)
          The integration response key.

       ResponseParameters -> (map)
          A key-value map specifying response parameters that  are  passed  to
          the  method  response from the backend. The key is a method response
          header parameter  name  and  the  mapped  value  is  an  integration
          response header value, a static value enclosed within a pair of sin-
          gle quotes, or a JSON expression from the integration response body.
          The     mapping     key     must     match     the     pattern    of
          method.response.header.{name}, where name  is  a  valid  and  unique
          header  name.  The mapped non-static value must match the pattern of
          integration.response.header.{name}            or            integra-
          tion.response.body.{JSON-expression},  where  name  is  a  valid and
          unique response header name and  JSON-expression  is  a  valid  JSON
          expression without the $ prefix.

          key -> (string)

          value -> (string)
              A string with a length between [1-512].

       ResponseTemplates -> (map)
          The collection of response templates for the integration response as
          a string-to-string map of key-value pairs.  Response  templates  are
          represented as a key/value map, with a content-type as the key and a
          template as the value.

          key -> (string)

          value -> (string)
              A string with a length between [0-32768].

       TemplateSelectionExpression -> (string)
          The template selection expressions for the integration response.



                                                 UPDATE-INTEGRATION-RESPONSE()
