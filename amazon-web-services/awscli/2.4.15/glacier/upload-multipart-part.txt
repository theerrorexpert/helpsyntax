UPLOAD-MULTIPART-PART()                                UPLOAD-MULTIPART-PART()



NAME
       upload-multipart-part -

DESCRIPTION
       This  operation  uploads  a  part of an archive. You can upload archive
       parts in any order. You can also  upload  them  in  parallel.  You  can
       upload up to 10,000 parts for a multipart upload.

       Amazon Glacier rejects your upload part request if any of the following
       conditions is true:

       o SHA256 tree hash does not match To ensure that part data is not  cor-
         rupted  in  transmission,  you compute a SHA256 tree hash of the part
         and include it in your request. Upon receiving the part data,  Amazon
         S3  Glacier  also  computes  a SHA256 tree hash. If these hash values
         don't match, the operation fails. For information about  computing  a
         SHA256 tree hash, see Computing Checksums .

       o Part  size  does not match The size of each part except the last must
         match the size specified in  the  corresponding   InitiateMultipartU-
         pload request. The size of the last part must be the same size as, or
         smaller than, the specified size.

       NOTE:
          If you upload a part whose size is smaller than the  part  size  you
          specified in your initiate multipart upload request and that part is
          not the last part, then the upload part request will  succeed.  How-
          ever, the subsequent Complete Multipart Upload request will fail.

       o Range  does  not  align  The byte range value in the request does not
         align with the part size  specified  in  the  corresponding  initiate
         request.  For example, if you specify a part size of 4194304 bytes (4
         MB), then 0 to 4194303 bytes (4 MB - 1) and 4194304 (4 MB) to 8388607
         (8  MB  - 1) are valid part ranges. However, if you set a range value
         of 2 MB to 6 MB, the range does not align with the part size and  the
         upload will fail.

       This  operation  is  idempotent.  If  you upload the same part multiple
       times, the data included in the most recent request overwrites the pre-
       viously uploaded data.

       An AWS account has full permission to perform all operations (actions).
       However, AWS Identity and Access Management (IAM) users don't have  any
       permissions by default. You must grant them explicit permission to per-
       form specific actions. For more information, see Access  Control  Using
       AWS Identity and Access Management (IAM) .

       For conceptual information and underlying REST API, see Uploading Large
       Archives in Parts (Multipart Upload) and  Upload  Part  in  the  Amazon
       Glacier Developer Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            upload-multipart-part
          --account-id <value>
          --vault-name <value>
          --upload-id <value>
          [--checksum <value>]
          [--range <value>]
          [--body <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --account-id (string)
          The  AccountId  value is the AWS account ID of the account that owns
          the vault. You can either specify an AWS account ID or optionally  a
          single  '-  ' (hyphen), in which case Amazon S3 Glacier uses the AWS
          account ID associated with the credentials used to sign the request.
          If  you  use  an account ID, do not include any hyphens ('-') in the
          ID.

       --vault-name (string)
          The name of the vault.

       --upload-id (string)
          The upload ID of the multipart upload.

       --checksum (string)
          The SHA256 tree hash of the data being uploaded.

       --range (string)
          Identifies the range of bytes in the assembled archive that will  be
          uploaded  in  this  part. Amazon S3 Glacier uses this information to
          assemble the archive in the proper  sequence.  The  format  of  this
          header  follows  RFC  2616. An example header is Content-Range:bytes
          0-4194303/
          *
          .

       --body (blob)
          The data to upload.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       The following command uploads the first 1 MiB (1024 x 1024 bytes)  part
       of an archive:

          aws glacier upload-multipart-part --body part1 --range 'bytes 0-1048575/*' --account-id - --vault-name my-vault --upload-id 19gaRezEXAMPLES6Ry5YYdqthHOC_kGRCT03L9yetr220UmPtBYKk-OssZtLqyFu7sY1_lR7vgFuJV6NtcV5zpsJ

       Amazon  Glacier  requires an account ID argument when performing opera-
       tions, but you can use a hyphen to specify the in-use account.

       The body parameter takes a path to a part file on the local filesystem.
       The  range  parameter  takes an HTTP content range indicating the bytes
       that the part occupies in the  completed  archive.  The  upload  ID  is
       returned  by  the aws glacier initiate-multipart-upload command and can
       also be obtained by using aws glacier list-multipart-uploads.

       For more information on multipart uploads to Amazon Glacier  using  the
       AWS CLI, see Using Amazon Glacier in the AWS CLI User Guide.

OUTPUT
       checksum -> (string)
          The  SHA256  tree  hash  that  Amazon  S3  Glacier  computed for the
          uploaded part.



                                                       UPLOAD-MULTIPART-PART()
