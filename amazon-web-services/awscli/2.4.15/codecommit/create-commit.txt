CREATE-COMMIT()                                                CREATE-COMMIT()



NAME
       create-commit -

DESCRIPTION
       Creates a commit for a repository on the tip of a specified branch.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-commit
          --repository-name <value>
          --branch-name <value>
          [--parent-commit-id <value>]
          [--author-name <value>]
          [--email <value>]
          [--commit-message <value>]
          [--keep-empty-folders | --no-keep-empty-folders]
          [--put-files <value>]
          [--delete-files <value>]
          [--set-file-modes <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --repository-name (string)
          The name of the repository where you create the commit.

       --branch-name (string)
          The name of the branch where you create the commit.

       --parent-commit-id (string)
          The  ID  of  the commit that is the parent of the commit you create.
          Not required if this is an empty repository.

       --author-name (string)
          The name of the author who created the commit. This  information  is
          used as both the author and committer for the commit.

       --email (string)
          The email address of the person who created the commit.

       --commit-message (string)
          The  commit  message  you want to include in the commit. Commit mes-
          sages are limited to 256 KB. If no message is specified,  a  default
          message is used.

       --keep-empty-folders | --no-keep-empty-folders (boolean)
          If the commit contains deletions, whether to keep a folder or folder
          structure if the changes leave the folders empty. If true, a  ..git-
          keep file is created for empty folders. The default is false.

       --put-files (list)
          The files to add or update in this commit.

          (structure)
              Information about a file added or updated as part of a commit.

              filePath -> (string)
                 The  full  path  to the file in the repository, including the
                 name of the file.

              fileMode -> (string)
                 The extrapolated file mode permissions for  the  file.  Valid
                 values include EXECUTABLE and NORMAL.

              fileContent -> (blob)
                 The content of the file, if a source file is not specified.

              sourceFile -> (structure)
                 The  name and full path of the file that contains the changes
                 you want to make as part of the commit, if you are  not  pro-
                 viding the file content directly.

                 filePath -> (string)
                     The  full  path  to  the  file, including the name of the
                     file.

                 isMove -> (boolean)
                     Whether to remove the source file from the parent commit.

       Shorthand Syntax:

          filePath=string,fileMode=string,fileContent=blob,sourceFile={filePath=string,isMove=boolean} ...

       JSON Syntax:

          [
            {
              "filePath": "string",
              "fileMode": "EXECUTABLE"|"NORMAL"|"SYMLINK",
              "fileContent": blob,
              "sourceFile": {
                "filePath": "string",
                "isMove": true|false
              }
            }
            ...
          ]

       --delete-files (list)
          The  files to delete in this commit. These files still exist in ear-
          lier commits.

          (structure)
              A file that is deleted as part of a commit.

              filePath -> (string)
                 The full path of the file to be deleted, including  the  name
                 of the file.

       Shorthand Syntax:

          filePath=string ...

       JSON Syntax:

          [
            {
              "filePath": "string"
            }
            ...
          ]

       --set-file-modes (list)
          The file modes to update for files in this commit.

          (structure)
              Information about the file mode changes.

              filePath -> (string)
                 The full path to the file, including the name of the file.

              fileMode -> (string)
                 The file mode for the file.

       Shorthand Syntax:

          filePath=string,fileMode=string ...

       JSON Syntax:

          [
            {
              "filePath": "string",
              "fileMode": "EXECUTABLE"|"NORMAL"|"SYMLINK"
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a commit

       The  following create-commit example demonstrates how to create an ini-
       tial commit for a repository that adds a readme.md file to a repository
       named MyDemoRepo in the main branch.

          aws codecommit create-commit \
              --repository-name MyDemoRepo \
              --branch-name main \
              --put-files "filePath=readme.md,fileContent='Welcome to our team repository.'"

       Output:

          {
              "filesAdded": [
                  {
                      "blobId": "5e1c309d-EXAMPLE",
                      "absolutePath": "readme.md",
                      "fileMode": "NORMAL"
                  }
              ],
              "commitId": "4df8b524-EXAMPLE",
              "treeId": "55b57003-EXAMPLE",
              "filesDeleted": [],
              "filesUpdated": []
          }

       For  more information, see Create a Commit in AWS CodeCommit in the AWS
       CodeCommit User Guide.

OUTPUT
       commitId -> (string)
          The full commit ID of the commit that contains your  committed  file
          changes.

       treeId -> (string)
          The  full  SHA-1 pointer of the tree information for the commit that
          contains the commited file changes.

       filesAdded -> (list)
          The files added as part of the committed file changes.

          (structure)
              A file to be added, updated, or deleted as part of a commit.

              absolutePath -> (string)
                 The full path to the file to be added or  updated,  including
                 the name of the file.

              blobId -> (string)
                 The blob ID that contains the file information.

              fileMode -> (string)
                 The  extrapolated  file  mode permissions for the file. Valid
                 values include EXECUTABLE and NORMAL.

       filesUpdated -> (list)
          The files updated as part of the commited file changes.

          (structure)
              A file to be added, updated, or deleted as part of a commit.

              absolutePath -> (string)
                 The full path to the file to be added or  updated,  including
                 the name of the file.

              blobId -> (string)
                 The blob ID that contains the file information.

              fileMode -> (string)
                 The  extrapolated  file  mode permissions for the file. Valid
                 values include EXECUTABLE and NORMAL.

       filesDeleted -> (list)
          The files deleted as part of the committed file changes.

          (structure)
              A file to be added, updated, or deleted as part of a commit.

              absolutePath -> (string)
                 The full path to the file to be added or  updated,  including
                 the name of the file.

              blobId -> (string)
                 The blob ID that contains the file information.

              fileMode -> (string)
                 The  extrapolated  file  mode permissions for the file. Valid
                 values include EXECUTABLE and NORMAL.



                                                               CREATE-COMMIT()
