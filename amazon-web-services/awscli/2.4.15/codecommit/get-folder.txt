GET-FOLDER()                                                      GET-FOLDER()



NAME
       get-folder -

DESCRIPTION
       Returns the contents of a specified folder in a repository.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-folder
          --repository-name <value>
          [--commit-specifier <value>]
          --folder-path <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --repository-name (string)
          The name of the repository.

       --commit-specifier (string)
          A  fully qualified reference used to identify a commit that contains
          the version of the folder's content to  return.  A  fully  qualified
          reference can be a commit ID, branch name, tag, or reference such as
          HEAD. If no specifier is provided, the folder content is returned as
          it exists in the HEAD commit.

       --folder-path (string)
          The  fully qualified path to the folder whose contents are returned,
          including the folder name. For example, /examples is a  fully-quali-
          fied  path  to  a  folder named examples that was created off of the
          root directory (/) of a repository.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To get the contents of a folder in an AWS CodeCommit repository

       The following get-folder example demonstrates how to get  the  contents
       of a top-level folder from a repository named MyDemoRepo.

          aws codecommit get-folder --repository-name MyDemoRepo --folder-path ""

       Output:

          {
              "commitId":"c5709475EXAMPLE",
              "files":[
                  {
                      "absolutePath":".gitignore",
                      "blobId":"74094e8bEXAMPLE",
                      "fileMode":"NORMAL",
                      "relativePath":".gitignore"
                  },
                  {
                      "absolutePath":"Gemfile",
                      "blobId":"9ceb72f6EXAMPLE",
                      "fileMode":"NORMAL",
                      "relativePath":"Gemfile"
                  },
                  {
                      "absolutePath":"Gemfile.lock",
                      "blobId":"795c4a2aEXAMPLE",
                      "fileMode":"NORMAL",
                      "relativePath":"Gemfile.lock"
                  },
                  {
                      "absolutePath":"LICENSE.txt",
                      "blobId":"0c7932c8EXAMPLE",
                      "fileMode":"NORMAL",
                      "relativePath":"LICENSE.txt"
                  },
                  {
                      "absolutePath":"README.md",
                      "blobId":"559b44feEXAMPLE",
                      "fileMode":"NORMAL",
                      "relativePath":"README.md"
                  }
              ],
              "folderPath":"",
              "subFolders":[
                  {
                      "absolutePath":"public",
                      "relativePath":"public",
                      "treeId":"d5e92ae3aEXAMPLE"
                  },
                  {
                      "absolutePath":"tmp",
                      "relativePath":"tmp",
                      "treeId":"d564d0bcEXAMPLE"
                  }
              ],
              "subModules":[],
              "symbolicLinks":[],
              "treeId":"7b3c4dadEXAMPLE"
          }

       For more information, see GetFolder in the AWS CodeCommit API Reference
       guide.

OUTPUT
       commitId -> (string)
          The full commit ID used as a reference for the returned  version  of
          the folder content.

       folderPath -> (string)
          The  fully qualified path of the folder whose contents are returned.

       treeId -> (string)
          The full SHA-1 pointer of the tree information for the  commit  that
          contains the folder.

       subFolders -> (list)
          The list of folders that exist under the specified folder, if any.

          (structure)
              Returns information about a folder in a repository.

              treeId -> (string)
                 The full SHA-1 pointer of the tree information for the commit
                 that contains the folder.

              absolutePath -> (string)
                 The fully qualified path of the folder in the repository.

              relativePath -> (string)
                 The relative path of the specified  folder  from  the  folder
                 where the query originated.

       files -> (list)
          The list of files in the specified folder, if any.

          (structure)
              Returns information about a file in a repository.

              blobId -> (string)
                 The blob ID that contains the file information.

              absolutePath -> (string)
                 The fully qualified path to the file in the repository.

              relativePath -> (string)
                 The relative path of the file from the folder where the query
                 originated.

              fileMode -> (string)
                 The extrapolated file mode permissions for  the  file.  Valid
                 values include EXECUTABLE and NORMAL.

       symbolicLinks -> (list)
          The  list of symbolic links to other files and folders in the speci-
          fied folder, if any.

          (structure)
              Returns information  about  a  symbolic  link  in  a  repository
              folder.

              blobId -> (string)
                 The  blob ID that contains the information about the symbolic
                 link.

              absolutePath -> (string)
                 The fully qualified path to the folder that contains the sym-
                 bolic link.

              relativePath -> (string)
                 The  relative path of the symbolic link from the folder where
                 the query originated.

              fileMode -> (string)
                 The file mode permissions of the blob that  cotains  informa-
                 tion about the symbolic link.

       subModules -> (list)
          The list of submodules in the specified folder, if any.

          (structure)
              Returns  information about a submodule reference in a repository
              folder.

              commitId -> (string)
                 The commit ID that contains the reference to the submodule.

              absolutePath -> (string)
                 The fully qualified path to the folder that contains the ref-
                 erence to the submodule.

              relativePath -> (string)
                 The  relative path of the submodule from the folder where the
                 query originated.



                                                                  GET-FOLDER()
