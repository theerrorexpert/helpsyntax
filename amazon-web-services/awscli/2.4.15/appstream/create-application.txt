CREATE-APPLICATION()                                      CREATE-APPLICATION()



NAME
       create-application -

DESCRIPTION
       Creates an application.

       Applications  are  an  Amazon  AppStream  2.0  resource that stores the
       details about how to launch applications  on  Elastic  fleet  streaming
       instances.  An  application  consists  of the launch details, icon, and
       display name. Applications are associated with an app block  that  con-
       tains  the  application  binaries  and  other  files.  The applications
       assigned to an Elastic fleet are the applications users can launch.

       This is only supported for Elastic fleets.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-application
          --name <value>
          [--display-name <value>]
          [--description <value>]
          --icon-s3-location <value>
          --launch-path <value>
          [--working-directory <value>]
          [--launch-parameters <value>]
          --platforms <value>
          --instance-families <value>
          --app-block-arn <value>
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --name (string)
          The name of the application. This name is visible to users when dis-
          play name is not specified.

       --display-name (string)
          The  display  name of the application. This name is visible to users
          in the application catalog.

       --description (string)
          The description of the application.

       --icon-s3-location (structure)
          The location in S3 of the application icon.

          S3Bucket -> (string)
              The S3 bucket of the S3 object.

          S3Key -> (string)
              The S3 key of the S3 object.

       Shorthand Syntax:

          S3Bucket=string,S3Key=string

       JSON Syntax:

          {
            "S3Bucket": "string",
            "S3Key": "string"
          }

       --launch-path (string)
          The launch path of the application.

       --working-directory (string)
          The working directory of the application.

       --launch-parameters (string)
          The launch parameters of the application.

       --platforms (list)
          The platforms the application supports. WINDOWS_SERVER_2019 and AMA-
          ZON_LINUX2 are supported for Elastic fleets.

          (string)

       Syntax:

          "string" "string" ...

          Where valid values are:
            WINDOWS
            WINDOWS_SERVER_2016
            WINDOWS_SERVER_2019
            AMAZON_LINUX2

       --instance-families (list)
          The  instance  families  the  application supports. Valid values are
          GENERAL_PURPOSE and GRAPHICS_G4.

          (string)

       Syntax:

          "string" "string" ...

       --app-block-arn (string)
          The app block ARN to which the application should be associated

       --tags (map)
          The tags assigned to the application.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       Application -> (structure)
          Describes an application in the application catalog.

          Name -> (string)
              The name of the application.

          DisplayName -> (string)
              The application name to display.

          IconURL -> (string)
              The URL for the application icon. This URL  might  be  time-lim-
              ited.

          LaunchPath -> (string)
              The path to the application executable in the instance.

          LaunchParameters -> (string)
              The arguments that are passed to the application at launch.

          Enabled -> (boolean)
              If  there  is  a  problem, the application can be disabled after
              image creation.

          Metadata -> (map)
              Additional attributes that describe the application.

              key -> (string)

              value -> (string)

          WorkingDirectory -> (string)
              The working directory for the application.

          Description -> (string)
              The description of the application.

          Arn -> (string)
              The ARN of the application.

          AppBlockArn -> (string)
              The app block ARN of the application.

          IconS3Location -> (structure)
              The S3 location of the application icon.

              S3Bucket -> (string)
                 The S3 bucket of the S3 object.

              S3Key -> (string)
                 The S3 key of the S3 object.

          Platforms -> (list)
              The platforms on which the application can run.

              (string)

          InstanceFamilies -> (list)
              The instance families for the application.

              (string)

          CreatedTime -> (timestamp)
              The time at which the application was  created  within  the  app
              block.



                                                          CREATE-APPLICATION()
