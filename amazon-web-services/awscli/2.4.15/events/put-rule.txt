PUT-RULE()                                                          PUT-RULE()



NAME
       put-rule -

DESCRIPTION
       Creates or updates the specified rule. Rules are enabled by default, or
       based on value of the state. You can disable a rule using DisableRule .

       A single rule watches for events from a single event bus. Events gener-
       ated by Amazon Web Services services go to your account's default event
       bus.  Events  generated  by SaaS partner services or applications go to
       the matching partner event bus. If you have custom applications or ser-
       vices,  you  can  specify whether their events go to your default event
       bus or a custom event bus that you have created. For more  information,
       see CreateEventBus .

       If  you  are  updating an existing rule, the rule is replaced with what
       you specify in this PutRule command. If you omit arguments in PutRule ,
       the  old  values  for  those  arguments are not kept. Instead, they are
       replaced with null values.

       When you create or update a rule, incoming events might not immediately
       start  matching  to  new or updated rules. Allow a short period of time
       for changes to take effect.

       A rule must contain at least  an  EventPattern  or  ScheduleExpression.
       Rules  with  EventPatterns  are  triggered  when  a  matching  event is
       observed. Rules with  ScheduleExpressions  self-trigger  based  on  the
       given  schedule. A rule can have both an EventPattern and a ScheduleEx-
       pression, in which case the rule triggers on matching events as well as
       on a schedule.

       When you initially create a rule, you can optionally assign one or more
       tags to the rule. Tags  can  help  you  organize  and  categorize  your
       resources. You can also use them to scope user permissions, by granting
       a user permission to access or change only rules with certain tag  val-
       ues.  To  use the PutRule operation and assign tags, you must have both
       the events:PutRule and events:TagResource permissions.

       If you are updating an existing rule,  any  tags  you  specify  in  the
       PutRule  operation are ignored. To update the tags of an existing rule,
       use TagResource and UntagResource .

       Most services in Amazon Web Services treat : or / as the same character
       in  Amazon  Resource  Names  (ARNs). However, EventBridge uses an exact
       match in event patterns and rules. Be sure to use the correct ARN char-
       acters  when  creating event patterns so that they match the ARN syntax
       in the event you want to match.

       In EventBridge, it is possible to create rules that  lead  to  infinite
       loops,  where  a  rule  is  fired repeatedly. For example, a rule might
       detect that ACLs have changed on an S3 bucket, and trigger software  to
       change them to the desired state. If the rule is not written carefully,
       the subsequent change to the ACLs fires the  rule  again,  creating  an
       infinite loop.

       To  prevent  this, write the rules so that the triggered actions do not
       re-fire the same rule. For example, your rule could fire only  if  ACLs
       are found to be in a bad state, instead of after any change.

       An  infinite  loop  can  quickly cause higher than expected charges. We
       recommend that you use budgeting, which alerts you when charges  exceed
       your  specified  limit.  For  more information, see Managing Your Costs
       with Budgets .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            put-rule
          --name <value>
          [--schedule-expression <value>]
          [--event-pattern <value>]
          [--state <value>]
          [--description <value>]
          [--role-arn <value>]
          [--tags <value>]
          [--event-bus-name <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --name (string)
          The name of the rule that you are creating or updating.

       --schedule-expression (string)
          The scheduling expression. For example, "cron(0 20 * * ?
          *
          )" or "rate(5 minutes)".

       --event-pattern (string)
          The event pattern. For more information, see Events and  Event  Pat-
          terns in the Amazon EventBridge User Guide .

       --state (string)
          Indicates whether the rule is enabled or disabled.

          Possible values:

          o ENABLED

          o DISABLED

       --description (string)
          A description of the rule.

       --role-arn (string)
          The  Amazon  Resource Name (ARN) of the IAM role associated with the
          rule.

          If you're setting an event bus in another account as the target  and
          that account granted permission to your account through an organiza-
          tion instead of directly by the  account  ID,  you  must  specify  a
          RoleArn  with proper permissions in the Target structure, instead of
          here in this parameter.

       --tags (list)
          The list of key-value pairs to associate with the rule.

          (structure)
              A  key-value  pair  associated  with  an  Amazon  Web   Services
              resource. In EventBridge, rules and event buses support tagging.

              Key -> (string)
                 A string you can use to assign a value.  The  combination  of
                 tag keys and values can help you organize and categorize your
                 resources.

              Value -> (string)
                 The value for the specified tag key.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --event-bus-name (string)
          The name or ARN of the event bus to associate with this rule. If you
          omit this, the default event bus is used.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create CloudWatch Events rules

       This  example  creates  a rule that triggers every day at 9:00am (UTC).
       If you use put-targets to add a Lambda function as  a  target  of  this
       rule,  you  could  run  the  Lambda function every day at the specified
       time:

          aws events put-rule --name "DailyLambdaFunction" --schedule-expression "cron(0 9 * * ? *)"

       This example creates a rule that triggers when any EC2 instance in  the
       region changes state:

          aws events put-rule --name "EC2InstanceStateChanges" --event-pattern "{\"source\":[\"aws.ec2\"],\"detail-type\":[\"EC2 Instance State-change Notification\"]}"  --role-arn "arn:aws:iam::123456789012:role/MyRoleForThisRule"

       This  example creates a rule that triggers when any EC2 instance in the
       region is stopped or terminated:

          aws events put-rule --name "EC2InstanceStateChangeStopOrTerminate" --event-pattern "{\"source\":[\"aws.ec2\"],\"detail-type\":[\"EC2 Instance State-change Notification\"],\"detail\":{\"state\":[\"stopped\",\"terminated\"]}}" --role-arn "arn:aws:iam::123456789012:role/MyRoleForThisRule"

OUTPUT
       RuleArn -> (string)
          The Amazon Resource Name (ARN) of the rule.



                                                                    PUT-RULE()
