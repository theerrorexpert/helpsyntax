GET-TEMPLATE-SUMMARY()                                  GET-TEMPLATE-SUMMARY()



NAME
       get-template-summary -

DESCRIPTION
       Returns  information about a new or existing template. The GetTemplate-
       Summary action is useful for viewing  parameter  information,  such  as
       default  parameter  values  and  parameter  types, before you create or
       update a stack or stack set.

       You can use the GetTemplateSummary action when you submit  a  template,
       or  you  can  get template information for a stack set, or a running or
       deleted stack.

       For deleted stacks, GetTemplateSummary returns the template information
       for  up  to  90  days after the stack has been deleted. If the template
       does not exist, a ValidationError is returned.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-template-summary
          [--template-body <value>]
          [--template-url <value>]
          [--stack-name <value>]
          [--stack-set-name <value>]
          [--call-as <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --template-body (string)
          Structure containing the template body with a minimum  length  of  1
          byte  and  a  maximum  length  of 51,200 bytes. For more information
          about templates, see Template Anatomy  in  the  CloudFormation  User
          Guide.

          Conditional:  You must specify only one of the following parameters:
          StackName , StackSetName , TemplateBody , or TemplateURL .

       --template-url (string)
          Location of file containing the template body. The URL must point to
          a template (max size: 460,800 bytes) that is located in an Amazon S3
          bucket or a Systems Manager document.  For  more  information  about
          templates, see Template Anatomy in the CloudFormation User Guide.

          Conditional:  You must specify only one of the following parameters:
          StackName , StackSetName , TemplateBody , or TemplateURL .

       --stack-name (string)
          The name or the stack ID that is associated with  the  stack,  which
          are  not always interchangeable. For running stacks, you can specify
          either the stack's name or its unique stack ID. For  deleted  stack,
          you must specify the unique stack ID.

          Conditional:  You must specify only one of the following parameters:
          StackName , StackSetName , TemplateBody , or TemplateURL .

       --stack-set-name (string)
          The name or unique ID of the stack set from which the stack was cre-
          ated.

          Conditional:  You must specify only one of the following parameters:
          StackName , StackSetName , TemplateBody , or TemplateURL .

       --call-as (string)
          [Service-managed permissions] Specifies whether you are acting as an
          account administrator in the organization's management account or as
          a delegated administrator in a member account.

          By default,  SELF  is  specified.  Use  SELF  for  stack  sets  with
          self-managed permissions.

          o If you are signed in to the management account, specify SELF .

          o If you are signed in to a delegated administrator account, specify
            DELEGATED_ADMIN . Your Amazon Web Services account must be  regis-
            tered  as a delegated administrator in the management account. For
            more information, see Register a delegated  administrator  in  the
            CloudFormation User Guide .

          Possible values:

          o SELF

          o DELEGATED_ADMIN

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To display a template summary

       The  following command displays summary information about the resources
       and metadata for the specified template file.

          aws cloudformation get-template-summary \
             --template-body file://template.yaml

       Output:

          {
              "Parameters": [],
              "Description": "A VPC and subnets.",
              "ResourceTypes": [
                  "AWS::EC2::VPC",
                  "AWS::EC2::Subnet",
                  "AWS::EC2::Subnet",
                  "AWS::EC2::RouteTable",
                  "AWS::EC2::VPCEndpoint",
                  "AWS::EC2::SubnetRouteTableAssociation",
                  "AWS::EC2::SubnetRouteTableAssociation",
                  "AWS::EC2::VPCEndpoint"
              ],
              "Version": "2010-09-09"
          }

OUTPUT
       Parameters -> (list)
          A list of parameter declarations that  describe  various  properties
          for each parameter.

          (structure)
              The ParameterDeclaration data type.

              ParameterKey -> (string)
                 The name that is associated with the parameter.

              DefaultValue -> (string)
                 The default value of the parameter.

              ParameterType -> (string)
                 The type of parameter.

              NoEcho -> (boolean)
                 Flag  that  indicates whether the parameter value is shown as
                 plain text in logs and in the Amazon Web Services  Management
                 Console.

              Description -> (string)
                 The description that is associate with the parameter.

              ParameterConstraints -> (structure)
                 The  criteria  that CloudFormation uses to validate parameter
                 values.

                 AllowedValues -> (list)
                     A list of values that are permitted for a parameter.

                     (string)

       Description -> (string)
          The value that is defined in the Description property  of  the  tem-
          plate.

       Capabilities -> (list)
          The  capabilities  found  within the template. If your template con-
          tains IAM resources, you must specify the CAPABILITY_IAM or CAPABIL-
          ITY_NAMED_IAM value for this parameter when you use the  CreateStack
          or  UpdateStack actions with your template; otherwise, those actions
          return an InsufficientCapabilities error.

          For more information, see Acknowledging IAM Resources in CloudForma-
          tion Templates .

          (string)

       CapabilitiesReason -> (string)
          The list of resources that generated the values in the  Capabilities
          response element.

       ResourceTypes -> (list)
          A  list  of  all the template resource types that are defined in the
          template, such as AWS::EC2::Instance , AWS::Dynamo::Table , and Cus-
          tom::MyCustomInstance .

          (string)

       Version -> (string)
          The  Amazon  Web  Services template format version, which identifies
          the capabilities of the template.

       Metadata -> (string)
          The value that is defined for the Metadata property of the template.

       DeclaredTransforms -> (list)
          A list of the transforms that are declared in the template.

          (string)

       ResourceIdentifierSummaries -> (list)
          A  list  of  resource  identifier summaries that describe the target
          resources of an import operation and the properties you can  provide
          during  the  import  to  identify the target resources. For example,
          BucketName is a possible identifier property for an  AWS::S3::Bucket
          resource.

          (structure)
              Describes the target resources of a specific type in your import
              template (for example, all AWS::S3::Bucket  resources)  and  the
              properties  you  can  provide  during  the  import  to  identify
              resources of that type.

              ResourceType -> (string)
                 The template resource type of the target resources,  such  as
                 AWS::S3::Bucket .

              LogicalResourceIds -> (list)
                 The  logical  IDs  of  the  target resources of the specified
                 ResourceType , as defined in the import template.

                 (string)

              ResourceIdentifiers -> (list)
                 The resource properties you can provide during the import  to
                 identify  your target resources. For example, BucketName is a
                 possible identifier property for AWS::S3::Bucket resources.

                 (string)



                                                        GET-TEMPLATE-SUMMARY()
