DESCRIBE-TABLE-DATA-IMPORT-JOB()              DESCRIBE-TABLE-DATA-IMPORT-JOB()



NAME
       describe-table-data-import-job -

DESCRIPTION
       The  DescribeTableDataImportJob  API  allows you to retrieve the status
       and details of a table data import job.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            describe-table-data-import-job
          --workbook-id <value>
          --table-id <value>
          --job-id <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --workbook-id (string)
          The ID of the workbook into which data was imported.

          If a workbook with the specified id could not  be  found,  this  API
          throws ResourceNotFoundException.

       --table-id (string)
          The ID of the table into which data was imported.

          If a table with the specified id could not be found, this API throws
          ResourceNotFoundException.

       --job-id (string)
          The ID of the job that was returned by  the  StartTableDataImportJob
          request.

          If  a  job with the specified id could not be found, this API throws
          ResourceNotFoundException.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       jobStatus -> (string)
          The current status of the import job.

       message -> (string)
          A message providing more details about the  current  status  of  the
          import job.

       jobMetadata -> (structure)
          The metadata about the job that was submitted for import.

          submitter -> (structure)
              Details about the submitter of the import request.

              email -> (string)
                 The  email  id  of the submitter of the import job, if avail-
                 able.

              userArn -> (string)
                 The AWS user ARN of the  submitter  of  the  import  job,  if
                 available.

          submitTime -> (timestamp)
              The timestamp when the job was submitted for import.

          importOptions -> (structure)
              The  options  that  was  specified at the time of submitting the
              import request.

              destinationOptions -> (structure)
                 Options relating to the destination of the import request.

                 columnMap -> (map)
                     A map of the column id to the import properties for  each
                     column.

                     key -> (string)

                     value -> (structure)
                        An  object  that contains the properties for importing
                        data to a specific column in a table.

                        columnIndex -> (integer)
                            The index of the column in the input file.

              delimitedTextOptions -> (structure)
                 Options relating  to  parsing  delimited  text.  Required  if
                 dataFormat is DELIMITED_TEXT.

                 delimiter -> (string)
                     The  delimiter  to use for separating columns in a single
                     row of the input.

                 hasHeaderRow -> (boolean)
                     Indicates whether the input file has a header row at  the
                     top containing the column names.

                 ignoreEmptyRows -> (boolean)
                     A  parameter  to  indicate  whether  empty rows should be
                     ignored or be included in the import.

                 dataCharacterEncoding -> (string)
                     The encoding of the data in the input file.

          dataSource -> (structure)
              The source of the data that was submitted for import.

              dataSourceConfig -> (structure)
                 The configuration parameters  for  the  data  source  of  the
                 import

                 dataSourceUrl -> (string)
                     The URL from which source data will be downloaded for the
                     import request.

       errorCode -> (string)
          If job status is failed, error code to  understand  reason  for  the
          failure.



                                              DESCRIBE-TABLE-DATA-IMPORT-JOB()
