GET-SCREEN-DATA()                                            GET-SCREEN-DATA()



NAME
       get-screen-data -

DESCRIPTION
       The  GetScreenData API allows retrieval of data from a screen in a Hon-
       eycode app. The API allows setting local variables  in  the  screen  to
       filter,  sort or otherwise affect what will be displayed on the screen.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-screen-data
          --workbook-id <value>
          --app-id <value>
          --screen-id <value>
          [--variables <value>]
          [--max-results <value>]
          [--next-token <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --workbook-id (string)
          The ID of the workbook that contains the screen.

       --app-id (string)
          The ID of the app that contains the screen.

       --screen-id (string)
          The ID of the screen.

       --variables (map)
          Variables are optional and are needed only if  the  screen  requires
          them to render correctly. Variables are specified as a map where the
          key is the name of the variable as defined on the screen. The  value
          is  an object which currently has only one property, rawValue, which
          holds the value of the variable to be passed to the screen.

          key -> (string)

          value -> (structure)
              The input variables to the app to be used by the InvokeScreenAu-
              tomation action request.

              rawValue -> (string)
                 Raw value of the variable.

       Shorthand Syntax:

          KeyName1=rawValue=string,KeyName2=rawValue=string

       JSON Syntax:

          {"string": {
                "rawValue": "string"
              }
            ...}

       --max-results (integer)
          The  number  of  results  to be returned on a single page. Specify a
          number between 1 and 100. The maximum value is 100.

          This parameter is optional. If you don't specify this parameter, the
          default page size is 100.

       --next-token (string)
          This parameter is optional. If a nextToken is not specified, the API
          returns the first page of data.

          Pagination tokens expire after 1 hour. If you use a token  that  was
          returned more than an hour back, the API will throw ValidationExcep-
          tion.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       results -> (map)
          A map of all the rows on the screen keyed by block name.

          key -> (string)

          value -> (structure)
              ResultSet contains the results of the request for a single block
              or list defined on the screen.

              headers -> (list)
                 List  of  headers  for  all  the data cells in the block. The
                 header identifies the name and default  format  of  the  data
                 cell.  Data  cells  appear  in  the same order in all rows as
                 defined in the header. The names and formats are not repeated
                 in  the rows. If a particular row does not have a value for a
                 data cell, a blank value is used.

                 For example, a task list that displays  the  task  name,  due
                 date and assigned person might have headers [ { "name": "Task
                 Name"}, {"name":  "Due  Date",  "format":  "DATE"},  {"name":
                 "Assigned",  "format":  "CONTACT"} ]. Every row in the result
                 will have the task name as the first item, due  date  as  the
                 second  item and assigned person as the third item. If a par-
                 ticular task does not have a due date, that  row  will  still
                 have  a  blank  value  in the second element and the assigned
                 person will still be in the third element.

                 (structure)
                     Metadata for column in the table.

                     name -> (string)
                        The name of the column.

                     format -> (string)
                        The format of the column.

              rows -> (list)
                 List of rows returned by the request. Each row has a  row  Id
                 and  a list of data cells in that row. The data cells will be
                 present in the same order as they are defined in the  header.

                 (structure)
                     A single row in the ResultSet.

                     rowId -> (string)
                        The ID for a particular row.

                     dataItems -> (list)
                        List of all the data cells in a row.

                        (structure)
                            The  data in a particular data cell defined on the
                            screen.

                            overrideFormat -> (string)
                               The overrideFormat is optional and is specified
                               only  if a particular row of data has a differ-
                               ent format for the data than the default format
                               defined on the screen or the table.

                            rawValue -> (string)
                               The    raw    value    of    the   data.   e.g.
                               jsmith@example.com

                            formattedValue -> (string)
                               The formatted value  of  the  data.  e.g.  John
                               Smith.

       workbookCursor -> (long)
          Indicates  the  cursor of the workbook at which the data returned by
          this workbook is read. Workbook cursor keeps increasing  with  every
          update and the increments are not sequential.

       nextToken -> (string)
          Provides  the  pagination  token  to load the next page if there are
          more results matching the request. If  a  pagination  token  is  not
          present  in  the response, it means that all data matching the query
          has been loaded.



                                                             GET-SCREEN-DATA()
