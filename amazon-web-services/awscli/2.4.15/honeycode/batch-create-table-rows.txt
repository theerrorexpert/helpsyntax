BATCH-CREATE-TABLE-ROWS()                            BATCH-CREATE-TABLE-ROWS()



NAME
       batch-create-table-rows -

DESCRIPTION
       The  BatchCreateTableRows  API allows you to create one or more rows at
       the end of a table in a workbook. The API allows  you  to  specify  the
       values to set in some or all of the columns in the new rows.

       If  a  column  is not explicitly set in a specific row, then the column
       level formula specified in the table will be applied to the new row. If
       there  is  no  column level formula but the last row of the table has a
       formula, then that formula will be copied down to the new row. If there
       is no column level formula and no formula in the last row of the table,
       then that column will be left blank for the new rows.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            batch-create-table-rows
          --workbook-id <value>
          --table-id <value>
          --rows-to-create <value>
          [--client-request-token <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --workbook-id (string)
          The ID of the workbook where the new rows are being added.

          If a workbook with the specified ID could not  be  found,  this  API
          throws ResourceNotFoundException.

       --table-id (string)
          The ID of the table where the new rows are being added.

          If a table with the specified ID could not be found, this API throws
          ResourceNotFoundException.

       --rows-to-create (list)
          The list of rows to create at the end of the  table.  Each  item  in
          this  list  needs  to  have a batch item id to uniquely identify the
          element in the request and the cells to create  for  that  row.  You
          need to specify at least one item in this list.

          Note that if one of the column ids in any of the rows in the request
          does not exist in the table, then the request fails and  no  updates
          are made to the table.

          (structure)
              Data  needed  to  create  a single row in a table as part of the
              BatchCreateTableRows request.

              batchItemId -> (string)
                 An external identifier that represents the single row that is
                 being  created  as  part of the BatchCreateTableRows request.
                 This can be any string that you can use to identify  the  row
                 in  the  request. The BatchCreateTableRows API puts the batch
                 item id in the results to allow  you  to  link  data  in  the
                 request to data in the results.

              cellsToCreate -> (map)
                 A  map  representing  the cells to create in the new row. The
                 key is the column id  of  the  cell  and  the  value  is  the
                 CellInput  object  that  represents  the  data to set in that
                 cell.

                 key -> (string)

                 value -> (structure)
                     CellInput object contains the data needed  to  create  or
                     update cells in a table.

                     NOTE:
                        CellInput  object  has  only  a  facts field or a fact
                        field, but not both. A 400 bad request will be  thrown
                        if both fact and facts field are present.

                     fact -> (string)
                        Fact  represents the data that is entered into a cell.
                        This data can be free text or a formula. Formulas need
                        to start with the equals (=) sign.

                     facts -> (list)
                        A list representing the values that are entered into a
                        ROWSET cell. Facts list can have either only values or
                        rowIDs, and rowIDs should from the same table.

                        (string)

       Shorthand Syntax:

          batchItemId=string,cellsToCreate={KeyName1={fact=string,facts=[string,string]},KeyName2={fact=string,facts=[string,string]}} ...

       JSON Syntax:

          [
            {
              "batchItemId": "string",
              "cellsToCreate": {"string": {
                    "fact": "string",
                    "facts": ["string", ...]
                  }
                ...}
            }
            ...
          ]

       --client-request-token (string)
          The request token for performing the batch create operation. Request
          tokens help to identify duplicate requests. If a call times  out  or
          fails due to a transient error like a failed network connection, you
          can retry the call with the same request token. The service  ensures
          that if the first call using that request token is successfully per-
          formed, the second call will not perform the operation again.

          Note that request tokens are valid only for a few minutes. You  can-
          not use request tokens to dedupe requests spanning hours or days.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       workbookCursor -> (long)
          The  updated workbook cursor after adding the new rows at the end of
          the table.

       createdRows -> (map)
          The map of batch item id to the row id that  was  created  for  that
          item.

          key -> (string)

          value -> (string)

       failedBatchItems -> (list)
          The  list  of  batch items in the request that could not be added to
          the table. Each element in this list  contains  one  item  from  the
          request  that  could not be added to the table along with the reason
          why that item could not be added.

          (structure)
              A single item in a batch that failed  to  perform  the  intended
              action because of an error preventing it from succeeding.

              id -> (string)
                 The  id of the batch item that failed. This is the batch item
                 id  for  the  BatchCreateTableRows  and  BatchUpsertTableRows
                 operations  and  the  row id for the BatchUpdateTableRows and
                 BatchDeleteTableRows operations.

              errorMessage -> (string)
                 The error message that indicates why the batch item failed.



                                                     BATCH-CREATE-TABLE-ROWS()
