START-TABLE-DATA-IMPORT-JOB()                    START-TABLE-DATA-IMPORT-JOB()



NAME
       start-table-data-import-job -

DESCRIPTION
       The  StartTableDataImportJob API allows you to start an import job on a
       table. This API will only return the id of the job that was started. To
       find out the status of the import request, you need to call the Descri-
       beTableDataImportJob API.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            start-table-data-import-job
          --workbook-id <value>
          --data-source <value>
          --data-format <value>
          --destination-table-id <value>
          --import-options <value>
          --client-request-token <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --workbook-id (string)
          The ID of the workbook where the rows are being imported.

          If a workbook with the specified id could not  be  found,  this  API
          throws ResourceNotFoundException.

       --data-source (structure)
          The  source  of  the data that is being imported. The size of source
          must be no larger than 100 MB. Source must have no more than 100,000
          cells and no more than 1,000 rows.

          dataSourceConfig -> (structure)
              The configuration parameters for the data source of the import

              dataSourceUrl -> (string)
                 The  URL  from  which  source data will be downloaded for the
                 import request.

       Shorthand Syntax:

          dataSourceConfig={dataSourceUrl=string}

       JSON Syntax:

          {
            "dataSourceConfig": {
              "dataSourceUrl": "string"
            }
          }

       --data-format (string)
          The format of the data that is being imported.  Currently  the  only
          option supported is "DELIMITED_TEXT".

          Possible values:

          o DELIMITED_TEXT

       --destination-table-id (string)
          The ID of the table where the rows are being imported.

          If a table with the specified id could not be found, this API throws
          ResourceNotFoundException.

       --import-options (structure)
          The options for customizing this import request.

          destinationOptions -> (structure)
              Options relating to the destination of the import request.

              columnMap -> (map)
                 A map of the column id to the import properties for each col-
                 umn.

                 key -> (string)

                 value -> (structure)
                     An object that contains the properties for importing data
                     to a specific column in a table.

                     columnIndex -> (integer)
                        The index of the column in the input file.

          delimitedTextOptions -> (structure)
              Options relating to parsing delimited text. Required if dataFor-
              mat is DELIMITED_TEXT.

              delimiter -> (string)
                 The  delimiter  to use for separating columns in a single row
                 of the input.

              hasHeaderRow -> (boolean)
                 Indicates whether the input file has a header row at the  top
                 containing the column names.

              ignoreEmptyRows -> (boolean)
                 A  parameter to indicate whether empty rows should be ignored
                 or be included in the import.

              dataCharacterEncoding -> (string)
                 The encoding of the data in the input file.

       Shorthand Syntax:

          destinationOptions={columnMap={KeyName1={columnIndex=integer},KeyName2={columnIndex=integer}}},delimitedTextOptions={delimiter=string,hasHeaderRow=boolean,ignoreEmptyRows=boolean,dataCharacterEncoding=string}

       JSON Syntax:

          {
            "destinationOptions": {
              "columnMap": {"string": {
                    "columnIndex": integer
                  }
                ...}
            },
            "delimitedTextOptions": {
              "delimiter": "string",
              "hasHeaderRow": true|false,
              "ignoreEmptyRows": true|false,
              "dataCharacterEncoding": "UTF-8"|"US-ASCII"|"ISO-8859-1"|"UTF-16BE"|"UTF-16LE"|"UTF-16"
            }
          }

       --client-request-token (string)
          The request token for performing the update action.  Request  tokens
          help  to  identify  duplicate requests. If a call times out or fails
          due to a transient error like a failed network connection,  you  can
          retry the call with the same request token. The service ensures that
          if the first call using that  request  token  is  successfully  per-
          formed, the second call will not perform the action again.

          Note  that request tokens are valid only for a few minutes. You can-
          not use request tokens to dedupe requests spanning hours or days.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       jobId -> (string)
          The id that is assigned to this import job. Future requests to  find
          out the status of this import job need to send this id in the appro-
          priate parameter in the request.

       jobStatus -> (string)
          The status of  the  import  job  immediately  after  submitting  the
          request.



                                                 START-TABLE-DATA-IMPORT-JOB()
