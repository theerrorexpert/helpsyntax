GET-CONTAINER-RECIPE()                                  GET-CONTAINER-RECIPE()



NAME
       get-container-recipe -

DESCRIPTION
       Retrieves a container recipe.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-container-recipe
          --container-recipe-arn <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --container-recipe-arn (string)
          The  Amazon Resource Name (ARN) of the container recipe to retrieve.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       requestId -> (string)
          The request ID that uniquely identifies this request.

       containerRecipe -> (structure)
          The container recipe object that is returned.

          arn -> (string)
              The Amazon Resource Name (ARN) of the container recipe.

              NOTE:
                 Semantic versioning  is  included  in  each  object's  Amazon
                 Resource Name (ARN), at the level that applies to that object
                 as follows:

                 o Versionless ARNs and Name ARNs do not include specific val-
                   ues  in  any  of  the  nodes. The nodes are either left off
                   entirely, or they are specified as wildcards, for  example:
                   x.x.x.

                 o Version   ARNs   have   only   the   first   three   nodes:
                   <major>.<minor>.<patch>

                 o Build version ARNs have all four nodes, and point to a spe-
                   cific build for a specific version of an object.

          containerType -> (string)
              Specifies the type of container, such as Docker.

          name -> (string)
              The name of the container recipe.

          description -> (string)
              The description of the container recipe.

          platform -> (string)
              The system platform for the container, such as Windows or Linux.

          owner -> (string)
              The owner of the container recipe.

          version -> (string)
              The semantic version of the container recipe.

              NOTE:
                 The      semantic      version      has      four      nodes:
                 <major>.<minor>.<patch>/<build>.  You  can  assign values for
                 the first three, and can filter on all of them.
                     Assignment: For the first three nodes you can assign  any
                     positive  integer  value,  including  zero, with an upper
                     limit of 2^30-1,  or  1073741823  for  each  node.  Image
                     Builder  automatically  assigns  the  build number to the
                     fourth node.

                     Patterns: You can use any numeric pattern that adheres to
                     the  assignment  requirements  for the nodes that you can
                     assign. For example, you might choose a software  version
                     pattern, such as 1.0.0, or a date, such as 2021.01.01.

                     Filtering:  With semantic versioning, you have the flexi-
                     bility to use wildcards (x) to specify  the  most  recent
                     versions or nodes when selecting the base image or compo-
                     nents for your recipe. When you use  a  wildcard  in  any
                     node,  all  nodes to the right of the first wildcard must
                     also be wildcards.

          components -> (list)
              Components for build and test that are included in the container
              recipe.

              (structure)
                 Configuration details of the component.

                 componentArn -> (string)
                     The Amazon Resource Name (ARN) of the component.

                 parameters -> (list)
                     A  group of parameter settings that are used to configure
                     the component for a specific recipe.

                     (structure)
                        Contains a key/value pair that sets the  named  compo-
                        nent parameter.

                        name -> (string)
                            The name of the component parameter to set.

                        value -> (list)
                            Sets  the value for the named component parameter.

                            (string)

          instanceConfiguration -> (structure)
              A group of options that can be used to configure an instance for
              building and testing container images.

              image -> (string)
                 The AMI ID to use as the base image for a container build and
                 test instance. If not specified, Image Builder will  use  the
                 appropriate ECS-optimized AMI as a base image.

              blockDeviceMappings -> (list)
                 Defines  the block devices to attach for building an instance
                 from this Image Builder AMI.

                 (structure)
                     Defines block device mappings for the  instance  used  to
                     configure your image.

                     deviceName -> (string)
                        The device to which these mappings apply.

                     ebs -> (structure)
                        Use  to  manage  Amazon EBS-specific configuration for
                        this mapping.

                        encrypted -> (boolean)
                            Use to configure device encryption.

                        deleteOnTermination -> (boolean)
                            Use to configure  delete  on  termination  of  the
                            associated device.

                        iops -> (integer)
                            Use to configure device IOPS.

                        kmsKeyId -> (string)
                            Use  to configure the KMS key to use when encrypt-
                            ing the device.

                        snapshotId -> (string)
                            The snapshot that defines the device contents.

                        volumeSize -> (integer)
                            Use to override the device's volume size.

                        volumeType -> (string)
                            Use to override the device's volume type.

                        throughput -> (integer)
                            For GP3 volumes only  The throughput in MiB/s that
                            the volume supports.

                     virtualName -> (string)
                        Use to manage instance ephemeral devices.

                     noDevice -> (string)
                        Use to remove a mapping from the base image.

          dockerfileTemplateData -> (string)
              Dockerfiles  are  text  documents  that are used to build Docker
              containers, and ensure that they contain  all  of  the  elements
              required  by  the  application running inside. The template data
              consists of contextual  variables  where  Image  Builder  places
              build  information  or  scripts,  based  on your container image
              recipe.

          kmsKeyId -> (string)
              Identifies which KMS key is used to encrypt the container  image
              for distribution to the target Region.

          encrypted -> (boolean)
              A flag that indicates if the target container is encrypted.

          parentImage -> (string)
              The base image for the container recipe.

          dateCreated -> (string)
              The date when this container recipe was created.

          tags -> (map)
              Tags that are attached to the container recipe.

              key -> (string)

              value -> (string)

          workingDirectory -> (string)
              The working directory for use during build and test workflows.

          targetRepository -> (structure)
              The destination repository for the container image.

              service -> (string)
                 Specifies the service in which this image was registered.

              repositoryName -> (string)
                 The  name  of  the container repository where the output con-
                 tainer image is stored. This name is prefixed by the  reposi-
                 tory location.



                                                        GET-CONTAINER-RECIPE()
