LIST-COMPONENTS()                                            LIST-COMPONENTS()



NAME
       list-components -

DESCRIPTION
       Returns the list of component build versions for the specified semantic
       version.

       NOTE:
          The       semantic       version       has        four        nodes:
          <major>.<minor>.<patch>/<build>. You can assign values for the first
          three, and can filter on all of them.
              Filtering: With semantic versioning, you have the flexibility to
              use  wildcards  (x) to specify the most recent versions or nodes
              when selecting the base image or  components  for  your  recipe.
              When  you  use a wildcard in any node, all nodes to the right of
              the first wildcard must also be wildcards.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            list-components
          [--owner <value>]
          [--filters <value>]
          [--by-name | --no-by-name]
          [--max-results <value>]
          [--next-token <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --owner (string)
          The owner defines which components you want  to  list.  By  default,
          this  request  will  only show components owned by your account. You
          can use this field to specify if you want to view  components  owned
          by  yourself,  by  Amazon, or those components that have been shared
          with you by other customers.

          Possible values:

          o Self

          o Shared

          o Amazon

       --filters (list)
          Use the following filters to streamline results:

          o description

          o name

          o platform

          o supportedOsVersion

          o type

          o version

          (structure)
              A filter name and value pair that is used to return a more  spe-
              cific list of results from a list operation. Filters can be used
              to match a set of resources by specific criteria, such as  tags,
              attributes, or IDs.

              name -> (string)
                 The name of the filter. Filter names are case-sensitive.

              values -> (list)
                 The filter values. Filter values are case-sensitive.

                 (string)

       Shorthand Syntax:

          name=string,values=string,string ...

       JSON Syntax:

          [
            {
              "name": "string",
              "values": ["string", ...]
            }
            ...
          ]

       --by-name | --no-by-name (boolean)
          Returns the list of component build versions for the specified name.

       --max-results (integer)
          The maximum items to return in a request.

       --next-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To list all of the component semantic versions

       The following list-components example lists all of the component seman-
       tic versions to which you have access. You  can  optionally  filter  on
       whether  to  list components owned by you, by Amazon, or that have been
       shared with you by other accounts.

          aws imagebuilder list-components

       Output:

          {
              "requestId": "a1b2c3d4-5678-90ab-cdef-EXAMPLE11111",
              "componentVersionList": [
                  {
                      "arn": "arn:aws:imagebuilder:us-west-2:123456789012:component/component-name/1.0.0",
                      "name": "component-name",
                      "version": "1.0.0",
                      "platform": "Linux",
                      "type": "TEST",
                      "owner": "123456789012",
                      "dateCreated": "2020-01-27T20:43:30.306Z"
                  }
              ]
          }

       For more information, see Setting Up and Managing an EC2 Image  Builder
       Image  Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide.

OUTPUT
       requestId -> (string)
          The request ID that uniquely identifies this request.

       componentVersionList -> (list)
          The list of component semantic versions.

          NOTE:
              The      semantic      version       has       four       nodes:
              <major>.<minor>.<patch>/<build>.  You  can assign values for the
              first three, and can filter on all of them.

          (structure)
              The defining characteristics of a specific version of an  Amazon
              Web Services TOE component.

              arn -> (string)
                 The Amazon Resource Name (ARN) of the component.

                 NOTE:
                     Semantic  versioning  is included in each object's Amazon
                     Resource Name (ARN), at the level that  applies  to  that
                     object as follows:

                     o Versionless  ARNs and Name ARNs do not include specific
                       values in any of the nodes. The nodes are  either  left
                       off  entirely,  or they are specified as wildcards, for
                       example: x.x.x.

                     o Version  ARNs  have  only  the   first   three   nodes:
                       <major>.<minor>.<patch>

                     o Build  version ARNs have all four nodes, and point to a
                       specific build for a specific version of an object.

              name -> (string)
                 The name of the component.

              version -> (string)
                 The semantic version of the component.

                 NOTE:
                     The     semantic     version     has     four      nodes:
                     <major>.<minor>.<patch>/<build>.  You  can  assign values
                     for the first three, and can filter on all of them.
                        Assignment: For the first three nodes you  can  assign
                        any  positive  integer  value, including zero, with an
                        upper limit of 2^30-1, or 1073741823  for  each  node.
                        Image  Builder  automatically assigns the build number
                        to the fourth node.

                        Patterns: You can use any numeric pattern that adheres
                        to  the assignment requirements for the nodes that you
                        can assign. For example, you might choose  a  software
                        version  pattern,  such  as  1.0.0, or a date, such as
                        2021.01.01.

                        Filtering: With  semantic  versioning,  you  have  the
                        flexibility  to  use wildcards (x) to specify the most
                        recent versions or nodes when selecting the base image
                        or components for your recipe. When you use a wildcard
                        in any node, all nodes to the right of the first wild-
                        card must also be wildcards.

              description -> (string)
                 The description of the component.

              platform -> (string)
                 The platform of the component.

              supportedOsVersions -> (list)
                 he  operating system (OS) version supported by the component.
                 If the OS information is available, a prefix  match  is  per-
                 formed  against the base image OS version during image recipe
                 creation.

                 (string)

              type -> (string)
                 The type of the component denotes whether  the  component  is
                 used to build the image or only to test it.

              owner -> (string)
                 The owner of the component.

              dateCreated -> (string)
                 The date that the component was created.

       nextToken -> (string)
          The next token used for paginated responses. When this is not empty,
          there are additional elements that the service has not  included  in
          this request. Use this token with the next request to retrieve addi-
          tional objects.



                                                             LIST-COMPONENTS()
