UPDATE-PACKAGE-VERSIONS-STATUS()              UPDATE-PACKAGE-VERSIONS-STATUS()



NAME
       update-package-versions-status -

DESCRIPTION
       Updates the status of one or more versions of a package.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            update-package-versions-status
          --domain <value>
          [--domain-owner <value>]
          --repository <value>
          --format <value>
          [--namespace <value>]
          --package <value>
          --versions <value>
          [--version-revisions <value>]
          [--expected-status <value>]
          --target-status <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --domain (string)
          The  name  of  the domain that contains the repository that contains
          the package versions with a status to be updated.

       --domain-owner (string)
          The 12-digit account number of the AWS account that owns the domain.
          It does not include dashes or spaces.

       --repository (string)
          The  repository  that  contains the package versions with the status
          you want to update.

       --format (string)
          A format that specifies the type of the package with the statuses to
          update. The valid values are:

          o npm

          o pypi

          o maven

          Possible values:

          o npm

          o pypi

          o maven

          o nuget

       --namespace (string)
          The  namespace  of the package. The package component that specifies
          its namespace depends on its type. For example:

          o The namespace of a Maven package is its groupId .

          o The namespace of an npm package is its scope .

          o A Python package does not contain a  corresponding  component,  so
            Python packages do not have a namespace.

       --package (string)
          The name of the package with the version statuses to update.

       --versions (list)
          An  array  of  strings that specify the versions of the package with
          the statuses to update.

          (string)

       Syntax:

          "string" "string" ...

       --version-revisions (map)
          A map of package versions and package version revisions. The map key
          is  the  package version (for example, 3.5.2 ), and the map value is
          the package version revision.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --expected-status (string)
          The package versions  expected  status  before  it  is  updated.  If
          expectedStatus  is provided, the package version's status is updated
          only if its status at the time UpdatePackageVersionsStatus is called
          matches expectedStatus .

          Possible values:

          o Published

          o Unfinished

          o Unlisted

          o Archived

          o Disposed

          o Deleted

       --target-status (string)
          The status you want to change the package version status to.

          Possible values:

          o Published

          o Unfinished

          o Unlisted

          o Archived

          o Disposed

          o Deleted

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To update package version status

       The following update-package-versions-status example updates the status
       of version 4.0.0 of the test-package package to Archived.

          aws codeartifact update-package-versions-status \
              --domain test-domain \
              --repo test-repo \
              --format npm \
              --package test-package \
              --versions 4.0.0 \
              --target-status Archived

       Output:

          {
              "successfulVersions": {
                  "4.0.0": {
                      "revision": "Ciqe5/9yicvkJT13b5/LdLpCyE6fqA7poa9qp+FilPs=",
                      "status": "Archived"
                  }
              },
              "failedVersions": {}
          }

       For more information, see Update package  version  status  in  the  AWS
       CodeArtifact User Guide.

OUTPUT
       successfulVersions -> (map)
          A  list of PackageVersionError objects, one for each package version
          with a status that failed to update.

          key -> (string)

          value -> (structure)
              Contains the revision and status of a package version.

              revision -> (string)
                 The revision of a package version.

              status -> (string)
                 The status of a package version. Valid statuses are:

                 o Published

                 o Unfinished

                 o Unlisted

                 o Archived

                 o Disposed

       failedVersions -> (map)
          A list of SuccessfulPackageVersionInfo objects, one for each package
          version with a status that successfully updated.

          key -> (string)

          value -> (structure)
              An error associated with package.

              errorCode -> (string)
                 The  error  code associated with the error. Valid error codes
                 are:

                 o ALREADY_EXISTS

                 o MISMATCHED_REVISION

                 o MISMATCHED_STATUS

                 o NOT_ALLOWED

                 o NOT_FOUND

                 o SKIPPED

              errorMessage -> (string)
                 The error message associated with the error.



                                              UPDATE-PACKAGE-VERSIONS-STATUS()
