SIGN-UP()                                                            SIGN-UP()



NAME
       sign-up -

DESCRIPTION
       Registers  the user in the specified user pool and creates a user name,
       password, and user attributes.

       NOTE:
          This action might generate an SMS text  message.  Starting  June  1,
          2021, U.S. telecom carriers require that you register an origination
          phone number before you can send SMS messages to U.S. phone numbers.
          If  you use SMS text messages in Amazon Cognito, you must register a
          phone number with Amazon Pinpoint . Cognito will use the the  regis-
          tered  number  automatically.  Otherwise,  Cognito  users  that must
          receive SMS messages might be unable  to  sign  up,  activate  their
          accounts, or sign in.

          If  you have never used SMS text messages with Amazon Cognito or any
          other Amazon Web Service, Amazon SNS might place your account in SMS
          sandbox. In * sandbox mode * , youll have limitations, such as send-
          ing messages to only verified phone numbers. After  testing  in  the
          sandbox  environment,  you  can move out of the SMS sandbox and into
          production. For more information, see SMS message settings for  Cog-
          nito User Pools in the Amazon Cognito Developer Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            sign-up
          --client-id <value>
          [--secret-hash <value>]
          --username <value>
          --password <value>
          [--user-attributes <value>]
          [--validation-data <value>]
          [--analytics-metadata <value>]
          [--user-context-data <value>]
          [--client-metadata <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --client-id (string)
          The ID of the client associated with the user pool.

       --secret-hash (string)
          A keyed-hash message authentication code (HMAC) calculated using the
          secret key of a user pool client and username plus the client ID  in
          the message.

       --username (string)
          The user name of the user you wish to register.

       --password (string)
          The password of the user you wish to register.

       --user-attributes (list)
          An array of name-value pairs representing user attributes.

          For  custom  attributes,  you must prepend the custom: prefix to the
          attribute name.

          (structure)
              Specifies whether the attribute is standard or custom.

              Name -> (string)
                 The name of the attribute.

              Value -> (string)
                 The value of the attribute.

       Shorthand Syntax:

          Name=string,Value=string ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Value": "string"
            }
            ...
          ]

       --validation-data (list)
          The validation data in the request to register a user.

          (structure)
              Specifies whether the attribute is standard or custom.

              Name -> (string)
                 The name of the attribute.

              Value -> (string)
                 The value of the attribute.

       Shorthand Syntax:

          Name=string,Value=string ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Value": "string"
            }
            ...
          ]

       --analytics-metadata (structure)
          The Amazon Pinpoint analytics metadata for  collecting  metrics  for
          SignUp calls.

          AnalyticsEndpointId -> (string)
              The endpoint ID.

       Shorthand Syntax:

          AnalyticsEndpointId=string

       JSON Syntax:

          {
            "AnalyticsEndpointId": "string"
          }

       --user-context-data (structure)
          Contextual  data  such as the user's device fingerprint, IP address,
          or location used for evaluating the risk of an unexpected  event  by
          Amazon Cognito advanced security.

          EncodedData -> (string)
              Contextual  data  such  as  the  user's  device  fingerprint, IP
              address, or location used for evaluating the risk  of  an  unex-
              pected event by Amazon Cognito advanced security.

       Shorthand Syntax:

          EncodedData=string

       JSON Syntax:

          {
            "EncodedData": "string"
          }

       --client-metadata (map)
          A  map  of  custom key-value pairs that you can provide as input for
          any custom workflows that this action triggers.

          You create custom workflows by assigning Lambda  functions  to  user
          pool  triggers.  When  you use the SignUp API action, Amazon Cognito
          invokes any functions that are assigned to the  following  triggers:
          pre  sign-up  , custom message , and post confirmation . When Amazon
          Cognito invokes any of these functions, it passes  a  JSON  payload,
          which  the  function  receives  as  input.  This  payload contains a
          clientMetadata attribute, which provides the data that you  assigned
          to  the  ClientMetadata  parameter  in  your SignUp request. In your
          function code in Lambda, you can process the clientMetadata value to
          enhance your workflow for your specific needs.

          For  more  information,  see  Customizing  User  Pool Workflows with
          Lambda Triggers in the Amazon Cognito Developer Guide .

          NOTE:
              Take the following limitations into consideration when  you  use
              the ClientMetadata parameter:

              o Amazon  Cognito  does not store the ClientMetadata value. This
                data is available only to Lambda triggers that are assigned to
                a  user  pool  to  support custom workflows. If your user pool
                configuration does not include  triggers,  the  ClientMetadata
                parameter serves no purpose.

              o Amazon Cognito does not validate the ClientMetadata value.

              o Amazon  Cognito does not encrypt the the ClientMetadata value,
                so don't use it to provide sensitive information.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To sign up a user

       This example signs up jane@example.com.

       Command:

          aws cognito-idp sign-up --client-id 3n4b5urk1ft4fl3mg5e62d9ado --username jane@example.com --password PASSWORD --user-attributes Name="email",Value="jane@example.com" Name="name",Value="Jane"

       Output:

          {
            "UserConfirmed": false,
            "UserSub": "e04d60a6-45dc-441c-a40b-e25a787d4862"
          }

OUTPUT
       UserConfirmed -> (boolean)
          A response from the server indicating that a user  registration  has
          been confirmed.

       CodeDeliveryDetails -> (structure)
          The  code  delivery  details  returned by the server response to the
          user registration request.

          Destination -> (string)
              The destination for the code delivery details.

          DeliveryMedium -> (string)
              The delivery medium (email message or phone number).

          AttributeName -> (string)
              The attribute name.

       UserSub -> (string)
          The UUID of the authenticated user. This is not the same as username
          .



                                                                     SIGN-UP()
