RESPOND-TO-AUTH-CHALLENGE()                        RESPOND-TO-AUTH-CHALLENGE()



NAME
       respond-to-auth-challenge -

DESCRIPTION
       Responds to the authentication challenge.

       NOTE:
          This  action  might  generate  an SMS text message. Starting June 1,
          2021, U.S. telecom carriers require that you register an origination
          phone number before you can send SMS messages to U.S. phone numbers.
          If you use SMS text messages in Amazon Cognito, you must register  a
          phone  number with Amazon Pinpoint . Cognito will use the the regis-
          tered number  automatically.  Otherwise,  Cognito  users  that  must
          receive  SMS  messages  might  be  unable to sign up, activate their
          accounts, or sign in.

          If you have never used SMS text messages with Amazon Cognito or  any
          other Amazon Web Service, Amazon SNS might place your account in SMS
          sandbox. In * sandbox mode * , youll have limitations, such as send-
          ing  messages  to  only verified phone numbers. After testing in the
          sandbox environment, you can move out of the SMS  sandbox  and  into
          production.  For more information, see SMS message settings for Cog-
          nito User Pools in the Amazon Cognito Developer Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            respond-to-auth-challenge
          --client-id <value>
          --challenge-name <value>
          [--session <value>]
          [--challenge-responses <value>]
          [--analytics-metadata <value>]
          [--user-context-data <value>]
          [--client-metadata <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --client-id (string)
          The app client ID.

       --challenge-name (string)
          The challenge name. For more information, see InitiateAuth .
              ADMIN_NO_SRP_AUTH is not a valid value.

          Possible values:

          o SMS_MFA

          o SOFTWARE_TOKEN_MFA

          o SELECT_MFA_TYPE

          o MFA_SETUP

          o PASSWORD_VERIFIER

          o CUSTOM_CHALLENGE

          o DEVICE_SRP_AUTH

          o DEVICE_PASSWORD_VERIFIER

          o ADMIN_NO_SRP_AUTH

          o NEW_PASSWORD_REQUIRED

       --session (string)
          The session which should be passed both ways  in  challenge-response
          calls  to the service. If InitiateAuth or RespondToAuthChallenge API
          call determines that the caller needs to go  through  another  chal-
          lenge,  they  return a session with other challenge parameters. This
          session should be passed as it is to the next RespondToAuthChallenge
          API call.

       --challenge-responses (map)
          The challenge responses. These are inputs corresponding to the value
          of ChallengeName , for example:

          NOTE:
              SECRET_HASH (if app client is  configured  with  client  secret)
              applies to all inputs below (including SOFTWARE_TOKEN_MFA ).

          o SMS_MFA : SMS_MFA_CODE , USERNAME .

          o PASSWORD_VERIFIER     :     PASSWORD_CLAIM_SIGNATURE    ,    PASS-
            WORD_CLAIM_SECRET_BLOCK , TIMESTAMP , USERNAME .

          o NEW_PASSWORD_REQUIRED  :  NEW_PASSWORD  ,   any   other   required
            attributes, USERNAME .

          o SOFTWARE_TOKEN_MFA  :  USERNAME  and  SOFTWARE_TOKEN_MFA_CODE  are
            required attributes.

          o DEVICE_SRP_AUTH  requires  USERNAME  ,  DEVICE_KEY  ,  SRP_A  (and
            SECRET_HASH ).

          o DEVICE_PASSWORD_VERIFIER  requires  everything that PASSWORD_VERI-
            FIER requires plus DEVICE_KEY .

          o MFA_SETUP requires USERNAME , plus you need  to  use  the  session
            value returned by VerifySoftwareToken in the Session parameter.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --analytics-metadata (structure)
          The  Amazon  Pinpoint  analytics metadata for collecting metrics for
          RespondToAuthChallenge calls.

          AnalyticsEndpointId -> (string)
              The endpoint ID.

       Shorthand Syntax:

          AnalyticsEndpointId=string

       JSON Syntax:

          {
            "AnalyticsEndpointId": "string"
          }

       --user-context-data (structure)
          Contextual data such as the user's device fingerprint,  IP  address,
          or  location  used for evaluating the risk of an unexpected event by
          Amazon Cognito advanced security.

          EncodedData -> (string)
              Contextual data  such  as  the  user's  device  fingerprint,  IP
              address,  or  location  used for evaluating the risk of an unex-
              pected event by Amazon Cognito advanced security.

       Shorthand Syntax:

          EncodedData=string

       JSON Syntax:

          {
            "EncodedData": "string"
          }

       --client-metadata (map)
          A map of custom key-value pairs that you can provide  as  input  for
          any custom workflows that this action triggers.

          You  create  custom  workflows by assigning Lambda functions to user
          pool triggers. When you use the RespondToAuthChallenge  API  action,
          Amazon  Cognito  invokes any functions that are assigned to the fol-
          lowing triggers: post authentication , pre token generation , define
          auth challenge , create auth challenge , and verify auth challenge .
          When Amazon Cognito invokes any of these functions, it passes a JSON
          payload, which the function receives as input. This payload contains
          a  clientMetadata  attribute,  which  provides  the  data  that  you
          assigned  to the ClientMetadata parameter in your RespondToAuthChal-
          lenge request. In your function code in Lambda, you can process  the
          clientMetadata  value  to  enhance  your  workflow for your specific
          needs.

          For more information,  see  Customizing  User  Pool  Workflows  with
          Lambda Triggers in the Amazon Cognito Developer Guide .

          NOTE:
              Take  the  following limitations into consideration when you use
              the ClientMetadata parameter:

              o Amazon Cognito does not store the ClientMetadata  value.  This
                data is available only to Lambda triggers that are assigned to
                a user pool to support custom workflows.  If  your  user  pool
                configuration  does  not  include triggers, the ClientMetadata
                parameter serves no purpose.

              o Amazon Cognito does not validate the ClientMetadata value.

              o Amazon Cognito does not encrypt the the ClientMetadata  value,
                so don't use it to provide sensitive information.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To respond to an authorization challenge

       This  example  responds  to  an  authorization challenge initiated with
       initiate-auth. It is a response to the NEW_PASSWORD_REQUIRED challenge.
       It sets a password for user jane@example.com.

       Command:

          aws cognito-idp respond-to-auth-challenge --client-id 3n4b5urk1ft4fl3mg5e62d9ado --challenge-name NEW_PASSWORD_REQUIRED --challenge-responses USERNAME=jane@example.com,NEW_PASSWORD="password" --session "SESSION_TOKEN"

       Output:

          {
            "ChallengeParameters": {},
            "AuthenticationResult": {
                "AccessToken": "ACCESS_TOKEN",
                "ExpiresIn": 3600,
                "TokenType": "Bearer",
                "RefreshToken": "REFRESH_TOKEN",
                "IdToken": "ID_TOKEN",
                "NewDeviceMetadata": {
                    "DeviceKey": "us-west-2_fec070d2-fa88-424a-8ec8-b26d7198eb23",
                    "DeviceGroupKey": "-wt2ha1Zd"
                }
            }
          }

OUTPUT
       ChallengeName -> (string)
          The challenge name. For more information, see InitiateAuth .

       Session -> (string)
          The  session  which should be passed both ways in challenge-response
          calls to the service. If the caller  needs  to  go  through  another
          challenge,  they  return  a session with other challenge parameters.
          This session should be passed as it  is  to  the  next  RespondToAu-
          thChallenge API call.

       ChallengeParameters -> (map)
          The challenge parameters. For more information, see InitiateAuth .

          key -> (string)

          value -> (string)

       AuthenticationResult -> (structure)
          The  result  returned  by  the  server in response to the request to
          respond to the authentication challenge.

          AccessToken -> (string)
              The access token.

          ExpiresIn -> (integer)
              The expiration period of the authentication result in seconds.

          TokenType -> (string)
              The token type.

          RefreshToken -> (string)
              The refresh token.

          IdToken -> (string)
              The ID token.

          NewDeviceMetadata -> (structure)
              The new device metadata from an authentication result.

              DeviceKey -> (string)
                 The device key.

              DeviceGroupKey -> (string)
                 The device group key.



                                                   RESPOND-TO-AUTH-CHALLENGE()
