DESCRIBE-USER-POOL-CLIENT()                        DESCRIBE-USER-POOL-CLIENT()



NAME
       describe-user-pool-client -

DESCRIPTION
       Client  method for returning the configuration information and metadata
       of the specified user pool app client.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            describe-user-pool-client
          --user-pool-id <value>
          --client-id <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --user-pool-id (string)
          The user pool ID for the user pool you want to describe.

       --client-id (string)
          The app client ID of the app associated with the user pool.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To describe a user pool client

       This example describes a user pool client.

       Command:

          aws cognito-idp describe-user-pool-client --user-pool-id us-west-2_aaaaaaaaa --client-id 38fjsnc484p94kpqsnet7mpld0

       Output:

          {
            "UserPoolClient": {
                "UserPoolId": "us-west-2_aaaaaaaaa",
                "ClientName": "MyApp",
                "ClientId": "38fjsnc484p94kpqsnet7mpld0",
                "ClientSecret": "CLIENT_SECRET",
                "LastModifiedDate": 1548108676.163,
                "CreationDate": 1548108676.163,
                "RefreshTokenValidity": 30,
                "ReadAttributes": [
                    "address",
                    "birthdate",
                    "custom:CustomAttr1",
                    "custom:CustomAttr2",
                    "email",
                    "email_verified",
                    "family_name",
                    "gender",
                    "given_name",
                    "locale",
                    "middle_name",
                    "name",
                    "nickname",
                    "phone_number",
                    "phone_number_verified",
                    "picture",
                    "preferred_username",
                    "profile",
                    "updated_at",
                    "website",
                    "zoneinfo"
                ],
                "WriteAttributes": [
                    "address",
                    "birthdate",
                    "custom:CustomAttr1",
                    "custom:CustomAttr2",
                    "email",
                    "family_name",
                    "gender",
                    "given_name",
                    "locale",
                    "middle_name",
                    "name",
                    "nickname",
                    "phone_number",
                    "picture",
                    "preferred_username",
                    "profile",
                    "updated_at",
                    "website",
                    "zoneinfo"
                ],
                "ExplicitAuthFlows": [
                    "ADMIN_NO_SRP_AUTH",
                    "USER_PASSWORD_AUTH"
                ],
                "AllowedOAuthFlowsUserPoolClient": false
            }
          }

OUTPUT
       UserPoolClient -> (structure)
          The user pool client from a server response  to  describe  the  user
          pool client.

          UserPoolId -> (string)
              The user pool ID for the user pool client.

          ClientName -> (string)
              The client name from the user pool request of the client type.

          ClientId -> (string)
              The ID of the client associated with the user pool.

          ClientSecret -> (string)
              The client secret from the user pool request of the client type.

          LastModifiedDate -> (timestamp)
              The date the user pool client was last modified.

          CreationDate -> (timestamp)
              The date the user pool client was created.

          RefreshTokenValidity -> (integer)
              The time limit, in days, after which the  refresh  token  is  no
              longer valid and cannot be used.

          AccessTokenValidity -> (integer)
              The  time  limit, specified by tokenValidityUnits, defaulting to
              hours, after which the access token is no longer valid and  can-
              not be used.

          IdTokenValidity -> (integer)
              The  time  limit, specified by tokenValidityUnits, defaulting to
              hours, after which the refresh token is no longer valid and can-
              not be used.

          TokenValidityUnits -> (structure)
              The time units used to specify the token validity times of their
              respective token.

              AccessToken -> (string)
                 A time unit in seconds, minutes, hours or days for the  value
                 in AccessTokenValidity, defaults to hours.

              IdToken -> (string)
                 A  time unit in seconds, minutes, hours or days for the value
                 in IdTokenValidity, defaults to hours.

              RefreshToken -> (string)
                 A time unit in seconds, minutes, hours or days for the  value
                 in RefreshTokenValidity, defaults to days.

          ReadAttributes -> (list)
              The Read-only attributes.

              (string)

          WriteAttributes -> (list)
              The writeable attributes.

              (string)

          ExplicitAuthFlows -> (list)
              The  authentication  flows  that  are supported by the user pool
              clients. Flow names without the ALLOW_ prefix are deprecated  in
              favor of new names with the ALLOW_ prefix. Note that values with
              ALLOW_ prefix cannot be used along with  values  without  ALLOW_
              prefix.

              Valid values include:

              o ALLOW_ADMIN_USER_PASSWORD_AUTH : Enable admin based user pass-
                word authentication flow ADMIN_USER_PASSWORD_AUTH . This  set-
                ting replaces the ADMIN_NO_SRP_AUTH setting. With this authen-
                tication flow, Cognito receives the password  in  the  request
                instead  of  using  the  SRP (Secure Remote Password protocol)
                protocol to verify passwords.

              o ALLOW_CUSTOM_AUTH : Enable Lambda  trigger  based  authentica-
                tion.

              o ALLOW_USER_PASSWORD_AUTH  : Enable user password-based authen-
                tication. In this flow, Cognito receives the password  in  the
                request instead of using the SRP protocol to verify passwords.

              o ALLOW_USER_SRP_AUTH : Enable SRP based authentication.

              o ALLOW_REFRESH_TOKEN_AUTH : Enable authflow to refresh  tokens.

              (string)

          SupportedIdentityProviders -> (list)
              A  list  of  provider  names for the identity providers that are
              supported on this client.

              (string)

          CallbackURLs -> (list)
              A list of allowed redirect  (callback)  URLs  for  the  identity
              providers.

              A redirect URI must:

              o Be an absolute URI.

              o Be registered with the authorization server.

              o Not include a fragment component.

              See OAuth 2.0 - Redirection Endpoint .

              Amazon   Cognito   requires   HTTPS   over   HTTP   except   for
              http://localhost for testing purposes only.

              App callback URLs such as myapp://example are also supported.

              (string)

          LogoutURLs -> (list)
              A list of allowed logout URLs for the identity providers.

              (string)

          DefaultRedirectURI -> (string)
              The default redirect URI. Must be in the CallbackURLs list.

              A redirect URI must:

              o Be an absolute URI.

              o Be registered with the authorization server.

              o Not include a fragment component.

              See OAuth 2.0 - Redirection Endpoint .

              Amazon   Cognito   requires   HTTPS   over   HTTP   except   for
              http://localhost for testing purposes only.

              App callback URLs such as myapp://example are also supported.

          AllowedOAuthFlows -> (list)
              The allowed OAuth flows.

              Set  to  code  to  initiate a code grant flow, which provides an
              authorization code as the response. This code can  be  exchanged
              for access tokens with the token endpoint.

              Set to implicit to specify that the client should get the access
              token (and, optionally, ID token, based on scopes) directly.

              Set to client_credentials to specify that the client should  get
              the  access  token  (and, optionally, ID token, based on scopes)
              from the token  endpoint  using  a  combination  of  client  and
              client_secret.

              (string)

          AllowedOAuthScopes -> (list)
              The allowed OAuth scopes. Possible values provided by OAuth are:
              phone , email , openid , and profile . Possible values  provided
              by Amazon Web Services are: aws.cognito.signin.user.admin . Cus-
              tom scopes created in Resource Servers are also supported.

              (string)

          AllowedOAuthFlowsUserPoolClient -> (boolean)
              Set to true if the client is allowed to follow the OAuth  proto-
              col when interacting with Cognito user pools.

          AnalyticsConfiguration -> (structure)
              The  Amazon  Pinpoint  analytics configuration for the user pool
              client.

              NOTE:
                 Cognito User Pools only supports  sending  events  to  Amazon
                 Pinpoint  projects  in  the  US  East (N. Virginia) us-east-1
                 Region, regardless of the  region  in  which  the  user  pool
                 resides.

              ApplicationId -> (string)
                 The application ID for an Amazon Pinpoint application.

              ApplicationArn -> (string)
                 The Amazon Resource Name (ARN) of an Amazon Pinpoint project.
                 You can use the Amazon Pinpoint project for Pinpoint integra-
                 tion  with  the  chosen User Pool Client. Amazon Cognito pub-
                 lishes events to the pinpoint project  declared  by  the  app
                 ARN.

              RoleArn -> (string)
                 The ARN of an IAM role that authorizes Amazon Cognito to pub-
                 lish events to Amazon Pinpoint analytics.

              ExternalId -> (string)
                 The external ID.

              UserDataShared -> (boolean)
                 If UserDataShared is true , Amazon Cognito will include  user
                 data in the events it publishes to Amazon Pinpoint analytics.

          PreventUserExistenceErrors -> (string)
              Use this setting  to  choose  which  errors  and  responses  are
              returned  by Cognito APIs during authentication, account confir-
              mation, and password recovery when the user does  not  exist  in
              the  user pool. When set to ENABLED and the user does not exist,
              authentication returns an error indicating either  the  username
              or password was incorrect, and account confirmation and password
              recovery return a response indicating a code was sent to a simu-
              lated destination. When set to LEGACY , those APIs will return a
              UserNotFoundException exception if the user does  not  exist  in
              the user pool.

              Valid values include:

              o ENABLED - This prevents user existence-related errors.

              o LEGACY  -  This  represents  the old behavior of Cognito where
                user existence related errors are not prevented.

              NOTE:
                 After February  15th  2020,  the  value  of  PreventUserExis-
                 tenceErrors  will  default  to ENABLED for newly created user
                 pool clients if no value is provided.

          EnableTokenRevocation -> (boolean)
              Indicates whether token revocation is enabled for the user  pool
              client. When you create a new user pool client, token revocation
              is enabled by  default.  For  more  information  about  revoking
              tokens, see RevokeToken .



                                                   DESCRIBE-USER-POOL-CLIENT()
