ADMIN-CREATE-USER()                                        ADMIN-CREATE-USER()



NAME
       admin-create-user -

DESCRIPTION
       Creates a new user in the specified user pool.

       If  MessageAction  is not set, the default is to send a welcome message
       via email or phone (SMS).

       NOTE:
          This action might generate an SMS text  message.  Starting  June  1,
          2021, U.S. telecom carriers require that you register an origination
          phone number before you can send SMS messages to U.S. phone numbers.
          If  you use SMS text messages in Amazon Cognito, you must register a
          phone number with Amazon Pinpoint . Cognito will use the the  regis-
          tered  number  automatically.  Otherwise,  Cognito  users  that must
          receive SMS messages might be unable  to  sign  up,  activate  their
          accounts, or sign in.

          If  you have never used SMS text messages with Amazon Cognito or any
          other Amazon Web Service, Amazon SNS might place your account in SMS
          sandbox. In * sandbox mode * , youll have limitations, such as send-
          ing messages to only verified phone numbers. After  testing  in  the
          sandbox  environment,  you  can move out of the SMS sandbox and into
          production. For more information, see SMS message settings for  Cog-
          nito User Pools in the Amazon Cognito Developer Guide .

       This message is based on a template that you configured in your call to
       create or update a  user  pool.  This  template  includes  your  custom
       sign-up instructions and placeholders for user name and temporary pass-
       word.

       Alternatively, you can call AdminCreateUser with SUPPRESS for the  Mes-
       sageAction parameter, and Amazon Cognito will not send any email.

       In  either  case,  the  user will be in the FORCE_CHANGE_PASSWORD state
       until they sign in and change their password.
          AdminCreateUser requires developer credentials.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            admin-create-user
          --user-pool-id <value>
          --username <value>
          [--user-attributes <value>]
          [--validation-data <value>]
          [--temporary-password <value>]
          [--force-alias-creation | --no-force-alias-creation]
          [--message-action <value>]
          [--desired-delivery-mediums <value>]
          [--client-metadata <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --user-pool-id (string)
          The user pool ID for the user pool where the user will be created.

       --username (string)
          The username for the user. Must be unique within the user pool. Must
          be  a  UTF-8  string between 1 and 128 characters. After the user is
          created, the username cannot be changed.

       --user-attributes (list)
          An array of  name-value  pairs  that  contain  user  attributes  and
          attribute  values to be set for the user to be created. You can cre-
          ate a user without specifying any attributes other than  Username  .
          However,  any attributes that you specify as required (when creating
          a user pool or in the Attributes tab of the console)  must  be  sup-
          plied  either  by  you  (in your call to AdminCreateUser ) or by the
          user (when he or she signs up in response to your welcome  message).

          For  custom  attributes,  you must prepend the custom: prefix to the
          attribute name.

          To send a message inviting the user to sign up, you must specify the
          user's  email address or phone number. This can be done in your call
          to AdminCreateUser or in the Users tab of the Amazon Cognito console
          for managing your user pools.

          In  your  call  to  AdminCreateUser , you can set the email_verified
          attribute to True  ,  and  you  can  set  the  phone_number_verified
          attribute   to   True   .   (You   can   also  do  this  by  calling
          AdminUpdateUserAttributes .)

          o email : The email address of the user to  whom  the  message  that
            contains  the  code  and  username  will  be sent. Required if the
            email_verified attribute is set to True , or if "EMAIL" is  speci-
            fied in the DesiredDeliveryMediums parameter.

          o phone_number  :  The  phone number of the user to whom the message
            that contains the code and username will be sent. Required if  the
            phone_number_verified  attribute  is  set to True , or if "SMS" is
            specified in the DesiredDeliveryMediums parameter.

          (structure)
              Specifies whether the attribute is standard or custom.

              Name -> (string)
                 The name of the attribute.

              Value -> (string)
                 The value of the attribute.

       Shorthand Syntax:

          Name=string,Value=string ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Value": "string"
            }
            ...
          ]

       --validation-data (list)
          The user's validation data. This is an  array  of  name-value  pairs
          that  contain  user attributes and attribute values that you can use
          for custom  validation,  such  as  restricting  the  types  of  user
          accounts  that  can  be registered. For example, you might choose to
          allow or disallow user sign-up based on the user's domain.

          To configure custom validation, you must create a Pre Sign-up Lambda
          trigger  for the user pool as described in the Amazon Cognito Devel-
          oper Guide. The Lambda trigger receives the validation data and uses
          it in the validation process.

          The user's validation data is not persisted.

          (structure)
              Specifies whether the attribute is standard or custom.

              Name -> (string)
                 The name of the attribute.

              Value -> (string)
                 The value of the attribute.

       Shorthand Syntax:

          Name=string,Value=string ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Value": "string"
            }
            ...
          ]

       --temporary-password (string)
          The  user's  temporary  password.  This password must conform to the
          password policy that you specified when you created the user pool.

          The temporary password is valid only once.  To  complete  the  Admin
          Create  User flow, the user must enter the temporary password in the
          sign-in page along with a new password to  be  used  in  all  future
          sign-ins.

          This  parameter is not required. If you do not specify a value, Ama-
          zon Cognito generates one for you.

          The temporary password can only be used until the user account expi-
          ration  limit  that you specified when you created the user pool. To
          reset the account after that time limit, you  must  call  AdminCrea-
          teUser again, specifying "RESEND" for the MessageAction parameter.

       --force-alias-creation | --no-force-alias-creation (boolean)
          This   parameter  is  only  used  if  the  phone_number_verified  or
          email_verified attribute is set to True . Otherwise, it is  ignored.

          If  this  parameter  is  set  to  True and the phone number or email
          address specified in the UserAttributes parameter already exists  as
          an  alias with a different user, the API call will migrate the alias
          from the previous user to the newly created user. The previous  user
          will no longer be able to log in using that alias.

          If this parameter is set to False , the API throws an AliasExistsEx-
          ception error if the alias already  exists.  The  default  value  is
          False .

       --message-action (string)
          Set  to  "RESEND"  to  resend  the invitation message to a user that
          already exists and reset the expiration limit on the user's account.
          Set  to  "SUPPRESS"  to suppress sending the message. Only one value
          can be specified.

          Possible values:

          o RESEND

          o SUPPRESS

       --desired-delivery-mediums (list)
          Specify "EMAIL" if email will be used to send the  welcome  message.
          Specify "SMS" if the phone number will be used. The default value is
          "SMS" . More than one value can be specified.

          (string)

       Syntax:

          "string" "string" ...

          Where valid values are:
            SMS
            EMAIL

       --client-metadata (map)
          A map of custom key-value pairs that you can provide  as  input  for
          any custom workflows that this action triggers.

          You  create  custom  workflows by assigning Lambda functions to user
          pool triggers. When you use the AdminCreateUser API  action,  Amazon
          Cognito  invokes  the  function  that is assigned to the pre sign-up
          trigger. When Amazon Cognito invokes this function, it passes a JSON
          payload, which the function receives as input. This payload contains
          a  clientMetadata  attribute,  which  provides  the  data  that  you
          assigned  to  the  ClientMetadata  parameter in your AdminCreateUser
          request. In your function  code  in  Lambda,  you  can  process  the
          clientMetadata  value  to  enhance  your  workflow for your specific
          needs.

          For more information,  see  Customizing  User  Pool  Workflows  with
          Lambda Triggers in the Amazon Cognito Developer Guide .

          NOTE:
              Take  the  following limitations into consideration when you use
              the ClientMetadata parameter:

              o Amazon Cognito does not store the ClientMetadata  value.  This
                data is available only to Lambda triggers that are assigned to
                a user pool to support custom workflows.  If  your  user  pool
                configuration  does  not  include triggers, the ClientMetadata
                parameter serves no purpose.

              o Amazon Cognito does not validate the ClientMetadata value.

              o Amazon Cognito does not encrypt the the ClientMetadata  value,
                so don't use it to provide sensitive information.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a user

       The  following admin-create-user example creates a user with the speci-
       fied settings email address and phone number.

          aws cognito-idp admin-create-user \
              --user-pool-id us-west-2_aaaaaaaaa \
              --username diego@example.com \
              --user-attributes Name=email,Value=kermit2@somewhere.com Name=phone_number,Value="+15555551212" \
              --message-action SUPPRESS

       Output:

          {
              "User": {
                  "Username": "7325c1de-b05b-4f84-b321-9adc6e61f4a2",
                  "Enabled": true,
                  "UserStatus": "FORCE_CHANGE_PASSWORD",
                  "UserCreateDate": 1548099495.428,
                  "UserLastModifiedDate": 1548099495.428,
                  "Attributes": [
                      {
                          "Name": "sub",
                          "Value": "7325c1de-b05b-4f84-b321-9adc6e61f4a2"
                      },
                      {
                          "Name": "phone_number",
                          "Value": "+15555551212"
                      },
                      {
                          "Name": "email",
                          "Value": "diego@example.com"
                      }
                  ]
              }
          }

OUTPUT
       User -> (structure)
          The newly created user.

          Username -> (string)
              The user name of the user you wish to describe.

          Attributes -> (list)
              A container with information about the user type attributes.

              (structure)
                 Specifies whether the attribute is standard or custom.

                 Name -> (string)
                     The name of the attribute.

                 Value -> (string)
                     The value of the attribute.

          UserCreateDate -> (timestamp)
              The creation date of the user.

          UserLastModifiedDate -> (timestamp)
              The last modified date of the user.

          Enabled -> (boolean)
              Specifies whether the user is enabled.

          UserStatus -> (string)
              The user status. Can be one of the following:

              o UNCONFIRMED - User has been created but not confirmed.

              o CONFIRMED - User has been confirmed.

              o ARCHIVED - User is no longer active.

              o COMPROMISED - User is disabled due  to  a  potential  security
                threat.

              o UNKNOWN - User status is not known.

              o RESET_REQUIRED  - User is confirmed, but the user must request
                a code and reset his or her password before he or she can sign
                in.

              o FORCE_CHANGE_PASSWORD - The user is confirmed and the user can
                sign in using a temporary password, but on first sign-in,  the
                user  must  change  his  or her password to a new value before
                doing anything else.

          MFAOptions -> (list)
              The MFA options for the user.

              (structure)
                     This data type is no longer supported.  You  can  use  it
                     only  for  SMS  MFA  configurations. You can't use it for
                     TOTP software token MFA configurations.

                 DeliveryMedium -> (string)
                     The delivery medium to send the MFA  code.  You  can  use
                     this parameter to set only the SMS delivery medium value.

                 AttributeName -> (string)
                     The attribute name of the MFA option type. The only valid
                     value is phone_number .



                                                           ADMIN-CREATE-USER()
