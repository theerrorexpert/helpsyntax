ADMIN-RESPOND-TO-AUTH-CHALLENGE()            ADMIN-RESPOND-TO-AUTH-CHALLENGE()



NAME
       admin-respond-to-auth-challenge -

DESCRIPTION
       Responds to an authentication challenge, as an administrator.

       NOTE:
          This  action  might  generate  an SMS text message. Starting June 1,
          2021, U.S. telecom carriers require that you register an origination
          phone number before you can send SMS messages to U.S. phone numbers.
          If you use SMS text messages in Amazon Cognito, you must register  a
          phone  number with Amazon Pinpoint . Cognito will use the the regis-
          tered number  automatically.  Otherwise,  Cognito  users  that  must
          receive  SMS  messages  might  be  unable to sign up, activate their
          accounts, or sign in.

          If you have never used SMS text messages with Amazon Cognito or  any
          other Amazon Web Service, Amazon SNS might place your account in SMS
          sandbox. In * sandbox mode * , youll have limitations, such as send-
          ing  messages  to  only verified phone numbers. After testing in the
          sandbox environment, you can move out of the SMS  sandbox  and  into
          production.  For more information, see SMS message settings for Cog-
          nito User Pools in the Amazon Cognito Developer Guide .

       Calling this action requires developer credentials.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            admin-respond-to-auth-challenge
          --user-pool-id <value>
          --client-id <value>
          --challenge-name <value>
          [--challenge-responses <value>]
          [--session <value>]
          [--analytics-metadata <value>]
          [--context-data <value>]
          [--client-metadata <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --user-pool-id (string)
          The ID of the Amazon Cognito user pool.

       --client-id (string)
          The app client ID.

       --challenge-name (string)
          The challenge name. For more information, see AdminInitiateAuth .

          Possible values:

          o SMS_MFA

          o SOFTWARE_TOKEN_MFA

          o SELECT_MFA_TYPE

          o MFA_SETUP

          o PASSWORD_VERIFIER

          o CUSTOM_CHALLENGE

          o DEVICE_SRP_AUTH

          o DEVICE_PASSWORD_VERIFIER

          o ADMIN_NO_SRP_AUTH

          o NEW_PASSWORD_REQUIRED

       --challenge-responses (map)
          The challenge responses. These are inputs corresponding to the value
          of ChallengeName , for example:

          o SMS_MFA  : SMS_MFA_CODE , USERNAME , SECRET_HASH (if app client is
            configured with client secret).

          o PASSWORD_VERIFIER    :    PASSWORD_CLAIM_SIGNATURE     ,     PASS-
            WORD_CLAIM_SECRET_BLOCK  ,  TIMESTAMP , USERNAME , SECRET_HASH (if
            app client is configured with client secret).

          o ADMIN_NO_SRP_AUTH : PASSWORD ,  USERNAME  ,  SECRET_HASH  (if  app
            client is configured with client secret).

          o NEW_PASSWORD_REQUIRED   :   NEW_PASSWORD   ,  any  other  required
            attributes, USERNAME , SECRET_HASH (if app  client  is  configured
            with client secret).

          o MFA_SETUP  requires  USERNAME  ,  plus you need to use the session
            value returned by VerifySoftwareToken in the Session parameter.

          The value of the USERNAME attribute must be the user's actual  user-
          name,  not an alias (such as email address or phone number). To make
          this easier, the  AdminInitiateAuth  response  includes  the  actual
          username value in the USERNAMEUSER_ID_FOR_SRP attribute, even if you
          specified an alias in your call to AdminInitiateAuth .

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --session (string)
          The session which should be passed both ways  in  challenge-response
          calls  to the service. If InitiateAuth or RespondToAuthChallenge API
          call determines that the caller needs to go  through  another  chal-
          lenge,  they  return a session with other challenge parameters. This
          session should be passed as it is to the next RespondToAuthChallenge
          API call.

       --analytics-metadata (structure)
          The  analytics  metadata  for collecting Amazon Pinpoint metrics for
          AdminRespondToAuthChallenge calls.

          AnalyticsEndpointId -> (string)
              The endpoint ID.

       Shorthand Syntax:

          AnalyticsEndpointId=string

       JSON Syntax:

          {
            "AnalyticsEndpointId": "string"
          }

       --context-data (structure)
          Contextual data such as the user's device fingerprint,  IP  address,
          or  location  used for evaluating the risk of an unexpected event by
          Amazon Cognito advanced security.

          IpAddress -> (string)
              Source IP address of your user.

          ServerName -> (string)
              Your server endpoint where this API is invoked.

          ServerPath -> (string)
              Your server path where this API is invoked.

          HttpHeaders -> (list)
              HttpHeaders received on your server in same order.

              (structure)
                 The HTTP header.

                 headerName -> (string)
                     The header name

                 headerValue -> (string)
                     The header value.

          EncodedData -> (string)
              Encoded data containing device fingerprinting details, collected
              using the Amazon Cognito context data collection library.

       Shorthand Syntax:

          IpAddress=string,ServerName=string,ServerPath=string,HttpHeaders=[{headerName=string,headerValue=string},{headerName=string,headerValue=string}],EncodedData=string

       JSON Syntax:

          {
            "IpAddress": "string",
            "ServerName": "string",
            "ServerPath": "string",
            "HttpHeaders": [
              {
                "headerName": "string",
                "headerValue": "string"
              }
              ...
            ],
            "EncodedData": "string"
          }

       --client-metadata (map)
          A  map  of  custom key-value pairs that you can provide as input for
          any custom workflows that this action triggers.

          You create custom workflows by assigning Lambda  functions  to  user
          pool  triggers.  When  you  use  the AdminRespondToAuthChallenge API
          action, Amazon Cognito invokes any functions that  are  assigned  to
          the  following triggers: pre sign-up , custom message , post authen-
          tication , user migration , pre token generation , define auth chal-
          lenge , create auth challenge , and verify auth challenge response .
          When Amazon Cognito invokes any of these functions, it passes a JSON
          payload, which the function receives as input. This payload contains
          a  clientMetadata  attribute,  which  provides  the  data  that  you
          assigned  to  the ClientMetadata parameter in your AdminRespondToAu-
          thChallenge request. In  your  function  code  in  Lambda,  you  can
          process  the  clientMetadata value to enhance your workflow for your
          specific needs.

          For more information,  see  Customizing  User  Pool  Workflows  with
          Lambda Triggers in the Amazon Cognito Developer Guide .

          NOTE:
              Take  the  following limitations into consideration when you use
              the ClientMetadata parameter:

              o Amazon Cognito does not store the ClientMetadata  value.  This
                data is available only to Lambda triggers that are assigned to
                a user pool to support custom workflows.  If  your  user  pool
                configuration  does  not  include triggers, the ClientMetadata
                parameter serves no purpose.

              o Amazon Cognito does not validate the ClientMetadata value.

              o Amazon Cognito does not encrypt the the ClientMetadata  value,
                so don't use it to provide sensitive information.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       ChallengeName -> (string)
          The   name   of   the   challenge.   For   more   information,   see
          AdminInitiateAuth .

       Session -> (string)
          The session which should be passed both ways  in  challenge-response
          calls  to  the  service.  If  the caller needs to go through another
          challenge, they return a session with  other  challenge  parameters.
          This  session  should  be  passed  as it is to the next RespondToAu-
          thChallenge API call.

       ChallengeParameters -> (map)
          The   challenge    parameters.    For    more    information,    see
          AdminInitiateAuth .

          key -> (string)

          value -> (string)

       AuthenticationResult -> (structure)
          The  result returned by the server in response to the authentication
          request.

          AccessToken -> (string)
              The access token.

          ExpiresIn -> (integer)
              The expiration period of the authentication result in seconds.

          TokenType -> (string)
              The token type.

          RefreshToken -> (string)
              The refresh token.

          IdToken -> (string)
              The ID token.

          NewDeviceMetadata -> (structure)
              The new device metadata from an authentication result.

              DeviceKey -> (string)
                 The device key.

              DeviceGroupKey -> (string)
                 The device group key.



                                             ADMIN-RESPOND-TO-AUTH-CHALLENGE()
