GET-DOCUMENT-ANALYSIS()                                GET-DOCUMENT-ANALYSIS()



NAME
       get-document-analysis -

DESCRIPTION
       Gets  the  results  for  an Amazon Textract asynchronous operation that
       analyzes text in a document.

       You start asynchronous text analysis by calling   StartDocumentAnalysis
       , which returns a job identifier (JobId ). When the text analysis oper-
       ation finishes, Amazon Textract publishes a completion  status  to  the
       Amazon Simple Notification Service (Amazon SNS) topic that's registered
       in the initial call to StartDocumentAnalysis . To get  the  results  of
       the  text-detection  operation,  first check that the status value pub-
       lished to the Amazon SNS topic is SUCCEEDED . If so, call  GetDocument-
       Analysis  ,  and pass the job identifier (JobId ) from the initial call
       to StartDocumentAnalysis .
          GetDocumentAnalysis returns an array of  Block objects. The  follow-
          ing types of information are returned:

       o Form  data  (key-value pairs). The related information is returned in
         two  Block objects, each of type KEY_VALUE_SET : a KEY  Block  object
         and  a VALUE Block object. For example, Name: Ana Silva Carolina con-
         tains a key and value. Name: is the key. Ana Silva  Carolina  is  the
         value.

       o Table  and table cell data. A TABLE Block object contains information
         about a detected table. A CELL Block object is returned for each cell
         in a table.

       o Lines  and  words  of  text. A LINE Block object contains one or more
         WORD Block objects. All lines and words that are detected in the doc-
         ument  are  returned (including text that doesn't have a relationship
         with the  value  of  the  StartDocumentAnalysis   FeatureTypes  input
         parameter).

       Selection  elements  such as check boxes and option buttons (radio but-
       tons) can be detected in form data and in tables.  A  SELECTION_ELEMENT
       Block  object contains information about a selection element, including
       the selection status.

       Use the MaxResults parameter to limit the number  of  blocks  that  are
       returned.  If there are more results than specified in MaxResults , the
       value of NextToken in the  operation  response  contains  a  pagination
       token  for  getting  the  next  set of results. To get the next page of
       results, call GetDocumentAnalysis , and populate the NextToken  request
       parameter  with  the token value that's returned from the previous call
       to GetDocumentAnalysis .

       For more information, see Document Text Analysis .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-document-analysis
          --job-id <value>
          [--max-results <value>]
          [--next-token <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --job-id (string)
          A unique  identifier  for  the  text-detection  job.  The  JobId  is
          returned  from  StartDocumentAnalysis  . A JobId value is only valid
          for 7 days.

       --max-results (integer)
          The maximum number of results to  return  per  paginated  call.  The
          largest  value that you can specify is 1,000. If you specify a value
          greater than 1,000, a maximum of  1,000  results  is  returned.  The
          default value is 1,000.

       --next-token (string)
          If  the  previous  response  was  incomplete (because there are more
          blocks to retrieve), Amazon Textract returns a pagination  token  in
          the response. You can use this pagination token to retrieve the next
          set of blocks.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To get the results of asynchronous text analysis of a multi-page  docu-
       ment

       The  following  get-document-analysis  example  shows  how  to  get the
       results of asynchronous text analysis of a multi-page document.

          aws textract get-document-analysis \
              --job-id df7cf32ebbd2a5de113535fcf4d921926a701b09b4e7d089f3aebadb41e0712b \
              --max-results 1000

       Output:

          {
              "Blocks": [
                  {
                      "Geometry": {
                          "BoundingBox": {
                              "Width": 1.0,
                              "Top": 0.0,
                              "Left": 0.0,
                              "Height": 1.0
                          },
                          "Polygon": [
                              {
                                  "Y": 0.0,
                                  "X": 0.0
                              },
                              {
                                  "Y": 0.0,
                                  "X": 1.0
                              },
                              {
                                  "Y": 1.0,
                                  "X": 1.0
                              },
                              {
                                  "Y": 1.0,
                                  "X": 0.0
                              }
                          ]
                      },
                      "Relationships": [
                          {
                              "Type": "CHILD",
                              "Ids": [
                                  "75966e64-81c2-4540-9649-d66ec341cd8f",
                                  "bb099c24-8282-464c-a179-8a9fa0a057f0",
                                  "5ebf522d-f9e4-4dc7-bfae-a288dc094595"
                              ]
                          }
                      ],
                      "BlockType": "PAGE",
                      "Id": "247c28ee-b63d-4aeb-9af0-5f7ea8ba109e",
                      "Page": 1
                  }
              ],
              "NextToken": "cY1W3eTFvoB0cH7YrKVudI4Gb0H8J0xAYLo8xI/JunCIPWCthaKQ+07n/ElyutsSy0+1VOImoTRmP1zw4P0RFtaeV9Bzhnfedpx1YqwB4xaGDA==",
              "DocumentMetadata": {
                  "Pages": 1
              },
              "JobStatus": "SUCCEEDED"
          }

       For more information, see Detecting and Analyzing  Text  in  Multi-Page
       Documents in the Amazon Textract Developers Guide

OUTPUT
       DocumentMetadata -> (structure)
          Information  about  a document that Amazon Textract processed. Docu-
          mentMetadata is returned in every page of paginated  responses  from
          an Amazon Textract video operation.

          Pages -> (integer)
              The number of pages that are detected in the document.

       JobStatus -> (string)
          The current status of the text detection job.

       NextToken -> (string)
          If  the  response  is truncated, Amazon Textract returns this token.
          You can use this token in the subsequent  request  to  retrieve  the
          next set of text detection results.

       Blocks -> (list)
          The results of the text-analysis operation.

          (structure)
              A  Block  represents  items  that  are  recognized in a document
              within a group of pixels close to each  other.  The  information
              returned  in a Block object depends on the type of operation. In
              text detection for documents (for example  DetectDocumentText ),
              you  get information about the detected words and lines of text.
              In text analysis (for example  AnalyzeDocument ), you  can  also
              get information about the fields, tables, and selection elements
              that are detected in the document.

              An array of Block objects is returned by  both  synchronous  and
              asynchronous  operations.  In  synchronous  operations,  such as
              DetectDocumentText , the array of Block objects  is  the  entire
              set of results. In asynchronous operations, such as  GetDocumen-
              tAnalysis , the array is returned over one or more responses.

              For more information, see How Amazon Textract Works .

              BlockType -> (string)
                 The type of text item that's recognized.  In  operations  for
                 text detection, the following types are returned:

                 o PAGE  -  Contains a list of the LINE Block objects that are
                   detected on a document page.

                 o WORD - A word detected on a document page. A word is one or
                   more  ISO  basic  Latin script characters that aren't sepa-
                   rated by spaces.

                 o LINE - A string of tab-delimited, contiguous words that are
                   detected on a document page.

                 In   text   analysis  operations,  the  following  types  are
                 returned:

                 o PAGE - Contains a list of  child  Block  objects  that  are
                   detected on a document page.

                 o KEY_VALUE_SET  - Stores the KEY and VALUE Block objects for
                   linked text that's detected on a  document  page.  Use  the
                   EntityType  field to determine if a KEY_VALUE_SET object is
                   a KEY Block object or a VALUE Block object.

                 o WORD - A word that's detected on a document page. A word is
                   one  or  more ISO basic Latin script characters that aren't
                   separated by spaces.

                 o LINE - A string of tab-delimited, contiguous words that are
                   detected on a document page.

                 o TABLE - A table that's detected on a document page. A table
                   is grid-based information with two or more rows or columns,
                   with a cell span of one row and one column each.

                 o CELL - A cell within a detected table. The cell is the par-
                   ent of the block that contains the text in the cell.

                 o SELECTION_ELEMENT - A selection element such as  an  option
                   button  (radio  button) or a check box that's detected on a
                   document page. Use the value of SelectionStatus  to  deter-
                   mine the status of the selection element.

              Confidence -> (float)
                 The confidence score that Amazon Textract has in the accuracy
                 of the recognized text  and  the  accuracy  of  the  geometry
                 points around the recognized text.

              Text -> (string)
                 The  word  or  line  of text that's recognized by Amazon Tex-
                 tract.

              TextType -> (string)
                 The kind of text that Amazon Textract has detected. Can check
                 for handwritten text and printed text.

              RowIndex -> (integer)
                 The row in which a table cell is located. The first row posi-
                 tion is 1. RowIndex isn't returned by DetectDocumentText  and
                 GetDocumentTextDetection .

              ColumnIndex -> (integer)
                 The  column  in  which a table cell appears. The first column
                 position is 1. ColumnIndex isn't returned by  DetectDocument-
                 Text and GetDocumentTextDetection .

              RowSpan -> (integer)
                 The  number  of  rows that a table cell spans. Currently this
                 value is always 1, even if the  number  of  rows  spanned  is
                 greater  than 1. RowSpan isn't returned by DetectDocumentText
                 and GetDocumentTextDetection .

              ColumnSpan -> (integer)
                 The number of columns that a table cell spans. Currently this
                 value  is  always 1, even if the number of columns spanned is
                 greater than 1. ColumnSpan isn't returned by  DetectDocument-
                 Text and GetDocumentTextDetection .

              Geometry -> (structure)
                 The location of the recognized text on the image. It includes
                 an axis-aligned, coarse bounding box that surrounds the text,
                 and  a finer-grain polygon for more accurate spatial informa-
                 tion.

                 BoundingBox -> (structure)
                     An axis-aligned coarse representation of the location  of
                     the recognized item on the document page.

                     Width -> (float)
                        The  width of the bounding box as a ratio of the over-
                        all document page width.

                     Height -> (float)
                        The height of the bounding box as a ratio of the over-
                        all document page height.

                     Left -> (float)
                        The  left coordinate of the bounding box as a ratio of
                        overall document page width.

                     Top -> (float)
                        The top coordinate of the bounding box as a  ratio  of
                        overall document page height.

                 Polygon -> (list)
                     Within  the  bounding  box, a fine-grained polygon around
                     the recognized item.

                     (structure)
                        The X and Y coordinates of a point on a document page.
                        The X and Y values that are returned are ratios of the
                        overall document page size. For example, if the  input
                        document  is 700 x 200 and the operation returns X=0.5
                        and Y=0.25, then the point is at  the  (350,50)  pixel
                        coordinate on the document page.

                        An  array  of  Point objects, Polygon , is returned by
                        DetectDocumentText . Polygon represents a fine-grained
                        polygon  around  detected  text. For more information,
                        see Geometry in the Amazon Textract Developer Guide.

                        X -> (float)
                            The value of the X coordinate for  a  point  on  a
                            Polygon .

                        Y -> (float)
                            The  value  of  the  Y coordinate for a point on a
                            Polygon .

              Id -> (string)
                 The identifier for the recognized  text.  The  identifier  is
                 only unique for a single operation.

              Relationships -> (list)
                 A  list  of child blocks of the current block. For example, a
                 LINE object has child blocks for each WORD block that's  part
                 of the line of text. There aren't Relationship objects in the
                 list for relationships that don't exist,  such  as  when  the
                 current  block  has no child blocks. The list size can be the
                 following:

                 o 0 - The block has no child blocks.

                 o 1 - The block has child blocks.

                 (structure)
                     Information about how blocks are related to each other. A
                     Block  object  contains  0  or more Relation objects in a
                     list, Relationships . For more information, see  Block  .

                     The  Type  element  provides the type of the relationship
                     for all blocks in the IDs array.

                     Type -> (string)
                        The type of relationship that the blocks  in  the  IDs
                        array  have  with  the current block. The relationship
                        can be VALUE or CHILD . A relationship of  type  VALUE
                        is  a  list  that  contains  the ID of the VALUE block
                        that's associated with the KEY of a key-value pair.  A
                        relationship of type CHILD is a list of IDs that iden-
                        tify WORD blocks in the case of lines Cell  blocks  in
                        the  case  of  Tables,  and WORD blocks in the case of
                        Selection Elements.

                     Ids -> (list)
                        An array of IDs for related blocks. You  can  get  the
                        type of the relationship from the Type element.

                        (string)

              EntityTypes -> (list)
                 The type of entity. The following can be returned:

                 o KEY - An identifier for a field on the document.

                 o VALUE - The field text.
                     EntityTypes isn't returned by DetectDocumentText and Get-
                     DocumentTextDetection .

                 (string)

              SelectionStatus -> (string)
                 The selection status of  a  selection  element,  such  as  an
                 option button or check box.

              Page -> (integer)
                 The  page  on which a block was detected. Page is returned by
                 asynchronous operations. Page values greater than 1 are  only
                 returned for multipage documents that are in PDF or TIFF for-
                 mat. A scanned image (JPEG/PNG), even if it contains multiple
                 document  pages,  is considered to be a single-page document.
                 The value of Page is always 1. Synchronous  operations  don't
                 return  Page because every input document is considered to be
                 a single-page document.

       Warnings -> (list)
          A list of warnings that occurred during the document-analysis opera-
          tion.

          (structure)
              A  warning about an issue that occurred during asynchronous text
              analysis ( StartDocumentAnalysis ) or asynchronous document text
              detection ( StartDocumentTextDetection ).

              ErrorCode -> (string)
                 The error code for the warning.

              Pages -> (list)
                 A list of the pages that the warning applies to.

                 (integer)

       StatusMessage -> (string)
          Returns if the detection job could not be completed. Contains expla-
          nation for what error occured.

       AnalyzeDocumentModelVersion -> (string)



                                                       GET-DOCUMENT-ANALYSIS()
