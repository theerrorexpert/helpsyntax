START-DOCUMENT-TEXT-DETECTION()                START-DOCUMENT-TEXT-DETECTION()



NAME
       start-document-text-detection -

DESCRIPTION
       Starts  the  asynchronous  detection of text in a document. Amazon Tex-
       tract can detect lines of text and the words that make  up  a  line  of
       text.
          StartDocumentTextDetection can analyze text in documents that are in
          JPEG, PNG, TIFF, and PDF format. The documents are stored in an Ama-
          zon  S3 bucket. Use  DocumentLocation to specify the bucket name and
          file name of the document.

          StartTextDetection returns a job identifier (JobId ) that you use to
          get  the  results of the operation. When text detection is finished,
          Amazon Textract publishes a completion status to the  Amazon  Simple
          Notification  Service (Amazon SNS) topic that you specify in Notifi-
          cationChannel . To get the results of the text detection  operation,
          first  check that the status value published to the Amazon SNS topic
          is SUCCEEDED . If so, call  GetDocumentTextDetection , and pass  the
          job  identifier  (JobId  )  from  the initial call to StartDocument-
          TextDetection .

       For more information, see Document Text Detection .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            start-document-text-detection
          --document-location <value>
          [--client-request-token <value>]
          [--job-tag <value>]
          [--notification-channel <value>]
          [--output-config <value>]
          [--kms-key-id <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --document-location (structure)
          The location of the document to be processed.

          S3Object -> (structure)
              The Amazon S3 bucket that contains the input document.

              Bucket -> (string)
                 The name of the S3 bucket. Note that the # character  is  not
                 valid in the file name.

              Name -> (string)
                 The  file  name of the input document. Synchronous operations
                 can use image files that are in JPEG or PNG format. Asynchro-
                 nous operations also support PDF and TIFF format files.

              Version -> (string)
                 If  the  bucket  has  versioning enabled, you can specify the
                 object version.

       Shorthand Syntax:

          S3Object={Bucket=string,Name=string,Version=string}

       JSON Syntax:

          {
            "S3Object": {
              "Bucket": "string",
              "Name": "string",
              "Version": "string"
            }
          }

       --client-request-token (string)
          The idempotent token that's used to identify the start  request.  If
          you  use  the  same  token  with multiple StartDocumentTextDetection
          requests, the same JobId is returned. Use ClientRequestToken to pre-
          vent  the  same  job from being accidentally started more than once.
          For more information, see Calling Amazon Textract Asynchronous Oper-
          ations .

       --job-tag (string)
          An  identifier  that  you  specify that's included in the completion
          notification published to the Amazon SNS topic. For example, you can
          use  JobTag  to  identify  the  type of document that the completion
          notification corresponds to (such as a tax form or a receipt).

       --notification-channel (structure)
          The Amazon SNS topic ARN that you want Amazon  Textract  to  publish
          the completion status of the operation to.

          SNSTopicArn -> (string)
              The  Amazon  SNS topic that Amazon Textract posts the completion
              status to.

          RoleArn -> (string)
              The Amazon Resource Name (ARN) of an IAM role that gives  Amazon
              Textract publishing permissions to the Amazon SNS topic.

       Shorthand Syntax:

          SNSTopicArn=string,RoleArn=string

       JSON Syntax:

          {
            "SNSTopicArn": "string",
            "RoleArn": "string"
          }

       --output-config (structure)
          Sets  if the output will go to a customer defined bucket. By default
          Amazon Textract will save the results internally to be accessed with
          the GetDocumentTextDetection operation.

          S3Bucket -> (string)
              The name of the bucket your output will go to.

          S3Prefix -> (string)
              The  prefix  of the object key that the output will be saved to.
              When not enabled, the prefix will be textract_output".

       Shorthand Syntax:

          S3Bucket=string,S3Prefix=string

       JSON Syntax:

          {
            "S3Bucket": "string",
            "S3Prefix": "string"
          }

       --kms-key-id (string)
          The KMS key used to encrypt the inference results. This  can  be  in
          either  Key  ID or Key Alias format. When a KMS key is provided, the
          KMS key will be used for server-side encryption of  the  objects  in
          the  customer bucket. When this parameter is not enabled, the result
          will be encrypted server side,using SSE-S3.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To start detecting text in a multi-page document

       The following start-document-text-detection example shows how to  start
       asynchronous detection of text in a multi-page document.

       Linux/macOS:

          aws textract start-document-text-detection \
                  --document-location '{"S3Object":{"Bucket":"bucket","Name":"document"}}' \
                  --notification-channel "SNSTopicArn=arn:snsTopic,RoleArn=roleARN"

       Windows:

          aws textract start-document-text-detection \
              --document-location "{\"S3Object\":{\"Bucket\":\"bucket\",\"Name\":\"document\"}}" \
              --region region-name \
              --notification-channel "SNSTopicArn=arn:snsTopic,RoleArn=roleArn"

       Output:

          {
              "JobId": "57849a3dc627d4df74123dca269d69f7b89329c870c65bb16c9fd63409d200b9"
          }

       For  more  information,  see Detecting and Analyzing Text in Multi-Page
       Documents in the Amazon Textract Developers Guide

OUTPUT
       JobId -> (string)
          The identifier of the text detection job for the document. Use JobId
          to identify the job in a subsequent call to GetDocumentTextDetection
          . A JobId value is only valid for 7 days.



                                               START-DOCUMENT-TEXT-DETECTION()
