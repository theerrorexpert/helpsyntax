CREATE-LOAD-BALANCER()                                  CREATE-LOAD-BALANCER()



NAME
       create-load-balancer -

DESCRIPTION
       Creates a Classic Load Balancer.

       You can add listeners, security groups, subnets, and tags when you cre-
       ate your load balancer, or you can add them later using  CreateLoadBal-
       ancerListeners  ,   ApplySecurityGroupsToLoadBalancer ,  AttachLoadBal-
       ancerToSubnets , and  AddTags .

       To describe your current load balancers, see   DescribeLoadBalancers  .
       When  you  are  finished  with a load balancer, you can delete it using
       DeleteLoadBalancer .

       You can create up to 20 load balancers per region per account. You  can
       request  an increase for the number of load balancers for your account.
       For more information, see Limits for Your Classic Load Balancer in  the
       Classic Load Balancers Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-load-balancer
          --load-balancer-name <value>
          --listeners <value>
          [--availability-zones <value>]
          [--subnets <value>]
          [--security-groups <value>]
          [--scheme <value>]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --load-balancer-name (string)
          The name of the load balancer.

          This  name  must be unique within your set of load balancers for the
          region, must have a maximum of  32  characters,  must  contain  only
          alphanumeric  characters  or hyphens, and cannot begin or end with a
          hyphen.

       --listeners (list)
          The listeners.

          For more information, see Listeners for Your Classic  Load  Balancer
          in the Classic Load Balancers Guide .

          (structure)
              Information about a listener.

              For  information  about the protocols and the ports supported by
              Elastic Load Balancing, see Listeners for Your Classic Load Bal-
              ancer in the Classic Load Balancers Guide .

              Protocol -> (string)
                 The  load  balancer  transport  protocol  to use for routing:
                 HTTP, HTTPS, TCP, or SSL.

              LoadBalancerPort -> (integer)
                 The port on which the load balancer is listening. On EC2-VPC,
                 you can specify any port from the range 1-65535. On EC2-Clas-
                 sic, you can specify any port from the  following  list:  25,
                 80, 443, 465, 587, 1024-65535.

              InstanceProtocol -> (string)
                 The  protocol  to use for routing traffic to instances: HTTP,
                 HTTPS, TCP, or SSL.

                 If the front-end protocol is TCP or SSL, the back-end  proto-
                 col  must be TCP or SSL. If the front-end protocol is HTTP or
                 HTTPS, the back-end protocol must be HTTP or HTTPS.

                 If there is another listener with the same InstancePort whose
                 InstanceProtocol  is  secure,  (HTTPS or SSL), the listener's
                 InstanceProtocol must also be secure.

                 If there is another listener with the same InstancePort whose
                 InstanceProtocol  is HTTP or TCP, the listener's InstancePro-
                 tocol must be HTTP or TCP.

              InstancePort -> (integer)
                 The port on which the instance is listening.

              SSLCertificateId -> (string)
                 The Amazon Resource Name (ARN) of the server certificate.

       Shorthand Syntax:

          Protocol=string,LoadBalancerPort=integer,InstanceProtocol=string,InstancePort=integer,SSLCertificateId=string ...

       JSON Syntax:

          [
            {
              "Protocol": "string",
              "LoadBalancerPort": integer,
              "InstanceProtocol": "string",
              "InstancePort": integer,
              "SSLCertificateId": "string"
            }
            ...
          ]

       --availability-zones (list)
          One or more Availability Zones from the same region as the load bal-
          ancer.

          You must specify at least one Availability Zone.

          You  can  add more Availability Zones after you create the load bal-
          ancer using  EnableAvailabilityZonesForLoadBalancer .

          (string)

       Syntax:

          "string" "string" ...

       --subnets (list)
          The IDs of the subnets in your VPC to attach to the  load  balancer.
          Specify  one subnet per Availability Zone specified in Availability-
          Zones .

          (string)

       Syntax:

          "string" "string" ...

       --security-groups (list)
          The IDs of the security groups to assign to the load balancer.

          (string)

       Syntax:

          "string" "string" ...

       --scheme (string)
          The type of a load balancer. Valid only for load balancers in a VPC.

          By  default,  Elastic Load Balancing creates an Internet-facing load
          balancer with a DNS name that resolves to public IP  addresses.  For
          more  information about Internet-facing and Internal load balancers,
          see Load Balancer Scheme in the Elastic Load Balancing User Guide  .

          Specify  internal  to  create  a  load balancer with a DNS name that
          resolves to private IP addresses.

       --tags (list)
          A list of tags to assign to the load balancer.

          For more information about tagging your load balancer, see Tag  Your
          Classic Load Balancer in the Classic Load Balancers Guide .

          (structure)
              Information about a tag.

              Key -> (string)
                 The key of the tag.

              Value -> (string)
                 The value of the tag.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create an HTTP load balancer

       This example creates a load balancer with an HTTP listener in a VPC.

       Command:

          aws elb create-load-balancer --load-balancer-name my-load-balancer --listeners "Protocol=HTTP,LoadBalancerPort=80,InstanceProtocol=HTTP,InstancePort=80" --subnets subnet-15aaab61 --security-groups sg-a61988c3

       Output:

          {
              "DNSName": "my-load-balancer-1234567890.us-west-2.elb.amazonaws.com"
          }

       This example creates a load balancer with an HTTP listener in EC2-Clas-
       sic.

       Command:

          aws elb create-load-balancer --load-balancer-name my-load-balancer --listeners "Protocol=HTTP,LoadBalancerPort=80,InstanceProtocol=HTTP,InstancePort=80" --availability-zones us-west-2a us-west-2b

       Output:

          {
              "DNSName": "my-load-balancer-123456789.us-west-2.elb.amazonaws.com"
          }

       To create an HTTPS load balancer

       This example creates a load balancer with an HTTPS listener in a VPC.

       Command:

          aws elb create-load-balancer --load-balancer-name my-load-balancer --listeners "Protocol=HTTP,LoadBalancerPort=80,InstanceProtocol=HTTP,InstancePort=80" "Protocol=HTTPS,LoadBalancerPort=443,InstanceProtocol=HTTP,InstancePort=80,SSLCertificateId=arn:aws:iam::123456789012:server-certificate/my-server-cert" --subnets subnet-15aaab61 --security-groups sg-a61988c3

       Output:

          {
              "DNSName": "my-load-balancer-1234567890.us-west-2.elb.amazonaws.com"
          }

       This example  creates  a  load  balancer  with  an  HTTPS  listener  in
       EC2-Classic.

       Command:

          aws elb create-load-balancer --load-balancer-name my-load-balancer --listeners "Protocol=HTTP,LoadBalancerPort=80,InstanceProtocol=HTTP,InstancePort=80" "Protocol=HTTPS,LoadBalancerPort=443,InstanceProtocol=HTTP,InstancePort=80,SSLCertificateId=arn:aws:iam::123456789012:server-certificate/my-server-cert" --availability-zones us-west-2a us-west-2b

       Output:

          {
              "DNSName": "my-load-balancer-123456789.us-west-2.elb.amazonaws.com"
          }

       To create an internal load balancer

       This example creates an internal load balancer with an HTTP listener in
       a VPC.

       Command:

          aws elb create-load-balancer --load-balancer-name my-load-balancer --listeners "Protocol=HTTP,LoadBalancerPort=80,InstanceProtocol=HTTP,InstancePort=80" --scheme internal --subnets subnet-a85db0df --security-groups sg-a61988c3

       Output:

          {
              "DNSName": "internal-my-load-balancer-123456789.us-west-2.elb.amazonaws.com"
          }

OUTPUT
       DNSName -> (string)
          The DNS name of the load balancer.



                                                        CREATE-LOAD-BALANCER()
