GET-ASSIGNMENT()                                              GET-ASSIGNMENT()



NAME
       get-assignment -

DESCRIPTION
       The  GetAssignment  operation  retrieves  the  details of the specified
       Assignment.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-assignment
          --assignment-id <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --assignment-id (string)
          The ID of the Assignment to be retrieved.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       Assignment -> (structure)
          The assignment. The response includes one Assignment element.

          AssignmentId -> (string)
              A unique identifier for the assignment.

          WorkerId -> (string)
              The ID of the Worker who accepted the HIT.

          HITId -> (string)
              The ID of the HIT.

          AssignmentStatus -> (string)
              The status of the assignment.

          AutoApprovalTime -> (timestamp)
              If results have been submitted, AutoApprovalTime is the date and
              time  the  results  of  the  assignment  results  are considered
              Approved automatically if they have not already been  explicitly
              approved  or  rejected  by  the Requester. This value is derived
              from the auto-approval delay specified by the Requester  in  the
              HIT. This value is omitted from the assignment if the Worker has
              not yet submitted results.

          AcceptTime -> (timestamp)
              The date and time the Worker accepted the assignment.

          SubmitTime -> (timestamp)
              If the Worker has submitted results, SubmitTime is the date  and
              time  the  assignment  was submitted. This value is omitted from
              the assignment if the Worker has not yet submitted results.

          ApprovalTime -> (timestamp)
              If the Worker  has  submitted  results  and  the  Requester  has
              approved  the  results,  ApprovalTime  is  the date and time the
              Requester approved the results. This value is omitted  from  the
              assignment if the Requester has not yet approved the results.

          RejectionTime -> (timestamp)
              If  the  Worker  has  submitted  results  and  the Requester has
              rejected the results, RejectionTime is the  date  and  time  the
              Requester rejected the results.

          Deadline -> (timestamp)
              The date and time of the deadline for the assignment. This value
              is derived from the deadline specification for the HIT  and  the
              date and time the Worker accepted the HIT.

          Answer -> (string)
              The  Worker's answers submitted for the HIT contained in a Ques-
              tionFormAnswers document, if the Worker provides an  answer.  If
              the  Worker  does  not provide any answers, Answer may contain a
              QuestionFormAnswers document, or Answer may be empty.

          RequesterFeedback -> (string)
              The feedback string included with the call to the ApproveAssign-
              ment   operation  or  the  RejectAssignment  operation,  if  the
              Requester approved or  rejected  the  assignment  and  specified
              feedback.

       HIT -> (structure)
          The  HIT  associated with this assignment. The response includes one
          HIT element.

          HITId -> (string)
              A unique identifier for the HIT.

          HITTypeId -> (string)
              The ID of the HIT type of this HIT

          HITGroupId -> (string)
              The ID of the HIT Group of this HIT.

          HITLayoutId -> (string)
              The ID of the HIT Layout of this HIT.

          CreationTime -> (timestamp)
              The date and time the HIT was created.

          Title -> (string)
              The title of the HIT.

          Description -> (string)
              A general description of the HIT.

          Question -> (string)
              The data the Worker completing the HIT uses produce the results.
              This  is either either a QuestionForm, HTMLQuestion or an Exter-
              nalQuestion data structure.

          Keywords -> (string)
              One or more words or phrases that describe the HIT, separated by
              commas.  Search  terms similar to the keywords of a HIT are more
              likely to have the HIT in the search results.

          HITStatus -> (string)
              The status of the HIT and its assignments. Valid Values are  As-
              signable | Unassignable | Reviewable | Reviewing | Disposed.

          MaxAssignments -> (integer)
              The number of times the HIT can be accepted and completed before
              the HIT becomes unavailable.

          Reward -> (string)
              A string representing a currency amount.

          AutoApprovalDelayInSeconds -> (long)
              The amount of time, in seconds,  after  the  Worker  submits  an
              assignment  for  the  HIT  that  the  results  are automatically
              approved by Amazon Mechanical Turk. This is the amount  of  time
              the  Requester has to reject an assignment submitted by a Worker
              before the assignment is auto-approved and the Worker is paid.

          Expiration -> (timestamp)
              The date and time the HIT expires.

          AssignmentDurationInSeconds -> (long)
              The length of time, in seconds, that a Worker  has  to  complete
              the HIT after accepting it.

          RequesterAnnotation -> (string)
              An  arbitrary  data  field the Requester who created the HIT can
              use. This field is visible only to the creator of the HIT.

          QualificationRequirements -> (list)
              Conditions that a Worker's Qualifications must meet in order  to
              accept  the  HIT. A HIT can have between zero and ten Qualifica-
              tion requirements. All requirements must be met in order  for  a
              Worker  to  accept  the  HIT. Additionally, other actions can be
              restricted using the ActionsGuarded field on each Qualification-
              Requirement structure.

              (structure)
                 The QualificationRequirement data structure describes a Qual-
                 ification that a  Worker  must  have  before  the  Worker  is
                 allowed  to  accept a HIT. A requirement may optionally state
                 that a Worker must have the Qualification in order to preview
                 the HIT, or see the HIT in search results.

                 QualificationTypeId -> (string)
                     The ID of the Qualification type for the requirement.

                 Comparator -> (string)
                     The  kind of comparison to make against a Qualification's
                     value. You can compare  a  Qualification's  value  to  an
                     IntegerValue to see if it is LessThan, LessThanOrEqualTo,
                     GreaterThan, GreaterThanOrEqualTo, EqualTo, or NotEqualTo
                     the  IntegerValue. You can compare it to a LocaleValue to
                     see if it is EqualTo, or NotEqualTo the LocaleValue.  You
                     can  check  to  see  if the value is In or NotIn a set of
                     IntegerValue or LocaleValue values. Lastly, a  Qualifica-
                     tion  requirement can also test if a Qualification Exists
                     or DoesNotExist in the user's profile, regardless of  its
                     value.

                 IntegerValues -> (list)
                     The  integer value to compare against the Qualification's
                     value. IntegerValue must not be present if Comparator  is
                     Exists  or DoesNotExist. IntegerValue can only be used if
                     the Qualification type has an integer value; it cannot be
                     used  with  the  Worker_Locale QualificationType ID. When
                     performing a set comparison by using the In or the  NotIn
                     comparator, you can use up to 15 IntegerValue elements in
                     a QualificationRequirement data structure.

                     (integer)

                 LocaleValues -> (list)
                     The locale value to compare against  the  Qualification's
                     value.  The  local value must be a valid ISO 3166 country
                     code or supports ISO 3166-2 subdivisions. LocaleValue can
                     only  be  used with a Worker_Locale QualificationType ID.
                     LocaleValue can only be  used  with  the  EqualTo,  NotE-
                     qualTo,  In,  and  NotIn comparators. You must only use a
                     single LocaleValue element  when  using  the  EqualTo  or
                     NotEqualTo  comparators. When performing a set comparison
                     by using the In or the NotIn comparator, you can  use  up
                     to  30 LocaleValue elements in a QualificationRequirement
                     data structure.

                     (structure)
                        The Locale data structure  represents  a  geographical
                        region or location.

                        Country -> (string)
                            The  country  of  the  locale. Must be a valid ISO
                            3166 country code. For example, the code US refers
                            to the United States of America.

                        Subdivision -> (string)
                            The  state  or  subdivision of the locale. A valid
                            ISO 3166-2 subdivision code. For example, the code
                            WA refers to the state of Washington.

                 RequiredToPreview -> (boolean)
                     DEPRECATED:  Use  the  ActionsGuarded  field  instead. If
                     RequiredToPreview is true, the question data for the  HIT
                     will  not  be shown when a Worker whose Qualifications do
                     not meet this requirement tries to preview the HIT.  That
                     is,  a  Worker's  Qualifications  must  meet  all  of the
                     requirements for which RequiredToPreview is true in order
                     to preview the HIT. If a Worker meets all of the require-
                     ments where RequiredToPreview is true (or if there are no
                     such requirements), but does not meet all of the require-
                     ments for the HIT, the Worker will be allowed to  preview
                     the  HIT's  question  data,  but  will  not be allowed to
                     accept and complete the HIT. The default is  false.  This
                     should not be used in combination with the ActionsGuarded
                     field.

                 ActionsGuarded -> (string)
                     Setting this attribute prevents Workers whose  Qualifica-
                     tions do not meet this QualificationRequirement from tak-
                     ing  the  specified  action.  Valid   arguments   include
                     "Accept"  (Worker  cannot accept the HIT, but can preview
                     the HIT and see it in their search results),  "PreviewAn-
                     dAccept"  (Worker  cannot  accept or preview the HIT, but
                     can see the HIT in their search results), and  "Discover-
                     PreviewAndAccept"  (Worker cannot accept, preview, or see
                     the HIT in their search results). It's possible  for  you
                     to  create  a HIT with multiple QualificationRequirements
                     (which can have different values  for  the  ActionGuarded
                     attribute). In this case, the Worker is only permitted to
                     perform an action when they have met all QualificationRe-
                     quirements  guarding the action. The actions in the order
                     of least restrictive to most  restrictive  are  Discover,
                     Preview  and  Accept.  For example, if a Worker meets all
                     QualificationRequirements that are  set  to  DiscoverPre-
                     viewAndAccept,  but do not meet all requirements that are
                     set with PreviewAndAccept, then the Worker will  be  able
                     to Discover, i.e. see the HIT in their search result, but
                     will not be able to Preview or Accept the  HIT.  Actions-
                     Guarded  should  not  be  used  in  combination  with the
                     RequiredToPreview field.

          HITReviewStatus -> (string)
              Indicates the review status of the HIT. Valid Values are  NotRe-
              viewed  |  MarkedForReview | ReviewedAppropriate | ReviewedInap-
              propriate.

          NumberOfAssignmentsPending -> (integer)
              The number of assignments for this HIT that are being  previewed
              or  have been accepted by Workers, but have not yet been submit-
              ted, returned, or abandoned.

          NumberOfAssignmentsAvailable -> (integer)
              The number of assignments for this HIT that  are  available  for
              Workers to accept.

          NumberOfAssignmentsCompleted -> (integer)
              The  number  of assignments for this HIT that have been approved
              or rejected.



                                                              GET-ASSIGNMENT()
