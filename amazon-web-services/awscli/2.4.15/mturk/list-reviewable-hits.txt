LIST-REVIEWABLE-HITS()                                  LIST-REVIEWABLE-HITS()



NAME
       list-reviewable-hits -

DESCRIPTION
       The  ListReviewableHITs  operation retrieves the HITs with Status equal
       to Reviewable or Status equal to Reviewing that belong to the Requester
       calling the operation.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       list-reviewable-hits  is  a paginated operation. Multiple API calls may
       be issued in order to retrieve the entire data set of results. You  can
       disable pagination by providing the --no-paginate argument.  When using
       --output text and the --query argument on  a  paginated  response,  the
       --query  argument  must  extract data from the results of the following
       query expressions: HITs

SYNOPSIS
            list-reviewable-hits
          [--hit-type-id <value>]
          [--status <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --hit-type-id (string)
          The ID of the HIT type of the HITs to consider for the query. If not
          specified, all HITs for the Reviewer are considered

       --status (string)
          Can  be  either  Reviewable or Reviewing . Reviewable is the default
          value.

          Possible values:

          o Reviewable

          o Reviewing

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --starting-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The size of each page to get in the AWS service call. This does  not
          affect the number of items returned in the command's output. Setting
          a smaller page size results  in  more  calls  to  the  AWS  service,
          retrieving  fewer  items in each call. This can help prevent the AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       NextToken -> (string)
          If  the previous response was incomplete (because there is more data
          to retrieve), Amazon Mechanical Turk returns a pagination  token  in
          the response. You can use this pagination token to retrieve the next
          set of results.

       NumResults -> (integer)
          The number of HITs on this page in the filtered results list, equiv-
          alent to the number of HITs being returned by this call.

       HITs -> (list)
          The list of HIT elements returned by the query.

          (structure)
              The  HIT  data  structure represents a single HIT, including all
              the information necessary for a Worker to  accept  and  complete
              the HIT.

              HITId -> (string)
                 A unique identifier for the HIT.

              HITTypeId -> (string)
                 The ID of the HIT type of this HIT

              HITGroupId -> (string)
                 The ID of the HIT Group of this HIT.

              HITLayoutId -> (string)
                 The ID of the HIT Layout of this HIT.

              CreationTime -> (timestamp)
                 The date and time the HIT was created.

              Title -> (string)
                 The title of the HIT.

              Description -> (string)
                 A general description of the HIT.

              Question -> (string)
                 The  data  the  Worker  completing  the  HIT uses produce the
                 results. This is either either a  QuestionForm,  HTMLQuestion
                 or an ExternalQuestion data structure.

              Keywords -> (string)
                 One or more words or phrases that describe the HIT, separated
                 by commas. Search terms similar to the keywords of a HIT  are
                 more likely to have the HIT in the search results.

              HITStatus -> (string)
                 The  status  of the HIT and its assignments. Valid Values are
                 Assignable | Unassignable | Reviewable  |  Reviewing  |  Dis-
                 posed.

              MaxAssignments -> (integer)
                 The  number  of  times  the HIT can be accepted and completed
                 before the HIT becomes unavailable.

              Reward -> (string)
                 A string representing a currency amount.

              AutoApprovalDelayInSeconds -> (long)
                 The amount of time, in seconds, after the Worker  submits  an
                 assignment  for  the  HIT  that the results are automatically
                 approved by Amazon Mechanical Turk. This  is  the  amount  of
                 time the Requester has to reject an assignment submitted by a
                 Worker before the assignment is auto-approved and the  Worker
                 is paid.

              Expiration -> (timestamp)
                 The date and time the HIT expires.

              AssignmentDurationInSeconds -> (long)
                 The length of time, in seconds, that a Worker has to complete
                 the HIT after accepting it.

              RequesterAnnotation -> (string)
                 An arbitrary data field the Requester who created the HIT can
                 use. This field is visible only to the creator of the HIT.

              QualificationRequirements -> (list)
                 Conditions  that a Worker's Qualifications must meet in order
                 to accept the HIT. A HIT can have between zero and ten Quali-
                 fication  requirements. All requirements must be met in order
                 for a Worker to accept the HIT. Additionally,  other  actions
                 can  be  restricted  using  the  ActionsGuarded field on each
                 QualificationRequirement structure.

                 (structure)
                     The QualificationRequirement data structure  describes  a
                     Qualification  that  a Worker must have before the Worker
                     is allowed to accept a HIT. A requirement may  optionally
                     state  that a Worker must have the Qualification in order
                     to preview the HIT, or see the HIT in search results.

                     QualificationTypeId -> (string)
                        The ID of the Qualification type for the  requirement.

                     Comparator -> (string)
                        The  kind  of  comparison to make against a Qualifica-
                        tion's value. You can compare a Qualification's  value
                        to   an   IntegerValue  to  see  if  it  is  LessThan,
                        LessThanOrEqualTo, GreaterThan,  GreaterThanOrEqualTo,
                        EqualTo,  or NotEqualTo the IntegerValue. You can com-
                        pare it to a LocaleValue to see if it is  EqualTo,  or
                        NotEqualTo  the  LocaleValue.  You can check to see if
                        the value is In or NotIn  a  set  of  IntegerValue  or
                        LocaleValue  values.  Lastly, a Qualification require-
                        ment can also test if a Qualification Exists or  Does-
                        NotExist  in  the  user's  profile,  regardless of its
                        value.

                     IntegerValues -> (list)
                        The integer value to compare  against  the  Qualifica-
                        tion's value. IntegerValue must not be present if Com-
                        parator is Exists or  DoesNotExist.  IntegerValue  can
                        only  be used if the Qualification type has an integer
                        value; it cannot be used with the Worker_Locale Quali-
                        ficationType  ID.  When performing a set comparison by
                        using the In or the NotIn comparator, you can  use  up
                        to 15 IntegerValue elements in a QualificationRequire-
                        ment data structure.

                        (integer)

                     LocaleValues -> (list)
                        The locale value to  compare  against  the  Qualifica-
                        tion's value. The local value must be a valid ISO 3166
                        country code  or  supports  ISO  3166-2  subdivisions.
                        LocaleValue  can  only  be  used  with a Worker_Locale
                        QualificationType ID. LocaleValue  can  only  be  used
                        with  the  EqualTo, NotEqualTo, In, and NotIn compara-
                        tors. You must only use a single  LocaleValue  element
                        when using the EqualTo or NotEqualTo comparators. When
                        performing a set comparison by using  the  In  or  the
                        NotIn  comparator,  you  can  use up to 30 LocaleValue
                        elements in a QualificationRequirement data structure.

                        (structure)
                            The  Locale data structure represents a geographi-
                            cal region or location.

                            Country -> (string)
                               The country of the locale. Must be a valid  ISO
                               3166  country  code.  For  example, the code US
                               refers to the United States of America.

                            Subdivision -> (string)
                               The state or subdivision of the locale. A valid
                               ISO  3166-2  subdivision code. For example, the
                               code WA refers to the state of Washington.

                     RequiredToPreview -> (boolean)
                        DEPRECATED: Use the ActionsGuarded field  instead.  If
                        RequiredToPreview  is  true, the question data for the
                        HIT will not be shown when a Worker  whose  Qualifica-
                        tions  do  not  meet this requirement tries to preview
                        the HIT. That is, a Worker's Qualifications must  meet
                        all of the requirements for which RequiredToPreview is
                        true in order to preview the HIT. If  a  Worker  meets
                        all  of  the  requirements  where RequiredToPreview is
                        true (or if there are no such requirements), but  does
                        not  meet  all  of  the  requirements for the HIT, the
                        Worker will be allowed to preview the  HIT's  question
                        data,  but  will not be allowed to accept and complete
                        the HIT. The default is false. This should not be used
                        in combination with the ActionsGuarded field.

                     ActionsGuarded -> (string)
                        Setting this attribute prevents Workers whose Qualifi-
                        cations do not meet this QualificationRequirement from
                        taking  the  specified action. Valid arguments include
                        "Accept" (Worker cannot accept the HIT, but  can  pre-
                        view  the  HIT  and  see  it in their search results),
                        "PreviewAndAccept" (Worker cannot  accept  or  preview
                        the HIT, but can see the HIT in their search results),
                        and "DiscoverPreviewAndAccept" (Worker cannot  accept,
                        preview, or see the HIT in their search results). It's
                        possible for you to create a HIT with multiple  Quali-
                        ficationRequirements  (which can have different values
                        for the ActionGuarded attribute). In  this  case,  the
                        Worker  is  only  permitted  to perform an action when
                        they have met all  QualificationRequirements  guarding
                        the action. The actions in the order of least restric-
                        tive to most restrictive  are  Discover,  Preview  and
                        Accept.  For example, if a Worker meets all Qualifica-
                        tionRequirements that are set to DiscoverPreviewAndAc-
                        cept,  but  do  not meet all requirements that are set
                        with PreviewAndAccept, then the Worker will be able to
                        Discover, i.e. see the HIT in their search result, but
                        will not be able to Preview or Accept the HIT. Action-
                        sGuarded  should  not  be used in combination with the
                        RequiredToPreview field.

              HITReviewStatus -> (string)
                 Indicates the review status of  the  HIT.  Valid  Values  are
                 NotReviewed   |   MarkedForReview   |  ReviewedAppropriate  |
                 ReviewedInappropriate.

              NumberOfAssignmentsPending -> (integer)
                 The number of assignments for this HIT that  are  being  pre-
                 viewed  or  have  been  accepted by Workers, but have not yet
                 been submitted, returned, or abandoned.

              NumberOfAssignmentsAvailable -> (integer)
                 The number of assignments for this HIT that are available for
                 Workers to accept.

              NumberOfAssignmentsCompleted -> (integer)
                 The  number  of  assignments  for  this  HIT  that  have been
                 approved or rejected.



                                                        LIST-REVIEWABLE-HITS()
