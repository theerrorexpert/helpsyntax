CALCULATE-ROUTE-MATRIX()                              CALCULATE-ROUTE-MATRIX()



NAME
       calculate-route-matrix -

DESCRIPTION
          Calculates  a  route matrix given the following required parameters:
          DeparturePositions and DestinationPositions  .  CalculateRouteMatrix
          calculates  routes  and  returns the travel time and travel distance
          from each departure position to each  destination  position  in  the
          request.  For example, given departure positions A and B, and desti-
          nation positions X and Y, CalculateRouteMatrix will return time  and
          distance for routes from A to X, A to Y, B to X, and B to Y (in that
          order). The number of results returned (and routes calculated)  will
          be the number of DeparturePositions times the number of Destination-
          Positions .

       NOTE:
          Your account is charged for each route calculated, not the number of
          requests.

       Requires that you first create a route calculator resource .

       By  default,  a  request that doesn't specify a departure time uses the
       best time of day to travel with the best traffic conditions when calcu-
       lating routes.

       Additional options include:

       o Specifying a departure time using either DepartureTime or DepartNow .
         This calculates routes based on predictive traffic data at the  given
         time.

       NOTE:
          You  can't  specify  both  DepartureTime  and  DepartNow in a single
          request. Specifying both parameters returns a validation error.

       o Specifying a travel mode using  TravelMode  sets  the  transportation
         mode  used  to calculate the routes. This also lets you specify addi-
         tional route preferences in CarModeOptions if traveling by Car  ,  or
         TruckModeOptions if traveling by Truck .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            calculate-route-matrix
          --calculator-name <value>
          [--car-mode-options <value>]
          [--depart-now | --no-depart-now]
          --departure-positions <value>
          [--departure-time <value>]
          --destination-positions <value>
          [--distance-unit <value>]
          [--travel-mode <value>]
          [--truck-mode-options <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --calculator-name (string)
          The  name  of  the route calculator resource that you want to use to
          calculate the route matrix.

       --car-mode-options (structure)
          Specifies route preferences when traveling by Car , such as avoiding
          routes that use ferries or tolls.

          Requirements: TravelMode must be specified as Car .

          AvoidFerries -> (boolean)
              Avoids ferries when calculating routes.

              Default Value: false

              Valid Values: false | true

          AvoidTolls -> (boolean)
              Avoids tolls when calculating routes.

              Default Value: false

              Valid Values: false | true

       Shorthand Syntax:

          AvoidFerries=boolean,AvoidTolls=boolean

       JSON Syntax:

          {
            "AvoidFerries": true|false,
            "AvoidTolls": true|false
          }

       --depart-now | --no-depart-now (boolean)
          Sets  the  time  of  departure as the current time. Uses the current
          time to calculate the route matrix. You can't set both DepartureTime
          and  DepartNow  .  If neither is set, the best time of day to travel
          with the best traffic conditions is  used  to  calculate  the  route
          matrix.

          Default Value: false

          Valid Values: false | true

       --departure-positions (list)
          The  list  of  departure (origin) positions for the route matrix. An
          array of points, each of which is itself a 2-value array defined  in
          WGS  84  format:  [longitude,  latitude]  .  For example, [-123.115,
          49.285] .

          WARNING:
              Depending on the data provider selected in the route  calculator
              resource  there may be additional restrictions on the inputs you
              can choose. See Position restrictions  in  the  Amazon  Location
              Service Developer Guide .

          NOTE:
              For route calculators that use Esri as the data provider, if you
              specify a departure that's not located on a road,  Amazon  Loca-
              tion  moves the position to the nearest road . The snapped value
              is available in the result in SnappedDeparturePositions .

          Valid Values: [-180 to 180,-90 to 90]

          (list)
              (double)

       Shorthand Syntax:

          double,double ...

       JSON Syntax:

          [
            [double, ...]
            ...
          ]

       --departure-time (timestamp)
          Specifies the desired time of departure. Uses the given time to cal-
          culate  the  route  matrix.  You  can't  set  both DepartureTime and
          DepartNow . If neither is set, the best time of day to  travel  with
          the best traffic conditions is used to calculate the route matrix.

          NOTE:
              Setting a departure time in the past returns a 400 ValidationEx-
              ception error.

          o In  ISO  8601  format:  YYYY-MM-DDThh:mm:ss.sssZ  .  For  example,
            202007-2T12:15:20.000Z+01:00

       --destination-positions (list)
          The  list of destination positions for the route matrix. An array of
          points, each of which is itself a 2-value array defined  in  WGS  84
          format: [longitude, latitude] . For example, [-122.339, 47.615]

          WARNING:
              Depending  on the data provider selected in the route calculator
              resource there may be additional restrictions on the inputs  you
              can  choose.  See  Position  restrictions in the Amazon Location
              Service Developer Guide .

          NOTE:
              For route calculators that use Esri as the data provider, if you
              specify a destination that's not located on a road, Amazon Loca-
              tion moves the position to the nearest road . The snapped  value
              is available in the result in SnappedDestinationPositions .

          Valid Values: [-180 to 180,-90 to 90]

          (list)
              (double)

       Shorthand Syntax:

          double,double ...

       JSON Syntax:

          [
            [double, ...]
            ...
          ]

       --distance-unit (string)
          Set the unit system to specify the distance.

          Default Value: Kilometers

          Possible values:

          o Kilometers

          o Miles

       --travel-mode (string)
          Specifies  the  mode  of transport when calculating a route. Used in
          estimating the speed of travel and road compatibility.

          The TravelMode you specify also determines  how  you  specify  route
          preferences:

          o If traveling by Car use the CarModeOptions parameter.

          o If traveling by Truck use the TruckModeOptions parameter.

          Default Value: Car

          Possible values:

          o Car

          o Truck

          o Walking

       --truck-mode-options (structure)
          Specifies route preferences when traveling by Truck , such as avoid-
          ing routes that use ferries or tolls, and  truck  specifications  to
          consider when choosing an optimal road.

          Requirements: TravelMode must be specified as Truck .

          AvoidFerries -> (boolean)
              Avoids ferries when calculating routes.

              Default Value: false

              Valid Values: false | true

          AvoidTolls -> (boolean)
              Avoids ferries when calculating routes.

              Default Value: false

              Valid Values: false | true

          Dimensions -> (structure)
              Specifies the truck's dimension specifications including length,
              height, width, and unit of measurement. Used to avoid roads that
              can't support the truck's dimensions.

              Height -> (double)
                 The height of the truck.

                 o For example, 4.5 .

              Length -> (double)
                 The length of the truck.

                 o For example, 15.5 .

              Unit -> (string)
                 Specifies the unit of measurement for the truck dimensions.

                 Default Value: Meters

              Width -> (double)
                 The width of the truck.

                 o For example, 4.5 .

          Weight -> (structure)
              Specifies  the  truck's  weight  specifications  including total
              weight and unit of measurement. Used to avoid roads  that  can't
              support the truck's weight.

              Total -> (double)
                 The total weight of the truck.

                 o For example, 3500 .

              Unit -> (string)
                 The unit of measurement to use for the truck weight.

                 Default Value: Kilograms

       Shorthand Syntax:

          AvoidFerries=boolean,AvoidTolls=boolean,Dimensions={Height=double,Length=double,Unit=string,Width=double},Weight={Total=double,Unit=string}

       JSON Syntax:

          {
            "AvoidFerries": true|false,
            "AvoidTolls": true|false,
            "Dimensions": {
              "Height": double,
              "Length": double,
              "Unit": "Meters"|"Feet",
              "Width": double
            },
            "Weight": {
              "Total": double,
              "Unit": "Kilograms"|"Pounds"
            }
          }

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       RouteMatrix -> (list)
          The  calculated route matrix containing the results for all pairs of
          DeparturePositions to DestinationPositions . Each row corresponds to
          one  entry in DeparturePositions . Each entry in the row corresponds
          to the route from that entry in DeparturePositions to  an  entry  in
          DestinationPositions .

          (list)
              (structure)
                 The  result for one SnappedDeparturePosition  SnappedDestina-
                 tionPosition pair.

                 Distance -> (double)
                     The total distance of travel for the route.

                 DurationSeconds -> (double)
                     The expected duration of travel for the route.

                 Error -> (structure)
                     An error corresponding to  the  calculation  of  a  route
                     between the DeparturePosition and DestinationPosition .

                     Code -> (string)
                        The  type of error which occurred for the route calcu-
                        lation.

                     Message -> (string)
                        A message about the error that occurred for the  route
                        calculation.

       SnappedDeparturePositions -> (list)
          For  routes  calculated  using  an  Esri  route calculator resource,
          departure positions are snapped to the closest road. For Esri  route
          calculator  resources,  this  returns  the  list of departure/origin
          positions used for calculation of the RouteMatrix .

          (list)
              (double)

       SnappedDestinationPositions -> (list)
          The list of destination positions for the route matrix used for cal-
          culation of the RouteMatrix .

          (list)
              (double)

       Summary -> (structure)
          Contains information about the route matrix, DataSource , DistanceU-
          nit , RouteCount and ErrorCount .

          DataSource -> (string)
              The data provider of traffic and road network data used to  cal-
              culate the routes. Indicates one of the available providers:

              o Esri

              o Here

              For  more  information about data providers, see Amazon Location
              Service data providers .

          DistanceUnit -> (string)
              The unit of measurement for route distances.

          ErrorCount -> (integer)
              The count of error results in the route matrix. If  this  number
              is 0, all routes were calculated successfully.

          RouteCount -> (integer)
              The  count  of cells in the route matrix. Equal to the number of
              DeparturePositions multiplied by the number of  DestinationPosi-
              tions .



                                                      CALCULATE-ROUTE-MATRIX()
