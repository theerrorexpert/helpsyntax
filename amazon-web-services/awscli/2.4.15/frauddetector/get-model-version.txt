GET-MODEL-VERSION()                                        GET-MODEL-VERSION()



NAME
       get-model-version -

DESCRIPTION
       Gets the details of the specified model version.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-model-version
          --model-id <value>
          --model-type <value>
          --model-version-number <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --model-id (string)
          The model ID.

       --model-type (string)
          The model type.

          Possible values:

          o ONLINE_FRAUD_INSIGHTS

          o TRANSACTION_FRAUD_INSIGHTS

       --model-version-number (string)
          The model version number.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       modelId -> (string)
          The model ID.

       modelType -> (string)
          The model type.

       modelVersionNumber -> (string)
          The model version number.

       trainingDataSource -> (string)
          The training data source.

       trainingDataSchema -> (structure)
          The training data schema.

          modelVariables -> (list)
              The training data schema variables.

              (string)

          labelSchema -> (structure)
              The label schema.

              labelMapper -> (map)
                 The  label  mapper  maps  the Amazon Fraud Detector supported
                 model classification labels (FRAUD , LEGIT ) to the appropri-
                 ate  event type labels. For example, if "FRAUD " and "LEGIT "
                 are Amazon Fraud Detector supported labels, this mapper could
                 be:  {"FRAUD"  =>  ["0"]  ,  "LEGIT" => ["1"]} or {"FRAUD" =>
                 ["false"] , "LEGIT" => ["true"]}  or  {"FRAUD"  =>  ["fraud",
                 "abuse"]  , "LEGIT" => ["legit", "safe"]} . The value part of
                 the mapper is a list, because you  may  have  multiple  label
                 variants  from  your  event  type  for  a single Amazon Fraud
                 Detector label.

                 key -> (string)

                 value -> (list)
                     (string)

              unlabeledEventsTreatment -> (string)
                 The action to take for unlabeled events.

       externalEventsDetail -> (structure)
          The details of the external events data used for training the  model
          version.  This will be populated if the trainingDataSource is EXTER-
          NAL_EVENTS

          dataLocation -> (string)
              The Amazon S3 bucket location for the data.

          dataAccessRoleArn -> (string)
              The ARN of the role that provides Amazon Fraud  Detector  access
              to the data location.

       ingestedEventsDetail -> (structure)
          The  details of the ingested events data used for training the model
          version.  This  will  be  populated  if  the  trainingDataSource  is
          INGESTED_EVENTS .

          ingestedEventsTimeWindow -> (structure)
              The start and stop time of the ingested events.

              startTime -> (string)
                 Timestamp of the first ingensted event.

              endTime -> (string)
                 Timestamp of the final ingested event.

       status -> (string)
          The model version status.

          Possible values are:

          o TRAINING_IN_PROGRESS

          o TRAINING_COMPLETE

          o ACTIVATE_REQUESTED

          o ACTIVATE_IN_PROGRESS

          o ACTIVE

          o INACTIVATE_REQUESTED

          o INACTIVATE_IN_PROGRESS

          o INACTIVE

          o ERROR

       arn -> (string)
          The model version ARN.



                                                           GET-MODEL-VERSION()
