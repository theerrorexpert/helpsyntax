CREATE-DEPLOYMENT-STRATEGY()                      CREATE-DEPLOYMENT-STRATEGY()



NAME
       create-deployment-strategy -

DESCRIPTION
       Creates  a  deployment  strategy  that  defines  important criteria for
       rolling out your configuration to the designated targets. A  deployment
       strategy  includes  the overall duration required, a percentage of tar-
       gets to receive the deployment during each interval, an algorithm  that
       defines how percentage grows, and bake time.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-deployment-strategy
          --name <value>
          [--description <value>]
          --deployment-duration-in-minutes <value>
          [--final-bake-time-in-minutes <value>]
          --growth-factor <value>
          [--growth-type <value>]
          --replicate-to <value>
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --name (string)
          A name for the deployment strategy.

       --description (string)
          A description of the deployment strategy.

       --deployment-duration-in-minutes (integer)
          Total amount of time for a deployment to last.

       --final-bake-time-in-minutes (integer)
          The  amount of time AppConfig monitors for alarms before considering
          the deployment to be complete and no longer eligible  for  automatic
          roll back.

       --growth-factor (float)
          The percentage of targets to receive a deployed configuration during
          each interval.

       --growth-type (string)
          The algorithm used to define how percentage grows over time. AppCon-
          fig supports the following growth types:
              Linear  :  For  this type, AppConfig processes the deployment by
              dividing the total number of targets by the value specified  for
              Step  percentage  . For example, a linear deployment that uses a
              Step percentage of 10 deploys the configuration to 10 percent of
              the  hosts.  After  those  deployments  are complete, the system
              deploys the configuration to the next 10 percent. This continues
              until 100% of the targets have successfully received the config-
              uration.

              Exponential : For this type, AppConfig processes the  deployment
              exponentially  using  the  following  formula: G*(2^N) . In this
              formula, G is the growth factor specified by the user and  N  is
              the  number  of steps until the configuration is deployed to all
              targets. For example, if you specify a growth factor of 2,  then
              the system rolls out the configuration as follows:

              2*(2^0)

              2*(2^1)

              2*(2^2)

          Expressed  numerically,  the  deployment rolls out as follows: 2% of
          the targets, 4% of the targets, 8% of  the  targets,  and  continues
          until the configuration has been deployed to all targets.

          Possible values:

          o LINEAR

          o EXPONENTIAL

       --replicate-to (string)
          Save the deployment strategy to a Systems Manager (SSM) document.

          Possible values:

          o NONE

          o SSM_DOCUMENT

       --tags (map)
          Metadata  to  assign  to the deployment strategy. Tags help organize
          and categorize your AppConfig resources. Each tag consists of a  key
          and an optional value, both of which you define.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       Id -> (string)
          The deployment strategy ID.

       Name -> (string)
          The name of the deployment strategy.

       Description -> (string)
          The description of the deployment strategy.

       DeploymentDurationInMinutes -> (integer)
          Total amount of time the deployment lasted.

       GrowthType -> (string)
          The algorithm used to define how percentage grew over time.

       GrowthFactor -> (float)
          The  percentage  of  targets  that received a deployed configuration
          during each interval.

       FinalBakeTimeInMinutes -> (integer)
          The amount of time that AppConfig monitored for alarms  before  con-
          sidering  the  deployment  to be complete and no longer eligible for
          automatic rollback.

       ReplicateTo -> (string)
          Save the deployment strategy to a Systems Manager (SSM) document.



                                                  CREATE-DEPLOYMENT-STRATEGY()
