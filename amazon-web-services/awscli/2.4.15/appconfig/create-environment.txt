CREATE-ENVIRONMENT()                                      CREATE-ENVIRONMENT()



NAME
       create-environment -

DESCRIPTION
       Creates  an  environment.  For each application, you define one or more
       environments. An environment is a logical deployment group of AppConfig
       targets,  such as applications in a Beta or Production environment. You
       can also define environments for application subcomponents such as  the
       Web , Mobile and Back-end components for your application. You can con-
       figure Amazon CloudWatch alarms for each environment. The system  moni-
       tors  alarms  during  a  configuration deployment. If an alarm is trig-
       gered, the system rolls back the configuration.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-environment
          --application-id <value>
          --name <value>
          [--description <value>]
          [--monitors <value>]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --application-id (string)
          The application ID.

       --name (string)
          A name for the environment.

       --description (string)
          A description of the environment.

       --monitors (list)
          Amazon CloudWatch alarms to monitor during the deployment process.

          (structure)
              Amazon  CloudWatch  alarms  to  monitor  during  the  deployment
              process.

              AlarmArn -> (string)
                 Amazon Resource Name (ARN) of the Amazon CloudWatch alarm.

              AlarmRoleArn -> (string)
                 ARN  of an Identity and Access Management (IAM) role for App-
                 Config to monitor AlarmArn .

       Shorthand Syntax:

          AlarmArn=string,AlarmRoleArn=string ...

       JSON Syntax:

          [
            {
              "AlarmArn": "string",
              "AlarmRoleArn": "string"
            }
            ...
          ]

       --tags (map)
          Metadata to assign to the environment. Tags help organize and  cate-
          gorize  your  AppConfig resources. Each tag consists of a key and an
          optional value, both of which you define.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create an environment

       The following create-environment example creates an AWS AppConfig envi-
       ronment  named  Example-Environment  using  the application you created
       using create-application.

          aws appconfig create-environment \
              --application-id "339ohji" \
              --name "Example-Environment"

       Output:

          {
              "ApplicationId": "339ohji",
              "Description": null,
              "Id": "54j1r29",
              "Monitors": null,
              "Name": "Example-Environment",
              "State": "ReadyForDeployment"
          }

       For more information, see Step 2: Creating an environment  in  the  AWS
       AppConfig User Guide.

OUTPUT
       ApplicationId -> (string)
          The application ID.

       Id -> (string)
          The environment ID.

       Name -> (string)
          The name of the environment.

       Description -> (string)
          The description of the environment.

       State -> (string)
          The  state  of  the environment. An environment can be in one of the
          following states: READY_FOR_DEPLOYMENT , DEPLOYING , ROLLING_BACK  ,
          or ROLLED_BACK

       Monitors -> (list)
          Amazon CloudWatch alarms monitored during the deployment.

          (structure)
              Amazon  CloudWatch  alarms  to  monitor  during  the  deployment
              process.

              AlarmArn -> (string)
                 Amazon Resource Name (ARN) of the Amazon CloudWatch alarm.

              AlarmRoleArn -> (string)
                 ARN of an Identity and Access Management (IAM) role for  App-
                 Config to monitor AlarmArn .



                                                          CREATE-ENVIRONMENT()
