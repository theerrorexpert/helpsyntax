METER-USAGE()                                                    METER-USAGE()



NAME
       meter-usage -

DESCRIPTION
       API  to emit metering records. For identical requests, the API is idem-
       potent. It simply returns the metering record ID.

       MeterUsage is authenticated on the buyer's AWS  account  using  creden-
       tials from the EC2 instance, ECS task, or EKS pod.

       MeterUsage  can  optionally include multiple usage allocations, to pro-
       vide customers with usage data split into  buckets  by  tags  that  you
       define (or allow the customer to define).

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            meter-usage
          --product-code <value>
          --timestamp <value>
          --usage-dimension <value>
          [--usage-quantity <value>]
          [--dry-run | --no-dry-run]
          [--usage-allocations <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --product-code (string)
          Product  code  is used to uniquely identify a product in AWS Market-
          place. The product code should be the same as the  one  used  during
          the publishing of a new product.

       --timestamp (timestamp)
          Timestamp,  in  UTC,  for  which  the  usage is being reported. Your
          application can meter usage for up to one hour  in  the  past.  Make
          sure  the  timestamp  value  is not before the start of the software
          usage.

       --usage-dimension (string)
          It will be one of the fcp dimension name provided  during  the  pub-
          lishing of the product.

       --usage-quantity (integer)
          Consumption value for the hour. Defaults to 0 if not specified.

       --dry-run | --no-dry-run (boolean)
          Checks whether you have the permissions required for the action, but
          does not make the request. If you have the permissions, the  request
          returns  DryRunOperation;  otherwise,  it returns UnauthorizedExcep-
          tion. Defaults to false if not specified.

       --usage-allocations (list)
          The set of UsageAllocations to submit.

          The sum of all UsageAllocation quantities must equal the  UsageQuan-
          tity of the MeterUsage request, and each UsageAllocation must have a
          unique set of tags (include no tags).

          (structure)
              Usage allocations allow you to split usage into buckets by tags.

              Each UsageAllocation indicates the usage quantity for a specific
              set of tags.

              AllocatedUsageQuantity -> (integer)
                 The total quantity allocated to this bucket of usage.

              Tags -> (list)
                 The set of tags that define the  bucket  of  usage.  For  the
                 bucket of items with no tags, this parameter can be left out.

                 (structure)
                     Metadata assigned to an allocation. Each tag is  made  up
                     of a key and a value.

                     Key -> (string)
                        One  part  of  a key-value pair that makes up a tag. A
                        key is a label that acts like a category for the  spe-
                        cific tag values.

                     Value -> (string)
                        One  part  of  a key-value pair that makes up a tag. A
                        value acts as  a  descriptor  within  a  tag  category
                        (key). The value can be empty or null.

       Shorthand Syntax:

          AllocatedUsageQuantity=integer,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "AllocatedUsageQuantity": integer,
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       MeteringRecordId -> (string)
          Metering record id.



                                                                 METER-USAGE()
