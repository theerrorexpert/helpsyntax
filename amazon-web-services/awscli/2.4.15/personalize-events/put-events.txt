PUT-EVENTS()                                                      PUT-EVENTS()



NAME
       put-events -

DESCRIPTION
       Records user interaction event data. For more information see Recording
       Events .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            put-events
          --tracking-id <value>
          [--user-id <value>]
          --session-id <value>
          --event-list <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --tracking-id (string)
          The tracking ID for the event. The ID is generated by a call to  the
          CreateEventTracker API.

       --user-id (string)
          The user associated with the event.

       --session-id (string)
          The  session  ID  associated with the user's visit. Your application
          generates the sessionId when a user first  visits  your  website  or
          uses  your application. Amazon Personalize uses the sessionId to as-
          sociate events with the user before they log in. For  more  informa-
          tion, see Recording Events .

       --event-list (list)
          A list of event data from the session.

          (structure)
              Represents  user  interaction  event  information sent using the
              PutEvents API.

              eventId -> (string)
                 An ID associated with the event. If an event ID is  not  pro-
                 vided,  Amazon  Personalize  generates  a  unique  ID for the
                 event. An event ID is not used as an input to the model. Ama-
                 zon  Personalize  uses  the  event  ID  to distinquish unique
                 events. Any subsequent events after the first with  the  same
                 event ID are not used in model training.

              eventType -> (string)
                 The  type  of event, such as click or download. This property
                 corresponds to the  EVENT_TYPE  field  of  your  Interactions
                 schema and depends on the types of events you are tracking.

              eventValue -> (float)
                 The  event value that corresponds to the EVENT_VALUE field of
                 the Interactions schema.

              itemId -> (string)
                 The item ID key that corresponds to the ITEM_ID field of  the
                 Interactions schema.

              properties -> (string)
                 A  string map of event-specific data that you might choose to
                 record. For example, if a user rates a movie  on  your  site,
                 other  than movie ID (itemId ) and rating (eventValue ) , you
                 might also send the number of movie ratings made by the user.

                 Each  item in the map consists of a key-value pair. For exam-
                 ple,
                     {"numberOfRatings": "12"}

                 The keys use camel case names that match the  fields  in  the
                 Interactions  schema.  In the above example, the numberOfRat-
                 ings would match the 'NUMBER_OF_RATINGS' field defined in the
                 Interactions schema.

              sentAt -> (timestamp)
                 The  timestamp  (in  Unix  time)  on the client side when the
                 event occurred.

              recommendationId -> (string)
                 The ID of the recommendation.

              impression -> (list)
                 A list of item IDs that represents the sequence of items  you
                 have  shown  the  user.  For  example, ["itemId1", "itemId2",
                 "itemId3"] .

                 (string)

       Shorthand Syntax:

          eventId=string,eventType=string,eventValue=float,itemId=string,properties=string,sentAt=timestamp,recommendationId=string,impression=string,string ...

       JSON Syntax:

          [
            {
              "eventId": "string",
              "eventType": "string",
              "eventValue": float,
              "itemId": "string",
              "properties": "string",
              "sentAt": timestamp,
              "recommendationId": "string",
              "impression": ["string", ...]
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       None



                                                                  PUT-EVENTS()
