ASSOCIATE-IDENTITY-PROVIDER-CONFIG()      ASSOCIATE-IDENTITY-PROVIDER-CONFIG()



NAME
       associate-identity-provider-config -

DESCRIPTION
       Associate an identity provider configuration to a cluster.

       If  you want to authenticate identities using an identity provider, you
       can create an identity provider configuration and associate it to  your
       cluster.  After configuring authentication to your cluster you can cre-
       ate Kubernetes roles and clusterroles  to  assign  permissions  to  the
       roles,  and  then  bind  the  roles  to the identities using Kubernetes
       rolebindings and clusterrolebindings . For more information  see  Using
       RBAC Authorization in the Kubernetes documentation.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            associate-identity-provider-config
          --cluster-name <value>
          --oidc <value>
          [--tags <value>]
          [--client-request-token <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --cluster-name (string)
          The name of the cluster to associate the configuration to.

       --oidc (structure)
          An object that represents an OpenID Connect (OIDC) identity provider
          configuration.

          identityProviderConfigName -> (string)
              The name of the OIDC provider configuration.

          issuerUrl -> (string)
              The URL of the OpenID identity  provider  that  allows  the  API
              server to discover public signing keys for verifying tokens. The
              URL must begin with https:// and should correspond  to  the  iss
              claim  in  the provider's OIDC ID tokens. Per the OIDC standard,
              path components are allowed but query parameters are not.  Typi-
              cally    the   URL   consists   of   only   a   hostname,   like
              https://server.example.org or  https://example.com  .  This  URL
              should point to the level below .well-known/openid-configuration
              and must be publicly accessible over the internet.

          clientId -> (string)
              This is also known as audience . The ID for the client  applica-
              tion  that  makes authentication requests to the OpenID identity
              provider.

          usernameClaim -> (string)
              The JSON Web Token (JWT) claim  to  use  as  the  username.  The
              default  is sub , which is expected to be a unique identifier of
              the end user. You can choose other claims, such as email or name
              ,  depending  on the OpenID identity provider. Claims other than
              email are prefixed with the issuer URL to prevent naming clashes
              with other plug-ins.

          usernamePrefix -> (string)
              The  prefix  that  is  prepended  to  username claims to prevent
              clashes with existing names. If you do not provide  this  field,
              and  username  is a value other than email , the prefix defaults
              to issuerurl# . You can use the value - to disable  all  prefix-
              ing.

          groupsClaim -> (string)
              The JWT claim that the provider uses to return your groups.

          groupsPrefix -> (string)
              The  prefix that is prepended to group claims to prevent clashes
              with existing names (such as system: groups). For  example,  the
              value``oidc:`` will create group names like oidc:engineering and
              oidc:infra .

          requiredClaims -> (map)
              The key value pairs that describe required claims in  the  iden-
              tity  token. If set, each claim is verified to be present in the
              token with a matching value. For the maximum  number  of  claims
              that  you can require, see Amazon EKS service quotas in the Ama-
              zon EKS User Guide .

              key -> (string)

              value -> (string)

       Shorthand Syntax:

          identityProviderConfigName=string,issuerUrl=string,clientId=string,usernameClaim=string,usernamePrefix=string,groupsClaim=string,groupsPrefix=string,requiredClaims={KeyName1=string,KeyName2=string}

       JSON Syntax:

          {
            "identityProviderConfigName": "string",
            "issuerUrl": "string",
            "clientId": "string",
            "usernameClaim": "string",
            "usernamePrefix": "string",
            "groupsClaim": "string",
            "groupsPrefix": "string",
            "requiredClaims": {"string": "string"
              ...}
          }

       --tags (map)
          The metadata to apply to the configuration to  assist  with  catego-
          rization  and  organization.  Each  tag  consists  of  a  key and an
          optional value. You define both.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --client-request-token (string)
          Unique, case-sensitive identifier that you  provide  to  ensure  the
          idempotency of the request.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       update -> (structure)
          An object representing an asynchronous update.

          id -> (string)
              A UUID that is used to track the update.

          status -> (string)
              The current status of the update.

          type -> (string)
              The type of the update.

          params -> (list)
              A key-value map that contains the parameters associated with the
              update.

              (structure)
                 An object representing the details of an update request.

                 type -> (string)
                     The keys associated with an update request.

                 value -> (string)
                     The value of the keys submitted  as  part  of  an  update
                     request.

          createdAt -> (timestamp)
              The Unix epoch timestamp in seconds for when the update was cre-
              ated.

          errors -> (list)
              Any errors associated with a Failed update.

              (structure)
                 An object representing an error when an  asynchronous  opera-
                 tion fails.

                 errorCode -> (string)
                     A brief description of the error.

                     o SubnetNotFound  :  We  couldn't find one of the subnets
                       associated with the cluster.

                     o SecurityGroupNotFound : We couldn't  find  one  of  the
                       security groups associated with the cluster.

                     o EniLimitReached  : You have reached the elastic network
                       interface limit for your account.

                     o IpNotAvailable : A subnet associated with  the  cluster
                       doesn't have any free IP addresses.

                     o AccessDenied  :  You  don't have permissions to perform
                       the specified operation.

                     o OperationNotPermitted :  The  service  role  associated
                       with  the cluster doesn't have the required access per-
                       missions for Amazon EKS.

                     o VpcIdNotFound : We couldn't  find  the  VPC  associated
                       with the cluster.

                 errorMessage -> (string)
                     A more complete description of the error.

                 resourceIds -> (list)
                     An  optional field that contains the resource IDs associ-
                     ated with the error.

                     (string)

       tags -> (map)
          The tags for the resource.

          key -> (string)

          value -> (string)



                                          ASSOCIATE-IDENTITY-PROVIDER-CONFIG()
