START-TOPICS-DETECTION-JOB()                      START-TOPICS-DETECTION-JOB()



NAME
       start-topics-detection-job -

DESCRIPTION
       Starts an asynchronous topic detection job. Use the DescribeTopicDetec-
       tionJob operation to track the status of a job.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            start-topics-detection-job
          --input-data-config <value>
          --output-data-config <value>
          --data-access-role-arn <value>
          [--job-name <value>]
          [--number-of-topics <value>]
          [--client-request-token <value>]
          [--volume-kms-key-id <value>]
          [--vpc-config <value>]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --input-data-config (structure)
          Specifies the format and location of the input data for the job.

          S3Uri -> (string)
              The Amazon S3 URI for the input data. The URI must  be  in  same
              region  as  the  API  endpoint that you are calling. The URI can
              point to a single input file or it can provide the prefix for  a
              collection of data files.

              For  example, if you use the URI S3://bucketName/prefix , if the
              prefix is a single file, Amazon Comprehend  uses  that  file  as
              input. If more than one file begins with the prefix, Amazon Com-
              prehend uses all of them as input.

          InputFormat -> (string)
              Specifies how the text in an input file should be processed:

              o ONE_DOC_PER_FILE - Each file is considered  a  separate  docu-
                ment. Use this option when you are processing large documents,
                such as newspaper articles or scientific papers.

              o ONE_DOC_PER_LINE - Each line in a file is considered  a  sepa-
                rate  document.  Use  this option when you are processing many
                short documents, such as text messages.

          DocumentReaderConfig -> (structure)
              The document reader config field applies only for  InputDataCon-
              fig of StartEntitiesDetectionJob.

              Use DocumentReaderConfig to provide specifications about how you
              want your inference documents read. Currently it applies for PDF
              documents in StartEntitiesDetectionJob custom inference.

              DocumentReadAction -> (string)
                 This  enum  field will start with two values which will apply
                 to PDFs:

                 o TEXTRACT_DETECT_DOCUMENT_TEXT - The service  calls  Detect-
                   DocumentText for PDF documents per page.

                 o TEXTRACT_ANALYZE_DOCUMENT  - The service calls AnalyzeDocu-
                   ment for PDF documents per page.

              DocumentReadMode -> (string)
                 This enum field provides two values:

                 o SERVICE_DEFAULT - use service defaults for  Document  read-
                   ing. For Digital PDF it would mean using an internal parser
                   instead of Textract APIs

                 o FORCE_DOCUMENT_READ_ACTION - Always  use  specified  action
                   for DocumentReadAction, including Digital PDF.

              FeatureTypes -> (list)
                 Specifies how the text in an input file should be processed:

                 (string)
                     A  list  of  the types of analyses to perform. This field
                     specifies what feature types need to  be  extracted  from
                     the document where entity recognition is expected.

                     o TABLES  -  Add TABLES to the list to return information
                       about the tables that are detected in the  input  docu-
                       ment.

                     o FORMS - Add FORMS to return detected form data.

       Shorthand Syntax:

          S3Uri=string,InputFormat=string,DocumentReaderConfig={DocumentReadAction=string,DocumentReadMode=string,FeatureTypes=[string,string]}

       JSON Syntax:

          {
            "S3Uri": "string",
            "InputFormat": "ONE_DOC_PER_FILE"|"ONE_DOC_PER_LINE",
            "DocumentReaderConfig": {
              "DocumentReadAction": "TEXTRACT_DETECT_DOCUMENT_TEXT"|"TEXTRACT_ANALYZE_DOCUMENT",
              "DocumentReadMode": "SERVICE_DEFAULT"|"FORCE_DOCUMENT_READ_ACTION",
              "FeatureTypes": ["TABLES"|"FORMS", ...]
            }
          }

       --output-data-config (structure)
          Specifies where to send the output files. The output is a compressed
          archive with two files, topic-terms.csv that lists the terms associ-
          ated  with  each  topic, and doc-topics.csv that lists the documents
          associated with each topic

          S3Uri -> (string)
              When you use the OutputDataConfig object with asynchronous oper-
              ations,  you  specify  the  Amazon S3 location where you want to
              write the output data. The URI must be in the same region as the
              API  endpoint  that you are calling. The location is used as the
              prefix for the actual location of the output file.

              When the topic detection job is finished, the service creates an
              output  file in a directory specific to the job. The S3Uri field
              contains the location of the output file, called output.tar.gz .
              It is a compressed archive that contains the ouput of the opera-
              tion.

          KmsKeyId -> (string)
              ID for the AWS Key Management Service (KMS) key that Amazon Com-
              prehend uses to encrypt the output results from an analysis job.
              The KmsKeyId can be one of the following formats:

              o KMS Key ID: "1234abcd-12ab-34cd-56ef-1234567890ab"

              o Amazon    Resource    Name    (ARN)    of    a    KMS     Key:
                "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

              o KMS Key Alias: "alias/ExampleAlias"

              o ARN        of         a         KMS         Key         Alias:
                "arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"

       Shorthand Syntax:

          S3Uri=string,KmsKeyId=string

       JSON Syntax:

          {
            "S3Uri": "string",
            "KmsKeyId": "string"
          }

       --data-access-role-arn (string)
          The  Amazon  Resource Name (ARN) of the AWS Identity and Access Man-
          agement (IAM) role that grants Amazon Comprehend read access to your
          input        data.       For       more       information,       see
          https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions
          .

       --job-name (string)
          The identifier of the job.

       --number-of-topics (integer)
          The number of topics to detect.

       --client-request-token (string)
          A  unique  identifier  for the request. If you do not set the client
          request token, Amazon Comprehend generates one.

       --volume-kms-key-id (string)
          ID for the AWS Key Management Service (KMS) key that Amazon  Compre-
          hend  uses  to encrypt data on the storage volume attached to the ML
          compute  instance(s)  that  process  the  analysis  job.  The   Vol-
          umeKmsKeyId can be either of the following formats:

          o KMS Key ID: "1234abcd-12ab-34cd-56ef-1234567890ab"

          o Amazon     Resource     Name     (ARN)     of     a    KMS    Key:
            "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

       --vpc-config (structure)
          Configuration  parameters  for  an  optional private Virtual Private
          Cloud (VPC) containing the resources you are using  for  your  topic
          detection job. For more information, see Amazon VPC .

          SecurityGroupIds -> (list)
              The  ID  number for a security group on an instance of your pri-
              vate VPC. Security groups on your VPC function serve as  a  vir-
              tual  firewall  to control inbound and outbound traffic and pro-
              vides security for the resources that youll be accessing on  the
              VPC.  This  ID  number  is  preceded  by  "sg-",  for  instance:
              "sg-03b388029b0a285ea".  For  more  information,  see   Security
              Groups for your VPC .

              (string)

          Subnets -> (list)
              The ID for each subnet being used in your private VPC. This sub-
              net is a subset of the a range of IPv4 addresses used by the VPC
              and is specific to a given availability zone in the VPCs region.
              This ID number is preceded by  "subnet-",  for  instance:  "sub-
              net-04ccf456919e69055".  For more information, see VPCs and Sub-
              nets .

              (string)

       Shorthand Syntax:

          SecurityGroupIds=string,string,Subnets=string,string

       JSON Syntax:

          {
            "SecurityGroupIds": ["string", ...],
            "Subnets": ["string", ...]
          }

       --tags (list)
          Tags to be associated with the topics detection  job.  A  tag  is  a
          key-value  pair that adds metadata to a resource used by Amazon Com-
          prehend. For example, a tag with "Sales" as the key might  be  added
          to a resource to indicate its use by the sales department.

          (structure)
              A  key-value  pair that adds as a metadata to a resource used by
              Amazon Comprehend. For example, a tag with  the  key-value  pair
              Department:Sales  might  be  added to a resource to indicate its
              use by a particular department.

              Key -> (string)
                 The initial part of a key-value pair that forms a tag associ-
                 ated with a given resource. For instance, if you want to show
                 which resources are used by which departments, you might  use
                 Department as the key portion of the pair, with multiple pos-
                 sible values such as sales, legal, and administration.

              Value -> (string)
                 The second part of a key-value pair that forms a tag  associ-
                 ated with a given resource. For instance, if you want to show
                 which resources are used by which departments, you might  use
                 Department  as  the initial (key) portion of the pair, with a
                 value of sales to indicate the sales department.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       JobId -> (string)
          The identifier generated for the job. To get the status of the  job,
          use this identifier with the DescribeTopicDetectionJob operation.

       JobArn -> (string)
          The  Amazon Resource Name (ARN) of the topics detection job. It is a
          unique, fully qualified identifier for the job. It includes the  AWS
          account,  Region,  and  the job ID. The format of the ARN is as fol-
          lows:
              arn:<partition>:comprehend:<region>:<account-id>:topics-detec-
              tion-job/<job-id>

          The following is an example job ARN:
              arn:aws:comprehend:us-west-2:111122223333:document-classifica-
              tion-job/1234abcd12ab34cd56ef1234567890ab

       JobStatus -> (string)
          The status of the job:

          o SUBMITTED - The job has been received and is queued  for  process-
            ing.

          o IN_PROGRESS - Amazon Comprehend is processing the job.

          o COMPLETED  -  The job was successfully completed and the output is
            available.

          o FAILED - The job did not complete. To get details, use the Descri-
            beTopicDetectionJob operation.



                                                  START-TOPICS-DETECTION-JOB()
