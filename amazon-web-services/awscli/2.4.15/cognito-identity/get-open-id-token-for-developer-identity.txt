GET-OPEN-ID-TOKEN-FOR-DEVELOPER-IDENGET-OPEN-ID-TOKEN-FOR-DEVELOPER-IDENTITY()



NAME
       get-open-id-token-for-developer-identity -

DESCRIPTION
       Registers  (or  retrieves)  a  Cognito IdentityId and an OpenID Connect
       token for a user authenticated by your backend authentication  process.
       Supplying  multiple  logins will create an implicit linked account. You
       can only specify one developer provider as  part  of  the  Logins  map,
       which  is  linked  to  the identity pool. The developer provider is the
       "domain" by which Cognito will refer to your users.

       You can use GetOpenIdTokenForDeveloperIdentity to create a new identity
       and  to  link  new logins (that is, user credentials issued by a public
       provider or developer provider) to an existing identity. When you  want
       to  create a new identity, the IdentityId should be null. When you want
       to associate a new login with an existing authenticated/unauthenticated
       identity, you can do so by providing the existing IdentityId . This API
       will create the identity in the specified IdentityPoolId .

       You must use AWS Developer credentials to call this API.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-open-id-token-for-developer-identity
          --identity-pool-id <value>
          [--identity-id <value>]
          --logins <value>
          [--principal-tags <value>]
          [--token-duration <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --identity-pool-id (string)
          An identity pool ID in the format REGION:GUID.

       --identity-id (string)
          A unique identifier in the format REGION:GUID.

       --logins (map)
          A set of optional  name-value  pairs  that  map  provider  names  to
          provider  tokens. Each name-value pair represents a user from a pub-
          lic provider or developer provider. If the user is from a  developer
          provider,  the  name-value  pair  will  follow  the  syntax  "devel-
          oper_provider_name":  "developer_user_identifier"  .  The  developer
          provider  is the "domain" by which Cognito will refer to your users;
          you provided this domain while creating/updating the identity  pool.
          The  developer  user  identifier  is an identifier from your backend
          that uniquely identifies a user. When you create an  identity  pool,
          you can specify the supported logins.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --principal-tags (map)
          Use  this  operation  to  configure  attribute  mappings  for custom
          providers.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --token-duration (long)
          The expiration time of the token, in seconds. You can specify a cus-
          tom  expiration  time for the token so that you can cache it. If you
          don't provide an expiration time, the token is valid for 15 minutes.
          You can exchange the token with Amazon STS for temporary AWS creden-
          tials, which are valid for a maximum of one hour. The maximum  token
          duration  you  can  set is 24 hours. You should take care in setting
          the expiration time for a token, as there are  significant  security
          implications:  an  attacker  could use a leaked token to access your
          AWS resources for the token's duration.

          NOTE:
              Please provide for a small grace period, usually no more than  5
              minutes, to account for clock skew.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       IdentityId -> (string)
          A unique identifier in the format REGION:GUID.

       Token -> (string)
          An OpenID token.



                                    GET-OPEN-ID-TOKEN-FOR-DEVELOPER-IDENTITY()
