PUT-BUCKET-CORS()                                            PUT-BUCKET-CORS()



NAME
       put-bucket-cors -

DESCRIPTION
       Sets  the  cors  configuration  for  your  bucket. If the configuration
       exists, Amazon S3 replaces it.

       To use this operation, you must be allowed to perform the s3:PutBucket-
       CORS  action.  By default, the bucket owner has this permission and can
       grant it to others.

       You set this configuration on a bucket so that the bucket  can  service
       cross-origin  requests. For example, you might want to enable a request
       whose origin is http://www.example.com to access your Amazon S3  bucket
       at my.example.bucket.com by using the browser's XMLHttpRequest capabil-
       ity.

       To enable cross-origin resource sharing (CORS) on a bucket, you add the
       cors subresource to the bucket. The cors subresource is an XML document
       in which you configure rules that identify origins and the HTTP methods
       that  can  be executed on your bucket. The document is limited to 64 KB
       in size.

       When Amazon S3 receives a cross-origin request (or a pre-flight OPTIONS
       request)  against  a bucket, it evaluates the cors configuration on the
       bucket and uses the first  CORSRule  rule  that  matches  the  incoming
       browser  request to enable a cross-origin request. For a rule to match,
       the following conditions must be met:

       o The request's Origin header must match AllowedOrigin elements.

       o The request method (for example, GET, PUT, HEAD, and so  on)  or  the
         Access-Control-Request-Method  header in case of a pre-flight OPTIONS
         request must be one of the AllowedMethod elements.

       o Every header specified in the Access-Control-Request-Headers  request
         header of a pre-flight request must match an AllowedHeader element.

       For  more  information about CORS, go to Enabling Cross-Origin Resource
       Sharing in the Amazon S3 User Guide .
          Related Resources

       o GetBucketCors

       o DeleteBucketCors

       o RESTOPTIONSobject

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            put-bucket-cors
          --bucket <value>
          --cors-configuration <value>
          [--content-md5 <value>]
          [--expected-bucket-owner <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --bucket (string)
          Specifies the bucket impacted by the cors configuration.

       --cors-configuration (structure)
          Describes the cross-origin access configuration for  objects  in  an
          Amazon  S3  bucket.  For more information, see Enabling Cross-Origin
          Resource Sharing in the Amazon S3 User Guide .

          CORSRules -> (list)
              A set of origins and methods (cross-origin access that you  want
              to allow). You can add up to 100 rules to the configuration.

              (structure)
                 Specifies a cross-origin access rule for an Amazon S3 bucket.

                 ID -> (string)
                     Unique identifier for  the  rule.  The  value  cannot  be
                     longer than 255 characters.

                 AllowedHeaders -> (list)
                     Headers   that   are   specified   in   the   Access-Con-
                     trol-Request-Headers header. These headers are allowed in
                     a preflight OPTIONS request. In response to any preflight
                     OPTIONS request, Amazon S3 returns any requested  headers
                     that are allowed.

                     (string)

                 AllowedMethods -> (list)
                     An  HTTP  method  that  you  allow the origin to execute.
                     Valid values are GET , PUT , HEAD , POST , and DELETE .

                     (string)

                 AllowedOrigins -> (list)
                     One or more origins you want  customers  to  be  able  to
                     access the bucket from.

                     (string)

                 ExposeHeaders -> (list)
                     One  or  more  headers in the response that you want cus-
                     tomers to be able to access from their applications  (for
                     example, from a JavaScript XMLHttpRequest object).

                     (string)

                 MaxAgeSeconds -> (integer)
                     The  time  in  seconds  that your browser is to cache the
                     preflight response for the specified resource.

       JSON Syntax:

          {
            "CORSRules": [
              {
                "ID": "string",
                "AllowedHeaders": ["string", ...],
                "AllowedMethods": ["string", ...],
                "AllowedOrigins": ["string", ...],
                "ExposeHeaders": ["string", ...],
                "MaxAgeSeconds": integer
              }
              ...
            ]
          }

       --content-md5 (string)
          The base64-encoded 128-bit MD5 digest of the data. This header  must
          be used as a message integrity check to verify that the request body
          was not corrupted in transit. For more information, go to RFC  1864.

          For  requests made using the Amazon Web Services Command Line Inter-
          face (CLI) or Amazon Web Services SDKs,  this  field  is  calculated
          automatically.

       --expected-bucket-owner (string)
          The  account ID of the expected bucket owner. If the bucket is owned
          by a different account, the request  will  fail  with  an  HTTP  403
          (Access Denied) error.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       The  following  example  enables  PUT,  POST,  and DELETE requests from
       www.example.com, and enables GET requests from any domain:

          aws s3api put-bucket-cors --bucket MyBucket --cors-configuration file://cors.json

          cors.json:
          {
            "CORSRules": [
              {
                "AllowedOrigins": ["http://www.example.com"],
                "AllowedHeaders": ["*"],
                "AllowedMethods": ["PUT", "POST", "DELETE"],
                "MaxAgeSeconds": 3000,
                "ExposeHeaders": ["x-amz-server-side-encryption"]
              },
              {
                "AllowedOrigins": ["*"],
                "AllowedHeaders": ["Authorization"],
                "AllowedMethods": ["GET"],
                "MaxAgeSeconds": 3000
              }
            ]
          }

OUTPUT
       None



                                                             PUT-BUCKET-CORS()
