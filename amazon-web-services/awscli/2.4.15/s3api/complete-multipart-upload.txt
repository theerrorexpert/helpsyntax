COMPLETE-MULTIPART-UPLOAD()                        COMPLETE-MULTIPART-UPLOAD()



NAME
       complete-multipart-upload -

DESCRIPTION
       Completes a multipart upload by assembling previously uploaded parts.

       You first initiate the multipart upload and then upload all parts using
       the UploadPart operation. After  successfully  uploading  all  relevant
       parts  of  an upload, you call this action to complete the upload. Upon
       receiving this request, Amazon S3 concatenates all the parts in ascend-
       ing order by part number to create a new object. In the Complete Multi-
       part Upload request, you must provide the parts list. You  must  ensure
       that  the  parts  list  is complete. This action concatenates the parts
       that you provide in the list. For each part in the list, you must  pro-
       vide  the  part number and the ETag value, returned after that part was
       uploaded.

       Processing of a Complete Multipart Upload request  could  take  several
       minutes  to complete. After Amazon S3 begins processing the request, it
       sends an HTTP response header that specifies a 200 OK  response.  While
       processing  is  in  progress,  Amazon S3 periodically sends white space
       characters to keep the connection from timing out.  Because  a  request
       could  fail  after  the  initial  200  OK response has been sent, it is
       important that you check the response body  to  determine  whether  the
       request succeeded.

       Note that if CompleteMultipartUpload fails, applications should be pre-
       pared to retry the failed requests. For more information, see Amazon S3
       Error Best Practices .

       WARNING:
          You  cannot use Content-Type: application/x-www-form-urlencoded with
          Complete Multipart Upload requests. Also, if you do  not  provide  a
          Content-Type   header,  CompleteMultipartUpload  returns  a  200  OK
          response.

       For more information about multipart  uploads,  see  Uploading  Objects
       Using Multipart Upload .

       For  information about permissions required to use the multipart upload
       API, see Multipart Upload and Permissions .
          CompleteMultipartUpload has the following special errors:

       o Error code: EntityTooSmall

         o Description: Your proposed  upload  is  smaller  than  the  minimum
           allowed  object  size.  Each  part  must  be at least 5 MB in size,
           except the last part.

         o 400 Bad Request

       o Error code: InvalidPart

         o Description: One or more of the specified parts could not be found.
           The  part might not have been uploaded, or the specified entity tag
           might not have matched the part's entity tag.

         o 400 Bad Request

       o Error code: InvalidPartOrder

         o Description: The list of parts was  not  in  ascending  order.  The
           parts list must be specified in order by part number.

         o 400 Bad Request

       o Error code: NoSuchUpload

         o Description:  The  specified  multipart  upload does not exist. The
           upload ID might be invalid, or the multipart upload might have been
           aborted or completed.

         o 404 Not Found

       The following operations are related to CompleteMultipartUpload :

       o CreateMultipartUpload

       o UploadPart

       o AbortMultipartUpload

       o ListParts

       o ListMultipartUploads

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            complete-multipart-upload
          --bucket <value>
          --key <value>
          [--multipart-upload <value>]
          --upload-id <value>
          [--request-payer <value>]
          [--expected-bucket-owner <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --bucket (string)
          Name of the bucket to which the multipart upload was initiated.

          When  using  this  action  with  an  access  point,  you must direct
          requests to the access point hostname.  The  access  point  hostname
          takes  the  form AccessPointName -AccountId .s3-accesspoint.*Region*
          .amazonaws.com. When using this action with an access point  through
          the  Amazon  Web  Services SDKs, you provide the access point ARN in
          place of the bucket name. For more information  about  access  point
          ARNs, see Using access points in the Amazon S3 User Guide .

          When  using  this action with Amazon S3 on Outposts, you must direct
          requests to the S3 on Outposts hostname. The S3 on Outposts hostname
          takes  the  form  AccessPointName  -AccountId  .*outpostID* .s3-out-
          posts.*Region* .amazonaws.com. When using this action  using  S3  on
          Outposts  through the Amazon Web Services SDKs, you provide the Out-
          posts bucket ARN in place of the bucket name. For  more  information
          about S3 on Outposts ARNs, see Using S3 on Outposts in the Amazon S3
          User Guide .

       --key (string)
          Object key for which the multipart upload was initiated.

       --multipart-upload (structure)
          The container for the multipart upload request information.

          Parts -> (list)
              Array of CompletedPart data types.

              If you do not supply a valid Part with your request, the service
              sends back an HTTP 400 response.

              (structure)
                 Details of the parts that were uploaded.

                 ETag -> (string)
                     Entity tag returned when the part was uploaded.

                 PartNumber -> (integer)
                     Part  number that identifies the part. This is a positive
                     integer between 1 and 10,000.

       Shorthand Syntax:

          Parts=[{ETag=string,PartNumber=integer},{ETag=string,PartNumber=integer}]

       JSON Syntax:

          {
            "Parts": [
              {
                "ETag": "string",
                "PartNumber": integer
              }
              ...
            ]
          }

       --upload-id (string)
          ID for the initiated multipart upload.

       --request-payer (string)
          Confirms that the requester knows that they will be charged for  the
          request.  Bucket  owners  need  not  specify this parameter in their
          requests. For information about downloading objects  from  requester
          pays  buckets,  see Downloading Objects in Requestor Pays Buckets in
          the Amazon S3 User Guide .

          Possible values:

          o requester

       --expected-bucket-owner (string)
          The account ID of the expected bucket owner. If the bucket is  owned
          by  a  different  account,  the  request  will fail with an HTTP 403
          (Access Denied) error.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       The following command completes a multipart upload for the  key  multi-
       part/01 in the bucket my-bucket:

          aws s3api complete-multipart-upload --multipart-upload file://mpustruct --bucket my-bucket --key 'multipart/01' --upload-id dfRtDYU0WWCCcH43C3WFbkRONycyCpTJJvxu2i5GYkZljF.Yxwh6XG7WfS2vC4to6HiV6Yjlx.cph0gtNBtJ8P3URCSbB7rjxI5iEwVDmgaXZOGgkk5nVTW16HOQ5l0R

       The  upload  ID  required  by  this  command is output by create-multi-
       part-upload and can also be retrieved with list-multipart-uploads.

       The multipart upload option in the above command takes a JSON structure
       that  describes  the  parts  of  the  multipart  upload  that should be
       reassembled into the complete file. In this example, the file:// prefix
       is  used  to  load  the  JSON structure from a file in the local folder
       named mpustruct.

       mpustruct:

          {
            "Parts": [
              {
                "ETag": "e868e0f4719e394144ef36531ee6824c",
                "PartNumber": 1
              },
              {
                "ETag": "6bb2b12753d66fe86da4998aa33fffb0",
                "PartNumber": 2
              },
              {
                "ETag": "d0a0112e841abec9c9ec83406f0159c8",
                "PartNumber": 3
              }
            ]
          }

       The ETag value for each part is upload is output each time you upload a
       part using the upload-part command and can also be retrieved by calling
       list-parts or calculated by taking the MD5 checksum of each part.

       Output:

          {
              "ETag": "\"3944a9f7a4faab7f78788ff6210f63f0-3\"",
              "Bucket": "my-bucket",
              "Location": "https://my-bucket.s3.amazonaws.com/multipart%2F01",
              "Key": "multipart/01"
          }

OUTPUT
       Location -> (string)
          The URI that identifies the newly created object.

       Bucket -> (string)
          The name of the bucket that contains the newly created object.  Does
          not return the access point ARN or access point alias if used.

          When  using  this  action  with  an  access  point,  you must direct
          requests to the access point hostname.  The  access  point  hostname
          takes  the  form AccessPointName -AccountId .s3-accesspoint.*Region*
          .amazonaws.com. When using this action with an access point  through
          the  Amazon  Web  Services SDKs, you provide the access point ARN in
          place of the bucket name. For more information  about  access  point
          ARNs, see Using access points in the Amazon S3 User Guide .

          When  using  this action with Amazon S3 on Outposts, you must direct
          requests to the S3 on Outposts hostname. The S3 on Outposts hostname
          takes  the  form  AccessPointName  -AccountId  .*outpostID* .s3-out-
          posts.*Region* .amazonaws.com. When using this action  using  S3  on
          Outposts  through the Amazon Web Services SDKs, you provide the Out-
          posts bucket ARN in place of the bucket name. For  more  information
          about S3 on Outposts ARNs, see Using S3 on Outposts in the Amazon S3
          User Guide .

       Key -> (string)
          The object key of the newly created object.

       Expiration -> (string)
          If the object expiration is configured, this will contain the  expi-
          ration  date  (expiry-date)  and  rule  ID  (rule-id).  The value of
          rule-id is URL encoded.

       ETag -> (string)
          Entity tag that identifies the newly created object's data.  Objects
          with  different  object  data  will  have different entity tags. The
          entity tag is an opaque string. The entity tag may or may not be  an
          MD5  digest  of  the  object  data.  If the entity tag is not an MD5
          digest of the object data, it will contain one or more  nonhexadeci-
          mal  characters  and/or will consist of less than 32 or more than 32
          hexadecimal digits.

       ServerSideEncryption -> (string)
          If you  specified  server-side  encryption  either  with  an  Amazon
          S3-managed  encryption key or an Amazon Web Services KMS key in your
          initiate  multipart  upload  request,  the  response  includes  this
          header.  It confirms the encryption algorithm that Amazon S3 used to
          encrypt the object.

       VersionId -> (string)
          Version ID of the newly created object, in case the bucket has  ver-
          sioning turned on.

       SSEKMSKeyId -> (string)
          If  present, specifies the ID of the Amazon Web Services Key Manage-
          ment Service (Amazon Web Services KMS)  symmetric  customer  managed
          key that was used for the object.

       BucketKeyEnabled -> (boolean)
          Indicates  whether  the  multipart  upload uses an S3 Bucket Key for
          server-side encryption with Amazon Web Services KMS (SSE-KMS).

       RequestCharged -> (string)
          If present, indicates that the requester  was  successfully  charged
          for the request.



                                                   COMPLETE-MULTIPART-UPLOAD()
