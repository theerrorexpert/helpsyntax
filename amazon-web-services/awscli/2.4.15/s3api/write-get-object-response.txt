WRITE-GET-OBJECT-RESPONSE()                        WRITE-GET-OBJECT-RESPONSE()



NAME
       write-get-object-response -

DESCRIPTION
       Passes  transformed  objects to a GetObject operation when using Object
       Lambda access  points.  For  information  about  Object  Lambda  access
       points,  see  Transforming  objects with Object Lambda access points in
       the Amazon S3 User Guide .

       This operation supports metadata that can be returned by GetObject , in
       addition  to RequestRoute , RequestToken , StatusCode , ErrorCode , and
       ErrorMessage . The GetObject response metadata is supported so that the
       WriteGetObjectResponse  caller,  typically an Lambda function, can pro-
       vide the same metadata when it  internally  invokes  GetObject  .  When
       WriteGetObjectResponse  is  called by a customer-owned Lambda function,
       the metadata returned to the end user GetObject call might differ  from
       what Amazon S3 would normally return.

       You  can include any number of metadata headers. When including a meta-
       data header, it should be  prefaced  with  x-amz-meta  .  For  example,
       x-amz-meta-my-custom-header:  MyCustomValue  . The primary use case for
       this is to forward GetObject metadata.

       Amazon Web Services provides some prebuilt Lambda  functions  that  you
       can use with S3 Object Lambda to detect and redact personally identifi-
       able information (PII) and decompress S3 objects.  These  Lambda  func-
       tions  are  available in the Amazon Web Services Serverless Application
       Repository, and can be selected through the Amazon Web Services Manage-
       ment Console when you create your Object Lambda access point.

       Example  1:  PII Access Control - This Lambda function uses Amazon Com-
       prehend, a natural language  processing  (NLP)  service  using  machine
       learning  to  find insights and relationships in text. It automatically
       detects  personally  identifiable  information  (PII)  such  as  names,
       addresses, dates, credit card numbers, and social security numbers from
       documents in your Amazon S3 bucket.

       Example 2: PII Redaction - This Lambda function uses Amazon Comprehend,
       a  natural  language processing (NLP) service using machine learning to
       find insights and relationships in text. It automatically redacts  per-
       sonally identifiable information (PII) such as names, addresses, dates,
       credit card numbers, and social security numbers from documents in your
       Amazon S3 bucket.

       Example 3: Decompression - The Lambda function S3ObjectLambdaDecompres-
       sion, is equipped to decompress objects stored in S3 in one of six com-
       pressed file formats including bzip2, gzip, snappy, zlib, zstandard and
       ZIP.

       For information on how to view and use these functions, see Using  Ama-
       zon Web Services built Lambda functions in the Amazon S3 User Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            write-get-object-response
          --request-route <value>
          --request-token <value>
          [--body <value>]
          [--status-code <value>]
          [--error-code <value>]
          [--error-message <value>]
          [--accept-ranges <value>]
          [--cache-control <value>]
          [--content-disposition <value>]
          [--content-encoding <value>]
          [--content-language <value>]
          [--content-length <value>]
          [--content-range <value>]
          [--content-type <value>]
          [--delete-marker | --no-delete-marker]
          [--e-tag <value>]
          [--expires <value>]
          [--expiration <value>]
          [--last-modified <value>]
          [--missing-meta <value>]
          [--metadata <value>]
          [--object-lock-mode <value>]
          [--object-lock-legal-hold-status <value>]
          [--object-lock-retain-until-date <value>]
          [--parts-count <value>]
          [--replication-status <value>]
          [--request-charged <value>]
          [--restore <value>]
          [--server-side-encryption <value>]
          [--sse-customer-algorithm <value>]
          [--ssekms-key-id <value>]
          [--sse-customer-key-md5 <value>]
          [--storage-class <value>]
          [--tag-count <value>]
          [--version-id <value>]
          [--bucket-key-enabled | --no-bucket-key-enabled]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --request-route (string)
          Route prefix to the HTTP URL generated.

       --request-token (string)
          A single use encrypted token that maps WriteGetObjectResponse to the
          end user GetObject request.

       --body (blob)
          The object data.

       --status-code (integer)
          The integer status code for an  HTTP  response  of  a  corresponding
          GetObject request.
              Status Codes

          o 200 - OK

          o 206 - Partial Content

          o 304 - Not Modified

          o 400 - Bad Request

          o 401 - Unauthorized

          o 403 - Forbidden

          o 404 - Not Found

          o 405 - Method Not Allowed

          o 409 - Conflict

          o 411 - Length Required

          o 412 - Precondition Failed

          o 416 - Range Not Satisfiable

          o 500 - Internal Server Error

          o 503 - Service Unavailable

       --error-code (string)
          A  string  that  uniquely identifies an error condition. Returned in
          the <Code> tag of the error XML response for a corresponding  GetOb-
          ject  call.  Cannot  be  used with a successful StatusCode header or
          when the transformed object is provided in the body. All error codes
          from S3 are sentence-cased. Regex value is "^[A-Z][a-zA-Z]+$".

       --error-message (string)
          Contains  a  generic description of the error condition. Returned in
          the <Message> tag of the error  XML  response  for  a  corresponding
          GetObject  call.  Cannot be used with a successful StatusCode header
          or when the transformed object is provided in body.

       --accept-ranges (string)
          Indicates that a range of bytes was specified.

       --cache-control (string)
          Specifies caching behavior along the request/reply chain.

       --content-disposition (string)
          Specifies presentational information for the object.

       --content-encoding (string)
          Specifies what content encodings have been applied to the object and
          thus  what  decoding  mechanisms  must  be  applied  to  obtain  the
          media-type referenced by the Content-Type header field.

       --content-language (string)
          The language the content is in.

       --content-length (long)
          The size of the content body in bytes.

       --content-range (string)
          The portion of the object returned in the response.

       --content-type (string)
          A standard MIME type describing the format of the object data.

       --delete-marker | --no-delete-marker (boolean)
          Specifies whether an object stored in Amazon S3 is (true ) or is not
          (false ) a delete marker.

       --e-tag (string)
          An  opaque identifier assigned by a web server to a specific version
          of a resource found at a URL.

       --expires (timestamp)
          The date and time at which the object is no longer cacheable.

       --expiration (string)
          If object stored in Amazon S3  expiration  is  configured  (see  PUT
          Bucket  lifecycle)  it  includes  expiry-date  and rule-id key-value
          pairs providing object expiration  information.  The  value  of  the
          rule-id is URL encoded.

       --last-modified (timestamp)
          The date and time that the object was last modified.

       --missing-meta (integer)
          Set  to  the  number  of metadata entries not returned in x-amz-meta
          headers. This can happen if you create metadata using  an  API  like
          SOAP  that  supports  more  flexible metadata than the REST API. For
          example, using SOAP, you can create metadata whose  values  are  not
          legal HTTP headers.

       --metadata (map)
          A map of metadata to store with the object in S3.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --object-lock-mode (string)
          Indicates  whether  an  object  stored  in Amazon S3 has Object Lock
          enabled. For more information about S3 Object Lock, see Object  Lock
          .

          Possible values:

          o GOVERNANCE

          o COMPLIANCE

       --object-lock-legal-hold-status (string)
          Indicates  whether an object stored in Amazon S3 has an active legal
          hold.

          Possible values:

          o ON

          o OFF

       --object-lock-retain-until-date (timestamp)
          The date and time when Object Lock is configured to expire.

       --parts-count (integer)
          The count of parts this object has.

       --replication-status (string)
          Indicates if request involves bucket that is either a source or des-
          tination in a Replication rule. For more information about S3 Repli-
          cation, see Replication .

          Possible values:

          o COMPLETE

          o PENDING

          o FAILED

          o REPLICA

       --request-charged (string)
          If present, indicates that the requester  was  successfully  charged
          for the request.

          Possible values:

          o requester

       --restore (string)
          Provides  information about object restoration operation and expira-
          tion time of the restored object copy.

       --server-side-encryption (string)
          The server-side encryption algorithm  used  when  storing  requested
          object in Amazon S3 (for example, AES256, aws:kms).

          Possible values:

          o AES256

          o aws:kms

       --sse-customer-algorithm (string)
          Encryption  algorithm  used  if  server-side  encryption with a cus-
          tomer-provided encryption key was specified  for  object  stored  in
          Amazon S3.

       --ssekms-key-id (string)
          If  present, specifies the ID of the Amazon Web Services Key Manage-
          ment Service (Amazon Web Services KMS)  symmetric  customer  managed
          key that was used for stored in Amazon S3 object.

       --sse-customer-key-md5 (string)
          128-bit  MD5 digest of customer-provided encryption key used in Ama-
          zon S3 to encrypt data stored  in  S3.  For  more  information,  see
          Protecting  data using server-side encryption with customer-provided
          encryption keys (SSE-C) .

       --storage-class (string)
          The class of storage used to store object in Amazon S3.

          Possible values:

          o STANDARD

          o REDUCED_REDUNDANCY

          o STANDARD_IA

          o ONEZONE_IA

          o INTELLIGENT_TIERING

          o GLACIER

          o DEEP_ARCHIVE

          o OUTPOSTS

          o GLACIER_IR

       --tag-count (integer)
          The number of tags, if any, on the object.

       --version-id (string)
          An ID used to reference a specific version of the object.

       --bucket-key-enabled | --no-bucket-key-enabled (boolean)
          Indicates whether the object stored in Amazon S3 uses an  S3  bucket
          key   for  server-side  encryption  with  Amazon  Web  Services  KMS
          (SSE-KMS).

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       None



                                                   WRITE-GET-OBJECT-RESPONSE()
