PUT-BUCKET-LIFECYCLE-CONFIGURATION()      PUT-BUCKET-LIFECYCLE-CONFIGURATION()



NAME
       put-bucket-lifecycle-configuration -

DESCRIPTION
       Creates  a  new  lifecycle  configuration for the bucket or replaces an
       existing lifecycle configuration. For information about lifecycle  con-
       figuration, see Managing your storage lifecycle .

       NOTE:
              Bucket lifecycle configuration now supports specifying a lifecy-
              cle rule using an object key name prefix,  one  or  more  object
              tags,  or  a  combination  of  both.  Accordingly,  this section
              describes the latest API. The previous version of the  API  sup-
              ported  filtering based only on an object key name prefix, which
              is supported for backward compatibility.  For  the  related  API
              description, see PutBucketLifecycle .

          Rules

       You specify the lifecycle configuration in your request body. The life-
       cycle configuration is specified as  XML  consisting  of  one  or  more
       rules. Each rule consists of the following:

       o Filter identifying a subset of objects to which the rule applies. The
         filter can be based on a key name prefix, object tags, or a  combina-
         tion of both.

       o Status whether the rule is in effect.

       o One or more lifecycle transition and expiration actions that you want
         Amazon S3 to perform on the objects identified by the filter. If  the
         state  of  your bucket is versioning-enabled or versioning-suspended,
         you can have many versions of the same object  (one  current  version
         and  zero or more noncurrent versions). Amazon S3 provides predefined
         actions that you can specify for current and noncurrent  object  ver-
         sions.

       For  more  information,  see  Object Lifecycle Management and Lifecycle
       Configuration Elements .
          Permissions

       By default, all Amazon S3 resources  are  private,  including  buckets,
       objects, and related subresources (for example, lifecycle configuration
       and website configuration). Only the resource owner (that is, the  Ama-
       zon  Web Services account that created it) can access the resource. The
       resource owner can optionally grant access  permissions  to  others  by
       writing  an  access  policy.  For  this  operation, a user must get the
       s3:PutLifecycleConfiguration permission.

       You can also explicitly deny permissions. Explicit deny also supersedes
       any  other  permissions.  If  you  want to block users or accounts from
       removing or deleting objects from your bucket, you must deny them  per-
       missions for the following actions:

       o s3:DeleteObject

       o s3:DeleteObjectVersion

       o s3:PutLifecycleConfiguration

       For more information about permissions, see Managing Access Permissions
       to Your Amazon S3 Resources .

       The following are related to PutBucketLifecycleConfiguration :

       o Examples of Lifecycle Configuration

       o GetBucketLifecycleConfiguration

       o DeleteBucketLifecycle

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            put-bucket-lifecycle-configuration
          --bucket <value>
          [--lifecycle-configuration <value>]
          [--expected-bucket-owner <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --bucket (string)
          The name of the bucket for which to set the configuration.

       --lifecycle-configuration (structure)
          Container for lifecycle rules. You can add as many as 1,000 rules.

          Rules -> (list)
              A lifecycle rule for individual objects in an Amazon S3  bucket.

              (structure)
                 A  lifecycle  rule  for  individual  objects  in an Amazon S3
                 bucket.

                 Expiration -> (structure)
                     Specifies the expiration for the lifecycle of the  object
                     in  the  form of date, days and, whether the object has a
                     delete marker.

                     Date -> (timestamp)
                        Indicates at what date the object is to  be  moved  or
                        deleted. Should be in GMT ISO 8601 Format.

                     Days -> (integer)
                        Indicates  the  lifetime, in days, of the objects that
                        are subject to the rule. The value must be a  non-zero
                        positive integer.

                     ExpiredObjectDeleteMarker -> (boolean)
                        Indicates  whether  Amazon  S3  will  remove  a delete
                        marker with no noncurrent versions. If  set  to  true,
                        the delete marker will be expired; if set to false the
                        policy takes no action. This cannot be specified  with
                        Days or Date in a Lifecycle Expiration Policy.

                 ID -> (string)
                     Unique  identifier  for  the  rule.  The  value cannot be
                     longer than 255 characters.

                 Prefix -> (string)
                     Prefix identifying one or more objects to which the  rule
                     applies. This is no longer used; use Filter instead.

                     WARNING:
                        Replacement  must  be  made for object keys containing
                        special characters (such  as  carriage  returns)  when
                        using  XML  requests.  For  more  information, see XML
                        related object key constraints .

                 Filter -> (structure)
                     The Filter is used to identify objects that  a  Lifecycle
                     Rule applies to. A Filter must have exactly one of Prefix
                     , Tag , or And specified. Filter is required if the Life-
                     cycleRule does not containt a Prefix element.

                     Prefix -> (string)
                        Prefix  identifying  one  or more objects to which the
                        rule applies.

                        WARNING:
                            Replacement must be made for object keys  contain-
                            ing  special characters (such as carriage returns)
                            when using XML requests. For more information, see
                            XML related object key constraints .

                     Tag -> (structure)
                        This  tag  must exist in the object's tag set in order
                        for the rule to apply.

                        Key -> (string)
                            Name of the object key.

                        Value -> (string)
                            Value of the tag.

                     ObjectSizeGreaterThan -> (long)
                        Minimum object size to which the rule applies.

                     ObjectSizeLessThan -> (long)
                        Maximum object size to which the rule applies.

                     And -> (structure)
                        This is used in a Lifecycle Rule  Filter  to  apply  a
                        logical  AND  to two or more predicates. The Lifecycle
                        Rule will apply to any  object  matching  all  of  the
                        predicates configured inside the And operator.

                        Prefix -> (string)
                            Prefix  identifying  one  or more objects to which
                            the rule applies.

                        Tags -> (list)
                            All of these tags must exist in the  object's  tag
                            set in order for the rule to apply.

                            (structure)
                               A container of a key value name pair.

                               Key -> (string)
                                   Name of the object key.

                               Value -> (string)
                                   Value of the tag.

                        ObjectSizeGreaterThan -> (long)
                            Minimum object size to which the rule applies.

                        ObjectSizeLessThan -> (long)
                            Maximum object size to which the rule applies.

                 Status -> (string)
                     If  'Enabled',  the  rule  is currently being applied. If
                     'Disabled', the rule is not currently being applied.

                 Transitions -> (list)
                     Specifies when an Amazon S3 object transitions to a spec-
                     ified storage class.

                     (structure)
                        Specifies  when  an  object transitions to a specified
                        storage class. For more information  about  Amazon  S3
                        lifecycle   configuration   rules,  see  Transitioning
                        Objects Using Amazon S3 Lifecycle  in  the  Amazon  S3
                        User Guide .

                        Date -> (timestamp)
                            Indicates  when  objects  are  transitioned to the
                            specified storage class. The date value must be in
                            ISO  8601 format. The time is always midnight UTC.

                        Days -> (integer)
                            Indicates the number of days after  creation  when
                            objects  are transitioned to the specified storage
                            class. The value must be a positive integer.

                        StorageClass -> (string)
                            The storage class to which you want the object  to
                            transition.

                 NoncurrentVersionTransitions -> (list)
                     Specifies the transition rule for the lifecycle rule that
                     describes when noncurrent objects transition  to  a  spe-
                     cific storage class. If your bucket is versioning-enabled
                     (or versioning is suspended), you can set this action  to
                     request  that Amazon S3 transition noncurrent object ver-
                     sions to a specific storage class at a set period in  the
                     object's lifetime.

                     (structure)
                        Container  for the transition rule that describes when
                        noncurrent objects transition  to  the  STANDARD_IA  ,
                        ONEZONE_IA   ,   INTELLIGENT_TIERING  ,  GLACIER_IR  ,
                        GLACIER ,  or  DEEP_ARCHIVE  storage  class.  If  your
                        bucket  is  versioning-enabled  (or versioning is sus-
                        pended), you can set this action to request that  Ama-
                        zon  S3  transition  noncurrent object versions to the
                        STANDARD_IA  ,  ONEZONE_IA  ,  INTELLIGENT_TIERING   ,
                        GLACIER_IR  ,  GLACIER , or DEEP_ARCHIVE storage class
                        at a specific period in the object's lifetime.

                        NoncurrentDays -> (integer)
                            Specifies the number of days an object is  noncur-
                            rent  before  Amazon S3 can perform the associated
                            action. For information about the noncurrent  days
                            calculations,  see  How  Amazon  S3 Calculates How
                            Long an Object Has Been Noncurrent in  the  Amazon
                            S3 User Guide .

                        StorageClass -> (string)
                            The class of storage used to store the object.

                        NewerNoncurrentVersions -> (integer)
                            Specifies  how  many noncurrent versions Amazon S3
                            will retain. If there are this  many  more  recent
                            noncurrent versions, Amazon S3 will take the asso-
                            ciated action. For more information about  noncur-
                            rent  versions,  see  Lifecycle configuration ele-
                            ments in the Amazon S3 User Guide .

                 NoncurrentVersionExpiration -> (structure)
                     Specifies when noncurrent object  versions  expire.  Upon
                     expiration,  Amazon S3 permanently deletes the noncurrent
                     object versions. You  set  this  lifecycle  configuration
                     action  on  a bucket that has versioning enabled (or sus-
                     pended) to  request  that  Amazon  S3  delete  noncurrent
                     object  versions  at  a  specific  period in the object's
                     lifetime.

                     NoncurrentDays -> (integer)
                        Specifies the number of days an object  is  noncurrent
                        before  Amazon  S3  can perform the associated action.
                        For information about  the  noncurrent  days  calcula-
                        tions,  see  How  Amazon  S3 Calculates When an Object
                        Became Noncurrent in the Amazon S3 User Guide .

                     NewerNoncurrentVersions -> (integer)
                        Specifies how many noncurrent versions Amazon S3  will
                        retain.  If there are this many more recent noncurrent
                        versions, Amazon S3 will take the  associated  action.
                        For  more  information  about noncurrent versions, see
                        Lifecycle configuration elements in the Amazon S3 User
                        Guide .

                 AbortIncompleteMultipartUpload -> (structure)
                     Specifies  the days since the initiation of an incomplete
                     multipart upload that Amazon S3 will wait  before  perma-
                     nently  removing all parts of the upload. For more infor-
                     mation, see Aborting Incomplete Multipart Uploads Using a
                     Bucket Lifecycle Policy in the Amazon S3 User Guide .

                     DaysAfterInitiation -> (integer)
                        Specifies  the  number  of  days after which Amazon S3
                        aborts an incomplete multipart upload.

       JSON Syntax:

          {
            "Rules": [
              {
                "Expiration": {
                  "Date": timestamp,
                  "Days": integer,
                  "ExpiredObjectDeleteMarker": true|false
                },
                "ID": "string",
                "Prefix": "string",
                "Filter": {
                  "Prefix": "string",
                  "Tag": {
                    "Key": "string",
                    "Value": "string"
                  },
                  "ObjectSizeGreaterThan": long,
                  "ObjectSizeLessThan": long,
                  "And": {
                    "Prefix": "string",
                    "Tags": [
                      {
                        "Key": "string",
                        "Value": "string"
                      }
                      ...
                    ],
                    "ObjectSizeGreaterThan": long,
                    "ObjectSizeLessThan": long
                  }
                },
                "Status": "Enabled"|"Disabled",
                "Transitions": [
                  {
                    "Date": timestamp,
                    "Days": integer,
                    "StorageClass": "GLACIER"|"STANDARD_IA"|"ONEZONE_IA"|"INTELLIGENT_TIERING"|"DEEP_ARCHIVE"|"GLACIER_IR"
                  }
                  ...
                ],
                "NoncurrentVersionTransitions": [
                  {
                    "NoncurrentDays": integer,
                    "StorageClass": "GLACIER"|"STANDARD_IA"|"ONEZONE_IA"|"INTELLIGENT_TIERING"|"DEEP_ARCHIVE"|"GLACIER_IR",
                    "NewerNoncurrentVersions": integer
                  }
                  ...
                ],
                "NoncurrentVersionExpiration": {
                  "NoncurrentDays": integer,
                  "NewerNoncurrentVersions": integer
                },
                "AbortIncompleteMultipartUpload": {
                  "DaysAfterInitiation": integer
                }
              }
              ...
            ]
          }

       --expected-bucket-owner (string)
          The account ID of the expected bucket owner. If the bucket is  owned
          by  a  different  account,  the  request  will fail with an HTTP 403
          (Access Denied) error.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       The following command applies a lifecycle  configuration  to  a  bucket
       named my-bucket:

          aws s3api put-bucket-lifecycle-configuration --bucket my-bucket --lifecycle-configuration  file://lifecycle.json

       The  file  lifecycle.json is a JSON document in the current folder that
       specifies two rules:

          {
              "Rules": [
                  {
                      "ID": "Move rotated logs to Glacier",
                      "Prefix": "rotated/",
                      "Status": "Enabled",
                      "Transitions": [
                          {
                              "Date": "2015-11-10T00:00:00.000Z",
                              "StorageClass": "GLACIER"
                          }
                      ]
                  },
                  {
                      "Status": "Enabled",
                      "Prefix": "",
                      "NoncurrentVersionTransitions": [
                          {
                              "NoncurrentDays": 2,
                              "StorageClass": "GLACIER"
                          }
                      ],
                      "ID": "Move old versions to Glacier"
                  }
              ]
          }

       The first rule moves files with the prefix rotated to  Glacier  on  the
       specified  date.  The  second rule moves old object versions to Glacier
       when they are no longer current. For information  on  acceptable  time-
       stamp  formats,  see  Specifying  Parameter  Values in the AWS CLI User
       Guide.

OUTPUT
       None



                                          PUT-BUCKET-LIFECYCLE-CONFIGURATION()
