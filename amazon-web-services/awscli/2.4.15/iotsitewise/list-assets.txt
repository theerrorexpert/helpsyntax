LIST-ASSETS()                                                    LIST-ASSETS()



NAME
       list-assets -

DESCRIPTION
       Retrieves a paginated list of asset summaries.

       You can use this operation to do the following:

       o List assets based on a specific asset model.

       o List top-level assets.

       You  can't use this operation to list all assets. To retrieve summaries
       for all of your assets, use ListAssetModels to get all  of  your  asset
       model IDs. Then, use ListAssets to get all assets for each asset model.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       list-assets is a paginated operation. Multiple API calls may be  issued
       in  order  to  retrieve the entire data set of results. You can disable
       pagination by providing the --no-paginate argument.  When using  --out-
       put  text and the --query argument on a paginated response, the --query
       argument must extract data from the  results  of  the  following  query
       expressions: assetSummaries

SYNOPSIS
            list-assets
          [--asset-model-id <value>]
          [--filter <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --asset-model-id (string)
          The  ID  of  the  asset model by which to filter the list of assets.
          This parameter is required if you choose ALL for filter .

       --filter (string)
          The filter for the requested list of assets. Choose one of the  fol-
          lowing options:

          o ALL   The list includes all assets for a given asset model ID. The
            assetModelId parameter is required if you filter by ALL .

          o TOP_LEVEL  The list includes only top-level assets  in  the  asset
            hierarchy tree.

          Default: ALL

          Possible values:

          o ALL

          o TOP_LEVEL

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size  results  in  more  calls to the AWS service,
          retrieving fewer items in each call. This can help prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To list all top-level assets

       The following list-assets example lists all assets that  are  top-level
       in the asset hierarchy tree and defined in your AWS account in the cur-
       rent Region.

          aws iotsitewise list-assets \
              --filter TOP_LEVEL

       Output:

          {
              "assetSummaries": [
                  {
                      "id": "a1b2c3d4-5678-90ab-cdef-44444EXAMPLE",
                      "arn": "arn:aws:iotsitewise:us-west-2:123456789012:asset/a1b2c3d4-5678-90ab-cdef-44444EXAMPLE",
                      "name": "Wind Farm 1",
                      "assetModelId": "a1b2c3d4-5678-90ab-cdef-22222EXAMPLE",
                      "creationDate": 1575672453.0,
                      "lastUpdateDate": 1575672453.0,
                      "status": {
                          "state": "ACTIVE"
                      },
                      "hierarchies": [
                          {
                              "id": "a1b2c3d4-5678-90ab-cdef-77777EXAMPLE",
                              "name": "Wind Turbines"
                          }
                      ]
                  }
              ]
          }

       For more information, see Listing assets in the AWS IoT  SiteWise  User
       Guide.

       Example 2: To list all assets based on an asset model

       The  following  list-assets  example lists all assets based on an asset
       model and defined in your AWS account in the current Region.

          aws iotsitewise list-assets \
              --asset-model-id a1b2c3d4-5678-90ab-cdef-11111EXAMPLE

       Output:

          {
              "assetSummaries": [
                  {
                      "id": "a1b2c3d4-5678-90ab-cdef-33333EXAMPLE",
                      "arn": "arn:aws:iotsitewise:us-west-2:123456789012:asset/a1b2c3d4-5678-90ab-cdef-33333EXAMPLE",
                      "name": "Wind Turbine 1",
                      "assetModelId": "a1b2c3d4-5678-90ab-cdef-11111EXAMPLE",
                      "creationDate": 1575671550.0,
                      "lastUpdateDate": 1575686308.0,
                      "status": {
                          "state": "ACTIVE"
                      },
                      "hierarchies": []
                  }
              ]
          }

       For more information, see Listing assets in the AWS IoT  SiteWise  User
       Guide.

OUTPUT
       assetSummaries -> (list)
          A list that summarizes each asset.

          (structure)
              Contains a summary of an asset.

              id -> (string)
                 The ID of the asset.

              arn -> (string)
                 The ARN of the asset, which has the following format.
                     arn:${Partition}:iotsite-
                     wise:${Region}:${Account}:asset/${AssetId}

              name -> (string)
                 The name of the asset.

              assetModelId -> (string)
                 The ID of the asset model used to create this asset.

              creationDate -> (timestamp)
                 The date the asset was created, in Unix epoch time.

              lastUpdateDate -> (timestamp)
                 The date the asset was last updated, in Unix epoch time.

              status -> (structure)
                 The current status of the asset.

                 state -> (string)
                     The current status of the asset.

                 error -> (structure)
                     Contains associated error information, if any.

                     code -> (string)
                        The error code.

                     message -> (string)
                        The error message.

                     details -> (list)
                        A list of detailed errors.

                        (structure)
                            Contains detailed error information.

                            code -> (string)
                               The error code.

                            message -> (string)
                               The error message.

              hierarchies -> (list)
                 A list of asset hierarchies that each contain a hierarchyId .
                 A  hierarchy  specifies  allowed parent/child asset relation-
                 ships.

                 (structure)
                     Describes an asset hierarchy that contains a  hierarchy's
                     name and ID.

                     id -> (string)
                        The ID of the hierarchy. This ID is a hierarchyId .

                     name -> (string)
                        The hierarchy name provided in the CreateAssetModel or
                        UpdateAssetModel API operation.

       nextToken -> (string)
          The token for the next set of results, or null if there are no addi-
          tional results.



                                                                 LIST-ASSETS()
