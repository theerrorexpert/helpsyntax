CREATE-PROJECT()                                              CREATE-PROJECT()



NAME
       create-project -

DESCRIPTION
       Creates  a  project,  which is the logical object in Evidently that can
       contain features, launches, and experiments. Use projects to group sim-
       ilar features together.

       To update an existing project, use UpdateProject .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-project
          [--data-delivery <value>]
          [--description <value>]
          --name <value>
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --data-delivery (structure)
          A  structure  that  contains information about where Evidently is to
          store evaluation events for longer term storage, if you choose to do
          so.  If you choose not to store these events, Evidently deletes them
          after using them to produce metrics  and  other  experiment  results
          that you can view.

          cloudWatchLogs -> (structure)
              If the project stores evaluation events in CloudWatch Logs, this
              structure stores the log group name.

              logGroup -> (string)
                 The name of the log group where the project stores evaluation
                 events.

          s3Destination -> (structure)
              If  the project stores evaluation events in an Amazon S3 bucket,
              this structure stores the bucket name and bucket prefix.

              bucket -> (string)
                 The name of the bucket in which Evidently  stores  evaluation
                 events.

              prefix -> (string)
                 The  bucket  prefix  in  which  Evidently  stores  evaluation
                 events.

       Shorthand Syntax:

          cloudWatchLogs={logGroup=string},s3Destination={bucket=string,prefix=string}

       JSON Syntax:

          {
            "cloudWatchLogs": {
              "logGroup": "string"
            },
            "s3Destination": {
              "bucket": "string",
              "prefix": "string"
            }
          }

       --description (string)
          An optional description of the project.

       --name (string)
          The name for the project.

       --tags (map)
          Assigns one or more tags (key-value pairs) to the project.

          Tags can help you organize and categorize your  resources.  You  can
          also  use  them to scope user permissions by granting a user permis-
          sion to access or change only resources with certain tag values.

          Tags don't have any semantic meaning to Amazon Web Services and  are
          interpreted strictly as strings of characters.
              <p>You  can  associate  as  many  as 50 tags with a project.</p>
              <p>For  more  information,  see  <a  href="https://docs.aws.ama-
              zon.com/general/latest/gr/aws_tagging.html">Tagging  Amazon  Web
              Services resources</a>.</p> key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       project -> (structure)
          A structure that contains information about the created project.

          activeExperimentCount -> (long)
              The number of ongoing experiments currently in the project.

          activeLaunchCount -> (long)
              The number of ongoing launches currently in the project.

          arn -> (string)
              The name or ARN of the project.

          createdTime -> (timestamp)
              The date and time that the project is created.

          dataDelivery -> (structure)
              A structure that contains information about where  Evidently  is
              to store evaluation events for longer term storage.

              cloudWatchLogs -> (structure)
                 If  the  project stores evaluation events in CloudWatch Logs,
                 this structure stores the log group name.

                 logGroup -> (string)
                     The name of the log group where the project stores evalu-
                     ation events.

              s3Destination -> (structure)
                 If  the  project  stores  evaluation  events  in an Amazon S3
                 bucket, this structure stores the bucket name and bucket pre-
                 fix.

                 bucket -> (string)
                     The  name of the bucket in which Evidently stores evalua-
                     tion events.

                 prefix -> (string)
                     The bucket prefix in which  Evidently  stores  evaluation
                     events.

          description -> (string)
              The user-entered description of the project.

          experimentCount -> (long)
              The  number  of  experiments  currently  in  the  project.  This
              includes all experiments that have been created and not deleted,
              whether they are ongoing or not.

          featureCount -> (long)
              The number of features currently in the project.

          lastUpdatedTime -> (timestamp)
              The date and time that the project was most recently updated.

          launchCount -> (long)
              The  number  of launches currently in the project. This includes
              all launches that have been created  and  not  deleted,  whether
              they are ongoing or not.

          name -> (string)
              The name of the project.

          status -> (string)
              The current state of the project.

          tags -> (map)
              The list of tag keys and values associated with this project.

              key -> (string)

              value -> (string)



                                                              CREATE-PROJECT()
