PUT-CORS-POLICY()                                            PUT-CORS-POLICY()



NAME
       put-cors-policy -

DESCRIPTION
       Sets  the  cross-origin resource sharing (CORS) configuration on a con-
       tainer so that the container can  service  cross-origin  requests.  For
       example,   you   might  want  to  enable  a  request  whose  origin  is
       http://www.example.com to access your  AWS  Elemental  MediaStore  con-
       tainer  at  my.example.container.com  by using the browser's XMLHttpRe-
       quest capability.

       To enable CORS on a container, you attach a CORS  policy  to  the  con-
       tainer.  In  the CORS policy, you configure rules that identify origins
       and the HTTP methods that can be executed on your container. The policy
       can  contain up to 398,000 characters. You can add up to 100 rules to a
       CORS policy. If more than one rule applies, the service uses the  first
       applicable rule listed.

       To  learn  more about CORS, see Cross-Origin Resource Sharing (CORS) in
       AWS Elemental MediaStore .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            put-cors-policy
          --container-name <value>
          --cors-policy <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --container-name (string)
          The name of the container that you want to assign  the  CORS  policy
          to.

       --cors-policy (list)
          The CORS policy to apply to the container.

          (structure)
              A  rule for a CORS policy. You can add up to 100 rules to a CORS
              policy. If more than one rule  applies,  the  service  uses  the
              first applicable rule listed.

              AllowedOrigins -> (list)
                 One  or  more response headers that you want users to be able
                 to access  from  their  applications  (for  example,  from  a
                 JavaScript XMLHttpRequest object).

                 Each CORS rule must have at least one AllowedOrigins element.
                 The string value can include only one wildcard character (*),
                 for example, http://
                 *
                 .example.com. Additionally, you can specify only one wildcard
                 character to allow cross-origin access for all origins.

                 (string)

              AllowedMethods -> (list)
                 Identifies an HTTP method that the origin that  is  specified
                 in the rule is allowed to execute.

                 Each  CORS  rule must contain at least one AllowedMethods and
                 one AllowedOrigins element.

                 (string)

              AllowedHeaders -> (list)
                 Specifies which headers are allowed in  a  preflight  OPTIONS
                 request  through  the  Access-Control-Request-Headers header.
                 Each  header  name   that   is   specified   in   Access-Con-
                 trol-Request-Headers  must  have a corresponding entry in the
                 rule. Only the headers that were requested are sent back.

                 This element can contain only one wildcard character (*).

                 (string)

              MaxAgeSeconds -> (integer)
                 The time in seconds that your browser  caches  the  preflight
                 response for the specified resource.

                 A CORS rule can have only one MaxAgeSeconds element.

              ExposeHeaders -> (list)
                 One or more headers in the response that you want users to be
                 able to access from their applications (for example,  from  a
                 JavaScript XMLHttpRequest object).

                 This element is optional for each rule.

                 (string)

       Shorthand Syntax:

          AllowedOrigins=string,string,AllowedMethods=string,string,AllowedHeaders=string,string,MaxAgeSeconds=integer,ExposeHeaders=string,string ...

       JSON Syntax:

          [
            {
              "AllowedOrigins": ["string", ...],
              "AllowedMethods": ["PUT"|"GET"|"DELETE"|"HEAD", ...],
              "AllowedHeaders": ["string", ...],
              "MaxAgeSeconds": integer,
              "ExposeHeaders": ["string", ...]
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To add a CORS policy

       The  following  put-cors-policy  example  adds  a cross-origin resource
       sharing (CORS) policy to the specified container. The contents  of  the
       CORS policy are in the file named corsPolicy.json.

          aws mediastore put-cors-policy \
              --container-name ExampleContainer \
              --cors-policy file://corsPolicy.json

       This command produces no output.

       For  more  information,  see Adding a CORS Policy to a Container in the
       AWS Elemental MediaStore User Guide.

       Example 2: To edit a CORS policy

       The following put-cors-policy example updates the cross-origin resource
       sharing  (CORS) policy that is assigned to the specified container. The
       contents of the updated CORS policy are  in  the  file  named  corsPol-
       icy2.json.

       For  more  information,  see Editing a CORS Policy in the AWS Elemental
       MediaStore User Guide.

OUTPUT
       None



                                                             PUT-CORS-POLICY()
