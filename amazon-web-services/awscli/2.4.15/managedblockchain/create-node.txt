CREATE-NODE()                                                    CREATE-NODE()



NAME
       create-node -

DESCRIPTION
       Creates a node on the specified blockchain network.

       Applies to Hyperledger Fabric and Ethereum.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-node
          [--client-request-token <value>]
          --network-id <value>
          [--member-id <value>]
          --node-configuration <value>
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --client-request-token (string)
          A  unique,  case-sensitive identifier that you provide to ensure the
          idempotency of the operation. An idempotent operation  completes  no
          more  than  one time. This identifier is required only if you make a
          service request directly using an HTTP client. It is generated auto-
          matically if you use an AWS SDK or the AWS CLI.

       --network-id (string)
          The unique identifier of the network for the node.

          Ethereum public networks have the following NetworkId s:

          o n-ethereum-mainnet

          o n-ethereum-rinkeby

          o n-ethereum-ropsten

       --member-id (string)
          The unique identifier of the member that owns this node.

          Applies only to Hyperledger Fabric.

       --node-configuration (structure)
          The properties of a node configuration.

          InstanceType -> (string)
              The Amazon Managed Blockchain instance type for the node.

          AvailabilityZone -> (string)
              The  Availability  Zone  in  which the node exists. Required for
              Ethereum nodes.

          LogPublishingConfiguration -> (structure)
              Configuration properties for logging events  associated  with  a
              peer node on a Hyperledger Fabric network on Managed Blockchain.

              Fabric -> (structure)
                 Configuration properties for logging events associated with a
                 node  that  is owned by a member of a Managed Blockchain net-
                 work using the Hyperledger Fabric framework.

                 ChaincodeLogs -> (structure)
                     Configuration properties for  logging  events  associated
                     with  chaincode  execution on a peer node. Chaincode logs
                     contain  the  results  of  instantiating,  invoking,  and
                     querying the chaincode. A peer can run multiple instances
                     of chaincode. When enabled, a log stream is  created  for
                     all  chaincodes,  with  an individual log stream for each
                     chaincode.

                     Cloudwatch -> (structure)
                        Parameters for publishing logs  to  Amazon  CloudWatch
                        Logs.

                        Enabled -> (boolean)
                            Indicates whether logging is enabled.

                 PeerLogs -> (structure)
                     Configuration  properties  for a peer node log. Peer node
                     logs contain messages generated when your client  submits
                     transaction  proposals  to  peer  nodes, requests to join
                     channels, enrolls an admin peer, and lists the  chaincode
                     instances on a peer node.

                     Cloudwatch -> (structure)
                        Parameters  for  publishing  logs to Amazon CloudWatch
                        Logs.

                        Enabled -> (boolean)
                            Indicates whether logging is enabled.

          StateDB -> (string)
              The state database that the node uses.  Values  are  LevelDB  or
              CouchDB  .  When using an Amazon Managed Blockchain network with
              Hyperledger Fabric version 1.4 or later, the default is  CouchDB
              .

              Applies only to Hyperledger Fabric.

       JSON Syntax:

          {
            "InstanceType": "string",
            "AvailabilityZone": "string",
            "LogPublishingConfiguration": {
              "Fabric": {
                "ChaincodeLogs": {
                  "Cloudwatch": {
                    "Enabled": true|false
                  }
                },
                "PeerLogs": {
                  "Cloudwatch": {
                    "Enabled": true|false
                  }
                }
              }
            },
            "StateDB": "LevelDB"|"CouchDB"
          }

       --tags (map)
          Tags  to assign to the node. Each tag consists of a key and optional
          value.

          When specifying tags  during  creation,  you  can  specify  multiple
          key-value  pairs  in a single request, with an overall maximum of 50
          tags added to each resource.

          For more information about tags, see Tagging Resources in the Amazon
          Managed  Blockchain  Ethereum Developer Guide , or Tagging Resources
          in the Amazon Managed Blockchain Hyperledger Fabric Developer  Guide
          .

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       NodeId -> (string)
          The unique identifier of the node.



                                                                 CREATE-NODE()
