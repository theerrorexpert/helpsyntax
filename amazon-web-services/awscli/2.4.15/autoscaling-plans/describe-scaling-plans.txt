DESCRIBE-SCALING-PLANS()                              DESCRIBE-SCALING-PLANS()



NAME
       describe-scaling-plans -

DESCRIPTION
       Describes one or more of your scaling plans.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       describe-scaling-plans is a paginated operation. Multiple API calls may
       be issued in order to retrieve the entire data set of results. You  can
       disable pagination by providing the --no-paginate argument.  When using
       --output text and the --query argument on  a  paginated  response,  the
       --query  argument  must  extract data from the results of the following
       query expressions: ScalingPlans

SYNOPSIS
            describe-scaling-plans
          [--scaling-plan-names <value>]
          [--scaling-plan-version <value>]
          [--application-sources <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --scaling-plan-names (list)
          The names of the scaling plans (up to 10). If you  specify  applica-
          tion sources, you cannot specify scaling plan names.

          (string)

       Syntax:

          "string" "string" ...

       --scaling-plan-version (long)
          The  version  number  of the scaling plan. Currently, the only valid
          value is 1 .

          NOTE:
              If you specify a scaling plan version, you must also  specify  a
              scaling plan name.

       --application-sources (list)
          The  sources for the applications (up to 10). If you specify scaling
          plan names, you cannot specify application sources.

          (structure)
              Represents an application source.

              CloudFormationStackARN -> (string)
                 The Amazon Resource Name (ARN) of a AWS CloudFormation stack.

              TagFilters -> (list)
                 A set of tags (up to 50).

                 (structure)
                     Represents a tag.

                     Key -> (string)
                        The tag key.

                     Values -> (list)
                        The tag values (0 to 20).

                        (string)

       JSON Syntax:

          [
            {
              "CloudFormationStackARN": "string",
              "TagFilters": [
                {
                  "Key": "string",
                  "Values": ["string", ...]
                }
                ...
              ]
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size  results  in  more  calls to the AWS service,
          retrieving fewer items in each call. This can help prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To describe a scaling plan

       The following describe-scaling-plans example displays  the  details  of
       the specified scaling plan.

          aws autoscaling-plans describe-scaling-plans \
              --scaling-plan-names scaling-plan-with-asg-and-ddb

       Output:

          {
              "ScalingPlans": [
                  {
                      "LastMutatingRequestTime": 1565388443.963,
                      "ScalingPlanVersion": 1,
                      "CreationTime": 1565388443.963,
                      "ScalingInstructions": [
                          {
                              "ScalingPolicyUpdateBehavior": "ReplaceExternalPolicies",
                              "ScalableDimension": "autoscaling:autoScalingGroup:DesiredCapacity",
                              "TargetTrackingConfigurations": [
                                  {
                                      "PredefinedScalingMetricSpecification": {
                                          "PredefinedScalingMetricType": "ASGAverageCPUUtilization"
                                      },
                                      "TargetValue": 50.0,
                                      "EstimatedInstanceWarmup": 300,
                                      "DisableScaleIn": false
                                  }
                              ],
                              "ResourceId": "autoScalingGroup/my-asg",
                              "DisableDynamicScaling": false,
                              "MinCapacity": 1,
                              "ServiceNamespace": "autoscaling",
                              "MaxCapacity": 10
                          },
                          {
                              "ScalingPolicyUpdateBehavior": "ReplaceExternalPolicies",
                              "ScalableDimension": "dynamodb:table:ReadCapacityUnits",
                              "TargetTrackingConfigurations": [
                                  {
                                      "PredefinedScalingMetricSpecification": {
                                          "PredefinedScalingMetricType": "DynamoDBReadCapacityUtilization"
                                      },
                                      "TargetValue": 50.0,
                                      "ScaleInCooldown": 60,
                                      "DisableScaleIn": false,
                                      "ScaleOutCooldown": 60
                                  }
                              ],
                              "ResourceId": "table/my-table",
                              "DisableDynamicScaling": false,
                              "MinCapacity": 5,
                              "ServiceNamespace": "dynamodb",
                              "MaxCapacity": 10000
                          },
                          {
                              "ScalingPolicyUpdateBehavior": "ReplaceExternalPolicies",
                              "ScalableDimension": "dynamodb:table:WriteCapacityUnits",
                              "TargetTrackingConfigurations": [
                                  {
                                      "PredefinedScalingMetricSpecification": {
                                          "PredefinedScalingMetricType": "DynamoDBWriteCapacityUtilization"
                                      },
                                      "TargetValue": 50.0,
                                      "ScaleInCooldown": 60,
                                      "DisableScaleIn": false,
                                      "ScaleOutCooldown": 60
                                  }
                              ],
                              "ResourceId": "table/my-table",
                              "DisableDynamicScaling": false,
                              "MinCapacity": 5,
                              "ServiceNamespace": "dynamodb",
                              "MaxCapacity": 10000
                          }
                      ],
                      "ApplicationSource": {
                          "TagFilters": [
                              {
                                  "Values": [
                                      "my-application-id"
                                  ],
                                  "Key": "application"
                              }
                          ]
                      },
                      "StatusStartTime": 1565388455.836,
                      "ScalingPlanName": "scaling-plan-with-asg-and-ddb",
                      "StatusMessage": "Scaling plan has been created and applied to all resources.",
                      "StatusCode": "Active"
                  }
              ]
          }

       For  more  information,  see  What Is AWS Auto Scaling? in the AWS Auto
       Scaling User Guide.

OUTPUT
       ScalingPlans -> (list)
          Information about the scaling plans.

          (structure)
              Represents a scaling plan.

              ScalingPlanName -> (string)
                 The name of the scaling plan.

              ScalingPlanVersion -> (long)
                 The version number of the scaling plan.

              ApplicationSource -> (structure)
                 A CloudFormation stack or a set of tags. You can  create  one
                 scaling plan per application source.

                 CloudFormationStackARN -> (string)
                     The  Amazon  Resource  Name (ARN) of a AWS CloudFormation
                     stack.

                 TagFilters -> (list)
                     A set of tags (up to 50).

                     (structure)
                        Represents a tag.

                        Key -> (string)
                            The tag key.

                        Values -> (list)
                            The tag values (0 to 20).

                            (string)

              ScalingInstructions -> (list)
                 The scaling instructions.

                 (structure)
                     Describes a scaling instruction for a  scalable  resource
                     in  a  scaling  plan. Each scaling instruction applies to
                     one resource.

                     AWS Auto Scaling creates target tracking scaling policies
                     based  on the scaling instructions. Target tracking scal-
                     ing  policies  adjust  the  capacity  of  your   scalable
                     resource  as required to maintain resource utilization at
                     the target value that you specified.

                     AWS Auto Scaling also configures predictive  scaling  for
                     your  Amazon  EC2  Auto  Scaling groups using a subset of
                     parameters, including the load metric, the  scaling  met-
                     ric, the target value for the scaling metric, the predic-
                     tive scaling mode (forecast and scale or forecast  only),
                     and  the  desired  behavior  when  the  forecast capacity
                     exceeds the maximum capacity of the resource.  With  pre-
                     dictive  scaling,  AWS  Auto  Scaling generates forecasts
                     with traffic predictions  for  the  two  days  ahead  and
                     schedules scaling actions that proactively add and remove
                     resource capacity to match the forecast.

                     WARNING:
                        We recommend waiting a minimum of 24 hours after  cre-
                        ating  an  Auto  Scaling group to configure predictive
                        scaling. At minimum, there must be 24 hours of histor-
                        ical  data  to  generate a forecast. For more informa-
                        tion, see Best Practices for AWS Auto Scaling  in  the
                        AWS Auto Scaling User Guide .

                     ServiceNamespace -> (string)
                        The namespace of the AWS service.

                     ResourceId -> (string)
                        The  ID  of  the resource. This string consists of the
                        resource type and unique identifier.

                        o Auto Scaling group - The resource type is  autoScal-
                          ingGroup  and  the  unique identifier is the name of
                          the  Auto  Scaling  group.   Example:   autoScaling-
                          Group/my-asg .

                        o ECS  service  - The resource type is service and the
                          unique identifier is the cluster  name  and  service
                          name. Example: service/default/sample-webapp .

                        o Spot   Fleet   request   -   The  resource  type  is
                          spot-fleet-request and the unique identifier is  the
                          Spot       Fleet      request      ID.      Example:
                          spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAM-
                          PLE .

                        o DynamoDB  table - The resource type is table and the
                          unique identifier is the resource ID.  Example:  ta-
                          ble/my-table .

                        o DynamoDB  global secondary index - The resource type
                          is index and the unique identifier is  the  resource
                          ID. Example: table/my-table/index/my-table-index .

                        o Aurora DB cluster - The resource type is cluster and
                          the unique identifier is the cluster name.  Example:
                          cluster:my-db-cluster .

                     ScalableDimension -> (string)
                        The scalable dimension associated with the resource.

                        o autoscaling:autoScalingGroup:DesiredCapacity  -  The
                          desired capacity of an Auto Scaling group.

                        o ecs:service:DesiredCount - The desired task count of
                          an ECS service.

                        o ec2:spot-fleet-request:TargetCapacity  -  The target
                          capacity of a Spot Fleet request.

                        o dynamodb:table:ReadCapacityUnits -  The  provisioned
                          read capacity for a DynamoDB table.

                        o dynamodb:table:WriteCapacityUnits  - The provisioned
                          write capacity for a DynamoDB table.

                        o dynamodb:index:ReadCapacityUnits -  The  provisioned
                          read capacity for a DynamoDB global secondary index.

                        o dynamodb:index:WriteCapacityUnits - The  provisioned
                          write  capacity  for  a  DynamoDB  global  secondary
                          index.

                        o rds:cluster:ReadReplicaCount - The count  of  Aurora
                          Replicas  in  an  Aurora  DB  cluster. Available for
                          Aurora MySQL-compatible  edition  and  Aurora  Post-
                          greSQL-compatible edition.

                     MinCapacity -> (integer)
                        The minimum capacity of the resource.

                     MaxCapacity -> (integer)
                        The maximum capacity of the resource. The exception to
                        this upper limit is if you specify a non-default  set-
                        ting for PredictiveScalingMaxCapacityBehavior .

                     TargetTrackingConfigurations -> (list)
                        The target tracking configurations (up to 10). Each of
                        these structures must specify a unique scaling  metric
                        and a target value for the metric.

                        (structure)
                            Describes  a  target tracking configuration to use
                            with AWS Auto Scaling. Used with   ScalingInstruc-
                            tion and  ScalingPolicy .

                            PredefinedScalingMetricSpecification   ->  (struc-
                            ture)
                               A predefined metric. You can specify  either  a
                               predefined metric or a customized metric.

                               PredefinedScalingMetricType -> (string)
                                   The metric type. The ALBRequestCountPerTar-
                                   get metric type applies only to Auto  Scal-
                                   ing  groups,  Spot  Fleet requests, and ECS
                                   services.

                               ResourceLabel -> (string)
                                   Identifies the resource associated with the
                                   metric  type.  You can't specify a resource
                                   label unless the metric type is ALBRequest-
                                   CountPerTarget  and there is a target group
                                   for an Application Load  Balancer  attached
                                   to  the  Auto  Scaling  group,  Spot  Fleet
                                   request, or ECS service.

                                   You create the resource label by  appending
                                   the  final portion of the load balancer ARN
                                   and the final portion of the  target  group
                                   ARN  into  a  single  value, separated by a
                                   forward   slash   (/).   The   format    is
                                   app/<load-balancer-name>/<load-bal-
                                   ancer-id>/targetgroup/<tar-
                                   get-group-name>/<target-group-id>, where:

                                   o app/<load-balancer-name>/<load-bal-
                                     ancer-id> is the  final  portion  of  the
                                     load balancer ARN

                                   o targetgroup/<target-group-name>/<tar-
                                     get-group-id> is the final portion of the
                                     target group ARN.

                                   This  is an example: app/EC2Co-EcsEl-1TKLT-
                                   MITMM0EO/f37c06a68c1748aa/target-
                                   group/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.

                                   To find the ARN  for  an  Application  Load
                                   Balancer, use the DescribeLoadBalancers API
                                   operation. To find the ARN for  the  target
                                   group,  use  the  DescribeTargetGroups  API
                                   operation.

                            CustomizedScalingMetricSpecification  ->   (struc-
                            ture)
                               A  customized  metric. You can specify either a
                               predefined metric or a customized metric.

                               MetricName -> (string)
                                   The name of the metric.

                               Namespace -> (string)
                                   The namespace of the metric.

                               Dimensions -> (list)
                                   The dimensions of the metric.

                                   Conditional: If you published  your  metric
                                   with  dimensions, you must specify the same
                                   dimensions in your customized scaling  met-
                                   ric specification.

                                   (structure)
                                      Represents  a dimension for a customized
                                      metric.

                                      Name -> (string)
                                          The name of the dimension.

                                      Value -> (string)
                                          The value of the dimension.

                               Statistic -> (string)
                                   The statistic of the metric.

                               Unit -> (string)
                                   The unit of the metric.

                            TargetValue -> (double)
                               The target value for the metric. Although  this
                               property  accepts  numbers  of  type Double, it
                               won't accept values that are either  too  small
                               or  too  large.  Values must be in the range of
                               -2^360 to 2^360.

                            DisableScaleIn -> (boolean)
                               Indicates whether scale in by the target track-
                               ing scaling policy is disabled. If the value is
                               true , scale in  is  disabled  and  the  target
                               tracking scaling policy doesn't remove capacity
                               from the scalable resource. Otherwise, scale in
                               is enabled and the target tracking scaling pol-
                               icy  can  remove  capacity  from  the  scalable
                               resource.

                               The default value is false .

                            ScaleOutCooldown -> (integer)
                               The  amount  of time, in seconds, to wait for a
                               previous scale-out  activity  to  take  effect.
                               This  property  is  not  used  if  the scalable
                               resource is an Auto Scaling group.

                               With the scale-out cooldown period , the inten-
                               tion  is  to continuously (but not excessively)
                               scale  out.  After  Auto  Scaling  successfully
                               scales out using a target tracking scaling pol-
                               icy, it starts to calculate the cooldown  time.
                               The  scaling  policy won't increase the desired
                               capacity again unless either a larger scale out
                               is triggered or the cooldown period ends.

                            ScaleInCooldown -> (integer)
                               The   amount  of  time,  in  seconds,  after  a
                               scale-in  activity  completes  before   another
                               scale-in  activity  can start. This property is
                               not used if the scalable resource  is  an  Auto
                               Scaling group.

                               With  the scale-in cooldown period , the inten-
                               tion is to scale in conservatively  to  protect
                               your  applications  availability,  so  scale-in
                               activities  are  blocked  until  the   cooldown
                               period  has  expired. However, if another alarm
                               triggers  a  scale-out  activity   during   the
                               scale-in  cooldown  period, Auto Scaling scales
                               out the target immediately. In this  case,  the
                               scale-in cooldown period stops and doesn't com-
                               plete.

                            EstimatedInstanceWarmup -> (integer)
                               The estimated time, in seconds, until  a  newly
                               launched  instance can contribute to the Cloud-
                               Watch metrics. This value is used only  if  the
                               resource is an Auto Scaling group.

                     PredefinedLoadMetricSpecification -> (structure)
                        The predefined load metric to use for predictive scal-
                        ing. This parameter or a  CustomizedLoadMetricSpecifi-
                        cation  is  required when configuring predictive scal-
                        ing, and cannot be used otherwise.

                        PredefinedLoadMetricType -> (string)
                            The metric type.

                        ResourceLabel -> (string)
                            Identifies the resource associated with the metric
                            type.  You  can't  specify a resource label unless
                            the metric type is ALBTargetGroupRequestCount  and
                            there  is  a  target group for an Application Load
                            Balancer attached to the Auto Scaling group.

                            You create the resource  label  by  appending  the
                            final  portion  of  the  load balancer ARN and the
                            final portion of the target group ARN into a  sin-
                            gle  value,  separated by a forward slash (/). The
                            format   is    app/<load-balancer-name>/<load-bal-
                            ancer-id>/targetgroup/<target-group-name>/<tar-
                            get-group-id>, where:

                            o app/<load-balancer-name>/<load-balancer-id>   is
                              the final portion of the load balancer ARN

                            o targetgroup/<target-group-name>/<tar-
                              get-group-id> is the final portion of the target
                              group ARN.

                            This   is   an   example:   app/EC2Co-EcsEl-1TKLT-
                            MITMM0EO/f37c06a68c1748aa/target-
                            group/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.

                            To  find the ARN for an Application Load Balancer,
                            use the DescribeLoadBalancers  API  operation.  To
                            find  the  ARN  for  the  target  group,  use  the
                            DescribeTargetGroups API operation.

                     CustomizedLoadMetricSpecification -> (structure)
                        The customized load metric to use for predictive scal-
                        ing.  This parameter or a PredefinedLoadMetricSpecifi-
                        cation is required when configuring  predictive  scal-
                        ing, and cannot be used otherwise.

                        MetricName -> (string)
                            The name of the metric.

                        Namespace -> (string)
                            The namespace of the metric.

                        Dimensions -> (list)
                            The dimensions of the metric.

                            Conditional:  If  you  published  your metric with
                            dimensions, you must specify the  same  dimensions
                            in your customized load metric specification.

                            (structure)
                               Represents a dimension for a customized metric.

                               Name -> (string)
                                   The name of the dimension.

                               Value -> (string)
                                   The value of the dimension.

                        Statistic -> (string)
                            The statistic of the metric. The only valid  value
                            is Sum .

                        Unit -> (string)
                            The unit of the metric.

                     ScheduledActionBufferTime -> (integer)
                        The amount of time, in seconds, to buffer the run time
                        of scheduled scaling actions  when  scaling  out.  For
                        example, if the forecast says to add capacity at 10:00
                        AM, and the buffer time is 5  minutes,  then  the  run
                        time  of  the  corresponding  scheduled scaling action
                        will be 9:55 AM. The intention is  to  give  resources
                        time to be provisioned. For example, it can take a few
                        minutes to launch an EC2 instance. The  actual  amount
                        of  time  required depends on several factors, such as
                        the size of the instance and whether there are startup
                        scripts to complete.

                        The  value  must  be  less  than the forecast interval
                        duration of 3600 seconds (60 minutes). The default  is
                        300 seconds.

                        Only valid when configuring predictive scaling.

                     PredictiveScalingMaxCapacityBehavior -> (string)
                        Defines  the  behavior  that  should be applied if the
                        forecast capacity approaches or  exceeds  the  maximum
                        capacity specified for the resource. The default value
                        is SetForecastCapacityToMaxCapacity .

                        The following are possible values:

                        o SetForecastCapacityToMaxCapacity - AWS Auto  Scaling
                          cannot scale resource capacity higher than the maxi-
                          mum capacity. The maximum capacity is enforced as  a
                          hard limit.

                        o SetMaxCapacityToForecastCapacity  - AWS Auto Scaling
                          may scale resource capacity higher than the  maximum
                          capacity  to equal but not exceed forecast capacity.

                        o SetMaxCapacityAboveForecastCapacity - AWS Auto Scal-
                          ing may scale resource capacity higher than the max-
                          imum capacity  by  a  specified  buffer  value.  The
                          intention  is  to  give  the target tracking scaling
                          policy extra capacity if unexpected traffic  occurs.

                        Only valid when configuring predictive scaling.

                     PredictiveScalingMaxCapacityBuffer -> (integer)
                        The  size of the capacity buffer to use when the fore-
                        cast capacity is  close  to  or  exceeds  the  maximum
                        capacity. The value is specified as a percentage rela-
                        tive to the forecast capacity.  For  example,  if  the
                        buffer  is  10,  this  means a 10 percent buffer, such
                        that if the forecast capacity is 50, and  the  maximum
                        capacity is 40, then the effective maximum capacity is
                        55.

                        Only  valid  when  configuring   predictive   scaling.
                        Required  if  the PredictiveScalingMaxCapacityBehavior
                        is set to  SetMaxCapacityAboveForecastCapacity  ,  and
                        cannot be used otherwise.

                        The range is 1-100.

                     PredictiveScalingMode -> (string)
                        The  predictive  scaling  mode.  The  default value is
                        ForecastAndScale . Otherwise, AWS Auto  Scaling  fore-
                        casts capacity but does not create any scheduled scal-
                        ing actions based on the capacity forecast.

                     ScalingPolicyUpdateBehavior -> (string)
                        Controls whether a resource's externally created scal-
                        ing policies are kept or replaced.

                        The  default  value  is  KeepExternalPolicies . If the
                        parameter is  set  to  ReplaceExternalPolicies  ,  any
                        scaling policies that are external to AWS Auto Scaling
                        are deleted and new target tracking  scaling  policies
                        created.

                        Only valid when configuring dynamic scaling.

                        Condition:  The  number  of  existing  policies  to be
                        replaced must be less than or equal to  50.  If  there
                        are  more  than  50  policies to be replaced, AWS Auto
                        Scaling keeps all existing policies and does not  cre-
                        ate new ones.

                     DisableDynamicScaling -> (boolean)
                        Controls  whether  dynamic scaling by AWS Auto Scaling
                        is disabled. When dynamic scaling is enabled, AWS Auto
                        Scaling creates target tracking scaling policies based
                        on the specified target tracking configurations.

                        The default is enabled (false ).

              StatusCode -> (string)
                 The status of the scaling plan.

                 o Active - The scaling plan is active.

                 o ActiveWithProblems - The scaling plan is  active,  but  the
                   scaling  configuration  for one or more resources could not
                   be applied.

                 o CreationInProgress - The scaling plan is being created.

                 o CreationFailed - The scaling plan could not be created.

                 o DeletionInProgress - The scaling plan is being deleted.

                 o DeletionFailed - The scaling plan could not be deleted.

                 o UpdateInProgress - The scaling plan is being updated.

                 o UpdateFailed - The scaling plan could not be updated.

              StatusMessage -> (string)
                 A simple message about the  current  status  of  the  scaling
                 plan.

              StatusStartTime -> (timestamp)
                 The Unix time stamp when the scaling plan entered the current
                 status.

              CreationTime -> (timestamp)
                 The Unix time stamp when the scaling plan was created.

       NextToken -> (string)
          The token required to get the next set of  results.  This  value  is
          null if there are no more results to return.



                                                      DESCRIBE-SCALING-PLANS()
