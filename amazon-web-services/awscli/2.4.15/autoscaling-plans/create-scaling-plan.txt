CREATE-SCALING-PLAN()                                    CREATE-SCALING-PLAN()



NAME
       create-scaling-plan -

DESCRIPTION
       Creates a scaling plan.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-scaling-plan
          --scaling-plan-name <value>
          --application-source <value>
          --scaling-instructions <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --scaling-plan-name (string)
          The  name  of  the scaling plan. Names cannot contain vertical bars,
          colons, or forward slashes.

       --application-source (structure)
          A CloudFormation stack or set of tags. You can  create  one  scaling
          plan per application source.

          For  more information, see ApplicationSource in the AWS Auto Scaling
          API Reference .

          CloudFormationStackARN -> (string)
              The Amazon Resource Name (ARN) of a AWS CloudFormation stack.

          TagFilters -> (list)
              A set of tags (up to 50).

              (structure)
                 Represents a tag.

                 Key -> (string)
                     The tag key.

                 Values -> (list)
                     The tag values (0 to 20).

                     (string)

       JSON Syntax:

          {
            "CloudFormationStackARN": "string",
            "TagFilters": [
              {
                "Key": "string",
                "Values": ["string", ...]
              }
              ...
            ]
          }

       --scaling-instructions (list)
          The scaling instructions.

          For more information, see ScalingInstruction in the AWS Auto Scaling
          API Reference .

          (structure)
              Describes  a  scaling  instruction  for a scalable resource in a
              scaling plan. Each scaling instruction applies to one  resource.

              AWS  Auto Scaling creates target tracking scaling policies based
              on the scaling instructions. Target  tracking  scaling  policies
              adjust  the  capacity  of  your scalable resource as required to
              maintain resource utilization at the target value that you spec-
              ified.

              AWS  Auto  Scaling  also  configures predictive scaling for your
              Amazon EC2 Auto Scaling groups using  a  subset  of  parameters,
              including  the load metric, the scaling metric, the target value
              for the scaling metric, the predictive  scaling  mode  (forecast
              and  scale  or forecast only), and the desired behavior when the
              forecast capacity exceeds the maximum capacity of the  resource.
              With  predictive  scaling,  AWS Auto Scaling generates forecasts
              with traffic predictions for the two days  ahead  and  schedules
              scaling  actions that proactively add and remove resource capac-
              ity to match the forecast.

              WARNING:
                 We recommend waiting a minimum of 24 hours after creating  an
                 Auto  Scaling group to configure predictive scaling. At mini-
                 mum, there must be 24 hours of historical data to generate  a
                 forecast.  For  more  information, see Best Practices for AWS
                 Auto Scaling in the AWS Auto Scaling User Guide .

              ServiceNamespace -> (string)
                 The namespace of the AWS service.

              ResourceId -> (string)
                 The ID of the resource. This string consists of the  resource
                 type and unique identifier.

                 o Auto  Scaling group - The resource type is autoScalingGroup
                   and the unique identifier is the name of the  Auto  Scaling
                   group. Example: autoScalingGroup/my-asg .

                 o ECS  service  - The resource type is service and the unique
                   identifier is the cluster name and service  name.  Example:
                   service/default/sample-webapp .

                 o Spot    Fleet    request    -    The   resource   type   is
                   spot-fleet-request and the unique identifier  is  the  Spot
                   Fleet            request            ID.            Example:
                   spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE
                   .

                 o DynamoDB  table - The resource type is table and the unique
                   identifier is the resource ID. Example: table/my-table .

                 o DynamoDB global secondary index  -  The  resource  type  is
                   index  and  the unique identifier is the resource ID. Exam-
                   ple: table/my-table/index/my-table-index .

                 o Aurora DB cluster - The resource type is  cluster  and  the
                   unique  identifier  is  the  cluster  name.  Example: clus-
                   ter:my-db-cluster .

              ScalableDimension -> (string)
                 The scalable dimension associated with the resource.

                 o autoscaling:autoScalingGroup:DesiredCapacity - The  desired
                   capacity of an Auto Scaling group.

                 o ecs:service:DesiredCount - The desired task count of an ECS
                   service.

                 o ec2:spot-fleet-request:TargetCapacity - The target capacity
                   of a Spot Fleet request.

                 o dynamodb:table:ReadCapacityUnits  -  The  provisioned  read
                   capacity for a DynamoDB table.

                 o dynamodb:table:WriteCapacityUnits - The  provisioned  write
                   capacity for a DynamoDB table.

                 o dynamodb:index:ReadCapacityUnits  -  The  provisioned  read
                   capacity for a DynamoDB global secondary index.

                 o dynamodb:index:WriteCapacityUnits - The  provisioned  write
                   capacity for a DynamoDB global secondary index.

                 o rds:cluster:ReadReplicaCount - The count of Aurora Replicas
                   in an Aurora DB cluster. Available for Aurora MySQL-compat-
                   ible edition and Aurora PostgreSQL-compatible edition.

              MinCapacity -> (integer)
                 The minimum capacity of the resource.

              MaxCapacity -> (integer)
                 The  maximum  capacity of the resource. The exception to this
                 upper limit is if you specify a non-default setting for  Pre-
                 dictiveScalingMaxCapacityBehavior .

              TargetTrackingConfigurations -> (list)
                 The  target tracking configurations (up to 10). Each of these
                 structures must specify a unique scaling metric and a  target
                 value for the metric.

                 (structure)
                     Describes a target tracking configuration to use with AWS
                     Auto Scaling. Used with  ScalingInstruction and  Scaling-
                     Policy .

                     PredefinedScalingMetricSpecification -> (structure)
                        A  predefined  metric. You can specify either a prede-
                        fined metric or a customized metric.

                        PredefinedScalingMetricType -> (string)
                            The metric type. The ALBRequestCountPerTarget met-
                            ric type applies only to Auto Scaling groups, Spot
                            Fleet requests, and ECS services.

                        ResourceLabel -> (string)
                            Identifies the resource associated with the metric
                            type.  You  can't  specify a resource label unless
                            the metric type  is  ALBRequestCountPerTarget  and
                            there  is  a  target group for an Application Load
                            Balancer attached to the Auto Scaling group,  Spot
                            Fleet request, or ECS service.

                            You  create  the  resource  label by appending the
                            final portion of the load  balancer  ARN  and  the
                            final  portion of the target group ARN into a sin-
                            gle value, separated by a forward slash  (/).  The
                            format    is   app/<load-balancer-name>/<load-bal-
                            ancer-id>/targetgroup/<target-group-name>/<tar-
                            get-group-id>, where:

                            o app/<load-balancer-name>/<load-balancer-id>   is
                              the final portion of the load balancer ARN

                            o targetgroup/<target-group-name>/<tar-
                              get-group-id> is the final portion of the target
                              group ARN.

                            This   is   an   example:   app/EC2Co-EcsEl-1TKLT-
                            MITMM0EO/f37c06a68c1748aa/target-
                            group/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.

                            To find the ARN for an Application Load  Balancer,
                            use  the  DescribeLoadBalancers  API operation. To
                            find  the  ARN  for  the  target  group,  use  the
                            DescribeTargetGroups API operation.

                     CustomizedScalingMetricSpecification -> (structure)
                        A  customized  metric. You can specify either a prede-
                        fined metric or a customized metric.

                        MetricName -> (string)
                            The name of the metric.

                        Namespace -> (string)
                            The namespace of the metric.

                        Dimensions -> (list)
                            The dimensions of the metric.

                            Conditional: If you  published  your  metric  with
                            dimensions,  you  must specify the same dimensions
                            in your customized scaling metric specification.

                            (structure)
                               Represents a dimension for a customized metric.

                               Name -> (string)
                                   The name of the dimension.

                               Value -> (string)
                                   The value of the dimension.

                        Statistic -> (string)
                            The statistic of the metric.

                        Unit -> (string)
                            The unit of the metric.

                     TargetValue -> (double)
                        The  target  value for the metric. Although this prop-
                        erty accepts numbers of type Double, it  won't  accept
                        values  that are either too small or too large. Values
                        must be in the range of -2^360 to 2^360.

                     DisableScaleIn -> (boolean)
                        Indicates whether scale  in  by  the  target  tracking
                        scaling  policy  is  disabled.  If the value is true ,
                        scale in is disabled and the target  tracking  scaling
                        policy  doesn't  remove  capacity  from  the  scalable
                        resource. Otherwise, scale in is enabled and the  tar-
                        get  tracking  scaling policy can remove capacity from
                        the scalable resource.

                        The default value is false .

                     ScaleOutCooldown -> (integer)
                        The amount of time, in seconds, to wait for a previous
                        scale-out  activity  to  take effect. This property is
                        not used if the scalable resource is an  Auto  Scaling
                        group.

                        With  the scale-out cooldown period , the intention is
                        to continuously (but not excessively) scale out. After
                        Auto  Scaling  successfully  scales out using a target
                        tracking scaling policy, it starts  to  calculate  the
                        cooldown  time.  The scaling policy won't increase the
                        desired capacity again unless either  a  larger  scale
                        out is triggered or the cooldown period ends.

                     ScaleInCooldown -> (integer)
                        The  amount  of  time,  in  seconds,  after a scale-in
                        activity completes before  another  scale-in  activity
                        can  start.  This property is not used if the scalable
                        resource is an Auto Scaling group.

                        With the scale-in cooldown period , the  intention  is
                        to  scale  in  conservatively to protect your applica-
                        tions availability, so scale-in activities are blocked
                        until  the  cooldown  period  has expired. However, if
                        another alarm triggers a scale-out activity during the
                        scale-in  cooldown period, Auto Scaling scales out the
                        target  immediately.  In  this  case,   the   scale-in
                        cooldown period stops and doesn't complete.

                     EstimatedInstanceWarmup -> (integer)
                        The estimated time, in seconds, until a newly launched
                        instance can contribute  to  the  CloudWatch  metrics.
                        This  value  is  used  only if the resource is an Auto
                        Scaling group.

              PredefinedLoadMetricSpecification -> (structure)
                 The predefined load metric to  use  for  predictive  scaling.
                 This  parameter  or  a  CustomizedLoadMetricSpecification  is
                 required when configuring predictive scaling, and  cannot  be
                 used otherwise.

                 PredefinedLoadMetricType -> (string)
                     The metric type.

                 ResourceLabel -> (string)
                     Identifies  the resource associated with the metric type.
                     You can't specify a resource label unless the metric type
                     is ALBTargetGroupRequestCount and there is a target group
                     for an Application Load Balancer  attached  to  the  Auto
                     Scaling group.

                     You create the resource label by appending the final por-
                     tion of the load balancer ARN and the  final  portion  of
                     the  target group ARN into a single value, separated by a
                     forward  slash  (/).   The   format   is   app/<load-bal-
                     ancer-name>/<load-balancer-id>/targetgroup/<tar-
                     get-group-name>/<target-group-id>, where:

                     o app/<load-balancer-name>/<load-balancer-id>   is    the
                       final portion of the load balancer ARN

                     o targetgroup/<target-group-name>/<target-group-id>    is
                       the final portion of the target group ARN.

                     This    is     an     example:     app/EC2Co-EcsEl-1TKLT-
                     MITMM0EO/f37c06a68c1748aa/target-
                     group/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.

                     To find the ARN for an Application Load Balancer, use the
                     DescribeLoadBalancers  API operation. To find the ARN for
                     the target group, use the DescribeTargetGroups API opera-
                     tion.

              CustomizedLoadMetricSpecification -> (structure)
                 The  customized  load  metric  to use for predictive scaling.
                 This  parameter  or  a  PredefinedLoadMetricSpecification  is
                 required  when  configuring predictive scaling, and cannot be
                 used otherwise.

                 MetricName -> (string)
                     The name of the metric.

                 Namespace -> (string)
                     The namespace of the metric.

                 Dimensions -> (list)
                     The dimensions of the metric.

                     Conditional: If you published  your  metric  with  dimen-
                     sions,  you must specify the same dimensions in your cus-
                     tomized load metric specification.

                     (structure)
                        Represents a dimension for a customized metric.

                        Name -> (string)
                            The name of the dimension.

                        Value -> (string)
                            The value of the dimension.

                 Statistic -> (string)
                     The statistic of the metric. The only valid value is  Sum
                     .

                 Unit -> (string)
                     The unit of the metric.

              ScheduledActionBufferTime -> (integer)
                 The  amount  of  time,  in seconds, to buffer the run time of
                 scheduled scaling actions when scaling out. For  example,  if
                 the forecast says to add capacity at 10:00 AM, and the buffer
                 time is 5 minutes, then the run  time  of  the  corresponding
                 scheduled scaling action will be 9:55 AM. The intention is to
                 give resources time to be provisioned. For  example,  it  can
                 take  a  few  minutes  to  launch an EC2 instance. The actual
                 amount of time required depends on several factors,  such  as
                 the  size  of  the  instance  and  whether  there are startup
                 scripts to complete.

                 The value must be less than the forecast interval duration of
                 3600 seconds (60 minutes). The default is 300 seconds.

                 Only valid when configuring predictive scaling.

              PredictiveScalingMaxCapacityBehavior -> (string)
                 Defines  the  behavior that should be applied if the forecast
                 capacity approaches or exceeds the maximum capacity specified
                 for  the  resource. The default value is SetForecastCapacity-
                 ToMaxCapacity .

                 The following are possible values:

                 o SetForecastCapacityToMaxCapacity - AWS Auto Scaling  cannot
                   scale  resource  capacity higher than the maximum capacity.
                   The maximum capacity is enforced as a hard limit.

                 o SetMaxCapacityToForecastCapacity -  AWS  Auto  Scaling  may
                   scale resource capacity higher than the maximum capacity to
                   equal but not exceed forecast capacity.

                 o SetMaxCapacityAboveForecastCapacity - AWS Auto Scaling  may
                   scale resource capacity higher than the maximum capacity by
                   a specified buffer value. The intention is to give the tar-
                   get  tracking  scaling  policy extra capacity if unexpected
                   traffic occurs.

                 Only valid when configuring predictive scaling.

              PredictiveScalingMaxCapacityBuffer -> (integer)
                 The size of the capacity buffer  to  use  when  the  forecast
                 capacity  is  close  to  or exceeds the maximum capacity. The
                 value is specified as a percentage relative to  the  forecast
                 capacity.  For  example, if the buffer is 10, this means a 10
                 percent buffer, such that if the forecast capacity is 50, and
                 the maximum capacity is 40, then the effective maximum capac-
                 ity is 55.

                 Only valid when configuring predictive scaling.  Required  if
                 the  PredictiveScalingMaxCapacityBehavior is set to SetMaxCa-
                 pacityAboveForecastCapacity , and cannot be used otherwise.

                 The range is 1-100.

              PredictiveScalingMode -> (string)
                 The predictive scaling mode. The default  value  is  Forecas-
                 tAndScale  .  Otherwise,  AWS Auto Scaling forecasts capacity
                 but does not create any scheduled scaling  actions  based  on
                 the capacity forecast.

              ScalingPolicyUpdateBehavior -> (string)
                 Controls  whether  a  resource's  externally  created scaling
                 policies are kept or replaced.

                 The default value is KeepExternalPolicies . If the  parameter
                 is set to ReplaceExternalPolicies , any scaling policies that
                 are external to AWS Auto Scaling are deleted and  new  target
                 tracking scaling policies created.

                 Only valid when configuring dynamic scaling.

                 Condition:  The  number  of  existing policies to be replaced
                 must be less than or equal to 50. If there are more  than  50
                 policies  to be replaced, AWS Auto Scaling keeps all existing
                 policies and does not create new ones.

              DisableDynamicScaling -> (boolean)
                 Controls whether dynamic scaling by AWS Auto Scaling is  dis-
                 abled. When dynamic scaling is enabled, AWS Auto Scaling cre-
                 ates target tracking scaling policies based on the  specified
                 target tracking configurations.

                 The default is enabled (false ).

       JSON Syntax:

          [
            {
              "ServiceNamespace": "autoscaling"|"ecs"|"ec2"|"rds"|"dynamodb",
              "ResourceId": "string",
              "ScalableDimension": "autoscaling:autoScalingGroup:DesiredCapacity"|"ecs:service:DesiredCount"|"ec2:spot-fleet-request:TargetCapacity"|"rds:cluster:ReadReplicaCount"|"dynamodb:table:ReadCapacityUnits"|"dynamodb:table:WriteCapacityUnits"|"dynamodb:index:ReadCapacityUnits"|"dynamodb:index:WriteCapacityUnits",
              "MinCapacity": integer,
              "MaxCapacity": integer,
              "TargetTrackingConfigurations": [
                {
                  "PredefinedScalingMetricSpecification": {
                    "PredefinedScalingMetricType": "ASGAverageCPUUtilization"|"ASGAverageNetworkIn"|"ASGAverageNetworkOut"|"DynamoDBReadCapacityUtilization"|"DynamoDBWriteCapacityUtilization"|"ECSServiceAverageCPUUtilization"|"ECSServiceAverageMemoryUtilization"|"ALBRequestCountPerTarget"|"RDSReaderAverageCPUUtilization"|"RDSReaderAverageDatabaseConnections"|"EC2SpotFleetRequestAverageCPUUtilization"|"EC2SpotFleetRequestAverageNetworkIn"|"EC2SpotFleetRequestAverageNetworkOut",
                    "ResourceLabel": "string"
                  },
                  "CustomizedScalingMetricSpecification": {
                    "MetricName": "string",
                    "Namespace": "string",
                    "Dimensions": [
                      {
                        "Name": "string",
                        "Value": "string"
                      }
                      ...
                    ],
                    "Statistic": "Average"|"Minimum"|"Maximum"|"SampleCount"|"Sum",
                    "Unit": "string"
                  },
                  "TargetValue": double,
                  "DisableScaleIn": true|false,
                  "ScaleOutCooldown": integer,
                  "ScaleInCooldown": integer,
                  "EstimatedInstanceWarmup": integer
                }
                ...
              ],
              "PredefinedLoadMetricSpecification": {
                "PredefinedLoadMetricType": "ASGTotalCPUUtilization"|"ASGTotalNetworkIn"|"ASGTotalNetworkOut"|"ALBTargetGroupRequestCount",
                "ResourceLabel": "string"
              },
              "CustomizedLoadMetricSpecification": {
                "MetricName": "string",
                "Namespace": "string",
                "Dimensions": [
                  {
                    "Name": "string",
                    "Value": "string"
                  }
                  ...
                ],
                "Statistic": "Average"|"Minimum"|"Maximum"|"SampleCount"|"Sum",
                "Unit": "string"
              },
              "ScheduledActionBufferTime": integer,
              "PredictiveScalingMaxCapacityBehavior": "SetForecastCapacityToMaxCapacity"|"SetMaxCapacityToForecastCapacity"|"SetMaxCapacityAboveForecastCapacity",
              "PredictiveScalingMaxCapacityBuffer": integer,
              "PredictiveScalingMode": "ForecastAndScale"|"ForecastOnly",
              "ScalingPolicyUpdateBehavior": "KeepExternalPolicies"|"ReplaceExternalPolicies",
              "DisableDynamicScaling": true|false
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a scaling plan

       The  following create-scaling-plan example creates a scaling plan named
       my-scaling-plan using an already-created JSON file (named config.json).
       The structure of the scaling plan includes a scaling instruction for an
       Auto Scaling group named my-asg. It specifies the  TagFilters  property
       as  the  application  source and enables predictive scaling and dynamic
       scaling.

          aws autoscaling-plans create-scaling-plan \
              --scaling-plan-name my-scaling-plan \
              --cli-input-json file://~/config.json

       Contents of config.json file:

          {
              "ApplicationSource": {
                  "TagFilters": [
                      {
                          "Key": "purpose",
                          "Values": [
                              "my-application"
                          ]
                      }
                  ]
              },
              "ScalingInstructions": [
                  {
                      "ServiceNamespace": "autoscaling",
                      "ResourceId": "autoScalingGroup/my-asg",
                      "ScalableDimension": "autoscaling:autoScalingGroup:DesiredCapacity",
                      "ScheduledActionBufferTime": 300,
                      "PredictiveScalingMaxCapacityBehavior": "SetForecastCapacityToMaxCapacity",
                      "PredictiveScalingMode": "ForecastAndScale",
                      "PredefinedLoadMetricSpecification": {
                          "PredefinedLoadMetricType": "ASGTotalCPUUtilization"
                      },
                      "ScalingPolicyUpdateBehavior": "ReplaceExternalPolicies",
                      "MinCapacity": 1,
                      "MaxCapacity": 4,
                      "TargetTrackingConfigurations": [
                          {
                              "PredefinedScalingMetricSpecification": {
                                  "PredefinedScalingMetricType": "ASGAverageCPUUtilization"
                              },
                              "TargetValue": 50
                          }
                      ]
                  }
              ]
          }

       Output:

          {
          "ScalingPlanVersion": 1
          }

       For more information, see the AWS Auto Scaling User Guide.

OUTPUT
       ScalingPlanVersion -> (long)
          The version number of the scaling plan. This value  is  always  1  .
          Currently, you cannot have multiple scaling plan versions.



                                                         CREATE-SCALING-PLAN()
