DESCRIBE-SCALING-PLAN-RESOURCES()            DESCRIBE-SCALING-PLAN-RESOURCES()



NAME
       describe-scaling-plan-resources -

DESCRIPTION
       Describes the scalable resources in the specified scaling plan.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       describe-scaling-plan-resources  is a paginated operation. Multiple API
       calls may be issued in  order  to  retrieve  the  entire  data  set  of
       results.  You  can  disable  pagination  by providing the --no-paginate
       argument.  When using --output text and the --query argument on a pagi-
       nated response, the --query argument must extract data from the results
       of the following query expressions: ScalingPlanResources

SYNOPSIS
            describe-scaling-plan-resources
          --scaling-plan-name <value>
          --scaling-plan-version <value>
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --scaling-plan-name (string)
          The name of the scaling plan.

       --scaling-plan-version (long)
          The version number of the scaling plan. Currently,  the  only  valid
          value is 1 .

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size  results  in  more  calls to the AWS service,
          retrieving fewer items in each call. This can help prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To describe the scalable resources for a scaling plan

       The following describe-scaling-plan-resources example displays  details
       about  the  single  scalable  resource  (an Auto Scaling group) that is
       associated with the specified scaling plan.

          aws autoscaling-plans describe-scaling-plan-resources \
              --scaling-plan-name my-scaling-plan \
              --scaling-plan-version 1

       Output:

          {
              "ScalingPlanResources": [
                  {
                      "ScalableDimension": "autoscaling:autoScalingGroup:DesiredCapacity",
                      "ScalingPlanVersion": 1,
                      "ResourceId": "autoScalingGroup/my-asg",
                      "ScalingStatusCode": "Active",
                      "ScalingStatusMessage": "Target tracking scaling policies have been applied to the resource.",
                      "ScalingPolicies": [
                          {
                              "PolicyName": "AutoScaling-my-asg-b1ab65ae-4be3-4634-bd64-c7471662b251",
                              "PolicyType": "TargetTrackingScaling",
                              "TargetTrackingConfiguration": {
                                  "PredefinedScalingMetricSpecification": {
                                      "PredefinedScalingMetricType": "ALBRequestCountPerTarget",
                                      "ResourceLabel": "app/my-alb/f37c06a68c1748aa/targetgroup/my-target-group/6d4ea56ca2d6a18d"
                                  },
                                  "TargetValue": 40.0
                              }
                          }
                      ],
                      "ServiceNamespace": "autoscaling",
                      "ScalingPlanName": "my-scaling-plan"
                  }
              ]
          }

       For more information, see What Is AWS Auto Scaling?  in  the  AWS  Auto
       Scaling User Guide.

OUTPUT
       ScalingPlanResources -> (list)
          Information about the scalable resources.

          (structure)
              Represents a scalable resource.

              ScalingPlanName -> (string)
                 The name of the scaling plan.

              ScalingPlanVersion -> (long)
                 The version number of the scaling plan.

              ServiceNamespace -> (string)
                 The namespace of the AWS service.

              ResourceId -> (string)
                 The  ID of the resource. This string consists of the resource
                 type and unique identifier.

                 o Auto Scaling group - The resource type is  autoScalingGroup
                   and  the  unique identifier is the name of the Auto Scaling
                   group. Example: autoScalingGroup/my-asg .

                 o ECS service - The resource type is service and  the  unique
                   identifier  is  the cluster name and service name. Example:
                   service/default/sample-webapp .

                 o Spot   Fleet   request   -    The    resource    type    is
                   spot-fleet-request  and  the  unique identifier is the Spot
                   Fleet            request            ID.            Example:
                   spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE
                   .

                 o DynamoDB table - The resource type is table and the  unique
                   identifier is the resource ID. Example: table/my-table .

                 o DynamoDB  global  secondary  index  -  The resource type is
                   index and the unique identifier is the resource  ID.  Exam-
                   ple: table/my-table/index/my-table-index .

                 o Aurora  DB  cluster  - The resource type is cluster and the
                   unique identifier  is  the  cluster  name.  Example:  clus-
                   ter:my-db-cluster .

              ScalableDimension -> (string)
                 The scalable dimension for the resource.

                 o autoscaling:autoScalingGroup:DesiredCapacity  - The desired
                   capacity of an Auto Scaling group.

                 o ecs:service:DesiredCount - The desired task count of an ECS
                   service.

                 o ec2:spot-fleet-request:TargetCapacity - The target capacity
                   of a Spot Fleet request.

                 o dynamodb:table:ReadCapacityUnits  -  The  provisioned  read
                   capacity for a DynamoDB table.

                 o dynamodb:table:WriteCapacityUnits  -  The provisioned write
                   capacity for a DynamoDB table.

                 o dynamodb:index:ReadCapacityUnits  -  The  provisioned  read
                   capacity for a DynamoDB global secondary index.

                 o dynamodb:index:WriteCapacityUnits  -  The provisioned write
                   capacity for a DynamoDB global secondary index.

                 o rds:cluster:ReadReplicaCount - The count of Aurora Replicas
                   in an Aurora DB cluster. Available for Aurora MySQL-compat-
                   ible edition and Aurora PostgreSQL-compatible edition.

              ScalingPolicies -> (list)
                 The scaling policies.

                 (structure)
                     Represents a scaling policy.

                     PolicyName -> (string)
                        The name of the scaling policy.

                     PolicyType -> (string)
                        The type of scaling policy.

                     TargetTrackingConfiguration -> (structure)
                        The target tracking scaling policy.  Includes  support
                        for predefined or customized metrics.

                        PredefinedScalingMetricSpecification -> (structure)
                            A predefined metric. You can specify either a pre-
                            defined metric or a customized metric.

                            PredefinedScalingMetricType -> (string)
                               The metric type.  The  ALBRequestCountPerTarget
                               metric   type  applies  only  to  Auto  Scaling
                               groups, Spot Fleet requests, and ECS  services.

                            ResourceLabel -> (string)
                               Identifies  the  resource  associated  with the
                               metric type. You can't specify a resource label
                               unless  the  metric type is ALBRequestCountPer-
                               Target and there  is  a  target  group  for  an
                               Application  Load Balancer attached to the Auto
                               Scaling group, Spot Fleet request, or ECS  ser-
                               vice.

                               You  create the resource label by appending the
                               final portion of the load balancer ARN and  the
                               final  portion  of  the target group ARN into a
                               single value, separated by a forward slash (/).
                               The        format       is       app/<load-bal-
                               ancer-name>/<load-balancer-id>/target-
                               group/<target-group-name>/<target-group-id>,
                               where:

                               o app/<load-balancer-name>/<load-balancer-id>
                                 is the final portion of the load balancer ARN

                               o targetgroup/<target-group-name>/<tar-
                                 get-group-id>  is  the  final  portion of the
                                 target group ARN.

                               This  is  an  example:   app/EC2Co-EcsEl-1TKLT-
                               MITMM0EO/f37c06a68c1748aa/target-
                               group/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.

                               To  find  the  ARN for an Application Load Bal-
                               ancer, use the DescribeLoadBalancers API opera-
                               tion. To find the ARN for the target group, use
                               the DescribeTargetGroups API operation.

                        CustomizedScalingMetricSpecification -> (structure)
                            A customized metric. You can specify either a pre-
                            defined metric or a customized metric.

                            MetricName -> (string)
                               The name of the metric.

                            Namespace -> (string)
                               The namespace of the metric.

                            Dimensions -> (list)
                               The dimensions of the metric.

                               Conditional:  If you published your metric with
                               dimensions, you must specify  the  same  dimen-
                               sions  in your customized scaling metric speci-
                               fication.

                               (structure)
                                   Represents a  dimension  for  a  customized
                                   metric.

                                   Name -> (string)
                                      The name of the dimension.

                                   Value -> (string)
                                      The value of the dimension.

                            Statistic -> (string)
                               The statistic of the metric.

                            Unit -> (string)
                               The unit of the metric.

                        TargetValue -> (double)
                            The  target  value  for  the metric. Although this
                            property accepts numbers of type Double, it  won't
                            accept  values  that  are  either too small or too
                            large. Values must be in the range  of  -2^360  to
                            2^360.

                        DisableScaleIn -> (boolean)
                            Indicates  whether scale in by the target tracking
                            scaling policy is disabled. If the value is true ,
                            scale in is disabled and the target tracking scal-
                            ing policy doesn't remove capacity from the  scal-
                            able  resource. Otherwise, scale in is enabled and
                            the target  tracking  scaling  policy  can  remove
                            capacity from the scalable resource.

                            The default value is false .

                        ScaleOutCooldown -> (integer)
                            The amount of time, in seconds, to wait for a pre-
                            vious scale-out  activity  to  take  effect.  This
                            property  is  not used if the scalable resource is
                            an Auto Scaling group.

                            With the scale-out cooldown period , the intention
                            is  to  continuously  (but  not excessively) scale
                            out. After Auto Scaling  successfully  scales  out
                            using  a target tracking scaling policy, it starts
                            to calculate the cooldown time. The scaling policy
                            won't  increase  the desired capacity again unless
                            either a larger scale  out  is  triggered  or  the
                            cooldown period ends.

                        ScaleInCooldown -> (integer)
                            The  amount  of time, in seconds, after a scale-in
                            activity completes before another scale-in  activ-
                            ity  can  start.  This property is not used if the
                            scalable resource is an Auto Scaling group.

                            With the scale-in cooldown period , the  intention
                            is  to  scale  in  conservatively  to protect your
                            applications availability, so scale-in  activities
                            are blocked until the cooldown period has expired.
                            However, if another  alarm  triggers  a  scale-out
                            activity during the scale-in cooldown period, Auto
                            Scaling scales out the target immediately. In this
                            case,  the  scale-in  cooldown  period  stops  and
                            doesn't complete.

                        EstimatedInstanceWarmup -> (integer)
                            The estimated time,  in  seconds,  until  a  newly
                            launched instance can contribute to the CloudWatch
                            metrics. This value is used only if  the  resource
                            is an Auto Scaling group.

              ScalingStatusCode -> (string)
                 The scaling status of the resource.

                 o Active - The scaling configuration is active.

                 o Inactive  - The scaling configuration is not active because
                   the scaling plan is being created or the scaling configura-
                   tion  could  not  be  applied. Check the status message for
                   more information.

                 o PartiallyActive - The scaling  configuration  is  partially
                   active because the scaling plan is being created or deleted
                   or the scaling configuration could not  be  fully  applied.
                   Check the status message for more information.

              ScalingStatusMessage -> (string)
                 A  simple  message  about  the  current scaling status of the
                 resource.

       NextToken -> (string)
          The token required to get the next set of  results.  This  value  is
          null if there are no more results to return.



                                             DESCRIBE-SCALING-PLAN-RESOURCES()
