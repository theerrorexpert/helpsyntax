GET-FUNCTION-DEFINITION-VERSION()            GET-FUNCTION-DEFINITION-VERSION()



NAME
       get-function-definition-version -

DESCRIPTION
       Retrieves  information  about  a  Lambda  function  definition version,
       including which Lambda functions are included in the version and  their
       configurations.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-function-definition-version
          --function-definition-id <value>
          --function-definition-version-id <value>
          [--next-token <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --function-definition-id (string) The ID of the Lambda function defini-
       tion.

       --function-definition-version-id (string) The ID of the function  defi-
       nition version. This value maps to the ''Version'' property of the cor-
       responding ''VersionInformation'' object, which is returned by  ''List-
       FunctionDefinitionVersions''  requests.  If the version is the last one
       that was associated with a function definition, the value also maps  to
       the  ''LatestVersion'' property of the corresponding ''DefinitionInfor-
       mation'' object.

       --next-token (string) The  token  for  the  next  set  of  results,  or
       ''null'' if there are no additional results.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To retrieve details about a specific version of a Lambda function

       The  following  get-function-definition-version  retrieves  information
       about the specified version of the specified  function  definition.  To
       retrieve  the  IDs  of all versions of the function definition, use the
       list-function-definition-versions command. To retrieve the  ID  of  the
       last  version  added  to  the  function  definition,  use the get-func-
       tion-definition command and check the LatestVersion property.

          aws greengrass get-function-definition-version \
              --function-definition-id "063f5d1a-1dd1-40b4-9b51-56f8993d0f85" \
              --function-definition-version-id "9748fda7-1589-4fcc-ac94-f5559e88678b"

       Output:

          {
              "Arn": "arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/063f5d1a-1dd1-40b4-9b51-56f8993d0f85/versions/9748fda7-1589-4fcc-ac94-f5559e88678b",
              "CreationTimestamp": "2019-06-18T17:04:30.776Z",
              "Definition": {
                  "Functions": [
                      {
                          "FunctionArn": "arn:aws:lambda:::function:GGIPDetector:1",
                          "FunctionConfiguration": {
                              "Environment": {},
                              "MemorySize": 32768,
                              "Pinned": true,
                              "Timeout": 3
                          },
                          "Id": "26b69bdb-e547-46bc-9812-84ec04b6cc8c"
                      },
                      {
                          "FunctionArn": "arn:aws:lambda:us-west-2:123456789012:function:Greengrass_HelloWorld:GG_HelloWorld",
                          "FunctionConfiguration": {
                              "EncodingType": "json",
                              "Environment": {
                                  "Variables": {}
                              },
                              "MemorySize": 16384,
                              "Pinned": true,
                              "Timeout": 25
                          },
                          "Id": "384465a8-eedf-48c6-b793-4c35f7bfae9b"
                      }
                  ]
              },
              "Id": "063f5d1a-1dd1-40b4-9b51-56f8993d0f85",
              "Version": "9748fda7-1589-4fcc-ac94-f5559e88678b"
          }

OUTPUT
       Arn -> (string)
          The ARN of the function definition version.

       CreationTimestamp -> (string)
          The time, in milliseconds since the epoch, when the function defini-
          tion version was created.

       Definition -> (structure)
          Information on the definition.

          DefaultConfig -> (structure)
              The  default  configuration that applies to all Lambda functions
              in this function definition version. Individual Lambda functions
              can override these settings.

              Execution -> (structure)
                 Configuration  information  that specifies how a Lambda func-
                 tion runs.

                 IsolationMode -> (string)
                     Specifies whether the Lambda function runs  in  a  Green-
                     grass  container  (default)  or without containerization.
                     Unless your scenario requires that you run  without  con-
                     tainerization,  we recommend that you run in a Greengrass
                     container. Omit this value to  run  the  Lambda  function
                     with the default containerization for the group.

                 RunAs -> (structure)
                     Specifies  the  user and group whose permissions are used
                     when running the Lambda function. You can specify one  or
                     both  values to override the default values. We recommend
                     that you avoid running as root unless  absolutely  neces-
                     sary  to minimize the risk of unintended changes or mali-
                     cious attacks. To run as root, you must set  ''Isolation-
                     Mode''  to  ''NoContainer''  and  update  config.json  in
                     ''greengrass-root/config''   to   set    ''allowFunction-
                     sToRunAsRoot'' to ''yes''.

                     Gid -> (integer)
                        The  group  ID  whose  permissions  are  used to run a
                        Lambda function.

                     Uid -> (integer)
                        The user ID whose permissions are used to run a Lambda
                        function.

          Functions -> (list)
              A  list of Lambda functions in this function definition version.

              (structure)
                 Information about a Lambda function.

                 FunctionArn -> (string)
                     The ARN of the Lambda function.

                 FunctionConfiguration -> (structure)
                     The configuration of the Lambda function.

                     EncodingType -> (string)
                        The expected encoding type of the  input  payload  for
                        the function. The default is ''json''.

                     Environment -> (structure)
                        The environment configuration of the function.

                        AccessSysfs -> (boolean)
                            If  true, the Lambda function is allowed to access
                            the host's /sys folder. Use this when  the  Lambda
                            function  needs  to  read  device information from
                            /sys. This setting applies only when you  run  the
                            Lambda function in a Greengrass container.

                        Execution -> (structure)
                            Configuration  related  to  executing  the  Lambda
                            function

                            IsolationMode -> (string)
                               Specifies whether the Lambda function runs in a
                               Greengrass  container (default) or without con-
                               tainerization. Unless  your  scenario  requires
                               that  you run without containerization, we rec-
                               ommend that you run in a Greengrass  container.
                               Omit this value to run the Lambda function with
                               the default containerization for the group.

                            RunAs -> (structure)
                               Specifies the user and group whose  permissions
                               are  used when running the Lambda function. You
                               can specify one or both values to override  the
                               default  values.  We  recommend  that you avoid
                               running as root unless absolutely necessary  to
                               minimize  the  risk  of  unintended  changes or
                               malicious attacks. To run as root, you must set
                               ''IsolationMode'' to ''NoContainer'' and update
                               config.json  in  ''greengrass-root/config''  to
                               set ''allowFunctionsToRunAsRoot'' to ''yes''.

                               Gid -> (integer)
                                   The  group ID whose permissions are used to
                                   run a Lambda function.

                               Uid -> (integer)
                                   The user ID whose permissions are  used  to
                                   run a Lambda function.

                        ResourceAccessPolicies -> (list)
                            A  list  of the resources, with their permissions,
                            to which  the  Lambda  function  will  be  granted
                            access.  A  Lambda  function  can  have at most 10
                            resources. ResourceAccessPolicies apply only  when
                            you  run  the Lambda function in a Greengrass con-
                            tainer.

                            (structure)
                               A policy used  by  the  function  to  access  a
                               resource.

                               Permission -> (string)
                                   The  permissions  that  the Lambda function
                                   has to the resource. Can be one  of  ''rw''
                                   (read/write) or ''ro'' (read-only).

                               ResourceId -> (string)
                                   The   ID  of  the  resource.  (This  ID  is
                                   assigned to the resource  when  you  create
                                   the resource definiton.)

                        Variables -> (map)
                            Environment  variables  for  the Lambda function's
                            configuration.

                            key -> (string)

                            value -> (string)

                     ExecArgs -> (string)
                        The execution arguments.

                     Executable -> (string)
                        The name of the function executable.

                     MemorySize -> (integer)
                        The memory size, in KB, which the  function  requires.
                        This  setting  is not applicable and should be cleared
                        when you run the Lambda function without containeriza-
                        tion.

                     Pinned -> (boolean)
                        True if the function is pinned. Pinned means the func-
                        tion is long-lived and starts when the core starts.

                     Timeout -> (integer)
                        The  allowed  function  execution  time,  after  which
                        Lambda  should  terminate  the  function. This timeout
                        still applies to  pinned  Lambda  functions  for  each
                        request.

                 Id -> (string)
                     A  descriptive  or  arbitrary  ID  for the function. This
                     value must be unique within the function definition  ver-
                     sion.   Max   length   is  128  characters  with  pattern
                     ''[a-zA-Z0-9:_-]+''.

       Id -> (string)
          The ID of the function definition version.

       NextToken -> (string)
          The token for the next set of results, or ''null'' if there  are  no
          additional results.

       Version -> (string)
          The version of the function definition version.



                                             GET-FUNCTION-DEFINITION-VERSION()
