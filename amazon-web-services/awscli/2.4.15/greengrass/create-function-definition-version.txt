CREATE-FUNCTION-DEFINITION-VERSION()      CREATE-FUNCTION-DEFINITION-VERSION()



NAME
       create-function-definition-version -

DESCRIPTION
       Creates a version of a Lambda function definition that has already been
       defined.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-function-definition-version
          [--amzn-client-token <value>]
          [--default-config <value>]
          --function-definition-id <value>
          [--functions <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --amzn-client-token (string) A client token used to correlate  requests
       and responses.

       --default-config  (structure) The default configuration that applies to
       all Lambda functions in this function  definition  version.  Individual
       Lambda functions can override these settings.Execution -> (structure)
          Configuration information that specifies how a Lambda function runs.

          IsolationMode -> (string)
              Specifies whether the Lambda function runs in a Greengrass  con-
              tainer  (default)  or without containerization. Unless your sce-
              nario requires that you run without containerization, we  recom-
              mend  that you run in a Greengrass container. Omit this value to
              run the Lambda function with the  default  containerization  for
              the group.

          RunAs -> (structure)
              Specifies  the  user  and  group whose permissions are used when
              running the Lambda function. You can specify one or both  values
              to override the default values. We recommend that you avoid run-
              ning as root unless absolutely necessary to minimize the risk of
              unintended  changes  or  malicious  attacks. To run as root, you
              must set ''IsolationMode'' to ''NoContainer''  and  update  con-
              fig.json  in  ''greengrass-root/config'' to set ''allowFunction-
              sToRunAsRoot'' to ''yes''.

              Gid -> (integer)
                 The group ID whose permissions are used to run a Lambda func-
                 tion.

              Uid -> (integer)
                 The  user ID whose permissions are used to run a Lambda func-
                 tion.

       Shorthand Syntax:

          Execution={IsolationMode=string,RunAs={Gid=integer,Uid=integer}}

       JSON Syntax:

          {
            "Execution": {
              "IsolationMode": "GreengrassContainer"|"NoContainer",
              "RunAs": {
                "Gid": integer,
                "Uid": integer
              }
            }
          }

       --function-definition-id (string) The ID of the Lambda function defini-
       tion.

       --functions  (list) A list of Lambda functions in this function defini-
       tion version.(structure)
          Information about a Lambda function.

          FunctionArn -> (string)
              The ARN of the Lambda function.

          FunctionConfiguration -> (structure)
              The configuration of the Lambda function.

              EncodingType -> (string)
                 The expected encoding type of the input payload for the func-
                 tion. The default is ''json''.

              Environment -> (structure)
                 The environment configuration of the function.

                 AccessSysfs -> (boolean)
                     If  true,  the  Lambda  function is allowed to access the
                     host's /sys folder. Use this  when  the  Lambda  function
                     needs  to read device information from /sys. This setting
                     applies only when you run the Lambda function in a Green-
                     grass container.

                 Execution -> (structure)
                     Configuration related to executing the Lambda function

                     IsolationMode -> (string)
                        Specifies whether the Lambda function runs in a Green-
                        grass container (default) or without containerization.
                        Unless  your  scenario  requires  that you run without
                        containerization, we  recommend  that  you  run  in  a
                        Greengrass  container.  Omit  this  value  to  run the
                        Lambda function with the default containerization  for
                        the group.

                     RunAs -> (structure)
                        Specifies  the  user  and  group whose permissions are
                        used when running the Lambda function. You can specify
                        one  or both values to override the default values. We
                        recommend that you avoid running as root unless  abso-
                        lutely  necessary  to  minimize the risk of unintended
                        changes or malicious attacks. To run as root, you must
                        set  ''IsolationMode''  to  ''NoContainer'' and update
                        config.json  in  ''greengrass-root/config''   to   set
                        ''allowFunctionsToRunAsRoot'' to ''yes''.

                        Gid -> (integer)
                            The  group  ID whose permissions are used to run a
                            Lambda function.

                        Uid -> (integer)
                            The user ID whose permissions are used  to  run  a
                            Lambda function.

                 ResourceAccessPolicies -> (list)
                     A list of the resources, with their permissions, to which
                     the Lambda function will  be  granted  access.  A  Lambda
                     function  can  have  at  most  10  resources. ResourceAc-
                     cessPolicies apply only when you run the Lambda  function
                     in a Greengrass container.

                     (structure)
                        A policy used by the function to access a resource.

                        Permission -> (string)
                            The  permissions  that  the Lambda function has to
                            the resource. Can be one of ''rw'' (read/write) or
                            ''ro'' (read-only).

                        ResourceId -> (string)
                            The  ID  of  the resource. (This ID is assigned to
                            the resource when you create the resource  defini-
                            ton.)

                 Variables -> (map)
                     Environment  variables for the Lambda function's configu-
                     ration.

                     key -> (string)

                     value -> (string)

              ExecArgs -> (string)
                 The execution arguments.

              Executable -> (string)
                 The name of the function executable.

              MemorySize -> (integer)
                 The memory size, in KB, which  the  function  requires.  This
                 setting  is not applicable and should be cleared when you run
                 the Lambda function without containerization.

              Pinned -> (boolean)
                 True if the function is pinned. Pinned means the function  is
                 long-lived and starts when the core starts.

              Timeout -> (integer)
                 The  allowed  function  execution  time,  after  which Lambda
                 should terminate the function. This timeout still applies  to
                 pinned Lambda functions for each request.

          Id -> (string)
              A  descriptive or arbitrary ID for the function. This value must
              be unique within the function definition version. Max length  is
              128 characters with pattern ''[a-zA-Z0-9:_-]+''.

       JSON Syntax:

          [
            {
              "FunctionArn": "string",
              "FunctionConfiguration": {
                "EncodingType": "binary"|"json",
                "Environment": {
                  "AccessSysfs": true|false,
                  "Execution": {
                    "IsolationMode": "GreengrassContainer"|"NoContainer",
                    "RunAs": {
                      "Gid": integer,
                      "Uid": integer
                    }
                  },
                  "ResourceAccessPolicies": [
                    {
                      "Permission": "ro"|"rw",
                      "ResourceId": "string"
                    }
                    ...
                  ],
                  "Variables": {"string": "string"
                    ...}
                },
                "ExecArgs": "string",
                "Executable": "string",
                "MemorySize": integer,
                "Pinned": true|false,
                "Timeout": integer
              },
              "Id": "string"
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a version of the function defintion

       The  following create-function-definition-version example creates a new
       version of the specified function definition. This version specifies  a
       single  function whose ID is Hello-World-function, allows access to the
       file system, and specifies a maximum memory size and timeout period.

          aws greengrass create-function-definition-version \
              --cli-input-json "{\"FunctionDefinitionId\": \"e626e8c9-3b8f-4bf3-9cdc-d26ecdeb9fa3\",\"Functions\": [{\"Id\": \"Hello-World-function\", \"FunctionArn\": \""arn:aws:lambda:us-west-2:123456789012:function:Greengrass_HelloWorld_Counter:gghw-alias"\",\"FunctionConfiguration\": {\"Environment\": {\"AccessSysfs\": true},\"Executable\": \"greengrassHelloWorldCounter.function_handler\",\"MemorySize\": 16000,\"Pinned\": false,\"Timeout\": 25}}]}"

       Output:

          {
              "Arn": "arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/e626e8c9-3b8f-4bf3-9cdc-d26ecdeb9fa3/versions/74abd1cc-637e-4abe-8684-9a67890f4043",
              "CreationTimestamp": "2019-06-25T22:03:43.376Z",
              "Id": "e626e8c9-3b8f-4bf3-9cdc-d26ecdeb9fa3",
              "Version": "74abd1cc-637e-4abe-8684-9a67890f4043"
          }

OUTPUT
       Arn -> (string)
          The ARN of the version.

       CreationTimestamp -> (string)
          The time, in milliseconds since the epoch, when the version was cre-
          ated.

       Id -> (string)
          The ID of the parent definition that the version is associated with.

       Version -> (string)
          The ID of the version.



                                          CREATE-FUNCTION-DEFINITION-VERSION()
