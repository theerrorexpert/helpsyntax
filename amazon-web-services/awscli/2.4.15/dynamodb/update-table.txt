UPDATE-TABLE()                                                  UPDATE-TABLE()



NAME
       update-table -

DESCRIPTION
       Modifies the provisioned throughput settings, global secondary indexes,
       or DynamoDB Streams settings for a given table.

       You can only perform one of the following operations at once:

       o Modify the provisioned throughput settings of the table.

       o Enable or disable DynamoDB Streams on the table.

       o Remove a global secondary index from the table.

       o Create a new global secondary index on the  table.  After  the  index
         begins  backfilling,  you can use UpdateTable to perform other opera-
         tions.
          UpdateTable is an asynchronous operation; while it is executing, the
          table  status changes from ACTIVE to UPDATING . While it is UPDATING
          , you cannot issue  another  UpdateTable  request.  When  the  table
          returns  to the ACTIVE state, the UpdateTable operation is complete.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            update-table
          [--attribute-definitions <value>]
          --table-name <value>
          [--billing-mode <value>]
          [--provisioned-throughput <value>]
          [--global-secondary-index-updates <value>]
          [--stream-specification <value>]
          [--sse-specification <value>]
          [--replica-updates <value>]
          [--table-class <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --attribute-definitions (list)
          An array of attributes that describe the key schema  for  the  table
          and  indexes.  If you are adding a new global secondary index to the
          table, AttributeDefinitions must include the key element(s)  of  the
          new index.

          (structure)
              Represents  an  attribute  for describing the key schema for the
              table and indexes.

              AttributeName -> (string)
                 A name for the attribute.

              AttributeType -> (string)
                 The data type for the attribute, where:

                 o S - the attribute is of type String

                 o N - the attribute is of type Number

                 o B - the attribute is of type Binary

       Shorthand Syntax:

          AttributeName=string,AttributeType=string ...

       JSON Syntax:

          [
            {
              "AttributeName": "string",
              "AttributeType": "S"|"N"|"B"
            }
            ...
          ]

       --table-name (string)
          The name of the table to be updated.

       --billing-mode (string)
          Controls how you are charged for read and write throughput  and  how
          you  manage  capacity. When switching from pay-per-request to provi-
          sioned capacity, initial provisioned capacity values  must  be  set.
          The  initial  provisioned capacity values are estimated based on the
          consumed read and write capacity of your table and global  secondary
          indexes over the past 30 minutes.

          o PROVISIONED - We recommend using PROVISIONED for predictable work-
            loads. PROVISIONED sets the billing mode to Provisioned Mode .

          o PAY_PER_REQUEST - We recommend using  PAY_PER_REQUEST  for  unpre-
            dictable  workloads.  PAY_PER_REQUEST  sets  the  billing  mode to
            On-Demand Mode .

          Possible values:

          o PROVISIONED

          o PAY_PER_REQUEST

       --provisioned-throughput (structure)
          The new provisioned throughput settings for the specified  table  or
          index.

          ReadCapacityUnits -> (long)
              The  maximum  number  of  strongly consistent reads consumed per
              second before DynamoDB returns a ThrottlingException . For  more
              information,  see  Specifying Read and Write Requirements in the
              Amazon DynamoDB Developer Guide .

              If read/write capacity mode is PAY_PER_REQUEST the value is  set
              to 0.

          WriteCapacityUnits -> (long)
              The maximum number of writes consumed per second before DynamoDB
              returns  a  ThrottlingException  .  For  more  information,  see
              Specifying  Read  and  Write Requirements in the Amazon DynamoDB
              Developer Guide .

              If read/write capacity mode is PAY_PER_REQUEST the value is  set
              to 0.

       Shorthand Syntax:

          ReadCapacityUnits=long,WriteCapacityUnits=long

       JSON Syntax:

          {
            "ReadCapacityUnits": long,
            "WriteCapacityUnits": long
          }

       --global-secondary-index-updates (list)
          An  array of one or more global secondary indexes for the table. For
          each index in the array, you can request one action:

          o Create - add a new global secondary index to the table.

          o Update - modify the provisioned throughput settings of an existing
            global secondary index.

          o Delete - remove a global secondary index from the table.

          You  can  create  or  delete  only  one  global  secondary index per
          UpdateTable operation.

          For more information, see Managing Global Secondary Indexes  in  the
          Amazon DynamoDB Developer Guide .

          (structure)
              Represents one of the following:

              o A new global secondary index to be added to an existing table.

              o New provisioned throughput parameters for an  existing  global
                secondary index.

              o An  existing  global  secondary  index  to  be removed from an
                existing table.

              Update -> (structure)
                 The name of an existing global secondary  index,  along  with
                 new  provisioned  throughput  settings  to be applied to that
                 index.

                 IndexName -> (string)
                     The name of the global secondary index to be updated.

                 ProvisionedThroughput -> (structure)
                     Represents the provisioned throughput  settings  for  the
                     specified global secondary index.

                     For  current  minimum  and maximum provisioned throughput
                     values, see Service, Account, and  Table  Quotas  in  the
                     Amazon DynamoDB Developer Guide .

                     ReadCapacityUnits -> (long)
                        The  maximum  number of strongly consistent reads con-
                        sumed per second  before  DynamoDB  returns  a  Throt-
                        tlingException  . For more information, see Specifying
                        Read and Write Requirements  in  the  Amazon  DynamoDB
                        Developer Guide .

                        If  read/write  capacity  mode  is PAY_PER_REQUEST the
                        value is set to 0.

                     WriteCapacityUnits -> (long)
                        The maximum  number  of  writes  consumed  per  second
                        before  DynamoDB  returns  a ThrottlingException . For
                        more  information,  see  Specifying  Read  and   Write
                        Requirements  in the Amazon DynamoDB Developer Guide .

                        If read/write capacity  mode  is  PAY_PER_REQUEST  the
                        value is set to 0.

              Create -> (structure)
                 The parameters required for creating a global secondary index
                 on an existing table:

                 o IndexName

                 o KeySchema

                 o AttributeDefinitions

                 o Projection

                 o ProvisionedThroughput

                 IndexName -> (string)
                     The name of the global secondary index to be created.

                 KeySchema -> (list)
                     The key schema for the global secondary index.

                     (structure)
                        Represents a single element of a  key  schema.  A  key
                        schema  specifies the attributes that make up the pri-
                        mary key of a table,  or  the  key  attributes  of  an
                        index.

                        A KeySchemaElement represents exactly one attribute of
                        the primary key. For example,  a  simple  primary  key
                        would  be represented by one KeySchemaElement (for the
                        partition key). A composite primary key would  require
                        one   KeySchemaElement  for  the  partition  key,  and
                        another KeySchemaElement for the sort key.

                        A  KeySchemaElement  must  be  a   scalar,   top-level
                        attribute (not a nested attribute). The data type must
                        be one of String, Number,  or  Binary.  The  attribute
                        cannot be nested within a List or a Map.

                        AttributeName -> (string)
                            The name of a key attribute.

                        KeyType -> (string)
                            The role that this key attribute will assume:

                            o HASH - partition key

                            o RANGE - sort key

                            NOTE:
                               The  partition  key of an item is also known as
                               its hash attribute . The term "hash  attribute"
                               derives  from  DynamoDB's  usage of an internal
                               hash function to evenly distribute  data  items
                               across partitions, based on their partition key
                               values.

                               The sort key of an item is also  known  as  its
                               range  attribute  .  The term "range attribute"
                               derives from the way DynamoDB stores items with
                               the   same   partition   key  physically  close
                               together, in  sorted  order  by  the  sort  key
                               value.

                 Projection -> (structure)
                     Represents  attributes  that  are copied (projected) from
                     the table into an index. These are  in  addition  to  the
                     primary  key  attributes  and index key attributes, which
                     are automatically projected.

                     ProjectionType -> (string)
                        The set of attributes  that  are  projected  into  the
                        index:

                        o KEYS_ONLY - Only the index and primary keys are pro-
                          jected into the index.

                        o INCLUDE - In addition to the attributes described in
                          KEYS_ONLY  ,  the secondary index will include other
                          non-key attributes that you specify.

                        o ALL - All of the table attributes are projected into
                          the index.

                     NonKeyAttributes -> (list)
                        Represents  the  non-key attribute names which will be
                        projected into the index.

                        For local secondary indexes, the total count  of  Non-
                        KeyAttributes summed across all of the local secondary
                        indexes, must not exceed 20. If you project  the  same
                        attribute  into  two different indexes, this counts as
                        two distinct attributes when determining the total.

                        (string)

                 ProvisionedThroughput -> (structure)
                     Represents the provisioned throughput  settings  for  the
                     specified global secondary index.

                     For  current  minimum  and maximum provisioned throughput
                     values, see Service, Account, and  Table  Quotas  in  the
                     Amazon DynamoDB Developer Guide .

                     ReadCapacityUnits -> (long)
                        The  maximum  number of strongly consistent reads con-
                        sumed per second  before  DynamoDB  returns  a  Throt-
                        tlingException  . For more information, see Specifying
                        Read and Write Requirements  in  the  Amazon  DynamoDB
                        Developer Guide .

                        If  read/write  capacity  mode  is PAY_PER_REQUEST the
                        value is set to 0.

                     WriteCapacityUnits -> (long)
                        The maximum  number  of  writes  consumed  per  second
                        before  DynamoDB  returns  a ThrottlingException . For
                        more  information,  see  Specifying  Read  and   Write
                        Requirements  in the Amazon DynamoDB Developer Guide .

                        If read/write capacity  mode  is  PAY_PER_REQUEST  the
                        value is set to 0.

              Delete -> (structure)
                 The name of an existing global secondary index to be removed.

                 IndexName -> (string)
                     The name of the global secondary index to be deleted.

       JSON Syntax:

          [
            {
              "Update": {
                "IndexName": "string",
                "ProvisionedThroughput": {
                  "ReadCapacityUnits": long,
                  "WriteCapacityUnits": long
                }
              },
              "Create": {
                "IndexName": "string",
                "KeySchema": [
                  {
                    "AttributeName": "string",
                    "KeyType": "HASH"|"RANGE"
                  }
                  ...
                ],
                "Projection": {
                  "ProjectionType": "ALL"|"KEYS_ONLY"|"INCLUDE",
                  "NonKeyAttributes": ["string", ...]
                },
                "ProvisionedThroughput": {
                  "ReadCapacityUnits": long,
                  "WriteCapacityUnits": long
                }
              },
              "Delete": {
                "IndexName": "string"
              }
            }
            ...
          ]

       --stream-specification (structure)
          Represents the DynamoDB Streams configuration for the table.

          NOTE:
              You receive a ResourceInUseException if  you  try  to  enable  a
              stream  on  a  table that already has a stream, or if you try to
              disable a stream on a table that doesn't have a stream.

          StreamEnabled -> (boolean)
              Indicates whether DynamoDB Streams is enabled (true) or disabled
              (false) on the table.

          StreamViewType -> (string)
              When an item in the table is modified, StreamViewType determines
              what information is written to the stream for this table.  Valid
              values for StreamViewType are:

              o KEYS_ONLY  -  Only the key attributes of the modified item are
                written to the stream.

              o NEW_IMAGE - The entire item, as it appears after it was  modi-
                fied, is written to the stream.

              o OLD_IMAGE - The entire item, as it appeared before it was mod-
                ified, is written to the stream.

              o NEW_AND_OLD_IMAGES - Both the new and the old item  images  of
                the item are written to the stream.

       Shorthand Syntax:

          StreamEnabled=boolean,StreamViewType=string

       JSON Syntax:

          {
            "StreamEnabled": true|false,
            "StreamViewType": "NEW_IMAGE"|"OLD_IMAGE"|"NEW_AND_OLD_IMAGES"|"KEYS_ONLY"
          }

       --sse-specification (structure)
          The new server-side encryption settings for the specified table.

          Enabled -> (boolean)
              Indicates whether server-side encryption is done using an Amazon
              Web Services managed key or an Amazon Web Services owned key. If
              enabled (true), server-side encryption type is set to KMS and an
              Amazon Web Services managed key is used (KMS charges apply).  If
              disabled (false) or not specified, server-side encryption is set
              to Amazon Web Services owned key.

          SSEType -> (string)
              Server-side encryption type. The only supported value is:

              o KMS - Server-side encryption that uses Key Management Service.
                The  key  is stored in your account and is managed by KMS (KMS
                charges apply).

          KMSMasterKeyId -> (string)
              The KMS key that should be used for the KMS encryption. To spec-
              ify  a  key,  use  its key ID, Amazon Resource Name (ARN), alias
              name, or alias ARN. Note  that  you  should  only  provide  this
              parameter  if the key is different from the default DynamoDB key
              alias/aws/dynamodb .

       Shorthand Syntax:

          Enabled=boolean,SSEType=string,KMSMasterKeyId=string

       JSON Syntax:

          {
            "Enabled": true|false,
            "SSEType": "AES256"|"KMS",
            "KMSMasterKeyId": "string"
          }

       --replica-updates (list)
          A list of replica update actions (create, delete, or update) for the
          table.

          NOTE:
              This  property  only  applies  to  Version  2019.11.21 of global
              tables.

          (structure)
              Represents one of the following:

              o A new replica to be added to an  existing  regional  table  or
                global  table.  This  request  invokes  the CreateTableReplica
                action in the destination Region.

              o New parameters for an existing replica. This  request  invokes
                the UpdateTable action in the destination Region.

              o An  existing  replica  to  be deleted. The request invokes the
                DeleteTableReplica action in the destination Region,  deleting
                the replica and all if its items in the destination Region.

              Create -> (structure)
                 The parameters required for creating a replica for the table.

                 RegionName -> (string)
                     The Region where the new replica will be created.

                 KMSMasterKeyId -> (string)
                     The KMS key that should be used for KMS encryption in the
                     new  replica.  To  specify  a key, use its key ID, Amazon
                     Resource Name (ARN), alias name, or alias ARN. Note  that
                     you should only provide this parameter if the key is dif-
                     ferent   from    the    default    DynamoDB    KMS    key
                     alias/aws/dynamodb .

                 ProvisionedThroughputOverride -> (structure)
                     Replica-specific  provisioned  throughput.  If not speci-
                     fied, uses the source table's provisioned throughput set-
                     tings.

                     ReadCapacityUnits -> (long)
                        Replica-specific  read  capacity  units. If not speci-
                        fied, uses the source table's read capacity  settings.

                 GlobalSecondaryIndexes -> (list)
                     Replica-specific global secondary index settings.

                     (structure)
                        Represents  the  properties  of  a replica global sec-
                        ondary index.

                        IndexName -> (string)
                            The name of the global secondary index.

                        ProvisionedThroughputOverride -> (structure)
                            Replica table GSI-specific provisioned throughput.
                            If not specified, uses the source table GSI's read
                            capacity settings.

                            ReadCapacityUnits -> (long)
                               Replica-specific read capacity  units.  If  not
                               specified,  uses the source table's read capac-
                               ity settings.

                 TableClassOverride -> (string)
                     Replica-specific table class. If not specified, uses  the
                     source table's table class.

              Update -> (structure)
                 The parameters required for updating a replica for the table.

                 RegionName -> (string)
                     The Region where the replica exists.

                 KMSMasterKeyId -> (string)
                     The KMS key of the replica that should be  used  for  KMS
                     encryption.  To  specify  a  key,  use its key ID, Amazon
                     Resource Name (ARN), alias name, or alias ARN. Note  that
                     you should only provide this parameter if the key is dif-
                     ferent   from    the    default    DynamoDB    KMS    key
                     alias/aws/dynamodb .

                 ProvisionedThroughputOverride -> (structure)
                     Replica-specific  provisioned  throughput.  If not speci-
                     fied, uses the source table's provisioned throughput set-
                     tings.

                     ReadCapacityUnits -> (long)
                        Replica-specific  read  capacity  units. If not speci-
                        fied, uses the source table's read capacity  settings.

                 GlobalSecondaryIndexes -> (list)
                     Replica-specific global secondary index settings.

                     (structure)
                        Represents  the  properties  of  a replica global sec-
                        ondary index.

                        IndexName -> (string)
                            The name of the global secondary index.

                        ProvisionedThroughputOverride -> (structure)
                            Replica table GSI-specific provisioned throughput.
                            If not specified, uses the source table GSI's read
                            capacity settings.

                            ReadCapacityUnits -> (long)
                               Replica-specific read capacity  units.  If  not
                               specified,  uses the source table's read capac-
                               ity settings.

                 TableClassOverride -> (string)
                     Replica-specific table class. If not specified, uses  the
                     source table's table class.

              Delete -> (structure)
                 The parameters required for deleting a replica for the table.

                 RegionName -> (string)
                     The Region where the replica exists.

       JSON Syntax:

          [
            {
              "Create": {
                "RegionName": "string",
                "KMSMasterKeyId": "string",
                "ProvisionedThroughputOverride": {
                  "ReadCapacityUnits": long
                },
                "GlobalSecondaryIndexes": [
                  {
                    "IndexName": "string",
                    "ProvisionedThroughputOverride": {
                      "ReadCapacityUnits": long
                    }
                  }
                  ...
                ],
                "TableClassOverride": "STANDARD"|"STANDARD_INFREQUENT_ACCESS"
              },
              "Update": {
                "RegionName": "string",
                "KMSMasterKeyId": "string",
                "ProvisionedThroughputOverride": {
                  "ReadCapacityUnits": long
                },
                "GlobalSecondaryIndexes": [
                  {
                    "IndexName": "string",
                    "ProvisionedThroughputOverride": {
                      "ReadCapacityUnits": long
                    }
                  }
                  ...
                ],
                "TableClassOverride": "STANDARD"|"STANDARD_INFREQUENT_ACCESS"
              },
              "Delete": {
                "RegionName": "string"
              }
            }
            ...
          ]

       --table-class (string)
          The table class of the table to be updated. Valid values  are  STAN-
          DARD and STANDARD_INFREQUENT_ACCESS .

          Possible values:

          o STANDARD

          o STANDARD_INFREQUENT_ACCESS

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       Example 1: To modify a table's billing mode

       The  following  update-table example increases the provisioned read and
       write capacity on the MusicCollection table.

          aws dynamodb update-table \
              --table-name MusicCollection \
              --billing-mode PROVISIONED \
              --provisioned-throughput ReadCapacityUnits=15,WriteCapacityUnits=10

       Output:

          {
              "TableDescription": {
                  "AttributeDefinitions": [
                      {
                          "AttributeName": "AlbumTitle",
                          "AttributeType": "S"
                      },
                      {
                          "AttributeName": "Artist",
                          "AttributeType": "S"
                      },
                      {
                          "AttributeName": "SongTitle",
                          "AttributeType": "S"
                      }
                  ],
                  "TableName": "MusicCollection",
                  "KeySchema": [
                      {
                          "AttributeName": "Artist",
                          "KeyType": "HASH"
                      },
                      {
                          "AttributeName": "SongTitle",
                          "KeyType": "RANGE"
                      }
                  ],
                  "TableStatus": "UPDATING",
                  "CreationDateTime": "2020-05-26T15:59:49.473000-07:00",
                  "ProvisionedThroughput": {
                      "LastIncreaseDateTime": "2020-07-28T13:18:18.921000-07:00",
                      "NumberOfDecreasesToday": 0,
                      "ReadCapacityUnits": 15,
                      "WriteCapacityUnits": 10
                  },
                  "TableSizeBytes": 182,
                  "ItemCount": 2,
                  "TableArn": "arn:aws:dynamodb:us-west-2:123456789012:table/MusicCollection",
                  "TableId": "abcd0123-01ab-23cd-0123-abcdef123456",
                  "BillingModeSummary": {
                      "BillingMode": "PROVISIONED",
                      "LastUpdateToPayPerRequestDateTime": "2020-07-28T13:14:48.366000-07:00"
                  }
              }
          }

       For more information, see Updating  a  Table  in  the  Amazon  DynamoDB
       Developer Guide.

       Example 2: To create a global secondary index

       The following example adds a global secondary index to the MusicCollec-
       tion table.

          aws dynamodb update-table \
              --table-name MusicCollection \
              --attribute-definitions AttributeName=AlbumTitle,AttributeType=S \
              --global-secondary-index-updates file://gsi-updates.json

       Contents of gsi-updates.json:

          [
              {
                  "Create": {
                      "IndexName": "AlbumTitle-index",
                      "KeySchema": [
                          {
                              "AttributeName": "AlbumTitle",
                              "KeyType": "HASH"
                          }
                      ],
                      "ProvisionedThroughput": {
                          "ReadCapacityUnits": 10,
                          "WriteCapacityUnits": 10
                      },
                      "Projection": {
                          "ProjectionType": "ALL"
                      }
                  }
              }
          ]

       Output:

          {
              "TableDescription": {
                  "AttributeDefinitions": [
                      {
                          "AttributeName": "AlbumTitle",
                          "AttributeType": "S"
                      },
                      {
                          "AttributeName": "Artist",
                          "AttributeType": "S"
                      },
                      {
                          "AttributeName": "SongTitle",
                          "AttributeType": "S"
                      }
                  ],
                  "TableName": "MusicCollection",
                  "KeySchema": [
                      {
                          "AttributeName": "Artist",
                          "KeyType": "HASH"
                      },
                      {
                          "AttributeName": "SongTitle",
                          "KeyType": "RANGE"
                      }
                  ],
                  "TableStatus": "UPDATING",
                  "CreationDateTime": "2020-05-26T15:59:49.473000-07:00",
                  "ProvisionedThroughput": {
                      "LastIncreaseDateTime": "2020-07-28T12:59:17.537000-07:00",
                      "NumberOfDecreasesToday": 0,
                      "ReadCapacityUnits": 15,
                      "WriteCapacityUnits": 10
                  },
                  "TableSizeBytes": 182,
                  "ItemCount": 2,
                  "TableArn": "arn:aws:dynamodb:us-west-2:123456789012:table/MusicCollection",
                  "TableId": "abcd0123-01ab-23cd-0123-abcdef123456",
                  "BillingModeSummary": {
                      "BillingMode": "PROVISIONED",
                      "LastUpdateToPayPerRequestDateTime": "2020-07-28T13:14:48.366000-07:00"
                  },
                  "GlobalSecondaryIndexes": [
                      {
                          "IndexName": "AlbumTitle-index",
                          "KeySchema": [
                              {
                                  "AttributeName": "AlbumTitle",
                                  "KeyType": "HASH"
                              }
                          ],
                          "Projection": {
                              "ProjectionType": "ALL"
                          },
                          "IndexStatus": "CREATING",
                          "Backfilling": false,
                          "ProvisionedThroughput": {
                              "NumberOfDecreasesToday": 0,
                              "ReadCapacityUnits": 10,
                              "WriteCapacityUnits": 10
                          },
                          "IndexSizeBytes": 0,
                          "ItemCount": 0,
                          "IndexArn": "arn:aws:dynamodb:us-west-2:123456789012:table/MusicCollection/index/AlbumTitle-index"
                      }
                  ]
              }
          }

       For more information, see Updating  a  Table  in  the  Amazon  DynamoDB
       Developer Guide.

       Example 3: To enable DynamoDB Streams on a table

       The  following  command enables DynamoDB Streams on the MusicCollection
       table.

          aws dynamodb update-table \
              --table-name MusicCollection \
              --stream-specification StreamEnabled=true,StreamViewType=NEW_IMAGE

       Output:

          {
              "TableDescription": {
                  "AttributeDefinitions": [
                      {
                          "AttributeName": "AlbumTitle",
                          "AttributeType": "S"
                      },
                      {
                          "AttributeName": "Artist",
                          "AttributeType": "S"
                      },
                      {
                          "AttributeName": "SongTitle",
                          "AttributeType": "S"
                      }
                  ],
                  "TableName": "MusicCollection",
                  "KeySchema": [
                      {
                          "AttributeName": "Artist",
                          "KeyType": "HASH"
                      },
                      {
                          "AttributeName": "SongTitle",
                          "KeyType": "RANGE"
                      }
                  ],
                  "TableStatus": "UPDATING",
                  "CreationDateTime": "2020-05-26T15:59:49.473000-07:00",
                  "ProvisionedThroughput": {
                      "LastIncreaseDateTime": "2020-07-28T12:59:17.537000-07:00",
                      "NumberOfDecreasesToday": 0,
                      "ReadCapacityUnits": 15,
                      "WriteCapacityUnits": 10
                  },
                  "TableSizeBytes": 182,
                  "ItemCount": 2,
                  "TableArn": "arn:aws:dynamodb:us-west-2:123456789012:table/MusicCollection",
                  "TableId": "abcd0123-01ab-23cd-0123-abcdef123456",
                  "BillingModeSummary": {
                      "BillingMode": "PROVISIONED",
                      "LastUpdateToPayPerRequestDateTime": "2020-07-28T13:14:48.366000-07:00"
                  },
                  "LocalSecondaryIndexes": [
                      {
                          "IndexName": "AlbumTitleIndex",
                          "KeySchema": [
                              {
                                  "AttributeName": "Artist",
                                  "KeyType": "HASH"
                              },
                              {
                                  "AttributeName": "AlbumTitle",
                                  "KeyType": "RANGE"
                              }
                          ],
                          "Projection": {
                              "ProjectionType": "INCLUDE",
                              "NonKeyAttributes": [
                                  "Year",
                                  "Genre"
                              ]
                          },
                          "IndexSizeBytes": 139,
                          "ItemCount": 2,
                          "IndexArn": "arn:aws:dynamodb:us-west-2:123456789012:table/MusicCollection/index/AlbumTitleIndex"
                      }
                  ],
                  "GlobalSecondaryIndexes": [
                      {
                          "IndexName": "AlbumTitle-index",
                          "KeySchema": [
                              {
                                  "AttributeName": "AlbumTitle",
                                  "KeyType": "HASH"
                              }
                          ],
                          "Projection": {
                              "ProjectionType": "ALL"
                          },
                          "IndexStatus": "ACTIVE",
                          "ProvisionedThroughput": {
                              "NumberOfDecreasesToday": 0,
                              "ReadCapacityUnits": 10,
                              "WriteCapacityUnits": 10
                          },
                          "IndexSizeBytes": 0,
                          "ItemCount": 0,
                          "IndexArn": "arn:aws:dynamodb:us-west-2:123456789012:table/MusicCollection/index/AlbumTitle-index"
                      }
                  ],
                  "StreamSpecification": {
                      "StreamEnabled": true,
                      "StreamViewType": "NEW_IMAGE"
                  },
                  "LatestStreamLabel": "2020-07-28T21:53:39.112",
                  "LatestStreamArn": "arn:aws:dynamodb:us-west-2:123456789012:table/MusicCollection/stream/2020-07-28T21:53:39.112"
              }
          }

       For more information, see Updating  a  Table  in  the  Amazon  DynamoDB
       Developer Guide.

       Example 4: To enable server-side encryption

       The  following  example enables server-side encryption on the MusicCol-
       lection table.

          aws dynamodb update-table \
              --table-name MusicCollection \
              --sse-specification Enabled=true,SSEType=KMS

       Output:

          {
              "TableDescription": {
                  "AttributeDefinitions": [
                      {
                          "AttributeName": "AlbumTitle",
                          "AttributeType": "S"
                      },
                      {
                          "AttributeName": "Artist",
                          "AttributeType": "S"
                      },
                      {
                          "AttributeName": "SongTitle",
                          "AttributeType": "S"
                      }
                  ],
                  "TableName": "MusicCollection",
                  "KeySchema": [
                      {
                          "AttributeName": "Artist",
                          "KeyType": "HASH"
                      },
                      {
                          "AttributeName": "SongTitle",
                          "KeyType": "RANGE"
                      }
                  ],
                  "TableStatus": "ACTIVE",
                  "CreationDateTime": "2020-05-26T15:59:49.473000-07:00",
                  "ProvisionedThroughput": {
                      "LastIncreaseDateTime": "2020-07-28T12:59:17.537000-07:00",
                      "NumberOfDecreasesToday": 0,
                      "ReadCapacityUnits": 15,
                      "WriteCapacityUnits": 10
                  },
                  "TableSizeBytes": 182,
                  "ItemCount": 2,
                  "TableArn": "arn:aws:dynamodb:us-west-2:123456789012:table/MusicCollection",
                  "TableId": "abcd0123-01ab-23cd-0123-abcdef123456",
                  "BillingModeSummary": {
                      "BillingMode": "PROVISIONED",
                      "LastUpdateToPayPerRequestDateTime": "2020-07-28T13:14:48.366000-07:00"
                  },
                  "LocalSecondaryIndexes": [
                      {
                          "IndexName": "AlbumTitleIndex",
                          "KeySchema": [
                              {
                                  "AttributeName": "Artist",
                                  "KeyType": "HASH"
                              },
                              {
                                  "AttributeName": "AlbumTitle",
                                  "KeyType": "RANGE"
                              }
                          ],
                          "Projection": {
                              "ProjectionType": "INCLUDE",
                              "NonKeyAttributes": [
                                  "Year",
                                  "Genre"
                              ]
                          },
                          "IndexSizeBytes": 139,
                          "ItemCount": 2,
                          "IndexArn": "arn:aws:dynamodb:us-west-2:123456789012:table/MusicCollection/index/AlbumTitleIndex"
                      }
                  ],
                  "GlobalSecondaryIndexes": [
                      {
                          "IndexName": "AlbumTitle-index",
                          "KeySchema": [
                              {
                                  "AttributeName": "AlbumTitle",
                                  "KeyType": "HASH"
                              }
                          ],
                          "Projection": {
                              "ProjectionType": "ALL"
                          },
                          "IndexStatus": "ACTIVE",
                          "ProvisionedThroughput": {
                              "NumberOfDecreasesToday": 0,
                              "ReadCapacityUnits": 10,
                              "WriteCapacityUnits": 10
                          },
                          "IndexSizeBytes": 0,
                          "ItemCount": 0,
                          "IndexArn": "arn:aws:dynamodb:us-west-2:123456789012:table/MusicCollection/index/AlbumTitle-index"
                      }
                  ],
                  "StreamSpecification": {
                      "StreamEnabled": true,
                      "StreamViewType": "NEW_IMAGE"
                  },
                  "LatestStreamLabel": "2020-07-28T21:53:39.112",
                  "LatestStreamArn": "arn:aws:dynamodb:us-west-2:123456789012:table/MusicCollection/stream/2020-07-28T21:53:39.112",
                  "SSEDescription": {
                      "Status": "UPDATING"
                  }
              }
          }

       For more information, see Updating  a  Table  in  the  Amazon  DynamoDB
       Developer Guide.

OUTPUT
       TableDescription -> (structure)
          Represents the properties of the table.

          AttributeDefinitions -> (list)
              An  array  of AttributeDefinition objects. Each of these objects
              describes one attribute in the table and index key schema.

              Each AttributeDefinition object in this array is composed of:

              o AttributeName - The name of the attribute.

              o AttributeType - The data type for the attribute.

              (structure)
                 Represents an attribute for describing the key schema for the
                 table and indexes.

                 AttributeName -> (string)
                     A name for the attribute.

                 AttributeType -> (string)
                     The data type for the attribute, where:

                     o S - the attribute is of type String

                     o N - the attribute is of type Number

                     o B - the attribute is of type Binary

          TableName -> (string)
              The name of the table.

          KeySchema -> (list)
              The  primary  key structure for the table. Each KeySchemaElement
              consists of:

              o AttributeName - The name of the attribute.

              o KeyType - The role of the attribute:

                o HASH - partition key

                o RANGE - sort key

              NOTE:
                 The partition key of an  item  is  also  known  as  its  hash
                 attribute . The term "hash attribute" derives from DynamoDB's
                 usage of an internal hash function to evenly distribute  data
                 items across partitions, based on their partition key values.

                 The sort key of an item is also known as its range  attribute
                 .  The  term  "range attribute" derives from the way DynamoDB
                 stores items with the same  partition  key  physically  close
                 together, in sorted order by the sort key value.

              For  more information about primary keys, see Primary Key in the
              Amazon DynamoDB Developer Guide .

              (structure)
                 Represents a single element of a key  schema.  A  key  schema
                 specifies  the  attributes  that make up the primary key of a
                 table, or the key attributes of an index.

                 A KeySchemaElement represents exactly one  attribute  of  the
                 primary  key. For example, a simple primary key would be rep-
                 resented by one KeySchemaElement (for the partition  key).  A
                 composite  primary key would require one KeySchemaElement for
                 the partition key, and another KeySchemaElement for the  sort
                 key.

                 A KeySchemaElement must be a scalar, top-level attribute (not
                 a nested attribute). The data type must  be  one  of  String,
                 Number,  or  Binary.  The attribute cannot be nested within a
                 List or a Map.

                 AttributeName -> (string)
                     The name of a key attribute.

                 KeyType -> (string)
                     The role that this key attribute will assume:

                     o HASH - partition key

                     o RANGE - sort key

                     NOTE:
                        The partition key of an item is also known as its hash
                        attribute  .  The  term  "hash attribute" derives from
                        DynamoDB's usage  of  an  internal  hash  function  to
                        evenly  distribute data items across partitions, based
                        on their partition key values.

                        The sort key of an item is also  known  as  its  range
                        attribute  .  The  term "range attribute" derives from
                        the way DynamoDB stores items with the same  partition
                        key  physically close together, in sorted order by the
                        sort key value.

          TableStatus -> (string)
              The current state of the table:

              o CREATING - The table is being created.

              o UPDATING - The table is being updated.

              o DELETING - The table is being deleted.

              o ACTIVE - The table is ready for use.

              o INACCESSIBLE_ENCRYPTION_CREDENTIALS -  The  KMS  key  used  to
                encrypt  the  table in inaccessible. Table operations may fail
                due to failure to use the KMS key. DynamoDB will initiate  the
                table archival process when a table's KMS key remains inacces-
                sible for more than seven days.

              o ARCHIVING - The table is being archived.  Operations  are  not
                allowed until archival is complete.

              o ARCHIVED - The table has been archived. See the ArchivalReason
                for more information.

          CreationDateTime -> (timestamp)
              The date and time when the table was created, in UNIX epoch time
              format.

          ProvisionedThroughput -> (structure)
              The provisioned throughput settings for the table, consisting of
              read and write capacity units, along with data  about  increases
              and decreases.

              LastIncreaseDateTime -> (timestamp)
                 The date and time of the last provisioned throughput increase
                 for this table.

              LastDecreaseDateTime -> (timestamp)
                 The date and time of the last provisioned throughput decrease
                 for this table.

              NumberOfDecreasesToday -> (long)
                 The number of provisioned throughput decreases for this table
                 during this UTC calendar day. For current maximums on  provi-
                 sioned  throughput decreases, see Service, Account, and Table
                 Quotas in the Amazon DynamoDB Developer Guide .

              ReadCapacityUnits -> (long)
                 The maximum number of strongly consistent reads consumed  per
                 second  before DynamoDB returns a ThrottlingException . Even-
                 tually consistent reads require  less  effort  than  strongly
                 consistent  reads,  so  a setting of 50 ReadCapacityUnits per
                 second provides 100 eventually  consistent  ReadCapacityUnits
                 per second.

              WriteCapacityUnits -> (long)
                 The  maximum  number  of  writes  consumed  per second before
                 DynamoDB returns a ThrottlingException .

          TableSizeBytes -> (long)
              The total size  of  the  specified  table,  in  bytes.  DynamoDB
              updates this value approximately every six hours. Recent changes
              might not be reflected in this value.

          ItemCount -> (long)
              The number of items in the  specified  table.  DynamoDB  updates
              this  value  approximately every six hours. Recent changes might
              not be reflected in this value.

          TableArn -> (string)
              The Amazon Resource Name (ARN) that uniquely identifies the  ta-
              ble.

          TableId -> (string)
              Unique  identifier  for  the table for which the backup was cre-
              ated.

          BillingModeSummary -> (structure)
              Contains the details for the read/write capacity mode.

              BillingMode -> (string)
                 Controls how you are charged for read  and  write  throughput
                 and  how  you  manage  capacity.  This setting can be changed
                 later.

                 o PROVISIONED - Sets the read/write capacity mode  to  PROVI-
                   SIONED  .  We  recommend  using PROVISIONED for predictable
                   workloads.

                 o PAY_PER_REQUEST - Sets  the  read/write  capacity  mode  to
                   PAY_PER_REQUEST  .  We  recommend using PAY_PER_REQUEST for
                   unpredictable workloads.

              LastUpdateToPayPerRequestDateTime -> (timestamp)
                 Represents the time when PAY_PER_REQUEST was last set as  the
                 read/write capacity mode.

          LocalSecondaryIndexes -> (list)
              Represents  one  or  more  local secondary indexes on the table.
              Each index is scoped to a given partition key value. Tables with
              one  or more local secondary indexes are subject to an item col-
              lection size limit, where the amount of data within a given item
              collection cannot exceed 10 GB. Each element is composed of:

              o IndexName - The name of the local secondary index.

              o KeySchema  -  Specifies  the  complete  index  key schema. The
                attribute names in the key schema must be between  1  and  255
                characters  (inclusive).  The  key  schema must begin with the
                same partition key as the table.

              o Projection - Specifies attributes that are copied  (projected)
                from  the  table  into the index. These are in addition to the
                primary key attributes and index  key  attributes,  which  are
                automatically  projected. Each attribute specification is com-
                posed of:

                o ProjectionType - One of the following:

                  o KEYS_ONLY - Only the index and primary keys are  projected
                    into the index.

                  o INCLUDE  -  Only  the  specified table attributes are pro-
                    jected into the index. The list of projected attributes is
                    in NonKeyAttributes .

                  o ALL  -  All of the table attributes are projected into the
                    index.

                o NonKeyAttributes - A list of one or more  non-key  attribute
                  names that are projected into the secondary index. The total
                  count of attributes provided in  NonKeyAttributes  ,  summed
                  across  all of the secondary indexes, must not exceed 20. If
                  you project the same attribute into two  different  indexes,
                  this  counts as two distinct attributes when determining the
                  total.

              o IndexSizeBytes - Represents the total size of  the  index,  in
                bytes.  DynamoDB  updates  this  value approximately every six
                hours. Recent changes might not be reflected in this value.

              o ItemCount - Represents the  number  of  items  in  the  index.
                DynamoDB  updates  this  value  approximately every six hours.
                Recent changes might not be reflected in this value.

              If the table is in the  DELETING  state,  no  information  about
              indexes will be returned.

              (structure)
                 Represents the properties of a local secondary index.

                 IndexName -> (string)
                     Represents the name of the local secondary index.

                 KeySchema -> (list)
                     The  complete  key  schema for the local secondary index,
                     consisting of one or more pairs of  attribute  names  and
                     key types:

                     o HASH - partition key

                     o RANGE - sort key

                     NOTE:
                        The partition key of an item is also known as its hash
                        attribute . The term  "hash  attribute"  derives  from
                        DynamoDB's  usage  of  an  internal  hash  function to
                        evenly distribute data items across partitions,  based
                        on their partition key values.

                        The  sort  key  of  an item is also known as its range
                        attribute . The term "range  attribute"  derives  from
                        the  way DynamoDB stores items with the same partition
                        key physically close together, in sorted order by  the
                        sort key value.

                     (structure)
                        Represents  a  single  element  of a key schema. A key
                        schema specifies the attributes that make up the  pri-
                        mary  key  of  a  table,  or  the key attributes of an
                        index.

                        A KeySchemaElement represents exactly one attribute of
                        the  primary  key.  For  example, a simple primary key
                        would be represented by one KeySchemaElement (for  the
                        partition  key). A composite primary key would require
                        one  KeySchemaElement  for  the  partition  key,   and
                        another KeySchemaElement for the sort key.

                        A   KeySchemaElement   must  be  a  scalar,  top-level
                        attribute (not a nested attribute). The data type must
                        be  one  of  String,  Number, or Binary. The attribute
                        cannot be nested within a List or a Map.

                        AttributeName -> (string)
                            The name of a key attribute.

                        KeyType -> (string)
                            The role that this key attribute will assume:

                            o HASH - partition key

                            o RANGE - sort key

                            NOTE:
                               The partition key of an item is also  known  as
                               its  hash attribute . The term "hash attribute"
                               derives from DynamoDB's usage  of  an  internal
                               hash  function  to evenly distribute data items
                               across partitions, based on their partition key
                               values.

                               The  sort  key  of an item is also known as its
                               range attribute . The  term  "range  attribute"
                               derives from the way DynamoDB stores items with
                               the  same  partition   key   physically   close
                               together,  in  sorted  order  by  the  sort key
                               value.

                 Projection -> (structure)
                     Represents attributes that are  copied  (projected)  from
                     the  table  into the global secondary index. These are in
                     addition to the primary  key  attributes  and  index  key
                     attributes, which are automatically projected.

                     ProjectionType -> (string)
                        The  set  of  attributes  that  are projected into the
                        index:

                        o KEYS_ONLY - Only the index and primary keys are pro-
                          jected into the index.

                        o INCLUDE - In addition to the attributes described in
                          KEYS_ONLY , the secondary index will  include  other
                          non-key attributes that you specify.

                        o ALL - All of the table attributes are projected into
                          the index.

                     NonKeyAttributes -> (list)
                        Represents the non-key attribute names which  will  be
                        projected into the index.

                        For  local  secondary indexes, the total count of Non-
                        KeyAttributes summed across all of the local secondary
                        indexes,  must  not exceed 20. If you project the same
                        attribute into two different indexes, this  counts  as
                        two distinct attributes when determining the total.

                        (string)

                 IndexSizeBytes -> (long)
                     The total size of the specified index, in bytes. DynamoDB
                     updates this value approximately every six hours.  Recent
                     changes might not be reflected in this value.

                 ItemCount -> (long)
                     The  number  of  items  in  the specified index. DynamoDB
                     updates this value approximately every six hours.  Recent
                     changes might not be reflected in this value.

                 IndexArn -> (string)
                     The  Amazon  Resource Name (ARN) that uniquely identifies
                     the index.

          GlobalSecondaryIndexes -> (list)
              The global secondary indexes, if any, on the table.  Each  index
              is  scoped  to a given partition key value. Each element is com-
              posed of:

              o Backfilling - If true, then the  index  is  currently  in  the
                backfilling  phase.  Backfilling occurs only when a new global
                secondary index is added to the table. It is  the  process  by
                which  DynamoDB populates the new index with data from the ta-
                ble. (This attribute does not appear  for  indexes  that  were
                created  during  a  CreateTable operation.)  You can delete an
                index that is being created during the Backfilling phase  when
                IndexStatus  is  set  to CREATING and Backfilling is true. You
                can't delete the index that is being created when  IndexStatus
                is  set  to CREATING and Backfilling is false. (This attribute
                does not appear for indexes that were created  during  a  Cre-
                ateTable operation.)

              o IndexName - The name of the global secondary index.

              o IndexSizeBytes - The total size of the global secondary index,
                in bytes. DynamoDB updates this value approximately every  six
                hours. Recent changes might not be reflected in this value.

              o IndexStatus  -  The  current  status  of  the global secondary
                index:

                o CREATING - The index is being created.

                o UPDATING - The index is being updated.

                o DELETING - The index is being deleted.

                o ACTIVE - The index is ready for use.

              o ItemCount - The number of items in the global secondary index.
                DynamoDB  updates  this  value  approximately every six hours.
                Recent changes might not be reflected in this value.

              o KeySchema - Specifies  the  complete  index  key  schema.  The
                attribute  names  in  the key schema must be between 1 and 255
                characters (inclusive). The key schema  must  begin  with  the
                same partition key as the table.

              o Projection  - Specifies attributes that are copied (projected)
                from the table into the index. These are in  addition  to  the
                primary  key  attributes  and  index key attributes, which are
                automatically projected. Each attribute specification is  com-
                posed of:

                o ProjectionType - One of the following:

                  o KEYS_ONLY  - Only the index and primary keys are projected
                    into the index.

                  o INCLUDE - In  addition  to  the  attributes  described  in
                    KEYS_ONLY , the secondary index will include other non-key
                    attributes that you specify.

                  o ALL - All of the table attributes are projected  into  the
                    index.

                o NonKeyAttributes  -  A list of one or more non-key attribute
                  names that are projected into the secondary index. The total
                  count  of  attributes  provided in NonKeyAttributes , summed
                  across all of the secondary indexes, must not exceed 20.  If
                  you  project  the same attribute into two different indexes,
                  this counts as two distinct attributes when determining  the
                  total.

              o ProvisionedThroughput  -  The  provisioned throughput settings
                for the global secondary index, consisting of read  and  write
                capacity units, along with data about increases and decreases.

              If the table is in the  DELETING  state,  no  information  about
              indexes will be returned.

              (structure)
                 Represents the properties of a global secondary index.

                 IndexName -> (string)
                     The name of the global secondary index.

                 KeySchema -> (list)
                     The  complete  key  schema  for a global secondary index,
                     which consists of one or more pairs  of  attribute  names
                     and key types:

                     o HASH - partition key

                     o RANGE - sort key

                     NOTE:
                        The partition key of an item is also known as its hash
                        attribute . The term  "hash  attribute"  derives  from
                        DynamoDB's  usage  of  an  internal  hash  function to
                        evenly distribute data items across partitions,  based
                        on their partition key values.

                        The  sort  key  of  an item is also known as its range
                        attribute . The term "range  attribute"  derives  from
                        the  way DynamoDB stores items with the same partition
                        key physically close together, in sorted order by  the
                        sort key value.

                     (structure)
                        Represents  a  single  element  of a key schema. A key
                        schema specifies the attributes that make up the  pri-
                        mary  key  of  a  table,  or  the key attributes of an
                        index.

                        A KeySchemaElement represents exactly one attribute of
                        the  primary  key.  For  example, a simple primary key
                        would be represented by one KeySchemaElement (for  the
                        partition  key). A composite primary key would require
                        one  KeySchemaElement  for  the  partition  key,   and
                        another KeySchemaElement for the sort key.

                        A   KeySchemaElement   must  be  a  scalar,  top-level
                        attribute (not a nested attribute). The data type must
                        be  one  of  String,  Number, or Binary. The attribute
                        cannot be nested within a List or a Map.

                        AttributeName -> (string)
                            The name of a key attribute.

                        KeyType -> (string)
                            The role that this key attribute will assume:

                            o HASH - partition key

                            o RANGE - sort key

                            NOTE:
                               The partition key of an item is also  known  as
                               its  hash attribute . The term "hash attribute"
                               derives from DynamoDB's usage  of  an  internal
                               hash  function  to evenly distribute data items
                               across partitions, based on their partition key
                               values.

                               The  sort  key  of an item is also known as its
                               range attribute . The  term  "range  attribute"
                               derives from the way DynamoDB stores items with
                               the  same  partition   key   physically   close
                               together,  in  sorted  order  by  the  sort key
                               value.

                 Projection -> (structure)
                     Represents attributes that are  copied  (projected)  from
                     the  table  into the global secondary index. These are in
                     addition to the primary  key  attributes  and  index  key
                     attributes, which are automatically projected.

                     ProjectionType -> (string)
                        The  set  of  attributes  that  are projected into the
                        index:

                        o KEYS_ONLY - Only the index and primary keys are pro-
                          jected into the index.

                        o INCLUDE - In addition to the attributes described in
                          KEYS_ONLY , the secondary index will  include  other
                          non-key attributes that you specify.

                        o ALL - All of the table attributes are projected into
                          the index.

                     NonKeyAttributes -> (list)
                        Represents the non-key attribute names which  will  be
                        projected into the index.

                        For  local  secondary indexes, the total count of Non-
                        KeyAttributes summed across all of the local secondary
                        indexes,  must  not exceed 20. If you project the same
                        attribute into two different indexes, this  counts  as
                        two distinct attributes when determining the total.

                        (string)

                 IndexStatus -> (string)
                     The current state of the global secondary index:

                     o CREATING - The index is being created.

                     o UPDATING - The index is being updated.

                     o DELETING - The index is being deleted.

                     o ACTIVE - The index is ready for use.

                 Backfilling -> (boolean)
                     Indicates  whether  the  index  is currently backfilling.
                     Backfilling is the process of reading items from the  ta-
                     ble  and  determining  whether  they  can be added to the
                     index. (Not all items will qualify: For example, a parti-
                     tion  key  cannot  have any duplicate values.) If an item
                     can be added to the index, DynamoDB will do so. After all
                     items  have  been processed, the backfilling operation is
                     complete and Backfilling is false.

                     You can delete an index that is being created during  the
                     Backfilling phase when IndexStatus is set to CREATING and
                     Backfilling is true. You can't delete the index  that  is
                     being  created  when  IndexStatus  is set to CREATING and
                     Backfilling is false.

                     NOTE:
                        For indexes that were  created  during  a  CreateTable
                        operation,  the  Backfilling attribute does not appear
                        in the DescribeTable output.

                 ProvisionedThroughput -> (structure)
                     Represents the provisioned throughput  settings  for  the
                     specified global secondary index.

                     For  current  minimum  and maximum provisioned throughput
                     values, see Service, Account, and  Table  Quotas  in  the
                     Amazon DynamoDB Developer Guide .

                     LastIncreaseDateTime -> (timestamp)
                        The  date  and time of the last provisioned throughput
                        increase for this table.

                     LastDecreaseDateTime -> (timestamp)
                        The date and time of the last  provisioned  throughput
                        decrease for this table.

                     NumberOfDecreasesToday -> (long)
                        The  number  of  provisioned  throughput decreases for
                        this table during this UTC calendar day.  For  current
                        maximums  on  provisioned  throughput  decreases,  see
                        Service, Account,  and  Table  Quotas  in  the  Amazon
                        DynamoDB Developer Guide .

                     ReadCapacityUnits -> (long)
                        The  maximum  number of strongly consistent reads con-
                        sumed per second  before  DynamoDB  returns  a  Throt-
                        tlingException  .  Eventually consistent reads require
                        less effort than strongly consistent reads, so a  set-
                        ting  of  50 ReadCapacityUnits per second provides 100
                        eventually consistent ReadCapacityUnits per second.

                     WriteCapacityUnits -> (long)
                        The maximum  number  of  writes  consumed  per  second
                        before DynamoDB returns a ThrottlingException .

                 IndexSizeBytes -> (long)
                     The total size of the specified index, in bytes. DynamoDB
                     updates this value approximately every six hours.  Recent
                     changes might not be reflected in this value.

                 ItemCount -> (long)
                     The  number  of  items  in  the specified index. DynamoDB
                     updates this value approximately every six hours.  Recent
                     changes might not be reflected in this value.

                 IndexArn -> (string)
                     The  Amazon  Resource Name (ARN) that uniquely identifies
                     the index.

          StreamSpecification -> (structure)
              The current DynamoDB Streams configuration for the table.

              StreamEnabled -> (boolean)
                 Indicates whether DynamoDB Streams is enabled (true) or  dis-
                 abled (false) on the table.

              StreamViewType -> (string)
                 When  an item in the table is modified, StreamViewType deter-
                 mines what information is written to the stream for this  ta-
                 ble. Valid values for StreamViewType are:

                 o KEYS_ONLY  -  Only  the key attributes of the modified item
                   are written to the stream.

                 o NEW_IMAGE - The entire item, as it  appears  after  it  was
                   modified, is written to the stream.

                 o OLD_IMAGE  -  The entire item, as it appeared before it was
                   modified, is written to the stream.

                 o NEW_AND_OLD_IMAGES - Both the new and the old  item  images
                   of the item are written to the stream.

          LatestStreamLabel -> (string)
              A timestamp, in ISO 8601 format, for this stream.

              Note  that  LatestStreamLabel is not a unique identifier for the
              stream, because it is possible that a stream from another  table
              might  have  the same timestamp. However, the combination of the
              following three elements is guaranteed to be unique:

              o Amazon Web Services customer ID

              o Table name

              o StreamLabel

          LatestStreamArn -> (string)
              The Amazon Resource Name (ARN) that uniquely identifies the lat-
              est stream for this table.

          GlobalTableVersion -> (string)
              Represents  the version of global tables in use, if the table is
              replicated across Amazon Web Services Regions.

          Replicas -> (list)
              Represents replicas of the table.

              (structure)
                 Contains the details of the replica.

                 RegionName -> (string)
                     The name of the Region.

                 ReplicaStatus -> (string)
                     The current state of the replica:

                     o CREATING - The replica is being created.

                     o UPDATING - The replica is being updated.

                     o DELETING - The replica is being deleted.

                     o ACTIVE - The replica is ready for use.

                     o REGION_DISABLED - The replica is  inaccessible  because
                       the Amazon Web Services Region has been disabled.

                     NOTE:
                        If the Amazon Web Services Region remains inaccessible
                        for more than 20  hours,  DynamoDB  will  remove  this
                        replica  from  the replication group. The replica will
                        not be deleted and replication will stop from  and  to
                        this region.

                     o INACCESSIBLE_ENCRYPTION_CREDENTIALS  - The KMS key used
                       to encrypt the table is inaccessible.

                     NOTE:
                        If the KMS key remains inaccessible for more  than  20
                        hours,  DynamoDB  will  remove  this  replica from the
                        replication group. The replica will not be deleted and
                        replication will stop from and to this region.

                 ReplicaStatusDescription -> (string)
                     Detailed information about the replica status.

                 ReplicaStatusPercentProgress -> (string)
                     Specifies  the  progress  of  a Create, Update, or Delete
                     action on the replica as a percentage.

                 KMSMasterKeyId -> (string)
                     The KMS key of the replica that  will  be  used  for  KMS
                     encryption.

                 ProvisionedThroughputOverride -> (structure)
                     Replica-specific    provisioned    throughput.   If   not
                     described, uses the source table's provisioned throughput
                     settings.

                     ReadCapacityUnits -> (long)
                        Replica-specific  read  capacity  units. If not speci-
                        fied, uses the source table's read capacity  settings.

                 GlobalSecondaryIndexes -> (list)
                     Replica-specific global secondary index settings.

                     (structure)
                        Represents  the  properties  of  a replica global sec-
                        ondary index.

                        IndexName -> (string)
                            The name of the global secondary index.

                        ProvisionedThroughputOverride -> (structure)
                            If not described, uses the source table GSI's read
                            capacity settings.

                            ReadCapacityUnits -> (long)
                               Replica-specific  read  capacity  units. If not
                               specified, uses the source table's read  capac-
                               ity settings.

                 ReplicaInaccessibleDateTime -> (timestamp)
                     The time at which the replica was first detected as inac-
                     cessible. To determine cause of inaccessibility check the
                     ReplicaStatus property.

                 ReplicaTableClassSummary -> (structure)
                     Contains details of the table class.

                     TableClass -> (string)
                        The  table  class of the specified table. Valid values
                        are STANDARD and STANDARD_INFREQUENT_ACCESS .

                     LastUpdateDateTime -> (timestamp)
                        The date and time at which the table  class  was  last
                        updated.

          RestoreSummary -> (structure)
              Contains details for the restore.

              SourceBackupArn -> (string)
                 The  Amazon  Resource Name (ARN) of the backup from which the
                 table was restored.

              SourceTableArn -> (string)
                 The ARN of the source table  of  the  backup  that  is  being
                 restored.

              RestoreDateTime -> (timestamp)
                 Point in time or source backup time.

              RestoreInProgress -> (boolean)
                 Indicates if a restore is in progress or not.

          SSEDescription -> (structure)
              The  description  of  the  server-side  encryption status on the
              specified table.

              Status -> (string)
                 Represents the current state of server-side  encryption.  The
                 only supported values are:

                 o ENABLED - Server-side encryption is enabled.

                 o UPDATING - Server-side encryption is being updated.

              SSEType -> (string)
                 Server-side encryption type. The only supported value is:

                 o KMS  - Server-side encryption that uses Key Management Ser-
                   vice. The key is stored in your account and is  managed  by
                   KMS (KMS charges apply).

              KMSMasterKeyArn -> (string)
                 The KMS key ARN used for the KMS encryption.

              InaccessibleEncryptionDateTime -> (timestamp)
                 Indicates  the time, in UNIX epoch date format, when DynamoDB
                 detected that the table's  KMS  key  was  inaccessible.  This
                 attribute will automatically be cleared when DynamoDB detects
                 that the table's KMS key is accessible again.  DynamoDB  will
                 initiate  the  table  archival  process  when table's KMS key
                 remains inaccessible for more than seven days from this date.

          ArchivalSummary -> (structure)
              Contains information about the table archive.

              ArchivalDateTime -> (timestamp)
                 The  date  and  time  when  table  archival  was initiated by
                 DynamoDB, in UNIX epoch time format.

              ArchivalReason -> (string)
                 The reason DynamoDB archived the table. Currently,  the  only
                 possible value is:

                 o INACCESSIBLE_ENCRYPTION_CREDENTIALS   -   The   table   was
                   archived due to the table's KMS key being inaccessible  for
                   more  than  seven  days. An On-Demand backup was created at
                   the archival time.

              ArchivalBackupArn -> (string)
                 The Amazon Resource Name (ARN) of the backup  the  table  was
                 archived  to,  when applicable in the archival reason. If you
                 wish to restore this backup to the same table name, you  will
                 need to delete the original table.

          TableClassSummary -> (structure)
              Contains details of the table class.

              TableClass -> (string)
                 The  table  class  of  the  specified table. Valid values are
                 STANDARD and STANDARD_INFREQUENT_ACCESS .

              LastUpdateDateTime -> (timestamp)
                 The date and time at which the table class was last  updated.



                                                                UPDATE-TABLE()
