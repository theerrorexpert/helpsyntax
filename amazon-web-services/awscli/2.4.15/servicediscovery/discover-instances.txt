DISCOVER-INSTANCES()                                      DISCOVER-INSTANCES()



NAME
       discover-instances -

DESCRIPTION
       Discovers  registered  instances for a specified namespace and service.
       You can use DiscoverInstances to discover instances  for  any  type  of
       namespace.  For public and private DNS namespaces, you can also use DNS
       queries to discover instances.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            discover-instances
          --namespace-name <value>
          --service-name <value>
          [--max-results <value>]
          [--query-parameters <value>]
          [--optional-parameters <value>]
          [--health-status <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --namespace-name (string)
          The HttpName name of the namespace. It's found in the HttpProperties
          member of the Properties member of the namespace.

       --service-name (string)
          The  name  of the service that you specified when you registered the
          instance.

       --max-results (integer)
          The maximum number of instances that you want Cloud Map to return in
          the  response to a DiscoverInstances request. If you don't specify a
          value for MaxResults , Cloud Map returns up to 100 instances.

       --query-parameters (map)
          Filters to scope the results based  on  custom  attributes  for  the
          instance  (for  example,  {version=v1, az=1a} ). Only instances that
          match all the specified key-value pairs are returned.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --optional-parameters (map)
          Opportunistic  filters  to  scope  the  results  based   on   custom
          attributes. If there are instances that match both the filters spec-
          ified in both the QueryParameters parameter and this parameter,  all
          of these instances are returned. Otherwise, the filters are ignored,
          and only instances that match the filters that are specified in  the
          QueryParameters parameter are returned.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --health-status (string)
          The  health  status of the instances that you want to discover. This
          parameter is ignored for services that don't  have  a  health  check
          configured, and all instances are returned.
              HEALTHY

          Returns healthy instances.
              UNHEALTHY

          Returns unhealthy instances.
              ALL

          Returns all instances.
              HEALTHY_OR_ELSE_ALL

          Returns  healthy  instances,  unless  none  are  reporting a healthy
          state. In that case, return all instances. This is also called fail-
          ing open.

          Possible values:

          o HEALTHY

          o UNHEALTHY

          o ALL

          o HEALTHY_OR_ELSE_ALL

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To discover registered instances

       The   following   discover-instances   example   discovers   registered
       instances.

          aws servicediscovery discover-instances \
              --namespace-name example.com \
              --service-name myservice \
              --max-results 10 \
              --health-status ALL

       Output:

          {
              "Instances": [
                  {
                      "InstanceId": "myservice-53",
                      "NamespaceName": "example.com",
                      "ServiceName": "myservice",
                      "HealthStatus": "UNKNOWN",
                      "Attributes": {
                          "AWS_INSTANCE_IPV4": "172.2.1.3",
                          "AWS_INSTANCE_PORT": "808"
                      }
                  }
              ]
          }

OUTPUT
       Instances -> (list)
          A complex type that contains one HttpInstanceSummary for each regis-
          tered instance.

          (structure)
              In  a  response to a DiscoverInstances request, HttpInstanceSum-
              mary contains information about one instance  that  matches  the
              values that you specified in the request.

              InstanceId -> (string)
                 The ID of an instance that matches the values that you speci-
                 fied in the request.

              NamespaceName -> (string)
                 The HttpName name of the namespace. It's found in  the  Http-
                 Properties  member of the Properties member of the namespace.

              ServiceName -> (string)
                 The name of the service that you specified  when  you  regis-
                 tered the instance.

              HealthStatus -> (string)
                 If you configured health checking in the service, the current
                 health status of the service instance.

              Attributes -> (map)
                 If you  included  any  attributes  when  you  registered  the
                 instance, the values of those attributes.

                 key -> (string)

                 value -> (string)



                                                          DISCOVER-INSTANCES()
