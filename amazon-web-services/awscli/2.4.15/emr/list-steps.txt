LIST-STEPS()                                                      LIST-STEPS()



NAME
       list-steps -

DESCRIPTION
       Provides  a  list  of steps for the cluster in reverse order unless you
       specify stepIds with the request or filter  by  StepStates  .  You  can
       specify  a  maximum  of  10  stepIDs  . The CLI automatically paginates
       results to return a list greater than 50 steps. To return more than  50
       steps  using  the  CLI,  specify a Marker , which is a pagination token
       that indicates the next set of steps to retrieve.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       list-steps is a paginated operation. Multiple API calls may  be  issued
       in  order  to  retrieve the entire data set of results. You can disable
       pagination by providing the --no-paginate argument.  When using  --out-
       put  text and the --query argument on a paginated response, the --query
       argument must extract data from the  results  of  the  following  query
       expressions: Steps

SYNOPSIS
            list-steps
          --cluster-id <value>
          [--step-states <value>]
          [--step-ids <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --cluster-id (string)
          The identifier of the cluster for which to list the steps.

       --step-states (list)
          The filter to limit the step list based on certain states.

          (string)

       Syntax:

          "string" "string" ...

          Where valid values are:
            PENDING
            CANCEL_PENDING
            RUNNING
            COMPLETED
            CANCELLED
            FAILED
            INTERRUPTED

       --step-ids (list)
          The  filter  to  limit  the step list based on the identifier of the
          steps. You can specify a maximum of ten Step IDs. The character con-
          straint applies to the overall length of the array.

          (string)

       Syntax:

          "string" "string" ...

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       The  following  command  lists  all  of the steps in a cluster with the
       cluster ID j-3SD91U2E1L2QX:

          aws emr list-steps --cluster-id j-3SD91U2E1L2QX

OUTPUT
       Steps -> (list)
          The filtered list of steps for the cluster.

          (structure)
              The summary of the cluster step.

              Id -> (string)
                 The identifier of the cluster step.

              Name -> (string)
                 The name of the cluster step.

              Config -> (structure)
                 The Hadoop job configuration of the cluster step.

                 Jar -> (string)
                     The path to the JAR file that runs during the step.

                 Properties -> (map)
                     The list of Java properties that are set  when  the  step
                     runs.  You  can  use  these  properties to pass key-value
                     pairs to your main function.

                     key -> (string)

                     value -> (string)

                 MainClass -> (string)
                     The name of the main class in the specified Java file. If
                     not  specified,  the JAR file should specify a main class
                     in its manifest file.

                 Args -> (list)
                     The list of command line arguments to  pass  to  the  JAR
                     file's main function for execution.

                     (string)

              ActionOnFailure -> (string)
                 The action to take when the cluster step fails. Possible val-
                 ues are  TERMINATE_CLUSTER,  CANCEL_AND_WAIT,  and  CONTINUE.
                 TERMINATE_JOB_FLOW is available for backward compatibility.

              Status -> (structure)
                 The current execution status details of the cluster step.

                 State -> (string)
                     The execution state of the cluster step.

                 StateChangeReason -> (structure)
                     The reason for the step execution status change.

                     Code -> (string)
                        The  programmable  code  for  the state change reason.
                        Note: Currently, the service provides no code for  the
                        state change.

                     Message -> (string)
                        The descriptive message for the state change reason.

                 FailureDetails -> (structure)
                     The  details  for the step failure including reason, mes-
                     sage, and log file path where the root cause was  identi-
                     fied.

                     Reason -> (string)
                        The reason for the step failure. In the case where the
                        service cannot successfully determine the  root  cause
                        of  the  failure, it returns "Unknown Error" as a rea-
                        son.

                     Message -> (string)
                        The descriptive message including the error the Amazon
                        EMR  service has identified as the cause of step fail-
                        ure. This is text from an error log that describes the
                        root cause of the failure.

                     LogFile -> (string)
                        The  path  to the log file where the step failure root
                        cause was originally recorded.

                 Timeline -> (structure)
                     The timeline of the cluster step status over time.

                     CreationDateTime -> (timestamp)
                        The date and time when the cluster step was created.

                     StartDateTime -> (timestamp)
                        The date and time  when  the  cluster  step  execution
                        started.

                     EndDateTime -> (timestamp)
                        The date and time when the cluster step execution com-
                        pleted or failed.

       Marker -> (string)
          The maximum number of steps that a single ListSteps  action  returns
          is  50.  To  return  a  longer list of steps, use multiple ListSteps
          actions along with the Marker parameter, which is a pagination token
          that indicates the next set of results to retrieve.



                                                                  LIST-STEPS()
