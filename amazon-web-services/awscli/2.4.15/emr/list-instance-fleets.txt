LIST-INSTANCE-FLEETS()                                  LIST-INSTANCE-FLEETS()



NAME
       list-instance-fleets -

DESCRIPTION
       Lists all available details about the instance fleets in a cluster.

       NOTE:
          The  instance  fleet  configuration  is available only in Amazon EMR
          versions 4.8.0 and later, excluding 5.0.x versions.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       list-instance-fleets is a paginated operation. Multiple API  calls  may
       be  issued in order to retrieve the entire data set of results. You can
       disable pagination by providing the --no-paginate argument.  When using
       --output  text  and  the  --query argument on a paginated response, the
       --query argument must extract data from the results  of  the  following
       query expressions: InstanceFleets

SYNOPSIS
            list-instance-fleets
          --cluster-id <value>
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --cluster-id (string)
          The unique identifier of the cluster.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To get configuration details of instance fleets in a cluster

       This example lists the details of instance fleets in the cluster speci-
       fied.

       Command:

          list-instance-fleets --cluster-id 'j-12ABCDEFGHI34JK'

       Output:

          {
            "InstanceFleets": [
                {
                    "Status": {
                        "Timeline": {
                            "ReadyDateTime": 1488759094.637,
                            "CreationDateTime": 1488758719.817
                        },
                        "State": "RUNNING",
                        "StateChangeReason": {
                            "Message": ""
                        }
                    },
                    "ProvisionedSpotCapacity": 6,
                    "Name": "CORE",
                    "InstanceFleetType": "CORE",
                    "LaunchSpecifications": {
                        "SpotSpecification": {
                            "TimeoutDurationMinutes": 60,
                            "TimeoutAction": "TERMINATE_CLUSTER"
                        }
                    },
                    "ProvisionedOnDemandCapacity": 2,
                    "InstanceTypeSpecifications": [
                        {
                            "BidPrice": "0.5",
                            "InstanceType": "m3.xlarge",
                            "WeightedCapacity": 2
                        }
                    ],
                    "Id": "if-1ABC2DEFGHIJ3"
                },
                {
                    "Status": {
                        "Timeline": {
                            "ReadyDateTime": 1488759058.598,
                            "CreationDateTime": 1488758719.811
                        },
                        "State": "RUNNING",
                        "StateChangeReason": {
                            "Message": ""
                        }
                    },
                    "ProvisionedSpotCapacity": 0,
                    "Name": "MASTER",
                    "InstanceFleetType": "MASTER",
                    "ProvisionedOnDemandCapacity": 1,
                    "InstanceTypeSpecifications": [
                        {
                            "BidPriceAsPercentageOfOnDemandPrice": 100.0,
                            "InstanceType": "m3.xlarge",
                            "WeightedCapacity": 1
                        }
                    ],
                   "Id": "if-2ABC4DEFGHIJ4"
                }
            ]
          }

OUTPUT
       InstanceFleets -> (list)
          The list of instance fleets for the cluster and given filters.

          (structure)
              Describes an instance fleet, which is a group of  EC2  instances
              that  host  a particular node type (master, core, or task) in an
              Amazon EMR cluster. Instance fleets can  consist  of  a  mix  of
              instance  types and On-Demand and Spot Instances, which are pro-
              visioned to meet a defined target capacity.

              NOTE:
                 The instance fleet configuration is available only in  Amazon
                 EMR versions 4.8.0 and later, excluding 5.0.x versions.

              Id -> (string)
                 The unique identifier of the instance fleet.

              Name -> (string)
                 A friendly name for the instance fleet.

              Status -> (structure)
                 The current status of the instance fleet.

                 State -> (string)
                     A code representing the instance fleet status.

                     o PROVISIONING  The  instance  fleet  is provisioning EC2
                       resources and is not yet ready to run jobs.

                     o BOOTSTRAPPING EC2 instances and  other  resources  have
                       been  provisioned  and  the bootstrap actions specified
                       for the instances are underway.

                     o RUNNING EC2 instances and other resources are  running.
                       They  are  either  executing jobs or waiting to execute
                       jobs.

                     o RESIZING A resize operation is underway. EC2  instances
                       are either being added or removed.

                     o SUSPENDED A resize operation could not complete. Exist-
                       ing EC2 instances are running, but instances  can't  be
                       added or removed.

                     o TERMINATING  The  instance  fleet  is  terminating  EC2
                       instances.

                     o TERMINATED The instance fleet is no longer active,  and
                       all EC2 instances have been terminated.

                 StateChangeReason -> (structure)
                     Provides  status  change  reason details for the instance
                     fleet.

                     Code -> (string)
                        A code corresponding to the reason  the  state  change
                        occurred.

                     Message -> (string)
                        An explanatory message.

                 Timeline -> (structure)
                     Provides  historical  timestamps  for the instance fleet,
                     including the time of creation, the time it became  ready
                     to run jobs, and the time of termination.

                     CreationDateTime -> (timestamp)
                        The time and date the instance fleet was created.

                     ReadyDateTime -> (timestamp)
                        The  time and date the instance fleet was ready to run
                        jobs.

                     EndDateTime -> (timestamp)
                        The time and date the instance fleet terminated.

              InstanceFleetType -> (string)
                 The node type that the instance fleet hosts. Valid values are
                 MASTER, CORE, or TASK.

              TargetOnDemandCapacity -> (integer)
                 The  target  capacity  of  On-Demand  units  for the instance
                 fleet, which determines how many On-Demand Instances to  pro-
                 vision. When the instance fleet launches, Amazon EMR tries to
                 provision On-Demand Instances as specified by   InstanceType-
                 Config  . Each instance configuration has a specified Weight-
                 edCapacity . When an On-Demand Instance is  provisioned,  the
                 WeightedCapacity units count toward the target capacity. Ama-
                 zon EMR provisions instances until  the  target  capacity  is
                 totally  fulfilled,  even  if this results in an overage. For
                 example, if there are 2 units remaining to fulfill  capacity,
                 and  Amazon EMR can only provision an instance with a Weight-
                 edCapacity of 5 units, the instance is provisioned,  and  the
                 target   capacity  is  exceeded  by  3  units.  You  can  use
                 InstanceFleet$ProvisionedOnDemandCapacity  to  determine  the
                 Spot  capacity  units  that  have  been  provisioned  for the
                 instance fleet.

                 NOTE:
                     If not specified or set to 0,  only  Spot  Instances  are
                     provisioned for the instance fleet using TargetSpotCapac-
                     ity . At least one of TargetSpotCapacity and  TargetOnDe-
                     mandCapacity  should  be  greater  than  0.  For a master
                     instance fleet, only one of TargetSpotCapacity and Targe-
                     tOnDemandCapacity can be specified, and its value must be
                     1.

              TargetSpotCapacity -> (integer)
                 The target capacity of Spot units  for  the  instance  fleet,
                 which  determines  how many Spot Instances to provision. When
                 the instance fleet launches, Amazon EMR  tries  to  provision
                 Spot  Instances  as  specified  by  InstanceTypeConfig . Each
                 instance configuration has  a  specified  WeightedCapacity  .
                 When  a  Spot  instance  is provisioned, the WeightedCapacity
                 units count toward the target capacity. Amazon EMR provisions
                 instances  until  the  target  capacity is totally fulfilled,
                 even if this results in an overage. For example, if there are
                 2  units  remaining  to  fulfill capacity, and Amazon EMR can
                 only provision an  instance  with  a  WeightedCapacity  of  5
                 units,  the  instance is provisioned, and the target capacity
                 is exceeded by 3 units.  You  can  use   InstanceFleet$Provi-
                 sionedSpotCapacity  to determine the Spot capacity units that
                 have been provisioned for the instance fleet.

                 NOTE:
                     If not specified or set to 0,  only  On-Demand  Instances
                     are  provisioned  for the instance fleet. At least one of
                     TargetSpotCapacity and TargetOnDemandCapacity  should  be
                     greater  than 0. For a master instance fleet, only one of
                     TargetSpotCapacity  and  TargetOnDemandCapacity  can   be
                     specified, and its value must be 1.

              ProvisionedOnDemandCapacity -> (integer)
                 The  number of On-Demand units that have been provisioned for
                 the instance fleet to fulfill TargetOnDemandCapacity  .  This
                 provisioned  capacity  might  be  less  than  or greater than
                 TargetOnDemandCapacity .

              ProvisionedSpotCapacity -> (integer)
                 The number of Spot units that have been provisioned for  this
                 instance  fleet  to  fulfill TargetSpotCapacity . This provi-
                 sioned capacity might be  less  than  or  greater  than  Tar-
                 getSpotCapacity .

              InstanceTypeSpecifications -> (list)
                 An  array  of specifications for the instance types that com-
                 prise an instance fleet.

                 (structure)
                     The configuration specification for each instance type in
                     an instance fleet.

                     NOTE:
                        The  instance fleet configuration is available only in
                        Amazon EMR versions 4.8.0 and later,  excluding  5.0.x
                        versions.

                     InstanceType -> (string)
                        The EC2 instance type, for example m3.xlarge .

                     WeightedCapacity -> (integer)
                        The  number  of  units  that a provisioned instance of
                        this type provides toward fulfilling the target capac-
                        ities  defined in  InstanceFleetConfig . Capacity val-
                        ues  represent  performance  characteristics  such  as
                        vCPUs,  memory,  or I/O. If not specified, the default
                        value is 1.

                     BidPrice -> (string)
                        The bid price for  each  EC2  Spot  Instance  type  as
                        defined by InstanceType . Expressed in USD.

                     BidPriceAsPercentageOfOnDemandPrice -> (double)
                        The bid price, as a percentage of On-Demand price, for
                        each EC2 Spot Instance as defined  by  InstanceType  .
                        Expressed as a number (for example, 20 specifies 20%).

                     Configurations -> (list)
                        A configuration classification that applies when  pro-
                        visioning cluster instances, which can include config-
                        urations for applications and  software  bundled  with
                        Amazon EMR.

                        (structure)

                            NOTE:
                               Amazon EMR releases 4.x or later.

                            An optional configuration specification to be used
                            when provisioning  cluster  instances,  which  can
                            include  configurations for applications and soft-
                            ware bundled with Amazon EMR. A configuration con-
                            sists   of   a   classification,  properties,  and
                            optional nested configurations.  A  classification
                            refers  to  an  application-specific configuration
                            file. Properties are  the  settings  you  want  to
                            change  in  that  file.  For more information, see
                            Configuring Applications .

                            Classification -> (string)
                               The classification within a configuration.

                            Configurations -> (list)
                               A list of additional  configurations  to  apply
                               within a configuration object.

                               (structure)

                                   NOTE:
                                      Amazon EMR releases 4.x or later.

                                   An  optional configuration specification to
                                   be   used   when    provisioning    cluster
                                   instances, which can include configurations
                                   for applications and software bundled  with
                                   Amazon  EMR.  A configuration consists of a
                                   classification,  properties,  and  optional
                                   nested   configurations.  A  classification
                                   refers to an application-specific  configu-
                                   ration  file.  Properties  are the settings
                                   you want to change in that file.  For  more
                                   information, see Configuring Applications .

                                   Classification -> (string)
                                      The classification within  a  configura-
                                      tion.

                                   Properties -> (map)
                                      A  set  of properties specified within a
                                      configuration classification.

                                      key -> (string)

                                      value -> (string)

                            Properties -> (map)
                               A set of properties specified within a configu-
                               ration classification.

                               key -> (string)

                               value -> (string)

                     EbsBlockDevices -> (list)
                        The  configuration of Amazon Elastic Block Store (Ama-
                        zon EBS) attached  to  each  instance  as  defined  by
                        InstanceType .

                        (structure)
                            Configuration  of requested EBS block device asso-
                            ciated with the instance group.

                            VolumeSpecification -> (structure)
                               EBS volume specifications such as volume  type,
                               IOPS, and size (GiB) that will be requested for
                               the EBS volume attached to an EC2  instance  in
                               the cluster.

                               VolumeType -> (string)
                                   The volume type. Volume types supported are
                                   gp2, io1, standard.

                               Iops -> (integer)
                                   The number of  I/O  operations  per  second
                                   (IOPS) that the volume supports.

                               SizeInGB -> (integer)
                                   The  volume  size, in gibibytes (GiB). This
                                   can be a number from 1 - 1024. If the  vol-
                                   ume  type  is  EBS-optimized,  the  minimum
                                   value is 10.

                            Device -> (string)
                               The  device  name  that  is  exposed   to   the
                               instance, such as /dev/sdh.

                     EbsOptimized -> (boolean)
                        Evaluates  to  TRUE when the specified InstanceType is
                        EBS-optimized.

                     CustomAmiId -> (string)
                        The custom AMI ID to use for the instance type.

              LaunchSpecifications -> (structure)
                 Describes the launch specification for an instance fleet.

                 SpotSpecification -> (structure)
                     The launch specification for Spot Instances in the fleet,
                     which determines the defined duration, provisioning time-
                     out behavior, and allocation strategy.

                     TimeoutDurationMinutes -> (integer)
                        The spot provisioning timeout period  in  minutes.  If
                        Spot  Instances  are  not provisioned within this time
                        period, the TimeOutAction is taken. Minimum value is 5
                        and  maximum  value  is 1440. The timeout applies only
                        during initial provisioning, when the cluster is first
                        created.

                     TimeoutAction -> (string)
                        The  action  to  take  when TargetSpotCapacity has not
                        been fulfilled  when  the  TimeoutDurationMinutes  has
                        expired; that is, when all Spot Instances could not be
                        provisioned  within  the  Spot  provisioning  timeout.
                        Valid     values     are     TERMINATE_CLUSTER     and
                        SWITCH_TO_ON_DEMAND  .  SWITCH_TO_ON_DEMAND  specifies
                        that  if  no  Spot  Instances are available, On-Demand
                        Instances should be provisioned to fulfill any remain-
                        ing Spot capacity.

                     BlockDurationMinutes -> (integer)
                        The defined duration for Spot Instances (also known as
                        Spot blocks) in  minutes.  When  specified,  the  Spot
                        Instance  does  not terminate before the defined dura-
                        tion expires, and defined duration  pricing  for  Spot
                        Instances applies. Valid values are 60, 120, 180, 240,
                        300, or 360. The duration period starts as soon  as  a
                        Spot  Instance receives its instance ID. At the end of
                        the duration, Amazon EC2 marks the Spot  Instance  for
                        termination  and  provides a Spot Instance termination
                        notice, which gives the instance a two-minute  warning
                        before it terminates.

                     AllocationStrategy -> (string)
                        Specifies  the  strategy  to  use  in  launching  Spot
                        Instance fleets. Currently, the only option is  capac-
                        ity-optimized  (the default), which launches instances
                        from Spot Instance pools with optimal capacity for the
                        number of instances that are launching.

                 OnDemandSpecification -> (structure)
                     The  launch  specification for On-Demand Instances in the
                     instance fleet, which determines the allocation strategy.

                     NOTE:
                        The  instance fleet configuration is available only in
                        Amazon EMR versions 4.8.0 and later,  excluding  5.0.x
                        versions.  On-Demand  Instances allocation strategy is
                        available in Amazon EMR version 5.12.1 and later.

                     AllocationStrategy -> (string)
                        Specifies the strategy to use in  launching  On-Demand
                        instance  fleets.  Currently,  the only option is low-
                        est-price (the default),  which  launches  the  lowest
                        price first.

                     CapacityReservationOptions -> (structure)
                        The  launch  specification  for On-Demand instances in
                        the instance fleet, which  determines  the  allocation
                        strategy.

                        UsageStrategy -> (string)
                            Indicates  whether to use unused Capacity Reserva-
                            tions for fulfilling On-Demand capacity.

                            If you specify  use-capacity-reservations-first  ,
                            the  fleet  uses  unused  Capacity Reservations to
                            fulfill  On-Demand  capacity  up  to  the   target
                            On-Demand  capacity.  If  multiple  instance pools
                            have unused Capacity Reservations,  the  On-Demand
                            allocation strategy (lowest-price ) is applied. If
                            the number of unused Capacity Reservations is less
                            than  the On-Demand target capacity, the remaining
                            On-Demand target capacity is launched according to
                            the On-Demand allocation strategy (lowest-price ).

                            If you do not specify a value, the fleet  fulfills
                            the  On-Demand  capacity  according  to the chosen
                            On-Demand allocation strategy.

                        CapacityReservationPreference -> (string)
                            Indicates  the  instance's  Capacity   Reservation
                            preferences. Possible preferences include:

                            o open - The instance can run in any open Capacity
                              Reservation   that   has   matching   attributes
                              (instance type, platform, Availability Zone).

                            o none - The instance avoids running in a Capacity
                              Reservation  even  if  one  is  available.   The
                              instance runs as an On-Demand Instance.

                        CapacityReservationResourceGroupArn -> (string)
                            The ARN of the Capacity Reservation resource group
                            in which to run the instance.

       Marker -> (string)
          The pagination token that indicates  the  next  set  of  results  to
          retrieve.



                                                        LIST-INSTANCE-FLEETS()
