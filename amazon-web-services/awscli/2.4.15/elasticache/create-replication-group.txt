CREATE-REPLICATION-GROUP()                          CREATE-REPLICATION-GROUP()



NAME
       create-replication-group -

DESCRIPTION
       Creates  a  Redis  (cluster  mode  disabled)  or  a Redis (cluster mode
       enabled) replication group.

       This API can be used to create a standalone regional replication  group
       or a secondary replication group associated with a Global datastore.

       A  Redis  (cluster  mode disabled) replication group is a collection of
       clusters, where one of the clusters is a  read/write  primary  and  the
       others are read-only replicas. Writes to the primary are asynchronously
       propagated to the replicas.

       A Redis cluster-mode enabled cluster is  comprised  of  from  1  to  90
       shards  (API/CLI: node groups). Each shard has a primary node and up to
       5 read-only replica nodes. The configuration can range from  90  shards
       and 0 replicas to 15 shards and 5 replicas, which is the maximum number
       or replicas allowed.

       The node or shard limit can be increased to a maximum of 500 per  clus-
       ter  if  the  Redis engine version is 5.0.6 or higher. For example, you
       can choose to configure a 500  node  cluster  that  ranges  between  83
       shards  (one  primary  and 5 replicas per shard) and 500 shards (single
       primary and no replicas). Make  sure  there  are  enough  available  IP
       addresses to accommodate the increase. Common pitfalls include the sub-
       nets in the subnet group have too small a CIDR range or the subnets are
       shared  and  heavily  used by other clusters. For more information, see
       Creating a Subnet Group . For versions below 5.0.6, the  limit  is  250
       per cluster.

       To  request  a limit increase, see Amazon Service Limits and choose the
       limit type Nodes per cluster per instance type .

       When a Redis (cluster mode disabled) replication group  has  been  suc-
       cessfully created, you can add one or more read replicas to it, up to a
       total of 5 read replicas. If you need to increase or decrease the  num-
       ber of node groups (console: shards), you can avail yourself of Elasti-
       Cache for Redis' scaling. For more information, see Scaling ElastiCache
       for Redis Clusters in the ElastiCache User Guide .

       NOTE:
          This operation is valid for Redis only.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-replication-group
          --replication-group-id <value>
          --replication-group-description <value>
          [--global-replication-group-id <value>]
          [--primary-cluster-id <value>]
          [--automatic-failover-enabled | --no-automatic-failover-enabled]
          [--multi-az-enabled | --no-multi-az-enabled]
          [--num-cache-clusters <value>]
          [--preferred-cache-cluster-azs <value>]
          [--num-node-groups <value>]
          [--replicas-per-node-group <value>]
          [--node-group-configuration <value>]
          [--cache-node-type <value>]
          [--engine <value>]
          [--engine-version <value>]
          [--cache-parameter-group-name <value>]
          [--cache-subnet-group-name <value>]
          [--cache-security-group-names <value>]
          [--security-group-ids <value>]
          [--tags <value>]
          [--snapshot-arns <value>]
          [--snapshot-name <value>]
          [--preferred-maintenance-window <value>]
          [--port <value>]
          [--notification-topic-arn <value>]
          [--auto-minor-version-upgrade | --no-auto-minor-version-upgrade]
          [--snapshot-retention-limit <value>]
          [--snapshot-window <value>]
          [--auth-token <value>]
          [--transit-encryption-enabled | --no-transit-encryption-enabled]
          [--at-rest-encryption-enabled | --no-at-rest-encryption-enabled]
          [--kms-key-id <value>]
          [--user-group-ids <value>]
          [--log-delivery-configurations <value>]
          [--data-tiering-enabled | --no-data-tiering-enabled]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --replication-group-id (string)
          The replication group identifier. This parameter is stored as a low-
          ercase string.

          Constraints:

          o A name must contain  from  1  to  40  alphanumeric  characters  or
            hyphens.

          o The first character must be a letter.

          o A  name  cannot  end  with  a  hyphen  or  contain two consecutive
            hyphens.

       --replication-group-description (string)
          A user-created description for the replication group.

       --global-replication-group-id (string)
          The name of the Global datastore

       --primary-cluster-id (string)
          The identifier of the cluster that serves as the  primary  for  this
          replication group. This cluster must already exist and have a status
          of available .

          This parameter is not required if NumCacheClusters , NumNodeGroups ,
          or ReplicasPerNodeGroup is specified.

       --automatic-failover-enabled      |     --no-automatic-failover-enabled
       (boolean)
          Specifies whether a read-only replica is automatically  promoted  to
          read/write primary if the existing primary fails.
              AutomaticFailoverEnabled must be enabled for Redis (cluster mode
              enabled) replication groups.

          Default: false

       --multi-az-enabled | --no-multi-az-enabled (boolean)
          A flag indicating if you have Multi-AZ enabled to enhance fault tol-
          erance. For more information, see Minimizing Downtime: Multi-AZ .

       --num-cache-clusters (integer)
          The number of clusters this replication group initially has.

          This  parameter  is  not  used  if there is more than one node group
          (shard). You should use ReplicasPerNodeGroup instead.

          If AutomaticFailoverEnabled is true , the value  of  this  parameter
          must  be  at  least  2. If AutomaticFailoverEnabled is false you can
          omit this parameter (it will default to 1), or  you  can  explicitly
          set it to a value between 2 and 6.

          The  maximum  permitted  value  for NumCacheClusters is 6 (1 primary
          plus 5 replicas).

       --preferred-cache-cluster-azs (list)
          A list of EC2 Availability Zones in which  the  replication  group's
          clusters  are  created.  The  order of the Availability Zones in the
          list is the order in which clusters are allocated. The primary clus-
          ter is created in the first AZ in the list.

          This  parameter  is  not  used  if there is more than one node group
          (shard). You should use NodeGroupConfiguration instead.

          NOTE:
              If you are creating your replication  group  in  an  Amazon  VPC
              (recommended),  you  can  only  locate  clusters in Availability
              Zones associated with the subnets in the selected subnet  group.

              The  number of Availability Zones listed must equal the value of
              NumCacheClusters .

          Default: system chosen Availability Zones.

          (string)

       Syntax:

          "string" "string" ...

       --num-node-groups (integer)
          An optional parameter that  specifies  the  number  of  node  groups
          (shards)  for  this  Redis (cluster mode enabled) replication group.
          For Redis (cluster mode disabled) either omit this parameter or  set
          it to 1.

          Default: 1

       --replicas-per-node-group (integer)
          An  optional parameter that specifies the number of replica nodes in
          each node group (shard). Valid values are 0 to 5.

       --node-group-configuration (list)
          A list of node group (shard) configuration options. Each node  group
          (shard)  configuration has the following members: PrimaryAvailabili-
          tyZone , ReplicaAvailabilityZones , ReplicaCount , and Slots .

          If you're creating a Redis (cluster mode disabled) or a Redis (clus-
          ter  mode  enabled) replication group, you can use this parameter to
          individually configure each node group (shard), or you can omit this
          parameter.  However,  it  is  required when seeding a Redis (cluster
          mode enabled) cluster from a S3 rdb file. You  must  configure  each
          node group (shard) using this parameter because you must specify the
          slots for each node group.

          (structure)
              Node  group  (shard)  configuration  options.  Each  node  group
              (shard)  configuration  has the following: Slots , PrimaryAvail-
              abilityZone , ReplicaAvailabilityZones , ReplicaCount .

              NodeGroupId -> (string)
                 Either the ElastiCache for Redis supplied  4-digit  id  or  a
                 user  supplied id for the node group these configuration val-
                 ues apply to.

              Slots -> (string)
                 A string that specifies the keyspace for  a  particular  node
                 group. Keyspaces range from 0 to 16,383. The string is in the
                 format startkey-endkey .

                 Example: "0-3999"

              ReplicaCount -> (integer)
                 The number of read replica nodes in this node group  (shard).

              PrimaryAvailabilityZone -> (string)
                 The  Availability  Zone  where  the primary node of this node
                 group (shard) is launched.

              ReplicaAvailabilityZones -> (list)
                 A list of Availability Zones to be used for the  read  repli-
                 cas. The number of Availability Zones in this list must match
                 the value of  ReplicaCount  or  ReplicasPerNodeGroup  if  not
                 specified.

                 (string)

              PrimaryOutpostArn -> (string)
                 The outpost ARN of the primary node.

              ReplicaOutpostArns -> (list)
                 The outpost ARN of the node replicas.

                 (string)

       Shorthand Syntax:

          NodeGroupId=string,Slots=string,ReplicaCount=integer,PrimaryAvailabilityZone=string,ReplicaAvailabilityZones=string,string,PrimaryOutpostArn=string,ReplicaOutpostArns=string,string ...

       JSON Syntax:

          [
            {
              "NodeGroupId": "string",
              "Slots": "string",
              "ReplicaCount": integer,
              "PrimaryAvailabilityZone": "string",
              "ReplicaAvailabilityZones": ["string", ...],
              "PrimaryOutpostArn": "string",
              "ReplicaOutpostArns": ["string", ...]
            }
            ...
          ]

       --cache-node-type (string)
          The  compute  and  memory  capacity  of  the nodes in the node group
          (shard).

          The following node types are  supported  by  ElastiCache.  Generally
          speaking,  the current generation types provide more memory and com-
          putational power at lower cost when  compared  to  their  equivalent
          previous generation counterparts.

          o General purpose:

            o Current  generation:    M6g node types (available only for Redis
              engine version 5.0.6 onward and  for  Memcached  engine  version
              1.5.16    onward):    cache.m6g.large   ,   cache.m6g.xlarge   ,
              cache.m6g.2xlarge  ,  cache.m6g.4xlarge  ,  cache.m6g.8xlarge  ,
              cache.m6g.12xlarge , cache.m6g.16xlarge

            NOTE:
                   For region availability, see Supported Node Types

                M5   node   types:    cache.m5.large   ,   cache.m5.xlarge   ,
                cache.m5.2xlarge  ,  cache.m5.4xlarge  ,  cache.m5.12xlarge  ,
                cache.m5.24xlarge      M4   node   types:    cache.m4.large  ,
                cache.m4.xlarge  ,  cache.m4.2xlarge  ,   cache.m4.4xlarge   ,
                cache.m4.10xlarge     T4g node types (available only for Redis
                engine version 6.0 onward and Memcached engine version  1.5.16
                onward):  cache.t4g.micro , cache.t4g.small , cache.t4g.medium
                T3   node   types:    cache.t3.micro   ,   cache.t3.small    ,
                cache.t3.medium       T2   node   types:    cache.t2.micro   ,
                cache.t2.small , cache.t2.medium

            o Previous  generation:  (not   recommended)    T1   node   types:
              cache.t1.micro       M1    node    types:     cache.m1.small   ,
              cache.m1.medium , cache.m1.large ,  cache.m1.xlarge     M3  node
              types:   cache.m3.medium  ,  cache.m3.large  , cache.m3.xlarge ,
              cache.m3.2xlarge

          o Compute optimized:

            o Previous  generation:  (not   recommended)    C1   node   types:
              cache.c1.xlarge

          o Memory optimized with data tiering:

            o Current  generation:   R6gd node types (available only for Redis
              engine    version    6.2    onward).     cache.r6gd.xlarge     ,
              cache.r6gd.2xlarge  ,  cache.r6gd.4xlarge , cache.r6gd.8xlarge ,
              cache.r6gd.12xlarge , cache.r6gd.16xlarge

          o Memory optimized:

            o Current generation:   R6g node types (available only  for  Redis
              engine  version  5.0.6  onward  and for Memcached engine version
              1.5.16   onward).    cache.r6g.large   ,   cache.r6g.xlarge    ,
              cache.r6g.2xlarge  ,  cache.r6g.4xlarge  ,  cache.r6g.8xlarge  ,
              cache.r6g.12xlarge , cache.r6g.16xlarge

            NOTE:
                   For region availability, see Supported Node Types

                R5   node   types:    cache.r5.large   ,   cache.r5.xlarge   ,
                cache.r5.2xlarge  ,  cache.r5.4xlarge  ,  cache.r5.12xlarge  ,
                cache.r5.24xlarge     R4   node   types:    cache.r4.large   ,
                cache.r4.xlarge   ,   cache.r4.2xlarge  ,  cache.r4.4xlarge  ,
                cache.r4.8xlarge , cache.r4.16xlarge

            o Previous  generation:  (not   recommended)    M2   node   types:
              cache.m2.xlarge , cache.m2.2xlarge , cache.m2.4xlarge    R3 node
              types:  cache.r3.large , cache.r3.xlarge  ,  cache.r3.2xlarge  ,
              cache.r3.4xlarge , cache.r3.8xlarge
              Additional node type info

          o All current generation instance types are created in Amazon VPC by
            default.

          o Redis append-only files (AOF) are  not  supported  for  T1  or  T2
            instances.

          o Redis  Multi-AZ  with  automatic  failover  is not supported on T1
            instances.

          o Redis configuration variables appendonly and appendfsync  are  not
            supported on Redis version 2.8.22 and later.

       --engine (string)
          The  name  of  the  cache engine to be used for the clusters in this
          replication group. Must be Redis.

       --engine-version (string)
          The version number of the cache engine to be used for  the  clusters
          in  this  replication group. To view the supported cache engine ver-
          sions, use the DescribeCacheEngineVersions operation.
              Important: You can  upgrade  to  a  newer  engine  version  (see
              Selecting  a  Cache Engine and Version ) in the ElastiCache User
              Guide , but you cannot downgrade to an earlier  engine  version.
              If  you  want  to use an earlier engine version, you must delete
              the existing cluster or replication group  and  create  it  anew
              with the earlier engine version.

       --cache-parameter-group-name (string)
          The  name  of the parameter group to associate with this replication
          group. If this argument is  omitted,  the  default  cache  parameter
          group for the specified engine is used.

          If you are running Redis version 3.2.4 or later, only one node group
          (shard), and want to use a default  parameter  group,  we  recommend
          that you specify the parameter group by name.

          o To  create  a Redis (cluster mode disabled) replication group, use
            CacheParameterGroupName=default.redis3.2 .

          o To create a Redis (cluster mode enabled)  replication  group,  use
            CacheParameterGroupName=default.redis3.2.cluster.on .

       --cache-subnet-group-name (string)
          The  name  of  the cache subnet group to be used for the replication
          group.

          WARNING:
              If you're going to launch your cluster in  an  Amazon  VPC,  you
              need  to create a subnet group before you start creating a clus-
              ter. For more information, see Subnets and Subnet Groups .

       --cache-security-group-names (list)
          A list of cache security group names to associate with this replica-
          tion group.

          (string)

       Syntax:

          "string" "string" ...

       --security-group-ids (list)
          One or more Amazon VPC security groups associated with this replica-
          tion group.

          Use this parameter only when you are creating a replication group in
          an Amazon Virtual Private Cloud (Amazon VPC).

          (string)

       Syntax:

          "string" "string" ...

       --tags (list)
          A  list  of  tags to be added to this resource. Tags are comma-sepa-
          rated key,value pairs (e.g. Key=``myKey`` ,  Value=``myKeyValue``  .
          You  can  include  multiple tags as shown following: Key=``myKey`` ,
          Value=``myKeyValue``  Key=``mySecondKey``   ,   Value=``mySecondKey-
          Value``  .  Tags  on  replication  groups  will be replicated to all
          nodes.

          (structure)
              A tag that can be added to an ElastiCache cluster or replication
              group.  Tags  are composed of a Key/Value pair. You can use tags
              to categorize and track all your ElastiCache resources, with the
              exception  of  global  replication group. When you add or remove
              tags on replication groups, those actions will be replicated  to
              all  nodes  in the replication group. A tag with a null Value is
              permitted.

              Key -> (string)
                 The key for the tag. May not be null.

              Value -> (string)
                 The tag's value. May be null.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --snapshot-arns (list)
          A list of Amazon Resource Names (ARN)  that  uniquely  identify  the
          Redis RDB snapshot files stored in Amazon S3. The snapshot files are
          used to populate the new replication group.  The  Amazon  S3  object
          name in the ARN cannot contain any commas. The new replication group
          will have the number of node groups (console: shards)  specified  by
          the  parameter NumNodeGroups or the number of node groups configured
          by NodeGroupConfiguration regardless of the number of ARNs specified
          here.

          Example of an Amazon S3 ARN: arn:aws:s3:::my_bucket/snapshot1.rdb

          (string)

       Syntax:

          "string" "string" ...

       --snapshot-name (string)
          The  name  of  a  snapshot  from  which to restore data into the new
          replication group. The snapshot status changes  to  restoring  while
          the new replication group is being created.

       --preferred-maintenance-window (string)
          Specifies  the  weekly  time  range  during which maintenance on the
          cluster is performed. It is specified  as  a  range  in  the  format
          ddd:hh24:mi-ddd:hh24:mi  (24H  Clock  UTC).  The minimum maintenance
          window is a 60 minute period. Valid values for ddd are:

          Specifies the weekly time range  during  which  maintenance  on  the
          cluster  is  performed.  It  is  specified  as a range in the format
          ddd:hh24:mi-ddd:hh24:mi (24H Clock  UTC).  The  minimum  maintenance
          window is a 60 minute period.

          Valid values for ddd are:

          o sun

          o mon

          o tue

          o wed

          o thu

          o fri

          o sat

          Example: sun:23:00-mon:01:30

       --port (integer)
          The  port  number  on  which  each  member  of the replication group
          accepts connections.

       --notification-topic-arn (string)
          The Amazon Resource Name (ARN) of  the  Amazon  Simple  Notification
          Service (SNS) topic to which notifications are sent.

          NOTE:
              The  Amazon  SNS  topic  owner  must  be the same as the cluster
              owner.

       --auto-minor-version-upgrade     |      --no-auto-minor-version-upgrade
       (boolean)
          If  you  are  running  Redis  engine  version 6.0 or later, set this
          parameter to yes if you want to opt-in to the next auto  minor  ver-
          sion  upgrade campaign. This parameter is disabled for previous ver-
          sions.

       --snapshot-retention-limit (integer)
          The number of days for which ElastiCache retains automatic snapshots
          before deleting them. For example, if you set SnapshotRetentionLimit
          to 5, a snapshot that was taken today is retained for 5 days  before
          being deleted.

          Default:  0 (i.e., automatic backups are disabled for this cluster).

       --snapshot-window (string)
          The daily time range (in UTC) during which ElastiCache begins taking
          a daily snapshot of your node group (shard).

          Example: 05:00-09:00

          If  you  do  not  specify  this parameter, ElastiCache automatically
          chooses an appropriate time range.

       --auth-token (string)
              Reserved parameter. The password used to access a password  pro-
              tected server.

              AuthToken  can  be  specified  only  on replication groups where
              TransitEncryptionEnabled is true .

          WARNING:
              For HIPAA compliance, you must specify  TransitEncryptionEnabled
              as true , an AuthToken , and a CacheSubnetGroup .

          Password constraints:

          o Must be only printable ASCII characters.

          o Must  be at least 16 characters and no more than 128 characters in
            length.

          o The only permitted printable special characters are !, &, #, $, ^,
            <,  >, and -. Other printable special characters cannot be used in
            the AUTH token.

          For     more     information,     see     AUTH      password      at
          http://redis.io/commands/AUTH.

       --transit-encryption-enabled      |     --no-transit-encryption-enabled
       (boolean)
          A flag that enables in-transit encryption when set to true .

          You cannot modify the value of  TransitEncryptionEnabled  after  the
          cluster is created. To enable in-transit encryption on a cluster you
          must set TransitEncryptionEnabled to true when you create a cluster.

          This  parameter is valid only if the Engine parameter is redis , the
          EngineVersion parameter is 3.2.6 , 4.x or later, and the cluster  is
          being created in an Amazon VPC.

          If  you  enable in-transit encryption, you must also specify a value
          for CacheSubnetGroup .
              Required: Only available when creating a replication group in an
              Amazon VPC using redis version 3.2.6 , 4.x or later.

          Default: false

          WARNING:
              For  HIPAA compliance, you must specify TransitEncryptionEnabled
              as true , an AuthToken , and a CacheSubnetGroup .

       --at-rest-encryption-enabled     |      --no-at-rest-encryption-enabled
       (boolean)
          A flag that enables encryption at rest when set to true .

          You  cannot  modify  the  value of AtRestEncryptionEnabled after the
          replication group is created. To enable  encryption  at  rest  on  a
          replication  group you must set AtRestEncryptionEnabled to true when
          you create the replication group.
              Required: Only available when creating a replication group in an
              Amazon VPC using redis version 3.2.6 , 4.x or later.

          Default: false

       --kms-key-id (string)
          The ID of the KMS key used to encrypt the disk in the cluster.

       --user-group-ids (list)
          The user group to associate with the replication group.

          (string)

       Syntax:

          "string" "string" ...

       --log-delivery-configurations (list)
          Specifies the destination, format and type of the logs.

          (structure)
              Specifies the destination, format and type of the logs.

              LogType -> (string)
                 Refers to slow-log or engine-log..

              DestinationType -> (string)
                 Specify  either  cloudwatch-logs  or  kinesis-firehose as the
                 destination type.

              DestinationDetails -> (structure)
                 Configuration details of either a CloudWatch Logs destination
                 or Kinesis Data Firehose destination.

                 CloudWatchLogsDetails -> (structure)
                     The configuration details of the CloudWatch Logs destina-
                     tion.

                     LogGroup -> (string)
                        The name of the CloudWatch Logs log group.

                 KinesisFirehoseDetails -> (structure)
                     The configuration details of the  Kinesis  Data  Firehose
                     destination.

                     DeliveryStream -> (string)
                        The name of the Kinesis Data Firehose delivery stream.

              LogFormat -> (string)
                 Specifies either JSON or TEXT

              Enabled -> (boolean)
                 Specify if log delivery is enabled. Default true .

       Shorthand Syntax:

          LogType=string,DestinationType=string,DestinationDetails={CloudWatchLogsDetails={LogGroup=string},KinesisFirehoseDetails={DeliveryStream=string}},LogFormat=string,Enabled=boolean ...

       JSON Syntax:

          [
            {
              "LogType": "slow-log"|"engine-log",
              "DestinationType": "cloudwatch-logs"|"kinesis-firehose",
              "DestinationDetails": {
                "CloudWatchLogsDetails": {
                  "LogGroup": "string"
                },
                "KinesisFirehoseDetails": {
                  "DeliveryStream": "string"
                }
              },
              "LogFormat": "text"|"json",
              "Enabled": true|false
            }
            ...
          ]

       --data-tiering-enabled | --no-data-tiering-enabled (boolean)
          Enables data tiering. Data tiering is only supported for replication
          groups  using the r6gd node type. This parameter must be set to true
          when using r6gd nodes. For more information, see Data tiering .

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a replication group

       The following create-replication-group example creates a Redis (cluster
       mode  disabled)  or  a  Redis (cluster mode enabled) replication group.
       This operation is valid for Redis only.

          aws elasticache create-replication-group \
              --replication-group-id "mygroup" \
              --replication-group-description "my group" \
              --engine "redis" \
              --cache-node-type "cache.m5.large"

       Output:

          {
              "ReplicationGroup": {
                  "ReplicationGroupId": "mygroup",
                  "Description": "my group",
                  "Status": "creating",
                  "PendingModifiedValues": {},
                  "MemberClusters": [
                      "mygroup-001"
                  ],
                  "AutomaticFailover": "disabled",
                  "SnapshotRetentionLimit": 0,
                  "SnapshotWindow": "06:00-07:00",
                  "ClusterEnabled": false,
                  "CacheNodeType": "cache.m5.large",
                  "TransitEncryptionEnabled": false,
                  "AtRestEncryptionEnabled": false
              }
          }

       For more information, see Creating a Redis  Replication  Group  in  the
       Elasticache User Guide.

OUTPUT
       ReplicationGroup -> (structure)
          Contains  all  of  the  attributes  of  a specific Redis replication
          group.

          ReplicationGroupId -> (string)
              The identifier for the replication group.

          Description -> (string)
              The user supplied description of the replication group.

          GlobalReplicationGroupInfo -> (structure)
              The name of the Global datastore and role  of  this  replication
              group in the Global datastore.

              GlobalReplicationGroupId -> (string)
                 The name of the Global datastore

              GlobalReplicationGroupMemberRole -> (string)
                 The  role of the replication group in a Global datastore. Can
                 be primary or secondary.

          Status -> (string)
              The current state of this replication group - creating ,  avail-
              able , modifying , deleting , create-failed , snapshotting .

          PendingModifiedValues -> (structure)
              A  group  of  settings  to  be applied to the replication group,
              either immediately or during the next maintenance window.

              PrimaryClusterId -> (string)
                 The primary  cluster  ID  that  is  applied  immediately  (if
                 --apply-immediately  was specified), or during the next main-
                 tenance window.

              AutomaticFailoverStatus -> (string)
                 Indicates the status of automatic  failover  for  this  Redis
                 replication group.

              Resharding -> (structure)
                 The status of an online resharding operation.

                 SlotMigration -> (structure)
                     Represents  the  progress  of an online resharding opera-
                     tion.

                     ProgressPercentage -> (double)
                        The percentage of the slot migration that is complete.

              AuthTokenStatus -> (string)
                 The auth token status

              UserGroups -> (structure)
                 The user group being modified.

                 UserGroupIdsToAdd -> (list)
                     The ID of the user group to add.

                     (string)

                 UserGroupIdsToRemove -> (list)
                     The ID of the user group to remove.

                     (string)

              LogDeliveryConfigurations -> (list)
                 The log delivery configurations being modified

                 (structure)
                     The log delivery configurations being modified

                     LogType -> (string)
                        Refers to slow-log or engine-log..

                     DestinationType -> (string)
                        Returns  the  destination type, either CloudWatch Logs
                        or Kinesis Data Firehose.

                     DestinationDetails -> (structure)
                        Configuration details of either a CloudWatch Logs des-
                        tination or Kinesis Data Firehose destination.

                        CloudWatchLogsDetails -> (structure)
                            The  configuration  details of the CloudWatch Logs
                            destination.

                            LogGroup -> (string)
                               The name of the CloudWatch Logs log group.

                        KinesisFirehoseDetails -> (structure)
                            The configuration  details  of  the  Kinesis  Data
                            Firehose destination.

                            DeliveryStream -> (string)
                               The  name of the Kinesis Data Firehose delivery
                               stream.

                     LogFormat -> (string)
                        Returns the log format, either JSON or TEXT

          MemberClusters -> (list)
              The names of all the cache clusters that are part of this repli-
              cation group.

              (string)

          NodeGroups -> (list)
              A  list  of  node  groups  in  this replication group. For Redis
              (cluster mode disabled)  replication  groups,  this  is  a  sin-
              gle-element  list.  For Redis (cluster mode enabled) replication
              groups, the list contains an entry for each node group  (shard).

              (structure)
                 Represents  a  collection  of  cache  nodes  in a replication
                 group. One node in the node group is the  read/write  primary
                 node. All the other nodes are read-only Replica nodes.

                 NodeGroupId -> (string)
                     The identifier for the node group (shard). A Redis (clus-
                     ter mode disabled) replication group contains only 1 node
                     group;  therefore,  the  node  group  ID is 0001. A Redis
                     (cluster mode enabled) replication group contains 1 to 90
                     node  groups  numbered 0001 to 0090. Optionally, the user
                     can provide the id for a node group.

                 Status -> (string)
                     The current state of this replication group - creating  ,
                     available , modifying , deleting .

                 PrimaryEndpoint -> (structure)
                     The  endpoint  of  the  primary  node  in this node group
                     (shard).

                     Address -> (string)
                        The DNS hostname of the cache node.

                     Port -> (integer)
                        The port number that the cache engine is listening on.

                 ReaderEndpoint -> (structure)
                     The  endpoint  of  the  replica  nodes in this node group
                     (shard).

                     Address -> (string)
                        The DNS hostname of the cache node.

                     Port -> (integer)
                        The port number that the cache engine is listening on.

                 Slots -> (string)
                     The keyspace for this node group (shard).

                 NodeGroupMembers -> (list)
                     A  list  containing  information  about  individual nodes
                     within the node group (shard).

                     (structure)
                        Represents a single node within a node group  (shard).

                        CacheClusterId -> (string)
                            The ID of the cluster to which the node belongs.

                        CacheNodeId -> (string)
                            The  ID  of the node within its cluster. A node ID
                            is a numeric identifier (0001, 0002, etc.).

                        ReadEndpoint -> (structure)
                            The information required for  client  programs  to
                            connect  to  a  node for read operations. The read
                            endpoint is only applicable on Redis (cluster mode
                            disabled) clusters.

                            Address -> (string)
                               The DNS hostname of the cache node.

                            Port -> (integer)
                               The  port  number that the cache engine is lis-
                               tening on.

                        PreferredAvailabilityZone -> (string)
                            The name of the Availability  Zone  in  which  the
                            node is located.

                        PreferredOutpostArn -> (string)
                            The outpost ARN of the node group member.

                        CurrentRole -> (string)
                            The  role that is currently assigned to the node -
                            primary or replica . This member is only  applica-
                            ble  for Redis (cluster mode disabled) replication
                            groups.

          SnapshottingClusterId -> (string)
              The cluster ID that is used as the daily snapshot source for the
              replication group.

          AutomaticFailover -> (string)
              Indicates the status of automatic failover for this Redis repli-
              cation group.

          MultiAZ -> (string)
              A flag indicating if you have Multi-AZ enabled to enhance  fault
              tolerance.   For  more  information,  see  Minimizing  Downtime:
              Multi-AZ

          ConfigurationEndpoint -> (structure)
              The configuration endpoint for this replication group.  Use  the
              configuration endpoint to connect to this replication group.

              Address -> (string)
                 The DNS hostname of the cache node.

              Port -> (integer)
                 The port number that the cache engine is listening on.

          SnapshotRetentionLimit -> (integer)
              The number of days for which ElastiCache retains automatic clus-
              ter snapshots before deleting them.  For  example,  if  you  set
              SnapshotRetentionLimit  to 5, a snapshot that was taken today is
              retained for 5 days before being deleted.

              WARNING:
                 If the value of SnapshotRetentionLimit is set  to  zero  (0),
                 backups are turned off.

          SnapshotWindow -> (string)
              The  daily  time  range (in UTC) during which ElastiCache begins
              taking a daily snapshot of your node group (shard).

              Example: 05:00-09:00

              If you do not specify this parameter, ElastiCache  automatically
              chooses an appropriate time range.

              NOTE:
                 This parameter is only valid if the Engine parameter is redis
                 .

          ClusterEnabled -> (boolean)
              A flag indicating whether or not this replication group is clus-
              ter  enabled;  i.e.,  whether its data can be partitioned across
              multiple shards (API/CLI: node groups).

              Valid values: true | false

          CacheNodeType -> (string)
              The name of the compute and memory capacity node type  for  each
              node in the replication group.

          AuthTokenEnabled -> (boolean)
              A  flag  that enables using an AuthToken (password) when issuing
              Redis commands.

              Default: false

          AuthTokenLastModifiedDate -> (timestamp)
              The date the auth token was last modified

          TransitEncryptionEnabled -> (boolean)
              A flag that enables in-transit encryption when set to true .

              You cannot modify the value  of  TransitEncryptionEnabled  after
              the  cluster  is  created.  To enable in-transit encryption on a
              cluster you must set TransitEncryptionEnabled to true  when  you
              create a cluster.
                 Required: Only available when creating a replication group in
                 an Amazon VPC using redis version 3.2.6 , 4.x or later.

              Default: false

          AtRestEncryptionEnabled -> (boolean)
              A flag that enables encryption at-rest when set to true .

              You cannot modify the value of AtRestEncryptionEnabled after the
              cluster  is  created.  To enable encryption at-rest on a cluster
              you must set AtRestEncryptionEnabled to true when you  create  a
              cluster.
                 Required: Only available when creating a replication group in
                 an Amazon VPC using redis version 3.2.6 , 4.x or later.

              Default: false

          MemberClustersOutpostArns -> (list)
              The outpost ARNs of the replication group's member clusters.

              (string)

          KmsKeyId -> (string)
              The ID of the KMS key used to encrypt the disk in the cluster.

          ARN -> (string)
              The ARN (Amazon Resource Name) of the replication group.

          UserGroupIds -> (list)
              The ID of the user group associated to the replication group.

              (string)

          LogDeliveryConfigurations -> (list)
              Returns the destination, format and type of the logs.

              (structure)
                 Returns the destination, format and type of the logs.

                 LogType -> (string)
                     Refers to slow-log or engine-log.

                 DestinationType -> (string)
                     Returns the destination type, either  cloudwatch-logs  or
                     kinesis-firehose .

                 DestinationDetails -> (structure)
                     Configuration  details of either a CloudWatch Logs desti-
                     nation or Kinesis Data Firehose destination.

                     CloudWatchLogsDetails -> (structure)
                        The configuration details of the CloudWatch Logs  des-
                        tination.

                        LogGroup -> (string)
                            The name of the CloudWatch Logs log group.

                     KinesisFirehoseDetails -> (structure)
                        The configuration details of the Kinesis Data Firehose
                        destination.

                        DeliveryStream -> (string)
                            The name of the  Kinesis  Data  Firehose  delivery
                            stream.

                 LogFormat -> (string)
                     Returns the log format, either JSON or TEXT.

                 Status -> (string)
                     Returns the log delivery configuration status. Values are
                     one of enabling | disabling | modifying | active | error

                 Message -> (string)
                     Returns an error message for the log delivery  configura-
                     tion.

          ReplicationGroupCreateTime -> (timestamp)
              The date and time when the cluster was created.

          DataTiering -> (string)
              Enables  data tiering. Data tiering is only supported for repli-
              cation groups using the r6gd node type. This parameter  must  be
              set  to  true  when  using r6gd nodes. For more information, see
              Data tiering .



                                                    CREATE-REPLICATION-GROUP()
