DESCRIBE-RESERVED-CACHE-NODES-OFFERINDESCRIBE-RESERVED-CACHE-NODES-OFFERINGS()



NAME
       describe-reserved-cache-nodes-offerings -

DESCRIPTION
       Lists available reserved cache node offerings.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       describe-reserved-cache-nodes-offerings  is a paginated operation. Mul-
       tiple API calls may be issued in order to retrieve the entire data  set
       of  results.  You can disable pagination by providing the --no-paginate
       argument.  When using --output text and the --query argument on a pagi-
       nated response, the --query argument must extract data from the results
       of the following query expressions: ReservedCacheNodesOfferings

SYNOPSIS
            describe-reserved-cache-nodes-offerings
          [--reserved-cache-nodes-offering-id <value>]
          [--cache-node-type <value>]
          [--duration <value>]
          [--product-description <value>]
          [--offering-type <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --reserved-cache-nodes-offering-id (string)
          The offering identifier filter value. Use  this  parameter  to  show
          only  the  available offering that matches the specified reservation
          identifier.

          Example: 438012d3-4052-4cc7-b2e3-8d3372e0e706

       --cache-node-type (string)
          The cache node type filter value. Use this parameter  to  show  only
          the available offerings matching the specified cache node type.

          The  following  node  types  are supported by ElastiCache. Generally
          speaking, the current generation types provide more memory and  com-
          putational  power  at  lower  cost when compared to their equivalent
          previous generation counterparts.

          o General purpose:

            o Current generation:   M6g node types: (available only for  Redis
              engine  version  5.0.6  onward  and for Memcached engine version
              1.5.16   onward)   cache.m6g.large    ,    cache.m6g.xlarge    ,
              cache.m6g.2xlarge  ,  cache.m6g.4xlarge  ,  cache.m6g.8xlarge  ,
              cache.m6g.12xlarge , cache.m6g.16xlarge

            NOTE:
                   For region availability, see Supported Node Types

                M5   node   types:    cache.m5.large   ,   cache.m5.xlarge   ,
                cache.m5.2xlarge  ,  cache.m5.4xlarge  ,  cache.m5.12xlarge  ,
                cache.m5.24xlarge     M4   node   types:    cache.m4.large   ,
                cache.m4.xlarge   ,   cache.m4.2xlarge  ,  cache.m4.4xlarge  ,
                cache.m4.10xlarge    T4g node types (available only for  Redis
                engine  version  6.0  onward  and for Memcached engine version
                1.5.16   onward):   cache.t4g.micro   ,   cache.t4g.small    ,
                cache.t4g.medium      T3   node   types:    cache.t3.micro   ,
                cache.t3.small   ,   cache.t3.medium      T2    node    types:
                cache.t2.micro , cache.t2.small , cache.t2.medium

            o Previous   generation:   (not   recommended)    T1  node  types:
              cache.t1.micro      M1    node    types:     cache.m1.small    ,
              cache.m1.medium  ,  cache.m1.large  , cache.m1.xlarge    M3 node
              types:  cache.m3.medium ,  cache.m3.large  ,  cache.m3.xlarge  ,
              cache.m3.2xlarge

          o Compute optimized:

            o Previous   generation:   (not   recommended)    C1  node  types:
              cache.c1.xlarge

          o Memory optimized with data tiering:

            o Current generation:   R6gd node types (available only for  Redis
              engine     version    6.2    onward).     cache.r6gd.xlarge    ,
              cache.r6gd.2xlarge , cache.r6gd.4xlarge ,  cache.r6gd.8xlarge  ,
              cache.r6gd.12xlarge , cache.r6gd.16xlarge

          o Memory optimized:

            o Current  generation:    R6g node types (available only for Redis
              engine version 5.0.6 onward and  for  Memcached  engine  version
              1.5.16    onward).    cache.r6g.large   ,   cache.r6g.xlarge   ,
              cache.r6g.2xlarge  ,  cache.r6g.4xlarge  ,  cache.r6g.8xlarge  ,
              cache.r6g.12xlarge , cache.r6g.16xlarge

            NOTE:
                   For region availability, see Supported Node Types

                R5   node   types:    cache.r5.large   ,   cache.r5.xlarge   ,
                cache.r5.2xlarge  ,  cache.r5.4xlarge  ,  cache.r5.12xlarge  ,
                cache.r5.24xlarge      R4   node   types:    cache.r4.large  ,
                cache.r4.xlarge  ,  cache.r4.2xlarge  ,   cache.r4.4xlarge   ,
                cache.r4.8xlarge , cache.r4.16xlarge

            o Previous   generation:   (not   recommended)    M2  node  types:
              cache.m2.xlarge , cache.m2.2xlarge , cache.m2.4xlarge    R3 node
              types:   cache.r3.large  ,  cache.r3.xlarge , cache.r3.2xlarge ,
              cache.r3.4xlarge , cache.r3.8xlarge
              Additional node type info

          o All current generation instance types are created in Amazon VPC by
            default.

          o Redis  append-only  files  (AOF)  are  not  supported for T1 or T2
            instances.

          o Redis Multi-AZ with automatic failover  is  not  supported  on  T1
            instances.

          o Redis  configuration  variables appendonly and appendfsync are not
            supported on Redis version 2.8.22 and later.

       --duration (string)
          Duration filter value, specified  in  years  or  seconds.  Use  this
          parameter to show only reservations for a given duration.

          Valid Values: 1 | 3 | 31536000 | 94608000

       --product-description (string)
          The  product  description  filter  value. Use this parameter to show
          only the available offerings matching the specified product descrip-
          tion.

       --offering-type (string)
          The  offering type filter value. Use this parameter to show only the
          available offerings matching the specified offering type.

          Valid Values: "Light Utilization"|"Medium  Utilization"|"Heavy  Uti-
          lization" |"All Upfront"|"Partial Upfront"| "No Upfront"

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size  results  in  more  calls to the AWS service,
          retrieving fewer items in each call. This can help prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To describe reserved-cache-nodes-offerings

       The following describe-reserved-cache-nodes-offerings  example  returns
       details of a reserved-cache-node options.

          aws elasticache describe-reserved-cache-nodes-offerings

       Output:

          {
              "ReservedCacheNodesOfferings": [
                  {
                      "ReservedCacheNodesOfferingId": "01ce0a19-a476-41cb-8aee-48eacbcdc8e5",
                      "CacheNodeType": "cache.t3.small",
                      "Duration": 31536000,
                      "FixedPrice": 97.0,
                      "UsagePrice": 0.0,
                      "ProductDescription": "memcached",
                      "OfferingType": "Partial Upfront",
                      "RecurringCharges": [
                          {
                              "RecurringChargeAmount": 0.011,
                              "RecurringChargeFrequency": "Hourly"
                          }
                      ]
                  },
                  {
                      "ReservedCacheNodesOfferingId": "0443a27b-4da5-4b90-b92d-929fbd7abed2",
                      "CacheNodeType": "cache.m3.2xlarge",
                      "Duration": 31536000,
                      "FixedPrice": 1772.0,
                      "UsagePrice": 0.0,
                      "ProductDescription": "redis",
                      "OfferingType": "Heavy Utilization",
                      "RecurringCharges": [
                          {
                              "RecurringChargeAmount": 0.25,
                              "RecurringChargeFrequency": "Hourly"
                          }
                      ]
                  },

                  ...

              ]
          }

       For more information, see Getting Info About Reserved Node Offerings in
       the Elasticache Redis User Guide or Getting Info  About  Reserved  Node
       Offerings in the Elasticache Memcached User Guide.

OUTPUT
       Marker -> (string)
          Provides an identifier to allow retrieval of paginated results.

       ReservedCacheNodesOfferings -> (list)
          A  list  of  reserved cache node offerings. Each element in the list
          contains detailed information about one offering.

          (structure)
              Describes all of the attributes of a reserved cache node  offer-
              ing.

              ReservedCacheNodesOfferingId -> (string)
                 A unique identifier for the reserved cache node offering.

              CacheNodeType -> (string)
                 The cache node type for the reserved cache node.

                 The following node types are supported by ElastiCache. Gener-
                 ally speaking, the current generation types provide more mem-
                 ory  and  computational  power at lower cost when compared to
                 their equivalent previous generation counterparts.

                 o General purpose:

                   o Current generation:   M6g node types: (available only for
                     Redis  engine  version  5.0.6  onward  and  for Memcached
                     engine  version   1.5.16   onward):   cache.m6g.large   ,
                     cache.m6g.xlarge  , cache.m6g.2xlarge , cache.m6g.4xlarge
                     ,    cache.m6g.8xlarge     ,     cache.m6g.12xlarge     ,
                     cache.m6g.16xlarge

                   NOTE:
                          For region availability, see Supported Node Types

                       M5  node  types:   cache.m5.large  ,  cache.m5.xlarge ,
                       cache.m5.2xlarge , cache.m5.4xlarge , cache.m5.12xlarge
                       , cache.m5.24xlarge    M4 node types:  cache.m4.large ,
                       cache.m4.xlarge , cache.m4.2xlarge , cache.m4.4xlarge ,
                       cache.m4.10xlarge    T4g node types (available only for
                       Redis engine version 6.0 onward  and  Memcached  engine
                       version     1.5.16     onward):    cache.t4g.micro    ,
                       cache.t4g.small , cache.t4g.medium     T3  node  types:
                       cache.t3.micro , cache.t3.small , cache.t3.medium    T2
                       node  types:    cache.t2.micro   ,   cache.t2.small   ,
                       cache.t2.medium

                   o Previous  generation:  (not  recommended)  T1 node types:
                     cache.t1.micro     M1  node  types:    cache.m1.small   ,
                     cache.m1.medium  , cache.m1.large , cache.m1.xlarge    M3
                     node   types:    cache.m3.medium   ,   cache.m3.large   ,
                     cache.m3.xlarge , cache.m3.2xlarge

                 o Compute optimized:

                   o Previous  generation:  (not  recommended)  C1 node types:
                     cache.c1.xlarge

                 o Memory optimized with data tiering:

                   o Current generation:   R6gd node types (available only for
                     Redis  engine  version  6.2 onward).  cache.r6gd.xlarge ,
                     cache.r6gd.2xlarge      ,      cache.r6gd.4xlarge       ,
                     cache.r6gd.8xlarge      ,      cache.r6gd.12xlarge      ,
                     cache.r6gd.16xlarge

                 o Memory optimized:

                   o Current generation:   R6g node types (available only  for
                     Redis  engine  version  5.0.6  onward  and  for Memcached
                     engine  version  1.5.16   onward).    cache.r6g.large   ,
                     cache.r6g.xlarge  , cache.r6g.2xlarge , cache.r6g.4xlarge
                     ,    cache.r6g.8xlarge     ,     cache.r6g.12xlarge     ,
                     cache.r6g.16xlarge

                   NOTE:
                          For region availability, see Supported Node Types

                       R5  node  types:   cache.r5.large  ,  cache.r5.xlarge ,
                       cache.r5.2xlarge , cache.r5.4xlarge , cache.r5.12xlarge
                       , cache.r5.24xlarge    R4 node types:  cache.r4.large ,
                       cache.r4.xlarge , cache.r4.2xlarge , cache.r4.4xlarge ,
                       cache.r4.8xlarge , cache.r4.16xlarge

                   o Previous  generation:  (not  recommended)  M2 node types:
                     cache.m2.xlarge  ,  cache.m2.2xlarge  ,  cache.m2.4xlarge
                     R3   node  types:   cache.r3.large  ,  cache.r3.xlarge  ,
                     cache.r3.2xlarge , cache.r3.4xlarge , cache.r3.8xlarge
                     Additional node type info

                 o All current generation instance types are created in Amazon
                   VPC by default.

                 o Redis  append-only  files (AOF) are not supported for T1 or
                   T2 instances.

                 o Redis Multi-AZ with automatic failover is not supported  on
                   T1 instances.

                 o Redis  configuration  variables  appendonly and appendfsync
                   are not supported on Redis version 2.8.22 and later.

              Duration -> (integer)
                 The duration of the offering. in seconds.

              FixedPrice -> (double)
                 The fixed price charged for this offering.

              UsagePrice -> (double)
                 The hourly price charged for this offering.

              ProductDescription -> (string)
                 The cache engine used by the offering.

              OfferingType -> (string)
                 The offering type.

              RecurringCharges -> (list)
                 The recurring price charged to run this reserved cache  node.

                 (structure)
                     Contains  the specific price and frequency of a recurring
                     charges for a reserved cache  node,  or  for  a  reserved
                     cache node offering.

                     RecurringChargeAmount -> (double)
                        The monetary amount of the recurring charge.

                     RecurringChargeFrequency -> (string)
                        The frequency of the recurring charge.



                                     DESCRIBE-RESERVED-CACHE-NODES-OFFERINGS()
