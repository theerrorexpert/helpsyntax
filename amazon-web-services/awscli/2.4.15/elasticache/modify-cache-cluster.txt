MODIFY-CACHE-CLUSTER()                                  MODIFY-CACHE-CLUSTER()



NAME
       modify-cache-cluster -

DESCRIPTION
       Modifies  the  settings  for  a  cluster. You can use this operation to
       change one or more cluster configuration parameters by  specifying  the
       parameters and the new values.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            modify-cache-cluster
          --cache-cluster-id <value>
          [--num-cache-nodes <value>]
          [--cache-node-ids-to-remove <value>]
          [--az-mode <value>]
          [--new-availability-zones <value>]
          [--cache-security-group-names <value>]
          [--security-group-ids <value>]
          [--preferred-maintenance-window <value>]
          [--notification-topic-arn <value>]
          [--cache-parameter-group-name <value>]
          [--notification-topic-status <value>]
          [--apply-immediately | --no-apply-immediately]
          [--engine-version <value>]
          [--auto-minor-version-upgrade | --no-auto-minor-version-upgrade]
          [--snapshot-retention-limit <value>]
          [--snapshot-window <value>]
          [--cache-node-type <value>]
          [--auth-token <value>]
          [--auth-token-update-strategy <value>]
          [--log-delivery-configurations <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --cache-cluster-id (string)
          The  cluster identifier. This value is stored as a lowercase string.

       --num-cache-nodes (integer)
          The number of cache nodes that the cluster should have. If the value
          for  NumCacheNodes  is greater than the sum of the number of current
          cache nodes and the number of cache nodes  pending  creation  (which
          may  be  zero),  more nodes are added. If the value is less than the
          number of existing cache nodes, nodes are removed. If the  value  is
          equal  to  the  number  of  current  cache nodes, any pending add or
          remove requests are canceled.

          If you are removing cache nodes, you must use the  CacheNodeIdsToRe-
          move  parameter  to  provide  the IDs of the specific cache nodes to
          remove.

          For clusters running Redis, this value must be 1. For clusters  run-
          ning Memcached, this value must be between 1 and 40.

          NOTE:
              Adding  or removing Memcached cache nodes can be applied immedi-
              ately or as a pending operation (see ApplyImmediately ).

              A pending operation to modify the number of  cache  nodes  in  a
              cluster  during  its  maintenance  window,  whether by adding or
              removing nodes in accordance with the scale out architecture, is
              not queued. The customer's latest request to add or remove nodes
              to the cluster overrides any previous pending operations to mod-
              ify  the  number  of  cache nodes in the cluster. For example, a
              request to remove 2 nodes  would  override  a  previous  pending
              operation to remove 3 nodes. Similarly, a request to add 2 nodes
              would override a previous pending operation to  remove  3  nodes
              and  vice versa. As Memcached cache nodes may now be provisioned
              in different Availability Zones with flexible cache node  place-
              ment,  a  request to add nodes does not automatically override a
              previous pending operation to add nodes. The customer can modify
              the  previous  pending operation to add more nodes or explicitly
              cancel the pending request and retry the new request. To  cancel
              pending  operations  to  modify  the  number of cache nodes in a
              cluster, use the ModifyCacheCluster request and  set  NumCacheN-
              odes  equal  to the number of cache nodes currently in the clus-
              ter.

       --cache-node-ids-to-remove (list)
          A list of cache node IDs to be removed. A node ID is a numeric iden-
          tifier  (0001,  0002,  etc.). This parameter is only valid when Num-
          CacheNodes is less than the existing number of cache nodes. The num-
          ber of cache node IDs supplied in this parameter must match the dif-
          ference between the existing number of cache nodes in the cluster or
          pending  cache  nodes,  whichever  is greater, and the value of Num-
          CacheNodes in the request.

          For example: If you have 3  active  cache  nodes,  7  pending  cache
          nodes, and the number of cache nodes in this ModifyCacheCluster call
          is 5, you must list 2 (7 - 5) cache node IDs to remove.

          (string)

       Syntax:

          "string" "string" ...

       --az-mode (string)
          Specifies whether the new nodes in this Memcached  cluster  are  all
          created  in  a  single  Availability Zone or created across multiple
          Availability Zones.

          Valid values: single-az | cross-az .

          This option is only supported for Memcached clusters.

          NOTE:
              You cannot specify single-az if the  Memcached  cluster  already
              has  cache nodes in different Availability Zones. If cross-az is
              specified, existing Memcached  nodes  remain  in  their  current
              Availability Zone.

              Only  newly  created nodes are located in different Availability
              Zones.

          Possible values:

          o single-az

          o cross-az

       --new-availability-zones (list)

          NOTE:
              This option is only supported on Memcached clusters.

          The list of Availability Zones where the new Memcached  cache  nodes
          are created.

          This  parameter  is  only valid when NumCacheNodes in the request is
          greater than the sum of the number of active  cache  nodes  and  the
          number of cache nodes pending creation (which may be zero). The num-
          ber of Availability Zones supplied in this list must match the cache
          nodes being added in this request.

          Scenarios:

          o Scenario 1: You have 3 active nodes and wish to add 2 nodes. Spec-
            ify NumCacheNodes=5 (3 + 2) and optionally specify two  Availabil-
            ity Zones for the two new nodes.

          o Scenario  2:  You have 3 active nodes and 2 nodes pending creation
            (from the scenario 1 call) and want to add 1  more  node.  Specify
            NumCacheNodes=6 ((3 + 2) + 1) and optionally specify an Availabil-
            ity Zone for the new node.

          o Scenario 3: You want to cancel  all  pending  operations.  Specify
            NumCacheNodes=3 to cancel all pending operations.

          The  Availability Zone placement of nodes pending creation cannot be
          modified. If you wish to cancel any nodes pending  creation,  add  0
          nodes by setting NumCacheNodes to the number of current nodes.

          If  cross-az  is specified, existing Memcached nodes remain in their
          current Availability Zone. Only newly created nodes can  be  located
          in  different Availability Zones. For guidance on how to move exist-
          ing Memcached nodes to different Availability Zones, see the  Avail-
          ability Zone Considerations section of Cache Node Considerations for
          Memcached .
              Impact of new add/remove requests upon pending requests

          o Scenario-1

            o Pending Action: Delete

            o New Request: Delete

            o Result: The new delete, pending or immediate, replaces the pend-
              ing delete.

          o Scenario-2

            o Pending Action: Delete

            o New Request: Create

            o Result: The new create, pending or immediate, replaces the pend-
              ing delete.

          o Scenario-3

            o Pending Action: Create

            o New Request: Delete

            o Result: The new delete, pending or immediate, replaces the pend-
              ing create.

          o Scenario-4

            o Pending Action: Create

            o New Request: Create

            o Result: The new create is added to the pending create.

            WARNING:
                Important:  If  the  new create request is Apply Immediately -
                Yes , all creates are performed immediately. If the new create
                request is Apply Immediately - No , all creates are pending.

          (string)

       Syntax:

          "string" "string" ...

       --cache-security-group-names (list)
          A  list  of cache security group names to authorize on this cluster.
          This change is asynchronously applied as soon as possible.

          You can use this parameter only with clusters that are created  out-
          side of an Amazon Virtual Private Cloud (Amazon VPC).

          Constraints:  Must contain no more than 255 alphanumeric characters.
          Must not be "Default".

          (string)

       Syntax:

          "string" "string" ...

       --security-group-ids (list)
          Specifies the VPC Security Groups associated with the cluster.

          This parameter can be used only with clusters that are created in an
          Amazon Virtual Private Cloud (Amazon VPC).

          (string)

       Syntax:

          "string" "string" ...

       --preferred-maintenance-window (string)
          Specifies  the  weekly  time  range  during which maintenance on the
          cluster is performed. It is specified  as  a  range  in  the  format
          ddd:hh24:mi-ddd:hh24:mi  (24H  Clock  UTC).  The minimum maintenance
          window is a 60 minute period.

          Valid values for ddd are:

          o sun

          o mon

          o tue

          o wed

          o thu

          o fri

          o sat

          Example: sun:23:00-mon:01:30

       --notification-topic-arn (string)
          The Amazon Resource Name (ARN) of the  Amazon  SNS  topic  to  which
          notifications are sent.

          NOTE:
              The Amazon SNS topic owner must be same as the cluster owner.

       --cache-parameter-group-name (string)
          The name of the cache parameter group to apply to this cluster. This
          change is asynchronously applied as soon as possible for  parameters
          when  the  ApplyImmediately  parameter is specified as true for this
          request.

       --notification-topic-status (string)
          The status of the Amazon SNS notification topic.  Notifications  are
          sent only if the status is active .

          Valid values: active | inactive

       --apply-immediately | --no-apply-immediately (boolean)
          If  true  ,  this parameter causes the modifications in this request
          and any pending modifications to be applied, asynchronously  and  as
          soon  as possible, regardless of the PreferredMaintenanceWindow set-
          ting for the cluster.

          If false , changes to the cluster are applied on  the  next  mainte-
          nance reboot, or the next failure reboot, whichever occurs first.

          WARNING:
              If  you  perform a ModifyCacheCluster before a pending modifica-
              tion is applied, the pending modification  is  replaced  by  the
              newer modification.

          Valid values: true | false

          Default: false

       --engine-version (string)
          The  upgraded  version  of  the  cache engine to be run on the cache
          nodes.
              Important: You can  upgrade  to  a  newer  engine  version  (see
              Selecting a Cache Engine and Version ), but you cannot downgrade
              to an earlier engine version. If you  want  to  use  an  earlier
              engine  version, you must delete the existing cluster and create
              it anew with the earlier engine version.

       --auto-minor-version-upgrade     |      --no-auto-minor-version-upgrade
       (boolean)
          If  you  are  running  Redis  engine  version 6.0 or later, set this
          parameter to yes if you want to opt-in to the next auto  minor  ver-
          sion  upgrade campaign. This parameter is disabled for previous ver-
          sions.

       --snapshot-retention-limit (integer)
          The number of days for which ElastiCache retains  automatic  cluster
          snapshots  before deleting them. For example, if you set SnapshotRe-
          tentionLimit to 5, a snapshot that was taken today is retained for 5
          days before being deleted.

          NOTE:
              If the value of SnapshotRetentionLimit is set to zero (0), back-
              ups are turned off.

       --snapshot-window (string)
          The daily time range (in UTC) during which ElastiCache begins taking
          a daily snapshot of your cluster.

       --cache-node-type (string)
          A valid cache node type that you want to scale this cluster up to.

       --auth-token (string)
          Reserved parameter. The password used to access a password protected
          server. This parameter must be specified with the  auth-token-update
          parameter. Password constraints:

          o Must be only printable ASCII characters

          o Must  be at least 16 characters and no more than 128 characters in
            length

          o Cannot contain any of the following characters: '/', '"', or  '@',
            '%'

          For more information, see AUTH password at AUTH .

       --auth-token-update-strategy (string)
          Specifies the strategy to use to update the AUTH token. This parame-
          ter must be specified with the auth-token parameter.  Possible  val-
          ues:

          o Rotate

          o Set

          For more information, see Authenticating Users with Redis AUTH

          Possible values:

          o SET

          o ROTATE

          o DELETE

       --log-delivery-configurations (list)
          Specifies the destination, format and type of the logs.

          (structure)
              Specifies the destination, format and type of the logs.

              LogType -> (string)
                 Refers to slow-log or engine-log..

              DestinationType -> (string)
                 Specify  either  cloudwatch-logs  or  kinesis-firehose as the
                 destination type.

              DestinationDetails -> (structure)
                 Configuration details of either a CloudWatch Logs destination
                 or Kinesis Data Firehose destination.

                 CloudWatchLogsDetails -> (structure)
                     The configuration details of the CloudWatch Logs destina-
                     tion.

                     LogGroup -> (string)
                        The name of the CloudWatch Logs log group.

                 KinesisFirehoseDetails -> (structure)
                     The configuration details of the  Kinesis  Data  Firehose
                     destination.

                     DeliveryStream -> (string)
                        The name of the Kinesis Data Firehose delivery stream.

              LogFormat -> (string)
                 Specifies either JSON or TEXT

              Enabled -> (boolean)
                 Specify if log delivery is enabled. Default true .

       Shorthand Syntax:

          LogType=string,DestinationType=string,DestinationDetails={CloudWatchLogsDetails={LogGroup=string},KinesisFirehoseDetails={DeliveryStream=string}},LogFormat=string,Enabled=boolean ...

       JSON Syntax:

          [
            {
              "LogType": "slow-log"|"engine-log",
              "DestinationType": "cloudwatch-logs"|"kinesis-firehose",
              "DestinationDetails": {
                "CloudWatchLogsDetails": {
                  "LogGroup": "string"
                },
                "KinesisFirehoseDetails": {
                  "DeliveryStream": "string"
                }
              },
              "LogFormat": "text"|"json",
              "Enabled": true|false
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To modify cache clusters

       The following modify-cache-cluster example modifies  the  settings  for
       the specified cluster.

          aws elasticache modify-cache-cluster \
              --cache-cluster-id "my-cluster" \
              --num-cache-nodes 1

       Output:

          {
              "CacheCluster": {
                  "CacheClusterId": "my-cluster",
                  "ClientDownloadLandingPage": "https://console.aws.amazon.com/elasticache/home#client-download:",
                  "CacheNodeType": "cache.m5.large",
                  "Engine": "redis",
                  "EngineVersion": "5.0.5",
                  "CacheClusterStatus": "available",
                  "NumCacheNodes": 1,
                  "PreferredAvailabilityZone": "us-west-2c",
                  "CacheClusterCreateTime": "2019-12-04T18:24:56.652Z",
                  "PreferredMaintenanceWindow": "sat:10:00-sat:11:00",
                  "PendingModifiedValues": {},
                  "CacheSecurityGroups": [],
                  "CacheParameterGroup": {
                      "CacheParameterGroupName": "default.redis5.0",
                      "ParameterApplyStatus": "in-sync",
                      "CacheNodeIdsToReboot": []
                  },
                  "CacheSubnetGroupName": "default",
                  "AutoMinorVersionUpgrade": true,
                  "SnapshotRetentionLimit": 0,
                  "SnapshotWindow": "07:00-08:00",
                  "TransitEncryptionEnabled": false,
                  "AtRestEncryptionEnabled": false
              }
          }

       For more information, see Modifying an ElastiCache Cluster in the Elas-
       ticache User Guide.

OUTPUT
       CacheCluster -> (structure)
          Contains all of the attributes of a specific cluster.

          CacheClusterId -> (string)
              The user-supplied identifier of the cluster. This identifier  is
              a unique key that identifies a cluster.

          ConfigurationEndpoint -> (structure)
              Represents  a Memcached cluster endpoint which can be used by an
              application to connect to any node in the cluster. The  configu-
              ration endpoint will always have .cfg in it.

              Example: mem-3.9dvc4r.cfg.usw2.cache.amazonaws.com:11211

              Address -> (string)
                 The DNS hostname of the cache node.

              Port -> (integer)
                 The port number that the cache engine is listening on.

          ClientDownloadLandingPage -> (string)
              The  URL of the web page where you can download the latest Elas-
              tiCache client library.

          CacheNodeType -> (string)
              The name of the compute and memory capacity node  type  for  the
              cluster.

              The following node types are supported by ElastiCache. Generally
              speaking, the current generation types provide more  memory  and
              computational power at lower cost when compared to their equiva-
              lent previous generation counterparts.

              o General purpose:

                o Current generation:   M6g node types:  (available  only  for
                  Redis  engine  version 5.0.6 onward and for Memcached engine
                  version 1.5.16 onward): cache.m6g.large , cache.m6g.xlarge ,
                  cache.m6g.2xlarge  , cache.m6g.4xlarge , cache.m6g.8xlarge ,
                  cache.m6g.12xlarge , cache.m6g.16xlarge

                NOTE:
                       For region availability, see Supported Node Types

                   M5  node  types:   cache.m5.large   ,   cache.m5.xlarge   ,
                   cache.m5.2xlarge  ,  cache.m5.4xlarge , cache.m5.12xlarge ,
                   cache.m5.24xlarge     M4  node  types:   cache.m4.large   ,
                   cache.m4.xlarge  ,  cache.m4.2xlarge  ,  cache.m4.4xlarge ,
                   cache.m4.10xlarge    T4g node  types  (available  only  for
                   Redis  engine  version  6.0 onward and for Memcached engine
                   version 1.5.16 onward): cache.t4g.micro , cache.t4g.small ,
                   cache.t4g.medium      T3   node  types:   cache.t3.micro  ,
                   cache.t3.small  ,   cache.t3.medium      T2   node   types:
                   cache.t2.micro , cache.t2.small , cache.t2.medium

                o Previous  generation:  (not  recommended)   T1  node  types:
                  cache.t1.micro      M1   node   types:    cache.m1.small   ,
                  cache.m1.medium  ,  cache.m1.large  ,  cache.m1.xlarge    M3
                  node   types:    cache.m3.medium    ,    cache.m3.large    ,
                  cache.m3.xlarge , cache.m3.2xlarge

              o Compute optimized:

                o Previous  generation:  (not  recommended)   C1  node  types:
                  cache.c1.xlarge

              o Memory optimized with data tiering:

                o Current generation:   R6gd node types  (available  only  for
                  Redis  engine  version  6.2  onward).   cache.r6gd.xlarge  ,
                  cache.r6gd.2xlarge , cache.r6gd.4xlarge , cache.r6gd.8xlarge
                  , cache.r6gd.12xlarge , cache.r6gd.16xlarge

              o Memory optimized:

                o Current  generation:    R6g  node  types (available only for
                  Redis engine version 5.0.6 onward and for  Memcached  engine
                  version  1.5.16 onward).  cache.r6g.large , cache.r6g.xlarge
                  , cache.r6g.2xlarge , cache.r6g.4xlarge ,  cache.r6g.8xlarge
                  , cache.r6g.12xlarge , cache.r6g.16xlarge

                NOTE:
                       For region availability, see Supported Node Types

                   R5   node   types:    cache.r5.large  ,  cache.r5.xlarge  ,
                   cache.r5.2xlarge , cache.r5.4xlarge ,  cache.r5.12xlarge  ,
                   cache.r5.24xlarge      R4  node  types:   cache.r4.large  ,
                   cache.r4.xlarge ,  cache.r4.2xlarge  ,  cache.r4.4xlarge  ,
                   cache.r4.8xlarge , cache.r4.16xlarge

                o Previous  generation:  (not  recommended)   M2  node  types:
                  cache.m2.xlarge , cache.m2.2xlarge , cache.m2.4xlarge     R3
                  node    types:     cache.r3.large    ,   cache.r3.xlarge   ,
                  cache.r3.2xlarge , cache.r3.4xlarge , cache.r3.8xlarge
                 Additional node type info

              o All current generation instance types are  created  in  Amazon
                VPC by default.

              o Redis  append-only  files (AOF) are not supported for T1 or T2
                instances.

              o Redis Multi-AZ with automatic failover is not supported on  T1
                instances.

              o Redis  configuration  variables appendonly and appendfsync are
                not supported on Redis version 2.8.22 and later.

          Engine -> (string)
              The name of the cache engine (memcached or redis )  to  be  used
              for this cluster.

          EngineVersion -> (string)
              The version of the cache engine that is used in this cluster.

          CacheClusterStatus -> (string)
              The  current state of this cluster, one of the following values:
              available , creating , deleted , deleting , incompatible-network
              ,  modifying  ,  rebooting  cluster  nodes , restore-failed , or
              snapshotting .

          NumCacheNodes -> (integer)
              The number of cache nodes in the cluster.

              For clusters running Redis, this value must be 1.  For  clusters
              running Memcached, this value must be between 1 and 40.

          PreferredAvailabilityZone -> (string)
              The  name  of  the  Availability  Zone  in  which the cluster is
              located or "Multiple" if the cache nodes are located in  differ-
              ent Availability Zones.

          PreferredOutpostArn -> (string)
              The outpost ARN in which the cache cluster is created.

          CacheClusterCreateTime -> (timestamp)
              The date and time when the cluster was created.

          PreferredMaintenanceWindow -> (string)
              Specifies  the weekly time range during which maintenance on the
              cluster is performed. It is specified as a range in  the  format
              ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
              window is a 60 minute period.

              Valid values for ddd are:

              o sun

              o mon

              o tue

              o wed

              o thu

              o fri

              o sat

              Example: sun:23:00-mon:01:30

          PendingModifiedValues -> (structure)
              A group of settings that are  applied  to  the  cluster  in  the
              future, or that are currently being applied.

              NumCacheNodes -> (integer)
                 The new number of cache nodes for the cluster.

                 For  clusters  running Redis, this value must be 1. For clus-
                 ters running Memcached, this value must be between 1 and  40.

              CacheNodeIdsToRemove -> (list)
                 A  list  of cache node IDs that are being removed (or will be
                 removed) from the cluster. A node ID  is  a  4-digit  numeric
                 identifier (0001, 0002, etc.).

                 (string)

              EngineVersion -> (string)
                 The new cache engine version that the cluster runs.

              CacheNodeType -> (string)
                 The cache node type that this cluster or replication group is
                 scaled to.

              AuthTokenStatus -> (string)
                 The auth token status

              LogDeliveryConfigurations -> (list)
                 The log delivery configurations being modified

                 (structure)
                     The log delivery configurations being modified

                     LogType -> (string)
                        Refers to slow-log or engine-log..

                     DestinationType -> (string)
                        Returns the destination type, either  CloudWatch  Logs
                        or Kinesis Data Firehose.

                     DestinationDetails -> (structure)
                        Configuration details of either a CloudWatch Logs des-
                        tination or Kinesis Data Firehose destination.

                        CloudWatchLogsDetails -> (structure)
                            The configuration details of the  CloudWatch  Logs
                            destination.

                            LogGroup -> (string)
                               The name of the CloudWatch Logs log group.

                        KinesisFirehoseDetails -> (structure)
                            The  configuration  details  of  the  Kinesis Data
                            Firehose destination.

                            DeliveryStream -> (string)
                               The name of the Kinesis Data Firehose  delivery
                               stream.

                     LogFormat -> (string)
                        Returns the log format, either JSON or TEXT

          NotificationConfiguration -> (structure)
              Describes a notification topic and its status. Notification top-
              ics are used for publishing ElastiCache  events  to  subscribers
              using Amazon Simple Notification Service (SNS).

              TopicArn -> (string)
                 The Amazon Resource Name (ARN) that identifies the topic.

              TopicStatus -> (string)
                 The current state of the topic.

          CacheSecurityGroups -> (list)
              A  list  of  cache security group elements, composed of name and
              status sub-elements.

              (structure)
                 Represents a cluster's status within a particular cache secu-
                 rity group.

                 CacheSecurityGroupName -> (string)
                     The name of the cache security group.

                 Status -> (string)
                     The  membership  status  in the cache security group. The
                     status changes when a cache security group  is  modified,
                     or  when  the cache security groups assigned to a cluster
                     are modified.

          CacheParameterGroup -> (structure)
              Status of the cache parameter group.

              CacheParameterGroupName -> (string)
                 The name of the cache parameter group.

              ParameterApplyStatus -> (string)
                 The status of parameter updates.

              CacheNodeIdsToReboot -> (list)
                 A list of the cache node IDs which need to  be  rebooted  for
                 parameter changes to be applied. A node ID is a numeric iden-
                 tifier (0001, 0002, etc.).

                 (string)

          CacheSubnetGroupName -> (string)
              The name of the cache subnet group associated with the  cluster.

          CacheNodes -> (list)
              A list of cache nodes that are members of the cluster.

              (structure)
                 Represents  an  individual  cache node within a cluster. Each
                 cache node runs its own  instance  of  the  cluster's  proto-
                 col-compliant caching software - either Memcached or Redis.

                 The following node types are supported by ElastiCache. Gener-
                 ally speaking, the current generation types provide more mem-
                 ory  and  computational  power at lower cost when compared to
                 their equivalent previous generation counterparts.

                 o General purpose:

                   o Current generation:   M6g node types: (available only for
                     Redis  engine  version  5.0.6  onward  and  for Memcached
                     engine  version   1.5.16   onward):   cache.m6g.large   ,
                     cache.m6g.xlarge  , cache.m6g.2xlarge , cache.m6g.4xlarge
                     ,    cache.m6g.8xlarge     ,     cache.m6g.12xlarge     ,
                     cache.m6g.16xlarge

                   NOTE:
                          For region availability, see Supported Node Types

                       M5  node  types:   cache.m5.large  ,  cache.m5.xlarge ,
                       cache.m5.2xlarge , cache.m5.4xlarge , cache.m5.12xlarge
                       , cache.m5.24xlarge    M4 node types:  cache.m4.large ,
                       cache.m4.xlarge , cache.m4.2xlarge , cache.m4.4xlarge ,
                       cache.m4.10xlarge    T4g node types (available only for
                       Redis engine  version  6.0  onward  and  for  Memcached
                       engine   version   1.5.16  onward):  cache.t4g.micro  ,
                       cache.t4g.small , cache.t4g.medium     T3  node  types:
                       cache.t3.micro , cache.t3.small , cache.t3.medium    T2
                       node  types:    cache.t2.micro   ,   cache.t2.small   ,
                       cache.t2.medium

                   o Previous  generation:  (not  recommended)  T1 node types:
                     cache.t1.micro     M1  node  types:    cache.m1.small   ,
                     cache.m1.medium  , cache.m1.large , cache.m1.xlarge    M3
                     node   types:    cache.m3.medium   ,   cache.m3.large   ,
                     cache.m3.xlarge , cache.m3.2xlarge

                 o Compute optimized:

                   o Previous  generation:  (not  recommended)  C1 node types:
                     cache.c1.xlarge

                 o Memory optimized with data tiering:

                   o Current generation:   R6gd node types (available only for
                     Redis  engine  version  6.2 onward).  cache.r6gd.xlarge ,
                     cache.r6gd.2xlarge      ,      cache.r6gd.4xlarge       ,
                     cache.r6gd.8xlarge      ,      cache.r6gd.12xlarge      ,
                     cache.r6gd.16xlarge

                 o Memory optimized:

                   o Current generation:   R6g node types (available only  for
                     Redis  engine  version  5.0.6  onward  and  for Memcached
                     engine  version  1.5.16   onward).    cache.r6g.large   ,
                     cache.r6g.xlarge  , cache.r6g.2xlarge , cache.r6g.4xlarge
                     ,    cache.r6g.8xlarge     ,     cache.r6g.12xlarge     ,
                     cache.r6g.16xlarge

                   NOTE:
                          For region availability, see Supported Node Types

                       R5  node  types:   cache.r5.large  ,  cache.r5.xlarge ,
                       cache.r5.2xlarge , cache.r5.4xlarge , cache.r5.12xlarge
                       , cache.r5.24xlarge    R4 node types:  cache.r4.large ,
                       cache.r4.xlarge , cache.r4.2xlarge , cache.r4.4xlarge ,
                       cache.r4.8xlarge , cache.r4.16xlarge

                   o Previous  generation:  (not  recommended)  M2 node types:
                     cache.m2.xlarge  ,  cache.m2.2xlarge  ,  cache.m2.4xlarge
                     R3   node  types:   cache.r3.large  ,  cache.r3.xlarge  ,
                     cache.r3.2xlarge , cache.r3.4xlarge , cache.r3.8xlarge
                     Additional node type info

                 o All current generation instance types are created in Amazon
                   VPC by default.

                 o Redis  append-only  files (AOF) are not supported for T1 or
                   T2 instances.

                 o Redis Multi-AZ with automatic failover is not supported  on
                   T1 instances.

                 o Redis  configuration  variables  appendonly and appendfsync
                   are not supported on Redis version 2.8.22 and later.

                 CacheNodeId -> (string)
                     The cache node identifier. A node ID is a numeric identi-
                     fier  (0001,  0002,  etc.). The combination of cluster ID
                     and node ID uniquely identifies every cache node used  in
                     a customer's Amazon account.

                 CacheNodeStatus -> (string)
                     The  current state of this cache node, one of the follow-
                     ing values: available , creating , rebooting , or  delet-
                     ing .

                 CacheNodeCreateTime -> (timestamp)
                     The date and time when the cache node was created.

                 Endpoint -> (structure)
                     The hostname for connecting to this cache node.

                     Address -> (string)
                        The DNS hostname of the cache node.

                     Port -> (integer)
                        The port number that the cache engine is listening on.

                 ParameterGroupStatus -> (string)
                     The status of the parameter group applied to  this  cache
                     node.

                 SourceCacheNodeId -> (string)
                     The  ID  of  the  primary node to which this read replica
                     node is synchronized. If this field is empty,  this  node
                     is not associated with a primary cluster.

                 CustomerAvailabilityZone -> (string)
                     The Availability Zone where this node was created and now
                     resides.

                 CustomerOutpostArn -> (string)
                     The customer outpost ARN of the cache node.

          AutoMinorVersionUpgrade -> (boolean)
              If you are running Redis engine version 6.0 or later,  set  this
              parameter  to  yes  if you want to opt-in to the next auto minor
              version upgrade campaign. This parameter is disabled for  previ-
              ous versions.

          SecurityGroups -> (list)
              A list of VPC Security Groups associated with the cluster.

              (structure)
                 Represents a single cache security group and its status.

                 SecurityGroupId -> (string)
                     The identifier of the cache security group.

                 Status -> (string)
                     The  status  of  the cache security group membership. The
                     status changes whenever a cache security group  is  modi-
                     fied,  or  when  the  cache security groups assigned to a
                     cluster are modified.

          ReplicationGroupId -> (string)
              The replication group to which this  cluster  belongs.  If  this
              field  is empty, the cluster is not associated with any replica-
              tion group.

          SnapshotRetentionLimit -> (integer)
              The number of days for which ElastiCache retains automatic clus-
              ter  snapshots  before  deleting  them.  For example, if you set
              SnapshotRetentionLimit to 5, a snapshot that was taken today  is
              retained for 5 days before being deleted.

              WARNING:
                 If  the  value  of SnapshotRetentionLimit is set to zero (0),
                 backups are turned off.

          SnapshotWindow -> (string)
              The daily time range (in UTC) during  which  ElastiCache  begins
              taking a daily snapshot of your cluster.

              Example: 05:00-09:00

          AuthTokenEnabled -> (boolean)
              A  flag  that enables using an AuthToken (password) when issuing
              Redis commands.

              Default: false

          AuthTokenLastModifiedDate -> (timestamp)
              The date the auth token was last modified

          TransitEncryptionEnabled -> (boolean)
              A flag that enables in-transit encryption when set to true .

              You cannot modify the value  of  TransitEncryptionEnabled  after
              the  cluster  is  created.  To enable in-transit encryption on a
              cluster you must set TransitEncryptionEnabled to true  when  you
              create a cluster.
                 Required: Only available when creating a replication group in
                 an Amazon VPC using redis version 3.2.6 , 4.x or later.

              Default: false

          AtRestEncryptionEnabled -> (boolean)
              A flag that enables encryption at-rest when set to true .

              You cannot modify the value of AtRestEncryptionEnabled after the
              cluster  is  created.  To enable at-rest encryption on a cluster
              you must set AtRestEncryptionEnabled to true when you  create  a
              cluster.
                 Required: Only available when creating a replication group in
                 an Amazon VPC using redis version 3.2.6 , 4.x or later.

              Default: false

          ARN -> (string)
              The ARN (Amazon Resource Name) of the cache cluster.

          ReplicationGroupLogDeliveryEnabled -> (boolean)
              A boolean value indicating whether log delivery is  enabled  for
              the replication group.

          LogDeliveryConfigurations -> (list)
              Returns the destination, format and type of the logs.

              (structure)
                 Returns the destination, format and type of the logs.

                 LogType -> (string)
                     Refers to slow-log or engine-log.

                 DestinationType -> (string)
                     Returns  the  destination type, either cloudwatch-logs or
                     kinesis-firehose .

                 DestinationDetails -> (structure)
                     Configuration details of either a CloudWatch Logs  desti-
                     nation or Kinesis Data Firehose destination.

                     CloudWatchLogsDetails -> (structure)
                        The  configuration details of the CloudWatch Logs des-
                        tination.

                        LogGroup -> (string)
                            The name of the CloudWatch Logs log group.

                     KinesisFirehoseDetails -> (structure)
                        The configuration details of the Kinesis Data Firehose
                        destination.

                        DeliveryStream -> (string)
                            The  name  of  the  Kinesis Data Firehose delivery
                            stream.

                 LogFormat -> (string)
                     Returns the log format, either JSON or TEXT.

                 Status -> (string)
                     Returns the log delivery configuration status. Values are
                     one of enabling | disabling | modifying | active | error

                 Message -> (string)
                     Returns  an error message for the log delivery configura-
                     tion.



                                                        MODIFY-CACHE-CLUSTER()
