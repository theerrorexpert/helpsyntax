DESCRIBE-USERS()                                              DESCRIBE-USERS()



NAME
       describe-users -

DESCRIPTION
       Returns a list of users.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       describe-users  is  a  paginated  operation.  Multiple API calls may be
       issued in order to retrieve the entire data set  of  results.  You  can
       disable pagination by providing the --no-paginate argument.  When using
       --output text and the --query argument on  a  paginated  response,  the
       --query  argument  must  extract data from the results of the following
       query expressions: Users

SYNOPSIS
            describe-users
          [--engine <value>]
          [--user-id <value>]
          [--filters <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --engine (string)
          The Redis engine.

       --user-id (string)
          The ID of the user.

       --filters (list)
          Filter to determine the list of User IDs to return.

          (structure)
              Used to streamline results of a search  based  on  the  property
              being filtered.

              Name -> (string)
                 The property being filtered. For example, UserId.

              Values -> (list)
                 The property values to filter on. For example, "user-123".

                 (string)

       Shorthand Syntax:

          Name=string,Values=string,string ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Values": ["string", ...]
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size  results  in  more  calls to the AWS service,
          retrieving fewer items in each call. This can help prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To describe users

       The following describe-users example returns a list of users.

          aws elasticache describe-users

       Output:

          {
              "Users": [
                  {
                      "UserId": "default",
                      "UserName": "default",
                      "Status": "active",
                      "Engine": "redis",
                      "AccessString": "on ~* +@all",
                      "UserGroupIds": [
                          "myusergroup"
                      ],
                      "Authentication": {
                          "Type": "no-password"
                      },
                      "ARN": "arn:aws:elasticache:us-west-2:xxxxxxxxxx52:user:default"
                  },
                  {
                      "UserId": "user1",
                      "UserName": "myUser",
                      "Status": "active",
                      "Engine": "redis",
                      "AccessString": "on ~* +@all",
                      "UserGroupIds": [],
                      "Authentication": {
                          "Type": "password",
                          "PasswordCount": 1
                      },
                      "ARN": "arn:aws:elasticache:us-west-2:xxxxxxxxxx52:user:user1"
                  },
                  {
                      "UserId": "user2",
                      "UserName": "myUser",
                      "Status": "active",
                      "Engine": "redis",
                      "AccessString": "on ~app::* -@all +@read +@hash +@bitmap +@geo -setbit -bitfield -hset -hsetnx -hmset -hincrby -hincrbyfloat -hdel -bitop -geoadd -georadius -georadiusbymember",
                      "UserGroupIds": [],
                      "Authentication": {
                          "Type": "password",
                          "PasswordCount": 1
                      },
                      "ARN": "arn:aws:elasticache:us-west-2:xxxxxxxxxx52:user:user2"
                  }
              ]
          }

       For more information, see Authenticating Users with  Role-Based  Access
       Control (RBAC) in the Elasticache User Guide.

OUTPUT
       Users -> (list)
          A list of users.

          (structure)
              UserId -> (string)
                 The ID of the user.

              UserName -> (string)
                 The username of the user.

              Status -> (string)
                 Indicates  the  user  status. Can be "active", "modifying" or
                 "deleting".

              Engine -> (string)
                 The current supported value is Redis.

              MinimumEngineVersion -> (string)
                 The minimum engine version required, which is Redis 6.0

              AccessString -> (string)
                 Access permissions string used for this user.

              UserGroupIds -> (list)
                 Returns a list of the user group IDs the user belongs to.

                 (string)

              Authentication -> (structure)
                 Denotes whether the user requires a password to authenticate.

                 Type -> (string)
                     Indicates whether the user requires a password to authen-
                     ticate.

                 PasswordCount -> (integer)
                     The number of passwords belonging to the user. The  maxi-
                     mum is two.

              ARN -> (string)
                 The Amazon Resource Name (ARN) of the user.

       Marker -> (string)
          An  optional  marker  returned from a prior request. Use this marker
          for pagination of results from this operation. If this parameter  is
          specified,  the response includes only records beyond the marker, up
          to the value specified by MaxRecords. >



                                                              DESCRIBE-USERS()
