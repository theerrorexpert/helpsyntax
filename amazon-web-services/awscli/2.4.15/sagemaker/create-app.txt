CREATE-APP()                                                      CREATE-APP()



NAME
       create-app -

DESCRIPTION
       Creates a running app for the specified UserProfile. Supported apps are
       JupyterServer and  KernelGateway  .  This  operation  is  automatically
       invoked  by  Amazon  SageMaker  Studio  upon  access  to the associated
       Domain, and when new kernel configurations are selected by the user.  A
       user may have multiple Apps active simultaneously.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-app
          --domain-id <value>
          --user-profile-name <value>
          --app-type <value>
          --app-name <value>
          [--tags <value>]
          [--resource-spec <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --domain-id (string)
          The domain ID.

       --user-profile-name (string)
          The user profile name.

       --app-type (string)
          The  type of app. Supported apps are JupyterServer and KernelGateway
          . TensorBoard is not supported.

          Possible values:

          o JupyterServer

          o KernelGateway

          o TensorBoard

          o RStudioServerPro

          o RSessionGateway

       --app-name (string)
          The name of the app.

       --tags (list)
          Each tag consists of a key and an optional value. Tag keys  must  be
          unique per resource.

          (structure)
              A  tag object that consists of a key and an optional value, used
              to manage metadata for SageMaker Amazon Web Services  resources.

              You  can add tags to notebook instances, training jobs, hyperpa-
              rameter tuning jobs,  batch  transform  jobs,  models,  labeling
              jobs,  work  teams,  endpoint configurations, and endpoints. For
              more information on adding  tags  to  SageMaker  resources,  see
              AddTags .

              For  more information on adding metadata to your Amazon Web Ser-
              vices resources with tagging, see Tagging  Amazon  Web  Services
              resources . For advice on best practices for managing Amazon Web
              Services resources with tagging,  see  Tagging  Best  Practices:
              Implement  an  Effective  Amazon  Web  Services Resource Tagging
              Strategy .

              Key -> (string)
                 The tag key. Tag keys must be unique per resource.

              Value -> (string)
                 The tag value.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --resource-spec (structure)
          The instance type and the Amazon Resource Name (ARN)  of  the  Sage-
          Maker image created on the instance.

          SageMakerImageArn -> (string)
              The  ARN  of  the SageMaker image that the image version belongs
              to.

          SageMakerImageVersionArn -> (string)
              The ARN of the image version created on the instance.

          InstanceType -> (string)
              The instance type that the image version runs on.

          LifecycleConfigArn -> (string)
              The Amazon Resource Name (ARN) of  the  Lifecycle  Configuration
              attached to the Resource.

       Shorthand Syntax:

          SageMakerImageArn=string,SageMakerImageVersionArn=string,InstanceType=string,LifecycleConfigArn=string

       JSON Syntax:

          {
            "SageMakerImageArn": "string",
            "SageMakerImageVersionArn": "string",
            "InstanceType": "system"|"ml.t3.micro"|"ml.t3.small"|"ml.t3.medium"|"ml.t3.large"|"ml.t3.xlarge"|"ml.t3.2xlarge"|"ml.m5.large"|"ml.m5.xlarge"|"ml.m5.2xlarge"|"ml.m5.4xlarge"|"ml.m5.8xlarge"|"ml.m5.12xlarge"|"ml.m5.16xlarge"|"ml.m5.24xlarge"|"ml.m5d.large"|"ml.m5d.xlarge"|"ml.m5d.2xlarge"|"ml.m5d.4xlarge"|"ml.m5d.8xlarge"|"ml.m5d.12xlarge"|"ml.m5d.16xlarge"|"ml.m5d.24xlarge"|"ml.c5.large"|"ml.c5.xlarge"|"ml.c5.2xlarge"|"ml.c5.4xlarge"|"ml.c5.9xlarge"|"ml.c5.12xlarge"|"ml.c5.18xlarge"|"ml.c5.24xlarge"|"ml.p3.2xlarge"|"ml.p3.8xlarge"|"ml.p3.16xlarge"|"ml.p3dn.24xlarge"|"ml.g4dn.xlarge"|"ml.g4dn.2xlarge"|"ml.g4dn.4xlarge"|"ml.g4dn.8xlarge"|"ml.g4dn.12xlarge"|"ml.g4dn.16xlarge"|"ml.r5.large"|"ml.r5.xlarge"|"ml.r5.2xlarge"|"ml.r5.4xlarge"|"ml.r5.8xlarge"|"ml.r5.12xlarge"|"ml.r5.16xlarge"|"ml.r5.24xlarge",
            "LifecycleConfigArn": "string"
          }

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       AppArn -> (string)
          The Amazon Resource Name (ARN) of the app.



                                                                  CREATE-APP()
