CREATE-STUDIO-LIFECYCLE-CONFIG()              CREATE-STUDIO-LIFECYCLE-CONFIG()



NAME
       create-studio-lifecycle-config -

DESCRIPTION
       Creates a new Studio Lifecycle Configuration.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-studio-lifecycle-config
          --studio-lifecycle-config-name <value>
          --studio-lifecycle-config-content <value>
          --studio-lifecycle-config-app-type <value>
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --studio-lifecycle-config-name (string)
          The name of the Studio Lifecycle Configuration to create.

       --studio-lifecycle-config-content (string)
          The content of your Studio Lifecycle Configuration script. This con-
          tent must be base64 encoded.

       --studio-lifecycle-config-app-type (string)
          The App type that the Lifecycle Configuration is attached to.

          Possible values:

          o JupyterServer

          o KernelGateway

       --tags (list)
          Tags to be associated with the  Lifecycle  Configuration.  Each  tag
          consists of a key and an optional value. Tag keys must be unique per
          resource. Tags are searchable using the Search API.

          (structure)
              A tag object that consists of a key and an optional value,  used
              to  manage metadata for SageMaker Amazon Web Services resources.

              You can add tags to notebook instances, training jobs,  hyperpa-
              rameter  tuning  jobs,  batch  transform  jobs, models, labeling
              jobs, work teams, endpoint configurations,  and  endpoints.  For
              more  information  on  adding  tags  to SageMaker resources, see
              AddTags .

              For more information on adding metadata to your Amazon Web  Ser-
              vices  resources  with  tagging, see Tagging Amazon Web Services
              resources . For advice on best practices for managing Amazon Web
              Services  resources  with  tagging,  see Tagging Best Practices:
              Implement an Effective  Amazon  Web  Services  Resource  Tagging
              Strategy .

              Key -> (string)
                 The tag key. Tag keys must be unique per resource.

              Value -> (string)
                 The tag value.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       StudioLifecycleConfigArn -> (string)
          The ARN of your created Lifecycle Configuration.



                                              CREATE-STUDIO-LIFECYCLE-CONFIG()
