CREATE-MODEL-PACKAGE()                                  CREATE-MODEL-PACKAGE()



NAME
       create-model-package -

DESCRIPTION
       Creates  a  model  package  that you can use to create Amazon SageMaker
       models or list on Amazon Web Services Marketplace, or a versioned model
       that  is  part of a model group. Buyers can subscribe to model packages
       listed on Amazon Web Services Marketplace to create  models  in  Amazon
       SageMaker.

       To  create  a  model package by specifying a Docker container that con-
       tains your inference code and the Amazon  S3  location  of  your  model
       artifacts,  provide  values  for  InferenceSpecification  . To create a
       model from an algorithm resource that you created or subscribed  to  in
       Amazon  Web  Services Marketplace, provide a value for SourceAlgorithm-
       Specification .

       NOTE:
          There are two types of model packages:

          o Versioned - a model that is part of a model  group  in  the  model
            registry.

          o Unversioned - a model package that is not part of a model group.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-model-package
          [--model-package-name <value>]
          [--model-package-group-name <value>]
          [--model-package-description <value>]
          [--inference-specification <value>]
          [--validation-specification <value>]
          [--source-algorithm-specification <value>]
          [--certify-for-marketplace | --no-certify-for-marketplace]
          [--tags <value>]
          [--model-approval-status <value>]
          [--metadata-properties <value>]
          [--model-metrics <value>]
          [--client-token <value>]
          [--customer-metadata-properties <value>]
          [--drift-check-baselines <value>]
          [--domain <value>]
          [--task <value>]
          [--sample-payload-url <value>]
          [--additional-inference-specifications <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --model-package-name (string)
          The  name  of  the model package. The name must have 1 to 63 charac-
          ters. Valid characters are a-z, A-Z, 0-9, and - (hyphen).

          This parameter is required for unversioned models. It is not  appli-
          cable to versioned models.

       --model-package-group-name (string)
          The  name  or  Amazon Resource Name (ARN) of the model package group
          that this model version belongs to.

          This parameter is required for versioned models, and does not  apply
          to unversioned models.

       --model-package-description (string)
          A description of the model package.

       --inference-specification (structure)
          Specifies  details  about inference jobs that can be run with models
          based on this model package, including the following:

          o The Amazon ECR paths of containers that contain the inference code
            and model artifacts.

          o The  instance  types that the model package supports for transform
            jobs and real-time endpoints used for inference.

          o The input and output content formats that the model  package  sup-
            ports for inference.

          Containers -> (list)
              The  Amazon  ECR registry path of the Docker image that contains
              the inference code.

              (structure)
                 Describes the Docker container for the model package.

                 ContainerHostname -> (string)
                     The DNS host name for the Docker container.

                 Image -> (string)
                     The Amazon EC2 Container Registry (Amazon ECR) path where
                     inference code is stored.

                     If  you are using your own custom algorithm instead of an
                     algorithm provided by  Amazon  SageMaker,  the  inference
                     code  must  meet  Amazon  SageMaker  requirements. Amazon
                     SageMaker  supports  both  registry/repository[:tag]  and
                     registry/repository[@digest] image path formats. For more
                     information, see Using Your Own  Algorithms  with  Amazon
                     SageMaker .

                 ImageDigest -> (string)
                     An MD5 hash of the training algorithm that identifies the
                     Docker image used for training.

                 ModelDataUrl -> (string)
                     The Amazon S3  path  where  the  model  artifacts,  which
                     result  from  model  training, are stored. This path must
                     point to a single gzip compressed  tar  archive  (.tar.gz
                     suffix).

                     NOTE:
                        The model artifacts must be in an S3 bucket that is in
                        the same region as the model package.

                 ProductId -> (string)
                     The Amazon Web Services Marketplace  product  ID  of  the
                     model package.

                 Environment -> (map)
                     The environment variables to set in the Docker container.
                     Each key and value in the Environment  string  to  string
                     map  can  have  length of up to 1024. We support up to 16
                     entries in the map.

                     key -> (string)

                     value -> (string)

                 ModelInput -> (structure)
                     A structure with Model Input details.

                     DataInputConfig -> (string)
                        The input configuration object for the model.

                 Framework -> (string)
                     The machine learning framework of the model package  con-
                     tainer image.

                 FrameworkVersion -> (string)
                     The  framework  version  of  the  Model Package Container
                     Image.

                 NearestModelName -> (string)
                     The name of a pre-trained machine learning benchmarked by
                     Amazon SageMaker Inference Recommender model that matches
                     your model. You can find a list of benchmarked models  by
                     calling ListModelMetadata .

          SupportedTransformInstanceTypes -> (list)
              A  list  of the instance types on which a transformation job can
              be run or on which an endpoint can be deployed.

              This parameter is required for unversioned models, and  optional
              for versioned models.

              (string)

          SupportedRealtimeInferenceInstanceTypes -> (list)
              A  list  of  the instance types that are used to generate infer-
              ences in real-time.

              This parameter is required for unversioned models, and  optional
              for versioned models.

              (string)

          SupportedContentTypes -> (list)
              The supported MIME types for the input data.

              (string)

          SupportedResponseMIMETypes -> (list)
              The supported MIME types for the output data.

              (string)

       JSON Syntax:

          {
            "Containers": [
              {
                "ContainerHostname": "string",
                "Image": "string",
                "ImageDigest": "string",
                "ModelDataUrl": "string",
                "ProductId": "string",
                "Environment": {"string": "string"
                  ...},
                "ModelInput": {
                  "DataInputConfig": "string"
                },
                "Framework": "string",
                "FrameworkVersion": "string",
                "NearestModelName": "string"
              }
              ...
            ],
            "SupportedTransformInstanceTypes": ["ml.m4.xlarge"|"ml.m4.2xlarge"|"ml.m4.4xlarge"|"ml.m4.10xlarge"|"ml.m4.16xlarge"|"ml.c4.xlarge"|"ml.c4.2xlarge"|"ml.c4.4xlarge"|"ml.c4.8xlarge"|"ml.p2.xlarge"|"ml.p2.8xlarge"|"ml.p2.16xlarge"|"ml.p3.2xlarge"|"ml.p3.8xlarge"|"ml.p3.16xlarge"|"ml.c5.xlarge"|"ml.c5.2xlarge"|"ml.c5.4xlarge"|"ml.c5.9xlarge"|"ml.c5.18xlarge"|"ml.m5.large"|"ml.m5.xlarge"|"ml.m5.2xlarge"|"ml.m5.4xlarge"|"ml.m5.12xlarge"|"ml.m5.24xlarge"|"ml.g4dn.xlarge"|"ml.g4dn.2xlarge"|"ml.g4dn.4xlarge"|"ml.g4dn.8xlarge"|"ml.g4dn.12xlarge"|"ml.g4dn.16xlarge", ...],
            "SupportedRealtimeInferenceInstanceTypes": ["ml.t2.medium"|"ml.t2.large"|"ml.t2.xlarge"|"ml.t2.2xlarge"|"ml.m4.xlarge"|"ml.m4.2xlarge"|"ml.m4.4xlarge"|"ml.m4.10xlarge"|"ml.m4.16xlarge"|"ml.m5.large"|"ml.m5.xlarge"|"ml.m5.2xlarge"|"ml.m5.4xlarge"|"ml.m5.12xlarge"|"ml.m5.24xlarge"|"ml.m5d.large"|"ml.m5d.xlarge"|"ml.m5d.2xlarge"|"ml.m5d.4xlarge"|"ml.m5d.12xlarge"|"ml.m5d.24xlarge"|"ml.c4.large"|"ml.c4.xlarge"|"ml.c4.2xlarge"|"ml.c4.4xlarge"|"ml.c4.8xlarge"|"ml.p2.xlarge"|"ml.p2.8xlarge"|"ml.p2.16xlarge"|"ml.p3.2xlarge"|"ml.p3.8xlarge"|"ml.p3.16xlarge"|"ml.c5.large"|"ml.c5.xlarge"|"ml.c5.2xlarge"|"ml.c5.4xlarge"|"ml.c5.9xlarge"|"ml.c5.18xlarge"|"ml.c5d.large"|"ml.c5d.xlarge"|"ml.c5d.2xlarge"|"ml.c5d.4xlarge"|"ml.c5d.9xlarge"|"ml.c5d.18xlarge"|"ml.g4dn.xlarge"|"ml.g4dn.2xlarge"|"ml.g4dn.4xlarge"|"ml.g4dn.8xlarge"|"ml.g4dn.12xlarge"|"ml.g4dn.16xlarge"|"ml.r5.large"|"ml.r5.xlarge"|"ml.r5.2xlarge"|"ml.r5.4xlarge"|"ml.r5.12xlarge"|"ml.r5.24xlarge"|"ml.r5d.large"|"ml.r5d.xlarge"|"ml.r5d.2xlarge"|"ml.r5d.4xlarge"|"ml.r5d.12xlarge"|"ml.r5d.24xlarge"|"ml.inf1.xlarge"|"ml.inf1.2xlarge"|"ml.inf1.6xlarge"|"ml.inf1.24xlarge", ...],
            "SupportedContentTypes": ["string", ...],
            "SupportedResponseMIMETypes": ["string", ...]
          }

       --validation-specification (structure)
          Specifies  configurations for one or more transform jobs that Amazon
          SageMaker runs to test the model package.

          ValidationRole -> (string)
              The IAM roles to be used for the validation of the  model  pack-
              age.

          ValidationProfiles -> (list)
              An array of ModelPackageValidationProfile objects, each of which
              specifies a batch transform job that Amazon  SageMaker  runs  to
              validate your model package.

              (structure)
                 Contains data, such as the inputs and targeted instance types
                 that are used in the process of validating the model package.

                 The data provided in the validation profile is made available
                 to your buyers on Amazon Web Services Marketplace.

                 ProfileName -> (string)
                     The name of the profile for the model package.

                 TransformJobDefinition -> (structure)
                     The  TransformJobDefinition  object  that  describes  the
                     transform  job used for the validation of the model pack-
                     age.

                     MaxConcurrentTransforms -> (integer)
                        The maximum number of parallel requests  that  can  be
                        sent  to each instance in a transform job. The default
                        value is 1.

                     MaxPayloadInMB -> (integer)
                        The maximum payload size allowed, in MB. A payload  is
                        the data portion of a record (without metadata).

                     BatchStrategy -> (string)
                        A   string  that  determines  the  number  of  records
                        included in a single mini-batch.
                            SingleRecord means only one  record  is  used  per
                            mini-batch.  MultiRecord means a mini-batch is set
                            to contain as many records that can fit within the
                            MaxPayloadInMB limit.

                     Environment -> (map)
                        The  environment  variables  to set in the Docker con-
                        tainer. We support up to 16 key and values entries  in
                        the map.

                        key -> (string)

                        value -> (string)

                     TransformInput -> (structure)
                        A  description  of  the  input  source and the way the
                        transform job consumes it.

                        DataSource -> (structure)
                            Describes the location of the channel data,  which
                            is,  the  S3  location  of the input data that the
                            model can consume.

                            S3DataSource -> (structure)
                               The S3 location of  the  data  source  that  is
                               associated with a channel.

                               S3DataType -> (string)
                                   If you choose S3Prefix , S3Uri identifies a
                                   key name prefix. Amazon SageMaker uses  all
                                   objects  with the specified key name prefix
                                   for batch transform.

                                   If you choose ManifestFile , S3Uri  identi-
                                   fies an object that is a manifest file con-
                                   taining a list of object keys that you want
                                   Amazon  SageMaker  to  use for batch trans-
                                   form.

                                   The following values are compatible:  Mani-
                                   festFile , S3Prefix

                                   The following value is not compatible: Aug-
                                   mentedManifestFile

                               S3Uri -> (string)
                                   Depending on the value  specified  for  the
                                   S3DataType  ,  identifies either a key name
                                   prefix or a manifest. For example:

                                   o A key name prefix might look  like  this:
                                     s3://bucketname/exampleprefix .

                                   o A   manifest   might   look   like  this:
                                     s3://bucketname/example.manifest      The
                                     manifest  is an S3 object which is a JSON
                                     file  with  the  following  format:     [
                                     {"prefix":                     "s3://cus-
                                     tomer_bucket/some/prefix/"},       "rela-
                                     tive/path/to/custdata-1",          "rela-
                                     tive/path/custdata-2",     ...     "rela-
                                     tive/path/custdata-N"     ]   The preced-
                                     ing JSON matches the following  S3Uris  :
                                     s3://customer_bucket/some/prefix/rela-
                                     tive/path/to/custdata-1         s3://cus-
                                     tomer_bucket/some/prefix/rela-
                                     tive/path/custdata-2    ...     s3://cus-
                                     tomer_bucket/some/prefix/rela-
                                     tive/path/custdata-N   The  complete  set
                                     of  S3Uris  in  this manifest constitutes
                                     the input data for the channel  for  this
                                     datasource.  The  object that each S3Uris
                                     points to must be  readable  by  the  IAM
                                     role  that  Amazon SageMaker uses to per-
                                     form tasks on your behalf.

                        ContentType -> (string)
                            The multipurpose internet  mail  extension  (MIME)
                            type  of  the data. Amazon SageMaker uses the MIME
                            type with each http call to transfer data  to  the
                            transform job.

                        CompressionType -> (string)
                            If  your transform data is compressed, specify the
                            compression type. Amazon  SageMaker  automatically
                            decompresses   the  data  for  the  transform  job
                            accordingly. The default value is None .

                        SplitType -> (string)
                            The method to use to  split  the  transform  job's
                            data files into smaller batches. Splitting is nec-
                            essary when the total size of each object  is  too
                            large to fit in a single request. You can also use
                            data splitting to improve performance by  process-
                            ing  multiple concurrent mini-batches. The default
                            value for SplitType is None , which indicates that
                            input  data  files are not split, and request pay-
                            loads contain the  entire  contents  of  an  input
                            object. Set the value of this parameter to Line to
                            split records on  a  newline  character  boundary.
                            SplitType  also  supports  a number of record-ori-
                            ented binary data  formats.  Currently,  the  sup-
                            ported record formats are:

                            o RecordIO

                            o TFRecord

                            When   splitting   is   enabled,  the  size  of  a
                            mini-batch depends on the  values  of  the  Batch-
                            Strategy  and  MaxPayloadInMB parameters. When the
                            value of BatchStrategy  is  MultiRecord  ,  Amazon
                            SageMaker  sends  the maximum number of records in
                            each request, up to the MaxPayloadInMB  limit.  If
                            the  value of BatchStrategy is SingleRecord , Ama-
                            zon SageMaker sends  individual  records  in  each
                            request.

                            NOTE:
                               Some  data  formats  represent  a  record  as a
                               binary  payload  wrapped  with  extra   padding
                               bytes.  When  splitting  is applied to a binary
                               data format, padding is removed if the value of
                               BatchStrategy  is set to SingleRecord . Padding
                               is not removed if the value of BatchStrategy is
                               set to MultiRecord .

                               For  more  information  about  RecordIO  ,  see
                               Create a Dataset Using RecordIO  in  the  MXNet
                               documentation.   For   more  information  about
                               TFRecord , see Consuming TFRecord data  in  the
                               TensorFlow documentation.

                     TransformOutput -> (structure)
                        Identifies  the Amazon S3 location where you want Ama-
                        zon SageMaker to save the results from  the  transform
                        job.

                        S3OutputPath -> (string)
                            The Amazon S3 path where you want Amazon SageMaker
                            to store the results of  the  transform  job.  For
                            example, s3://bucket-name/key-name-prefix .

                            For  every  S3 object used as input for the trans-
                            form job, batch transform stores  the  transformed
                            data  with  an  .``out`` suffix in a corresponding
                            subfolder in the location in  the  output  prefix.
                            For   example,   for  the  input  data  stored  at
                            s3://bucket-name/input-name-pre-
                            fix/dataset01/data.csv  ,  batch  transform stores
                            the  transformed  data  at   s3://bucket-name/out-
                            put-name-prefix/input-name-prefix/data.csv.out   .
                            Batch transform doesn't upload partially processed
                            objects. For an input S3 object that contains mul-
                            tiple records, it creates an .``out`` file only if
                            the  transform  job  succeeds  on the entire file.
                            When the input contains multiple S3  objects,  the
                            batch   transform  job  processes  the  listed  S3
                            objects and uploads only the output  for  success-
                            fully  processed  objects.  If any object fails in
                            the transform job batch transform marks the job as
                            failed to prompt investigation.

                        Accept -> (string)
                            The  MIME  type  used  to specify the output data.
                            Amazon SageMaker uses the MIME type with each http
                            call to transfer data from the transform job.

                        AssembleWith -> (string)
                            Defines  how to assemble the results of the trans-
                            form job as a single S3 object.  Choose  a  format
                            that is most convenient to you. To concatenate the
                            results in binary format, specify None . To add  a
                            newline  character at the end of every transformed
                            record, specify Line .

                        KmsKeyId -> (string)
                            The Amazon Web  Services  Key  Management  Service
                            (Amazon  Web  Services  KMS) key that Amazon Sage-
                            Maker uses to encrypt the model artifacts at  rest
                            using   Amazon   S3  server-side  encryption.  The
                            KmsKeyId can be any of the following formats:

                            o Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab

                            o Key                                         ARN:
                              arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab

                            o Alias name: alias/ExampleAlias

                            o Alias                 name                  ARN:
                              arn:aws:kms:us-west-2:111122223333:alias/Exam-
                              pleAlias

                            If you don't provide a KMS key  ID,  Amazon  Sage-
                            Maker  uses  the default KMS key for Amazon S3 for
                            your role's account.  For  more  information,  see
                            KMS-Managed  Encryption  Keys in the Amazon Simple
                            Storage Service Developer Guide.

                            The KMS key policy must grant  permission  to  the
                            IAM  role  that  you  specify in your  CreateModel
                            request. For more information, see Using Key Poli-
                            cies  in Amazon Web Services KMS in the Amazon Web
                            Services Key Management Service Developer Guide  .

                     TransformResources -> (structure)
                        Identifies  the ML compute instances for the transform
                        job.

                        InstanceType -> (string)
                            The ML compute instance  type  for  the  transform
                            job.  If  you  are  using  built-in  algorithms to
                            transform moderately sized datasets, we  recommend
                            using  ml.m4.xlarge or ml.m5.large instance types.

                        InstanceCount -> (integer)
                            The number of ML compute instances to use  in  the
                            transform  job.  For  distributed  transform jobs,
                            specify a value greater than 1. The default  value
                            is 1 .

                        VolumeKmsKeyId -> (string)
                            The  Amazon  Web  Services  Key Management Service
                            (Amazon Web Services KMS) key  that  Amazon  Sage-
                            Maker  uses  to  encrypt model data on the storage
                            volume attached to the ML compute instance(s) that
                            run the batch transform job.

                            NOTE:
                               Certain  Nitro-based  instances  include  local
                               storage, dependent on the instance type.  Local
                               storage  volumes are encrypted using a hardware
                               module on the instance.  You  can't  request  a
                               VolumeKmsKeyId when using an instance type with
                               local storage.

                               For a list of instance types that support local
                               instance  storage, see Instance Store Volumes .

                               For more information about local instance stor-
                               age  encryption, see SSD Instance Store Volumes
                               .

                            The VolumeKmsKeyId can be  any  of  the  following
                            formats:

                            o Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab

                            o Key                                         ARN:
                              arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab

                            o Alias name: alias/ExampleAlias

                            o Alias                  name                 ARN:
                              arn:aws:kms:us-west-2:111122223333:alias/Exam-
                              pleAlias

       JSON Syntax:

          {
            "ValidationRole": "string",
            "ValidationProfiles": [
              {
                "ProfileName": "string",
                "TransformJobDefinition": {
                  "MaxConcurrentTransforms": integer,
                  "MaxPayloadInMB": integer,
                  "BatchStrategy": "MultiRecord"|"SingleRecord",
                  "Environment": {"string": "string"
                    ...},
                  "TransformInput": {
                    "DataSource": {
                      "S3DataSource": {
                        "S3DataType": "ManifestFile"|"S3Prefix"|"AugmentedManifestFile",
                        "S3Uri": "string"
                      }
                    },
                    "ContentType": "string",
                    "CompressionType": "None"|"Gzip",
                    "SplitType": "None"|"Line"|"RecordIO"|"TFRecord"
                  },
                  "TransformOutput": {
                    "S3OutputPath": "string",
                    "Accept": "string",
                    "AssembleWith": "None"|"Line",
                    "KmsKeyId": "string"
                  },
                  "TransformResources": {
                    "InstanceType": "ml.m4.xlarge"|"ml.m4.2xlarge"|"ml.m4.4xlarge"|"ml.m4.10xlarge"|"ml.m4.16xlarge"|"ml.c4.xlarge"|"ml.c4.2xlarge"|"ml.c4.4xlarge"|"ml.c4.8xlarge"|"ml.p2.xlarge"|"ml.p2.8xlarge"|"ml.p2.16xlarge"|"ml.p3.2xlarge"|"ml.p3.8xlarge"|"ml.p3.16xlarge"|"ml.c5.xlarge"|"ml.c5.2xlarge"|"ml.c5.4xlarge"|"ml.c5.9xlarge"|"ml.c5.18xlarge"|"ml.m5.large"|"ml.m5.xlarge"|"ml.m5.2xlarge"|"ml.m5.4xlarge"|"ml.m5.12xlarge"|"ml.m5.24xlarge"|"ml.g4dn.xlarge"|"ml.g4dn.2xlarge"|"ml.g4dn.4xlarge"|"ml.g4dn.8xlarge"|"ml.g4dn.12xlarge"|"ml.g4dn.16xlarge",
                    "InstanceCount": integer,
                    "VolumeKmsKeyId": "string"
                  }
                }
              }
              ...
            ]
          }

       --source-algorithm-specification (structure)
          Details  about the algorithm that was used to create the model pack-
          age.

          SourceAlgorithms -> (list)
              A list of the algorithms that were used to create a model  pack-
              age.

              (structure)
                 Specifies  an  algorithm  that  was  used to create the model
                 package. The algorithm must be either an  algorithm  resource
                 in  your  Amazon  SageMaker account or an algorithm in Amazon
                 Web Services Marketplace that you are subscribed to.

                 ModelDataUrl -> (string)
                     The Amazon S3  path  where  the  model  artifacts,  which
                     result  from  model  training, are stored. This path must
                     point to a single gzip compressed  tar  archive  (.tar.gz
                     suffix).

                     NOTE:
                        The model artifacts must be in an S3 bucket that is in
                        the same region as the algorithm.

                 AlgorithmName -> (string)
                     The name of an algorithm that  was  used  to  create  the
                     model  package. The algorithm must be either an algorithm
                     resource in your Amazon SageMaker account or an algorithm
                     in  Amazon  Web  Services  Marketplace  that you are sub-
                     scribed to.

       Shorthand Syntax:

          SourceAlgorithms=[{ModelDataUrl=string,AlgorithmName=string},{ModelDataUrl=string,AlgorithmName=string}]

       JSON Syntax:

          {
            "SourceAlgorithms": [
              {
                "ModelDataUrl": "string",
                "AlgorithmName": "string"
              }
              ...
            ]
          }

       --certify-for-marketplace | --no-certify-for-marketplace (boolean)
          Whether to certify the model package for listing on Amazon Web  Ser-
          vices Marketplace.

          This  parameter  is  optional  for  unversioned models, and does not
          apply to versioned models.

       --tags (list)
          A list of key value pairs associated with the model. For more infor-
          mation,  see Tagging Amazon Web Services resources in the Amazon Web
          Services General Reference Guide .

          (structure)
              A tag object that consists of a key and an optional value,  used
              to  manage metadata for SageMaker Amazon Web Services resources.

              You can add tags to notebook instances, training jobs,  hyperpa-
              rameter  tuning  jobs,  batch  transform  jobs, models, labeling
              jobs, work teams, endpoint configurations,  and  endpoints.  For
              more  information  on  adding  tags  to SageMaker resources, see
              AddTags .

              For more information on adding metadata to your Amazon Web  Ser-
              vices  resources  with  tagging, see Tagging Amazon Web Services
              resources . For advice on best practices for managing Amazon Web
              Services  resources  with  tagging,  see Tagging Best Practices:
              Implement an Effective  Amazon  Web  Services  Resource  Tagging
              Strategy .

              Key -> (string)
                 The tag key. Tag keys must be unique per resource.

              Value -> (string)
                 The tag value.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --model-approval-status (string)
          Whether the model is approved for deployment.

          This  parameter is optional for versioned models, and does not apply
          to unversioned models.

          For versioned models, the value of this parameter  must  be  set  to
          Approved to deploy the model.

          Possible values:

          o Approved

          o Rejected

          o PendingManualApproval

       --metadata-properties (structure)
          Metadata  properties  of the tracking entity, trial, or trial compo-
          nent.

          CommitId -> (string)
              The commit ID.

          Repository -> (string)
              The repository.

          GeneratedBy -> (string)
              The entity this entity was generated by.

          ProjectId -> (string)
              The project ID.

       Shorthand Syntax:

          CommitId=string,Repository=string,GeneratedBy=string,ProjectId=string

       JSON Syntax:

          {
            "CommitId": "string",
            "Repository": "string",
            "GeneratedBy": "string",
            "ProjectId": "string"
          }

       --model-metrics (structure)
          A structure that contains model metrics reports.

          ModelQuality -> (structure)
              Metrics that measure the quality of a model.

              Statistics -> (structure)
                 Model quality statistics.

                 ContentType -> (string)

                 ContentDigest -> (string)

                 S3Uri -> (string)

              Constraints -> (structure)
                 Model quality constraints.

                 ContentType -> (string)

                 ContentDigest -> (string)

                 S3Uri -> (string)

          ModelDataQuality -> (structure)
              Metrics that measure the quality of the input data for a  model.

              Statistics -> (structure)
                 Data quality statistics for a model.

                 ContentType -> (string)

                 ContentDigest -> (string)

                 S3Uri -> (string)

              Constraints -> (structure)
                 Data quality constraints for a model.

                 ContentType -> (string)

                 ContentDigest -> (string)

                 S3Uri -> (string)

          Bias -> (structure)
              Metrics that measure bais in a model.

              Report -> (structure)
                 The bias report for a model

                 ContentType -> (string)

                 ContentDigest -> (string)

                 S3Uri -> (string)

              PreTrainingReport -> (structure)
                 ContentType -> (string)

                 ContentDigest -> (string)

                 S3Uri -> (string)

              PostTrainingReport -> (structure)
                 ContentType -> (string)

                 ContentDigest -> (string)

                 S3Uri -> (string)

          Explainability -> (structure)
              Metrics that help explain a model.

              Report -> (structure)
                 The explainability report for a model.

                 ContentType -> (string)

                 ContentDigest -> (string)

                 S3Uri -> (string)

       Shorthand Syntax:

          ModelQuality={Statistics={ContentType=string,ContentDigest=string,S3Uri=string},Constraints={ContentType=string,ContentDigest=string,S3Uri=string}},ModelDataQuality={Statistics={ContentType=string,ContentDigest=string,S3Uri=string},Constraints={ContentType=string,ContentDigest=string,S3Uri=string}},Bias={Report={ContentType=string,ContentDigest=string,S3Uri=string},PreTrainingReport={ContentType=string,ContentDigest=string,S3Uri=string},PostTrainingReport={ContentType=string,ContentDigest=string,S3Uri=string}},Explainability={Report={ContentType=string,ContentDigest=string,S3Uri=string}}

       JSON Syntax:

          {
            "ModelQuality": {
              "Statistics": {
                "ContentType": "string",
                "ContentDigest": "string",
                "S3Uri": "string"
              },
              "Constraints": {
                "ContentType": "string",
                "ContentDigest": "string",
                "S3Uri": "string"
              }
            },
            "ModelDataQuality": {
              "Statistics": {
                "ContentType": "string",
                "ContentDigest": "string",
                "S3Uri": "string"
              },
              "Constraints": {
                "ContentType": "string",
                "ContentDigest": "string",
                "S3Uri": "string"
              }
            },
            "Bias": {
              "Report": {
                "ContentType": "string",
                "ContentDigest": "string",
                "S3Uri": "string"
              },
              "PreTrainingReport": {
                "ContentType": "string",
                "ContentDigest": "string",
                "S3Uri": "string"
              },
              "PostTrainingReport": {
                "ContentType": "string",
                "ContentDigest": "string",
                "S3Uri": "string"
              }
            },
            "Explainability": {
              "Report": {
                "ContentType": "string",
                "ContentDigest": "string",
                "S3Uri": "string"
              }
            }
          }

       --client-token (string)
          A  unique token that guarantees that the call to this API is idempo-
          tent.

       --customer-metadata-properties (map)
          The metadata properties associated with the model package  versions.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --drift-check-baselines (structure)
          Represents the drift check baselines that can be used when the model
          monitor is set using the model package. For  more  information,  see
          the topic on Drift Detection against Previous Baselines in SageMaker
          Pipelines in the Amazon SageMaker Developer Guide .

          Bias -> (structure)
              Represents the drift check bias baselines that can be used  when
              the model monitor is set using the model package.

              ConfigFile -> (structure)
                 The bias config file for a model.

                 ContentType -> (string)
                     The type of content stored in the file source.

                 ContentDigest -> (string)
                     The digest of the file source.

                 S3Uri -> (string)
                     The Amazon S3 URI for the file source.

              PreTrainingConstraints -> (structure)
                 ContentType -> (string)

                 ContentDigest -> (string)

                 S3Uri -> (string)

              PostTrainingConstraints -> (structure)
                 ContentType -> (string)

                 ContentDigest -> (string)

                 S3Uri -> (string)

          Explainability -> (structure)
              Represents  the drift check explainability baselines that can be
              used when the model monitor is set using the model package.

              Constraints -> (structure)
                 ContentType -> (string)

                 ContentDigest -> (string)

                 S3Uri -> (string)

              ConfigFile -> (structure)
                 The explainability config file for the model.

                 ContentType -> (string)
                     The type of content stored in the file source.

                 ContentDigest -> (string)
                     The digest of the file source.

                 S3Uri -> (string)
                     The Amazon S3 URI for the file source.

          ModelQuality -> (structure)
              Represents the drift check model quality baselines that  can  be
              used when the model monitor is set using the model package.

              Statistics -> (structure)
                 ContentType -> (string)

                 ContentDigest -> (string)

                 S3Uri -> (string)

              Constraints -> (structure)
                 ContentType -> (string)

                 ContentDigest -> (string)

                 S3Uri -> (string)

          ModelDataQuality -> (structure)
              Represents the drift check model data quality baselines that can
              be used when the model monitor is set using the model package.

              Statistics -> (structure)
                 ContentType -> (string)

                 ContentDigest -> (string)

                 S3Uri -> (string)

              Constraints -> (structure)
                 ContentType -> (string)

                 ContentDigest -> (string)

                 S3Uri -> (string)

       Shorthand Syntax:

          Bias={ConfigFile={ContentType=string,ContentDigest=string,S3Uri=string},PreTrainingConstraints={ContentType=string,ContentDigest=string,S3Uri=string},PostTrainingConstraints={ContentType=string,ContentDigest=string,S3Uri=string}},Explainability={Constraints={ContentType=string,ContentDigest=string,S3Uri=string},ConfigFile={ContentType=string,ContentDigest=string,S3Uri=string}},ModelQuality={Statistics={ContentType=string,ContentDigest=string,S3Uri=string},Constraints={ContentType=string,ContentDigest=string,S3Uri=string}},ModelDataQuality={Statistics={ContentType=string,ContentDigest=string,S3Uri=string},Constraints={ContentType=string,ContentDigest=string,S3Uri=string}}

       JSON Syntax:

          {
            "Bias": {
              "ConfigFile": {
                "ContentType": "string",
                "ContentDigest": "string",
                "S3Uri": "string"
              },
              "PreTrainingConstraints": {
                "ContentType": "string",
                "ContentDigest": "string",
                "S3Uri": "string"
              },
              "PostTrainingConstraints": {
                "ContentType": "string",
                "ContentDigest": "string",
                "S3Uri": "string"
              }
            },
            "Explainability": {
              "Constraints": {
                "ContentType": "string",
                "ContentDigest": "string",
                "S3Uri": "string"
              },
              "ConfigFile": {
                "ContentType": "string",
                "ContentDigest": "string",
                "S3Uri": "string"
              }
            },
            "ModelQuality": {
              "Statistics": {
                "ContentType": "string",
                "ContentDigest": "string",
                "S3Uri": "string"
              },
              "Constraints": {
                "ContentType": "string",
                "ContentDigest": "string",
                "S3Uri": "string"
              }
            },
            "ModelDataQuality": {
              "Statistics": {
                "ContentType": "string",
                "ContentDigest": "string",
                "S3Uri": "string"
              },
              "Constraints": {
                "ContentType": "string",
                "ContentDigest": "string",
                "S3Uri": "string"
              }
            }
          }

       --domain (string)
          The machine learning domain of your model  package  and  its  compo-
          nents.  Common  machine learning domains include computer vision and
          natural language processing.

       --task (string)
          The machine learning task your model  package  accomplishes.  Common
          machine  learning tasks include object detection and image classifi-
          cation.

       --sample-payload-url (string)
          The Amazon Simple Storage Service (Amazon S3) path where the  sample
          payload are stored. This path must point to a single gzip compressed
          tar archive (.tar.gz suffix).

       --additional-inference-specifications (list)
          An array of additional Inference Specification objects.  Each  addi-
          tional  Inference  Specification  specifies  artifacts based on this
          model package that can be used  on  inference  endpoints.  Generally
          used with SageMaker Neo to store the compiled artifacts.

          (structure)
              A  structure  of  additional Inference Specification. Additional
              Inference Specification specifies details about  inference  jobs
              that can be run with models based on this model package

              Name -> (string)
                 A unique name to identify the additional inference specifica-
                 tion. The name must be unique within the list of  your  addi-
                 tional  inference specifications for a particular model pack-
                 age.

              Description -> (string)
                 A description of the additional Inference specification

              Containers -> (list)
                 The Amazon ECR registry path of the Docker  image  that  con-
                 tains the inference code.

                 (structure)
                     Describes the Docker container for the model package.

                     ContainerHostname -> (string)
                        The DNS host name for the Docker container.

                     Image -> (string)
                        The  Amazon  EC2  Container Registry (Amazon ECR) path
                        where inference code is stored.

                        If you are using your own custom algorithm instead  of
                        an  algorithm provided by Amazon SageMaker, the infer-
                        ence code must  meet  Amazon  SageMaker  requirements.
                        Amazon   SageMaker   supports   both  registry/reposi-
                        tory[:tag] and registry/repository[@digest] image path
                        formats.  For  more  information,  see  Using Your Own
                        Algorithms with Amazon SageMaker .

                     ImageDigest -> (string)
                        An MD5 hash of the training algorithm that  identifies
                        the Docker image used for training.

                     ModelDataUrl -> (string)
                        The  Amazon  S3  path where the model artifacts, which
                        result from model training, are stored. This path must
                        point to a single gzip compressed tar archive (.tar.gz
                        suffix).

                        NOTE:
                            The model artifacts must be in an S3  bucket  that
                            is in the same region as the model package.

                     ProductId -> (string)
                        The  Amazon Web Services Marketplace product ID of the
                        model package.

                     Environment -> (map)
                        The environment variables to set in  the  Docker  con-
                        tainer.  Each  key and value in the Environment string
                        to string map can have length of up to 1024.  We  sup-
                        port up to 16 entries in the map.

                        key -> (string)

                        value -> (string)

                     ModelInput -> (structure)
                        A structure with Model Input details.

                        DataInputConfig -> (string)
                            The input configuration object for the model.

                     Framework -> (string)
                        The  machine  learning  framework of the model package
                        container image.

                     FrameworkVersion -> (string)
                        The framework version of the Model  Package  Container
                        Image.

                     NearestModelName -> (string)
                        The name of a pre-trained machine learning benchmarked
                        by Amazon SageMaker Inference Recommender  model  that
                        matches your model. You can find a list of benchmarked
                        models by calling ListModelMetadata .

              SupportedTransformInstanceTypes -> (list)
                 A list of the instance types on which  a  transformation  job
                 can be run or on which an endpoint can be deployed.

                 (string)

              SupportedRealtimeInferenceInstanceTypes -> (list)
                 A list of the instance types that are used to generate infer-
                 ences in real-time.

                 (string)

              SupportedContentTypes -> (list)
                 The supported MIME types for the input data.

                 (string)

              SupportedResponseMIMETypes -> (list)
                 The supported MIME types for the output data.

                 (string)

       JSON Syntax:

          [
            {
              "Name": "string",
              "Description": "string",
              "Containers": [
                {
                  "ContainerHostname": "string",
                  "Image": "string",
                  "ImageDigest": "string",
                  "ModelDataUrl": "string",
                  "ProductId": "string",
                  "Environment": {"string": "string"
                    ...},
                  "ModelInput": {
                    "DataInputConfig": "string"
                  },
                  "Framework": "string",
                  "FrameworkVersion": "string",
                  "NearestModelName": "string"
                }
                ...
              ],
              "SupportedTransformInstanceTypes": ["ml.m4.xlarge"|"ml.m4.2xlarge"|"ml.m4.4xlarge"|"ml.m4.10xlarge"|"ml.m4.16xlarge"|"ml.c4.xlarge"|"ml.c4.2xlarge"|"ml.c4.4xlarge"|"ml.c4.8xlarge"|"ml.p2.xlarge"|"ml.p2.8xlarge"|"ml.p2.16xlarge"|"ml.p3.2xlarge"|"ml.p3.8xlarge"|"ml.p3.16xlarge"|"ml.c5.xlarge"|"ml.c5.2xlarge"|"ml.c5.4xlarge"|"ml.c5.9xlarge"|"ml.c5.18xlarge"|"ml.m5.large"|"ml.m5.xlarge"|"ml.m5.2xlarge"|"ml.m5.4xlarge"|"ml.m5.12xlarge"|"ml.m5.24xlarge"|"ml.g4dn.xlarge"|"ml.g4dn.2xlarge"|"ml.g4dn.4xlarge"|"ml.g4dn.8xlarge"|"ml.g4dn.12xlarge"|"ml.g4dn.16xlarge", ...],
              "SupportedRealtimeInferenceInstanceTypes": ["ml.t2.medium"|"ml.t2.large"|"ml.t2.xlarge"|"ml.t2.2xlarge"|"ml.m4.xlarge"|"ml.m4.2xlarge"|"ml.m4.4xlarge"|"ml.m4.10xlarge"|"ml.m4.16xlarge"|"ml.m5.large"|"ml.m5.xlarge"|"ml.m5.2xlarge"|"ml.m5.4xlarge"|"ml.m5.12xlarge"|"ml.m5.24xlarge"|"ml.m5d.large"|"ml.m5d.xlarge"|"ml.m5d.2xlarge"|"ml.m5d.4xlarge"|"ml.m5d.12xlarge"|"ml.m5d.24xlarge"|"ml.c4.large"|"ml.c4.xlarge"|"ml.c4.2xlarge"|"ml.c4.4xlarge"|"ml.c4.8xlarge"|"ml.p2.xlarge"|"ml.p2.8xlarge"|"ml.p2.16xlarge"|"ml.p3.2xlarge"|"ml.p3.8xlarge"|"ml.p3.16xlarge"|"ml.c5.large"|"ml.c5.xlarge"|"ml.c5.2xlarge"|"ml.c5.4xlarge"|"ml.c5.9xlarge"|"ml.c5.18xlarge"|"ml.c5d.large"|"ml.c5d.xlarge"|"ml.c5d.2xlarge"|"ml.c5d.4xlarge"|"ml.c5d.9xlarge"|"ml.c5d.18xlarge"|"ml.g4dn.xlarge"|"ml.g4dn.2xlarge"|"ml.g4dn.4xlarge"|"ml.g4dn.8xlarge"|"ml.g4dn.12xlarge"|"ml.g4dn.16xlarge"|"ml.r5.large"|"ml.r5.xlarge"|"ml.r5.2xlarge"|"ml.r5.4xlarge"|"ml.r5.12xlarge"|"ml.r5.24xlarge"|"ml.r5d.large"|"ml.r5d.xlarge"|"ml.r5d.2xlarge"|"ml.r5d.4xlarge"|"ml.r5d.12xlarge"|"ml.r5d.24xlarge"|"ml.inf1.xlarge"|"ml.inf1.2xlarge"|"ml.inf1.6xlarge"|"ml.inf1.24xlarge", ...],
              "SupportedContentTypes": ["string", ...],
              "SupportedResponseMIMETypes": ["string", ...]
            }
            ...
          ]

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       ModelPackageArn -> (string)
          The Amazon Resource Name (ARN) of the new model package.



                                                        CREATE-MODEL-PACKAGE()
