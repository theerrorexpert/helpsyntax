CREATE-ENDPOINT-CONFIG()                              CREATE-ENDPOINT-CONFIG()



NAME
       create-endpoint-config -

DESCRIPTION
       Creates  an  endpoint  configuration that Amazon SageMaker hosting ser-
       vices uses to deploy models. In the configuration, you identify one  or
       more  models,  created  using  the  CreateModel  API, to deploy and the
       resources that you want Amazon SageMaker to provision.  Then  you  call
       the  CreateEndpoint API.

       NOTE:
          Use this API if you want to use Amazon SageMaker hosting services to
          deploy models into production.

       In the request, you define a ProductionVariant , for  each  model  that
       you want to deploy. Each ProductionVariant parameter also describes the
       resources that you want Amazon SageMaker to  provision.  This  includes
       the number and type of ML compute instances to deploy.

       If  you are hosting multiple models, you also assign a VariantWeight to
       specify how much traffic you want to allocate to each model. For  exam-
       ple,  suppose that you want to host two models, A and B, and you assign
       traffic weight 2 for model A and 1 for model B. Amazon  SageMaker  dis-
       tributes  two-thirds  of the traffic to Model A, and one-third to model
       B.

       NOTE:
          When you call  CreateEndpoint , a load call is made to  DynamoDB  to
          verify  that  your endpoint configuration exists. When you read data
          from a DynamoDB  table  supporting  `  Eventually  Consistent  Reads
          https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadConsistency.html`__
          , the response might not reflect the results of a recently completed
          write  operation. The response might include some stale data. If the
          dependent entities are not yet in DynamoDB, this causes a validation
          error.  If  you  repeat  your  read  request after a short time, the
          response should return the latest data. So  retry  logic  is  recom-
          mended  to handle these possible issues. We also recommend that cus-
          tomers call  DescribeEndpointConfig before  calling   CreateEndpoint
          to minimize the potential impact of a DynamoDB eventually consistent
          read.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-endpoint-config
          --endpoint-config-name <value>
          --production-variants <value>
          [--data-capture-config <value>]
          [--tags <value>]
          [--kms-key-id <value>]
          [--async-inference-config <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --endpoint-config-name (string)
          The name of the endpoint configuration. You specify this name  in  a
          CreateEndpoint request.

       --production-variants (list)
          An  list  of  ProductionVariant objects, one for each model that you
          want to host at this endpoint.

          (structure)
              Identifies a model that you want to host and the resources  cho-
              sen to deploy for hosting it. If you are deploying multiple mod-
              els, tell Amazon SageMaker how to distribute traffic  among  the
              models by specifying variant weights.

              VariantName -> (string)
                 The name of the production variant.

              ModelName -> (string)
                 The name of the model that you want to host. This is the name
                 that you specified when creating the model.

              InitialInstanceCount -> (integer)
                 Number of instances to launch initially.

              InstanceType -> (string)
                 The ML compute instance type.

              InitialVariantWeight -> (float)
                 Determines initial traffic distribution among all of the mod-
                 els that you specify in the endpoint configuration. The traf-
                 fic to a production variant is determined by the ratio of the
                 VariantWeight  to  the sum of all VariantWeight values across
                 all ProductionVariants. If unspecified, it defaults to 1.0.

              AcceleratorType -> (string)
                 The size of the Elastic Inference (EI) instance  to  use  for
                 the  production  variant.  EI instances provide on-demand GPU
                 computing for inference.  For  more  information,  see  Using
                 Elastic Inference in Amazon SageMaker .

              CoreDumpConfig -> (structure)
                 Specifies  configuration  for a core dump from the model con-
                 tainer when the process crashes.

                 DestinationS3Uri -> (string)
                     The Amazon S3 bucket to send the core dump to.

                 KmsKeyId -> (string)
                     The Amazon Web Services Key  Management  Service  (Amazon
                     Web  Services  KMS)  key  that  Amazon  SageMaker uses to
                     encrypt the core  dump  data  at  rest  using  Amazon  S3
                     server-side  encryption.  The  KmsKeyId can be any of the
                     following formats:

                     o // KMS Key ID  "1234abcd-12ab-34cd-56ef-1234567890ab"

                     o //  Amazon  Resource  Name   (ARN)   of   a   KMS   Key
                       "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

                     o // KMS Key Alias  "alias/ExampleAlias"

                     o // Amazon Resource  Name  (ARN)  of  a  KMS  Key  Alias
                       "arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"

                     If you use a KMS key ID or an alias of your KMS key,  the
                     Amazon  SageMaker execution role must include permissions
                     to call kms:Encrypt . If you don't provide a KMS key  ID,
                     Amazon  SageMaker  uses the default KMS key for Amazon S3
                     for  your   role's   account.   Amazon   SageMaker   uses
                     server-side  encryption with KMS-managed keys for Output-
                     DataConfig . If you use a bucket policy with an s3:PutOb-
                     ject permission that only allows objects with server-side
                     encryption,     set     the     condition     key      of
                     s3:x-amz-server-side-encryption  to  "aws:kms" . For more
                     information, see KMS-Managed Encryption Keys in the  Ama-
                     zon Simple Storage Service Developer Guide.

                     The  KMS key policy must grant permission to the IAM role
                     that you specify in your  CreateEndpoint  and  UpdateEnd-
                     point requests. For more information, see Using Key Poli-
                     cies in Amazon Web Services KMS in the  Amazon  Web  Ser-
                     vices Key Management Service Developer Guide .

              ServerlessConfig -> (structure)
                 The  serverless  configuration  for  an endpoint. Specifies a
                 serverless   endpoint    configuration    instead    of    an
                 instance-based endpoint configuration.

                 NOTE:
                     Serverless  Inference  is  in  preview release for Amazon
                     SageMaker and is subject to change. We do  not  recommend
                     using this feature in production environments.

                 MemorySizeInMB -> (integer)
                     The memory size of your serverless endpoint. Valid values
                     are in 1 GB increments: 1024 MB, 2048 MB, 3072  MB,  4096
                     MB, 5120 MB, or 6144 MB.

                 MaxConcurrency -> (integer)
                     The maximum number of concurrent invocations your server-
                     less endpoint can process.

       Shorthand Syntax:

          VariantName=string,ModelName=string,InitialInstanceCount=integer,InstanceType=string,InitialVariantWeight=float,AcceleratorType=string,CoreDumpConfig={DestinationS3Uri=string,KmsKeyId=string},ServerlessConfig={MemorySizeInMB=integer,MaxConcurrency=integer} ...

       JSON Syntax:

          [
            {
              "VariantName": "string",
              "ModelName": "string",
              "InitialInstanceCount": integer,
              "InstanceType": "ml.t2.medium"|"ml.t2.large"|"ml.t2.xlarge"|"ml.t2.2xlarge"|"ml.m4.xlarge"|"ml.m4.2xlarge"|"ml.m4.4xlarge"|"ml.m4.10xlarge"|"ml.m4.16xlarge"|"ml.m5.large"|"ml.m5.xlarge"|"ml.m5.2xlarge"|"ml.m5.4xlarge"|"ml.m5.12xlarge"|"ml.m5.24xlarge"|"ml.m5d.large"|"ml.m5d.xlarge"|"ml.m5d.2xlarge"|"ml.m5d.4xlarge"|"ml.m5d.12xlarge"|"ml.m5d.24xlarge"|"ml.c4.large"|"ml.c4.xlarge"|"ml.c4.2xlarge"|"ml.c4.4xlarge"|"ml.c4.8xlarge"|"ml.p2.xlarge"|"ml.p2.8xlarge"|"ml.p2.16xlarge"|"ml.p3.2xlarge"|"ml.p3.8xlarge"|"ml.p3.16xlarge"|"ml.c5.large"|"ml.c5.xlarge"|"ml.c5.2xlarge"|"ml.c5.4xlarge"|"ml.c5.9xlarge"|"ml.c5.18xlarge"|"ml.c5d.large"|"ml.c5d.xlarge"|"ml.c5d.2xlarge"|"ml.c5d.4xlarge"|"ml.c5d.9xlarge"|"ml.c5d.18xlarge"|"ml.g4dn.xlarge"|"ml.g4dn.2xlarge"|"ml.g4dn.4xlarge"|"ml.g4dn.8xlarge"|"ml.g4dn.12xlarge"|"ml.g4dn.16xlarge"|"ml.r5.large"|"ml.r5.xlarge"|"ml.r5.2xlarge"|"ml.r5.4xlarge"|"ml.r5.12xlarge"|"ml.r5.24xlarge"|"ml.r5d.large"|"ml.r5d.xlarge"|"ml.r5d.2xlarge"|"ml.r5d.4xlarge"|"ml.r5d.12xlarge"|"ml.r5d.24xlarge"|"ml.inf1.xlarge"|"ml.inf1.2xlarge"|"ml.inf1.6xlarge"|"ml.inf1.24xlarge",
              "InitialVariantWeight": float,
              "AcceleratorType": "ml.eia1.medium"|"ml.eia1.large"|"ml.eia1.xlarge"|"ml.eia2.medium"|"ml.eia2.large"|"ml.eia2.xlarge",
              "CoreDumpConfig": {
                "DestinationS3Uri": "string",
                "KmsKeyId": "string"
              },
              "ServerlessConfig": {
                "MemorySizeInMB": integer,
                "MaxConcurrency": integer
              }
            }
            ...
          ]

       --data-capture-config (structure)
          EnableCapture -> (boolean)

          InitialSamplingPercentage -> (integer)

          DestinationS3Uri -> (string)

          KmsKeyId -> (string)

          CaptureOptions -> (list)
              (structure)
                 CaptureMode -> (string)

          CaptureContentTypeHeader -> (structure)
              CsvContentTypes -> (list)
                 (string)

              JsonContentTypes -> (list)
                 (string)

       Shorthand Syntax:

          EnableCapture=boolean,InitialSamplingPercentage=integer,DestinationS3Uri=string,KmsKeyId=string,CaptureOptions=[{CaptureMode=string},{CaptureMode=string}],CaptureContentTypeHeader={CsvContentTypes=[string,string],JsonContentTypes=[string,string]}

       JSON Syntax:

          {
            "EnableCapture": true|false,
            "InitialSamplingPercentage": integer,
            "DestinationS3Uri": "string",
            "KmsKeyId": "string",
            "CaptureOptions": [
              {
                "CaptureMode": "Input"|"Output"
              }
              ...
            ],
            "CaptureContentTypeHeader": {
              "CsvContentTypes": ["string", ...],
              "JsonContentTypes": ["string", ...]
            }
          }

       --tags (list)
          An array of key-value pairs. You can use  tags  to  categorize  your
          Amazon  Web  Services  resources  in different ways, for example, by
          purpose, owner, or environment. For more  information,  see  Tagging
          Amazon Web Services Resources .

          (structure)
              A  tag object that consists of a key and an optional value, used
              to manage metadata for SageMaker Amazon Web Services  resources.

              You  can add tags to notebook instances, training jobs, hyperpa-
              rameter tuning jobs,  batch  transform  jobs,  models,  labeling
              jobs,  work  teams,  endpoint configurations, and endpoints. For
              more information on adding  tags  to  SageMaker  resources,  see
              AddTags .

              For  more information on adding metadata to your Amazon Web Ser-
              vices resources with tagging, see Tagging  Amazon  Web  Services
              resources . For advice on best practices for managing Amazon Web
              Services resources with tagging,  see  Tagging  Best  Practices:
              Implement  an  Effective  Amazon  Web  Services Resource Tagging
              Strategy .

              Key -> (string)
                 The tag key. Tag keys must be unique per resource.

              Value -> (string)
                 The tag value.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --kms-key-id (string)
          The Amazon Resource Name (ARN) of a Amazon Web Services Key  Manage-
          ment  Service  key that Amazon SageMaker uses to encrypt data on the
          storage volume attached to the ML compute instance  that  hosts  the
          endpoint.

          The KmsKeyId can be any of the following formats:

          o Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab

          o Key                                                           ARN:
            arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab

          o Alias name: alias/ExampleAlias

          o Alias   name  ARN:  arn:aws:kms:us-west-2:111122223333:alias/Exam-
            pleAlias

          The KMS key policy must grant permission to the IAM  role  that  you
          specify  in  your CreateEndpoint , UpdateEndpoint requests. For more
          information, refer to the Amazon Web Services Key Management Service
          section`Using   Key   Policies   in   Amazon  Web  Services  KMS  <-
          https://docs.aws.amazon.com/kms/latest/developerguide/key-poli-
          cies.html>`__

          NOTE:
              Certain  Nitro-based  instances include local storage, dependent
              on the instance type. Local storage volumes are encrypted  using
              a  hardware module on the instance. You can't request a KmsKeyId
              when using an instance type with local storage. If  any  of  the
              models  that you specify in the ProductionVariants parameter use
              nitro-based instances with local storage, do not specify a value
              for  the KmsKeyId parameter. If you specify a value for KmsKeyId
              when using any nitro-based instances  with  local  storage,  the
              call to CreateEndpointConfig fails.

              For  a  list of instance types that support local instance stor-
              age, see Instance Store Volumes .

              For more information about local  instance  storage  encryption,
              see SSD Instance Store Volumes .

       --async-inference-config (structure)
          Specifies  configuration  for  how an endpoint performs asynchronous
          inference. This is a required field in order for your Endpoint to be
          invoked using InvokeEndpointAsync .

          ClientConfig -> (structure)
              Configures  the  behavior of the client used by Amazon SageMaker
              to interact with the model container during asynchronous  infer-
              ence.

              MaxConcurrentInvocationsPerInstance -> (integer)
                 The  maximum  number of concurrent requests sent by the Sage-
                 Maker client to the model container. If no value is provided,
                 Amazon SageMaker will choose an optimal value for you.

          OutputConfig -> (structure)
              Specifies  the  configuration for asynchronous inference invoca-
              tion outputs.

              KmsKeyId -> (string)
                 The Amazon Web Services Key Management  Service  (Amazon  Web
                 Services  KMS)  key that Amazon SageMaker uses to encrypt the
                 asynchronous inference output in Amazon S3.

              S3OutputPath -> (string)
                 The Amazon S3 location to upload inference responses to.

              NotificationConfig -> (structure)
                 Specifies the configuration for  notifications  of  inference
                 results for asynchronous inference.

                 SuccessTopic -> (string)
                     Amazon SNS topic to post a notification to when inference
                     completes successfully. If no topic is provided, no noti-
                     fication is sent on success.

                 ErrorTopic -> (string)
                     Amazon SNS topic to post a notification to when inference
                     fails. If no topic is provided, no notification  is  sent
                     on failure.

       Shorthand Syntax:

          ClientConfig={MaxConcurrentInvocationsPerInstance=integer},OutputConfig={KmsKeyId=string,S3OutputPath=string,NotificationConfig={SuccessTopic=string,ErrorTopic=string}}

       JSON Syntax:

          {
            "ClientConfig": {
              "MaxConcurrentInvocationsPerInstance": integer
            },
            "OutputConfig": {
              "KmsKeyId": "string",
              "S3OutputPath": "string",
              "NotificationConfig": {
                "SuccessTopic": "string",
                "ErrorTopic": "string"
              }
            }
          }

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       EndpointConfigArn -> (string)
          The Amazon Resource Name (ARN) of the endpoint configuration.



                                                      CREATE-ENDPOINT-CONFIG()
