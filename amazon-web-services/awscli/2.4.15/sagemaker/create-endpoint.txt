CREATE-ENDPOINT()                                            CREATE-ENDPOINT()



NAME
       create-endpoint -

DESCRIPTION
       Creates  an  endpoint using the endpoint configuration specified in the
       request. Amazon SageMaker uses the endpoint to provision resources  and
       deploy  models.  You  create  the endpoint configuration with the  Cre-
       ateEndpointConfig API.

       Use this API to deploy models using Amazon SageMaker hosting  services.

       For  an example that calls this method when deploying a model to Amazon
       SageMaker hosting services, see the Create Endpoint example notebook.

       NOTE:
          You must not delete an EndpointConfig that is in use by an  endpoint
          that  is  live  or while the UpdateEndpoint or CreateEndpoint opera-
          tions are being performed on the endpoint. To  update  an  endpoint,
          you must create a new EndpointConfig .

       The  endpoint  name must be unique within an Amazon Web Services Region
       in your Amazon Web Services account.

       When it receives the request, Amazon SageMaker  creates  the  endpoint,
       launches the resources (ML compute instances), and deploys the model(s)
       on them.

       NOTE:
          When you call  CreateEndpoint , a load call is made to  DynamoDB  to
          verify  that  your endpoint configuration exists. When you read data
          from a DynamoDB  table  supporting  `  Eventually  Consistent  Reads
          https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadConsistency.html`__
          , the response might not reflect the results of a recently completed
          write  operation. The response might include some stale data. If the
          dependent entities are not yet in DynamoDB, this causes a validation
          error.  If  you  repeat  your  read  request after a short time, the
          response should return the latest data. So  retry  logic  is  recom-
          mended  to handle these possible issues. We also recommend that cus-
          tomers call  DescribeEndpointConfig before  calling   CreateEndpoint
          to minimize the potential impact of a DynamoDB eventually consistent
          read.

       When Amazon SageMaker receives the request, it sets the endpoint status
       to  Creating  .  After  it  creates the endpoint, it sets the status to
       InService . Amazon SageMaker can then  process  incoming  requests  for
       inferences.  To  check the status of an endpoint, use the  DescribeEnd-
       point API.

       If any of the models hosted at this endpoint get  model  data  from  an
       Amazon  S3 location, Amazon SageMaker uses Amazon Web Services Security
       Token Service to download model artifacts from the  S3  path  you  pro-
       vided. Amazon Web Services STS is activated in your IAM user account by
       default. If you previously deactivated Amazon Web Services  STS  for  a
       region, you need to reactivate Amazon Web Services STS for that region.
       For more information, see Activating and Deactivating Amazon  Web  Ser-
       vices  STS  in an Amazon Web Services Region in the Amazon Web Services
       Identity and Access Management User Guide .

       NOTE:
          To add the IAM role policies for using this API operation, go to the
          IAM  console  , and choose Roles in the left navigation pane. Search
          the IAM role that you want to grant access to  use  the   CreateEnd-
          point  and   CreateEndpointConfig  API operations, add the following
          policies to the role.

          o Option 1: For a full SageMaker access, search and attach the  Ama-
            zonSageMakerFullAccess policy.

          o Option  2: For granting a limited access to an IAM role, paste the
            following Action elements manually into the JSON file of  the  IAM
            role:     "Action":  ["sagemaker:CreateEndpoint",  "sagemaker:Cre-
            ateEndpointConfig"]        "Resource":     [        "arn:aws:sage-
            maker:region:account-id:endpoint/endpointName"      "arn:aws:sage-
            maker:region:account-id:endpoint-config/endpointConfigName"      ]
            For more information, see SageMaker API Permissions: Actions, Per-
            missions, and Resources Reference .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-endpoint
          --endpoint-name <value>
          --endpoint-config-name <value>
          [--deployment-config <value>]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --endpoint-name (string)
          The name of the endpoint.The name must be unique  within  an  Amazon
          Web Services Region in your Amazon Web Services account. The name is
          case-insensitive in CreateEndpoint , but the case is  preserved  and
          must be matched in .

       --endpoint-config-name (string)
          The  name  of  an  endpoint configuration. For more information, see
          CreateEndpointConfig .

       --deployment-config (structure)
          The deployment configuration for an  endpoint,  which  contains  the
          desired deployment strategy and rollback configurations.

          BlueGreenUpdatePolicy -> (structure)
              Update policy for a blue/green deployment. If this update policy
              is specified, SageMaker creates a new fleet during  the  deploy-
              ment while maintaining the old fleet. SageMaker flips traffic to
              the new fleet according to the specified traffic routing config-
              uration. Only one update policy should be used in the deployment
              configuration. If no update policy is specified, SageMaker  uses
              a blue/green deployment strategy with all at once traffic shift-
              ing by default.

              TrafficRoutingConfiguration -> (structure)
                 Defines the traffic routing strategy to  shift  traffic  from
                 the old fleet to the new fleet during an endpoint deployment.

                 Type -> (string)
                     Traffic routing strategy type.

                     o ALL_AT_ONCE : Endpoint traffic shifts to the new  fleet
                       in a single step.

                     o CANARY  :  Endpoint  traffic shifts to the new fleet in
                       two steps. The first step is the  canary,  which  is  a
                       small  portion  of  the traffic. The second step is the
                       remainder of the traffic.

                     o LINEAR : Endpoint traffic shifts to the new fleet in  n
                       steps of a configurable size.

                 WaitIntervalInSeconds -> (integer)
                     The  waiting  time (in seconds) between incremental steps
                     to turn on traffic on the new endpoint fleet.

                 CanarySize -> (structure)
                     Batch size for the first step to turn on traffic  on  the
                     new  endpoint  fleet. Value must be less than or equal to
                     50% of the variant's total instance count.

                     Type -> (string)
                        Specifies the endpoint capacity type.

                        o INSTANCE_COUNT : The endpoint activates based on the
                          number of instances.

                        o CAPACITY_PERCENT  :  The endpoint activates based on
                          the specified percentage of capacity.

                     Value -> (integer)
                        Defines the capacity  size,  either  as  a  number  of
                        instances or a capacity percentage.

                 LinearStepSize -> (structure)
                     Batch  size  for  each step to turn on traffic on the new
                     endpoint fleet. Value must be  10-50%  of  the  variant's
                     total instance count.

                     Type -> (string)
                        Specifies the endpoint capacity type.

                        o INSTANCE_COUNT : The endpoint activates based on the
                          number of instances.

                        o CAPACITY_PERCENT : The endpoint activates  based  on
                          the specified percentage of capacity.

                     Value -> (integer)
                        Defines  the  capacity  size,  either  as  a number of
                        instances or a capacity percentage.

              TerminationWaitInSeconds -> (integer)
                 Additional waiting time in seconds after the completion of an
                 endpoint  deployment  before  terminating  the  old  endpoint
                 fleet. Default is 0.

              MaximumExecutionTimeoutInSeconds -> (integer)
                 Maximum execution timeout for the deployment. Note  that  the
                 timeout  value  should  be larger than the total waiting time
                 specified in TerminationWaitInSeconds and  WaitIntervalInSec-
                 onds .

          AutoRollbackConfiguration -> (structure)
              Automatic  rollback  configuration for handling endpoint deploy-
              ment failures and recovery.

              Alarms -> (list)
                 List of CloudWatch alarms in your account that are configured
                 to  monitor metrics on an endpoint. If any alarms are tripped
                 during a deployment, SageMaker rolls back the deployment.

                 (structure)
                     An Amazon CloudWatch alarm configured to monitor  metrics
                     on an endpoint.

                     AlarmName -> (string)
                        The name of a CloudWatch alarm in your account.

       JSON Syntax:

          {
            "BlueGreenUpdatePolicy": {
              "TrafficRoutingConfiguration": {
                "Type": "ALL_AT_ONCE"|"CANARY"|"LINEAR",
                "WaitIntervalInSeconds": integer,
                "CanarySize": {
                  "Type": "INSTANCE_COUNT"|"CAPACITY_PERCENT",
                  "Value": integer
                },
                "LinearStepSize": {
                  "Type": "INSTANCE_COUNT"|"CAPACITY_PERCENT",
                  "Value": integer
                }
              },
              "TerminationWaitInSeconds": integer,
              "MaximumExecutionTimeoutInSeconds": integer
            },
            "AutoRollbackConfiguration": {
              "Alarms": [
                {
                  "AlarmName": "string"
                }
                ...
              ]
            }
          }

       --tags (list)
          An  array  of  key-value  pairs. You can use tags to categorize your
          Amazon Web Services resources in different  ways,  for  example,  by
          purpose,  owner,  or  environment. For more information, see Tagging
          Amazon Web Services Resources .

          (structure)
              A tag object that consists of a key and an optional value,  used
              to  manage metadata for SageMaker Amazon Web Services resources.

              You can add tags to notebook instances, training jobs,  hyperpa-
              rameter  tuning  jobs,  batch  transform  jobs, models, labeling
              jobs, work teams, endpoint configurations,  and  endpoints.  For
              more  information  on  adding  tags  to SageMaker resources, see
              AddTags .

              For more information on adding metadata to your Amazon Web  Ser-
              vices  resources  with  tagging, see Tagging Amazon Web Services
              resources . For advice on best practices for managing Amazon Web
              Services  resources  with  tagging,  see Tagging Best Practices:
              Implement an Effective  Amazon  Web  Services  Resource  Tagging
              Strategy .

              Key -> (string)
                 The tag key. Tag keys must be unique per resource.

              Value -> (string)
                 The tag value.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       EndpointArn -> (string)
          The Amazon Resource Name (ARN) of the endpoint.



                                                             CREATE-ENDPOINT()
