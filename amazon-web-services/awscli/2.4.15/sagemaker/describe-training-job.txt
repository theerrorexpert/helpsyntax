DESCRIBE-TRAINING-JOB()                                DESCRIBE-TRAINING-JOB()



NAME
       describe-training-job -

DESCRIPTION
       Returns information about a training job.

       Some  of  the attributes below only appear if the training job success-
       fully starts. If the training job fails,  TrainingJobStatus  is  Failed
       and, depending on the FailureReason , attributes like TrainingStartTime
       , TrainingTimeInSeconds , TrainingEndTime ,  and  BillableTimeInSeconds
       may not be present in the response.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            describe-training-job
          --training-job-name <value>
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --training-job-name (string)
          The name of the training job.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       TrainingJobName -> (string)
          Name of the model training job.

       TrainingJobArn -> (string)
          The Amazon Resource Name (ARN) of the training job.

       TuningJobArn -> (string)
          The Amazon Resource Name (ARN) of the associated hyperparameter tun-
          ing job if the training job was launched by a hyperparameter  tuning
          job.

       LabelingJobArn -> (string)
          The  Amazon Resource Name (ARN) of the Amazon SageMaker Ground Truth
          labeling job that created the transform or training job.

       AutoMLJobArn -> (string)
          The Amazon Resource Name (ARN) of an AutoML job.

       ModelArtifacts -> (structure)
          Information about the Amazon S3  location  that  is  configured  for
          storing model artifacts.

          S3ModelArtifacts -> (string)
              The path of the S3 object that contains the model artifacts. For
              example, s3://bucket-name/keynameprefix/model.tar.gz .

       TrainingJobStatus -> (string)
          The status of the training job.

          Amazon SageMaker provides the following training job statuses:

          o InProgress - The training is in progress.

          o Completed - The training job has completed.

          o Failed - The training job has failed. To see the  reason  for  the
            failure,  see the FailureReason field in the response to a Descri-
            beTrainingJobResponse call.

          o Stopping - The training job is stopping.

          o Stopped - The training job has stopped.

          For more detailed information, see SecondaryStatus .

       SecondaryStatus -> (string)
          Provides detailed information about the state of the  training  job.
          For  detailed  information  on  the secondary status of the training
          job, see StatusMessage under  SecondaryStatusTransition .

          Amazon SageMaker provides primary statuses  and  secondary  statuses
          that apply to each of them:
              InProgress

          o Starting - Starting the training job.

          o Downloading  -  An optional stage for algorithms that support File
            training input mode. It indicates that data is being downloaded to
            the ML storage volumes.

          o Training - Training is in progress.

          o Interrupted  -  The  job stopped because the managed spot training
            instances were interrupted.

          o Uploading - Training is complete and the model artifacts are being
            uploaded to the S3 location.

            Completed

          o Completed - The training job has completed.

            Failed

          o Failed  -  The training job has failed. The reason for the failure
            is returned in the FailureReason field  of  DescribeTrainingJobRe-
            sponse .

            Stopped

          o MaxRuntimeExceeded - The job stopped because it exceeded the maxi-
            mum allowed runtime.

          o MaxWaitTimeExceeded - The job stopped because it exceeded the max-
            imum allowed wait time.

          o Stopped - The training job has stopped.

            Stopping

          o Stopping - Stopping the training job.

          WARNING:
              Valid values for SecondaryStatus are subject to change.

          We no longer support the following secondary statuses:

          o LaunchingMLInstances

          o PreparingTraining

          o DownloadingTrainingImage

       FailureReason -> (string)
          If the training job failed, the reason it failed.

       HyperParameters -> (map)
          Algorithm-specific parameters.

          key -> (string)

          value -> (string)

       AlgorithmSpecification -> (structure)
          Information  about  the  algorithm  used for training, and algorithm
          metadata.

          TrainingImage -> (string)
              The registry path of the Docker image that contains the training
              algorithm.  For  information  about  docker  registry  paths for
              built-in algorithms, see Algorithms  Provided  by  Amazon  Sage-
              Maker:  Common  Parameters . Amazon SageMaker supports both reg-
              istry/repository[:tag]  and  registry/repository[@digest]  image
              path  formats.  For  more  information, see Using Your Own Algo-
              rithms with Amazon SageMaker .

          AlgorithmName -> (string)
              The name of the algorithm resource to use for the training  job.
              This must be an algorithm resource that you created or subscribe
              to on Amazon Web Services Marketplace. If you  specify  a  value
              for  this parameter, you can't specify a value for TrainingImage
              .

          TrainingInputMode -> (string)
              The training input mode that the algorithm  supports.  For  more
              information about input modes, see Algorithms .
                 Pipe mode

              If  an  algorithm  supports  Pipe mode, Amazon SageMaker streams
              data directly from Amazon S3 to the container.
                 File mode

              If an algorithm supports  File  mode,  SageMaker  downloads  the
              training  data from S3 to the provisioned ML storage volume, and
              mounts the directory to the Docker volume for the training  con-
              tainer.

              You  must provision the ML storage volume with sufficient capac-
              ity to accommodate the data downloaded from S3. In  addition  to
              the  training data, the ML storage volume also stores the output
              model. The algorithm container uses the  ML  storage  volume  to
              also store intermediate information, if any.

              For  distributed  algorithms,  training data is distributed uni-
              formly. Your training duration is predictable if the input  data
              objects  sizes  are  approximately  the same. SageMaker does not
              split the files any further for model training.  If  the  object
              sizes  are skewed, training won't be optimal as the data distri-
              bution is also skewed when one host in  a  training  cluster  is
              overloaded, thus becoming a bottleneck in training.
                 FastFile mode

              If  an  algorithm supports FastFile mode, SageMaker streams data
              directly from S3 to the container with no code changes, and pro-
              vides  file  system  access  to the data. Users can author their
              training script to interact with these files  as  if  they  were
              stored on disk.
                 FastFile  mode works best when the data is read sequentially.
                 Augmented manifest files aren't supported. The  startup  time
                 is  lower  when  there  are fewer files in the S3 bucket pro-
                 vided.

          MetricDefinitions -> (list)
              A list of metric definition objects. Each object  specifies  the
              metric  name  and  regular  expressions  used to parse algorithm
              logs. Amazon SageMaker publishes each metric  to  Amazon  Cloud-
              Watch.

              (structure)
                 Specifies  a  metric  that  the  training algorithm writes to
                 stderr or stdout . Amazon SageMakerhyperparameter tuning cap-
                 tures  all  defined  metrics.  You  specify one metric that a
                 hyperparameter tuning job uses as  its  objective  metric  to
                 choose the best training job.

                 Name -> (string)
                     The name of the metric.

                 Regex -> (string)
                     A regular expression that searches the output of a train-
                     ing job and gets the value of the metric. For more infor-
                     mation about using regular expressions to define metrics,
                     see Defining Objective Metrics .

          EnableSageMakerMetricsTimeSeries -> (boolean)
              To generate and save time-series metrics during training, set to
              true  . The default is false and time-series metrics aren't gen-
              erated except in the following cases:

              o You use one of the Amazon SageMaker built-in algorithms

              o You use one of the following Prebuilt Amazon SageMaker  Docker
                Images :

                o Tensorflow (version >= 1.15)

                o MXNet (version >= 1.6)

                o PyTorch (version >= 1.3)

              o You specify at least one  MetricDefinition

       RoleArn -> (string)
          The  Amazon  Web  Services Identity and Access Management (IAM) role
          configured for the training job.

       InputDataConfig -> (list)
          An array of Channel objects that describes each data input  channel.

          (structure)
              A  channel  is a named input source that training algorithms can
              consume.

              ChannelName -> (string)
                 The name of the channel.

              DataSource -> (structure)
                 The location of the channel data.

                 S3DataSource -> (structure)
                     The S3 location of the data  source  that  is  associated
                     with a channel.

                     S3DataType -> (string)
                        If  you  choose S3Prefix , S3Uri identifies a key name
                        prefix. Amazon SageMaker uses all objects  that  match
                        the specified key name prefix for model training.

                        If  you  choose  ManifestFile  ,  S3Uri  identifies an
                        object that is a manifest file containing  a  list  of
                        object  keys that you want Amazon SageMaker to use for
                        model training.

                        If you choose AugmentedManifestFile , S3Uri identifies
                        an  object  that is an augmented manifest file in JSON
                        lines format. This file contains the data you want  to
                        use for model training. AugmentedManifestFile can only
                        be used if the Channel's input mode is Pipe .

                     S3Uri -> (string)
                        Depending on the value specified for the S3DataType  ,
                        identifies either a key name prefix or a manifest. For
                        example:

                        o A key name prefix might look like this: s3://bucket-
                          name/exampleprefix

                        o A   manifest  might  look  like  this:  s3://bucket-
                          name/example.manifest   A manifest is an  S3  object
                          which  is a JSON file consisting of an array of ele-
                          ments. The first element is a prefix which  is  fol-
                          lowed by one or more suffixes. SageMaker appends the
                          suffix elements to the prefix to get a full  set  of
                          S3Uri  .  Note  that  the  prefix  must  be  a valid
                          non-empty S3Uri that precludes users from specifying
                          a  manifest  whose  individual S3Uri is sourced from
                          different S3 buckets.  The  following  code  example
                          shows   a  valid  manifest  format:    [  {"prefix":
                          "s3://customer_bucket/some/prefix/"},         "rela-
                          tive/path/to/custdata-1",       "relative/path/cust-
                          data-2",    ...     "relative/path/custdata-N"     ]
                          This JSON is equivalent to the following S3Uri list:
                          s3://customer_bucket/some/prefix/rela-
                          tive/path/to/custdata-1                    s3://cus-
                          tomer_bucket/some/prefix/relative/path/custdata-2
                          ...           s3://customer_bucket/some/prefix/rela-
                          tive/path/custdata-N   The complete set of S3Uri  in
                          this  manifest is the input data for the channel for
                          this data source. The object that each S3Uri  points
                          to  must  be  readable  by  the IAM role that Amazon
                          SageMaker uses to perform tasks on your behalf.

                     S3DataDistributionType -> (string)
                        If you want Amazon SageMaker to replicate  the  entire
                        dataset  on  each ML compute instance that is launched
                        for model training, specify FullyReplicated .

                        If you want Amazon SageMaker to replicate a subset  of
                        data  on each ML compute instance that is launched for
                        model training, specify ShardedByS3Key . If there  are
                        n  ML  compute  instances launched for a training job,
                        each instance gets approximately 1/n of the number  of
                        S3  objects.  In  this  case,  model  training on each
                        machine uses only the subset of training data.

                        Don't choose more ML compute  instances  for  training
                        than available S3 objects. If you do, some nodes won't
                        get any data and you will pay for  nodes  that  aren't
                        getting  any  training data. This applies in both File
                        and Pipe modes. Keep  this  in  mind  when  developing
                        algorithms.

                        In  distributed  training,  where  you use multiple ML
                        compute EC2 instances, you might choose ShardedByS3Key
                        .  If  the algorithm requires copying training data to
                        the ML storage volume (when TrainingInputMode  is  set
                        to File ), this copies 1/n of the number of objects.

                     AttributeNames -> (list)
                        A  list of one or more attribute names to use that are
                        found in a specified augmented manifest file.

                        (string)

                 FileSystemDataSource -> (structure)
                     The file system that is associated with a channel.

                     FileSystemId -> (string)
                        The file system id.

                     FileSystemAccessMode -> (string)
                        The access mode of the mount of the directory  associ-
                        ated  with  the  channel.  A  directory can be mounted
                        either in ro (read-only) or rw (read-write) mode.

                     FileSystemType -> (string)
                        The file system type.

                     DirectoryPath -> (string)
                        The full path to the directory to associate  with  the
                        channel.

              ContentType -> (string)
                 The MIME type of the data.

              CompressionType -> (string)
                 If  training  data  is  compressed, the compression type. The
                 default value is None . CompressionType is used only in  Pipe
                 input mode. In File mode, leave this field unset or set it to
                 None.

              RecordWrapperType -> (string)
                 Specify RecordIO as the value when input data is in raw  for-
                 mat  but the training algorithm requires the RecordIO format.
                 In this case,  Amazon  SageMaker  wraps  each  individual  S3
                 object  in a RecordIO record. If the input data is already in
                 RecordIO format, you don't need to set  this  attribute.  For
                 more information, see Create a Dataset Using RecordIO .

                 In File mode, leave this field unset or set it to None.

              InputMode -> (string)
                 (Optional)  The  input  mode to use for the data channel in a
                 training job. If you don't set a value for InputMode , Amazon
                 SageMaker uses the value set for TrainingInputMode . Use this
                 parameter to override  the  TrainingInputMode  setting  in  a
                 AlgorithmSpecification  request  when you have a channel that
                 needs a different input mode from the training job's  general
                 setting. To download the data from Amazon Simple Storage Ser-
                 vice (Amazon S3) to the provisioned ML  storage  volume,  and
                 mount  the directory to a Docker volume, use File input mode.
                 To stream data directly from  Amazon  S3  to  the  container,
                 choose Pipe input mode.

                 To  use  a  model for incremental training, choose File input
                 model.

              ShuffleConfig -> (structure)
                 A configuration for a shuffle option  for  input  data  in  a
                 channel.  If  you use S3Prefix for S3DataType , this shuffles
                 the results of the S3 key prefix matches. If  you  use  Mani-
                 festFile , the order of the S3 object references in the Mani-
                 festFile is shuffled. If you use AugmentedManifestFile ,  the
                 order of the JSON lines in the AugmentedManifestFile is shuf-
                 fled. The shuffling order is determined using the Seed value.

                 For  Pipe input mode, shuffling is done at the start of every
                 epoch. With large datasets this ensures that the order of the
                 training  data  is  different for each epoch, it helps reduce
                 bias and possible overfitting. In a multi-node  training  job
                 when ShuffleConfig is combined with S3DataDistributionType of
                 ShardedByS3Key , the data is shuffled across  nodes  so  that
                 the  content  sent  to  a  particular node on the first epoch
                 might be sent to a different node on the second epoch.

                 Seed -> (long)
                     Determines the shuffling order in ShuffleConfig value.

       OutputDataConfig -> (structure)
          The S3 path where model artifacts that you configured when  creating
          the  job  are  stored. Amazon SageMaker creates subfolders for model
          artifacts.

          KmsKeyId -> (string)
              The Amazon Web Services Key Management Service (Amazon Web  Ser-
              vices  KMS)  key that Amazon SageMaker uses to encrypt the model
              artifacts at rest using Amazon S3  server-side  encryption.  The
              KmsKeyId can be any of the following formats:

              o // KMS Key ID  "1234abcd-12ab-34cd-56ef-1234567890ab"

              o //    Amazon    Resource    Name    (ARN)   of   a   KMS   Key
                "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

              o // KMS Key Alias  "alias/ExampleAlias"

              o //   Amazon   Resource   Name   (ARN)   of  a  KMS  Key  Alias
                "arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"

              If you use a KMS key ID or an alias of your KMS key, the  Amazon
              SageMaker  execution  role  must  include  permissions  to  call
              kms:Encrypt . If you don't provide a KMS key  ID,  Amazon  Sage-
              Maker  uses  the  default  KMS key for Amazon S3 for your role's
              account.  Amazon  SageMaker  uses  server-side  encryption  with
              KMS-managed keys for OutputDataConfig . If you use a bucket pol-
              icy with an s3:PutObject permission  that  only  allows  objects
              with   server-side   encryption,   set   the  condition  key  of
              s3:x-amz-server-side-encryption to "aws:kms" . For more informa-
              tion, see KMS-Managed Encryption Keys in the Amazon Simple Stor-
              age Service Developer Guide.

              The KMS key policy must grant permission to the  IAM  role  that
              you  specify in your CreateTrainingJob , CreateTransformJob , or
              CreateHyperParameterTuningJob requests.  For  more  information,
              see  Using Key Policies in Amazon Web Services KMS in the Amazon
              Web Services Key Management Service Developer Guide .

          S3OutputPath -> (string)
              Identifies the S3 path where you want Amazon SageMaker to  store
              the model artifacts. For example, s3://bucket-name/key-name-pre-
              fix .

       ResourceConfig -> (structure)
          Resources, including ML compute instances and  ML  storage  volumes,
          that are configured for model training.

          InstanceType -> (string)
              The ML compute instance type.

          InstanceCount -> (integer)
              The  number  of  ML  compute  instances  to use. For distributed
              training, provide a value greater than 1.

          VolumeSizeInGB -> (integer)
              The size of the ML storage volume that you want to provision.

              ML storage volumes store model artifacts and incremental states.
              Training  algorithms  might  also  use the ML storage volume for
              scratch space. If you want to store the training data in the  ML
              storage  volume,  choose  File  as  the TrainingInputMode in the
              algorithm specification.

              You must specify sufficient ML storage for your scenario.

              NOTE:
                 Amazon SageMaker supports only the General Purpose SSD  (gp2)
                 ML storage volume type.

              NOTE:
                 Certain  Nitro-based  instances  include local storage with a
                 fixed total size, dependent on the instance type. When  using
                 these  instances  for  training,  Amazon SageMaker mounts the
                 local instance storage instead of Amazon EBS gp2 storage. You
                 can't request a VolumeSizeInGB greater than the total size of
                 the local instance storage.

                 For a list of instance  types  that  support  local  instance
                 storage,  including  the  total  size  per instance type, see
                 Instance Store Volumes .

          VolumeKmsKeyId -> (string)
              The Amazon Web Services KMS key that Amazon  SageMaker  uses  to
              encrypt  data  on  the storage volume attached to the ML compute
              instance(s) that run the training job.

              NOTE:
                 Certain Nitro-based instances include local  storage,  depen-
                 dent   on  the  instance  type.  Local  storage  volumes  are
                 encrypted using a hardware module on the instance. You  can't
                 request  a  VolumeKmsKeyId  when  using an instance type with
                 local storage.

                 For a list of instance  types  that  support  local  instance
                 storage, see Instance Store Volumes .

                 For more information about local instance storage encryption,
                 see SSD Instance Store Volumes .

              The VolumeKmsKeyId can be in any of the following formats:

              o // KMS Key ID  "1234abcd-12ab-34cd-56ef-1234567890ab"

              o //   Amazon   Resource   Name   (ARN)    of    a    KMS    Key
                "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

       VpcConfig -> (structure)
          A  VpcConfig object that specifies the VPC that  this  training  job
          has  access  to.  For more information, see Protect Training Jobs by
          Using an Amazon Virtual Private Cloud .

          SecurityGroupIds -> (list)
              The VPC security group IDs, in the form sg-xxxxxxxx. Specify the
              security  groups  for  the  VPC that is specified in the Subnets
              field.

              (string)

          Subnets -> (list)
              The ID of the subnets in the VPC to which you  want  to  connect
              your training job or model. For information about the availabil-
              ity of specific instance types, see Supported Instance Types and
              Availability Zones .

              (string)

       StoppingCondition -> (structure)
          Specifies  a limit to how long a model training job can run. It also
          specifies how long a managed Spot training job has to complete. When
          the  job  reaches the time limit, Amazon SageMaker ends the training
          job. Use this API to cap model training costs.

          To stop a job, Amazon SageMaker sends the algorithm the SIGTERM sig-
          nal,  which  delays  job termination for 120 seconds. Algorithms can
          use this 120-second window to  save  the  model  artifacts,  so  the
          results of training are not lost.

          MaxRuntimeInSeconds -> (integer)
              The  maximum length of time, in seconds, that a training or com-
              pilation job can run.

              For compilation jobs, if the job does not complete  during  this
              time,  you  will  receive a TimeOut error. We recommend starting
              with 900 seconds and increase as necessary based on your  model.

              For  all  other  jobs,  if the job does not complete during this
              time, Amazon SageMaker ends the job. When RetryStrategy is spec-
              ified in the job request, MaxRuntimeInSeconds specifies the max-
              imum time for all of the attempts in total, not each  individual
              attempt.  The  default  value  is 1 day. The maximum value is 28
              days.

          MaxWaitTimeInSeconds -> (integer)
              The maximum length of time, in  seconds,  that  a  managed  Spot
              training  job  has  to  complete. It is the amount of time spent
              waiting for Spot capacity plus the amount of time  the  job  can
              run.  It  must be equal to or greater than MaxRuntimeInSeconds .
              If the job does not complete during this time, Amazon  SageMaker
              ends the job.

              When  RetryStrategy  is  specified  in the job request, MaxWait-
              TimeInSeconds specifies the maximum time for all of the attempts
              in total, not each individual attempt.

       CreationTime -> (timestamp)
          A timestamp that indicates when the training job was created.

       TrainingStartTime -> (timestamp)
          Indicates  the  time  when  the  training  job  starts  on  training
          instances. You are billed for the time interval  between  this  time
          and the value of TrainingEndTime . The start time in CloudWatch Logs
          might be later than this time. The difference is due to the time  it
          takes  to download the training data and to the size of the training
          container.

       TrainingEndTime -> (timestamp)
          Indicates the time when the training job ends on training instances.
          You  are  billed  for  the time interval between the value of Train-
          ingStartTime and this time. For successful jobs  and  stopped  jobs,
          this  is  the  time  after  model artifacts are uploaded. For failed
          jobs, this is the time when Amazon SageMaker detects a job  failure.

       LastModifiedTime -> (timestamp)
          A  timestamp  that indicates when the status of the training job was
          last modified.

       SecondaryStatusTransitions -> (list)
          A history of all of the secondary statuses that the training job has
          transitioned through.

          (structure)
              An  array  element of  DescribeTrainingJobResponse$SecondarySta-
              tusTransitions . It provides additional details about  a  status
              that  the  training job has transitioned through. A training job
              can be in one of several states, for  example,  starting,  down-
              loading,  training, or uploading. Within each state, there are a
              number of intermediate states. For example, within the  starting
              state,  Amazon  SageMaker  could be starting the training job or
              launching  the  ML  instances.  These  transitional  states  are
              referred to as the job's secondary status.

              Status -> (string)
                 Contains  a secondary status information from a training job.

                 Status might be one of the following secondary statuses:
                     InProgress

                 o Starting - Starting the training job.

                 o Downloading - An optional stage for algorithms that support
                   File  training  input mode. It indicates that data is being
                   downloaded to the ML storage volumes.

                 o Training - Training is in progress.

                 o Uploading - Training is complete and  the  model  artifacts
                   are being uploaded to the S3 location.

                   Completed

                 o Completed - The training job has completed.

                   Failed

                 o Failed  -  The  training job has failed. The reason for the
                   failure is returned in the FailureReason field of Describe-
                   TrainingJobResponse .

                   Stopped

                 o MaxRuntimeExceeded  -  The  job stopped because it exceeded
                   the maximum allowed runtime.

                 o Stopped - The training job has stopped.

                   Stopping

                 o Stopping - Stopping the training job.

                 We no longer support the following secondary statuses:

                 o LaunchingMLInstances

                 o PreparingTrainingStack

                 o DownloadingTrainingImage

              StartTime -> (timestamp)
                 A timestamp that shows when the training job transitioned  to
                 the current secondary status state.

              EndTime -> (timestamp)
                 A timestamp that shows when the training job transitioned out
                 of this secondary status state into another secondary  status
                 state or when the training job has ended.

              StatusMessage -> (string)
                 A  detailed  description  of  the progress within a secondary
                 status.

                 Amazon SageMaker provides secondary statuses and status  mes-
                 sages that apply to each of them:
                     Starting

                 o Starting the training job.

                 o Launching requested ML instances.

                 o Insufficient   capacity  error  from  EC2  while  launching
                   instances, retrying!

                 o Launched instance was unhealthy, replacing it!

                 o Preparing the instances for training.

                   Training

                 o Downloading the training image.

                 o Training image download completed. Training in progress.

                 WARNING:
                     Status messages are subject to change. Therefore, we rec-
                     ommend  not  including them in code that programmatically
                     initiates actions. For examples, don't  use  status  mes-
                     sages in if statements.

                 To  have  an  overview  of your training job's progress, view
                 TrainingJobStatus and SecondaryStatus in  DescribeTrainingJob
                 ,  and StatusMessage together. For example, at the start of a
                 training job, you might see the following:

                 o TrainingJobStatus - InProgress

                 o SecondaryStatus - Training

                 o StatusMessage - Downloading the training image

       FinalMetricDataList -> (list)
          A collection of MetricData objects that specify the  names,  values,
          and  dates  and  times that the training algorithm emitted to Amazon
          CloudWatch.

          (structure)
              The name, value, and date and time of a metric that was  emitted
              to Amazon CloudWatch.

              MetricName -> (string)
                 The name of the metric.

              Value -> (float)
                 The value of the metric.

              Timestamp -> (timestamp)
                 The date and time that the algorithm emitted the metric.

       EnableNetworkIsolation -> (boolean)
          If  you  want to allow inbound or outbound network calls, except for
          calls between peers within a training cluster for distributed train-
          ing, choose True . If you enable network isolation for training jobs
          that are configured to use a VPC,  Amazon  SageMaker  downloads  and
          uploads customer data and model artifacts through the specified VPC,
          but the training container does not have network access.

       EnableInterContainerTrafficEncryption -> (boolean)
          To encrypt all communications between ML compute instances  in  dis-
          tributed  training,  choose True . Encryption provides greater secu-
          rity for distributed training, but training might take  longer.  How
          long it takes depends on the amount of communication between compute
          instances, especially if you use a deep learning algorithms in  dis-
          tributed training.

       EnableManagedSpotTraining -> (boolean)
          A  Boolean indicating whether managed spot training is enabled (True
          ) or not (False ).

       CheckpointConfig -> (structure)
          Contains information about the  output  location  for  managed  spot
          training checkpoint data.

          S3Uri -> (string)
              Identifies  the S3 path where you want Amazon SageMaker to store
              checkpoints. For example, s3://bucket-name/key-name-prefix .

          LocalPath -> (string)
              (Optional) The local directory where  checkpoints  are  written.
              The default directory is /opt/ml/checkpoints/ .

       TrainingTimeInSeconds -> (integer)
          The training time in seconds.

       BillableTimeInSeconds -> (integer)
          The  billable  time in seconds. Billable time refers to the absolute
          wall-clock time.

          Multiply BillableTimeInSeconds by the number of instances (Instance-
          Count ) in your training cluster to get the total compute time Sage-
          Maker will bill you if you run distributed training. The formula  is
          as follows: BillableTimeInSeconds * InstanceCount .

          You can calculate the savings from using managed spot training using
          the formula (1 - BillableTimeInSeconds  /  TrainingTimeInSeconds)  *
          100  .  For  example,  if BillableTimeInSeconds is 100 and Training-
          TimeInSeconds is 500, the savings is 80%.

       DebugHookConfig -> (structure)
          Configuration information for the Debugger hook  parameters,  metric
          and  tensor  collections, and storage paths. To learn more about how
          to configure the DebugHookConfig parameter, see  Use  the  SageMaker
          and  Debugger  Configuration  API  Operations to Create, Update, and
          Debug Your Training Job .

          LocalPath -> (string)
              Path to local storage location for metrics and tensors. Defaults
              to /opt/ml/output/tensors/ .

          S3OutputPath -> (string)
              Path to Amazon S3 storage location for metrics and tensors.

          HookParameters -> (map)
              Configuration information for the Debugger hook parameters.

              key -> (string)

              value -> (string)

          CollectionConfigurations -> (list)
              Configuration  information  for  Debugger tensor collections. To
              learn more about how to  configure  the  CollectionConfiguration
              parameter,  see Use the SageMaker and Debugger Configuration API
              Operations to Create, Update, and Debug Your Training Job .

              (structure)
                 Configuration information for the Debugger output tensor col-
                 lections.

                 CollectionName -> (string)
                     The  name  of  the  tensor  collection.  The name must be
                     unique relative to other rule configuration names.

                 CollectionParameters -> (map)
                     Parameter values for the tensor collection.  The  allowed
                     parameters are "name" , "include_regex" , "reduction_con-
                     fig" , "save_config" , "tensor_names"  ,  and  "save_his-
                     togram" .

                     key -> (string)

                     value -> (string)

       ExperimentConfig -> (structure)
          Associates  a  SageMaker job as a trial component with an experiment
          and trial. Specified when you call the following APIs:

          o CreateProcessingJob

          o CreateTrainingJob

          o CreateTransformJob

          ExperimentName -> (string)
              The name of an existing experiment to associate the trial compo-
              nent with.

          TrialName -> (string)
              The  name  of an existing trial to associate the trial component
              with. If not specified, a new trial is created.

          TrialComponentDisplayName -> (string)
              The display name for the trial  component.  If  this  key  isn't
              specified, the display name is the trial component name.

       DebugRuleConfigurations -> (list)
          Configuration  information  for  Debugger rules for debugging output
          tensors.

          (structure)
              Configuration  information  for  SageMaker  Debugger  rules  for
              debugging.  To  learn more about how to configure the DebugRule-
              Configuration parameter, see Use the SageMaker and Debugger Con-
              figuration  API  Operations  to  Create,  Update, and Debug Your
              Training Job .

              RuleConfigurationName -> (string)
                 The name of the rule configuration. It must be  unique  rela-
                 tive to other rule configuration names.

              LocalPath -> (string)
                 Path  to local storage location for output of rules. Defaults
                 to /opt/ml/processing/output/rule/ .

              S3OutputPath -> (string)
                 Path to Amazon S3 storage location for rules.

              RuleEvaluatorImage -> (string)
                 The Amazon Elastic Container (ECR) Image for the managed rule
                 evaluation.

              InstanceType -> (string)
                 The instance type to deploy a Debugger custom rule for debug-
                 ging a training job.

              VolumeSizeInGB -> (integer)
                 The size, in GB, of the ML storage  volume  attached  to  the
                 processing instance.

              RuleParameters -> (map)
                 Runtime configuration for rule container.

                 key -> (string)

                 value -> (string)

       TensorBoardOutputConfig -> (structure)
          Configuration of storage locations for the Debugger TensorBoard out-
          put data.

          LocalPath -> (string)
              Path to local storage location for tensorBoard output.  Defaults
              to /opt/ml/output/tensorboard .

          S3OutputPath -> (string)
              Path to Amazon S3 storage location for TensorBoard output.

       DebugRuleEvaluationStatuses -> (list)
          Evaluation status of Debugger rules for debugging on a training job.

          (structure)
              Information about the status of the rule evaluation.

              RuleConfigurationName -> (string)
                 The name of the rule configuration.

              RuleEvaluationJobArn -> (string)
                 The Amazon Resource Name (ARN) of the rule evaluation job.

              RuleEvaluationStatus -> (string)
                 Status of the rule evaluation.

              StatusDetails -> (string)
                 Details from the rule evaluation.

              LastModifiedTime -> (timestamp)
                 Timestamp when the rule evaluation status was last  modified.

       ProfilerConfig -> (structure)
          Configuration  information for Debugger system monitoring, framework
          profiling, and storage paths.

          S3OutputPath -> (string)
              Path to Amazon S3 storage location for system and framework met-
              rics.

          ProfilingIntervalInMilliseconds -> (long)
              A  time  interval  for capturing system metrics in milliseconds.
              Available values are 100, 200, 500, 1000  (1  second),  5000  (5
              seconds),  and  60000 (1 minute) milliseconds. The default value
              is 500 milliseconds.

          ProfilingParameters -> (map)
              Configuration  information  for  capturing  framework   metrics.
              Available  key  strings  for  different  profiling  options  are
              DetailedProfilingConfig , PythonProfilingConfig , and  DataLoad-
              erProfilingConfig . The following codes are configuration struc-
              tures for the ProfilingParameters parameter. To learn more about
              how  to configure the ProfilingParameters parameter, see Use the
              SageMaker and Debugger Configuration API Operations  to  Create,
              Update, and Debug Your Training Job .

              key -> (string)

              value -> (string)

       ProfilerRuleConfigurations -> (list)
          Configuration  information  for  Debugger rules for profiling system
          and framework metrics.

          (structure)
              Configuration information for profiling rules.

              RuleConfigurationName -> (string)
                 The name of the rule configuration. It must be  unique  rela-
                 tive to other rule configuration names.

              LocalPath -> (string)
                 Path  to local storage location for output of rules. Defaults
                 to /opt/ml/processing/output/rule/ .

              S3OutputPath -> (string)
                 Path to Amazon S3 storage location for rules.

              RuleEvaluatorImage -> (string)
                 The Amazon Elastic Container (ECR) Image for the managed rule
                 evaluation.

              InstanceType -> (string)
                 The  instance  type to deploy a Debugger custom rule for pro-
                 filing a training job.

              VolumeSizeInGB -> (integer)
                 The size, in GB, of the ML storage  volume  attached  to  the
                 processing instance.

              RuleParameters -> (map)
                 Runtime configuration for rule container.

                 key -> (string)

                 value -> (string)

       ProfilerRuleEvaluationStatuses -> (list)
          Evaluation status of Debugger rules for profiling on a training job.

          (structure)
              Information about the status of the rule evaluation.

              RuleConfigurationName -> (string)
                 The name of the rule configuration.

              RuleEvaluationJobArn -> (string)
                 The Amazon Resource Name (ARN) of the rule evaluation job.

              RuleEvaluationStatus -> (string)
                 Status of the rule evaluation.

              StatusDetails -> (string)
                 Details from the rule evaluation.

              LastModifiedTime -> (timestamp)
                 Timestamp when the rule evaluation status was last  modified.

       ProfilingStatus -> (string)
          Profiling status of a training job.

       RetryStrategy -> (structure)
          The  number  of  times to retry the job when the job fails due to an
          InternalServerError .

          MaximumRetryAttempts -> (integer)
              The number of times to retry the job. When the job  is  retried,
              it's SecondaryStatus is changed to STARTING .

       Environment -> (map)
          The environment variables to set in the Docker container.

          key -> (string)

          value -> (string)



                                                       DESCRIBE-TRAINING-JOB()
