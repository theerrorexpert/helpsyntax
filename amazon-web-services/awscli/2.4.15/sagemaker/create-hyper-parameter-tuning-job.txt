CREATE-HYPER-PARAMETER-TUNING-JOB()        CREATE-HYPER-PARAMETER-TUNING-JOB()



NAME
       create-hyper-parameter-tuning-job -

DESCRIPTION
       Starts  a  hyperparameter tuning job. A hyperparameter tuning job finds
       the best version of a model by  running  many  training  jobs  on  your
       dataset  using  the algorithm you choose and values for hyperparameters
       within ranges that you specify. It then chooses the hyperparameter val-
       ues  that  result  in a model that performs the best, as measured by an
       objective metric that you choose.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-hyper-parameter-tuning-job
          --hyper-parameter-tuning-job-name <value>
          --hyper-parameter-tuning-job-config <value>
          [--training-job-definition <value>]
          [--training-job-definitions <value>]
          [--warm-start-config <value>]
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --hyper-parameter-tuning-job-name (string)
          The name of the tuning job. This name is the prefix for the names of
          all  training  jobs  that this tuning job launches. The name must be
          unique within the same Amazon Web Services account  and  Amazon  Web
          Services  Region. The name must have 1 to 32 characters. Valid char-
          acters are a-z, A-Z, 0-9, and : + = @ _ % - (hyphen).  The  name  is
          not case sensitive.

       --hyper-parameter-tuning-job-config (structure)
          The   HyperParameterTuningJobConfig object that describes the tuning
          job, including the search strategy, the  objective  metric  used  to
          evaluate training jobs, ranges of parameters to search, and resource
          limits for the tuning job. For more information, see How Hyperparam-
          eter Tuning Works .

          Strategy -> (string)
              Specifies  how hyperparameter tuning chooses the combinations of
              hyperparameter values to use for the training job  it  launches.
              To  use  the Bayesian search strategy, set this to Bayesian . To
              randomly search, set it to Random . For information about search
              strategies, see How Hyperparameter Tuning Works .

          HyperParameterTuningJobObjective -> (structure)
              The   HyperParameterTuningJobObjective object that specifies the
              objective metric for this tuning job.

              Type -> (string)
                 Whether to minimize or maximize the objective metric.

              MetricName -> (string)
                 The name of the metric to use for the objective metric.

          ResourceLimits -> (structure)
              The  ResourceLimits object that specifies the maximum number  of
              training jobs and parallel training jobs for this tuning job.

              MaxNumberOfTrainingJobs -> (integer)
                 The  maximum  number  of  training jobs that a hyperparameter
                 tuning job can launch.

              MaxParallelTrainingJobs -> (integer)
                 The maximum number of concurrent training jobs that a  hyper-
                 parameter tuning job can launch.

          ParameterRanges -> (structure)
              The   ParameterRanges object that specifies the ranges of hyper-
              parameters that this tuning job searches.

              IntegerParameterRanges -> (list)
                 The array  of   IntegerParameterRange  objects  that  specify
                 ranges  of integer hyperparameters that a hyperparameter tun-
                 ing job searches.

                 (structure)
                     For a hyperparameter of the integer type,  specifies  the
                     range that a hyperparameter tuning job searches.

                     Name -> (string)
                        The name of the hyperparameter to search.

                     MinValue -> (string)
                        The minimum value of the hyperparameter to search.

                     MaxValue -> (string)
                        The maximum value of the hyperparameter to search.

                     ScalingType -> (string)
                        The  scale  that  hyperparameter tuning uses to search
                        the hyperparameter range. For information about choos-
                        ing a hyperparameter scale, see Hyperparameter Scaling
                        . One of the following values:
                            Auto

                        Amazon SageMaker  hyperparameter  tuning  chooses  the
                        best scale for the hyperparameter.
                            Linear

                        Hyperparameter  tuning  searches  the  values  in  the
                        hyperparameter range by using a linear scale.
                            Logarithmic

                        Hyperparameter  tuning  searches  the  values  in  the
                        hyperparameter range by using a logarithmic scale.

                        Logarithmic  scaling  works  only for ranges that have
                        only values greater than 0.

              ContinuousParameterRanges -> (list)
                 The array of  ContinuousParameterRange objects  that  specify
                 ranges  of  continuous  hyperparameters that a hyperparameter
                 tuning job searches.

                 (structure)
                     A list of continuous hyperparameters to tune.

                     Name -> (string)
                        The name of the continuous hyperparameter to tune.

                     MinValue -> (string)
                        The minimum value for the hyperparameter.  The  tuning
                        job  uses floating-point values between this value and
                        MaxValue for tuning.

                     MaxValue -> (string)
                        The maximum value for the hyperparameter.  The  tuning
                        job  uses floating-point values between MinValue value
                        and this value for tuning.

                     ScalingType -> (string)
                        The scale that hyperparameter tuning  uses  to  search
                        the hyperparameter range. For information about choos-
                        ing a hyperparameter scale, see Hyperparameter Scaling
                        . One of the following values:
                            Auto

                        Amazon  SageMaker  hyperparameter  tuning  chooses the
                        best scale for the hyperparameter.
                            Linear

                        Hyperparameter  tuning  searches  the  values  in  the
                        hyperparameter range by using a linear scale.
                            Logarithmic

                        Hyperparameter  tuning  searches  the  values  in  the
                        hyperparameter range by using a logarithmic scale.

                        Logarithmic scaling works only for  ranges  that  have
                        only values greater than 0.
                            ReverseLogarithmic

                        Hyperparameter  tuning  searches  the  values  in  the
                        hyperparameter range by using  a  reverse  logarithmic
                        scale.

                        Reverse logarithmic scaling works only for ranges that
                        are entirely within the range 0<=x<1.0.

              CategoricalParameterRanges -> (list)
                 The array of  CategoricalParameterRange objects that  specify
                 ranges  of  categorical hyperparameters that a hyperparameter
                 tuning job searches.

                 (structure)
                     A list of categorical hyperparameters to tune.

                     Name -> (string)
                        The name of the categorical hyperparameter to tune.

                     Values -> (list)
                        A list of the categories for the hyperparameter.

                        (string)

          TrainingJobEarlyStoppingType -> (string)
              Specifies whether  to  use  early  stopping  for  training  jobs
              launched  by  the  hyperparameter tuning job. This can be one of
              the following values (the default value is OFF ):
                 OFF

              Training jobs launched by the hyperparameter tuning job  do  not
              use early stopping.
                 AUTO

              Amazon SageMaker stops training jobs launched by the hyperparam-
              eter tuning job when they are unlikely to  perform  better  than
              previously  completed  training  jobs. For more information, see
              Stop Training Jobs Early .

          TuningJobCompletionCriteria -> (structure)
              The tuning job's completion criteria.

              TargetObjectiveMetricValue -> (float)
                 The value of the objective metric.

       JSON Syntax:

          {
            "Strategy": "Bayesian"|"Random",
            "HyperParameterTuningJobObjective": {
              "Type": "Maximize"|"Minimize",
              "MetricName": "string"
            },
            "ResourceLimits": {
              "MaxNumberOfTrainingJobs": integer,
              "MaxParallelTrainingJobs": integer
            },
            "ParameterRanges": {
              "IntegerParameterRanges": [
                {
                  "Name": "string",
                  "MinValue": "string",
                  "MaxValue": "string",
                  "ScalingType": "Auto"|"Linear"|"Logarithmic"|"ReverseLogarithmic"
                }
                ...
              ],
              "ContinuousParameterRanges": [
                {
                  "Name": "string",
                  "MinValue": "string",
                  "MaxValue": "string",
                  "ScalingType": "Auto"|"Linear"|"Logarithmic"|"ReverseLogarithmic"
                }
                ...
              ],
              "CategoricalParameterRanges": [
                {
                  "Name": "string",
                  "Values": ["string", ...]
                }
                ...
              ]
            },
            "TrainingJobEarlyStoppingType": "Off"|"Auto",
            "TuningJobCompletionCriteria": {
              "TargetObjectiveMetricValue": float
            }
          }

       --training-job-definition (structure)
          The  HyperParameterTrainingJobDefinition object that  describes  the
          training jobs that this tuning job launches, including static hyper-
          parameters, input data  configuration,  output  data  configuration,
          resource configuration, and stopping condition.

          DefinitionName -> (string)
              The job definition name.

          TuningObjective -> (structure)
              Defines  the  objective  metric for a hyperparameter tuning job.
              Hyperparameter tuning uses the value of this metric to  evaluate
              the training jobs it launches, and returns the training job that
              results in either the highest or lowest value for  this  metric,
              depending on the value you specify for the Type parameter.

              Type -> (string)
                 Whether to minimize or maximize the objective metric.

              MetricName -> (string)
                 The name of the metric to use for the objective metric.

          HyperParameterRanges -> (structure)
              Specifies  ranges of integer, continuous, and categorical hyper-
              parameters that a hyperparameter tuning job searches. The hyper-
              parameter  tuning job launches training jobs with hyperparameter
              values within these ranges to find  the  combination  of  values
              that  result  in  the  training job with the best performance as
              measured by the objective metric of  the  hyperparameter  tuning
              job.

              NOTE:
                 You can specify a maximum of 20 hyperparameters that a hyper-
                 parameter tuning job can search over. Every possible value of
                 a categorical parameter range counts against this limit.

              IntegerParameterRanges -> (list)
                 The  array  of   IntegerParameterRange  objects  that specify
                 ranges of integer hyperparameters that a hyperparameter  tun-
                 ing job searches.

                 (structure)
                     For  a  hyperparameter of the integer type, specifies the
                     range that a hyperparameter tuning job searches.

                     Name -> (string)
                        The name of the hyperparameter to search.

                     MinValue -> (string)
                        The minimum value of the hyperparameter to search.

                     MaxValue -> (string)
                        The maximum value of the hyperparameter to search.

                     ScalingType -> (string)
                        The scale that hyperparameter tuning  uses  to  search
                        the hyperparameter range. For information about choos-
                        ing a hyperparameter scale, see Hyperparameter Scaling
                        . One of the following values:
                            Auto

                        Amazon  SageMaker  hyperparameter  tuning  chooses the
                        best scale for the hyperparameter.
                            Linear

                        Hyperparameter  tuning  searches  the  values  in  the
                        hyperparameter range by using a linear scale.
                            Logarithmic

                        Hyperparameter  tuning  searches  the  values  in  the
                        hyperparameter range by using a logarithmic scale.

                        Logarithmic scaling works only for  ranges  that  have
                        only values greater than 0.

              ContinuousParameterRanges -> (list)
                 The  array  of  ContinuousParameterRange objects that specify
                 ranges of continuous hyperparameters  that  a  hyperparameter
                 tuning job searches.

                 (structure)
                     A list of continuous hyperparameters to tune.

                     Name -> (string)
                        The name of the continuous hyperparameter to tune.

                     MinValue -> (string)
                        The  minimum  value for the hyperparameter. The tuning
                        job uses floating-point values between this value  and
                        MaxValue for tuning.

                     MaxValue -> (string)
                        The  maximum  value for the hyperparameter. The tuning
                        job uses floating-point values between MinValue  value
                        and this value for tuning.

                     ScalingType -> (string)
                        The  scale  that  hyperparameter tuning uses to search
                        the hyperparameter range. For information about choos-
                        ing a hyperparameter scale, see Hyperparameter Scaling
                        . One of the following values:
                            Auto

                        Amazon SageMaker  hyperparameter  tuning  chooses  the
                        best scale for the hyperparameter.
                            Linear

                        Hyperparameter  tuning  searches  the  values  in  the
                        hyperparameter range by using a linear scale.
                            Logarithmic

                        Hyperparameter  tuning  searches  the  values  in  the
                        hyperparameter range by using a logarithmic scale.

                        Logarithmic  scaling  works  only for ranges that have
                        only values greater than 0.
                            ReverseLogarithmic

                        Hyperparameter  tuning  searches  the  values  in  the
                        hyperparameter  range  by  using a reverse logarithmic
                        scale.

                        Reverse logarithmic scaling works only for ranges that
                        are entirely within the range 0<=x<1.0.

              CategoricalParameterRanges -> (list)
                 The  array of  CategoricalParameterRange objects that specify
                 ranges of categorical hyperparameters that  a  hyperparameter
                 tuning job searches.

                 (structure)
                     A list of categorical hyperparameters to tune.

                     Name -> (string)
                        The name of the categorical hyperparameter to tune.

                     Values -> (list)
                        A list of the categories for the hyperparameter.

                        (string)

          StaticHyperParameters -> (map)
              Specifies  the  values of hyperparameters that do not change for
              the tuning job.

              key -> (string)

              value -> (string)

          AlgorithmSpecification -> (structure)
              The  HyperParameterAlgorithmSpecification object that  specifies
              the  resource  algorithm  to  use for the training jobs that the
              tuning job launches.

              TrainingImage -> (string)
                 The registry path of  the  Docker  image  that  contains  the
                 training  algorithm.  For  information  about Docker registry
                 paths for built-in algorithms,  see  Algorithms  Provided  by
                 Amazon  SageMaker:  Common Parameters . Amazon SageMaker sup-
                 ports  both  registry/repository[:tag]  and  registry/reposi-
                 tory[@digest]  image  path formats. For more information, see
                 Using Your Own Algorithms with Amazon SageMaker .

              TrainingInputMode -> (string)
                 The training input mode that the algorithm supports. For more
                 information about input modes, see Algorithms .
                     Pipe mode

                 If  an algorithm supports Pipe mode, Amazon SageMaker streams
                 data directly from Amazon S3 to the container.
                     File mode

                 If an algorithm supports File mode, SageMaker  downloads  the
                 training  data  from S3 to the provisioned ML storage volume,
                 and mounts the directory to the Docker volume for the  train-
                 ing container.

                 You  must  provision  the  ML  storage volume with sufficient
                 capacity to accommodate the data downloaded from S3. In addi-
                 tion  to the training data, the ML storage volume also stores
                 the output model. The algorithm container uses the ML storage
                 volume to also store intermediate information, if any.

                 For distributed algorithms, training data is distributed uni-
                 formly. Your training duration is predictable  if  the  input
                 data objects sizes are approximately the same. SageMaker does
                 not split the files any further for model  training.  If  the
                 object  sizes  are  skewed,  training won't be optimal as the
                 data distribution is also skewed when one host in a  training
                 cluster  is  overloaded, thus becoming a bottleneck in train-
                 ing.
                     FastFile mode

                 If an algorithm supports  FastFile  mode,  SageMaker  streams
                 data  directly from S3 to the container with no code changes,
                 and provides file system access to the data. Users can author
                 their training script to interact with these files as if they
                 were stored on disk.
                     FastFile mode works best when the data  is  read  sequen-
                     tially.  Augmented  manifest  files aren't supported. The
                     startup time is lower when there are fewer files  in  the
                     S3 bucket provided.

              AlgorithmName -> (string)
                 The name of the resource algorithm to use for the hyperparam-
                 eter tuning job. If you specify a value for  this  parameter,
                 do not specify a value for TrainingImage .

              MetricDefinitions -> (list)
                 An  array  of  MetricDefinition objects that specify the met-
                 rics that the algorithm emits.

                 (structure)
                     Specifies a metric that the training algorithm writes  to
                     stderr  or stdout . Amazon SageMakerhyperparameter tuning
                     captures all defined metrics. You specify one metric that
                     a  hyperparameter tuning job uses as its objective metric
                     to choose the best training job.

                     Name -> (string)
                        The name of the metric.

                     Regex -> (string)
                        A regular expression that searches  the  output  of  a
                        training  job  and  gets  the value of the metric. For
                        more information about using  regular  expressions  to
                        define metrics, see Defining Objective Metrics .

          RoleArn -> (string)
              The  Amazon  Resource Name (ARN) of the IAM role associated with
              the training jobs that the tuning job launches.

          InputDataConfig -> (list)
              An array of  Channel objects that  specify  the  input  for  the
              training jobs that the tuning job launches.

              (structure)
                 A  channel  is  a named input source that training algorithms
                 can consume.

                 ChannelName -> (string)
                     The name of the channel.

                 DataSource -> (structure)
                     The location of the channel data.

                     S3DataSource -> (structure)
                        The S3 location of the data source that is  associated
                        with a channel.

                        S3DataType -> (string)
                            If  you  choose  S3Prefix , S3Uri identifies a key
                            name prefix. Amazon  SageMaker  uses  all  objects
                            that match the specified key name prefix for model
                            training.

                            If you choose ManifestFile , S3Uri  identifies  an
                            object  that  is a manifest file containing a list
                            of object keys that you want Amazon  SageMaker  to
                            use for model training.

                            If  you choose AugmentedManifestFile , S3Uri iden-
                            tifies an object that  is  an  augmented  manifest
                            file  in JSON lines format. This file contains the
                            data you want to use for model training.  Augment-
                            edManifestFile  can  only be used if the Channel's
                            input mode is Pipe .

                        S3Uri -> (string)
                            Depending  on  the   value   specified   for   the
                            S3DataType  ,  identifies either a key name prefix
                            or a manifest. For example:

                            o A  key  name  prefix  might  look   like   this:
                              s3://bucketname/exampleprefix

                            o A  manifest  might  look like this: s3://bucket-
                              name/example.manifest    A  manifest  is  an  S3
                              object  which  is  a  JSON file consisting of an
                              array of elements. The first element is a prefix
                              which is followed by one or more suffixes. Sage-
                              Maker appends the suffix elements to the  prefix
                              to  get a full set of S3Uri . Note that the pre-
                              fix must be a valid non-empty  S3Uri  that  pre-
                              cludes  users  from  specifying a manifest whose
                              individual S3Uri is sourced  from  different  S3
                              buckets.  The  following  code  example  shows a
                              valid manifest format:   [ {"prefix": "s3://cus-
                              tomer_bucket/some/prefix/"},              "rela-
                              tive/path/to/custdata-1",                 "rela-
                              tive/path/custdata-2",         ...        "rela-
                              tive/path/custdata-N"    ]   This JSON is equiv-
                              alent  to  the  following S3Uri list:  s3://cus-
                              tomer_bucket/some/prefix/relative/path/to/cust-
                              data-1    s3://customer_bucket/some/prefix/rela-
                              tive/path/custdata-2        ...        s3://cus-
                              tomer_bucket/some/prefix/relative/path/cust-
                              data-N   The complete set of S3Uri in this mani-
                              fest  is the input data for the channel for this
                              data source. The object that each  S3Uri  points
                              to  must be readable by the IAM role that Amazon
                              SageMaker uses to perform tasks on your  behalf.

                        S3DataDistributionType -> (string)
                            If  you  want  Amazon  SageMaker  to replicate the
                            entire dataset on each ML compute instance that is
                            launched  for  model training, specify FullyRepli-
                            cated .

                            If you want Amazon SageMaker to replicate a subset
                            of  data  on  each  ML  compute  instance  that is
                            launched  for  model  training,  specify  Sharded-
                            ByS3Key  .  If  there  are  n ML compute instances
                            launched for a training job,  each  instance  gets
                            approximately  1/n of the number of S3 objects. In
                            this case, model training  on  each  machine  uses
                            only the subset of training data.

                            Don't  choose more ML compute instances for train-
                            ing than available S3 objects.  If  you  do,  some
                            nodes  won't  get  any  data  and you will pay for
                            nodes that aren't getting any training data.  This
                            applies  in both File and Pipe modes. Keep this in
                            mind when developing algorithms.

                            In distributed training, where you use multiple ML
                            compute  EC2  instances, you might choose Sharded-
                            ByS3Key . If the algorithm requires copying train-
                            ing  data to the ML storage volume (when Training-
                            InputMode is set to File ), this copies 1/n of the
                            number of objects.

                        AttributeNames -> (list)
                            A  list of one or more attribute names to use that
                            are found in a specified augmented manifest  file.

                            (string)

                     FileSystemDataSource -> (structure)
                        The file system that is associated with a channel.

                        FileSystemId -> (string)
                            The file system id.

                        FileSystemAccessMode -> (string)
                            The  access  mode  of  the  mount of the directory
                            associated with the channel. A  directory  can  be
                            mounted   either   in   ro   (read-only)   or   rw
                            (read-write) mode.

                        FileSystemType -> (string)
                            The file system type.

                        DirectoryPath -> (string)
                            The full path to the directory to  associate  with
                            the channel.

                 ContentType -> (string)
                     The MIME type of the data.

                 CompressionType -> (string)
                     If training data is compressed, the compression type. The
                     default value is None . CompressionType is used  only  in
                     Pipe  input mode. In File mode, leave this field unset or
                     set it to None.

                 RecordWrapperType -> (string)
                     Specify RecordIO as the value when input data is  in  raw
                     format  but  the training algorithm requires the RecordIO
                     format. In this case, Amazon SageMaker wraps  each  indi-
                     vidual  S3 object in a RecordIO record. If the input data
                     is already in RecordIO format, you don't need to set this
                     attribute.  For  more  information,  see Create a Dataset
                     Using RecordIO .

                     In File mode, leave this field unset or set it to None.

                 InputMode -> (string)
                     (Optional) The input mode to use for the data channel  in
                     a  training job. If you don't set a value for InputMode ,
                     Amazon SageMaker uses the value set for TrainingInputMode
                     .  Use  this  parameter to override the TrainingInputMode
                     setting in a   AlgorithmSpecification  request  when  you
                     have a channel that needs a different input mode from the
                     training job's general setting. To download the data from
                     Amazon  Simple  Storage Service (Amazon S3) to the provi-
                     sioned ML storage volume, and mount the  directory  to  a
                     Docker  volume,  use  File  input  mode.  To  stream data
                     directly from Amazon S3 to  the  container,  choose  Pipe
                     input mode.

                     To  use  a  model  for  incremental training, choose File
                     input model.

                 ShuffleConfig -> (structure)
                     A configuration for a shuffle option for input data in  a
                     channel.  If you use S3Prefix for S3DataType , this shuf-
                     fles the results of the S3 key prefix matches. If you use
                     ManifestFile  ,  the order of the S3 object references in
                     the ManifestFile is shuffled. If you  use  AugmentedMani-
                     festFile  , the order of the JSON lines in the Augmented-
                     ManifestFile is shuffled. The shuffling order  is  deter-
                     mined using the Seed value.

                     For  Pipe  input  mode, shuffling is done at the start of
                     every epoch. With large datasets this  ensures  that  the
                     order  of  the training data is different for each epoch,
                     it helps reduce  bias  and  possible  overfitting.  In  a
                     multi-node  training  job  when ShuffleConfig is combined
                     with S3DataDistributionType of ShardedByS3Key , the  data
                     is  shuffled  across  nodes so that the content sent to a
                     particular node on the first epoch might  be  sent  to  a
                     different node on the second epoch.

                     Seed -> (long)
                        Determines the shuffling order in ShuffleConfig value.

          VpcConfig -> (structure)
              The  VpcConfig object that specifies the VPC that you  want  the
              training  jobs  that  this hyperparameter tuning job launches to
              connect to. Control access to and from your  training  container
              by configuring the VPC. For more information, see Protect Train-
              ing Jobs by Using an Amazon Virtual Private Cloud .

              SecurityGroupIds -> (list)
                 The VPC security group IDs, in the form sg-xxxxxxxx.  Specify
                 the security groups for the VPC that is specified in the Sub-
                 nets field.

                 (string)

              Subnets -> (list)
                 The ID of the subnets in the VPC to which you want to connect
                 your  training job or model. For information about the avail-
                 ability of specific instance types,  see  Supported  Instance
                 Types and Availability Zones .

                 (string)

          OutputDataConfig -> (structure)
              Specifies the path to the Amazon S3 bucket where you store model
              artifacts from the training jobs that the tuning job launches.

              KmsKeyId -> (string)
                 The Amazon Web Services Key Management  Service  (Amazon  Web
                 Services  KMS)  key that Amazon SageMaker uses to encrypt the
                 model artifacts at rest using Amazon S3  server-side  encryp-
                 tion. The KmsKeyId can be any of the following formats:

                 o // KMS Key ID  "1234abcd-12ab-34cd-56ef-1234567890ab"

                 o //    Amazon   Resource   Name   (ARN)   of   a   KMS   Key
                   "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

                 o // KMS Key Alias  "alias/ExampleAlias"

                 o //   Amazon   Resource  Name  (ARN)  of  a  KMS  Key  Alias
                   "arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"

                 If you use a KMS key ID or an alias of your KMS key, the Ama-
                 zon SageMaker execution role must include permissions to call
                 kms:Encrypt . If you don't provide a KMS key ID, Amazon Sage-
                 Maker  uses the default KMS key for Amazon S3 for your role's
                 account. Amazon SageMaker uses  server-side  encryption  with
                 KMS-managed  keys  for OutputDataConfig . If you use a bucket
                 policy with  an  s3:PutObject  permission  that  only  allows
                 objects with server-side encryption, set the condition key of
                 s3:x-amz-server-side-encryption  to  "aws:kms"  .  For   more
                 information,  see  KMS-Managed  Encryption Keys in the Amazon
                 Simple Storage Service Developer Guide.

                 The KMS key policy must grant permission to the IAM role that
                 you  specify in your CreateTrainingJob , CreateTransformJob ,
                 or CreateHyperParameterTuningJob requests. For more  informa-
                 tion,  see  Using  Key Policies in Amazon Web Services KMS in
                 the Amazon Web  Services  Key  Management  Service  Developer
                 Guide .

              S3OutputPath -> (string)
                 Identifies  the  S3  path  where you want Amazon SageMaker to
                 store     the     model     artifacts.      For      example,
                 s3://bucket-name/key-name-prefix .

          ResourceConfig -> (structure)
              The  resources, including the compute instances and storage vol-
              umes, to use for the training jobs that the tuning job launches.

              Storage  volumes  store  model artifacts and incremental states.
              Training algorithms might also use storage volumes  for  scratch
              space. If you want Amazon SageMaker to use the storage volume to
              store the training data, choose File as the TrainingInputMode in
              the  algorithm  specification.  For  distributed  training algo-
              rithms, specify an instance count greater than 1.

              InstanceType -> (string)
                 The ML compute instance type.

              InstanceCount -> (integer)
                 The number of ML compute instances to  use.  For  distributed
                 training, provide a value greater than 1.

              VolumeSizeInGB -> (integer)
                 The size of the ML storage volume that you want to provision.

                 ML storage volumes  store  model  artifacts  and  incremental
                 states.  Training  algorithms  might  also use the ML storage
                 volume for scratch space. If you want to store  the  training
                 data in the ML storage volume, choose File as the TrainingIn-
                 putMode in the algorithm specification.

                 You must specify sufficient ML storage for your scenario.

                 NOTE:
                     Amazon SageMaker supports only the  General  Purpose  SSD
                     (gp2) ML storage volume type.

                 NOTE:
                     Certain  Nitro-based instances include local storage with
                     a fixed total size, dependent on the instance type.  When
                     using  these  instances  for  training,  Amazon SageMaker
                     mounts the local instance storage instead of  Amazon  EBS
                     gp2  storage.  You can't request a VolumeSizeInGB greater
                     than the total size of the local instance storage.

                     For a list of instance types that support local  instance
                     storage,  including the total size per instance type, see
                     Instance Store Volumes .

              VolumeKmsKeyId -> (string)
                 The Amazon Web Services KMS key that Amazon SageMaker uses to
                 encrypt data on the storage volume attached to the ML compute
                 instance(s) that run the training job.

                 NOTE:
                     Certain  Nitro-based  instances  include  local  storage,
                     dependent on the instance type. Local storage volumes are
                     encrypted using a hardware module on  the  instance.  You
                     can't  request  a  VolumeKmsKeyId  when using an instance
                     type with local storage.

                     For a list of instance types that support local  instance
                     storage, see Instance Store Volumes .

                     For more information about local instance storage encryp-
                     tion, see SSD Instance Store Volumes .

                 The VolumeKmsKeyId can be in any of the following formats:

                 o // KMS Key ID  "1234abcd-12ab-34cd-56ef-1234567890ab"

                 o //   Amazon   Resource   Name   (ARN)   of   a   KMS    Key
                   "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

          StoppingCondition -> (structure)
              Specifies a limit to how long a  model  hyperparameter  training
              job  can run. It also specifies how long a managed spot training
              job has to complete. When the job reaches the time limit, Amazon
              SageMaker  ends  the  training  job.  Use  this API to cap model
              training costs.

              MaxRuntimeInSeconds -> (integer)
                 The maximum length of time, in seconds, that  a  training  or
                 compilation job can run.

                 For  compilation  jobs,  if  the job does not complete during
                 this time, you will receive a  TimeOut  error.  We  recommend
                 starting  with 900 seconds and increase as necessary based on
                 your model.

                 For all other jobs, if the job does not complete during  this
                 time,  Amazon  SageMaker  ends the job. When RetryStrategy is
                 specified in the job request,  MaxRuntimeInSeconds  specifies
                 the  maximum  time for all of the attempts in total, not each
                 individual attempt. The default value is 1 day.  The  maximum
                 value is 28 days.

              MaxWaitTimeInSeconds -> (integer)
                 The  maximum  length of time, in seconds, that a managed Spot
                 training job has to complete. It is the amount of time  spent
                 waiting for Spot capacity plus the amount of time the job can
                 run. It must be equal to or greater than  MaxRuntimeInSeconds
                 . If the job does not complete during this time, Amazon Sage-
                 Maker ends the job.

                 When RetryStrategy is specified in the job request,  MaxWait-
                 TimeInSeconds  specifies  the  maximum  time  for  all of the
                 attempts in total, not each individual attempt.

          EnableNetworkIsolation -> (boolean)
              Isolates the training container. No inbound or outbound  network
              calls  can  be  made,  except  for  calls between peers within a
              training cluster for distributed training. If network  isolation
              is used for training jobs that are configured to use a VPC, Ama-
              zon SageMaker downloads and  uploads  customer  data  and  model
              artifacts  through the specified VPC, but the training container
              does not have network access.

          EnableInterContainerTrafficEncryption -> (boolean)
              To encrypt all communications between ML  compute  instances  in
              distributed  training, choose True . Encryption provides greater
              security for  distributed  training,  but  training  might  take
              longer. How long it takes depends on the amount of communication
              between compute instances, especially if you use a deep learning
              algorithm in distributed training.

          EnableManagedSpotTraining -> (boolean)
              A  Boolean  indicating  whether managed spot training is enabled
              (True ) or not (False ).

          CheckpointConfig -> (structure)
              Contains information about the output location for managed  spot
              training checkpoint data.

              S3Uri -> (string)
                 Identifies  the  S3  path  where you want Amazon SageMaker to
                 store           checkpoints.           For           example,
                 s3://bucket-name/key-name-prefix .

              LocalPath -> (string)
                 (Optional) The local directory where checkpoints are written.
                 The default directory is /opt/ml/checkpoints/ .

          RetryStrategy -> (structure)
              The number of times to retry the job when the job fails  due  to
              an InternalServerError .

              MaximumRetryAttempts -> (integer)
                 The  number  of  times  to  retry  the  job.  When the job is
                 retried, it's SecondaryStatus is changed to STARTING .

       JSON Syntax:

          {
            "DefinitionName": "string",
            "TuningObjective": {
              "Type": "Maximize"|"Minimize",
              "MetricName": "string"
            },
            "HyperParameterRanges": {
              "IntegerParameterRanges": [
                {
                  "Name": "string",
                  "MinValue": "string",
                  "MaxValue": "string",
                  "ScalingType": "Auto"|"Linear"|"Logarithmic"|"ReverseLogarithmic"
                }
                ...
              ],
              "ContinuousParameterRanges": [
                {
                  "Name": "string",
                  "MinValue": "string",
                  "MaxValue": "string",
                  "ScalingType": "Auto"|"Linear"|"Logarithmic"|"ReverseLogarithmic"
                }
                ...
              ],
              "CategoricalParameterRanges": [
                {
                  "Name": "string",
                  "Values": ["string", ...]
                }
                ...
              ]
            },
            "StaticHyperParameters": {"string": "string"
              ...},
            "AlgorithmSpecification": {
              "TrainingImage": "string",
              "TrainingInputMode": "Pipe"|"File"|"FastFile",
              "AlgorithmName": "string",
              "MetricDefinitions": [
                {
                  "Name": "string",
                  "Regex": "string"
                }
                ...
              ]
            },
            "RoleArn": "string",
            "InputDataConfig": [
              {
                "ChannelName": "string",
                "DataSource": {
                  "S3DataSource": {
                    "S3DataType": "ManifestFile"|"S3Prefix"|"AugmentedManifestFile",
                    "S3Uri": "string",
                    "S3DataDistributionType": "FullyReplicated"|"ShardedByS3Key",
                    "AttributeNames": ["string", ...]
                  },
                  "FileSystemDataSource": {
                    "FileSystemId": "string",
                    "FileSystemAccessMode": "rw"|"ro",
                    "FileSystemType": "EFS"|"FSxLustre",
                    "DirectoryPath": "string"
                  }
                },
                "ContentType": "string",
                "CompressionType": "None"|"Gzip",
                "RecordWrapperType": "None"|"RecordIO",
                "InputMode": "Pipe"|"File"|"FastFile",
                "ShuffleConfig": {
                  "Seed": long
                }
              }
              ...
            ],
            "VpcConfig": {
              "SecurityGroupIds": ["string", ...],
              "Subnets": ["string", ...]
            },
            "OutputDataConfig": {
              "KmsKeyId": "string",
              "S3OutputPath": "string"
            },
            "ResourceConfig": {
              "InstanceType": "ml.m4.xlarge"|"ml.m4.2xlarge"|"ml.m4.4xlarge"|"ml.m4.10xlarge"|"ml.m4.16xlarge"|"ml.g4dn.xlarge"|"ml.g4dn.2xlarge"|"ml.g4dn.4xlarge"|"ml.g4dn.8xlarge"|"ml.g4dn.12xlarge"|"ml.g4dn.16xlarge"|"ml.m5.large"|"ml.m5.xlarge"|"ml.m5.2xlarge"|"ml.m5.4xlarge"|"ml.m5.12xlarge"|"ml.m5.24xlarge"|"ml.c4.xlarge"|"ml.c4.2xlarge"|"ml.c4.4xlarge"|"ml.c4.8xlarge"|"ml.p2.xlarge"|"ml.p2.8xlarge"|"ml.p2.16xlarge"|"ml.p3.2xlarge"|"ml.p3.8xlarge"|"ml.p3.16xlarge"|"ml.p3dn.24xlarge"|"ml.p4d.24xlarge"|"ml.c5.xlarge"|"ml.c5.2xlarge"|"ml.c5.4xlarge"|"ml.c5.9xlarge"|"ml.c5.18xlarge"|"ml.c5n.xlarge"|"ml.c5n.2xlarge"|"ml.c5n.4xlarge"|"ml.c5n.9xlarge"|"ml.c5n.18xlarge"|"ml.g5.xlarge"|"ml.g5.2xlarge"|"ml.g5.4xlarge"|"ml.g5.8xlarge"|"ml.g5.16xlarge"|"ml.g5.12xlarge"|"ml.g5.24xlarge"|"ml.g5.48xlarge",
              "InstanceCount": integer,
              "VolumeSizeInGB": integer,
              "VolumeKmsKeyId": "string"
            },
            "StoppingCondition": {
              "MaxRuntimeInSeconds": integer,
              "MaxWaitTimeInSeconds": integer
            },
            "EnableNetworkIsolation": true|false,
            "EnableInterContainerTrafficEncryption": true|false,
            "EnableManagedSpotTraining": true|false,
            "CheckpointConfig": {
              "S3Uri": "string",
              "LocalPath": "string"
            },
            "RetryStrategy": {
              "MaximumRetryAttempts": integer
            }
          }

       --training-job-definitions (list)
          A list of the  HyperParameterTrainingJobDefinition objects  launched
          for this tuning job.

          (structure)
              Defines  the  training  jobs launched by a hyperparameter tuning
              job.

              DefinitionName -> (string)
                 The job definition name.

              TuningObjective -> (structure)
                 Defines the objective metric for a hyperparameter tuning job.
                 Hyperparameter tuning uses the value of this metric to evalu-
                 ate the training jobs it launches, and returns  the  training
                 job  that  results  in either the highest or lowest value for
                 this metric, depending on the value you specify for the  Type
                 parameter.

                 Type -> (string)
                     Whether to minimize or maximize the objective metric.

                 MetricName -> (string)
                     The name of the metric to use for the objective metric.

              HyperParameterRanges -> (structure)
                 Specifies  ranges  of  integer,  continuous,  and categorical
                 hyperparameters that a hyperparameter  tuning  job  searches.
                 The  hyperparameter  tuning  job  launches training jobs with
                 hyperparameter values within these ranges to find the  combi-
                 nation  of  values  that  result in the training job with the
                 best performance as measured by the objective metric  of  the
                 hyperparameter tuning job.

                 NOTE:
                     You  can  specify  a maximum of 20 hyperparameters that a
                     hyperparameter tuning job can search over. Every possible
                     value  of  a  categorical  parameter range counts against
                     this limit.

                 IntegerParameterRanges -> (list)
                     The array of  IntegerParameterRange objects that  specify
                     ranges  of  integer hyperparameters that a hyperparameter
                     tuning job searches.

                     (structure)
                        For a hyperparameter of the  integer  type,  specifies
                        the range that a hyperparameter tuning job searches.

                        Name -> (string)
                            The name of the hyperparameter to search.

                        MinValue -> (string)
                            The minimum value of the hyperparameter to search.

                        MaxValue -> (string)
                            The maximum value of the hyperparameter to search.

                        ScalingType -> (string)
                            The  scale  that  hyperparameter  tuning  uses  to
                            search the hyperparameter range.  For  information
                            about   choosing   a   hyperparameter  scale,  see
                            Hyperparameter Scaling . One of the following val-
                            ues:
                               Auto

                            Amazon SageMaker hyperparameter tuning chooses the
                            best scale for the hyperparameter.
                               Linear

                            Hyperparameter tuning searches the values  in  the
                            hyperparameter range by using a linear scale.
                               Logarithmic

                            Hyperparameter  tuning  searches the values in the
                            hyperparameter range by using a logarithmic scale.

                            Logarithmic  scaling  works  only  for ranges that
                            have only values greater than 0.

                 ContinuousParameterRanges -> (list)
                     The array of  ContinuousParameterRange objects that spec-
                     ify  ranges of continuous hyperparameters that a hyperpa-
                     rameter tuning job searches.

                     (structure)
                        A list of continuous hyperparameters to tune.

                        Name -> (string)
                            The name of the continuous hyperparameter to tune.

                        MinValue -> (string)
                            The minimum value for the hyperparameter. The tun-
                            ing job uses floating-point  values  between  this
                            value and MaxValue for tuning.

                        MaxValue -> (string)
                            The maximum value for the hyperparameter. The tun-
                            ing job uses floating-point  values  between  Min-
                            Value value and this value for tuning.

                        ScalingType -> (string)
                            The  scale  that  hyperparameter  tuning  uses  to
                            search the hyperparameter range.  For  information
                            about   choosing   a   hyperparameter  scale,  see
                            Hyperparameter Scaling . One of the following val-
                            ues:
                               Auto

                            Amazon SageMaker hyperparameter tuning chooses the
                            best scale for the hyperparameter.
                               Linear

                            Hyperparameter tuning searches the values  in  the
                            hyperparameter range by using a linear scale.
                               Logarithmic

                            Hyperparameter  tuning  searches the values in the
                            hyperparameter range by using a logarithmic scale.

                            Logarithmic  scaling  works  only  for ranges that
                            have only values greater than 0.
                               ReverseLogarithmic

                            Hyperparameter tuning searches the values  in  the
                            hyperparameter  range by using a reverse logarith-
                            mic scale.

                            Reverse logarithmic scaling works only for  ranges
                            that are entirely within the range 0<=x<1.0.

                 CategoricalParameterRanges -> (list)
                     The  array  of   CategoricalParameterRange  objects  that
                     specify ranges  of  categorical  hyperparameters  that  a
                     hyperparameter tuning job searches.

                     (structure)
                        A list of categorical hyperparameters to tune.

                        Name -> (string)
                            The  name  of  the  categorical  hyperparameter to
                            tune.

                        Values -> (list)
                            A list of the categories for the hyperparameter.

                            (string)

              StaticHyperParameters -> (map)
                 Specifies the values of hyperparameters that  do  not  change
                 for the tuning job.

                 key -> (string)

                 value -> (string)

              AlgorithmSpecification -> (structure)
                 The   HyperParameterAlgorithmSpecification object that speci-
                 fies the resource algorithm to use for the training jobs that
                 the tuning job launches.

                 TrainingImage -> (string)
                     The  registry  path of the Docker image that contains the
                     training algorithm. For information about Docker registry
                     paths for built-in algorithms, see Algorithms Provided by
                     Amazon SageMaker: Common Parameters  .  Amazon  SageMaker
                     supports    both   registry/repository[:tag]   and   reg-
                     istry/repository[@digest] image path  formats.  For  more
                     information,  see  Using  Your Own Algorithms with Amazon
                     SageMaker .

                 TrainingInputMode -> (string)
                     The training input mode that the algorithm supports.  For
                     more information about input modes, see Algorithms .
                        Pipe mode

                     If  an  algorithm  supports  Pipe  mode, Amazon SageMaker
                     streams data directly from Amazon S3 to the container.
                        File mode

                     If an algorithm supports File mode,  SageMaker  downloads
                     the  training  data from S3 to the provisioned ML storage
                     volume, and mounts the directory to the Docker volume for
                     the training container.

                     You  must provision the ML storage volume with sufficient
                     capacity to accommodate the data downloaded from  S3.  In
                     addition to the training data, the ML storage volume also
                     stores the output model. The algorithm container uses the
                     ML storage volume to also store intermediate information,
                     if any.

                     For distributed algorithms, training data is  distributed
                     uniformly.  Your  training duration is predictable if the
                     input data objects  sizes  are  approximately  the  same.
                     SageMaker  does not split the files any further for model
                     training. If the object sizes are skewed, training  won't
                     be  optimal  as the data distribution is also skewed when
                     one host in a training cluster is overloaded, thus becom-
                     ing a bottleneck in training.
                        FastFile mode

                     If an algorithm supports FastFile mode, SageMaker streams
                     data directly from S3  to  the  container  with  no  code
                     changes,  and  provides  file  system access to the data.
                     Users can author their training script to  interact  with
                     these files as if they were stored on disk.
                        FastFile mode works best when the data is read sequen-
                        tially. Augmented manifest files aren't supported. The
                        startup  time  is  lower when there are fewer files in
                        the S3 bucket provided.

                 AlgorithmName -> (string)
                     The name of the resource algorithm to use for the  hyper-
                     parameter  tuning  job.  If  you specify a value for this
                     parameter, do not specify a value for TrainingImage .

                 MetricDefinitions -> (list)
                     An array of  MetricDefinition objects  that  specify  the
                     metrics that the algorithm emits.

                     (structure)
                        Specifies  a metric that the training algorithm writes
                        to stderr or stdout .  Amazon  SageMakerhyperparameter
                        tuning  captures  all defined metrics. You specify one
                        metric that a hyperparameter tuning job  uses  as  its
                        objective metric to choose the best training job.

                        Name -> (string)
                            The name of the metric.

                        Regex -> (string)
                            A regular expression that searches the output of a
                            training job and gets the value of the metric. For
                            more  information  about using regular expressions
                            to define metrics, see Defining Objective  Metrics
                            .

              RoleArn -> (string)
                 The  Amazon  Resource  Name  (ARN) of the IAM role associated
                 with the training jobs that the tuning job launches.

              InputDataConfig -> (list)
                 An array of  Channel objects that specify the input  for  the
                 training jobs that the tuning job launches.

                 (structure)
                     A  channel  is  a  named input source that training algo-
                     rithms can consume.

                     ChannelName -> (string)
                        The name of the channel.

                     DataSource -> (structure)
                        The location of the channel data.

                        S3DataSource -> (structure)
                            The S3 location of the data source that is associ-
                            ated with a channel.

                            S3DataType -> (string)
                               If you choose S3Prefix , S3Uri identifies a key
                               name prefix. Amazon SageMaker uses all  objects
                               that  match  the  specified key name prefix for
                               model training.

                               If you choose ManifestFile ,  S3Uri  identifies
                               an  object that is a manifest file containing a
                               list of object keys that you want Amazon  Sage-
                               Maker to use for model training.

                               If  you  choose  AugmentedManifestFile  , S3Uri
                               identifies an object that is an augmented mani-
                               fest  file in JSON lines format. This file con-
                               tains the data you want to use for model train-
                               ing.  AugmentedManifestFile can only be used if
                               the Channel's input mode is Pipe .

                            S3Uri -> (string)
                               Depending  on  the  value  specified  for   the
                               S3DataType  , identifies either a key name pre-
                               fix or a manifest. For example:

                               o A key  name  prefix  might  look  like  this:
                                 s3://bucketname/exampleprefix

                               o A manifest might look like this: s3://bucket-
                                 name/example.manifest   A manifest is  an  S3
                                 object  which is a JSON file consisting of an
                                 array of elements. The  first  element  is  a
                                 prefix  which is followed by one or more suf-
                                 fixes. SageMaker appends the suffix  elements
                                 to  the  prefix  to get a full set of S3Uri .
                                 Note  that  the  prefix  must  be   a   valid
                                 non-empty  S3Uri  that  precludes  users from
                                 specifying a manifest whose individual  S3Uri
                                 is  sourced  from  different  S3 buckets. The
                                 following code example shows a valid manifest
                                 format:       [     {"prefix":     "s3://cus-
                                 tomer_bucket/some/prefix/"},           "rela-
                                 tive/path/to/custdata-1",              "rela-
                                 tive/path/custdata-2",       ...       "rela-
                                 tive/path/custdata-N"     ]    This  JSON  is
                                 equivalent  to  the  following  S3Uri   list:
                                 s3://customer_bucket/some/prefix/rela-
                                 tive/path/to/custdata-1             s3://cus-
                                 tomer_bucket/some/prefix/relative/path/cust-
                                 data-2             ...              s3://cus-
                                 tomer_bucket/some/prefix/relative/path/cust-
                                 data-N   The complete set of  S3Uri  in  this
                                 manifest  is  the  input data for the channel
                                 for this data source. The  object  that  each
                                 S3Uri  points  to must be readable by the IAM
                                 role that Amazon SageMaker  uses  to  perform
                                 tasks on your behalf.

                            S3DataDistributionType -> (string)
                               If  you  want Amazon SageMaker to replicate the
                               entire dataset on each ML compute instance that
                               is  launched  for  model training, specify Ful-
                               lyReplicated .

                               If you want Amazon  SageMaker  to  replicate  a
                               subset of data on each ML compute instance that
                               is launched for model training, specify  Shard-
                               edByS3Key . If there are n ML compute instances
                               launched for a training job, each instance gets
                               approximately  1/n of the number of S3 objects.
                               In this case, model training  on  each  machine
                               uses only the subset of training data.

                               Don't  choose  more  ML  compute  instances for
                               training than available S3 objects. If you  do,
                               some  nodes won't get any data and you will pay
                               for nodes  that  aren't  getting  any  training
                               data. This applies in both File and Pipe modes.
                               Keep this in mind when developing algorithms.

                               In distributed training, where you use multiple
                               ML  compute  EC2  instances,  you  might choose
                               ShardedByS3Key  .  If  the  algorithm  requires
                               copying  training data to the ML storage volume
                               (when TrainingInputMode is set to File ),  this
                               copies 1/n of the number of objects.

                            AttributeNames -> (list)
                               A  list  of  one or more attribute names to use
                               that are found in a specified  augmented  mani-
                               fest file.

                               (string)

                        FileSystemDataSource -> (structure)
                            The file system that is associated with a channel.

                            FileSystemId -> (string)
                               The file system id.

                            FileSystemAccessMode -> (string)
                               The access mode of the mount of  the  directory
                               associated with the channel. A directory can be
                               mounted  either  in  ro   (read-only)   or   rw
                               (read-write) mode.

                            FileSystemType -> (string)
                               The file system type.

                            DirectoryPath -> (string)
                               The  full  path  to  the directory to associate
                               with the channel.

                     ContentType -> (string)
                        The MIME type of the data.

                     CompressionType -> (string)
                        If training data is compressed, the compression  type.
                        The  default  value  is None . CompressionType is used
                        only in Pipe input mode.  In  File  mode,  leave  this
                        field unset or set it to None.

                     RecordWrapperType -> (string)
                        Specify  RecordIO  as  the value when input data is in
                        raw format but the  training  algorithm  requires  the
                        RecordIO  format. In this case, Amazon SageMaker wraps
                        each individual S3 object in a RecordIO record. If the
                        input  data  is  already in RecordIO format, you don't
                        need to set this attribute. For more information,  see
                        Create a Dataset Using RecordIO .

                        In  File  mode,  leave  this  field unset or set it to
                        None.

                     InputMode -> (string)
                        (Optional) The input mode to use for the data  channel
                        in a training job. If you don't set a value for Input-
                        Mode , Amazon SageMaker uses the value set for  Train-
                        ingInputMode  .  Use  this  parameter  to override the
                        TrainingInputMode setting in a  AlgorithmSpecification
                        request when you have a channel that needs a different
                        input mode from the training job's general setting. To
                        download  the  data from Amazon Simple Storage Service
                        (Amazon S3) to the provisioned ML storage volume,  and
                        mount the directory to a Docker volume, use File input
                        mode. To stream data directly from Amazon  S3  to  the
                        container, choose Pipe input mode.

                        To  use  a model for incremental training, choose File
                        input model.

                     ShuffleConfig -> (structure)
                        A configuration for a shuffle option for input data in
                        a  channel.  If you use S3Prefix for S3DataType , this
                        shuffles the results of the S3 key prefix matches.  If
                        you use ManifestFile , the order of the S3 object ref-
                        erences in the ManifestFile is shuffled.  If  you  use
                        AugmentedManifestFile , the order of the JSON lines in
                        the AugmentedManifestFile is shuffled.  The  shuffling
                        order is determined using the Seed value.

                        For Pipe input mode, shuffling is done at the start of
                        every epoch. With large datasets this ensures that the
                        order  of  the  training  data  is  different for each
                        epoch, it helps reduce bias and possible  overfitting.
                        In  a  multi-node  training  job when ShuffleConfig is
                        combined with S3DataDistributionType of ShardedByS3Key
                        ,  the  data is shuffled across nodes so that the con-
                        tent sent to a particular  node  on  the  first  epoch
                        might be sent to a different node on the second epoch.

                        Seed -> (long)
                            Determines the shuffling  order  in  ShuffleConfig
                            value.

              VpcConfig -> (structure)
                 The   VpcConfig  object  that specifies the VPC that you want
                 the  training  jobs  that  this  hyperparameter  tuning   job
                 launches  to  connect  to.  Control  access  to and from your
                 training container by configuring the VPC. For more  informa-
                 tion,  see  Protect  Training Jobs by Using an Amazon Virtual
                 Private Cloud .

                 SecurityGroupIds -> (list)
                     The VPC security group  IDs,  in  the  form  sg-xxxxxxxx.
                     Specify the security groups for the VPC that is specified
                     in the Subnets field.

                     (string)

                 Subnets -> (list)
                     The ID of the subnets in the VPC to  which  you  want  to
                     connect your training job or model. For information about
                     the  availability  of  specific   instance   types,   see
                     Supported Instance Types and Availability Zones .

                     (string)

              OutputDataConfig -> (structure)
                 Specifies  the  path  to the Amazon S3 bucket where you store
                 model artifacts from the training jobs that  the  tuning  job
                 launches.

                 KmsKeyId -> (string)
                     The  Amazon  Web  Services Key Management Service (Amazon
                     Web Services KMS)  key  that  Amazon  SageMaker  uses  to
                     encrypt  the  model  artifacts  at  rest  using Amazon S3
                     server-side encryption. The KmsKeyId can be  any  of  the
                     following formats:

                     o // KMS Key ID  "1234abcd-12ab-34cd-56ef-1234567890ab"

                     o //   Amazon   Resource   Name   (ARN)   of  a  KMS  Key
                       "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

                     o // KMS Key Alias  "alias/ExampleAlias"

                     o //  Amazon  Resource  Name  (ARN)  of  a  KMS Key Alias
                       "arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"

                     If  you use a KMS key ID or an alias of your KMS key, the
                     Amazon SageMaker execution role must include  permissions
                     to  call kms:Encrypt . If you don't provide a KMS key ID,
                     Amazon SageMaker uses the default KMS key for  Amazon  S3
                     for   your   role's   account.   Amazon   SageMaker  uses
                     server-side encryption with KMS-managed keys for  Output-
                     DataConfig . If you use a bucket policy with an s3:PutOb-
                     ject permission that only allows objects with server-side
                     encryption,      set     the     condition     key     of
                     s3:x-amz-server-side-encryption to "aws:kms" .  For  more
                     information,  see KMS-Managed Encryption Keys in the Ama-
                     zon Simple Storage Service Developer Guide.

                     The KMS key policy must grant permission to the IAM  role
                     that you specify in your CreateTrainingJob , CreateTrans-
                     formJob , or CreateHyperParameterTuningJob requests.  For
                     more  information,  see  Using Key Policies in Amazon Web
                     Services KMS in the Amazon Web  Services  Key  Management
                     Service Developer Guide .

                 S3OutputPath -> (string)
                     Identifies the S3 path where you want Amazon SageMaker to
                     store    the    model     artifacts.     For     example,
                     s3://bucket-name/key-name-prefix .

              ResourceConfig -> (structure)
                 The  resources,  including  the compute instances and storage
                 volumes, to use for the training jobs  that  the  tuning  job
                 launches.

                 Storage volumes store model artifacts and incremental states.
                 Training  algorithms  might  also  use  storage  volumes  for
                 scratch  space. If you want Amazon SageMaker to use the stor-
                 age volume to store the training data,  choose  File  as  the
                 TrainingInputMode  in  the  algorithm specification. For dis-
                 tributed  training  algorithms,  specify  an  instance  count
                 greater than 1.

                 InstanceType -> (string)
                     The ML compute instance type.

                 InstanceCount -> (integer)
                     The  number  of ML compute instances to use. For distrib-
                     uted training, provide a value greater than 1.

                 VolumeSizeInGB -> (integer)
                     The size of the ML storage volume that you want to provi-
                     sion.

                     ML  storage volumes store model artifacts and incremental
                     states. Training algorithms might also use the ML storage
                     volume for scratch space. If you want to store the train-
                     ing data in the ML storage volume,  choose  File  as  the
                     TrainingInputMode in the algorithm specification.

                     You must specify sufficient ML storage for your scenario.

                     NOTE:
                        Amazon SageMaker supports only the General Purpose SSD
                        (gp2) ML storage volume type.

                     NOTE:
                        Certain  Nitro-based  instances  include local storage
                        with a fixed total size,  dependent  on  the  instance
                        type.  When using these instances for training, Amazon
                        SageMaker mounts the local instance storage instead of
                        Amazon  EBS  gp2  storage. You can't request a Volume-
                        SizeInGB greater than the  total  size  of  the  local
                        instance storage.

                        For  a  list  of  instance  types  that  support local
                        instance  storage,  including  the  total   size   per
                        instance type, see Instance Store Volumes .

                 VolumeKmsKeyId -> (string)
                     The  Amazon  Web  Services  KMS key that Amazon SageMaker
                     uses to encrypt data on the storage  volume  attached  to
                     the ML compute instance(s) that run the training job.

                     NOTE:
                        Certain  Nitro-based  instances include local storage,
                        dependent on the instance type. Local storage  volumes
                        are encrypted using a hardware module on the instance.
                        You can't  request  a  VolumeKmsKeyId  when  using  an
                        instance type with local storage.

                        For  a  list  of  instance  types  that  support local
                        instance storage, see Instance Store Volumes .

                        For more  information  about  local  instance  storage
                        encryption, see SSD Instance Store Volumes .

                     The  VolumeKmsKeyId  can  be in any of the following for-
                     mats:

                     o // KMS Key ID  "1234abcd-12ab-34cd-56ef-1234567890ab"

                     o //  Amazon  Resource  Name   (ARN)   of   a   KMS   Key
                       "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

              StoppingCondition -> (structure)
                 Specifies a limit to how long a model hyperparameter training
                 job can run. It also specifies how long a managed spot train-
                 ing job has to complete. When the job reaches the time limit,
                 Amazon  SageMaker  ends the training job. Use this API to cap
                 model training costs.

                 MaxRuntimeInSeconds -> (integer)
                     The maximum length of time, in seconds, that  a  training
                     or compilation job can run.

                     For compilation jobs, if the job does not complete during
                     this time, you will receive a TimeOut error. We recommend
                     starting with 900 seconds and increase as necessary based
                     on your model.

                     For all other jobs, if the job does not  complete  during
                     this  time,  Amazon  SageMaker ends the job. When RetryS-
                     trategy is specified in the job request, MaxRuntimeInSec-
                     onds  specifies  the maximum time for all of the attempts
                     in total, not each individual attempt. The default  value
                     is 1 day. The maximum value is 28 days.

                 MaxWaitTimeInSeconds -> (integer)
                     The  maximum  length  of time, in seconds, that a managed
                     Spot training job has to complete. It is  the  amount  of
                     time  spent  waiting for Spot capacity plus the amount of
                     time the job can run. It must be equal to or greater than
                     MaxRuntimeInSeconds . If the job does not complete during
                     this time, Amazon SageMaker ends the job.

                     When RetryStrategy  is  specified  in  the  job  request,
                     MaxWaitTimeInSeconds  specifies  the maximum time for all
                     of the attempts in total, not each individual attempt.

              EnableNetworkIsolation -> (boolean)
                 Isolates the training container. No inbound or outbound  net-
                 work calls can be made, except for calls between peers within
                 a training cluster for distributed training. If network  iso-
                 lation is used for training jobs that are configured to use a
                 VPC, Amazon SageMaker downloads and uploads customer data and
                 model  artifacts  through the specified VPC, but the training
                 container does not have network access.

              EnableInterContainerTrafficEncryption -> (boolean)
                 To encrypt all communications between ML compute instances in
                 distributed  training,  choose  True  .  Encryption  provides
                 greater security for distributed training, but training might
                 take  longer. How long it takes depends on the amount of com-
                 munication between compute instances, especially if you use a
                 deep learning algorithm in distributed training.

              EnableManagedSpotTraining -> (boolean)
                 A Boolean indicating whether managed spot training is enabled
                 (True ) or not (False ).

              CheckpointConfig -> (structure)
                 Contains information about the output  location  for  managed
                 spot training checkpoint data.

                 S3Uri -> (string)
                     Identifies the S3 path where you want Amazon SageMaker to
                     store         checkpoints.          For          example,
                     s3://bucket-name/key-name-prefix .

                 LocalPath -> (string)
                     (Optional)  The  local  directory  where  checkpoints are
                     written. The default directory is /opt/ml/checkpoints/  .

              RetryStrategy -> (structure)
                 The  number  of times to retry the job when the job fails due
                 to an InternalServerError .

                 MaximumRetryAttempts -> (integer)
                     The number of times to retry the job.  When  the  job  is
                     retried, it's SecondaryStatus is changed to STARTING .

       JSON Syntax:

          [
            {
              "DefinitionName": "string",
              "TuningObjective": {
                "Type": "Maximize"|"Minimize",
                "MetricName": "string"
              },
              "HyperParameterRanges": {
                "IntegerParameterRanges": [
                  {
                    "Name": "string",
                    "MinValue": "string",
                    "MaxValue": "string",
                    "ScalingType": "Auto"|"Linear"|"Logarithmic"|"ReverseLogarithmic"
                  }
                  ...
                ],
                "ContinuousParameterRanges": [
                  {
                    "Name": "string",
                    "MinValue": "string",
                    "MaxValue": "string",
                    "ScalingType": "Auto"|"Linear"|"Logarithmic"|"ReverseLogarithmic"
                  }
                  ...
                ],
                "CategoricalParameterRanges": [
                  {
                    "Name": "string",
                    "Values": ["string", ...]
                  }
                  ...
                ]
              },
              "StaticHyperParameters": {"string": "string"
                ...},
              "AlgorithmSpecification": {
                "TrainingImage": "string",
                "TrainingInputMode": "Pipe"|"File"|"FastFile",
                "AlgorithmName": "string",
                "MetricDefinitions": [
                  {
                    "Name": "string",
                    "Regex": "string"
                  }
                  ...
                ]
              },
              "RoleArn": "string",
              "InputDataConfig": [
                {
                  "ChannelName": "string",
                  "DataSource": {
                    "S3DataSource": {
                      "S3DataType": "ManifestFile"|"S3Prefix"|"AugmentedManifestFile",
                      "S3Uri": "string",
                      "S3DataDistributionType": "FullyReplicated"|"ShardedByS3Key",
                      "AttributeNames": ["string", ...]
                    },
                    "FileSystemDataSource": {
                      "FileSystemId": "string",
                      "FileSystemAccessMode": "rw"|"ro",
                      "FileSystemType": "EFS"|"FSxLustre",
                      "DirectoryPath": "string"
                    }
                  },
                  "ContentType": "string",
                  "CompressionType": "None"|"Gzip",
                  "RecordWrapperType": "None"|"RecordIO",
                  "InputMode": "Pipe"|"File"|"FastFile",
                  "ShuffleConfig": {
                    "Seed": long
                  }
                }
                ...
              ],
              "VpcConfig": {
                "SecurityGroupIds": ["string", ...],
                "Subnets": ["string", ...]
              },
              "OutputDataConfig": {
                "KmsKeyId": "string",
                "S3OutputPath": "string"
              },
              "ResourceConfig": {
                "InstanceType": "ml.m4.xlarge"|"ml.m4.2xlarge"|"ml.m4.4xlarge"|"ml.m4.10xlarge"|"ml.m4.16xlarge"|"ml.g4dn.xlarge"|"ml.g4dn.2xlarge"|"ml.g4dn.4xlarge"|"ml.g4dn.8xlarge"|"ml.g4dn.12xlarge"|"ml.g4dn.16xlarge"|"ml.m5.large"|"ml.m5.xlarge"|"ml.m5.2xlarge"|"ml.m5.4xlarge"|"ml.m5.12xlarge"|"ml.m5.24xlarge"|"ml.c4.xlarge"|"ml.c4.2xlarge"|"ml.c4.4xlarge"|"ml.c4.8xlarge"|"ml.p2.xlarge"|"ml.p2.8xlarge"|"ml.p2.16xlarge"|"ml.p3.2xlarge"|"ml.p3.8xlarge"|"ml.p3.16xlarge"|"ml.p3dn.24xlarge"|"ml.p4d.24xlarge"|"ml.c5.xlarge"|"ml.c5.2xlarge"|"ml.c5.4xlarge"|"ml.c5.9xlarge"|"ml.c5.18xlarge"|"ml.c5n.xlarge"|"ml.c5n.2xlarge"|"ml.c5n.4xlarge"|"ml.c5n.9xlarge"|"ml.c5n.18xlarge"|"ml.g5.xlarge"|"ml.g5.2xlarge"|"ml.g5.4xlarge"|"ml.g5.8xlarge"|"ml.g5.16xlarge"|"ml.g5.12xlarge"|"ml.g5.24xlarge"|"ml.g5.48xlarge",
                "InstanceCount": integer,
                "VolumeSizeInGB": integer,
                "VolumeKmsKeyId": "string"
              },
              "StoppingCondition": {
                "MaxRuntimeInSeconds": integer,
                "MaxWaitTimeInSeconds": integer
              },
              "EnableNetworkIsolation": true|false,
              "EnableInterContainerTrafficEncryption": true|false,
              "EnableManagedSpotTraining": true|false,
              "CheckpointConfig": {
                "S3Uri": "string",
                "LocalPath": "string"
              },
              "RetryStrategy": {
                "MaximumRetryAttempts": integer
              }
            }
            ...
          ]

       --warm-start-config (structure)
          Specifies  the  configuration for starting the hyperparameter tuning
          job using one or more previous tuning jobs as a starting point.  The
          results  of  previous  tuning jobs are used to inform which combina-
          tions of hyperparameters to search over in the new tuning job.

          All training jobs launched by the new hyperparameter tuning job  are
          evaluated  by  using  the  objective  metric. If you specify IDENTI-
          CAL_DATA_AND_ALGORITHM as the WarmStartType value for the warm start
          configuration,  the  training  job that performs the best in the new
          tuning job is compared to the best training  jobs  from  the  parent
          tuning  jobs. From these, the training job that performs the best as
          measured by the objective metric is returned  as  the  overall  best
          training job.

          NOTE:
              All  training jobs launched by parent hyperparameter tuning jobs
              and the new hyperparameter tuning jobs count against  the  limit
              of training jobs for the tuning job.

          ParentHyperParameterTuningJobs -> (list)
              An  array  of  hyperparameter  tuning  jobs that are used as the
              starting point for the new hyperparameter tuning job.  For  more
              information about warm starting a hyperparameter tuning job, see
              Using a Previous Hyperparameter Tuning Job as a Starting Point .

              Hyperparameter tuning jobs created before October 1, 2018 cannot
              be used as parent jobs for warm start tuning jobs.

              (structure)
                 A previously completed or stopped hyperparameter  tuning  job
                 to  be used as a starting point for a new hyperparameter tun-
                 ing job.

                 HyperParameterTuningJobName -> (string)
                     The name of the hyperparameter tuning job to be used as a
                     starting point for a new hyperparameter tuning job.

          WarmStartType -> (string)
              Specifies one of the following:
                 IDENTICAL_DATA_AND_ALGORITHM

              The  new  hyperparameter tuning job uses the same input data and
              training image as the parent tuning jobs.  You  can  change  the
              hyperparameter ranges to search and the maximum number of train-
              ing jobs that the hyperparameter tuning job launches. You cannot
              use  a new version of the training algorithm, unless the changes
              in the new version do not affect the algorithm itself. For exam-
              ple,  changes  that improve logging or adding support for a dif-
              ferent data format are allowed. You can also change hyperparame-
              ters from tunable to static, and from static to tunable, but the
              total number of static plus tunable hyperparameters must  remain
              the  same  as it is in all parent jobs. The objective metric for
              the new tuning job must be the same as for all parent jobs.
                 TRANSFER_LEARNING

              The new hyperparameter tuning job can include input data, hyper-
              parameter  ranges,  maximum  number of concurrent training jobs,
              and maximum number of training  jobs  that  are  different  than
              those  of  its  parent  hyperparameter tuning jobs. The training
              image can also be a different version from the version  used  in
              the parent hyperparameter tuning job. You can also change hyper-
              parameters from tunable to static, and from static  to  tunable,
              but the total number of static plus tunable hyperparameters must
              remain the same as it is in all parent jobs. The objective  met-
              ric  for  the  new tuning job must be the same as for all parent
              jobs.

       Shorthand Syntax:

          ParentHyperParameterTuningJobs=[{HyperParameterTuningJobName=string},{HyperParameterTuningJobName=string}],WarmStartType=string

       JSON Syntax:

          {
            "ParentHyperParameterTuningJobs": [
              {
                "HyperParameterTuningJobName": "string"
              }
              ...
            ],
            "WarmStartType": "IdenticalDataAndAlgorithm"|"TransferLearning"
          }

       --tags (list)
          An array of key-value pairs. You can use  tags  to  categorize  your
          Amazon  Web  Services  resources  in different ways, for example, by
          purpose, owner, or environment. For more  information,  see  Tagging
          Amazon Web Services Resources .

          Tags  that  you  specify  for  the  tuning job are also added to all
          training jobs that the tuning job launches.

          (structure)
              A tag object that consists of a key and an optional value,  used
              to  manage metadata for SageMaker Amazon Web Services resources.

              You can add tags to notebook instances, training jobs,  hyperpa-
              rameter  tuning  jobs,  batch  transform  jobs, models, labeling
              jobs, work teams, endpoint configurations,  and  endpoints.  For
              more  information  on  adding  tags  to SageMaker resources, see
              AddTags .

              For more information on adding metadata to your Amazon Web  Ser-
              vices  resources  with  tagging, see Tagging Amazon Web Services
              resources . For advice on best practices for managing Amazon Web
              Services  resources  with  tagging,  see Tagging Best Practices:
              Implement an Effective  Amazon  Web  Services  Resource  Tagging
              Strategy .

              Key -> (string)
                 The tag key. Tag keys must be unique per resource.

              Value -> (string)
                 The tag value.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       HyperParameterTuningJobArn -> (string)
          The  Amazon  Resource Name (ARN) of the tuning job. Amazon SageMaker
          assigns an ARN to a hyperparameter tuning job when you create it.



                                           CREATE-HYPER-PARAMETER-TUNING-JOB()
