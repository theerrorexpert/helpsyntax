SEND-EMAIL()                                                      SEND-EMAIL()



NAME
       send-email -

DESCRIPTION
       Composes  an  email  message  and immediately queues it for sending. In
       order to send email using the SendEmail operation,  your  message  must
       meet the following requirements:

       o The  message must be sent from a verified email address or domain. If
         you attempt to send email using a non-verified address or domain, the
         operation will result in an "Email address not verified" error.

       o If your account is still in the Amazon SES sandbox, you may only send
         to verified addresses or domains, or to  email  addresses  associated
         with  the  Amazon  SES  Mailbox  Simulator. For more information, see
         Verifying Email Addresses and Domains in  the  Amazon  SES  Developer
         Guide.

       o The maximum message size is 10 MB.

       o The  message  must  include at least one recipient email address. The
         recipient address can be a To: address, a  CC:  address,  or  a  BCC:
         address.  If a recipient email address is invalid (that is, it is not
         in  the  format  UserName@[SubDomain.]Domain.TopLevelDomain  ),   the
         entire  message  will be rejected, even if the message contains other
         recipients that are valid.

       o The message may not include more than 50 recipients, across the  To:,
         CC: and BCC: fields. If you need to send an email message to a larger
         audience, you can divide your recipient list into  groups  of  50  or
         fewer,  and  then  call the SendEmail operation several times to send
         the message to each group.

       WARNING:
          For every message that you send,  the  total  number  of  recipients
          (including  each  recipient  in  the  To:,  CC:  and BCC: fields) is
          counted against the maximum number of  emails  you  can  send  in  a
          24-hour  period  (your  sending  quota ). For more information about
          sending quotas in Amazon SES, see Managing Your Amazon  SES  Sending
          Limits in the Amazon SES Developer Guide.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            send-email
          [--destination <value>]
          [--message <value>]
          [--reply-to-addresses <value>]
          [--return-path <value>]
          [--source-arn <value>]
          [--return-path-arn <value>]
          [--tags <value>]
          [--configuration-set-name <value>]
          --from <value>
          [--to <value>]
          [--cc <value>]
          [--bcc <value>]
          [--subject <value>]
          [--text <value>]
          [--html <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --destination (structure)
          The  destination  for  this  email,  composed  of To:, CC:, and BCC:
          fields.

          ToAddresses -> (list)
              The recipients to place on the To: line of the message.

              (string)

          CcAddresses -> (list)
              The recipients to place on the CC: line of the message.

              (string)

          BccAddresses -> (list)
              The recipients to place on the BCC: line of the message.

              (string)

       Shorthand Syntax:

          ToAddresses=string,string,CcAddresses=string,string,BccAddresses=string,string

       JSON Syntax:

          {
            "ToAddresses": ["string", ...],
            "CcAddresses": ["string", ...],
            "BccAddresses": ["string", ...]
          }

       --message (structure)
          The message to be sent.

          Subject -> (structure)
              The subject of the message: A  short  summary  of  the  content,
              which will appear in the recipient's inbox.

              Data -> (string)
                 The textual data of the content.

              Charset -> (string)
                 The character set of the content.

          Body -> (structure)
              The message body.

              Text -> (structure)
                 The  content  of  the  message,  in text format. Use this for
                 text-based email clients, or clients on high-latency networks
                 (such as mobile devices).

                 Data -> (string)
                     The textual data of the content.

                 Charset -> (string)
                     The character set of the content.

              Html -> (structure)
                 The  content  of  the  message,  in HTML format. Use this for
                 email clients that can process HTML. You can  include  click-
                 able links, formatted text, and much more in an HTML message.

                 Data -> (string)
                     The textual data of the content.

                 Charset -> (string)
                     The character set of the content.

       Shorthand Syntax:

          Subject={Data=string,Charset=string},Body={Text={Data=string,Charset=string},Html={Data=string,Charset=string}}

       JSON Syntax:

          {
            "Subject": {
              "Data": "string",
              "Charset": "string"
            },
            "Body": {
              "Text": {
                "Data": "string",
                "Charset": "string"
              },
              "Html": {
                "Data": "string",
                "Charset": "string"
              }
            }
          }

       --reply-to-addresses (list)
          The reply-to email address(es) for the  message.  If  the  recipient
          replies  to  the  message,  each  reply-to  address will receive the
          reply.

          (string)

       Syntax:

          "string" "string" ...

       --return-path (string)
          The email address that bounces and complaints will be  forwarded  to
          when feedback forwarding is enabled. If the message cannot be deliv-
          ered to the recipient, then an error message will be  returned  from
          the  recipient's  ISP;  this  message  will then be forwarded to the
          email address specified by the ReturnPath parameter. The  ReturnPath
          parameter  is  never  overwritten. This email address must be either
          individually verified with Amazon SES, or from  a  domain  that  has
          been verified with Amazon SES.

       --source-arn (string)
          This parameter is used only for sending authorization. It is the ARN
          of the identity that is associated with  the  sending  authorization
          policy  that  permits you to send for the email address specified in
          the Source parameter.

          For  example,  if  the  owner  of   example.com   (which   has   ARN
          arn:aws:ses:us-east-1:123456789012:identity/example.com ) attaches a
          policy to it that authorizes you to  send  from  user@example.com  ,
          then     you     would     specify     the     SourceArn    to    be
          arn:aws:ses:us-east-1:123456789012:identity/example.com  ,  and  the
          Source to be user@example.com .

          For more information about sending authorization, see the Amazon SES
          Developer Guide .

       --return-path-arn (string)
          This parameter is used only for sending authorization. It is the ARN
          of  the  identity  that is associated with the sending authorization
          policy that permits you to use the email address  specified  in  the
          ReturnPath parameter.

          For   example,   if   the   owner  of  example.com  (which  has  ARN
          arn:aws:ses:us-east-1:123456789012:identity/example.com ) attaches a
          policy  to it that authorizes you to use feedback@example.com , then
          you     would     specify     the      ReturnPathArn      to      be
          arn:aws:ses:us-east-1:123456789012:identity/example.com  ,  and  the
          ReturnPath to be feedback@example.com .

          For more information about sending authorization, see the Amazon SES
          Developer Guide .

       --tags (list)
          A  list  of  tags,  in  the form of name/value pairs, to apply to an
          email that you send using SendEmail . Tags correspond to  character-
          istics  of  the email that you define, so that you can publish email
          sending events.

          (structure)
              Contains the name and value of a tag that  you  can  provide  to
              SendEmail or SendRawEmail to apply to an email.

              Message  tags, which you use with configuration sets, enable you
              to publish email sending events.  For  information  about  using
              configuration sets, see the Amazon SES Developer Guide .

              Name -> (string)
                 The name of the tag. The name must:

                 o This  value can only contain ASCII letters (a-z, A-Z), num-
                   bers (0-9), underscores (_), or dashes (-).

                 o Contain less than 256 characters.

              Value -> (string)
                 The value of the tag. The value must:

                 o This value can only contain ASCII letters (a-z, A-Z),  num-
                   bers (0-9), underscores (_), or dashes (-).

                 o Contain less than 256 characters.

       Shorthand Syntax:

          Name=string,Value=string ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Value": "string"
            }
            ...
          ]

       --configuration-set-name (string)
          The  name  of  the  configuration  set to use when you send an email
          using SendEmail .

       --from (string)
          The email address that is sending the email. This email address must
          be  either  individually  verified with Amazon SES, or from a domain
          that has been verified with Amazon SES. For information about  veri-
          fying identities, see the Amazon SES Developer Guide .

          If you are sending on behalf of another user and have been permitted
          to do so by a sending authorization policy, then you must also spec-
          ify  the  SourceArn  parameter.  For  more information about sending
          authorization, see the Amazon SES Developer Guide .

          NOTE:
              Amazon SES does not support the SMTPUTF8 extension, as described
              in  RFC6531  . For this reason, the local part of a source email
              address (the part of the email address that precedes the @ sign)
              may  only contain 7-bit ASCII characters . If the domain part of
              an address (the part after the @ sign) contains non-ASCII  char-
              acters,  they  must  be  encoded using Punycode, as described in
              RFC3492 . The sender name (also known as the friendly name ) may
              contain  non-ASCII  characters. These characters must be encoded
              using MIME encoded-word syntax, as described in RFC 2047 .  MIME
              encoded-word  syntax  uses  the following form: =?charset?encod-
              ing?encoded-text?= .

       --to (string) The email addresses of the primary  recipients.  You  can
       specify multiple recipients as space-separated values

       --cc  (string)  The  email  addresses  of copy recipients (Cc). You can
       specify multiple recipients as space-separated values

       --bcc (string) The  email  addresses  of  blind-carbon-copy  recipients
       (Bcc). You can specify multiple recipients as space-separated values

       --subject (string) The subject of the message

       --text (string) The raw text body of the message

       --html (string) The HTML body of the message

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To send a formatted email using Amazon SES

       The  following  example uses the send-email command to send a formatted
       email:

          aws ses send-email --from sender@example.com --destination file://destination.json --message file://message.json

       Output:

          {
             "MessageId": "EXAMPLEf3a5efcd1-51adec81-d2a4-4e3f-9fe2-5d85c1b23783-000000"
          }

       The destination and the message are JSON data structures saved in .json
       files in the current directory. These files are as follows:

       destination.json:

          {
            "ToAddresses":  ["recipient1@example.com", "recipient2@example.com"],
            "CcAddresses":  ["recipient3@example.com"],
            "BccAddresses": []
          }

       message.json:

          {
             "Subject": {
                 "Data": "Test email sent using the AWS CLI",
                 "Charset": "UTF-8"
             },
             "Body": {
                 "Text": {
                     "Data": "This is the message body in text format.",
                     "Charset": "UTF-8"
                 },
                 "Html": {
                     "Data": "This message body contains HTML formatting. It can, for example, contain links like this one: <a class=\"ulink\" href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide\" target=\"_blank\">Amazon SES Developer Guide</a>.",
                     "Charset": "UTF-8"
                 }
             }
          }

       Replace the sender and recipient email addresses with the ones you want
       to use. Note that the sender's email address must be verified with Ama-
       zon  SES.  Until  you  are granted production access to Amazon SES, you
       must also verify the email address of each recipient unless the recipi-
       ent  is the Amazon SES mailbox simulator. For more information on veri-
       fication, see Verifying Email Addresses and Domains in  Amazon  SES  in
       the Amazon Simple Email Service Developer Guide.

       The  Message ID in the output indicates that the call to send-email was
       successful.

       If you don't receive the email, check your Junk box.

       For more information on sending formatted email, see Sending  Formatted
       Email  Using  the  Amazon  SES  API  in the Amazon Simple Email Service
       Developer Guide.

OUTPUT
       MessageId -> (string)
          The unique message identifier returned from the SendEmail action.



                                                                  SEND-EMAIL()
