LIST-ASSESSMENT-RUNS()                                  LIST-ASSESSMENT-RUNS()



NAME
       list-assessment-runs -

DESCRIPTION
       Lists  the  assessment runs that correspond to the assessment templates
       that are specified by the ARNs of the assessment templates.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       list-assessment-runs is a paginated operation. Multiple API  calls  may
       be  issued in order to retrieve the entire data set of results. You can
       disable pagination by providing the --no-paginate argument.  When using
       --output  text  and  the  --query argument on a paginated response, the
       --query argument must extract data from the results  of  the  following
       query expressions: assessmentRunArns

SYNOPSIS
            list-assessment-runs
          [--assessment-template-arns <value>]
          [--filter <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --assessment-template-arns (list)
          The ARNs that specify the assessment templates whose assessment runs
          you want to list.

          (string)

       Syntax:

          "string" "string" ...

       --filter (structure)
          You can use this parameter  to  specify  a  subset  of  data  to  be
          included in the action's response.

          For a record to match a filter, all specified filter attributes must
          match. When multiple values are specified for  a  filter  attribute,
          any of the values can match.

          namePattern -> (string)
              For  a  record  to match a filter, an explicit value or a string
              containing a wildcard that is specified for this data type prop-
              erty  must  match the value of the assessmentRunName property of
              the  AssessmentRun data type.

          states -> (list)
              For a record to match a filter, one of the values specified  for
              this  data type property must be the exact match of the value of
              the assessmentRunState property of the  AssessmentRun data type.

              (string)

          durationRange -> (structure)
              For  a record to match a filter, the value that is specified for
              this data type property must inclusively match any value between
              the  specified  minimum and maximum values of the durationInSec-
              onds property of the  AssessmentRun data type.

              minSeconds -> (integer)
                 The minimum value of the duration range. Must be greater than
                 zero.

              maxSeconds -> (integer)
                 The maximum value of the duration range. Must be less than or
                 equal to 604800 seconds (1 week).

          rulesPackageArns -> (list)
              For a record to match a filter, the value that is specified  for
              this  data type property must be contained in the list of values
              of the rulesPackages property of the  AssessmentRun data type.

              (string)

          startTimeRange -> (structure)
              For a record to match a filter, the value that is specified  for
              this data type property must inclusively match any value between
              the specified minimum and maximum values of the startTime  prop-
              erty of the  AssessmentRun data type.

              beginDate -> (timestamp)
                 The minimum value of the timestamp range.

              endDate -> (timestamp)
                 The maximum value of the timestamp range.

          completionTimeRange -> (structure)
              For  a record to match a filter, the value that is specified for
              this data type property must inclusively match any value between
              the  specified  minimum  and  maximum  values of the completedAt
              property of the  AssessmentRun data type.

              beginDate -> (timestamp)
                 The minimum value of the timestamp range.

              endDate -> (timestamp)
                 The maximum value of the timestamp range.

          stateChangeTimeRange -> (structure)
              For a record to match a filter, the value that is specified  for
              this  data  type property must match the stateChangedAt property
              of the  AssessmentRun data type.

              beginDate -> (timestamp)
                 The minimum value of the timestamp range.

              endDate -> (timestamp)
                 The maximum value of the timestamp range.

       Shorthand Syntax:

          namePattern=string,states=string,string,durationRange={minSeconds=integer,maxSeconds=integer},rulesPackageArns=string,string,startTimeRange={beginDate=timestamp,endDate=timestamp},completionTimeRange={beginDate=timestamp,endDate=timestamp},stateChangeTimeRange={beginDate=timestamp,endDate=timestamp}

       JSON Syntax:

          {
            "namePattern": "string",
            "states": ["CREATED"|"START_DATA_COLLECTION_PENDING"|"START_DATA_COLLECTION_IN_PROGRESS"|"COLLECTING_DATA"|"STOP_DATA_COLLECTION_PENDING"|"DATA_COLLECTED"|"START_EVALUATING_RULES_PENDING"|"EVALUATING_RULES"|"FAILED"|"ERROR"|"COMPLETED"|"COMPLETED_WITH_ERRORS"|"CANCELED", ...],
            "durationRange": {
              "minSeconds": integer,
              "maxSeconds": integer
            },
            "rulesPackageArns": ["string", ...],
            "startTimeRange": {
              "beginDate": timestamp,
              "endDate": timestamp
            },
            "completionTimeRange": {
              "beginDate": timestamp,
              "endDate": timestamp
            },
            "stateChangeTimeRange": {
              "beginDate": timestamp,
              "endDate": timestamp
            }
          }

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --starting-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The size of each page to get in the AWS service call. This does  not
          affect the number of items returned in the command's output. Setting
          a smaller page size results  in  more  calls  to  the  AWS  service,
          retrieving  fewer  items in each call. This can help prevent the AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To list assessment runs

       The  following  list-assessment-runs command lists all existing assess-
       ment runs.

          aws inspector list-assessment-runs

       Output:

          {
              "assessmentRunArns": [
                  "arn:aws:inspector:us-west-2:123456789012:target/0-0kFIPusq/template/0-4r1V2mAw/run/0-MKkpXXPE",
                  "arn:aws:inspector:us-west-2:123456789012:target/0-0kFIPusq/template/0-4r1V2mAw/run/0-v5D6fI3v"
              ]
          }

       For more information, see Amazon  Inspector  Assessment  Templates  and
       Assessment Runs in the Amazon Inspector User Guide.

OUTPUT
       assessmentRunArns -> (list)
          A  list of ARNs that specifies the assessment runs that are returned
          by the action.

          (string)

       nextToken -> (string)
          When a response is generated, if there is more data  to  be  listed,
          this  parameter is present in the response and contains the value to
          use for the nextToken parameter in a subsequent pagination  request.
          If  there  is  no  more  data to be listed, this parameter is set to
          null.



                                                        LIST-ASSESSMENT-RUNS()
