GET-METRIC-STATISTICS()                                GET-METRIC-STATISTICS()



NAME
       get-metric-statistics -

DESCRIPTION
       Gets statistics for the specified metric.

       The maximum number of data points returned from a single call is 1,440.
       If you request more than  1,440  data  points,  CloudWatch  returns  an
       error.  To  reduce the number of data points, you can narrow the speci-
       fied time range and make multiple requests across adjacent time ranges,
       or  you can increase the specified period. Data points are not returned
       in chronological order.

       CloudWatch aggregates data points based on the  length  of  the  period
       that  you  specify.  For  example,  if  you  request  statistics with a
       one-hour period, CloudWatch aggregates all data points with time stamps
       that  fall within each one-hour period. Therefore, the number of values
       aggregated by CloudWatch is larger  than  the  number  of  data  points
       returned.

       CloudWatch needs raw data points to calculate percentile statistics. If
       you publish data using a statistic set instead, you can  only  retrieve
       percentile  statistics for this data if one of the following conditions
       is true:

       o The SampleCount value of the statistic set is 1.

       o The Min and the Max values of the statistic set are equal.

       Percentile statistics are not available for metrics  when  any  of  the
       metric values are negative numbers.

       Amazon CloudWatch retains metric data as follows:

       o Data points with a period of less than 60 seconds are available for 3
         hours. These data points are high-resolution metrics and  are  avail-
         able  only  for  custom  metrics  that have been defined with a Stor-
         ageResolution of 1.

       o Data points with a period of 60 seconds (1-minute) are available  for
         15 days.

       o Data points with a period of 300 seconds (5-minute) are available for
         63 days.

       o Data points with a period of 3600 seconds (1 hour) are available  for
         455 days (15 months).

       Data  points  that  are  initially  published with a shorter period are
       aggregated together for long-term storage. For example, if you  collect
       data using a period of 1 minute, the data remains available for 15 days
       with 1-minute resolution. After 15 days, this data is still  available,
       but  is aggregated and retrievable only with a resolution of 5 minutes.
       After 63 days, the data is further aggregated and is available  with  a
       resolution of 1 hour.

       CloudWatch started retaining 5-minute and 1-hour metric data as of July
       9, 2016.

       For information about metrics and dimensions supported  by  Amazon  Web
       Services  services,  see  the  Amazon CloudWatch Metrics and Dimensions
       Reference in the Amazon CloudWatch User Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-metric-statistics
          --namespace <value>
          --metric-name <value>
          [--dimensions <value>]
          --start-time <value>
          --end-time <value>
          --period <value>
          [--statistics <value>]
          [--extended-statistics <value>]
          [--unit <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --namespace (string)
          The namespace of the metric, with or without spaces.

       --metric-name (string)
          The name of the metric, with or without spaces.

       --dimensions (list)
          The dimensions. If the metric contains multiple dimensions, you must
          include  a  value  for each dimension. CloudWatch treats each unique
          combination of dimensions as a separate metric. If a specific combi-
          nation  of  dimensions was not published, you can't retrieve statis-
          tics for it. You must specify the same  dimensions  that  were  used
          when  the metrics were created. For an example, see Dimension Combi-
          nations in the Amazon CloudWatch User Guide . For  more  information
          about  specifying  dimensions,  see Publishing Metrics in the Amazon
          CloudWatch User Guide .

          (structure)
              A dimension is a name/value pair that is part of the identity of
              a  metric.  You  can  assign  up  to  10 dimensions to a metric.
              Because dimensions are part of the unique identifier for a  met-
              ric,  whenever  you  add a unique name/value pair to one of your
              metrics, you are creating a new variation of that metric.

              Name -> (string)
                 The name of the dimension. Dimension names must contain  only
                 ASCII characters and must include at least one non-whitespace
                 character.

              Value -> (string)
                 The value of the dimension.  Dimension  values  must  contain
                 only   ASCII   characters  and  must  include  at  least  one
                 non-whitespace character.

       Shorthand Syntax:

          Name=string,Value=string ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Value": "string"
            }
            ...
          ]

       --start-time (timestamp)
          The time stamp that determines the first data point to return. Start
          times  are  evaluated  relative to the time that CloudWatch receives
          the request.

          The value specified is inclusive; results include data  points  with
          the  specified  time stamp. In a raw HTTP query, the time stamp must
          be in ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).

          CloudWatch rounds the specified time stamp as follows:

          o Start time less than 15 days ago - Round down to the nearest whole
            minute. For example, 12:32:34 is rounded down to 12:32:00.

          o Start  time between 15 and 63 days ago - Round down to the nearest
            5-minute clock interval. For example, 12:32:34 is rounded down  to
            12:30:00.

          o Start  time  greater  than 63 days ago - Round down to the nearest
            1-hour clock interval. For example, 12:32:34 is  rounded  down  to
            12:00:00.

          If you set Period to 5, 10, or 30, the start time of your request is
          rounded down to the nearest time that corresponds to even  5-,  10-,
          or 30-second divisions of a minute. For example, if you make a query
          at (HH:mm:ss) 01:05:23 for the previous 10-second period, the  start
          time  of  your  request  is  rounded  down and you receive data from
          01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previ-
          ous 5 minutes of data, using a period of 5 seconds, you receive data
          timestamped between 15:02:15 and 15:07:15.

       --end-time (timestamp)
          The time stamp that determines the last data point to return.

          The value specified is exclusive; results include data points up  to
          the  specified  time stamp. In a raw HTTP query, the time stamp must
          be in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).

       --period (integer)
          The granularity, in seconds, of the returned data points.  For  met-
          rics with regular resolution, a period can be as short as one minute
          (60 seconds) and must be a multiple of 60. For high-resolution  met-
          rics  that  are  collected at intervals of less than one minute, the
          period can be 1, 5, 10, 30, 60, or any multiple of 60.  High-resolu-
          tion  metrics  are those metrics stored by a PutMetricData call that
          includes a StorageResolution of 1 second.

          If the StartTime parameter specifies a time stamp  that  is  greater
          than  3 hours ago, you must specify the period as follows or no data
          points in that time range is returned:

          o Start time between 3 hours and 15 days ago - Use a multiple of  60
            seconds (1 minute).

          o Start time between 15 and 63 days ago - Use a multiple of 300 sec-
            onds (5 minutes).

          o Start time greater than 63 days ago - Use a multiple of 3600  sec-
            onds (1 hour).

       --statistics (list)
          The metric statistics, other than percentile. For percentile statis-
          tics, use ExtendedStatistics . When  calling  GetMetricStatistics  ,
          you  must  specify either Statistics or ExtendedStatistics , but not
          both.

          (string)

       Syntax:

          "string" "string" ...

          Where valid values are:
            SampleCount
            Average
            Sum
            Minimum
            Maximum

       --extended-statistics (list)
          The percentile statistics. Specify values  between  p0.0  and  p100.
          When  calling  GetMetricStatistics , you must specify either Statis-
          tics or ExtendedStatistics , but not both. Percentile statistics are
          not available for metrics when any of the metric values are negative
          numbers.

          (string)

       Syntax:

          "string" "string" ...

       --unit (string)
          The unit for a given metric. If you omit Unit , all  data  that  was
          collected  with  any  unit is returned, along with the corresponding
          units that were specified when the data was reported to  CloudWatch.
          If you specify a unit, the operation returns only data that was col-
          lected with that unit specified. If you specify a unit that does not
          match  the  data  collected,  the results of the operation are null.
          CloudWatch does not perform unit conversions.

          Possible values:

          o Seconds

          o Microseconds

          o Milliseconds

          o Bytes

          o Kilobytes

          o Megabytes

          o Gigabytes

          o Terabytes

          o Bits

          o Kilobits

          o Megabits

          o Gigabits

          o Terabits

          o Percent

          o Count

          o Bytes/Second

          o Kilobytes/Second

          o Megabytes/Second

          o Gigabytes/Second

          o Terabytes/Second

          o Bits/Second

          o Kilobits/Second

          o Megabits/Second

          o Gigabits/Second

          o Terabits/Second

          o Count/Second

          o None

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To get the CPU utilization per EC2 instance

       The following example uses the get-metric-statistics command to get the
       CPU utilization for an EC2 instance with the ID i-abcdef.

          aws cloudwatch get-metric-statistics --metric-name CPUUtilization --start-time 2014-04-08T23:18:00Z --end-time 2014-04-09T23:18:00Z --period 3600 --namespace AWS/EC2 --statistics Maximum --dimensions Name=InstanceId,Value=i-abcdef

       Output:

          {
              "Datapoints": [
                  {
                      "Timestamp": "2014-04-09T11:18:00Z",
                      "Maximum": 44.79,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T20:18:00Z",
                      "Maximum": 47.92,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T19:18:00Z",
                      "Maximum": 50.85,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T09:18:00Z",
                      "Maximum": 47.92,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T03:18:00Z",
                      "Maximum": 76.84,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T21:18:00Z",
                      "Maximum": 48.96,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T14:18:00Z",
                      "Maximum": 47.92,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T08:18:00Z",
                      "Maximum": 47.92,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T16:18:00Z",
                      "Maximum": 45.55,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T06:18:00Z",
                      "Maximum": 47.92,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T13:18:00Z",
                      "Maximum": 45.08,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T05:18:00Z",
                      "Maximum": 47.92,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T18:18:00Z",
                      "Maximum": 46.88,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T17:18:00Z",
                      "Maximum": 52.08,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T07:18:00Z",
                      "Maximum": 47.92,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T02:18:00Z",
                      "Maximum": 51.23,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T12:18:00Z",
                      "Maximum": 47.67,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-08T23:18:00Z",
                      "Maximum": 46.88,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T10:18:00Z",
                      "Maximum": 51.91,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T04:18:00Z",
                      "Maximum": 47.13,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T15:18:00Z",
                      "Maximum": 48.96,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T00:18:00Z",
                      "Maximum": 48.16,
                      "Unit": "Percent"
                  },
                  {
                      "Timestamp": "2014-04-09T01:18:00Z",
                      "Maximum": 49.18,
                      "Unit": "Percent"
                  }
              ],
              "Label": "CPUUtilization"
          }

       Specifying multiple dimensions

       The  following  example illustrates how to specify multiple dimensions.
       Each dimension is specified as a Name/Value pair, with a comma  between
       the  name  and the value. Multiple dimensions are separated by a space.
       If a single metric includes multiple dimensions,  you  must  specify  a
       value for every defined dimension.

       For more examples using the get-metric-statistics command, see
       `Get Statistics for a Metric`__
        in the Amazon CloudWatch Developer Guide.

          aws cloudwatch get-metric-statistics --metric-name Buffers --namespace MyNameSpace --dimensions Name=InstanceID,Value=i-abcdef Name=InstanceType,Value=m1.small --start-time 2016-10-15T04:00:00Z --end-time 2016-10-19T07:00:00Z --statistics Average --period 60

OUTPUT
       Label -> (string)
          A label for the specified metric.

       Datapoints -> (list)
          The data points for the specified metric.

          (structure)
              Encapsulates  the statistical data that CloudWatch computes from
              metric data.

              Timestamp -> (timestamp)
                 The time stamp used for the data point.

              SampleCount -> (double)
                 The number of metric values that contributed to the aggregate
                 value of this data point.

              Average -> (double)
                 The  average of the metric values that correspond to the data
                 point.

              Sum -> (double)
                 The sum of the metric values for the data point.

              Minimum -> (double)
                 The minimum metric value for the data point.

              Maximum -> (double)
                 The maximum metric value for the data point.

              Unit -> (string)
                 The standard unit for the data point.

              ExtendedStatistics -> (map)
                 The percentile statistic for the data point.

                 key -> (string)

                 value -> (double)

DOCUTILS SYSTEM MESSAGES
       System Message: ERROR/3 (<string>:)
              Anonymous hyperlink mismatch: 1 references but 2  targets.   See
              "backrefs" attribute for IDs.



                                                       GET-METRIC-STATISTICS()
