GET-METRIC-DATA()                                            GET-METRIC-DATA()



NAME
       get-metric-data -

DESCRIPTION
       You  can use the GetMetricData API to retrieve as many as 500 different
       metrics in a single request, with a total of as many  as  100,800  data
       points.  You can also optionally perform math expressions on the values
       of the returned statistics, to create new time  series  that  represent
       new  insights  into  your  data. For example, using Lambda metrics, you
       could divide the Errors metric by the  Invocations  metric  to  get  an
       error  rate time series. For more information about metric math expres-
       sions, see Metric Math Syntax and Functions in  the  Amazon  CloudWatch
       User Guide .

       Calls  to the GetMetricData API have a different pricing structure than
       calls to GetMetricStatistics . For more information about pricing,  see
       Amazon CloudWatch Pricing .

       Amazon CloudWatch retains metric data as follows:

       o Data points with a period of less than 60 seconds are available for 3
         hours. These data points are high-resolution metrics and  are  avail-
         able  only  for  custom  metrics  that have been defined with a Stor-
         ageResolution of 1.

       o Data points with a period of 60 seconds (1-minute) are available  for
         15 days.

       o Data points with a period of 300 seconds (5-minute) are available for
         63 days.

       o Data points with a period of 3600 seconds (1 hour) are available  for
         455 days (15 months).

       Data  points  that  are  initially  published with a shorter period are
       aggregated together for long-term storage. For example, if you  collect
       data using a period of 1 minute, the data remains available for 15 days
       with 1-minute resolution. After 15 days, this data is still  available,
       but  is aggregated and retrievable only with a resolution of 5 minutes.
       After 63 days, the data is further aggregated and is available  with  a
       resolution of 1 hour.

       If  you omit Unit in your request, all data that was collected with any
       unit is returned, along with the corresponding units that  were  speci-
       fied  when  the data was reported to CloudWatch. If you specify a unit,
       the operation returns only data that was collected with that unit spec-
       ified.  If  you  specify a unit that does not match the data collected,
       the results of the operation are null. CloudWatch does not perform unit
       conversions.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       get-metric-data  is  a  paginated  operation. Multiple API calls may be
       issued in order to retrieve the entire data set  of  results.  You  can
       disable pagination by providing the --no-paginate argument.  When using
       --output text and the --query argument on  a  paginated  response,  the
       --query  argument  must  extract data from the results of the following
       query expressions: MetricDataResults, Messages

SYNOPSIS
            get-metric-data
          --metric-data-queries <value>
          --start-time <value>
          --end-time <value>
          [--scan-by <value>]
          [--label-options <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --metric-data-queries (list)
          The metric queries to be returned. A single GetMetricData  call  can
          include  as  many  as  500 MetricDataQuery structures. Each of these
          structures can specify either  a  metric  to  retrieve,  or  a  math
          expression to perform on retrieved data.

          (structure)
              This  structure is used in both GetMetricData and PutMetricAlarm
              . The supported use of this structure is different for those two
              operations.

              When  used  in  GetMetricData  , it indicates the metric data to
              return, and whether this call is just retrieving a batch set  of
              data  for one metric, or is performing a math expression on met-
              ric data. A single GetMetricData call can include up to 500 Met-
              ricDataQuery structures.

              When  used in PutMetricAlarm , it enables you to create an alarm
              based on a metric math expression. Each MetricDataQuery  in  the
              array  specifies  either a metric to retrieve, or a math expres-
              sion to be performed on retrieved metrics.  A  single  PutMetri-
              cAlarm  call  can include up to 20 MetricDataQuery structures in
              the array. The 20 structures can include as many  as  10  struc-
              tures  that contain a MetricStat parameter to retrieve a metric,
              and as many as 10 structures that contain the Expression parame-
              ter  to  perform  a  math expression. Of those Expression struc-
              tures, one must have True as the  value  for  ReturnData  .  The
              result of this expression is the value the alarm watches.

              Any  expression used in a PutMetricAlarm operation must return a
              single time series. For more information, see Metric Math Syntax
              and Functions in the Amazon CloudWatch User Guide .

              Some  of  the  parameters  of this structure also have different
              uses whether you are using this  structure  in  a  GetMetricData
              operation  or  a PutMetricAlarm operation. These differences are
              explained in the following parameter list.

              Id -> (string)
                 A short name used to tie this object to the  results  in  the
                 response.  This  name  must be unique within a single call to
                 GetMetricData . If you are  performing  math  expressions  on
                 this  set  of  data,  this  name represents that data and can
                 serve as a variable in the mathematical expression. The valid
                 characters  are  letters,  numbers, and underscore. The first
                 character must be a lowercase letter.

              MetricStat -> (structure)
                 The metric to be returned, along with statistics, period, and
                 units. Use this parameter only if this object is retrieving a
                 metric and not performing a math expression on returned data.

                 Within  one  MetricDataQuery  object, you must specify either
                 Expression or MetricStat but not both.

                 Metric -> (structure)
                     The metric to return, including the metric  name,  names-
                     pace, and dimensions.

                     Namespace -> (string)
                        The namespace of the metric.

                     MetricName -> (string)
                        The name of the metric. This is a required field.

                     Dimensions -> (list)
                        The dimensions for the metric.

                        (structure)
                            A  dimension  is a name/value pair that is part of
                            the identity of a metric. You can assign up to  10
                            dimensions  to  a  metric.  Because dimensions are
                            part of the unique identifier for a metric,  when-
                            ever  you  add  a unique name/value pair to one of
                            your metrics, you are creating a new variation  of
                            that metric.

                            Name -> (string)
                               The name of the dimension. Dimension names must
                               contain only ASCII characters and must  include
                               at least one non-whitespace character.

                            Value -> (string)
                               The  value  of  the dimension. Dimension values
                               must contain only  ASCII  characters  and  must
                               include  at least one non-whitespace character.

                 Period -> (integer)
                     The granularity, in seconds, of the returned data points.
                     For  metrics  with regular resolution, a period can be as
                     short as one minute (60 seconds) and must be  a  multiple
                     of  60. For high-resolution metrics that are collected at
                     intervals of less than one minute, the period can  be  1,
                     5,  10,  30,  60,  or any multiple of 60. High-resolution
                     metrics are those metrics stored by a PutMetricData  call
                     that includes a StorageResolution of 1 second.

                     If the StartTime parameter specifies a time stamp that is
                     greater than 3 hours ago, you must specify the period  as
                     follows or no data points in that time range is returned:

                     o Start time between 3 hours and 15 days ago - Use a mul-
                       tiple of 60 seconds (1 minute).

                     o Start  time between 15 and 63 days ago - Use a multiple
                       of 300 seconds (5 minutes).

                     o Start time greater than 63 days ago - Use a multiple of
                       3600 seconds (1 hour).

                 Stat -> (string)
                     The  statistic  to  return. It can include any CloudWatch
                     statistic or extended statistic.

                 Unit -> (string)
                     When you are using a Put  operation,  this  defines  what
                     unit you want to use when storing the metric.

                     In  a  Get operation, if you omit Unit then all data that
                     was collected with any unit is returned, along  with  the
                     corresponding units that were specified when the data was
                     reported to CloudWatch. If you specify a unit, the opera-
                     tion  returns only data that was collected with that unit
                     specified. If you specify a unit that does not match  the
                     data  collected,  the  results of the operation are null.
                     CloudWatch does not perform unit conversions.

              Expression -> (string)
                 The math expression to be performed on the returned data,  if
                 this  object is performing a math expression. This expression
                 can use the Id of the other metrics to refer  to  those  met-
                 rics, and can also use the Id of other expressions to use the
                 result of those expressions. For more information about  met-
                 ric math expressions, see Metric Math Syntax and Functions in
                 the Amazon CloudWatch User Guide .

                 Within each MetricDataQuery object, you must  specify  either
                 Expression or MetricStat but not both.

              Label -> (string)
                 A human-readable label for this metric or expression. This is
                 especially useful if this is an expression, so that you  know
                 what  the  value  represents.  If the metric or expression is
                 shown in a CloudWatch dashboard widget, the label  is  shown.
                 If Label is omitted, CloudWatch generates a default.

                 You  can  put dynamic expressions into a label, so that it is
                 more descriptive. For more  information,  see  Using  Dynamic
                 Labels .

              ReturnData -> (boolean)
                 When used in GetMetricData , this option indicates whether to
                 return the timestamps and raw data values of this metric.  If
                 you  are performing this call just to do math expressions and
                 do not also need the raw data returned, you can specify False
                 . If you omit this, the default of True is used.

                 When  used  in  PutMetricAlarm  ,  specify  True  for the one
                 expression result to use as the alarm. For all other  metrics
                 and expressions in the same PutMetricAlarm operation, specify
                 ReturnData as False.

              Period -> (integer)
                 The granularity, in seconds, of the returned data points. For
                 metrics  with regular resolution, a period can be as short as
                 one minute (60 seconds) and must be a  multiple  of  60.  For
                 high-resolution  metrics  that  are collected at intervals of
                 less than one minute, the period can be 1, 5, 10, 30, 60,  or
                 any multiple of 60. High-resolution metrics are those metrics
                 stored by a PutMetricData operation  that  includes  a  Stor-
                 ageResolution of 1 second .

              AccountId -> (string)
                 The  ID of the account where the metrics are located, if this
                 is a cross-account alarm.

                 Use this field only for PutMetricAlarm operations. It is  not
                 used in GetMetricData operations.

       JSON Syntax:

          [
            {
              "Id": "string",
              "MetricStat": {
                "Metric": {
                  "Namespace": "string",
                  "MetricName": "string",
                  "Dimensions": [
                    {
                      "Name": "string",
                      "Value": "string"
                    }
                    ...
                  ]
                },
                "Period": integer,
                "Stat": "string",
                "Unit": "Seconds"|"Microseconds"|"Milliseconds"|"Bytes"|"Kilobytes"|"Megabytes"|"Gigabytes"|"Terabytes"|"Bits"|"Kilobits"|"Megabits"|"Gigabits"|"Terabits"|"Percent"|"Count"|"Bytes/Second"|"Kilobytes/Second"|"Megabytes/Second"|"Gigabytes/Second"|"Terabytes/Second"|"Bits/Second"|"Kilobits/Second"|"Megabits/Second"|"Gigabits/Second"|"Terabits/Second"|"Count/Second"|"None"
              },
              "Expression": "string",
              "Label": "string",
              "ReturnData": true|false,
              "Period": integer,
              "AccountId": "string"
            }
            ...
          ]

       --start-time (timestamp)
          The time stamp indicating the earliest data to be returned.

          The  value  specified is inclusive; results include data points with
          the specified time stamp.

          CloudWatch rounds the specified time stamp as follows:

          o Start time less than 15 days ago - Round down to the nearest whole
            minute. For example, 12:32:34 is rounded down to 12:32:00.

          o Start  time between 15 and 63 days ago - Round down to the nearest
            5-minute clock interval. For example, 12:32:34 is rounded down  to
            12:30:00.

          o Start  time  greater  than 63 days ago - Round down to the nearest
            1-hour clock interval. For example, 12:32:34 is  rounded  down  to
            12:00:00.

          If you set Period to 5, 10, or 30, the start time of your request is
          rounded down to the nearest time that corresponds to even  5-,  10-,
          or 30-second divisions of a minute. For example, if you make a query
          at (HH:mm:ss) 01:05:23 for the previous 10-second period, the  start
          time  of  your  request  is  rounded  down and you receive data from
          01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previ-
          ous 5 minutes of data, using a period of 5 seconds, you receive data
          timestamped between 15:02:15 and 15:07:15.

          For better performance, specify StartTime and  EndTime  values  that
          align  with  the  value  of the metric's Period and sync up with the
          beginning and end of an hour. For example, if the Period of a metric
          is  5  minutes,  specifying  12:05  or  12:30 as StartTime can get a
          faster response from CloudWatch than setting 12:07 or 12:29  as  the
          StartTime .

       --end-time (timestamp)
          The time stamp indicating the latest data to be returned.

          The  value specified is exclusive; results include data points up to
          the specified time stamp.

          For better performance, specify StartTime and  EndTime  values  that
          align  with  the  value  of the metric's Period and sync up with the
          beginning and end of an hour. For example, if the Period of a metric
          is  5 minutes, specifying 12:05 or 12:30 as EndTime can get a faster
          response from CloudWatch than setting 12:07 or 12:29 as the  EndTime
          .

       --scan-by (string)
          The order in which data points should be returned. TimestampDescend-
          ing returns the newest data first and paginates  when  the  MaxData-
          points  limit is reached. TimestampAscending returns the oldest data
          first and paginates when the MaxDatapoints limit is reached.

          Possible values:

          o TimestampDescending

          o TimestampAscending

       --label-options (structure)
          This structure includes the Timezone parameter, which you can use to
          specify  your  time zone so that the labels of returned data display
          the correct time for your time zone.

          Timezone -> (string)
              The time zone to use for metric data return in  this  operation.
              The format is + or - followed by four digits. The first two dig-
              its indicate the number of hours ahead or behind of UTC, and the
              final  two  digits are the number of minutes. For example, +0130
              indicates a time zone that is 1 hour and  30  minutes  ahead  of
              UTC. The default is +0000.

       Shorthand Syntax:

          Timezone=string

       JSON Syntax:

          {
            "Timezone": "string"
          }

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size  results  in  more  calls to the AWS service,
          retrieving fewer items in each call. This can help prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       MetricDataResults -> (list)
          The metrics that are returned, including the metric name, namespace,
          and dimensions.

          (structure)
              A GetMetricData call returns an array of MetricDataResult struc-
              tures. Each of these structures includes  the  data  points  for
              that  metric, along with the timestamps of those data points and
              other identifying information.

              Id -> (string)
                 The short name you specified to represent this metric.

              Label -> (string)
                 The human-readable label associated with the data.

              Timestamps -> (list)
                 The timestamps for the data points, formatted in  Unix  time-
                 stamp  format.  The  number  of timestamps always matches the
                 number of values and the  value  for  Timestamps[x]  is  Val-
                 ues[x].

                 (timestamp)

              Values -> (list)
                 The  data points for the metric corresponding to Timestamps .
                 The number of values always matches the number of  timestamps
                 and the timestamp for Values[x] is Timestamps[x].

                 (double)

              StatusCode -> (string)
                 The  status of the returned data. Complete indicates that all
                 data points in the requested time range were  returned.  Par-
                 tialData  means  that  an  incomplete set of data points were
                 returned. You can use the NextToken value that  was  returned
                 and repeat your request to get more data points. NextToken is
                 not returned if you are performing a math expression.  Inter-
                 nalError indicates that an error occurred. Retry your request
                 using NextToken , if present.

              Messages -> (list)
                 A list of messages with additional information about the data
                 returned.

                 (structure)
                     A  message returned by the GetMetricData API, including a
                     code and a description.

                     If a cross-Region GetMetricData operation  fails  with  a
                     code  of Forbidden and a value of Authentication too com-
                     plex to retrieve cross region data , you can correct  the
                     problem  by  running  the  GetMetricData operation in the
                     same Region where the metric data is.

                     Code -> (string)
                        The error code or status code associated with the mes-
                        sage.

                     Value -> (string)
                        The message text.

       NextToken -> (string)
          A token that marks the next batch of returned results.

       Messages -> (list)
          Contains a message about this GetMetricData operation, if the opera-
          tion results in such a message. An example of a message  that  might
          be returned is Maximum number of allowed metrics exceeded . If there
          is a message, as much of the operation as  possible  is  still  exe-
          cuted.

          A  message  appears here only if it is related to the global GetMet-
          ricData operation. Any message about a specific metric  returned  by
          the  operation  appears  in the MetricDataResult object returned for
          that metric.

          (structure)
              A message returned by the GetMetricData API,  including  a  code
              and a description.

              If  a  cross-Region GetMetricData operation fails with a code of
              Forbidden and a value of Authentication too complex to  retrieve
              cross  region  data , you can correct the problem by running the
              GetMetricData operation in the same Region where the metric data
              is.

              Code -> (string)
                 The error code or status code associated with the message.

              Value -> (string)
                 The message text.



                                                             GET-METRIC-DATA()
