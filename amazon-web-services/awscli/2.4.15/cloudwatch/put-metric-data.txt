PUT-METRIC-DATA()                                            PUT-METRIC-DATA()



NAME
       put-metric-data -

DESCRIPTION
       Publishes  metric  data  points  to Amazon CloudWatch. CloudWatch asso-
       ciates the data points with the specified metric. If the specified met-
       ric does not exist, CloudWatch creates the metric. When CloudWatch cre-
       ates a metric, it can take up to fifteen  minutes  for  the  metric  to
       appear in calls to ListMetrics .

       You  can  publish  either individual data points in the Value field, or
       arrays of values and the number of times each value occurred during the
       period  by using the Values and Counts fields in the MetricDatum struc-
       ture. Using the Values and Counts method enables you to publish  up  to
       150  values  per  metric  with  one PutMetricData request, and supports
       retrieving percentile statistics on this data.

       Each PutMetricData request is limited to 40 KB in size  for  HTTP  POST
       requests.  You  can  send a payload compressed by gzip. Each request is
       also limited to no more than 20 different metrics.

       Although the Value parameter accepts numbers of type  Double  ,  Cloud-
       Watch  rejects  values  that  are either too small or too large. Values
       must be in the range of -2^360 to 2^360. In  addition,  special  values
       (for example, NaN, +Infinity, -Infinity) are not supported.

       You can use up to 10 dimensions per metric to further clarify what data
       the metric collects. Each dimension consists of a Name and Value  pair.
       For  more  information about specifying dimensions, see Publishing Met-
       rics in the Amazon CloudWatch User Guide .

       You specify the time stamp to be associated with each data  point.  You
       can  specify  time stamps that are as much as two weeks before the cur-
       rent date, and as much as 2 hours after the current day and time.

       Data points with time stamps from 24 hours ago or longer  can  take  at
       least   48   hours   to   become   available   for   GetMetricData   or
       GetMetricStatistics from the time they are submitted. Data points  with
       time  stamps  between 3 and 24 hours ago can take as much as 2 hours to
       become available for for GetMetricData or GetMetricStatistics .

       CloudWatch needs raw data points to calculate percentile statistics. If
       you  publish  data using a statistic set instead, you can only retrieve
       percentile statistics for this data if one of the following  conditions
       is true:

       o The  SampleCount  value of the statistic set is 1 and Min , Max , and
         Sum are all equal.

       o The Min and Max are equal, and Sum is equal to Min multiplied by Sam-
         pleCount .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            put-metric-data
          --namespace <value>
          [--metric-data <value>]
          [--metric-name <value>]
          [--timestamp <value>]
          [--unit <value>]
          [--value <value>]
          [--dimensions <value>]
          [--statistic-values <value>]
          [--storage-resolution <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --namespace (string)
          The namespace for the metric data.

          To  avoid conflicts with Amazon Web Services service namespaces, you
          should not specify a namespace that begins with AWS/

       --metric-data (list)
          The data for the metric. The array can include no more than 20  met-
          rics per call.

          (structure)
              Encapsulates  the  information sent to either create a metric or
              add new values to be aggregated into an existing metric.

              MetricName -> (string)
                 The name of the metric.

              Dimensions -> (list)
                 The dimensions associated with the metric.

                 (structure)
                     A dimension is a name/value pair  that  is  part  of  the
                     identity  of a metric. You can assign up to 10 dimensions
                     to a metric. Because dimensions are part  of  the  unique
                     identifier  for  a  metric,  whenever  you  add  a unique
                     name/value pair to one of your metrics, you are  creating
                     a new variation of that metric.

                     Name -> (string)
                        The  name  of the dimension. Dimension names must con-
                        tain only ASCII characters and must include  at  least
                        one non-whitespace character.

                     Value -> (string)
                        The value of the dimension. Dimension values must con-
                        tain only ASCII characters and must include  at  least
                        one non-whitespace character.

              Timestamp -> (timestamp)
                 The  time the metric data was received, expressed as the num-
                 ber of milliseconds since Jan 1, 1970 00:00:00 UTC.

              Value -> (double)
                 The value for the metric.

                 Although the parameter accepts numbers of type Double, Cloud-
                 Watch  rejects values that are either too small or too large.
                 Values must be in the range of -2^360 to 2^360. In  addition,
                 special  values  (for example, NaN, +Infinity, -Infinity) are
                 not supported.

              StatisticValues -> (structure)
                 The statistical values for the metric.

                 SampleCount -> (double)
                     The number of samples used for the statistic set.

                 Sum -> (double)
                     The sum of values for the sample set.

                 Minimum -> (double)
                     The minimum value of the sample set.

                 Maximum -> (double)
                     The maximum value of the sample set.

              Values -> (list)
                 Array of numbers representing the values for the metric  dur-
                 ing the period. Each unique value is listed just once in this
                 array, and the corresponding number in the Counts array spec-
                 ifies  the  number  of  times  that value occurred during the
                 period. You can include up to 150 unique values in each  Put-
                 MetricData action that specifies a Values array.

                 Although  the  Values  array accepts numbers of type Double ,
                 CloudWatch rejects values that are either too  small  or  too
                 large.  Values  must  be  in the range of -2^360 to 2^360. In
                 addition,  special  values  (for  example,  NaN,   +Infinity,
                 -Infinity) are not supported.

                 (double)

              Counts -> (list)
                 Array  of  numbers  that is used along with the Values array.
                 Each number in the Count array is the  number  of  times  the
                 corresponding  value  in the Values array occurred during the
                 period.

                 If you omit the Counts array, the default of 1 is used as the
                 value  for each count. If you include a Counts array, it must
                 include the same amount of values as the Values array.

                 (double)

              Unit -> (string)
                 When you are using a Put operation, this  defines  what  unit
                 you want to use when storing the metric.

                 In  a  Get operation, this displays the unit that is used for
                 the metric.

              StorageResolution -> (integer)
                 Valid values are 1 and 60. Setting this to 1  specifies  this
                 metric as a high-resolution metric, so that CloudWatch stores
                 the metric with sub-minute resolution  down  to  one  second.
                 Setting this to 60 specifies this metric as a regular-resolu-
                 tion metric, which CloudWatch stores at 1-minute  resolution.
                 Currently,  high resolution is available only for custom met-
                 rics. For more information about high-resolution metrics, see
                 High-Resolution Metrics in the Amazon CloudWatch User Guide .

                 This field is optional, if you do not specify it the  default
                 of 60 is used.

       Shorthand Syntax:

          MetricName=string,Dimensions=[{Name=string,Value=string},{Name=string,Value=string}],Timestamp=timestamp,Value=double,StatisticValues={SampleCount=double,Sum=double,Minimum=double,Maximum=double},Values=double,double,Counts=double,double,Unit=string,StorageResolution=integer ...

       JSON Syntax:

          [
            {
              "MetricName": "string",
              "Dimensions": [
                {
                  "Name": "string",
                  "Value": "string"
                }
                ...
              ],
              "Timestamp": timestamp,
              "Value": double,
              "StatisticValues": {
                "SampleCount": double,
                "Sum": double,
                "Minimum": double,
                "Maximum": double
              },
              "Values": [double, ...],
              "Counts": [double, ...],
              "Unit": "Seconds"|"Microseconds"|"Milliseconds"|"Bytes"|"Kilobytes"|"Megabytes"|"Gigabytes"|"Terabytes"|"Bits"|"Kilobits"|"Megabits"|"Gigabits"|"Terabits"|"Percent"|"Count"|"Bytes/Second"|"Kilobytes/Second"|"Megabytes/Second"|"Gigabytes/Second"|"Terabytes/Second"|"Bits/Second"|"Kilobits/Second"|"Megabits/Second"|"Gigabits/Second"|"Terabits/Second"|"Count/Second"|"None",
              "StorageResolution": integer
            }
            ...
          ]

       --metric-name (string) The name of the metric.

       --timestamp  (string) The time stamp used for the metric. If not speci-
       fied, the default value  is  set  to  the  time  the  metric  data  was
       received.

       --unit (string) The unit of metric.

       --value (string) The value for the metric. Although the --value parame-
       ter accepts numbers of type Double, Amazon CloudWatch truncates  values
       with  very  large exponents. Values with base-10 exponents greater than
       126 (1 x 10^126) are truncated. Likewise, values with base-10 exponents
       less than -130 (1 x 10^-130) are also truncated.

       --dimensions  (string) The --dimensions argument further expands on the
       identity of a metric using a Name=Value pair, separated by commas,  for
       example:   --dimensions  InstanceID=1-23456789,InstanceType=m1.small  .
       Note that the --dimensions argument has a different format when used in
       get-metric-data  ,  where for the same example you would use the format
       --dimensions      Name=InstanceID,Value=i-aaba32d4       Name=Instance-
       Type,value=m1.small .

       --statistic-values  (string) A set of statistical values describing the
       metric.

       --storage-resolution (string)
          Valid values are 1 and 60. Setting this to 1 specifies  this  metric
          as  a  high-resolution  metric, so that CloudWatch stores the metric
          with sub-minute resolution down to one second. Setting  this  to  60
          specifies  this  metric as a regular-resolution metric, which Cloud-
          Watch stores at 1-minute resolution. Currently, high  resolution  is
          available  only  for  custom  metrics.  For  more  information about
          high-resolution metrics, see High-Resolution Metrics in  the  Amazon
          CloudWatch User Guide .

          This  field  is optional, if you do not specify it the default of 60
          is used.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To publish a custom metric to Amazon CloudWatch

       The following example uses the put-metric-data  command  to  publish  a
       custom metric to Amazon CloudWatch:

          aws cloudwatch put-metric-data --namespace "Usage Metrics" --metric-data file://metric.json

       The  values  for  the  metric  itself are stored in the JSON file, met-
       ric.json.

       Here are the contents of that file:

          [
            {
              "MetricName": "New Posts",
              "Timestamp": "Wednesday, June 12, 2013 8:28:20 PM",
              "Value": 0.50,
              "Unit": "Count"
            }
          ]

       For more information, see  Publishing  Custom  Metrics  in  the  Amazon
       CloudWatch Developer Guide.

       To specify multiple dimensions

       The  following  example illustrates how to specify multiple dimensions.
       Each dimension is specified as a Name=Value pair.  Multiple  dimensions
       are separated by a comma.:

          aws cloudwatch put-metric-data --metric-name Buffers --namespace MyNameSpace --unit Bytes --value 231434333 --dimensions InstanceID=1-23456789,InstanceType=m1.small

OUTPUT
       None



                                                             PUT-METRIC-DATA()
