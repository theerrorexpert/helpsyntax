LIST-FUNCTIONS()                                              LIST-FUNCTIONS()



NAME
       list-functions -

DESCRIPTION
       Returns  a list of Lambda functions, with the version-specific configu-
       ration of each. Lambda returns up to 50 functions per call.

       Set FunctionVersion to ALL to include all published  versions  of  each
       function in addition to the unpublished version.

       NOTE:
          The ListFunctions action returns a subset of the  FunctionConfigura-
          tion fields. To get the additional fields  (State,  StateReasonCode,
          StateReason,  LastUpdateStatus, LastUpdateStatusReason, LastUpdateS-
          tatusReasonCode) for a function or version, use  GetFunction .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       list-functions is a paginated operation.  Multiple  API  calls  may  be
       issued  in  order  to  retrieve the entire data set of results. You can
       disable pagination by providing the --no-paginate argument.  When using
       --output  text  and  the  --query argument on a paginated response, the
       --query argument must extract data from the results  of  the  following
       query expressions: Functions

SYNOPSIS
            list-functions
          [--master-region <value>]
          [--function-version <value>]
          [--max-items <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --master-region (string)
          For  Lambda@Edge  functions,  the  Amazon Web Services Region of the
          master function. For example, us-east-1 filters the  list  of  func-
          tions to only include Lambda@Edge functions replicated from a master
          function in US East (N. Virginia). If specified, you must set  Func-
          tionVersion to ALL .

       --function-version (string)
          Set  to  ALL  to  include entries for all published versions of each
          function.

          Possible values:

          o ALL

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --starting-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The size of each page to get in the AWS service call. This does  not
          affect the number of items returned in the command's output. Setting
          a smaller page size results  in  more  calls  to  the  AWS  service,
          retrieving  fewer  items in each call. This can help prevent the AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To retrieve a list of Lambda functions

       The  following  list-functions  example  displays  a list of all of the
       functions for the current user.

          aws lambda list-functions

       Output:

          {
              "Functions": [
                  {
                      "TracingConfig": {
                          "Mode": "PassThrough"
                      },
                      "Version": "$LATEST",
                      "CodeSha256": "dBG9m8SGdmlEjw/JYXlhhvCrAv5TxvXsbL/RMr0fT/I=",
                      "FunctionName": "helloworld",
                      "MemorySize": 128,
                      "RevisionId": "1718e831-badf-4253-9518-d0644210af7b",
                      "CodeSize": 294,
                      "FunctionArn": "arn:aws:lambda:us-west-2:123456789012:function:helloworld",
                      "Handler": "helloworld.handler",
                      "Role": "arn:aws:iam::123456789012:role/service-role/MyTestFunction-role-zgur6bf4",
                      "Timeout": 3,
                      "LastModified": "2019-09-23T18:32:33.857+0000",
                      "Runtime": "nodejs10.x",
                      "Description": ""
                  },
                  {
                      "TracingConfig": {
                          "Mode": "PassThrough"
                      },
                      "Version": "$LATEST",
                      "CodeSha256": "sU0cJ2/hOZevwV/lTxCuQqK3gDZP3i8gUoqUUVRmY6E=",
                      "FunctionName": "my-function",
                      "VpcConfig": {
                          "SubnetIds": [],
                          "VpcId": "",
                          "SecurityGroupIds": []
                      },
                      "MemorySize": 256,
                      "RevisionId": "93017fc9-59cb-41dc-901b-4845ce4bf668",
                      "CodeSize": 266,
                      "FunctionArn": "arn:aws:lambda:us-west-2:123456789012:function:my-function",
                      "Handler": "index.handler",
                      "Role": "arn:aws:iam::123456789012:role/service-role/helloWorldPython-role-uy3l9qyq",
                      "Timeout": 3,
                      "LastModified": "2019-10-01T16:47:28.490+0000",
                      "Runtime": "nodejs10.x",
                      "Description": ""
                  },
                  {
                      "Layers": [
                          {
                              "CodeSize": 41784542,
                              "Arn": "arn:aws:lambda:us-west-2:420165488524:layer:AWSLambda-Python37-SciPy1x:2"
                          },
                          {
                              "CodeSize": 4121,
                              "Arn": "arn:aws:lambda:us-west-2:123456789012:layer:pythonLayer:1"
                          }
                      ],
                      "TracingConfig": {
                          "Mode": "PassThrough"
                      },
                      "Version": "$LATEST",
                      "CodeSha256": "ZQukCqxtkqFgyF2cU41Avj99TKQ/hNihPtDtRcc08mI=",
                      "FunctionName": "my-python-function",
                      "VpcConfig": {
                          "SubnetIds": [],
                          "VpcId": "",
                          "SecurityGroupIds": []
                      },
                      "MemorySize": 128,
                      "RevisionId": "80b4eabc-acf7-4ea8-919a-e874c213707d",
                      "CodeSize": 299,
                      "FunctionArn": "arn:aws:lambda:us-west-2:123456789012:function:my-python-function",
                      "Handler": "lambda_function.lambda_handler",
                      "Role": "arn:aws:iam::123456789012:role/service-role/my-python-function-role-z5g7dr6n",
                      "Timeout": 3,
                      "LastModified": "2019-10-01T19:40:41.643+0000",
                      "Runtime": "python3.7",
                      "Description": ""
                  }
              ]
          }

       For more information, see AWS Lambda Function Configuration in the  AWS
       Lambda Developer Guide.

OUTPUT
       NextMarker -> (string)
          The  pagination token that's included if more results are available.

       Functions -> (list)
          A list of Lambda functions.

          (structure)
              Details about a function's configuration.

              FunctionName -> (string)
                 The name of the function.

              FunctionArn -> (string)
                 The function's Amazon Resource Name (ARN).

              Runtime -> (string)
                 The runtime environment for the Lambda function.

              Role -> (string)
                 The function's execution role.

              Handler -> (string)
                 The function that Lambda calls to begin executing your  func-
                 tion.

              CodeSize -> (long)
                 The size of the function's deployment package, in bytes.

              Description -> (string)
                 The function's description.

              Timeout -> (integer)
                 The  amount  of time in seconds that Lambda allows a function
                 to run before stopping it.

              MemorySize -> (integer)
                 The amount of memory available to the function at runtime.

              LastModified -> (string)
                 The date and time that the  function  was  last  updated,  in
                 ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).

              CodeSha256 -> (string)
                 The SHA256 hash of the function's deployment package.

              Version -> (string)
                 The version of the Lambda function.

              VpcConfig -> (structure)
                 The function's networking configuration.

                 SubnetIds -> (list)
                     A list of VPC subnet IDs.

                     (string)

                 SecurityGroupIds -> (list)
                     A list of VPC security groups IDs.

                     (string)

                 VpcId -> (string)
                     The ID of the VPC.

              DeadLetterConfig -> (structure)
                 The function's dead letter queue.

                 TargetArn -> (string)
                     The  Amazon Resource Name (ARN) of an Amazon SQS queue or
                     Amazon SNS topic.

              Environment -> (structure)
                 The function's environment variables .

                 Variables -> (map)
                     Environment variable key-value pairs.

                     key -> (string)

                     value -> (string)

                 Error -> (structure)
                     Error messages for environment variables that couldn't be
                     applied.

                     ErrorCode -> (string)
                        The error code.

                     Message -> (string)
                        The error message.

              KMSKeyArn -> (string)
                 The KMS key that's used to encrypt the function's environment
                 variables. This key is only returned if you've  configured  a
                 customer managed key.

              TracingConfig -> (structure)
                 The function's X-Ray tracing configuration.

                 Mode -> (string)
                     The tracing mode.

              MasterArn -> (string)
                 For Lambda@Edge functions, the ARN of the main function.

              RevisionId -> (string)
                 The latest updated revision of the function or alias.

              Layers -> (list)
                 The function's layers .

                 (structure)
                     An Lambda layer .

                     Arn -> (string)
                        The  Amazon Resource Name (ARN) of the function layer.

                     CodeSize -> (long)
                        The size of the layer archive in bytes.

                     SigningProfileVersionArn -> (string)
                        The Amazon Resource Name (ARN) for a  signing  profile
                        version.

                     SigningJobArn -> (string)
                        The Amazon Resource Name (ARN) of a signing job.

              State -> (string)
                 The current state of the function. When the state is Inactive
                 , you can reactivate the function by invoking it.

              StateReason -> (string)
                 The reason for the function's current state.

              StateReasonCode -> (string)
                 The reason code for the function's current  state.  When  the
                 code is Creating , you can't invoke or modify the function.

              LastUpdateStatus -> (string)
                 The status of the last update that was performed on the func-
                 tion. This is first set to Successful after function creation
                 completes.

              LastUpdateStatusReason -> (string)
                 The  reason  for  the  last  update that was performed on the
                 function.

              LastUpdateStatusReasonCode -> (string)
                 The reason code for the last update that was performed on the
                 function.

              FileSystemConfigs -> (list)
                 Connection settings for an Amazon EFS file system .

                 (structure)
                     Details  about  the  connection between a Lambda function
                     and an Amazon EFS file system .

                     Arn -> (string)
                        The Amazon Resource  Name  (ARN)  of  the  Amazon  EFS
                        access  point that provides access to the file system.

                     LocalMountPath -> (string)
                        The path where the function can access the  file  sys-
                        tem, starting with /mnt/ .

              PackageType -> (string)
                 The  type  of  deployment package. Set to Image for container
                 image and set Zip for .zip file archive.

              ImageConfigResponse -> (structure)
                 The function's image configuration values.

                 ImageConfig -> (structure)
                     Configuration values that override  the  container  image
                     Dockerfile.

                     EntryPoint -> (list)
                        Specifies  the entry point to their application, which
                        is typically the location of the runtime executable.

                        (string)

                     Command -> (list)
                        Specifies parameters that you want  to  pass  in  with
                        ENTRYPOINT.

                        (string)

                     WorkingDirectory -> (string)
                        Specifies the working directory.

                 Error -> (structure)
                     Error response to GetFunctionConfiguration.

                     ErrorCode -> (string)
                        Error code.

                     Message -> (string)
                        Error message.

              SigningProfileVersionArn -> (string)
                 The ARN of the signing profile version.

              SigningJobArn -> (string)
                 The ARN of the signing job.

              Architectures -> (list)
                 The  instruction set architecture that the function supports.
                 Architecture is a string array with one of the valid  values.
                 The default architecture value is x86_64 .

                 (string)



                                                              LIST-FUNCTIONS()
