LIST-EVENT-SOURCE-MAPPINGS()                      LIST-EVENT-SOURCE-MAPPINGS()



NAME
       list-event-source-mappings -

DESCRIPTION
       Lists  event  source  mappings.  Specify an EventSourceArn to only show
       event source mappings for a single event source.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       list-event-source-mappings is a paginated operation. Multiple API calls
       may  be issued in order to retrieve the entire data set of results. You
       can disable pagination by providing the --no-paginate  argument.   When
       using  --output  text and the --query argument on a paginated response,
       the --query argument must extract data from the results of the  follow-
       ing query expressions: EventSourceMappings

SYNOPSIS
            list-event-source-mappings
          [--event-source-arn <value>]
          [--function-name <value>]
          [--max-items <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --event-source-arn (string)
          The Amazon Resource Name (ARN) of the event source.

          o Amazon  Kinesis - The ARN of the data stream or a stream consumer.

          o Amazon DynamoDB Streams - The ARN of the stream.

          o Amazon Simple Queue Service - The ARN of the queue.

          o Amazon Managed Streaming for Apache Kafka - The ARN of  the  clus-
            ter.

       --function-name (string)
          The name of the Lambda function.
              Name formats

          o Function name - MyFunction .

          o Function    ARN    -   arn:aws:lambda:us-west-2:123456789012:func-
            tion:MyFunction .

          o Version or Alias ARN - arn:aws:lambda:us-west-2:123456789012:func-
            tion:MyFunction:PROD .

          o Partial ARN - 123456789012:function:MyFunction .

          The  length  constraint applies only to the full ARN. If you specify
          only the function name, it's limited to 64 characters in length.

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --starting-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The size of each page to get in the AWS service call. This does  not
          affect the number of items returned in the command's output. Setting
          a smaller page size results  in  more  calls  to  the  AWS  service,
          retrieving  fewer  items in each call. This can help prevent the AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To list the event source mappings for a function

       The following list-event-source-mappings example displays a list of the
       event source mappings for the my-function Lambda function.

          aws lambda list-event-source-mappings \
              --function-name my-function

       Output:

          {
              "EventSourceMappings": [
                  {
                      "UUID": "a1b2c3d4-5678-90ab-cdef-11111EXAMPLE",
                      "StateTransitionReason": "USER_INITIATED",
                      "LastModified": 1569284520.333,
                      "BatchSize": 5,
                      "State": "Enabled",
                      "FunctionArn": "arn:aws:lambda:us-west-2:123456789012:function:my-function",
                      "EventSourceArn": "arn:aws:sqs:us-west-2:123456789012:mySQSqueue"
                  }
              ]
          }

       For more information, see AWS Lambda Event Source Mapping  in  the  AWS
       Lambda Developer Guide.

OUTPUT
       NextMarker -> (string)
          A pagination token that's returned when the response doesn't contain
          all event source mappings.

       EventSourceMappings -> (list)
          A list of event source mappings.

          (structure)
              A mapping between an Amazon Web Services resource and  a  Lambda
              function. For details, see  CreateEventSourceMapping .

              UUID -> (string)
                 The identifier of the event source mapping.

              StartingPosition -> (string)
                 The  position  in  a  stream  from  which  to  start reading.
                 Required for Amazon Kinesis, Amazon DynamoDB, and Amazon  MSK
                 stream  sources.  AT_TIMESTAMP  is  supported only for Amazon
                 Kinesis streams.

              StartingPositionTimestamp -> (timestamp)
                 With StartingPosition set to AT_TIMESTAMP  ,  the  time  from
                 which to start reading.

              BatchSize -> (integer)
                 The maximum number of records in each batch that Lambda pulls
                 from your stream or queue and sends to your function.  Lambda
                 passes  all  of the records in the batch to the function in a
                 single call, up to the payload limit for synchronous  invoca-
                 tion (6 MB).

                 Default value: Varies by service. For Amazon SQS, the default
                 is 10. For all other services, the default is 100.

                 Related setting: When you set BatchSize to  a  value  greater
                 than  10,  you  must set MaximumBatchingWindowInSeconds to at
                 least 1.

              MaximumBatchingWindowInSeconds -> (integer)
                 (Streams and Amazon SQS standard queues) The  maximum  amount
                 of  time,  in  seconds,  that Lambda spends gathering records
                 before invoking the function.

                 Default: 0

                 Related setting: When you set BatchSize to  a  value  greater
                 than  10,  you  must set MaximumBatchingWindowInSeconds to at
                 least 1.

              ParallelizationFactor -> (integer)
                 (Streams only) The number of batches to process  concurrently
                 from each shard. The default value is 1.

              EventSourceArn -> (string)
                 The Amazon Resource Name (ARN) of the event source.

              FilterCriteria -> (structure)
                 (Streams  and  Amazon  SQS) An object that defines the filter
                 criteria that determine  whether  Lambda  should  process  an
                 event. For more information, see Lambda event filtering .

                 Filters -> (list)
                     A list of filters.

                     (structure)
                        A   structure  within  a  FilterCriteria  object  that
                        defines an event filtering pattern.

                        Pattern -> (string)
                            A filter pattern. For more information on the syn-
                            tax  of a filter pattern, see Filter rule syntax .

              FunctionArn -> (string)
                 The ARN of the Lambda function.

              LastModified -> (timestamp)
                 The date that the event source mapping was  last  updated  or
                 that its state changed.

              LastProcessingResult -> (string)
                 The result of the last Lambda invocation of your function.

              State -> (string)
                 The  state  of the event source mapping. It can be one of the
                 following: Creating , Enabling , Enabled , Disabling  ,  Dis-
                 abled , Updating , or Deleting .

              StateTransitionReason -> (string)
                 Indicates  whether  a  user or Lambda made the last change to
                 the event source mapping.

              DestinationConfig -> (structure)
                 (Streams only) An Amazon SQS queue or Amazon SNS topic desti-
                 nation for discarded records.

                 OnSuccess -> (structure)
                     The destination configuration for successful invocations.

                     Destination -> (string)
                        The Amazon Resource  Name  (ARN)  of  the  destination
                        resource.

                 OnFailure -> (structure)
                     The destination configuration for failed invocations.

                     Destination -> (string)
                        The  Amazon  Resource  Name  (ARN)  of the destination
                        resource.

              Topics -> (list)
                 The name of the Kafka topic.

                 (string)

              Queues -> (list)
                 (Amazon MQ) The name of  the  Amazon  MQ  broker  destination
                 queue to consume.

                 (string)

              SourceAccessConfigurations -> (list)
                 An  array  of the authentication protocol, VPC components, or
                 virtual host to secure and define your event source.

                 (structure)
                     To secure and define access to your event source, you can
                     specify  the  authentication protocol, VPC components, or
                     virtual host.

                     Type -> (string)
                        The type of authentication protocol,  VPC  components,
                        or  virtual  host  for your event source. For example:
                        "Type":"SASL_SCRAM_512_AUTH" .

                        o BASIC_AUTH - (Amazon MQ) The Secrets Manager  secret
                          that stores your broker credentials.

                        o BASIC_AUTH - (Self-managed Apache Kafka) The Secrets
                          Manager ARN of your secret key used  for  SASL/PLAIN
                          authentication of your Apache Kafka brokers.

                        o VPC_SUBNET  -  The subnets associated with your VPC.
                          Lambda connects to these subnets to fetch data  from
                          your self-managed Apache Kafka cluster.

                        o VPC_SECURITY_GROUP  - The VPC security group used to
                          manage access to your self-managed Apache Kafka bro-
                          kers.

                        o SASL_SCRAM_256_AUTH  -  The  Secrets  Manager ARN of
                          your secret key used for SASL SCRAM-256  authentica-
                          tion of your self-managed Apache Kafka brokers.

                        o SASL_SCRAM_512_AUTH  -  The  Secrets  Manager ARN of
                          your secret key used for SASL SCRAM-512  authentica-
                          tion of your self-managed Apache Kafka brokers.

                        o VIRTUAL_HOST  -  (Amazon MQ) The name of the virtual
                          host in your RabbitMQ broker. Lambda uses this  Rab-
                          bitMQ host as the event source. This property cannot
                          be  specified  in  an  UpdateEventSourceMapping  API
                          call.

                        o CLIENT_CERTIFICATE_TLS_AUTH - (Amazon MSK, Self-man-
                          aged Apache Kafka) The Secrets Manager ARN  of  your
                          secret  key  containing the certificate chain (X.509
                          PEM), private key  (PKCS#8  PEM),  and  private  key
                          password  (optional) used for mutual TLS authentica-
                          tion of your MSK/Apache Kafka brokers.

                        o SERVER_ROOT_CA_CERTIFICATE  -  (Self-managed  Apache
                          Kafka)  The  Secrets  Manager ARN of your secret key
                          containing the root CA certificate (X.509 PEM)  used
                          for TLS encryption of your Apache Kafka brokers.

                     URI -> (string)
                        The  value for your chosen configuration in Type . For
                        example:          "URI":          "arn:aws:secretsman-
                        ager:us-east-1:01234567890:secret:MyBrokerSecretName"
                        .

              SelfManagedEventSource -> (structure)
                 The self-managed Apache Kafka cluster for your event  source.

                 Endpoints -> (map)
                     The  list  of bootstrap servers for your Kafka brokers in
                     the    following    format:    "KAFKA_BOOTSTRAP_SERVERS":
                     ["abc.xyz.com:xxxx","abc2.xyz.com:xxxx"] .

                     key -> (string)

                     value -> (list)
                        (string)

              MaximumRecordAgeInSeconds -> (integer)
                 (Streams  only) Discard records older than the specified age.
                 The default value is -1, which sets the maximum age to  infi-
                 nite.  When  the  value is set to infinite, Lambda never dis-
                 cards old records.

              BisectBatchOnFunctionError -> (boolean)
                 (Streams only) If the function returns an  error,  split  the
                 batch in two and retry. The default value is false.

              MaximumRetryAttempts -> (integer)
                 (Streams  only) Discard records after the specified number of
                 retries. The default value is -1, which sets the maximum num-
                 ber  of  retries  to  infinite.  When MaximumRetryAttempts is
                 infinite, Lambda retries  failed  records  until  the  record
                 expires in the event source.

              TumblingWindowInSeconds -> (integer)
                 (Streams  only)  The duration in seconds of a processing win-
                 dow. The range is 1900 seconds.

              FunctionResponseTypes -> (list)
                 (Streams only) A list of current response type enums  applied
                 to the event source mapping.

                 (string)



                                                  LIST-EVENT-SOURCE-MAPPINGS()
