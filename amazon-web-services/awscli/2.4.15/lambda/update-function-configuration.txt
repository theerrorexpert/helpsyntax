UPDATE-FUNCTION-CONFIGURATION()                UPDATE-FUNCTION-CONFIGURATION()



NAME
       update-function-configuration -

DESCRIPTION
       Modify the version-specific settings of a Lambda function.

       When  you update a function, Lambda provisions an instance of the func-
       tion and its supporting resources. If your function connects to a  VPC,
       this  process can take a minute. During this time, you can't modify the
       function, but you can still invoke it. The LastUpdateStatus  ,  LastUp-
       dateStatusReason   ,   and  LastUpdateStatusReasonCode  fields  in  the
       response from  GetFunctionConfiguration indicate  when  the  update  is
       complete  and the function is processing events with the new configura-
       tion. For more information, see Function States .

       These settings can vary between versions of a function and  are  locked
       when  you  publish  a  version. You can't modify the configuration of a
       published version, only the unpublished version.

       To configure function concurrency,  use   PutFunctionConcurrency  .  To
       grant  invoke permissions to an account or Amazon Web Services service,
       use  AddPermission .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            update-function-configuration
          --function-name <value>
          [--role <value>]
          [--handler <value>]
          [--description <value>]
          [--timeout <value>]
          [--memory-size <value>]
          [--vpc-config <value>]
          [--environment <value>]
          [--runtime <value>]
          [--dead-letter-config <value>]
          [--kms-key-arn <value>]
          [--tracing-config <value>]
          [--revision-id <value>]
          [--layers <value>]
          [--file-system-configs <value>]
          [--image-config <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --function-name (string)
          The name of the Lambda function.
              Name formats

          o Function name - my-function .

          o Function   ARN    -    arn:aws:lambda:us-west-2:123456789012:func-
            tion:my-function .

          o Partial ARN - 123456789012:function:my-function .

          The  length  constraint applies only to the full ARN. If you specify
          only the function name, it is limited to 64 characters in length.

       --role (string)
          The Amazon Resource Name (ARN) of the function's execution role.

       --handler (string)
          The name of the method within your code that Lambda calls to execute
          your  function.  Handler  is required if the deployment package is a
          .zip file archive. The format includes the file name.  It  can  also
          include  namespaces  and other qualifiers, depending on the runtime.
          For more information, see Programming Model .

       --description (string)
          A description of the function.

       --timeout (integer)
          The amount of time (in seconds) that Lambda allows a function to run
          before  stopping  it.  The default is 3 seconds. The maximum allowed
          value is 900 seconds. For additional information, see Lambda  execu-
          tion environment .

       --memory-size (integer)
          The  amount of memory available to the function at runtime. Increas-
          ing the function memory  also  increases  its  CPU  allocation.  The
          default value is 128 MB. The value can be any multiple of 1 MB.

       --vpc-config (structure)
          For  network connectivity to Amazon Web Services resources in a VPC,
          specify a list of security groups and subnets in the VPC.  When  you
          connect  a  function  to a VPC, it can only access resources and the
          internet through that VPC. For more information, see VPC Settings  .

          SubnetIds -> (list)
              A list of VPC subnet IDs.

              (string)

          SecurityGroupIds -> (list)
              A list of VPC security groups IDs.

              (string)

       Shorthand Syntax:

          SubnetIds=string,string,SecurityGroupIds=string,string

       JSON Syntax:

          {
            "SubnetIds": ["string", ...],
            "SecurityGroupIds": ["string", ...]
          }

       --environment (structure)
          Environment  variables that are accessible from function code during
          execution.

          Variables -> (map)
              Environment variable key-value pairs. For more information,  see
              Using Lambda environment variables .

              key -> (string)

              value -> (string)

       Shorthand Syntax:

          Variables={KeyName1=string,KeyName2=string}

       JSON Syntax:

          {
            "Variables": {"string": "string"
              ...}
          }

       --runtime (string)
          The  identifier  of  the function's runtime . Runtime is required if
          the deployment package is a .zip file archive.

          Possible values:

          o nodejs

          o nodejs4.3

          o nodejs6.10

          o nodejs8.10

          o nodejs10.x

          o nodejs12.x

          o nodejs14.x

          o java8

          o java8.al2

          o java11

          o python2.7

          o python3.6

          o python3.7

          o python3.8

          o python3.9

          o dotnetcore1.0

          o dotnetcore2.0

          o dotnetcore2.1

          o dotnetcore3.1

          o nodejs4.3-edge

          o go1.x

          o ruby2.5

          o ruby2.7

          o provided

          o provided.al2

       --dead-letter-config (structure)
          A dead letter queue configuration that specifies the queue or  topic
          where  Lambda  sends  asynchronous events when they fail processing.
          For more information, see Dead Letter Queues .

          TargetArn -> (string)
              The Amazon Resource Name (ARN) of an Amazon SQS queue or  Amazon
              SNS topic.

       Shorthand Syntax:

          TargetArn=string

       JSON Syntax:

          {
            "TargetArn": "string"
          }

       --kms-key-arn (string)
          The  ARN of the Amazon Web Services Key Management Service (KMS) key
          that's used to encrypt your  function's  environment  variables.  If
          it's not provided, Lambda uses a default service key.

       --tracing-config (structure)
          Set Mode to Active to sample and trace a subset of incoming requests
          with X-Ray .

          Mode -> (string)
              The tracing mode.

       Shorthand Syntax:

          Mode=string

       JSON Syntax:

          {
            "Mode": "Active"|"PassThrough"
          }

       --revision-id (string)
          Only update the function if the revision ID matches  the  ID  that's
          specified.  Use  this  option to avoid modifying a function that has
          changed since you last read it.

       --layers (list)
          A list of function layers to add to the function's  execution  envi-
          ronment. Specify each layer by its ARN, including the version.

          (string)

       Syntax:

          "string" "string" ...

       --file-system-configs (list)
          Connection settings for an Amazon EFS file system.

          (structure)
              Details  about  the  connection between a Lambda function and an
              Amazon EFS file system .

              Arn -> (string)
                 The Amazon Resource Name (ARN) of the Amazon EFS access point
                 that provides access to the file system.

              LocalMountPath -> (string)
                 The  path  where  the  function  can  access the file system,
                 starting with /mnt/ .

       Shorthand Syntax:

          Arn=string,LocalMountPath=string ...

       JSON Syntax:

          [
            {
              "Arn": "string",
              "LocalMountPath": "string"
            }
            ...
          ]

       --image-config (structure)
              Container image configuration values that override the values in
              the container image Docker file.

          EntryPoint -> (list)
              Specifies  the  entry point to their application, which is typi-
              cally the location of the runtime executable.

              (string)

          Command -> (list)
              Specifies parameters that you want to pass in with ENTRYPOINT.

              (string)

          WorkingDirectory -> (string)
              Specifies the working directory.

       Shorthand Syntax:

          EntryPoint=string,string,Command=string,string,WorkingDirectory=string

       JSON Syntax:

          {
            "EntryPoint": ["string", ...],
            "Command": ["string", ...],
            "WorkingDirectory": "string"
          }

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To modify the configuration of a function

       The following update-function-configuration example modifies the memory
       size to be 256 MB for the unpublished ($LATEST) version of the my-func-
       tion function.

          aws lambda update-function-configuration \
              --function-name  my-function \
              --memory-size 256

       Output:

          {
              "FunctionName": "my-function",
              "LastModified": "2019-09-26T20:28:40.438+0000",
              "RevisionId": "e52502d4-9320-4688-9cd6-152a6ab7490d",
              "MemorySize": 256,
              "Version": "$LATEST",
              "Role": "arn:aws:iam::123456789012:role/service-role/my-function-role-uy3l9qyq",
              "Timeout": 3,
              "Runtime": "nodejs10.x",
              "TracingConfig": {
                  "Mode": "PassThrough"
              },
              "CodeSha256": "5tT2qgzYUHaqwR716pZ2dpkn/0J1FrzJmlKidWoaCgk=",
              "Description": "",
              "VpcConfig": {
                  "SubnetIds": [],
                  "VpcId": "",
                  "SecurityGroupIds": []
              },
              "CodeSize": 304,
              "FunctionArn": "arn:aws:lambda:us-west-2:123456789012:function:my-function",
              "Handler": "index.handler"
          }

       For more information, see AWS Lambda Function Configuration in the  AWS
       Lambda Developer Guide.

OUTPUT
       FunctionName -> (string)
          The name of the function.

       FunctionArn -> (string)
          The function's Amazon Resource Name (ARN).

       Runtime -> (string)
          The runtime environment for the Lambda function.

       Role -> (string)
          The function's execution role.

       Handler -> (string)
          The function that Lambda calls to begin executing your function.

       CodeSize -> (long)
          The size of the function's deployment package, in bytes.

       Description -> (string)
          The function's description.

       Timeout -> (integer)
          The  amount  of time in seconds that Lambda allows a function to run
          before stopping it.

       MemorySize -> (integer)
          The amount of memory available to the function at runtime.

       LastModified -> (string)
          The date and time that the function was last  updated,  in  ISO-8601
          format (YYYY-MM-DDThh:mm:ss.sTZD).

       CodeSha256 -> (string)
          The SHA256 hash of the function's deployment package.

       Version -> (string)
          The version of the Lambda function.

       VpcConfig -> (structure)
          The function's networking configuration.

          SubnetIds -> (list)
              A list of VPC subnet IDs.

              (string)

          SecurityGroupIds -> (list)
              A list of VPC security groups IDs.

              (string)

          VpcId -> (string)
              The ID of the VPC.

       DeadLetterConfig -> (structure)
          The function's dead letter queue.

          TargetArn -> (string)
              The  Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon
              SNS topic.

       Environment -> (structure)
          The function's environment variables .

          Variables -> (map)
              Environment variable key-value pairs.

              key -> (string)

              value -> (string)

          Error -> (structure)
              Error  messages  for  environment  variables  that  couldn't  be
              applied.

              ErrorCode -> (string)
                 The error code.

              Message -> (string)
                 The error message.

       KMSKeyArn -> (string)
          The  KMS key that's used to encrypt the function's environment vari-
          ables. This key is only returned if  you've  configured  a  customer
          managed key.

       TracingConfig -> (structure)
          The function's X-Ray tracing configuration.

          Mode -> (string)
              The tracing mode.

       MasterArn -> (string)
          For Lambda@Edge functions, the ARN of the main function.

       RevisionId -> (string)
          The latest updated revision of the function or alias.

       Layers -> (list)
          The function's layers .

          (structure)
              An Lambda layer .

              Arn -> (string)
                 The Amazon Resource Name (ARN) of the function layer.

              CodeSize -> (long)
                 The size of the layer archive in bytes.

              SigningProfileVersionArn -> (string)
                 The Amazon Resource Name (ARN) for a signing profile version.

              SigningJobArn -> (string)
                 The Amazon Resource Name (ARN) of a signing job.

       State -> (string)
          The current state of the function. When the state is Inactive ,  you
          can reactivate the function by invoking it.

       StateReason -> (string)
          The reason for the function's current state.

       StateReasonCode -> (string)
          The  reason  code for the function's current state. When the code is
          Creating , you can't invoke or modify the function.

       LastUpdateStatus -> (string)
          The status of the last update that was performed  on  the  function.
          This is first set to Successful after function creation completes.

       LastUpdateStatusReason -> (string)
          The reason for the last update that was performed on the function.

       LastUpdateStatusReasonCode -> (string)
          The  reason code for the last update that was performed on the func-
          tion.

       FileSystemConfigs -> (list)
          Connection settings for an Amazon EFS file system .

          (structure)
              Details about the connection between a Lambda  function  and  an
              Amazon EFS file system .

              Arn -> (string)
                 The Amazon Resource Name (ARN) of the Amazon EFS access point
                 that provides access to the file system.

              LocalMountPath -> (string)
                 The path where the  function  can  access  the  file  system,
                 starting with /mnt/ .

       PackageType -> (string)
          The type of deployment package. Set to Image for container image and
          set Zip for .zip file archive.

       ImageConfigResponse -> (structure)
          The function's image configuration values.

          ImageConfig -> (structure)
              Configuration values that override the container  image  Docker-
              file.

              EntryPoint -> (list)
                 Specifies the entry point to their application, which is typ-
                 ically the location of the runtime executable.

                 (string)

              Command -> (list)
                 Specifies parameters that you want to  pass  in  with  ENTRY-
                 POINT.

                 (string)

              WorkingDirectory -> (string)
                 Specifies the working directory.

          Error -> (structure)
              Error response to GetFunctionConfiguration.

              ErrorCode -> (string)
                 Error code.

              Message -> (string)
                 Error message.

       SigningProfileVersionArn -> (string)
          The ARN of the signing profile version.

       SigningJobArn -> (string)
          The ARN of the signing job.

       Architectures -> (list)
          The  instruction set architecture that the function supports. Archi-
          tecture is a string array with one of the valid values. The  default
          architecture value is x86_64 .

          (string)



                                               UPDATE-FUNCTION-CONFIGURATION()
