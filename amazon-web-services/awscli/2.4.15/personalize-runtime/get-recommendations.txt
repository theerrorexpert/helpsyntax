GET-RECOMMENDATIONS()                                    GET-RECOMMENDATIONS()



NAME
       get-recommendations -

DESCRIPTION
       Returns a list of recommended items. For campaigns, the campaign's Ama-
       zon Resource Name (ARN) is required and  the  required  user  and  item
       input  depends  on  the recipe type used to create the solution backing
       the campaign as follows:

       o USER_PERSONALIZATION - userId required, itemId not used

       o RELATED_ITEMS - itemId required, userId not used

       NOTE:
          Campaigns that are backed by a solution created using  a  recipe  of
          type PERSONALIZED_RANKING use the API.

       For  recommenders,  the  recommender's ARN is required and the required
       item and user input depends on the use case (domain-based recipe) back-
       ing  the  recommender.  For  information  on  use case requirements see
       Choosing recommender use cases .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-recommendations
          [--campaign-arn <value>]
          [--item-id <value>]
          [--user-id <value>]
          [--num-results <value>]
          [--context <value>]
          [--filter-arn <value>]
          [--filter-values <value>]
          [--recommender-arn <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --campaign-arn (string)
          The Amazon Resource Name (ARN) of the campaign to  use  for  getting
          recommendations.

       --item-id (string)
          The item ID to provide recommendations for.

          Required for RELATED_ITEMS recipe type.

       --user-id (string)
          The user ID to provide recommendations for.

          Required for USER_PERSONALIZATION recipe type.

       --num-results (integer)
          The  number  of results to return. The default is 25. The maximum is
          500.

       --context (map)
          The contextual metadata to use when getting recommendations. Contex-
          tual  metadata  includes  any  interaction information that might be
          relevant when getting a user's recommendations, such as  the  user's
          current location or device type.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --filter-arn (string)
          The  ARN of the filter to apply to the returned recommendations. For
          more information, see Filtering Recommendations .

          When using this parameter, be sure the filter resource is ACTIVE .

       --filter-values (map)
          The values to use when filtering recommendations.  For  each  place-
          holder  parameter  in  your filter expression, provide the parameter
          name (in matching case) as a key and the filter value(s) as the cor-
          responding  value. Separate multiple values for one parameter with a
          comma.

          For filter expressions that use an INCLUDE element to include items,
          you  must  provide values for all parameters that are defined in the
          expression. For filters with expressions that use an EXCLUDE element
          to exclude items, you can omit the filter-values .In this case, Ama-
          zon Personalize doesn't use that portion of the expression to filter
          recommendations.

          For more information, see Filtering Recommendations .

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --recommender-arn (string)
          The Amazon Resource Name (ARN) of the recommender to use to get rec-
          ommendations. Provide a recommender ARN  if  you  created  a  Domain
          dataset group with a recommender for a domain use case.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       itemList -> (list)
          A  list  of recommendations sorted in descending order by prediction
          score. There can be a maximum of 500 items in the list.

          (structure)
              An object that identifies an item.

              The and APIs return a list of PredictedItem s.

              itemId -> (string)
                 The recommended item ID.

              score -> (double)
                 A numeric representation of the model's  certainty  that  the
                 item will be the next user selection. For more information on
                 scoring logic, see  how-scores-work .

       recommendationId -> (string)
          The ID of the recommendation.



                                                         GET-RECOMMENDATIONS()
