SEARCH-ENTITIES()                                            SEARCH-ENTITIES()



NAME
       search-entities -

DESCRIPTION
       Searches  for  entities of the specified type. You can search for enti-
       ties in your namespace and the public namespace that you're tracking.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       search-entities is a paginated operation. Multiple  API  calls  may  be
       issued  in  order  to  retrieve the entire data set of results. You can
       disable pagination by providing the --no-paginate argument.  When using
       --output  text  and  the  --query argument on a paginated response, the
       --query argument must extract data from the results  of  the  following
       query expressions: descriptions

SYNOPSIS
            search-entities
          --entity-types <value>
          [--filters <value>]
          [--namespace-version <value>]
          [--cli-input-json | --cli-input-yaml]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --entity-types (list)
          The entity types for which to search.

          (string)

       Syntax:

          "string" "string" ...

          Where valid values are:
            DEVICE
            SERVICE
            DEVICE_MODEL
            CAPABILITY
            STATE
            ACTION
            EVENT
            PROPERTY
            MAPPING
            ENUM

       --filters (list)
          Optional  filter  to  apply  to  the  search. Valid filters are NAME
          NAMESPACE , SEMANTIC_TYPE_PATH  and  REFERENCED_ENTITY_ID  .  REFER-
          ENCED_ENTITY_ID  filters  on entities that are used by the entity in
          the result set. For example, you can filter on the ID of a  property
          that is used in a state.

          Multiple filters function as OR criteria in the query. Multiple val-
          ues passed inside the filter function as AND criteria.

          (structure)
              An object that filters an entity search. Multiple filters  func-
              tion  as  OR  criteria  in the search. For example a search that
              includes a NAMESPACE and a REFERENCED_ENTITY_ID filter  searches
              for  entities  in  the  specified  namespace that use the entity
              specified by the value of REFERENCED_ENTITY_ID .

              name -> (string)
                 The  name  of  the  entity  search   filter   field.   REFER-
                 ENCED_ENTITY_ID  filters  on  entities  that  are used by the
                 entity in the result set. For example, you can filter on  the
                 ID of a property that is used in a state.

              value -> (list)
                 An array of string values for the search filter field. Multi-
                 ple values function as AND criteria in the search.

                 (string)

       Shorthand Syntax:

          name=string,value=string,string ...

       JSON Syntax:

          [
            {
              "name": "NAME"|"NAMESPACE"|"SEMANTIC_TYPE_PATH"|"REFERENCED_ENTITY_ID",
              "value": ["string", ...]
            }
            ...
          ]

       --namespace-version (long)
          The version of the user's namespace. Defaults to the latest  version
          of the user's namespace.

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size  results  in  more  calls to the AWS service,
          retrieving fewer items in each call. This can help prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To search for entities

       The following search-entities example searches for all entities of type
       EVENT.

          aws iotthingsgraph search-entities \
              --entity-types "EVENT"

       Output:

          {
              "descriptions": [
                  {
                      "id": "urn:tdm:aws/examples:Event:MotionSensorEvent",
                      "type": "EVENT",
                      "definition": {
                          "language": "GRAPHQL",
                          "text": "##\n# Description of events emitted by motion sensor.\n##\ntype MotionSensorEvent @eventType(id: \"urn:tdm:aws/examples:event:MotionSensorEvent\",\n            payload: \"urn:tdm:aws/examples:property:MotionSensorStateProperty\") {ignore:void}"
                      }
                  },
                  {
                      "id": "urn:tdm:us-west-2/123456789012/default:Event:CameraClickedEventV2",
                      "type": "EVENT",
                      "definition": {
                          "language": "GRAPHQL",
                          "text": "type CameraClickedEventV2 @eventType(id: \"urn:tdm:us-west-2/123456789012/default:event:CameraClickedEventV2\",\r\npayload: \"urn:tdm:aws:Property:Boolean\"){ignore:void}"
                      }
                  },
                  {
                      "id": "urn:tdm:us-west-2/123456789012/default:Event:MotionSensorEventV2",
                      "type": "EVENT",
                      "definition": {
                          "language": "GRAPHQL",
                          "text": "# Event emitted by the motion sensor.\r\ntype MotionSensorEventV2 @eventType(id: \"urn:tdm:us-west-2/123456789012/default:event:MotionSensorEventV2\",\r\npayload: \"urn:tdm:us-west-2/123456789012/default:property:MotionSensorStateProperty2\") {ignore:void}"
                      }
                  }
              ],
              "nextToken": "urn:tdm:us-west-2/123456789012/default:Event:MotionSensorEventV2"
          }

       For  more information, see AWS IoT Things Graph Data Model Reference in
       the AWS IoT Things Graph User Guide.

OUTPUT
       descriptions -> (list)
          An array of descriptions for each  entity  returned  in  the  search
          result.

          (structure)
              Describes the properties of an entity.

              id -> (string)
                 The entity ID.

              arn -> (string)
                 The entity ARN.

              type -> (string)
                 The entity type.

              createdAt -> (timestamp)
                 The time at which the entity was created.

              definition -> (structure)
                 The definition document of the entity.

                 language -> (string)
                     The  language  used  to define the entity. GRAPHQL is the
                     only valid value.

                 text -> (string)
                     The GraphQL text that defines the entity.

       nextToken -> (string)
          The string to specify as nextToken when you request the next page of
          results.



                                                             SEARCH-ENTITIES()
