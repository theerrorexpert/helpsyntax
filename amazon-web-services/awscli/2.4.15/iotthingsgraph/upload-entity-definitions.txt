UPLOAD-ENTITY-DEFINITIONS()                        UPLOAD-ENTITY-DEFINITIONS()



NAME
       upload-entity-definitions -

DESCRIPTION
       Asynchronously  uploads  one  or  more entity definitions to the user's
       namespace. The document parameter is required  if  syncWithPublicNames-
       pace  and  deleteExistingEntites are false. If the syncWithPublicNames-
       pace parameter is set to true , the user's namespace  will  synchronize
       with  the  latest version of the public namespace. If deprecateExistin-
       gEntities is set to true, all entities in the latest  version  will  be
       deleted before the new DefinitionDocument is uploaded.

       When  a user uploads entity definitions for the first time, the service
       creates a new namespace for the user. The new namespace tracks the pub-
       lic  namespace. Currently users can have only one namespace. The names-
       pace version increments whenever a user uploads entity definitions that
       are backwards-incompatible and whenever a user sets the syncWithPublic-
       Namespace parameter or the deprecateExistingEntities parameter to  true
       .

       The  IDs  for  all of the entities should be in URN format. Each entity
       must be in the user's namespace. Users can't  create  entities  in  the
       public  namespace,  but entity definitions can refer to entities in the
       public namespace.

       Valid entities are Device , DeviceModel , Service , Capability ,  State
       , Action , Event , Property , Mapping , Enum .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            upload-entity-definitions
          [--document <value>]
          [--sync-with-public-namespace | --no-sync-with-public-namespace]
          [--deprecate-existing-entities | --no-deprecate-existing-entities]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --document (structure)
          The DefinitionDocument that defines the updated entities.

          language -> (string)
              The  language  used  to  define  the entity. GRAPHQL is the only
              valid value.

          text -> (string)
              The GraphQL text that defines the entity.

       Shorthand Syntax:

          language=string,text=string

       JSON Syntax:

          {
            "language": "GRAPHQL",
            "text": "string"
          }

       --sync-with-public-namespace     |      --no-sync-with-public-namespace
       (boolean)
          A Boolean that specifies whether to synchronize with the latest ver-
          sion of the public namespace. If set to true , the upload will  cre-
          ate a new namespace version.

       --deprecate-existing-entities     |    --no-deprecate-existing-entities
       (boolean)
          A Boolean that specifies whether to deprecate all  entities  in  the
          latest  version before uploading the new DefinitionDocument . If set
          to true , the upload will create a new namespace version.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To upload entity definitions

       The following upload-entity-definitions example uploads entity  defini-
       tions  to  your  namespace.  The  value  of  MyEntityDefinitions is the
       GraphQL that models the entities.

          aws iotthingsgraph upload-entity-definitions \
              --document language=GRAPHQL,text="MyEntityDefinitions"

       Output:

          {
              "uploadId": "f6294f1e-b109-4bbe-9073-f451a2dda2da"
          }

       For more information, see Modeling Entities in the AWS IoT Things Graph
       User Guide.

OUTPUT
       uploadId -> (string)
          The  ID  that specifies the upload action. You can use this to track
          the status of the upload.



                                                   UPLOAD-ENTITY-DEFINITIONS()
