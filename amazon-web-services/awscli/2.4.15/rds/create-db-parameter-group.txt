CREATE-DB-PARAMETER-GROUP()                        CREATE-DB-PARAMETER-GROUP()



NAME
       create-db-parameter-group -

DESCRIPTION
       Creates a new DB parameter group.

       A  DB  parameter group is initially created with the default parameters
       for the database engine used by the DB instance. To provide custom val-
       ues for any of the parameters, you must modify the group after creating
       it using ModifyDBParameterGroup . Once you've created  a  DB  parameter
       group, you need to associate it with your DB instance using ModifyDBIn-
       stance . When you associate a new DB parameter group with a running  DB
       instance,  you  need to reboot the DB instance without failover for the
       new DB parameter group and associated settings to take effect.

       This command doesn't apply to RDS Custom.

       WARNING:
          After you create a DB parameter group, you should wait  at  least  5
          minutes  before  creating  your  first DB instance that uses that DB
          parameter group as the default parameter group. This  allows  Amazon
          RDS  to  fully complete the create action before the parameter group
          is used as the default for a new DB  instance.  This  is  especially
          important for parameters that are critical when creating the default
          database for a DB instance,  such  as  the  character  set  for  the
          default  database  defined  by the character_set_database parameter.
          You can use the Parameter Groups option of the Amazon RDS console or
          the  DescribeDBParameters  command  to verify that your DB parameter
          group has been created or modified.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-db-parameter-group
          --db-parameter-group-name <value>
          --db-parameter-group-family <value>
          --description <value>
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --db-parameter-group-name (string)
          The name of the DB parameter group.

          Constraints:

          o Must be 1 to 255 letters, numbers, or hyphens.

          o First character must be a letter

          o Can't end with a hyphen or contain two consecutive hyphens

          NOTE:
              This value is stored as a lowercase string.

       --db-parameter-group-family (string)
          The DB parameter group family name. A  DB  parameter  group  can  be
          associated  with one and only one DB parameter group family, and can
          be applied only to a DB  instance  running  a  database  engine  and
          engine version compatible with that DB parameter group family.

          To  list  all  of  the  available  parameter group families for a DB
          engine, use the following command:
              aws  rds   describe-db-engine-versions   --query   "DBEngineVer-
              sions[].DBParameterGroupFamily" --engine <engine>

          For  example,  to list all of the available parameter group families
          for the MySQL DB engine, use the following command:
              aws  rds   describe-db-engine-versions   --query   "DBEngineVer-
              sions[].DBParameterGroupFamily" --engine mysql

          NOTE:
              The output contains duplicates.

          The following are the valid DB engine values:

          o aurora (for MySQL 5.6-compatible Aurora)

          o aurora-mysql  (for  MySQL  5.7-compatible and MySQL 8.0-compatible
            Aurora)

          o aurora-postgresql

          o mariadb

          o mysql

          o oracle-ee

          o oracle-ee-cdb

          o oracle-se2

          o oracle-se2-cdb

          o postgres

          o sqlserver-ee

          o sqlserver-se

          o sqlserver-ex

          o sqlserver-web

       --description (string)
          The description for the DB parameter group.

       --tags (list)
          Tags to assign to the DB parameter group.

          (structure)
              Metadata assigned to an Amazon  RDS  resource  consisting  of  a
              key-value pair.

              Key -> (string)
                 A  key  is the required name of the tag. The string value can
                 be from 1 to 128 Unicode characters in length  and  can't  be
                 prefixed with aws: or rds: . The string can only contain only
                 the set of Unicode letters, digits,  white-space,  '_',  '.',
                 ':',    '/',    '=',    '+',    '-',    '@'    (Java   regex:
                 "^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$").

              Value -> (string)
                 A value is the optional value of the tag.  The  string  value
                 can  be  from 1 to 256 Unicode characters in length and can't
                 be prefixed with aws: or rds: . The string can  only  contain
                 only  the  set  of Unicode letters, digits, white-space, '_',
                 '.',  ':',   '/',   '=',   '+',   '-',   '@'   (Java   regex:
                 "^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$").

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a DB parameter group

       The  following create-db-parameter-group example creates a DB parameter
       group.

          aws rds create-db-parameter-group \
              --db-parameter-group-name mydbparametergroup \
              --db-parameter-group-family MySQL5.6 \
              --description "My new parameter group"

       Output:

          {
              "DBParameterGroup": {
                  "DBParameterGroupName": "mydbparametergroup",
                  "DBParameterGroupFamily": "mysql5.6",
                  "Description": "My new parameter group",
                  "DBParameterGroupArn": "arn:aws:rds:us-east-1:123456789012:pg:mydbparametergroup"
              }
          }

       For more information, see Creating a DB Parameter Group in  the  Amazon
       RDS User Guide.

OUTPUT
       DBParameterGroup -> (structure)
          Contains the details of an Amazon RDS DB parameter group.

          This data type is used as a response element in the DescribeDBParam-
          eterGroups action.

          DBParameterGroupName -> (string)
              The name of the DB parameter group.

          DBParameterGroupFamily -> (string)
              The name of the DB parameter group family that this DB parameter
              group is compatible with.

          Description -> (string)
              Provides  the customer-specified description for this DB parame-
              ter group.

          DBParameterGroupArn -> (string)
              The Amazon Resource Name (ARN) for the DB parameter group.



                                                   CREATE-DB-PARAMETER-GROUP()
