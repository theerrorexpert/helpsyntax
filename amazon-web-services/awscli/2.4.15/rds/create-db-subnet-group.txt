CREATE-DB-SUBNET-GROUP()                              CREATE-DB-SUBNET-GROUP()



NAME
       create-db-subnet-group -

DESCRIPTION
       Creates  a  new DB subnet group. DB subnet groups must contain at least
       one subnet in at least two AZs in the Amazon Web Services Region.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-db-subnet-group
          --db-subnet-group-name <value>
          --db-subnet-group-description <value>
          --subnet-ids <value>
          [--tags <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --db-subnet-group-name (string)
          The name for the DB subnet group. This value is stored as  a  lower-
          case string.

          Constraints:  Must  contain no more than 255 letters, numbers, peri-
          ods, underscores, spaces, or hyphens. Must not be default.

          Example: mySubnetgroup

       --db-subnet-group-description (string)
          The description for the DB subnet group.

       --subnet-ids (list)
          The EC2 Subnet IDs for the DB subnet group.

          (string)

       Syntax:

          "string" "string" ...

       --tags (list)
          Tags to assign to the DB subnet group.

          (structure)
              Metadata assigned to an Amazon  RDS  resource  consisting  of  a
              key-value pair.

              Key -> (string)
                 A  key  is the required name of the tag. The string value can
                 be from 1 to 128 Unicode characters in length  and  can't  be
                 prefixed with aws: or rds: . The string can only contain only
                 the set of Unicode letters, digits,  white-space,  '_',  '.',
                 ':',    '/',    '=',    '+',    '-',    '@'    (Java   regex:
                 "^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$").

              Value -> (string)
                 A value is the optional value of the tag.  The  string  value
                 can  be  from 1 to 256 Unicode characters in length and can't
                 be prefixed with aws: or rds: . The string can  only  contain
                 only  the  set  of Unicode letters, digits, white-space, '_',
                 '.',  ':',   '/',   '=',   '+',   '-',   '@'   (Java   regex:
                 "^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$").

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json  |  --cli-input-yaml (string) Reads arguments from the
       JSON string provided. The JSON string follows the  format  provided  by
       --generate-cli-skeleton. If other arguments are provided on the command
       line, those values will override the JSON-provided values.  It  is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally. This may  not  be  specified  along
       with --cli-input-yaml.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample  input  YAML that can be used with --cli-input-yaml. If provided
       with the value output, it validates the command inputs  and  returns  a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a DB subnet group

       The  following create-db-subnet-group example creates a DB subnet group
       called mysubnetgroup using existing subnets.

          aws rds create-db-subnet-group \
              --db-subnet-group-name mysubnetgroup \
              --db-subnet-group-description "test DB subnet group" \
              --subnet-ids '["subnet-0a1dc4e1a6f123456","subnet-070dd7ecb3aaaaaaa","subnet-00f5b198bc0abcdef"]'

       Output:

          {
              "DBSubnetGroup": {
                  "DBSubnetGroupName": "mysubnetgroup",
                  "DBSubnetGroupDescription": "test DB subnet group",
                  "VpcId": "vpc-0f08e7610a1b2c3d4",
                  "SubnetGroupStatus": "Complete",
                  "Subnets": [
                      {
                          "SubnetIdentifier": "subnet-070dd7ecb3aaaaaaa",
                          "SubnetAvailabilityZone": {
                              "Name": "us-west-2b"
                          },
                          "SubnetStatus": "Active"
                      },
                      {
                          "SubnetIdentifier": "subnet-00f5b198bc0abcdef",
                          "SubnetAvailabilityZone": {
                              "Name": "us-west-2d"
                          },
                          "SubnetStatus": "Active"
                      },
                      {
                          "SubnetIdentifier": "subnet-0a1dc4e1a6f123456",
                          "SubnetAvailabilityZone": {
                              "Name": "us-west-2b"
                          },
                          "SubnetStatus": "Active"
                      }
                  ],
                  "DBSubnetGroupArn": "arn:aws:rds:us-west-2:0123456789012:subgrp:mysubnetgroup"
              }
          }

       For more information, see Creating a DB Instance in a VPC in the Amazon
       RDS User Guide.

OUTPUT
       DBSubnetGroup -> (structure)
          Contains the details of an Amazon RDS DB subnet group.

          This  data  type is used as a response element in the DescribeDBSub-
          netGroups action.

          DBSubnetGroupName -> (string)
              The name of the DB subnet group.

          DBSubnetGroupDescription -> (string)
              Provides the description of the DB subnet group.

          VpcId -> (string)
              Provides the VpcId of the DB subnet group.

          SubnetGroupStatus -> (string)
              Provides the status of the DB subnet group.

          Subnets -> (list)
              Contains a list of Subnet elements.

              (structure)
                 This data  type  is  used  as  a  response  element  for  the
                 DescribeDBSubnetGroups operation.

                 SubnetIdentifier -> (string)
                     The identifier of the subnet.

                 SubnetAvailabilityZone -> (structure)
                     Contains Availability Zone information.

                     This  data  type is used as an element in the OrderableD-
                     BInstanceOption data type.

                     Name -> (string)
                        The name of the Availability Zone.

                 SubnetOutpost -> (structure)
                     If the subnet is associated with an Outpost,  this  value
                     specifies the Outpost.

                     For  more  information  about RDS on Outposts, see Amazon
                     RDS on Amazon Web Services Outposts  in  the  Amazon  RDS
                     User Guide.

                     Arn -> (string)
                        The Amazon Resource Name (ARN) of the Outpost.

                 SubnetStatus -> (string)
                     The status of the subnet.

          DBSubnetGroupArn -> (string)
              The Amazon Resource Name (ARN) for the DB subnet group.



                                                      CREATE-DB-SUBNET-GROUP()
