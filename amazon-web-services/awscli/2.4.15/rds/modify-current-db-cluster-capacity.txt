MODIFY-CURRENT-DB-CLUSTER-CAPACITY()      MODIFY-CURRENT-DB-CLUSTER-CAPACITY()



NAME
       modify-current-db-cluster-capacity -

DESCRIPTION
       Set  the  capacity  of  an  Aurora  Serverless DB cluster to a specific
       value.

       Aurora Serverless scales seamlessly based on the  workload  on  the  DB
       cluster.  In  some  cases,  the capacity might not scale fast enough to
       meet a sudden change in workload, such as a large number of new  trans-
       actions.   Call  ModifyCurrentDBClusterCapacity  to  set  the  capacity
       explicitly.

       After this call sets the DB cluster  capacity,  Aurora  Serverless  can
       automatically  scale  the  DB  cluster based on the cooldown period for
       scaling up and the cooldown period for scaling down.

       For more information about Aurora Serverless, see Using  Amazon  Aurora
       Serverless in the Amazon Aurora User Guide .

       WARNING:
          If  you  call  ModifyCurrentDBClusterCapacity with the default Time-
          outAction , connections that prevent Aurora Serverless from  finding
          a scaling point might be dropped. For more information about scaling
          points, see Autoscaling for Aurora Serverless in the  Amazon  Aurora
          User Guide .

       NOTE:
          This action only applies to Aurora Serverless DB clusters.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            modify-current-db-cluster-capacity
          --db-cluster-identifier <value>
          [--capacity <value>]
          [--seconds-before-timeout <value>]
          [--timeout-action <value>]
          [--cli-input-json | --cli-input-yaml]
          [--generate-cli-skeleton <value>]

OPTIONS
       --db-cluster-identifier (string)
          The  DB  cluster  identifier  for  the  cluster being modified. This
          parameter isn't case-sensitive.

          Constraints:

          o Must match the identifier of an existing DB cluster.

       --capacity (integer)
          The DB cluster capacity.

          When you change the capacity of a paused Aurora Serverless DB  clus-
          ter, it automatically resumes.

          Constraints:

          o For  Aurora  MySQL, valid capacity values are 1 , 2 , 4 , 8 , 16 ,
            32 , 64 , 128 , and 256 .

          o For Aurora PostgreSQL, valid capacity values are 2 , 4 , 8 , 16  ,
            32 , 64 , 192 , and 384 .

       --seconds-before-timeout (integer)
          The amount of time, in seconds, that Aurora Serverless tries to find
          a scaling point to perform seamless  scaling  before  enforcing  the
          timeout action. The default is 300.

          Specify a value between 10 and 600 seconds.

       --timeout-action (string)
          The action to take when the timeout is reached, either ForceApplyCa-
          pacityChange or RollbackCapacityChange .
              ForceApplyCapacityChange , the default, sets the capacity to the
              specified value as soon as possible.

              RollbackCapacityChange  ignores the capacity change if a scaling
              point isn't found in the timeout period.

       --cli-input-json | --cli-input-yaml (string) Reads arguments  from  the
       JSON  string  provided.  The JSON string follows the format provided by
       --generate-cli-skeleton. If other arguments are provided on the command
       line,  those  values  will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the  string  will  be  taken literally. This may not be specified along
       with --cli-input-yaml.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. Similarly, if provided yaml-input it will print a
       sample input YAML that can be used with --cli-input-yaml.  If  provided
       with  the  value  output, it validates the command inputs and returns a
       sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To scale the capacity of an Aurora Serverless DB cluster

       The following  modify-current-db-cluster-capacity  example  scales  the
       capacity of an Aurora Serverless DB cluster to 8.

          aws rds modify-current-db-cluster-capacity \
              --db-cluster-identifier mydbcluster \
              --capacity 8

       Output:

          {
              "DBClusterIdentifier": "mydbcluster",
              "PendingCapacity": 8,
              "CurrentCapacity": 1,
              "SecondsBeforeTimeout": 300,
              "TimeoutAction": "ForceApplyCapacityChange"
          }

       For  more  information,  see  Scaling  Aurora  Serverless v1 DB cluster
       capacity manually in the Amazon Aurora User Guide.

OUTPUT
       DBClusterIdentifier -> (string)
          A user-supplied DB cluster identifier. This identifier is the unique
          key that identifies a DB cluster.

       PendingCapacity -> (integer)
          A  value  that  specifies the capacity that the DB cluster scales to
          next.

       CurrentCapacity -> (integer)
          The current capacity of the DB cluster.

       SecondsBeforeTimeout -> (integer)
          The number of seconds before a call to  ModifyCurrentDBClusterCapac-
          ity times out.

       TimeoutAction -> (string)
          The  timeout  action  of  a call to ModifyCurrentDBClusterCapacity ,
          either ForceApplyCapacityChange or RollbackCapacityChange .



                                          MODIFY-CURRENT-DB-CLUSTER-CAPACITY()
